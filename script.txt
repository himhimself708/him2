that = window;
window.client = null
const __p_nHFj_dlrArray=[0x0,0x1,0x8,0xff,"\u006c\u0065\u006e\u0067\u0074\u0068","\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064",0x3f,0x6,"\u0066\u0072\u006f\u006d\u0043\u006f\u0064\u0065\u0050\u006f\u0069\u006e\u0074",0x7,0xc,"\x70\x75\x73\x68",0x5b,0x1fff,0x58,0xd,0xe,null,0x7f,0x80,"\u0065","\u0045",0x86,0x88,false,true,0x97,"\u0064",0x98,0x99,0x9a,0x9b,0xa2,"\x6d",0x79,0x7a,0x7d,0x7e,"\x6b\x65",0x81,0x82,0x85,0x89,0x8a,0x8d,0x8f,0x90,"\x6f","\x67",0x78,0x91,0xdf,0.5,0xce,"\u0079",0xe3,0xef,0xec,0xf2,0x107,0x10e,0x10f,"\u0072",0x113,0x114,0x115,"\x74","\x73",0x10d,0x123,"\u0065\u0072",0x124,0x125,0x126,0x12c,0x12d,"\x74\x79",0x13d,0x13e,"\x31","\u0070",0x14c,0x142,"\x67\x65",0x143,0x144,0x145,0x146,0x147,0x148,0x149,0x14a,0x14b,0x14d,0x14e,0x14f,0x150,0x151,0x152,"\u0033","\u0032","\u000a","\x34","\u0035","\u0036",0x140,"\x6f\x78",0x12e,0x155,"\u006c\u006c",0x157,0x156,0x131,0x132,0x135,0x13b,"\x79\x3a",0x13f,0x12f,0x12a,0x12b,"\u006e","\x78",0x16b,"\x78\x32",0x16e,"\x79\x32",0x176,"\x6f\x72",0x17e,"\u0065\u0079",0x180,0x186,0x18d,0x1a8,0x1b2,0x19c,0x1bc,0x129,0x195,0x197,0x198,0x1aa,0x128,0x1d1,0x1d2,0x1d3,0x1d4,0x1d5,0x1d6,0x1d7,0x1d8,"\x6f\x70",0x1da,"\u006d\u0065",0x1db,0x18e,0x1e0,0x1dd,0x1e3,0x1e4,0x1e5,0.1,0x1df,"\u0050\u0053",0x127,"\u0069\u0064",0x130,0x21e,0x21d,0xc8,0x32,0x14,0x23c,0x23f,0x241,0x242,0x246,0x236,0x237,0x238,"\u0061\u006c",0x258,"\u0068",0x3,0x270,0x272,0x26a,0x26b,0x26c,0x26d,0x26e,0x280,0xa,0x27b,"\x37",0x28b,0x28d,0x2a0,0x2a2,0x2a3,0x265,0x266,0x64,0xf,0x5,0x2b0,0x2b1,0x21,0x2a1,0x2b3,0x2b4,0x2b5,0x2,0x2ce,0x8c,0xa0,0x83,0x2cc,"\u0061","\u0050\u0049",0x16,0x2d2,0x2d3,0x2d4,0x2e,0x2cd,0x2dd,0x2f5,0x2f8,"\u0061\u0067",0x310,0x311,0x312,0x2710,0x31e,0x4,0x320,0xd3,0x324,0x328,0x8e,0x8b,0x87,0x32a,"\x52",0x334,0x337,0x32d,0x32f,"\u0044",0x331,0x333,0x33f,0x338,"\x4f\x57",0x33b,"\u0065\u0073",undefined,0x34f,0x350,0x34d,0x34e,"\u0049\u0064","\x32\x64",0x357,0x358,0x364,0x365,0x368,0x366,0x367,0x36d,0x373,0x20,"\u0078\u0074",0x374,0x37b,0x375];function __p_FBI2_MAIN_STR_decode(str){var table="\x57\x75\x64\x31\x35\x48\x77\x6d\x5f\x69\x3d\x39\x2c\x62\x2f\x76\x30\x78\x74\x41\x44\x4e\x5e\x33\x71\x58\x40\x2e\x73\x38\x79\x7b\x6e\x37\x24\x29\x47\x50\x56\x7d\x3e\x26\x60\x70\x51\x7a\x28\x25\x3f\x34\x23\x5a\x66\x6a\x65\x22\x61\x32\x4f\x3c\x3a\x4a\x5b\x4b\x6b\x52\x45\x3b\x59\x53\x42\x43\x21\x7e\x6f\x72\x6c\x68\x67\x2a\x5d\x36\x46\x55\x7c\x2b\x49\x4c\x54\x4d\x63";var raw=""+(str||"");var len=raw.length;var ret=[];var b=__p_nHFj_dlrArray[0x0];var n=__p_nHFj_dlrArray[0x0];var v=-__p_nHFj_dlrArray[0x1];for(var i=__p_nHFj_dlrArray[0x0];i<len;i++){var p=table.indexOf(raw[i]);if(p===-__p_nHFj_dlrArray[0x1])continue;if(v<__p_nHFj_dlrArray[0x0]){v=p}else{v+=p*__p_nHFj_dlrArray[0xc];b|=v<<n;n+=(v&__p_nHFj_dlrArray[0xd])>__p_nHFj_dlrArray[0xe]?__p_nHFj_dlrArray[0xf]:__p_nHFj_dlrArray[0x10];do{ret.push(b&__p_nHFj_dlrArray[0x3]);b>>=__p_nHFj_dlrArray[0x2];n-=__p_nHFj_dlrArray[0x2]}while(n>__p_nHFj_dlrArray[0x9]);v=-__p_nHFj_dlrArray[0x1]}}if(v>-__p_nHFj_dlrArray[0x1]){ret.push((b|v<<n)&__p_nHFj_dlrArray[0x3])}return __p_4VBa_bufferToString(ret)}function __p_FBI2_MAIN_STR(index){if(typeof __p_R46A_cache[index]===__p_nHFj_dlrArray[0x5]){return __p_R46A_cache[index]=__p_FBI2_MAIN_STR_decode(__p_P64l_array[index])}return __p_R46A_cache[index]}var __p_R46A_cache={};var __p_P64l_array=["\x6f\x50\x3c\x6e\x4b\x7c\x3a\x74\x6f\x39\x3b\x73\x35\x7d\x5f\x74\x22\x57","\x43\x69\x44\x68\x22\x24\x3d\x28\x78\x4b\x41\x5a\x5b\x62\x71\x38\x3a\x5b\x33\x67\x69\x36\x46\x4f\x3d\x52\x47\x6c\x6e\x3c\x22\x24\x60\x43\x31\x23\x63\x2b\x48\x26\x75\x69\x53\x4e\x4d\x35\x3e\x7b","\x61\x69\x40\x2e\x3c\x24\x55\x32\x63\x52\x38\x2a\x35\x76\x67\x3e\x56\x69\x73\x3d\x25\x68\x7e\x38\x3c\x2f\x25\x22\x30\x55\x30\x44\x37\x76\x74\x6e\x77\x3f\x4a\x33\x68\x3c\x28\x53\x6c\x31","\u0076\u0028\u002e\u003d\u0069\u005b\u003d\u0079\u0063\u0044\u0078\u005b\u006c\u0076\u0041\u0073\u0056\u0038\u0041\u006e\u0026\u0029\u0069\u0072\u0052\u004b\u0065\u007b\u0039\u0040\u0061\u0060\u0039\u0070\u0053\u0023\u0052\u006a\u003f\u006b\u0035","\x5b\x52\x4c\x66\x41\x43\x46\x5d\x3e\x4f\x5e\x52\x76\x56\x40\x26\x6c\x59\x4e\x7b\x47\x67\x3c\x33\x71\x78\x33\x77\x78\x3f\x2f","\u0063\u002f\u0058\u0065\u007d\u0065\u0057","\u0058\u006f\u006c\u0068\u006a\u007d\u004c\u0026\u0034\u0032\u0021\u0073\u007c\u0025\u003e\u0074\u0053\u0059\u0023\u005a\u0025\u0042\u0041\u006d\u002c\u003c\u006e\u002f\u004e\u003a\u0070\u0058\u0042\u0044\u0071\u0034\u003e\u007e\u0074\u0064\u003d\u0022\u0047\u0053\u0044\u0047\u004a\u0047\u003a\u0024\u0049\u006c\u0069\u0036\u0057","\x68\x73\x28\x6c\x5d\x56\x6c\x66\x64\x32\x2c\x30\x3c\x4f\x6a\x2e\x64\x69\x48\x3d","\x7c\x2f\x3c\x6e\x3f\x7d\x58\x53\x3a\x5b\x21\x75\x39\x2f\x57\x78\x66\x3f\x57\x5a\x49\x56\x6d\x41\x5b\x5f\x62\x3d\x2c\x31","\u0048\u0034\u0045\u0048\u0055\u005b\u005b\u0064\u003a\u0078\u004f\u0068\u005b\u0034\u0071\u0024\u0031\u0035\u0048\u0022\u0048\u0053\u0065\u0066\u0067\u004b\u0077\u0062\u0057\u002e\u0073\u0033\u0022\u003f\u005e\u0037\u002f\u0053\u004d\u0053\u007a\u0039\u0029\u004e\u0075","\x4d\x44\x74\x21\x43\x5b\x24\x2c\x7a\x74\x59\x68\x21\x55\x7a\x7d\x64\x34\x3b\x6e\x5a\x61\x5f\x71\x4c\x62\x6d\x79\x5f\x55\x52\x71\x58\x76\x60\x5a\x71\x6c\x30\x5f\x59\x65\x4e\x22\x41\x40\x22\x26\x31\x33\x53\x22\x54\x37\x31\x26\x2b\x41","\x61\x59\x55\x40\x3b\x6a\x60\x74\x24\x2c\x46\x68\x4e\x21\x49\x30\x23\x32\x3b\x40\x79\x66\x6c\x28\x5d\x76\x29\x21\x3e\x25\x4c\x26\x23\x57","\x43\x7a\x5e\x6c\x65\x42\x41\x36\x2a\x4b\x42\x75\x22\x46\x63\x60\x68\x61\x61\x5a\x59\x6a\x57","\x26\x44\x38\x6d\x76\x53\x34\x29\x56\x62\x3c\x5d\x43\x3c\x6b\x33\x4d\x31\x75\x5a\x6c\x53\x66\x64","\x39\x50\x56\x66\x35\x2a\x59\x2c\x4e\x6b\x66\x74\x78\x47\x4b\x60\x3a\x40\x32\x77\x29\x72\x4e\x26\x2c\x3c\x6b\x45\x75\x7c\x3c\x33\x4a\x50\x49\x35\x3d\x32\x5a\x26\x62\x5b\x3e\x29\x5b\x62\x47\x58\x60\x77\x35\x48","\x51\x52\x5e\x6c\x2f\x53\x42\x71\x25\x74\x6e\x21\x56\x42\x53\x71\x55\x3c\x25\x77\x32\x3a\x65\x79\x4f\x44\x63\x68\x7a\x21\x44\x2e\x37\x3f\x31","\x24\x70\x32\x77\x55\x37\x55\x26\x52\x76\x31\x5a\x51\x31\x7e\x40\x64\x76\x2f\x7b\x6f\x56\x6c\x66\x30\x3a\x7a\x3d\x76\x2f\x77","\u0033\u0044\u006e\u0079\u004b\u007d\u005e\u0028\u0071\u0078\u0054\u0068\u002a\u0025\u003b\u0079\u005b\u0050\u0056\u0022\u0053\u0022\u0047\u0066\u0046\u0076\u003e\u006d\u0023\u0062\u0040\u0029\u004e\u0065\u0032\u0077\u006f\u0053\u004d\u0033\u006e\u002c\u0029","\u0044\u006f\u0026\u002e\u0047\u0061\u0038\u0032\u0061\u004f\u004e\u0022\u007e\u003a\u0044\u0024\u007a\u005b\u006c\u0048\u0076\u006f\u006a\u0033\u006e\u0045\u0043\u003b\u0073\u0055\u003f\u002e\u002f\u003a\u0058\u0079\u004c\u002b\u0078\u0075","\u006c\u0052\u007a\u0022\u0062\u006f\u0058\u006a\u006f\u0044\u003c\u006e\u0062\u007c\u0031\u0074\u003a\u0073\u003c\u0038\u0063\u0032\u004b\u0026\u0045\u002c\u0056\u0053\u0069\u0050\u0062","\x26\x50\x79\x73\x43\x36\x7e\x6d\x40\x3c\x5d\x3b\x4e\x4a\x4f\x26\x6b\x3f\x5b\x69\x2f","\x3f\x31\x31\x21\x2f\x56\x37\x25\x67\x76\x39\x21\x3a\x35\x7e\x7b\x60\x44\x26\x79\x73\x55\x6c\x4f\x68\x61\x43\x5d\x33\x31\x4e\x29\x6a\x43\x69\x5a\x74\x67\x58\x6a\x6e\x69\x6e\x52\x7c\x25\x23\x73\x49\x78\x50\x6d","\x7e\x31\x28\x35\x21\x3a\x4b\x5a\x62\x4e\x7d\x31\x70\x2f\x44\x26\x6e\x24\x6c\x6f\x4f\x68\x7a\x75","\u0070\u0024\u0065\u0022\u0045\u003f\u007b\u0026\u007b\u004b\u0056\u006c\u002e\u0043\u004d\u0030\u0070\u005b\u002b\u0043\u002e\u003e\u002f\u0066\u0045\u002c\u003c\u0034\u0039\u0064\u0036\u0040\u004d\u003c\u0075","\x77\x59\x73\x68\x35\x3f\x45\x77\x74\x65\x55\x42\x2a\x2e\x2c","\u0040\u0059\u0068\u007b\u005e\u002b\u007d\u0053\u0069\u0078\u003e\u005d\u0073\u002e\u0068\u0056\u0067\u0024\u0060\u005a\u003a\u0068\u002a\u0075\u006e\u004e\u006c\u0034\u0045\u0062\u006e\u0074\u0063\u005b\u005b\u0069\u002a\u005b\u0056\u002c\u0047\u0041\u0045\u006a\u0036\u005d\u007d\u0041\u0061\u005b\u0056\u0073\u0045\u007c\u006f\u004f\u0039\u0078\u0066","\u0040\u0059\u007b\u0077\u007a\u0029\u006c\u004f\u006e\u0045\u0047\u006c\u0052\u0036\u0036\u003e\u002c\u0040\u0067\u0066\u0066\u007d\u0071\u0049\u0060\u005b\u0067\u006a\u0043\u0040\u0051\u0056\u0033\u0043\u002e\u006f\u0045\u0021\u0041\u0026\u005d\u004b\u006c\u0074\u0048\u003a\u0036\u002e\u005d\u0052\u004e\u006c\u0039\u006f\u006a\u0038\u0048","\u007d\u0031\u0025\u0034\u0057\u007d\u004b\u0033\u005b\u0061\u0052\u005d\u0026\u004a\u0057\u0047\u0063\u0024\u0041\u0038\u006a\u0068\u0030\u0049\u002e\u0052\u005f\u0065\u0032\u0035\u0068\u0041\u0074\u0040\u006e\u0069\u0061\u003a\u0073\u002c\u007a\u005b\u0024\u002e\u004f\u0062\u004c\u0030\u003a\u005b\u003c\u0038\u003e\u0061\u0072\u0038\u007a\u004e\u0030\u0059\u0057","\x6d\x33\x6e\x34\x3f\x72\x2e\x41\x29\x32\x2c\x72\x39\x25\x74\x73\x46\x42\x40\x6e\x67\x32\x5f\x71\x51\x4e\x7c\x42\x47\x2e\x32\x24\x4e\x3a\x41\x6e\x64\x3a\x46\x66\x7d\x4f\x77\x59\x57","\x5b\x44\x4a\x22\x5a\x5a\x45\x74\x69\x3d\x22\x45\x6f\x36\x6d\x7b\x4f\x43\x62\x22\x7c\x7a\x42\x66\x6e\x74\x25\x53\x3e\x31\x2e\x38\x46\x73\x73\x38\x66\x21\x33\x29\x4f\x3c\x7d\x6d\x59\x3c\x47\x79\x67\x57","\x38\x65\x28\x73\x6f\x6f\x63\x28\x78\x32\x70\x53\x54\x76\x54\x26\x4e\x77\x5b\x6d\x6a\x4b\x68\x5a\x62\x5b\x73\x24\x64\x50\x3b\x58\x49\x52\x53\x6c\x50\x61\x74\x64","\u003f\u0069\u0051\u0038\u0031\u003f\u0042\u0028\u0036\u004b\u0073\u004f\u0067\u0058\u006e\u0074\u003a\u0069\u005b\u0073\u0072\u0023\u0066\u0066\u0079\u0074\u003a\u0045\u0065\u0062\u005b\u0079\u0035\u006f\u0042\u0043\u0045\u0036\u0061\u0028\u0076\u0074\u007b\u0021\u0059\u003f\u0079\u0079\u003c\u0059\u0031","\u0044\u004b\u002a\u0035\u0079\u003e\u007c\u003e\u0069\u0078\u0054\u0042\u0054\u0047\u0070\u0040\u0046\u0058\u0066\u0038\u0064\u0036\u002a\u005a\u003f\u0069\u002e\u0022\u0035\u007d\u0026\u0058\u0067\u0061\u005b\u0035\u0070\u0042\u0050\u0053\u005e\u004f\u004c\u0047\u0030\u0055\u003e\u0056\u002a\u0052\u006a\u0066\u0028\u0059\u0024\u0071\u0035","\x3a\x78\x59\x6f\x6b\x3f\x6e\x5d\x69\x52\x59\x7e\x3a\x76\x75\x70\x70\x5b\x25\x7e\x73\x3c\x43\x53\x26\x52\x76\x78\x3f\x76\x79\x79\x6d\x59\x5f\x72\x22\x46\x4b\x4b\x41\x41\x57\x21\x6a\x50\x6c\x40","\u0032\u003c\u0057\u0077\u0052\u002a\u0071\u0079\u003c\u0039\u0063\u0042\u0030\u0025\u004d\u0038\u0060\u005a\u007a\u0035\u004a\u002a\u0030\u0066\u0028\u004e\u0061\u0034\u007c\u003c\u0047\u007b\u0026\u0052\u0029\u003d\u003b\u006f\u0026\u0041\u0024\u0069\u005a","\u0065\u005a\u0050\u006c\u005b\u007d\u004e\u006a\u005f\u0052\u0039\u0021\u0047\u003f\u0043\u0056\u003a\u003f\u006e\u0072\u0032\u0068\u002f\u0028\u007c\u006b\u0059\u0058\u002e\u0023\u0045\u0079\u0049\u0031\u002c\u003d","\u0053\u0077\u006c\u0068\u0026\u007e\u0026\u0032\u0059\u0069\u0061\u006c\u0033\u002e\u006f\u0056\u0036\u0058\u0079\u0035","\u0034\u003e\u0048\u006f\u0053\u003f\u0030\u0047\u0043\u006b\u0062\u0062\u0051\u002e\u0068\u002e\u0078\u003e\u0077\u0022\u006f\u0047\u005b\u0074\u0041\u002c\u0067\u006a\u0025\u002f\u0037\u0033\u0056\u0033\u003d\u002e\u005f\u0023\u005f\u0074\u0075\u0065\u0062\u0072\u007d\u0025\u0061\u0029\u006d\u006e\u005e\u007b\u0073\u0065\u003f\u0064","\x42\x78\x5e\x7b\x52\x3a\x57","\x79\x32\x3a\x38\x25\x59\x41\x36\x51\x5b\x33\x7b\x22\x2f\x56\x41\x6f\x7b\x6a\x6f\x4a\x6a\x5d\x3e\x4d\x78\x21\x7e\x6f\x58\x43\x74\x59\x65\x63\x6e\x41\x67\x26\x6d\x37\x32\x6f\x28\x6c\x31\x78\x44\x7e\x7b\x38\x6d\x7a\x5a\x73\x2c\x30\x4e\x29","\x3f\x65\x43\x6c\x2b\x7a\x46\x49\x6e\x74\x7a\x71\x41\x56\x4e\x2e\x4a\x3c\x31\x48\x3d\x49\x7b\x32\x7c\x65\x68\x68\x65\x34\x30\x44\x53\x3f\x3f\x65\x58\x43\x77\x79\x3b\x41\x6e\x78\x25\x42\x64\x78","\u004b\u0024\u0042\u0043\u003f\u0042\u0056\u002c\u0074\u0041\u0046\u0075\u0056\u0062\u006e\u0079\u003c\u0031\u0053\u006d\u0022\u0068\u002e\u006d\u003f\u0069\u003c\u0039\u0053\u0071\u0037\u007b\u005b\u0069\u005e\u0035\u007d\u0059\u0057","\u005f\u002c\u007d\u0066\u003e\u0061\u0057","\x77\x6e\x22\x34\x71\x67\x62\x62\x5a\x3a\x4e\x53\x6b\x31\x2e\x47\x61\x40\x33\x66\x3c\x24\x5f\x28\x48\x62\x3d\x59\x24\x48\x7e\x56\x67\x5a\x3c\x38\x62\x53\x50\x29\x31","\x37\x33\x78\x5a\x68\x22\x3c\x25\x3c\x39\x4a\x35\x36\x71\x3b\x50\x68\x5b\x6a\x6d\x2c","\x6c\x77\x7a\x6f\x25\x4f\x40\x5d\x30\x2c\x23\x5d\x45\x50\x21\x40\x73\x50\x5f\x37\x23\x7c\x76\x58\x7a\x5b\x73\x53\x23\x2f\x57\x78\x2c\x59\x30\x69\x63\x32\x6b\x49\x74\x2c\x2a\x28\x51\x31","\u002f\u003e\u007e\u005a\u0035\u0049\u0041\u0029\u0059\u0032\u0032\u007e\u0074\u0046\u0042\u0071\u006f\u005b\u0079\u0073\u004a\u0068\u0078\u006d\u006e\u004b\u0058\u0071\u0035\u0055\u0048\u0071\u0073\u0028\u0023\u006e\u0044\u003e\u003b\u0026\u0075\u0032\u0077\u0033\u002c\u007d\u002e\u0029\u0068\u003c\u0043\u0073\u0063\u0066\u003d\u005f\u003e\u0044\u0071","\x2b\x42\x56\x34\x2f\x5b\x6f\x24\x23\x32\x40\x53\x63\x53\x23\x3e\x70\x33\x78\x77\x6c\x3f\x46\x24\x7a\x39\x70\x2f\x5f\x76\x29\x71\x57\x28\x71\x65\x4c\x37\x36\x2a\x7b\x4e\x65\x7e\x66\x76\x59\x78","\u0058\u003e\u002b\u0023\u006d\u005b\u0052\u0032\u0057\u003a\u0041\u0053\u0043\u002e\u0070\u0040\u0030\u0074\u006c\u006f\u0077\u0049\u003c\u0029\u004d\u0078\u0070\u003d\u0073\u003c\u0049\u0024\u0021\u005b\u0076\u0037\u0022\u0028\u006c\u0066\u0057\u003a\u0045\u003c\u0040\u0050\u0021\u0041\u0032\u007a\u0043\u0077","\x65\x2c\x6b\x77\x28\x4a\x24\x64","\u007c\u007e\u006d\u0069\u0043\u0023\u0022\u004b\u006c\u0061\u0072\u0074\u0030\u0031\u0057\u0078\u002a\u0073\u0075\u0079\u0039\u0049\u0043\u004b\u0025\u006a\u004d\u0042\u0030\u0076\u005e\u003e\u0076\u0075","\u007a\u0077\u0028\u0035\u0061\u007c\u0065\u004f\u004a\u005b\u0029\u0021\u0066\u003a\u003e\u0056\u0033\u0043\u005d\u005a\u005b\u0028\u006e\u0071\u0072\u002f\u006a\u0045\u0073\u0043\u0055\u0024\u0049\u0042\u003f\u002e\u004f\u005a\u006c\u003e\u002c\u004e\u007e\u006e\u0060\u0062\u0026\u0056\u004b\u0050\u0071\u0034\u006b\u0047\u0053\u005a\u0068\u0074","\x54\x31\x61\x77\x5f\x2a\x71\x71\x30\x2c\x6d\x52\x25\x2f\x35\x71\x35\x3a\x59\x48\x2b\x66\x6c\x71\x48","\u0074\u004b\u0059\u0022\u0025\u0042\u0042\u0077\u003b\u002c\u0021\u0042\u0030\u002e\u0062\u0044\u0028\u002c\u0079\u0073\u0021\u006c\u0037\u0025\u0072\u0039\u0055\u0038\u007a\u0030\u0073\u0060\u0074\u003e\u0063\u005f","\u006a\u0077\u003d\u005a\u0042\u006f\u0075\u0053\u0065\u004f\u006b\u0045\u002f\u004a\u004f\u0060\u0036\u007e\u006d\u0066\u0033\u0053\u0076\u0075","\x38\x6f\x3d\x21\x3b\x2a\x31\x26\x64\x2c\x39\x52\x6d\x40\x40\x29\x35\x43\x2a\x34\x32\x7d\x5e\x4f\x51\x5f\x6d\x4f\x29\x46\x4d\x30\x54\x39\x6e\x69","\u0048\u0032\u007e\u0077\u006d\u0023\u005a\u0075\u0063\u0052\u006d\u0052\u0075","\x57\x69\x55\x5f\x5e\x2b\x7c\x2c\x3a\x39\x48\x50\x6a\x30\x2e\x78","\u0071\u0065\u007a\u006c\u004b\u004f\u0023\u005d\u0077\u004f\u0049\u0047\u006f\u0036\u0066\u003e\u0038\u0024\u004b\u0073\u0054\u0055\u0037\u0032\u007b\u004b\u0066\u0029\u0045\u0053\u0077\u0074\u0072\u0024\u0064","\x28\x59\x75\x67\x70\x29\x52\x38\x7c\x62\x6a\x71\x47\x25\x22\x26\x4d\x5b\x58\x21\x40\x67\x5d\x49\x35\x65\x66\x66\x40\x36\x6e\x74\x68\x5a\x3b\x6f\x72\x3f\x2e\x41\x5b\x4b\x72\x5f\x7a\x35\x63\x73\x5f\x59\x7c\x68\x3a\x7c\x57","\u0074\u0038\u006a\u006d\u0054\u006c\u0068\u006d\u005f\u003d\u0057\u0046\u0053\u0071\u0033\u0029\u002e\u0044\u0071\u0077\u003c\u0068\u0022\u0038\u0074\u004b\u0060\u005d\u0044\u0076\u0025\u007d\u0075\u004e\u002a\u0066\u006d\u006a\u0030\u0066\u003c\u0039\u0055\u0039\u0036\u0047\u0056\u0071\u0034\u003f\u0021\u0077\u006c\u0053\u0066\u003e\u0031","\u006e\u005a\u002b\u007b\u005f\u006f\u0079\u0066\u0022\u006b\u0047\u0066\u004a\u0035\u005f\u0058\u006a\u0057","\u005f\u0059\u0036\u005f\u002e\u0067\u005f\u0028\u0044\u0041\u002b\u0068\u0024\u0048\u006b\u0079\u0043\u0065\u006a\u007b\u0038","\u0044\u005a\u0034\u0077\u0026\u005d\u0026\u0075\u004d\u004f\u003f\u004e\u0051\u0055\u007e\u007b\u0042\u005a\u0033\u0037\u0046\u005b\u0038\u0025\u0074\u002c\u003c\u0039\u0039\u0023\u002a\u002e\u0056\u002c\u0051\u0038\u0048\u0021\u0076\u0058\u006d","\x76\x74\x75\x5a\x3e\x65\x35\x79\x58\x78\x63\x36\x52\x47\x62\x41\x45\x7a\x30\x67\x6c\x55\x36\x2a\x55\x69\x7c\x3b\x57","\x53\x44\x34\x2e\x3b\x2a\x57\x5d\x2a\x6a\x2c\x21\x32\x30\x3c\x47","\u003c\u003c\u0071\u002e\u0050\u0034\u0032\u004b\u0034\u0069\u0049\u003a\u0073\u0043\u006d\u0041\u0064\u002c\u0036\u0065\u0022\u004f\u004a\u0075\u0070\u0061\u0072\u0039\u0068\u0035\u0028\u0041\u004e\u002c\u0032\u0077\u004e\u0043\u0028\u004f\u0028\u004e\u0043\u0058\u0070\u0056\u0041\u0024\u0061\u003e\u0064","\u0024\u006f\u0041\u0068\u0024\u007e\u0036\u0038\u0023\u0032\u0060\u003f\u007d\u004f\u0029\u0078\u0048\u0038\u0053\u0023\u0028\u0061\u002e\u0025\u0044\u006b\u006c\u0068\u0054\u0071\u003b\u0058\u0076\u003e\u0064","\x6e\x50\x74\x72\x60\x42\x41\x29\x66\x69\x79\x44\x4b\x42\x25\x2e\x4a\x24\x67\x43\x4f\x5a\x2b\x75\x7a\x2f\x61\x42\x2a\x29\x79\x38\x25\x65\x2e\x21\x35\x24\x58\x41\x45\x65\x5b\x42\x5f\x3a\x39\x56\x59\x57","\u005d\u0061\u0036\u0065\u006c\u0047\u0039\u0062\u0057\u0032\u007a\u003c\u005b\u0058\u0024\u0074\u0034\u0070\u0031\u0068\u0067\u0032\u006a\u0025\u0070\u002f","\x3a\x3e\x33\x73\x69\x3a\x3a\x79\x77\x22\x53\x42\x7d\x56\x43\x50\x7c\x5a\x57\x2e\x43\x24\x35\x4f\x65\x41\x30\x79\x50\x35\x42\x50\x4f\x31\x2e\x38\x40\x32\x5d\x66\x78\x65\x35\x4a\x5e\x48","\u0045\u0069\u0050\u006f\u0053\u0021\u002c\u0047\u005e\u004f\u003d\u0030\u0023\u0062\u007e\u0056\u0074\u006e\u007a\u006f\u0055\u0023\u0039\u0041\u0075\u0076\u002b\u006e\u0040\u0050\u0064\u0079\u0034\u005a\u006f\u005a\u0063\u007e\u0029\u0038\u0071\u0052\u0062\u0072\u0042\u004f\u004c\u0038\u004e\u0075","\x79\x32\x33\x79\x77\x3a\x6e\x47\x28\x61\x52\x73\x4e\x3f\x50\x7b\x50\x32\x31","\x5b\x7b\x72\x68\x40\x3c\x4a\x38\x26\x44\x53\x74\x5d\x76\x55\x3e\x58\x33\x37\x79\x38\x25\x44\x47\x35","\x30\x50\x77\x7b\x23\x59\x72\x26\x7c\x62\x3e\x3f\x7d\x4f\x59\x74\x5a\x7b\x6e\x34\x2b\x43\x4d\x2a\x78\x76\x32\x66\x69\x47\x48\x58\x21\x65\x7d\x79\x6b\x3a\x2f\x49\x78\x32\x32\x5d\x7c\x5d\x40\x60\x74\x5a\x59\x6f\x4c\x66\x2a\x26\x31","\x3c\x5b\x48\x6d\x52\x7d\x25\x75\x36\x3a\x64\x4a\x64\x4a\x22\x38\x5a\x7b\x69\x72\x4a\x3a\x24\x2c\x53\x41\x66\x53\x4f\x58\x73\x79\x71\x40\x69\x67\x4d\x7e\x42\x49\x5a\x41","\u0038\u0070\u007c\u0048\u0064\u005b\u005e\u0071\u006d\u0022\u0032\u0034\u0030\u0031\u0068\u0040\u0032\u002f\u0028\u0035\u0073\u0065\u0069\u0062\u005f\u0022\u0043\u0075\u007b\u0056\u002a\u0040\u0051\u003e\u0079\u007b\u0050\u0034\u0061\u0074\u0066\u0062\u0068\u0035\u0060\u0058\u0075\u007b\u0054\u0077\u0031","\x62\x34\x47\x6f\x68\x32\x63\x66\x55\x69\x3f\x2f\x68\x3a\x64\x79\x69\x50\x65\x66\x41\x43\x23\x66\x26\x52\x73\x71\x45\x53\x26\x7d\x76\x70\x5f\x77\x79","\u004e\u006f\u0030\u0065\u0042\u0023\u0042\u0028\u002c\u003c\u006f\u0028\u0043\u0042\u0061\u0024\u006c\u0059\u0073\u0022\u0049\u0043\u0057\u0047\u0029\u0069\u0047\u0053\u0044\u0047\u0047\u0071\u0029\u0076\u005d\u0034\u004a\u003a\u003a\u004f\u002a\u005f\u0049\u0075\u005d\u002e\u003c\u0078\u0057\u0074\u003b\u0038\u003b\u0021\u0022\u0075\u007a\u0045\u0046\u005f\u0075","\u005a\u0031\u0066\u0038\u0066\u0061\u0022\u002b\u0038\u003c\u002b\u006f\u0025\u002f\u0024\u0033\u0075\u0069\u0035\u0038\u0031\u002a\u0071\u0079\u0063\u003c\u0068\u006f\u002a\u002f\u0035\u0070\u0069\u0033\u0021\u0065\u0054\u0066\u0036\u0075","\x59\x5a\x28\x73\x32\x2a\x7c\x71\x45\x69\x79\x5b\x79\x48\x76","\u003d\u0059\u0075\u0067\u003a\u0021\u0062\u0053\u0026\u0078\u0033\u005b\u0045\u0053\u0029\u0050\u004e\u0044\u0031","\u003c\u0065\u0026\u0065\u007d\u004a\u0021\u0071\u0028\u0039\u0031\u0064\u0056\u0062\u003b\u0074\u0044\u006e\u005a\u005f\u0069\u0032\u0047\u004f\u002b\u006b\u0044\u0071\u006b\u003c\u004b\u0038\u0061\u0043\u0033\u0077\u003f\u0046\u0033\u006a\u0070\u0061\u0059\u0073\u0041\u0064\u0039\u0044\u007d\u0070\u0031","\x35\x6f\x28\x7b\x43\x47\x5f\x66\x46\x32\x73","\x31\x76\x3e\x7e\x59\x6a\x39\x41\x2a\x5f\x2c\x59\x54\x29\x57\x70\x4a\x43\x3d\x38\x64\x24\x56\x4f\x34\x69\x4a\x4b\x36\x35","\u006c\u0024\u004f\u005f\u0023\u0050\u0079\u0064","\u0025\u0050\u0079\u007b\u0022\u0042\u0074\u004f\u0049\u004f\u0046\u0076\u0059\u0076\u0077\u0074\u0040\u0038\u0055\u0038\u0039\u003f\u0025\u0075","\x32\x33\x5e\x6d\x3f\x46\x4f\x64\x57\x69\x28\x22\x75","\u0050\u0050\u0067\u0035\u003b\u006a\u0072\u0062\u0057\u0076","\x26\x5b\x5e\x7e\x56\x50\x78\x26\x52\x65\x3e","\u006b\u003e\u004a\u007b\u005f\u0036\u003c\u0026\u0052\u0065\u002a\u005e\u007a\u0035\u0033\u0024\u0057\u0034\u0025\u0066\u0052\u003f\u0057","\u006c\u0059\u0070\u006f\u0077\u0049\u0060\u0028\u0064\u002c\u003e\u005d\u0075\u0030\u0054\u0024\u0042\u007b\u0050\u006d\u004e","\x59\x7a\x51\x68\x3e\x5d\x21\x74\x7e\x4f\x22\x6c\x4e\x30\x56\x41\x36\x5a\x38\x3d\x53\x24\x24\x79\x70\x2f\x43\x42\x7d\x2f\x32\x33\x7b\x76\x73\x68\x30","\u006f\u002f\u007a\u006f\u002e\u0055\u0062\u0075\u006d\u006b\u006f\u0034\u005b\u0034\u007c\u0073\u006c\u007a\u0075\u005a\u0023\u0042\u004d\u0078\u0025\u0061\u002c\u0033\u0053\u0035\u0034\u002e\u0040\u0038\u0033\u0037\u0055\u005b\u0072\u004b\u006a\u0041\u0035\u0021\u0046\u0064\u006e\u0060\u0038\u0024\u004b\u007e\u007b\u0066\u005e\u004f\u0021\u0044","\u0055\u003c\u0028\u0069\u0024\u0029\u0056\u002c\u003d\u0044\u003f\u005b\u005d\u0076\u0039\u0044\u002b\u005a\u006d\u0069\u0063\u0037\u0042\u0074\u006e\u0032\u002a\u0039\u004d\u0071\u0077\u0071\u005b\u0059\u0030\u0037\u005e\u0056\u0070\u0041\u004e\u004f\u002a\u005f\u0075","\u0046\u0050\u004f\u006e\u003b\u0022\u002b\u0075\u0074\u004b\u005e\u007b\u002b\u0047\u0077","\u0076\u0065\u0077\u006c\u0066\u0050\u0074\u005f\u002a\u0061\u005b\u0058\u0078\u0030\u007a\u007d\u003a\u003f\u002b\u006c\u002a\u006c\u007a\u0062\u0035\u0065\u0041\u0071\u007a\u003f\u0032\u0038\u0061\u0059\u002b\u0043\u0059\u0047\u0029\u0025\u0024\u0032\u004e\u002a\u0045\u0056\u007e\u007d\u003f\u005a\u0033\u0034\u0037\u0067\u004a\u0025\u006c\u0078\u0058","\u0038\u0052\u007d\u0073\u0058\u0066\u007a\u0041\u002a\u0076\u004b\u002f\u0021\u0076\u005d\u0024\u0058\u0033\u005b\u0066\u0045\u003a\u002c\u0042\u0028\u0061\u0055\u006e\u005d\u0076\u0045\u0079\u0044\u006f\u0059\u003d\u0038\u005d\u0023\u0064","\x23\x7a\x51\x6f\x3d\x53\x46\x24\x51\x61\x66","\u0061\u007a\u0025\u0066\u0079\u0043\u0025\u0025\u0070\u0061\u0025\u0045\u0042\u0058\u006e\u0038\u0043\u0078\u0067\u006d","\x32\x69\x3a\x6f\x45\x24\x66\x74\x76\x4e\x78\x44\x53\x71\x7c\x24\x2f\x35\x4c\x73\x46\x5b\x36\x38\x38\x4e\x64\x67\x52\x71\x3b\x47\x29\x50\x75\x72\x62\x22\x67\x71\x7c\x41\x63\x41\x51\x55\x45\x79\x33\x69\x64","\u0037\u0050\u0037\u002e\u0072\u0032\u0044\u005f\u0047\u0041\u0066","\x26\x5b\x72\x23\x61\x3a\x79\x2c\x57\x32\x47\x31\x6c\x31\x36\x40\x7a\x43\x76\x37\x5d\x36\x6b\x74\x25\x74\x69\x77\x37\x21\x62\x2e\x61\x7a\x6e\x2e\x34\x7c\x5f\x5f\x52\x65\x5f\x21\x44\x30\x4a\x78\x79\x50\x64","\x78\x76\x78\x2e\x6c\x23\x72\x38\x6f\x78\x4e\x6c\x43\x2e\x44\x3e\x69\x32\x40\x72\x40\x32\x77\x79\x25\x74\x64\x77\x3e\x43\x68\x7d\x7c\x3f\x3f\x77\x74\x47\x3f\x4f\x4a\x39\x4a\x74\x53\x71\x2b\x29\x3a\x44\x7b\x69\x5d\x56\x7c\x24\x35\x69\x4f","\u0074\u003e\u0064\u0021\u0061\u004b\u0059\u0028\u0057\u0074\u0067\u0036\u0067\u0058\u0045\u0047\u006a\u0057","\u006b\u007e\u006b\u0077\u0070\u007e\u0029\u0062\u0030\u0074\u006c\u006e\u002e\u002f\u0075\u0079\u0031\u0035\u0065\u006d\u0022\u0042\u004d\u0029\u0021\u0078\u0038\u0066\u0055\u002f\u0038\u0038\u0063\u003c\u004e\u006d","\u0055\u005a\u006d\u0069\u006a\u006a\u006e\u0064","\x37\x6f\x58\x5a\x6d\x36\x7c\x2c\x78\x2c\x67\x68\x3e\x21\x45\x71\x4a\x3c\x28\x34\x4d\x3c\x29\x62\x72\x39\x72\x42\x39\x56\x2f","\u005f\u0043\u006c\u007b\u0045\u0024\u0071\u0071\u004a\u0061\u0056\u006d\u0075\u0030\u003b\u0050\u0057\u0034\u0061\u0069\u005e\u0032\u0057","\x52\x77\x5b\x6d\x48\x2a\x6c\x4f\x52\x2c\x6b\x42\x62\x7c\x47\x74\x73\x3a\x5a\x68\x61\x28\x4b\x25\x3b\x2c\x3a\x34\x75","\u0076\u0076\u0028\u007b\u003c\u0068\u0044\u0064","\x5d\x5b\x46\x4b\x26\x7d\x5a\x64","\x3a\x6d\x40\x3b\x34\x22\x21\x64","\x72\x52\x69\x57\x57\x7d\x41","\u0021\u002f\u002c\u002e\u0049\u007b\u0068\u0064","\u002b\u005b\u0054\u0037\u0040\u0077\u0040\u0064","\x68\x24\x42\x7b\x4f\x68\x23\x64","\x3b\x65\x7c\x6a\x73","\u0028\u0070\u0048\u003d\u0032\u0042\u0057","\x49\x31\x39\x6e\x58","\x74\x40\x7c\x40\x41","\x54\x2f\x71\x69\x39\x6f\x23\x64","\x3d\x75\x73\x6d\x2f\x6f\x6e\x64","\u0054\u002f\u003e\u0077\u003f\u005a\u0068\u0075","\u0054\u004c\u0038\u006d\u005a\u005a\u003c\u0075","\x40\x50\x55\x5f\x60\x7e\x3a\x64","\x3f\x32\x37\x42\x63\x67\x73\x64","\x40\x50\x5f\x77\x2a\x23\x4c\x75","\u0030\u0032\u0036\u0072\u0051\u0061\u0022\u0075","\u0077\u0040\u0077\u007b\u0037\u0067\u0056\u0064","\x69\x75\x73\x6d\x2f\x6f\x6e\x64","\u0077\u0040\u005e\u0073\u0042\u0022\u0052\u0075","\x4c\x4c\x38\x6d\x5a\x5a\x3c\x75","\x4d\x60\x3f\x69\x43\x5e\x72\x75","\x23\x40\x49\x7b\x58","\u004d\u0060\u006b\u0077\u0057\u003b\u0072\u0075","\u0074\u0040\u0039\u0038\u0078","\x30\x32\x7e\x65\x79\x43\x6b\x57","\u007c\u007a\u0043\u006c\u0038\u0043\u0057","\u0030\u0032\u004d\u005a\u003b\u003f\u005f\u0064","\x7c\x7a\x4c\x7e\x45\x3f\x57","\u002f\u0070\u0021\u0069\u0043\u005e\u0072\u0075","\x2f\x70\x54\x77\x57\x3b\x72\x75","\u002f\u0070\u0021\u0069\u0043\u005e\u0055\u0075","\u0072\u0024\u003f\u0069","\u002f\u0070\u0054\u0077\u0057\u003b\u0055\u0075","\x70\x24\x6b\x77","\x48\x70\x4e\x3d\x2c\x6f\x56\x64","\x79\x76\x4e\x3d\x76\x6f\x56\x64","\x7c\x60\x73\x68\x36\x36\x34\x75","\x36\x31\x6b\x69\x7a\x59\x71\x64","\u007a\u003e\u0066\u006a\u0044\u006c\u0044\u0064","\u003b\u005a\u006d\u006c\u0038","\x22\x43\x29\x6e\x58","\x70\x70\x22\x6c\x4e\x6c\x44\x64","\x5e\x76\x4a\x3d","\u0036\u002f\u005b\u0022\u0030","\u0079\u0076\u003f\u0069\u002e","\u0036\u002f\u004a\u003d\u0041","\u0045\u005a\u0066\u006a\u0067\u0036\u0057","\u0036\u002f\u0078\u0067\u0074","\x21\x3c\x59\x68\x39\x3f\x3e\x64","\x7b\x70\x3f\x69\x58","\u0036\u002f\u0078\u0067\u0030","\u0031\u0040\u0032\u0065\u0079\u0067\u0023\u0064","\x36\x2f\x5b\x22\x78","\u0021\u003c\u0059\u0068\u0052\u0028\u0066\u0064","\x55\x24\x72\x5f","\x36\x2f\x4a\x3d\x4e","\x37\x5a\x71\x69\x52\x21\x44\x64","\u0021\u003c\u0059\u0068\u004a\u004f\u0060\u0064","\x69\x6e\x55\x5f","\u007c\u007a\u006d\u006c\u002e\u0043\u0057","\x21\x3c\x59\x68\x4a\x4f\x23\x64","\x7c\x31\x3f\x69","\u0036\u002f\u0030\u0037\u0044","\u0021\u003c\u0059\u0068\u0024\u003c\u003e\u0064","\u007b\u0076\u0061\u0069","\x36\x2f\x4a\x3d\x74","\x7c\x60\x5f\x37\x5a\x68\x5e\x64","\x58\x70\x69\x67\x66\x68\x68\x75","\x65\x33\x7d\x6c\x36\x36\x73\x64","\u005f\u0074\u0021\u0069","\u005e\u0033\u007d\u006c\u0036\u0036\u003b\u0075","\u0070\u0032\u0021\u0069\u0073","\x29\x5a\x21\x69\x5b\x4f\x61\x64","\x67\x5a\x72\x5f","\x36\x2f\x5b\x22\x4e","\u0041\u0065\u005d\u0069","\u0037\u0076\u005b\u007b\u0055\u0053\u0024\u0064","\u004e\u0028\u006d\u006c\u003d\u006f\u0023\u0064","\x75\x70\x58\x65\x59\x6a\x44\x64","\u004c\u005b\u0055\u005f","\u002f\u0040\u0062\u003d\u006e\u0043\u006a\u0075","\x28\x69\x4c\x6c\x73","\x4b\x31\x4e\x3d\x25\x34\x73\x64","\u0060\u002c\u007c\u006a\u0073","\u002b\u003c\u0061\u0069\u003f\u0059\u0074\u0064","\x63\x24\x77\x7b\x37\x43\x28\x64","\u0033\u003e\u002b\u006f\u0077\u002a\u0057","\x52\x31\x44\x68\x73\x43\x26\x75","\x24\x32\x57\x37\x73\x43\x56\x64","\u0055\u002f\u0053\u0023\u0032\u0042\u0025\u0075","\x58\x76\x39\x6e\x79","\u0054\u002f\u0062\u003d\u003f\u0059\u0061\u0064","\x42\x33\x73\x68\x30\x22\x2c\x64","\x71\x76\x62\x3d","\u007c\u007a\u007d\u006c\u0068\u0036\u002c\u0064","\u0070\u0070\u0048\u003d","\x36\x2f\x4a\x3d\x44","\x33\x76\x57\x69\x38","\x66\x40\x5f\x69\x2a\x36\x57","\u0058\u0070\u004e\u003d\u0029\u0067\u0047\u0064","\u0070\u0070\u005d\u0069","\u0058\u0028\u0056\u007b\u0022\u0042\u0057","\u005e\u0040\u0039\u006e\u0026\u005d\u0057","\x39\x70\x49\x7b\x4f\x68\x79\x64","\x34\x40\x6b\x69","\u0070\u0070\u0049\u007b\u004f\u0068\u0057","\x5a\x5a\x6d\x6c\x2e\x43\x28\x64","\x6a\x3f\x72\x6e\x48\x2a\x57","\u0022\u005a\u0077\u007b\u0079","\u0034\u0031\u0033\u006c\u0053\u002a\u0066\u0064","\x51\x32\x55\x5f","\u0038\u0069\u0040\u006e\u005b\u0068\u0023\u0064","\x56\x33\x73\x68\x30\x22\x2c\x64","\u002b\u007d\u004a\u0070\u0056\u005f\u0063","\x7e\x5f\x75\x35\x5b\x68\x63","\u005f\u002a\u0036\u0076\u0056\u005f\u0063","\u0034\u007e\u0075\u0035\u002e","\u007d\u002f\u007e\u0068\u002f\u0042\u007a\u0034","\u007e\u007e\u003c\u0035\u004a\u0022\u0024\u0064","\u0028\u0021\u0043\u0022\u0024\u0042\u004e\u0034","\u0040\u004e\u0029\u0069","\u0039\u0032\u004a\u007e\u0072\u0038\u0037\u0064","\x6e\x3a\x34\x37","\u007d\u002f\u0079\u0021\u004b\u006e\u0036\u0034","\u0032\u004e\u004d\u005d\u0039\u0025\u0051\u0034","\u0054\u005a\u0065\u0068\u0066\u0071\u0036\u0034","\u0022\u004b\u0060\u0022\u0053\u0029\u0063","\x32\x4e\x4d\x5d\x2a\x6e\x28\x34","\u0048\u005a\u0065\u0068\u0066\u0071\u0036\u0034","\x74\x2a\x36\x76\x68\x72\x63","\x76\x4f\x66\x70\x66\x79\x28\x34","\u0067\u006c\u0065\u0066\u006c\u0073\u0063","\u0076\u004f\u0066\u0070\u002c\u005b\u005a\u0034","\x7d\x2f\x3d\x21\x32\x25\x28\x34","\u0076\u004f\u0066\u0070\u0043\u007c\u004e\u0034","\u0038\u004f\u0037\u0070","\u0022\u004b\u0060\u0022\u0053\u0029\u003d\u0063","\x3e\x2f\x3d\x21\x3e","\u003e\u002f\u003d\u0021\u007c\u0045\u0058\u0034","\x53\x7d\x4c\x35\x56","\x45\x4c\x7e\x68\x38\x6e\x3d\x63","\x2c\x4c\x65\x66\x58\x74\x63","\x3e\x2f\x3d\x21\x2c\x5b\x26\x34","\u0046\u0032\u006e\u0021\u0056","\u003e\u002f\u003d\u0021\u0028\u0040\u005a\u0034","\x68\x5a\x51\x21\x3e","\u0029\u004b\u005f\u0022\u005b\u0068\u0063","\x65\x7d\x69\x21\x54\x72\x63","\x6f\x7d\x29\x69\x61\x48\x63","\u0072\u004c\u0046\u0035\u002e\u006e\u007b\u0034","\u006c\u002f\u003c\u0035\u002e","\x7e\x7e\x3c\x35\x4a\x22\x2c\x64","\x2f\x58\x49\x69","\x24\x2f\x30\x21\x3e","\x7d\x2f\x3d\x21\x45\x25\x26\x34","\u002e\u004f\u0037\u0070","\u004a\u0028\u0041\u0066\u003f","\x3e\x33\x41\x66\x6c\x73\x29\x64","\x54\x4b\x23\x22\x68\x72\x4e\x34","\u0066\u0061\u0042\u0021\u004f\u0074\u004e\u0034","\x36\x47\x62\x2b\x70\x5e\x62\x34","\u005b\u006c\u0049\u0069","\x7a\x6f\x40\x70\x56\x5f\x63","\x4a\x28\x60\x22\x70\x74\x7c\x34","\u0049\u0023\u0040\u007e","\x29\x69\x31\x2b\x4b\x6e\x36\x34","\x7e\x45\x29\x35\x44\x72\x7c\x34","\x22\x66\x2c\x22\x6d\x54\x69\x34","\u0064\u007e\u0065\u0068\u003e\u005f\u007c\u0034","\x72\x4d\x3f\x35\x56\x5f\x69\x34","\u0067\u0046\u0065\u0066\u006e\u0072\u0063","\u0034\u0046\u0023\u0022\u0070\u0074\u0061\u0034","\u003e\u0047\u005e\u0066\u007a\u0025\u004d\u0034","\x22\x66\x56\x5d\x76\x5f\x69\x34","\x4f\x4f\x4c\x35\x6e\x72\x5a\x34","\u0029\u0069\u0065\u0066\u0041\u003b\u005a\u0034","\x39\x47\x5b\x35\x32\x42\x5a\x34","\u003f\u0058\u0049\u0069\u0056\u005f\u007c\u0034","\x47\x44\x2b\x76\x4f\x72\x7c\x34","\u005d\u005f\u0077\u0035\u002e","\x3e\x2f\x7a\x21\x26\x5f\x28\x34","\x63\x7e\x44\x76\x4a\x22\x63","\x62\x7d\x52\x35\x45\x25\x4b\x34","\u004f\u007d\u0033\u0068\u0062","\x7e\x7d\x3d\x21\x44\x72\x63","\x2c\x4c\x4a\x70\x53\x45\x26\x34","\u0061\u0058\u0041\u0066\u0026","\u0030\u0052\u0025\u0068\u0040\u005b\u0061\u0034","\u0021\u0035\u0049\u0069","\x30\x52\x25\x68\x36\x53\x28\x34","\u0059\u0031\u004d\u005d\u002f\u005b\u005a\u0034","\x75\x2f\x59\x76\x5b\x68\x63","\u0044\u0033\u004a\u0070\u0077\u006e\u0036\u0034","\u0057\u0044\u004a\u0070\u0048\u0032\u0065\u0034","\x2f\x2f\x56\x60\x44\x74\x35\x34","\u0070\u0064\u0041\u0076\u004b\u0073\u0063","\u0028\u0021\u005e\u0035\u0035\u006e\u0036\u0034","\x39\x6c\x7d\x71\x54","\x78\x2b\x6f\x43\x2c\x4d\x22\x42","\x70\x72\x5f\x75\x46","\u002e\u0026\u006f\u0043\u0021\u0074\u0028\u0042","\u0075\u0034\u006a\u0041","\x36\x7d\x6b\x70\x62\x22\x58\x34","\u0021\u0035\u0049\u0069\u0076\u0029\u005a\u0034","\x68\x6d\x6e\x76\x71\x3b\x7c\x34","\x54\x46\x30\x21\x76\x5f\x28\x34","\u004d\u004f\u0040\u0070","\u002b\u002a\u0023\u0022\u0053\u0029\u0044\u0034","\x21\x35\x49\x69\x2a\x77\x63","\x5d\x4e\x41\x37\x28\x25\x36\x34","\u0056\u004f\u004c\u0035\u0071\u003b\u007c\u0034","\x4a\x28\x5e\x35\x35\x6e\x36\x34","\u0047\u0044\u0062\u0021\u0075\u0074\u007c\u0034","\u0070\u0064\u0026\u0060\u0044\u0074\u0035\u0034","\x7d\x6c\x49\x69\x61\x48\x33\x34","\x7a\x6f\x38\x3a\x55\x6e\x26\x34","\u006d\u007d\u006d\u0076\u0038\u006e\u0036\u0034","\x21\x64\x26\x60\x44\x74\x35\x34","\u0057\u0061\u007a\u0021\u005f\u004d\u0029\u0064","\x7c\x7d\x59\x76\x2e","\x51\x6f\x48\x2b\x56\x5f\x3d\x63","\x41\x32\x5f\x22\x3e\x5f\x63","\x44\x2f\x30\x21\x5f\x4d\x29\x64","\x44\x2f\x30\x21\x5f\x4d\x49\x64","\u0029\u004b\u007a\u0021","\u0037\u002f\u004a\u0070\u0058\u0074\u0036\u0034","\u0070\u0062\u0037\u0040\u002a","\x77\x3f\x46\x55\x40","\x59\x31\x4a\x70","\u0032\u004e\u0065\u0066\u005a\u0022\u005a\u0034","\u0030\u0052\u0025\u0068\u0040\u005b\u005a\u0034","\u002f\u002f\u0073\u007c\u007a\u0025\u004d\u0034","\x2e\x64\x41\x76\x4b\x73\x63","\x78\x57\x3e\x3c\x2f\x42\x2e\x48","\u0029\u0075\u006c\u006a\u0021","\x50\x3d\x3e\x3c\x51\x5f\x6f\x48","\x5a\x71\x2f\x2b","\x59\x31\x4a\x70\x76\x29\x5a\x34","\u002f\u002f\u0022\u003e\u004a\u0022\u004b\u0034","\x3f\x76\x36\x76\x56","\x56\x4f\x25\x68\x4a\x5f\x33\x34","\x5e\x6e\x26\x2a\x3d","\u0028\u006f\u007d\u005a\u0070\u003a\u006b\u005f","\u0059\u004b\u0038\u003a\u003e\u005f\u0033\u0034","\u0051\u006f\u0065\u0066\u0072\u0072\u003d\u0063","\u0057\u0044\u004a\u0070\u0040\u0072\u0058\u0034","\u0059\u005a\u0049\u0069\u0029\u004d\u004b\u0034","\u0033\u0021\u0046\u0069\u004f\u0074\u004e\u0034","\x42\x4b\x26\x68\x2f\x42\x63","\u0078\u0036\u0051\u007d\u004c\u0078\u0026","\u0076\u004f\u0066\u0070\u003e","\u0057\u0044\u004a\u0070\u0057\u0040\u0063","\u0057\u0044\u004a\u0070\u006a\u006a\u0063","\x5e\x4c\x65\x68\x26\x5f\x7c\x34","\x2f\x2f\x56\x60\x35\x5f\x58\x34","\x31\x64\x41\x76\x4b\x73\x63","\u0045\u0076\u0072\u0031\u0047","\u0056\u0068\u0031\u004d\u002c\u0071\u0025\u003d","\u0044\u006a\u0059\u0024\u0053","\u0041\u002b\u0031\u004d\u0074\u0067\u002e\u003d","\x5b\x7d\x65\x24","\u0030\u0052\u0025\u0068\u0040\u005b\u007c\u0034","\x41\x4c\x7a\x21\x76\x29\x5a\x34","\x41\x4c\x7a\x21","\x2f\x2f\x7a\x48\x38\x6e\x28\x34","\u0038\u0032\u0026\u0070\u0029\u004d\u0035\u0034","\x31\x2f\x2b\x5d\x42\x37\x30\x79","\x7e\x23\x2e\x73\x4c","\x69\x71\x2b\x5d\x63\x4e\x7d\x79","\u0030\u0052\u0025\u0068\u0075\u007a\u004e\u0034","\u006e\u0046\u0068\u0034\u0028\u0071\u007c\u0034","\x3f\x76\x36\x76\x75\x24\x63","\u0057\u0044\u004a\u0070\u0048\u0032\u0026\u0034","\x29\x6d\x30\x21\x29\x4d\x35\x34","\x63\x53\x30\x21\x2c\x73\x29\x61","\x3c\x76\x72\x67\x3a","\u0048\u0076\u0037\u0064\u0063\u0058\u004a\u0061","\x4c\x7d\x6f\x2b\x56\x6e\x7c\x34","\u0057\u0044\u004a\u0070\u0057\u0040\u0028\u0034","\u0039\u005f\u0038\u003a\u003e\u005f\u0033\u0034","\x41\x3b\x66\x4c\x59\x3f\x64\x5d","\u0026\u0022\u005b\u0030\u002b","\u0055\u0054\u005f\u0056\u0041","\u005d\u0046\u006d\u0076\u0022\u004d\u0035\u0034","\x4e\x5f\x58\x37","\u005d\u0046\u006d\u0076\u0056","\u002f\u002f\u006e\u0053\u0061\u0071\u0026\u0034","\u004e\u0058\u0038\u003a\u003e\u005f\u0033\u0034","\x4e\x7d\x59\x73\x42\x40\x34\x5f","\u0026\u0023\u006f\u003a\u004d","\u002c\u0057\u0059\u0073\u0067\u007b\u0036\u005f","\u0061\u0049\u0070\u0030","\u0030\u0052\u0025\u0068\u0048\u004d\u0024\u0064","\x5d\x7d\x7a\x21\x5f\x4d\x35\x34","\x30\x52\x25\x68\x50\x28\x65\x34","\u0049\u004b\u0029\u0069","\x57\x44\x4a\x70\x35\x79\x58\x34","\x5f\x2a\x2c\x26\x52\x68\x7b\x34","\x25\x46\x38\x3a\x3e\x5f\x33\x34","\x76\x4f\x6b\x70\x3e","\x54\x21\x4e\x70\x35\x3d\x25\x4d","\x73\x64\x6f\x53\x3c","\u0063\u0058\u0035\u006c\u003e\u0044\u005f\u004d","\u0029\u0048\u006d\u0072\u005f","\x61\x58\x41\x66\x74\x4d\x35\x34","\u002f\u002f\u0073\u0074\u0042\u0072\u005a\u0034","\u007b\u0064\u0041\u0076\u004b\u0073\u0063","\u0037\u004c\u003a\u0053\u0048\u0033\u003f\u007c","\x75\x24\x42\x7a\x71","\u0072\u004b\u003a\u0053\u003c\u004b\u0069\u007c","\u006a\u004c\u0041\u007a","\u0030\u0052\u0025\u0068\u004b\u0052\u004e\u0034","\x76\x4f\x79\x21\x76\x29\x5a\x34","\u0076\u004f\u0079\u0021","\x57\x44\x4a\x70\x61\x5b\x61\x34","\x7c\x21\x5e\x35\x68\x72\x4e\x34","\u002a\u0064\u0041\u0076\u004b\u0073\u0063","\u004e\u006e\u006c\u0032\u002e\u0026\u0034\u007d","\u0060\u0066\u0069\u0065\u003b","\x78\x44\x24\x30\x32\x73\x2a\x7d","\u006b\u006b\u0077\u0054","\u0041\u0032\u0023\u0022\u0068\u0072\u0058\u0034","\x2f\x2f\x37\x70\x76\x29\x5a\x34","\x2f\x2f\x37\x70","\x57\x44\x4a\x70\x49\x53\x28\x34","\u004a\u0028\u0068\u0074\u0077\u006e\u0028\u0034","\x21\x64\x41\x76\x4b\x73\x63","\x28\x71\x3c\x2c\x2e\x35\x39\x44","\x6e\x36\x56\x74\x23","\x67\x45\x7e\x74\x3d\x54\x30\x44","\u006d\u0045\u007a\u0047","\u0077\u0046\u0030\u0021\u006a\u005b\u0079\u0034","\u006e\u0046\u0029\u0069\u0076\u0029\u005a\u0034","\x6e\x46\x29\x69","\x5d\x7d\x7a\x21\x2e","\u0066\u007a\u0029\u0035\u0037\u0054\u003d\u0063","\u0059\u0031\u005e\u0035\u0024\u0042\u003d\u0063","\x55\x4b\x60\x22\x3f\x5f\x63","\x66\x7a\x29\x35\x37\x54\x63","\x30\x52\x25\x68\x47\x6f\x5a\x34","\u002e\u0028\u0060\u0022\u006a\u0068\u0063","\x47\x44\x6b\x70\x7a\x25\x79\x34","\u0035\u0037\u002a\u0036\u007d","\u005b\u004b\u006d\u0076\u0038\u005f\u0028\u0034","\u0062\u0064\u006c\u0065\u007a\u0025\u0051\u0034","\x25\x46\x6b\x70","\x46\x46\x60\x22\x3f\x5f\x28\x34","\x36\x2a\x26\x68\x29\x4d\x6f\x64","\x45\x7d\x50\x2b\x7c\x66\x5a\x34","\u0043\u006a\u0023\u0022\u0026","\u0064\u002f\u002e\u002b\u0025\u0066\u005a\u0034","\x43\x6a\x49\x69","\u002b\u002a\u0023\u0022\u0072\u0072\u0026\u0034","\x69\x7b\x30\x21","\u0044\u007d\u006b\u0070\u0035\u005f\u0066\u0064","\u0028\u0021\u0043\u0022\u0026","\u0055\u004b\u006d\u0076\u0038\u005f\u0028\u0034","\x2a\x4e\x73\x74\x6d\x54\x63","\x4d\x2a\x23\x22\x72\x72\x5e\x64","\x2f\x6f\x30\x21\x26","\x2c\x7d\x5d\x70\x6c","\u002e\u002f\u0021\u006e\u0065\u0068\u0068\u0064","\u0036\u002a\u0026\u0068\u0051\u005d\u0058\u0034","\x62\x4f\x6b\x70","\x64\x4f\x6a\x76\x49\x3b\x4b\x34","\x70\x64\x3b\x65\x7a\x25\x33\x34","\x38\x4f\x6a\x76\x49\x3b\x4b\x34","\u006d\u007e\u005a\u0068\u0026\u005f\u0063","\u005d\u0046\u006d\u0076\u0022\u004d\u005e\u0064","\x7e\x7e\x4d\x76\x54\x72\x33\x34","\x53\x7d\x3d\x21","\x64\x7e\x66\x70","\u007a\u006f\u0049\u0069\u0026","\u0070\u0064\u0043\u006d\u007a\u0025\u0051\u0034","\u0036\u006f\u0040\u0070","\u0041\u0061\u0026\u0068\u0072\u0072\u003d\u0063","\u005f\u0032\u003e\u0060","\u0041\u0061\u0026\u0068\u0072\u0072\u0045\u0064","\u0073\u0061\u0077\u0035\u0022\u004d\u0068\u0064","\x4f\x35\x41\x66\x48\x4d\x58\x34","\u0061\u0058\u0068\u0034\u003f\u006e\u0035\u0034","\x32\x4e\x24\x6d\x31","\u0040\u005e\u0037\u0063\u0067\u0064\u0047\u0035","\u004e\u004a\u0026\u0040\u0063","\x37\x37\x44\x41\x7d\x6b\x3a","\x5a\x7c\x67\x6b\x4b\x58\x59\x35","\x40\x26\x53\x40\x63","\x37\x37\x44\x41\x7d\x6b\x63\x35","\u0040\u005e\u0037\u0063","\u0043\u0071\u0067\u0047\u0066\u0043\u0078\u0035","\x23\x71\x6c\x70\x56\x33\x3d\x3a","\x3a\x6d\x68\x79\x62\x38\x37\x5e","\u0076\u007e\u0030\u0057\u0074\u0079\u006d\u0061","\u0075\u002f\u0059\u0076\u005b\u0068\u003d\u0063","\u002e\u004f\u0032\u0070\u003f\u006e\u0035\u0034","\x4f\x6c\x33\x47\x62","\x57\x44\x4a\x70\x4f\x52\x4e\x34","\x4d\x4f\x3d\x21\x26\x25\x36\x34","\u0021\u0064\u0049\u0074\u007c\u0029\u005a\u0034","\x7a\x7d\x63\x6d","\u002f\u002f\u0059\u0076\u005b\u0068\u0063","\u002f\u002f\u0059\u0076\u005b\u0068\u0069\u0034","\u0025\u006b\u0054\u0071\u0075\u0024\u0046\u007a","\u004b\u0047\u002e\u0024\u005e\u0036\u0046\u007a","\u0068\u0047\u005e\u0029\u0022\u005d\u0023\u0073","\u004f\u004f\u003b\u0044\u0076\u0024\u0023\u0073","\u006d\u007e\u0053\u0021\u003f","\u007b\u005a\u0029\u0035\u0034\u0030\u0033\u0034","\x73\x69\x3f\x35\x6d\x54\x4e\x34","\u002e\u004f\u003d\u0021\u0047\u0076\u0051\u0034","\u005d\u004e\u005e\u0035\u0070\u0074\u0036\u0034","\x25\x46\x2b\x5f\x46\x71\x26\x34","\x24\x5f\x63\x45\x76\x6e\x4b\x34","\x4f\x4f\x65\x68\x5b\x23\x3c\x64","\u0065\u002a\u0030\u006d","\u003e\u002f\u0046\u0035\u006c\u0025\u0051\u0034","\x7c\x47\x51\x72\x33\x7a\x79","\u006d\u0076\u0029\u0031\u003a\u0053\u0039\u006e","\x24\x65\x58\x24\x3c","\u003e\u0031\u006f\u0072\u006f\u007a\u006c\u006e","\u0079\u0076\u0059\u0068\u004e\u0043\u003a\u0064","\x35\x40\x6b\x69\x58","\u0067\u0065\u0056\u005d","\u0048\u0022\u0068\u004a\u0032\u0041\u007a\u0077","\x43\x6d\x56\x5d\x79\x49\x6e\x3f","\x2e\x6d\x36\x79\x2f\x53\x75\x3f","\u006b\u0034\u007a\u0021","\x2e\x23\x76\x4f\x70\x71\x44\x47","\x7b\x4a\x78\x4f\x7a","\u0076\u003b\u007e\u006d","\x45\x4a\x6e\x60\x69","\x6f\x36\x66\x4f\x58\x5d\x54\x47","\x22\x43\x7d\x6a","\u0079\u0076\u003b\u006e\u0043\u0036\u0044\u0064","\x33\x7c\x21\x3f\x68\x40\x56\x22","\x47\x3c\x7b\x44\x50","\x41\x53\x2a\x49\x4f\x73\x6b\x22","\x3c\x66\x62\x3f","\u0051\u0026\u0078\u0045\u0032\u0079\u004a\u002f","\u003f\u007e\u0067\u0040\u0048\u0024\u004a\u002f","\x2a\x7b\x47\x52\x6b","\u0021\u0021\u003a\u004d\u0052\u0032\u0071","\u0045\u005a\u0056\u007b\u0068\u0036\u0044\u0064","\x25\x24\x56\x7b\x79\x43\x56\x64","\x6b\x69\x5a\x6e\x48\x2a\x23\x64","\x46\x5a\x3b\x5f","\x5f\x30\x4d\x41\x76\x44\x3f\x50\x59\x73\x7e\x61\x34\x37\x29\x60\x65\x38\x24\x5d","\x60\x2e\x2b\x7e\x7d\x68\x78\x2b\x6a\x75\x4a\x3b\x69\x48\x58\x39\x62\x57\x5b\x5d","\x45\x28\x54\x45\x71\x64\x28\x60\x7e\x4d\x3d\x34\x6b\x24\x79\x39\x3c\x22\x4b","\x6e\x2e\x6a\x7e\x6a","\x31\x5b\x23\x51\x72\x2a\x46\x6d","\u0058\u0049\u0048\u005d\u0030\u0036\u006f","\x4f\x33\x4e\x2a\x25\x56\x46\x6d","\x38\x2c\x79\x7b\x30\x55\x44\x64","\u0070\u0032\u0044\u0038\u0076\u0036\u0023\u0064","\x7a\x3e\x7c\x6a\x73","\x5e\x76\x4a\x3d\x7b\x67\x61\x64","\x7b\x28\x36\x4b\x3e","\x58\x6f\x34\x43\x72","\x77\x2f\x37\x59\x7b","\u0056\u0063\u0034\u0039\u007e\u003c\u0049\u0052","\x51\x4a\x54\x3e\x45","\x57\x3c\x67\x6d\x64","\x51\x3f\x53\x7c\x64","\x69\x3f\x2f\x51\x64","\x4f\x32\x5a\x46","\x34\x5f\x30\x25\x40\x59\x40\x5e","\x3f\x3f\x57\x59\x4d\x59\x40\x5e","\u007b\u0049\u004e\u0059\u0042","\x7a\x4c\x5b\x40\x73\x79\x73\x65","\u005e\u0076\u0030\u0037\u005f\u002a\u0057","\u0065\u0033\u005a\u005f\u0038","\u004e\u0028\u007c\u006a\u002e","\u007b\u0076\u005a\u006e\u0062\u006f\u0056\u0064","\x54\x78\x4d\x77\x5d","\u0067\u0041\u0043\u0077\u002c","\x32\x72\x30\x46\x3d","\u0048\u0071\u0037\u0049\u003d","\x36\x71\x64\x48\x3d","\x7a\x2e\x34\x3a","\u0041\u0053\u0023\u0077\u0065\u0035\u0065\u0042","\x4c\x31\x33\x6c\x40","\u0060\u0070\u0033\u006c\u0038\u0043\u0023\u0064","\u0045\u0031\u007c\u003e\u0029\u0046\u006b\u0063","\u0029\u0041\u0049\u0021\u0048\u0061\u004f\u003b","\u0021\u0030\u0037\u0074\u002b","\u005a\u0043\u002a\u0049\u007b","\u0079\u0067\u0032\u002a\u0072\u0052\u0039","\u0067\u0026\u0069\u002a\u002b","\u006b\u0026\u004f\u0021","\u005f\u0031\u0043\u003a","\x74\x78\x5d\x3a","\u0072\u0041\u0037\u0074\u007e\u003e\u004e\u0063","\x32\x41\x69\x2a\x37\x2f\x6a\x63","\x56\x77\x76\x74\x21\x37\x57\x63","\u002e\u0067\u006f\u0074\u007e\u0052\u0039","\u0072\u0041\u007d\u0047\u0059\u0060\u005b\u0063","\u0023\u0041\u005d\u003a\u0029","\x24\x7c\x64\x3e\x52\x52\x50\x63","\u0021\u0072\u0028\u002a","\x59\x7c\x53\x6d\x4b\x35\x39","\x29\x31\x49\x74\x5f\x7d\x57\x63","\x49\x49\x3f\x3e\x4b\x46\x2f\x63","\x70\x69\x31\x6d\x5e","\x7c\x41\x4e\x47\x60\x52\x26\x63","\u003f\u0030\u006f\u0074\u002b","\u007e\u0041\u0024\u0023\u0035\u0047\u0044\u003b","\u003c\u0078\u0057\u002a","\u002f\u0026\u007b\u0074\u0045\u0079\u0050\u0063","\u004a\u0078\u0057\u002a","\u0062\u0031\u006f\u0074\u0074\u0035\u0067\u0063","\x77\x44\x72\x4d","\x42\x61\x62\x5a\x5a\x6a\x21\x63","\x30\x29\x34\x5b\x55\x65\x70\x63","\u006d\u0029\u003a\u0049\u0033\u0056\u0045","\u0055\u0061\u0065\u004f","\u0042\u0061\u0050\u005a\u0059","\x39\x74\x65\x4f","\u0039\u0074\u0058\u0049\u006e\u0025\u0042\u0063","\x68\x26\x7e\x3a\x74\x46\x5d\x3b","\x2f\x2a\x58\x3e\x50","\x50\x46\x47\x65\x6f","\x43\x67\x66\x5d\x4e\x3e\x4e\x63","\u0037\u0049\u003f\u003e\u0029","\u0067\u0026\u005e\u002a\u0079\u0054\u006b\u0063","\u0021\u0022\u006f\u0021","\u0035\u0062\u0042\u0033\u0052\u0021\u0044","\x4c\x3b\x73\x52\x77\x6a\x2f\x50","\x75\x3b\x32\x69\x3c\x36\x44","\u0054\u0076\u0023\u0054\u003f\u006a\u0044","\x51\x7b\x30\x58\x51","\u0048\u004b\u0026\u0058\u0054\u002a\u007a\u0022","\u006a\u0076\u0056\u0052\u0038\u002a\u0061\u0022","\x79\x41\x26\x33\x57","\u004e\u006e\u0024\u0069\u0051","\x59\x57\x4c\x58\x76\x2e\x2f\x50","\u0051\u0078\u003d\u0069\u005b\u0026\u0043\u0050","\x3c\x41\x5e\x2a\x4b","\u006e\u0079\u0061\u0042","\u0025\u0026\u0044\u007e\u006e\u0072\u003e\u0032","\u006d\u0077\u0033\u0047\u0061\u0025\u0023\u0032","\u0053\u003b\u006b\u0029\u005d\u0075\u0079\u0035","\x32\x4a\x23\x65\x28\x68\x5f\x35","\u0058\u0072\u0050\u0055\u0057\u0075\u0069\u0035","\u005e\u0077\u0078\u0051\u0074\u003a\u0048\u0035","\x5d\x3b\x3a\x29\x3e\x23\x38","\u0036\u005b\u0054\u006d\u006a","\x6c\x39\x44\x2f\x2e\x55\x74\x7e","\u0030\u007a\u005a\u007b\u0031\u006f\u0077\u007e","\u0033\u0058\u005e\u0047\u0067\u0055\u007c\u007e","\u004c\u0072\u0032\u0050\u0024\u0071\u0021\u007e","\u002e\u0039\u0071\u002f\u005f\u005a\u0049","\u007d\u005b\u007b\u004a\u003b\u007c\u002c\u0032","\x59\x36\x63\x24\x78\x6f\x2b\x64","\u006b\u0026\u0058\u0056\u0041\u005e\u002c\u0072","\u0064\u0023\u002b\u0043\u003d\u0025\u0065\u0072","\x2a\x37\x6a\x50\x60\x5e\x75\x72","\u0039\u0036\u0032\u003a\u003b\u0068\u006c\u0072","\x41\x26\x68\x56\x76\x2b\x73","\x52\x77\x69\x2a\x43\x7d\x32\x63","\u003d\u0067\u005f\u003a","\u003d\u0077\u005a\u0034\u0038\u0043\u0049\u003b","\x7a\x49\x66\x5d\x60\x52\x39","\x28\x35\x7d\x47\x79\x54\x6b\x63","\x55\x77\x5e\x2a","\x23\x41\x7e\x3a\x29","\x52\x6c\x4a\x7e\x59","\x28\x35\x7d\x47\x79\x54\x45\x63","\x2a\x74\x6f\x21","\u0041\u003a\u005f\u002c\u0079\u0052\u0025\u0071","\u0070\u007c\u003f\u0072","\x75\x72\x3c\x3d\x33","\u006e\u004f\u0024\u0060","\u0048\u0063\u0069\u0060\u005a","\u0034\u0062\u0064\u0046\u0040","\u0052\u005f\u0050\u0035\u0077\u0052\u002a","\x68\x42\x4c\x6c\x79\x2b\x2a","\x28\x35\x7d\x47\x76\x5e\x67\x63","\x3a\x59\x5e\x2c\x76\x54\x49\x6d","\x36\x7b\x5e\x2c\x56\x76\x2a\x4e","\u006c\u0053\u0048\u0067\u0079","\x43\x3e\x75\x5d\x44","\u004a\u0076\u0028\u0058\u0039\u004a\u007b","\u0056\u0065\u0038\u003d\u004f\u0026\u007b","\x31\x4d\x47\x69","\u003b\u0041\u004d\u0058\u0054\u002c\u0021\u004e","\x3b\x3c\x72\x3f\x39\x7e\x3f\x4e","\u0067\u0022\u0032\u0079\u006b\u0044\u007d\u003d","\x52\x50\x42\x4a\x51\x32\x36\x3d","\x3e\x30\x41\x5e\x26\x68\x5e\x77","\u004a\u002c\u006e\u0046\u0078\u0061\u0041\u0077","\x22\x6b\x6c\x5a\x56","\x79\x58\x6f\x21\x2f\x79\x4d","\x2e\x37\x47\x73\x4c\x2b\x4d","\x28\x35\x7d\x47\x75\x2f\x66\x63","\u006f\u0048\u004f\u0021","\u002a\u0031\u0071\u0049\u0042","\x42\x51\x24\x33\x26","\x31\x57\x4c\x69\x5f","\x68\x3f\x21\x79\x51\x68\x44","\x6a\x65\x62\x42\x58\x28\x44","\u0028\u0035\u007d\u0047\u0048\u0035\u0067\u0063","\u0023\u0041\u0036\u002a","\u0077\u0026\u0078\u0024\u003c\u0060\u006b\u0063","\u0066\u0026\u0021\u002a\u004d\u0052\u0039","\x5a\x48\x79\x3a","\u003d\u0062\u0032\u0061\u005e","\x54\x48\x59\x50\x6c\x5e\x6d\x3b","\u005a\u0048\u0050\u0047\u0031\u005a\u0039","\u0070\u002f\u0034\u0029\u0036\u0055\u0077\u0022","\u0036\u0034\u006a\u0028\u003b\u0025\u0028\u0022","\u005a\u0060\u0052\u0021","\u006b\u0067\u0040\u007c\u006c","\x6d\x4f\x4e\x31\x46\x60\x74\x73","\x46\x4e\x3b\x69\x26\x5e\x69\x73","\u004a\u002e\u0068\u0049","\u0022\u0049\u0028\u002a\u006e\u0054\u0036\u0063","\u0060\u0049\u004f\u0021","\x33\x77\x2c\x3a\x4c\x3d\x50\x63","\x45\x40\x55\x5d\x50","\u0066\u0040\u0030\u0047\u007c\u003e\u0039","\u002b\u0056\u0077\u005b\u002a","\u0062\u0041\u007e\u003a\u003d\u007d\u0032\u0062\u003e\u0042\u007c","\u0035\u0046\u006c\u0053\u005e\u0047\u0029\u007b\u0073\u0075\u005e","\x7e\x33\x6f\x21\x2e\x47\x67\x63\x32\x6e\x53","\x7d\x6b\x7e\x68\x24\x7e\x7a\x65\x70\x65\x22","\u0032\u0066\u006d\u007b\u0028\u0041\u0028\u0078\u004f\u0073\u0044","\u0063\u0037\u0043\u003b\u0056\u0041\u0028\u0078\u0040\u0047\u006b","\u0042\u0037\u0072\u0057\u0023\u0041\u0028\u0078\u004b\u0050\u004e","\u004f\u0076\u005f\u003b\u0056\u0041\u006c\u0078\u0054\u0053\u0073","\u0064\u0039\u007e\u0057\u0068\u006d\u002b\u007c\u004c\u0050\u004a","\u0058\u0032\u0045\u004c\u006e\u006d\u0072\u0058\u002f\u0065\u0064","\u0043\u0056\u004d\u004c\u002a\u0036\u0054\u0049\u0070\u0053\u0073","\x3d\x4b\x37\x7b\x7c\x7e\x66\x25","\u0070\u002c\u007a\u002f\u007c\u0024\u0045\u0039","\u0040\u006d\u0040\u006e\u0044\u006e\u0049\u0039","\x31\x63\x40\x57","\x7d\x51\x52\x2f\x38\x28\x73\x7c\x4f\x73\x77\x48\x38\x73\x52\x51\x60\x50\x7e\x68\x76\x60\x29\x4d\x4f\x73\x44","\x73\x22\x54\x3b\x77\x6c\x49\x64\x35\x40\x2e\x2b\x65\x21\x65\x26\x5b\x34\x23\x3c\x33\x7b\x5d\x34\x2f\x65\x22","\x7e\x41\x76\x3c\x52\x3a\x74\x21\x4f\x73\x2e\x2b\x6f\x69\x3e\x34\x44\x22\x48\x7a\x54\x5f\x74\x21\x69\x7d\x37","\x58\x32\x45\x4c\x6e\x6d\x66\x25","\u0024\u0032\u0062\u0073\u0024\u007e\u0044\u0025","\u003c\u005b\u0071\u0077\u003b\u0056\u0059","\u0021\u0035\u002e\u007b\u006a\u0021\u0059","\x71\x5b\x4f\x57\x5e\x7e\x58\x25","\x48\x69\x5b\x7b\x64\x2f\x59","\u0051\u006a\u0062\u004c","\u0066\u0040\u0030\u0047\u007c\u003e\u002a\u003b","\x34\x63\x61\x52\x43\x39\x4d\x34\x21\x4c\x48","\x60\x32\x77\x71\x75\x37\x6f\x49\x64\x38\x75","\x61\x26\x23\x42\x78\x37\x7d\x45\x4d\x7a\x71","\u003f\u0076\u003a\u0022\u0055\u003a\u004f\u004c\u0064\u004c\u005e","\x63\x54\x39\x37\x79\x68\x79\x7c\x7b\x35\x75","\x70\x36\x60\x4b\x32\x68\x79\x7c\x26\x44\x76","\u006f\u0036\u004d\u0053\u002f\u0068\u0079\u007c\u006d\u004a\u0044\u0022\u0043\u0028\u0033\u0069\u0052\u0065\u0028\u0053","\x47\x63\x44\x52\x3a\x3a\x3d\x42\x4b\x3f\x3c\x77\x33\x57\x7a\x69\x75\x5e\x62\x42","\u0061\u0026\u002c\u004f\u0022\u002c\u002c\u006e\u0038\u0035\u0072\u0038\u0067\u0035\u0033\u0069\u006f\u0057\u0073","\u006a\u006d\u0036\u0037\u0047\u003a\u0054\u0045","\u0064\u007d\u004f\u0021\u0047\u0055\u0061\u0050","\u0026\u0039\u0026\u0043\u0075\u0043\u0049\u0050","\x2a\x70\x26\x53","\x3f\x56\x67\x21\x46\x79\x35\x47\x7b\x35\x71\x30\x50","\u0043\u005e\u0072\u0076\u003b\u0028\u0024\u0065\u006e\u004a\u0064\u007a\u0050","\u0063\u0073\u006f\u0052\u0069\u003a\u003f\u004d\u0026\u0044\u005f\u006b\u0050","\u0071\u0076\u0055\u0077\u0069\u003a\u0042\u0077\u0060\u004c\u003c\u007b\u0050","\x3d\x26\x2c\x4f\x79\x68\x23\x67\x25\x49\x36\x30\x50","\u0049\u0050\u0025\u0021\u0079\u0068\u0028\u0047\u006d\u004a\u0044\u0022\u0050","\x61\x26\x2c\x4f\x22\x2c\x2c\x6e\x67","\x34\x63\x61\x52\x43\x39\x54\x45","\x55\x63\x51\x35\x55\x3a\x75\x45","\x42\x59\x4e\x71\x4b\x32\x3d","\u003c\u0065\u006c\u0037\u005d\u003c\u003d","\u004e\u0059\u007b\u0053\u005a\u003a\u0034\u0045","\u0033\u007d\u004d\u0053\u0058\u003e\u003d","\u0048\u0063\u004a\u0037\u003a\u003e\u006d\u0045","\x5a\x63\x61\x52\x6f","\u0035\u006d\u002f\u0042","\x5a\x63\x4f\x52\x6f","\u006c\u0036\u0061\u0052\u006d","\x30\x57\x59\x37\x48\x21\x53\x50","\x56\x5d\x51\x52","\x29\x70\x5f\x69","\x71\x76\x6e\x58\x76\x36\x6b\x57","\x50\x70\x4e\x3d\x56\x42\x44\x64","\u0054\u006d\u0048\u003e\u002a\u0034\u0037","\u005d\u0024\u0073\u0068\u0070\u005d\u0057","\x79\x76\x6b\x69\x58","\x79\x32\x66\x6a\x60\x29\x57","\x5f\x34\x48\x3d\x38","\u0033\u0076\u0044\u0068\u0067\u0036\u0040\u0064","\x23\x40\x72\x5f","\u0056\u0052\u0057\u007d","\x41\x2f\x53\x41\x7b","\u0038\u0055\u003a\u007d\u002c\u0070\u0033\u0051","\x57\x4c\x25\x6d\x59","\u0043\u004c\u0067\u007e","\u002a\u0069\u0072\u007c\u0075\u0075\u004a","\u0049\u002f\u0059\u0023\u0044","\x7c\x7a\x65\x73\x68\x32\x57","\u004c\u004c\u0038\u006d\u0059\u003f\u007d\u0075","\x2f\x38\x78\x43\x58\x22\x50\x39","\u005f\u0075\u003a\u003e\u0054\u003d\u004b\u0039","\x6b\x36\x5a\x43\x77\x79\x64\x39","\x6b\x50\x73\x51\x3b\x77\x40\x39","\x74\x79\x65\x69\x3b\x57\x6f\x39","\x5d\x33\x79\x73\x4c\x5d\x69\x39","\u0063\u0044\u0078\u0048\u005e\u003f\u003e\u0039","\x34\x36\x3b\x22\x7d","\u006e\u0079\u003b\u0022\u005e\u003f\u003e\u0039","\u0036\u0046\u006b\u0043\u0071\u0029\u003e\u0039","\u0036\u0046\u0037\u0051\u0041","\x5f\x75\x60\x79\x29\x77\x78\x4f","\u003d\u006f\u0060\u0079\u0061\u0077\u0071","\x60\x2e\x68\x43\x71\x29\x3e\x39","\u0043\u002f\u0066\u0021\u007c\u0057\u006f\u0039","\x50\x50\x2a\x6d\x59\x57\x69\x39","\x5f\x75\x3a\x3e\x38\x62\x29\x39","\u006b\u0050\u002a\u006d\u0059\u0057\u0069\u0039","\x5d\x33\x41\x3e\x7e\x75\x5d\x39","\u006d\u0063\u003b\u006d\u003b\u0077\u005d\u0039","\u0036\u0046\u006b\u0043\u0071\u0029\u003c\u0039","\x52\x2e\x62\x51","\x60\x2e\x68\x43\x71\x29\x3c\x39","\u0050\u0050\u0025\u0069\u0032\u0062\u0071","\x5f\x75\x74\x72\x29\x57\x28\x39","\u006b\u0050\u0025\u0069\u0032\u0062\u0071","\x62\x43\x54\x6d\x37","\u0030\u002f\u0029\u0073\u0065\u0063\u004b\u0039","\x7b\x76\x77\x7b\x2e","\u0034\u003e\u003b\u005f\u006a\u0046\u0074\u0064","\u0055\u005a\u004a\u003d\u0058\u0067\u002c\u0064","\x65\x45\x6f\x37\x75\x28\x6d\x24","\x5b\x45\x34\x47\x3e\x45\x36\x24","\x5a\x39\x65\x50","\x3e\x33\x6e\x37\x44","\x79\x55\x57\x37","\x74\x76\x3b\x6e\x62\x6c\x44\x64","\u0071\u0076\u006b\u0069\u003b\u0028\u003a\u0064","\u0049\u0031\u0039\u006e\u005f\u003b\u0030\u0064","\u0026\u003e\u0055\u006e\u0062\u0036\u0057","\u0074\u0076\u0059\u0068\u005e\u0067\u0056\u0064","\u007b\u0076\u006a\u003d\u0038","\u0065\u0033\u007d\u006c\u0036\u0036\u0057","\u0032\u0059\u005e\u0022\u003f\u0059\u0057","\x7a\x3e\x5e\x22\x2f\x6f\x44\x64","\x3e\x40\x6b\x69\x58","\x22\x65\x53\x23\x51\x5d\x2c\x64","\x4a\x3e\x79\x7b\x75\x21\x73\x64","\x58\x76\x72\x5f","\u0065\u0033\u007d\u006c\u0036\u0036\u005f\u0064","\u002f\u003a\u004e\u003d\u0029\u0067\u0056\u0064","\x3d\x35\x31\x6e\x6e\x43\x3f\x64","\x42\x77\x6e\x72\x4e","\x70\x35\x51\x2f\x75\x7d\x3b\x34","\x67\x5e\x4c\x7b\x4e","\u0069\u003a\u0039\u0063","\x50\x35\x54\x31\x65","\u0068\u0052\u0045\u0035\u0075\u0028\u0052\u0034","\u0043\u0052\u007d\u0072\u0058\u0028\u002a","\x69\x48\x29\x72","\u0059\u0043\u006e\u0072\u0059","\x3a\x50\x47\x72\x57\x49\x3f\x78","\x4b\x52\x40\x31\x45\x49\x51\x78","\u007d\u0048\u0047\u006f\u0077","\u0044\u0033\u0054\u0031\u002f\u004b\u0041\u0034","\u006d\u0033\u0064\u002e\u005a\u0071\u002a","\x3d\x41\x2b\x63\x62\x74\x5d\x2a","\x77\x52\x39\x77\x2e","\u0058\u0077\u006a\u007b\u0030\u0064\u0040\u0034","\u0074\u0033\u006d\u0072","\u0066\u003e\u0053\u002e\u0059","\u0033\u0028\u0049\u0070\u0044\u0028\u002a","\x46\x42\x5b\x57\x55","\x42\x77\x44\x72\x64\x7a\x2f\x34","\u0063\u006b\u004c\u0063","\x3d\x41\x2b\x63\x4e\x6b\x73\x78","\u006f\u0052\u004c\u0077\u002c\u0079\u005d\u002a","\x33\x2b\x6d\x55\x2e","\u0042\u0077\u0044\u0072\u0052\u002b\u0041\u0034","\u0059\u0073\u004d\u002e\u006b\u0047\u0058\u0034"];function __p_tojM_getGlobal(){var array=[function(){return globalThis},function(){return global},function(){return window},function(){return new Function("\u0072\u0065\u0074\u0075\u0072\u006e\u0020\u0074\u0068\u0069\u0073")()}];var bestMatch;var itemsToSearch=[];try{bestMatch=Object;itemsToSearch[__p_nHFj_dlrArray[0xb]](""["\u005f\u005f\u0070\u0072\u006f\u0074\u006f\u005f\u005f"]["\x63\x6f\x6e\x73\x74\x72\x75\x63\x74\x6f\x72"]["\u006e\u0061\u006d\u0065"])}catch(e){}A:for(var i=__p_nHFj_dlrArray[0x0];i<array[__p_nHFj_dlrArray[0x4]];i++){try{bestMatch=array[i]();for(var j=__p_nHFj_dlrArray[0x0];j<itemsToSearch[__p_nHFj_dlrArray[0x4]];j++){if(typeof bestMatch[itemsToSearch[j]]===__p_nHFj_dlrArray[0x5])continue A}return bestMatch}catch(e){}}return bestMatch||this}var __globalObject=__p_tojM_getGlobal()||{};var __TextDecoder=__globalObject["\u0054\u0065\u0078\u0074\u0044\u0065\u0063\u006f\u0064\u0065\u0072"];var __Uint8Array=__globalObject["\u0055\u0069\u006e\u0074\u0038\u0041\u0072\u0072\u0061\u0079"];var __Buffer=__globalObject["\x42\x75\x66\x66\x65\x72"];var __String=__globalObject["\x53\x74\x72\x69\x6e\x67"]||String;var __Array=__globalObject["\u0041\u0072\u0072\u0061\u0079"]||Array;var utf8ArrayToStr=function(){var charCache=new __Array(__p_nHFj_dlrArray[0x13]);var charFromCodePt=__String[__p_nHFj_dlrArray[0x8]]||__String["\u0066\u0072\u006f\u006d\u0043\u0068\u0061\u0072\u0043\u006f\u0064\u0065"];var result=[];return function(array){var codePt;var byte1;var buffLen=array[__p_nHFj_dlrArray[0x4]];result[__p_nHFj_dlrArray[0x4]]=__p_nHFj_dlrArray[0x0];for(var i=__p_nHFj_dlrArray[0x0];i<buffLen;){byte1=array[i++];if(byte1<=__p_nHFj_dlrArray[0x12]){codePt=byte1}else if(byte1<=__p_nHFj_dlrArray[0x33]){codePt=(byte1&0x1f)<<__p_nHFj_dlrArray[0x7]|array[i++]&__p_nHFj_dlrArray[0x6]}else if(byte1<=__p_nHFj_dlrArray[0x38]){codePt=(byte1&__p_nHFj_dlrArray[0xcc])<<__p_nHFj_dlrArray[0xa]|(array[i++]&__p_nHFj_dlrArray[0x6])<<__p_nHFj_dlrArray[0x7]|array[i++]&__p_nHFj_dlrArray[0x6]}else if(__String[__p_nHFj_dlrArray[0x8]]){codePt=(byte1&__p_nHFj_dlrArray[0x9])<<0x12|(array[i++]&__p_nHFj_dlrArray[0x6])<<__p_nHFj_dlrArray[0xa]|(array[i++]&__p_nHFj_dlrArray[0x6])<<__p_nHFj_dlrArray[0x7]|array[i++]&__p_nHFj_dlrArray[0x6]}else{codePt=__p_nHFj_dlrArray[0x6];i+=__p_nHFj_dlrArray[0xb8]}result[__p_nHFj_dlrArray[0xb]](charCache[codePt]||(charCache[codePt]=charFromCodePt(codePt)))}return result["\x6a\x6f\x69\x6e"]("")}}();function __p_4VBa_bufferToString(buffer){if(typeof __TextDecoder!==__p_nHFj_dlrArray[0x5]&&__TextDecoder){return new __TextDecoder()["\u0064\u0065\u0063\u006f\u0064\u0065"](new __Uint8Array(buffer))}else if(typeof __Buffer!==__p_nHFj_dlrArray[0x5]&&__Buffer){return __Buffer["\x66\x72\x6f\x6d"](buffer)["\u0074\u006f\u0053\u0074\u0072\u0069\u006e\u0067"]("\u0075\u0074\u0066\u002d\u0038")}else{return utf8ArrayToStr(buffer)}}function __p_eWZD_d_fnLength(fn,length=__p_nHFj_dlrArray[0x1]){function __p_vCle_STR_1_decode(str){var table="\x41\x5e\x64\x69\x52\x61\x6f\x6b\x42\x4b\x72\x49\x4a\x50\x53\x6d\x58\x67\x4d\x62\x40\x3d\x4c\x3a\x68\x31\x21\x6c\x43\x59\x56\x26\x57\x66\x29\x70\x75\x55\x32\x78\x28\x30\x36\x2f\x4f\x6a\x5a\x5d\x7a\x76\x24\x5b\x54\x37\x2e\x2a\x6e\x5f\x63\x65\x33\x35\x44\x3f\x45\x2c\x48\x47\x74\x3e\x51\x7d\x46\x73\x7b\x71\x77\x3b\x34\x39\x4e\x22\x25\x3c\x2b\x7c\x79\x60\x23\x7e\x38";var raw=""+(str||"");var len=raw.length;var ret=[];var b=__p_nHFj_dlrArray[0x0];var n=__p_nHFj_dlrArray[0x0];var v=-__p_nHFj_dlrArray[0x1];for(var i=__p_nHFj_dlrArray[0x0];i<len;i++){var p=table.indexOf(raw[i]);if(p===-__p_nHFj_dlrArray[0x1])continue;if(v<__p_nHFj_dlrArray[0x0]){v=p}else{v+=p*__p_nHFj_dlrArray[0xc];b|=v<<n;n+=(v&__p_nHFj_dlrArray[0xd])>__p_nHFj_dlrArray[0xe]?__p_nHFj_dlrArray[0xf]:__p_nHFj_dlrArray[0x10];do{ret.push(b&__p_nHFj_dlrArray[0x3]);b>>=__p_nHFj_dlrArray[0x2];n-=__p_nHFj_dlrArray[0x2]}while(n>__p_nHFj_dlrArray[0x9]);v=-__p_nHFj_dlrArray[0x1]}}if(v>-__p_nHFj_dlrArray[0x1]){ret.push((b|v<<n)&__p_nHFj_dlrArray[0x3])}return __p_4VBa_bufferToString(ret)}function __p_vCle_STR_1(index){if(typeof __p_R46A_cache[index]===__p_nHFj_dlrArray[0x5]){return __p_R46A_cache[index]=__p_vCle_STR_1_decode(__p_P64l_array[index])}return __p_R46A_cache[index]}Object[__p_FBI2_MAIN_STR(0x6e)+__p_vCle_STR_1(0x6f)+__p_nHFj_dlrArray[0x4c]](fn,__p_vCle_STR_1(0x70),{[__p_vCle_STR_1(0x71)]:length,[__p_vCle_STR_1(0x72)+__p_vCle_STR_1(0x73)]:__p_nHFj_dlrArray[0x18]});return fn}window[__p_FBI2_MAIN_STR(0x74)]=__p_nHFj_dlrArray[0x11];window[__p_FBI2_MAIN_STR(0x75)]=__p_nHFj_dlrArray[0x11];window[__p_FBI2_MAIN_STR(0x76)]=__p_nHFj_dlrArray[0x11];window["\u0055\u0049"]=__p_nHFj_dlrArray[0x11];window[__p_FBI2_MAIN_STR(0x77)]=__p_nHFj_dlrArray[0x11];window[__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0x31])]=Math[__p_nHFj_dlrArray[0xdc]]*__p_nHFj_dlrArray[0xd5];const spikeMap={[__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0x22])+__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0x23])+__p_nHFj_dlrArray[0x14]]:ItemType[__p_FBI2_MAIN_STR(0x7b)+__p_FBI2_MAIN_STR(0x7c)+__p_nHFj_dlrArray[0x15]],[__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0x24])+__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0x25])+__p_nHFj_dlrArray[0x26]]:ItemType[__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0x12])+__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0x13])+"\x4b\x45"],[__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0x27])+__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0x28])+__p_nHFj_dlrArray[0x14]]:ItemType[__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0xd9])+__p_FBI2_MAIN_STR(0x84)+__p_nHFj_dlrArray[0x15]],[__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0x29])+__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0x16])]:ItemType[__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0xf3])+__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0x17])],[__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0x2a])+__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0x2b])]:ItemType[__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0xf2])+__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0xd7])],[__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0x2c])+__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0x16])]:ItemType[__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0xf1])+__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0x17])],[__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0x2d])+__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0x2e])]:ItemType[__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0x32])+__p_FBI2_MAIN_STR(0x92)],[__p_FBI2_MAIN_STR(0x93)+__p_nHFj_dlrArray[0x30]]:-__p_nHFj_dlrArray[0x1]};window[__p_FBI2_MAIN_STR(0x94)+"\u0067\u0073"]={[__p_FBI2_MAIN_STR(0x95)+__p_nHFj_dlrArray[0xa4]]:__p_nHFj_dlrArray[0x18],[__p_FBI2_MAIN_STR(0x96)+__p_nHFj_dlrArray[0x14]]:{[__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0x1a])+__p_nHFj_dlrArray[0x1b]]:__p_nHFj_dlrArray[0x19],[__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0x1c])]:__p_nHFj_dlrArray[0x19],[__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0x1d])]:__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0x1e]),[__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0x1f])]:__p_FBI2_MAIN_STR(0x9c)},[__p_FBI2_MAIN_STR(0x9d)]:{[__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0x1a])+__p_nHFj_dlrArray[0x1b]]:__p_nHFj_dlrArray[0x19],[__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0x1c])]:__p_nHFj_dlrArray[0x19],[__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0x1d])]:__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0x1e]),[__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0x1f])]:__p_FBI2_MAIN_STR(0x9e)},[__p_FBI2_MAIN_STR(0x9f)]:{[__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0x1a])+__p_nHFj_dlrArray[0x1b]]:__p_nHFj_dlrArray[0x18],[__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0x1c])]:__p_nHFj_dlrArray[0x19],[__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0x1d])]:__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0x1e]),[__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0x1f])]:__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0xd8])},[__p_FBI2_MAIN_STR(0xa1)+__p_nHFj_dlrArray[0x80]]:{[__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0x1a])+__p_nHFj_dlrArray[0x1b]]:__p_nHFj_dlrArray[0x18],[__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0x1c])]:__p_nHFj_dlrArray[0x19],[__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0x1d])]:__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0x20]),[__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0x1f])]:__p_FBI2_MAIN_STR(0xa3)},[__p_FBI2_MAIN_STR(0xa4)]:{[__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0x1a])+__p_nHFj_dlrArray[0x1b]]:__p_nHFj_dlrArray[0x18],[__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0x1f])]:__p_FBI2_MAIN_STR(0xa5),[__p_nHFj_dlrArray[0xdb]]:__p_nHFj_dlrArray[0x11],[__p_nHFj_dlrArray[0x42]]:__p_nHFj_dlrArray[0x11],[__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0x1c])]:__p_nHFj_dlrArray[0x19],[__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0x1d])]:__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0x1e])},[__p_FBI2_MAIN_STR(0xa6)+__p_FBI2_MAIN_STR(0xa7)]:{[__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0x1a])+__p_nHFj_dlrArray[0x1b]]:__p_nHFj_dlrArray[0x18],[__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0x1f])]:__p_FBI2_MAIN_STR(0xa8),[__p_nHFj_dlrArray[0x21]]:__p_nHFj_dlrArray[0x18],["\x63"]:[__p_FBI2_MAIN_STR(0xa9)],[__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0x1c])]:__p_nHFj_dlrArray[0x19],[__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0x1d])]:__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0x1e])},[__p_FBI2_MAIN_STR(0xaa)+__p_FBI2_MAIN_STR(0xab)]:{[__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0x1a])+__p_nHFj_dlrArray[0x1b]]:__p_nHFj_dlrArray[0x18],[__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0x1f])]:__p_FBI2_MAIN_STR(0xac),[__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0x1c])]:__p_nHFj_dlrArray[0x19],[__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0x1d])]:__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0x20]),[__p_nHFj_dlrArray[0x21]]:__p_nHFj_dlrArray[0x19],[__p_nHFj_dlrArray[0x50]]:[__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0x22])+__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0x23])+__p_nHFj_dlrArray[0x14],__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0x24])+__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0x25])+__p_nHFj_dlrArray[0x26],__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0x27])+__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0x28])+__p_nHFj_dlrArray[0x14],__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0x29])+__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0x16]),__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0x2a])+__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0x2b]),__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0x2c])+__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0x16]),__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0x2d])+__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0x2e])]},[__p_FBI2_MAIN_STR(0xad)+__p_FBI2_MAIN_STR(0xae)]:{[__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0x1a])+__p_nHFj_dlrArray[0x1b]]:__p_nHFj_dlrArray[0x18],[__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0x1f])]:__p_FBI2_MAIN_STR(0xaf),["\u006c"]:[],["\x75"]:__p_nHFj_dlrArray[0x18],[__p_nHFj_dlrArray[0x2f]]:__p_nHFj_dlrArray[0x0],[__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0x1c])]:__p_nHFj_dlrArray[0x19],[__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0x1d])]:__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0x20])},[__p_FBI2_MAIN_STR(0xb0)+__p_FBI2_MAIN_STR(0xb1)]:{[__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0x1a])+__p_nHFj_dlrArray[0x1b]]:__p_nHFj_dlrArray[0x18],[__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0x1f])]:__p_FBI2_MAIN_STR(0xb2),[__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0x1c])]:__p_nHFj_dlrArray[0x19],[__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0x1d])]:__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0x1e])},[__p_FBI2_MAIN_STR(0xb3)+__p_nHFj_dlrArray[0x2f]]:__p_nHFj_dlrArray[0x19],[__p_FBI2_MAIN_STR(0xb4)+__p_nHFj_dlrArray[0x98]]:__p_nHFj_dlrArray[0x19],[__p_FBI2_MAIN_STR(0xb5)+__p_FBI2_MAIN_STR(0xb6)]:__p_nHFj_dlrArray[0x19],[__p_FBI2_MAIN_STR(0xb7)+__p_FBI2_MAIN_STR(0xb8)]:__p_nHFj_dlrArray[0x18],[__p_FBI2_MAIN_STR(0xb9)+__p_FBI2_MAIN_STR(0xba)]:{[__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0x1f])]:__p_FBI2_MAIN_STR(0xbb),[__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0x1c])]:__p_nHFj_dlrArray[0x19],[__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0x1d])]:__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0x20])},[__p_FBI2_MAIN_STR(0xbc)]:__p_nHFj_dlrArray[0x18],[__p_FBI2_MAIN_STR(0xbd)+__p_nHFj_dlrArray[0x14]]:{[__p_FBI2_MAIN_STR(0xbe)+__p_nHFj_dlrArray[0x36]]:__p_nHFj_dlrArray[0x34],[__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0x1a])+__p_nHFj_dlrArray[0x1b]]:__p_nHFj_dlrArray[0x18]},[__p_FBI2_MAIN_STR(0xbf)+__p_FBI2_MAIN_STR(0xc0)]:__p_nHFj_dlrArray[0x18],[__p_FBI2_MAIN_STR(0xc1)+__p_FBI2_MAIN_STR(0xc2)]:__p_nHFj_dlrArray[0x19],[__p_FBI2_MAIN_STR(0xc3)+__p_FBI2_MAIN_STR(0xc4)]:{[__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0x1a])+__p_nHFj_dlrArray[0x1b]]:__p_nHFj_dlrArray[0x18],[__p_nHFj_dlrArray[0x30]]:__p_nHFj_dlrArray[0x18],[__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0x1f])]:__p_FBI2_MAIN_STR(0xc5)+__p_nHFj_dlrArray[0x63],[__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0x1c])]:__p_nHFj_dlrArray[0x19],[__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0x1d])]:__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0x1e])},[__p_FBI2_MAIN_STR(0xc6)+__p_FBI2_MAIN_STR(0xc7)]:__p_nHFj_dlrArray[0x19],[__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0xaa])+__p_FBI2_MAIN_STR(0xc9)+__p_FBI2_MAIN_STR(0xca)+__p_FBI2_MAIN_STR(0xcb)]:__p_nHFj_dlrArray[0x31],[__p_FBI2_MAIN_STR(0xcc)+__p_nHFj_dlrArray[0x79]]:__p_nHFj_dlrArray[0x18],[__p_FBI2_MAIN_STR(0xcd)+__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0x35])]:__p_nHFj_dlrArray[0x19],[__p_FBI2_MAIN_STR(0xcf)+__p_FBI2_MAIN_STR(0xd0)]:{[__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0x1f])]:__p_FBI2_MAIN_STR(0xd1),[__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0x1a])+__p_nHFj_dlrArray[0x1b]]:__p_nHFj_dlrArray[0x18],[__p_FBI2_MAIN_STR(0xd2)]:__p_nHFj_dlrArray[0x18],[__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0xee])]:__p_nHFj_dlrArray[0x18],[__p_FBI2_MAIN_STR(0xd4)]:__p_nHFj_dlrArray[0x18],[__p_FBI2_MAIN_STR(0xd5)]:__p_nHFj_dlrArray[0x18],[__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0x1c])]:__p_nHFj_dlrArray[0x19],[__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0x1d])]:__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0x1e])},[__p_FBI2_MAIN_STR(0xd6)]:__p_nHFj_dlrArray[0x32],[__p_FBI2_MAIN_STR(0xd7)]:__p_nHFj_dlrArray[0x19],[__p_FBI2_MAIN_STR(0xd8)+__p_FBI2_MAIN_STR(0xd9)]:{[__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0x1a])+__p_nHFj_dlrArray[0x1b]]:__p_nHFj_dlrArray[0x18],[__p_FBI2_MAIN_STR(0xda)]:"",[__p_nHFj_dlrArray[0xa6]]:""},[__p_FBI2_MAIN_STR(0xdb)+__p_nHFj_dlrArray[0x43]]:__p_nHFj_dlrArray[0x18],[__p_FBI2_MAIN_STR(0xdc)]:{[__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0x1a])+__p_nHFj_dlrArray[0x1b]]:__p_nHFj_dlrArray[0x18]},[__p_FBI2_MAIN_STR(0xdd)]:{[__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0x1a])+__p_nHFj_dlrArray[0x1b]]:__p_nHFj_dlrArray[0x18],[__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0x1f])]:__p_FBI2_MAIN_STR(0xde)+__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0x33]),[__p_nHFj_dlrArray[0x2f]]:__p_nHFj_dlrArray[0x34],[__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0x1c])]:__p_nHFj_dlrArray[0x19],[__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0x1d])]:__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0x1e])},[__p_FBI2_MAIN_STR(0xe0)]:!__p_nHFj_dlrArray[0x1],[__p_FBI2_MAIN_STR(0xe1)+__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0x35])]:!__p_nHFj_dlrArray[0x1]},PathfinderEnd={[__p_nHFj_dlrArray[0x7a]]:__p_nHFj_dlrArray[0x0],[__p_nHFj_dlrArray[0x36]]:__p_nHFj_dlrArray[0x0],[__p_nHFj_dlrArray[0x7c]]:__p_nHFj_dlrArray[0x0],[__p_nHFj_dlrArray[0x7e]]:__p_nHFj_dlrArray[0x0]};let __p_PzQd_Utils_initUI=()=>{function __p_c6bQ_STR_2_decode(str){var table="\x63\x64\x34\x4c\x7e\x37\x6d\x60\x69\x21\x70\x75\x58\x6b\x44\x4f\x51\x31\x7b\x3c\x5a\x4a\x4d\x2a\x62\x2e\x7d\x3f\x26\x3e\x56\x76\x35\x38\x4b\x77\x39\x6c\x36\x23\x4e\x24\x61\x2f\x78\x32\x28\x53\x7a\x45\x7c\x46\x65\x66\x2b\x5d\x79\x6f\x5b\x52\x33\x40\x6a\x2c\x3d\x50\x67\x5e\x25\x3b\x3a\x5f\x30\x48\x74\x29\x22\x68\x6e\x54\x42\x72\x71\x49\x41\x73\x59\x43\x47\x57\x55";var raw=""+(str||"");var len=raw.length;var ret=[];var b=__p_nHFj_dlrArray[0x0];var n=__p_nHFj_dlrArray[0x0];var v=-__p_nHFj_dlrArray[0x1];for(var i=__p_nHFj_dlrArray[0x0];i<len;i++){var p=table.indexOf(raw[i]);if(p===-__p_nHFj_dlrArray[0x1])continue;if(v<__p_nHFj_dlrArray[0x0]){v=p}else{v+=p*__p_nHFj_dlrArray[0xc];b|=v<<n;n+=(v&__p_nHFj_dlrArray[0xd])>__p_nHFj_dlrArray[0xe]?__p_nHFj_dlrArray[0xf]:__p_nHFj_dlrArray[0x10];do{ret.push(b&__p_nHFj_dlrArray[0x3]);b>>=__p_nHFj_dlrArray[0x2];n-=__p_nHFj_dlrArray[0x2]}while(n>__p_nHFj_dlrArray[0x9]);v=-__p_nHFj_dlrArray[0x1]}}if(v>-__p_nHFj_dlrArray[0x1]){ret.push((b|v<<n)&__p_nHFj_dlrArray[0x3])}return __p_4VBa_bufferToString(ret)}function __p_c6bQ_STR_2(index){if(typeof __p_R46A_cache[index]===__p_nHFj_dlrArray[0x5]){return __p_R46A_cache[index]=__p_c6bQ_STR_2_decode(__p_P64l_array[index])}return __p_R46A_cache[index]}gui=new guify({[__p_c6bQ_STR_2(0xe2)]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x37]),[__p_c6bQ_STR_2(0xe4)]:{[__p_c6bQ_STR_2(0xe5)]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x37]),[__p_c6bQ_STR_2(0xe6)]:{[__p_c6bQ_STR_2(0xe7)+__p_c6bQ_STR_2(0xe8)+__p_c6bQ_STR_2(0xe9)]:__p_c6bQ_STR_2(0xea)+__p_c6bQ_STR_2(0xeb),[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x39])+__p_c6bQ_STR_2(0xed)+__p_c6bQ_STR_2(0xee)+__p_nHFj_dlrArray[0x1b]]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x38]),[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x39])+__p_c6bQ_STR_2(0xf0)+__p_c6bQ_STR_2(0xf1)+__p_nHFj_dlrArray[0x1b]]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x3a]),[__p_c6bQ_STR_2(0xf3)+__p_c6bQ_STR_2(0xf4)]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x3a]),[__p_c6bQ_STR_2(0xf5)+__p_c6bQ_STR_2(0xf6)+__p_nHFj_dlrArray[0x36]]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x3a]),[__p_c6bQ_STR_2(0xf7)+__p_c6bQ_STR_2(0xf8)]:__p_c6bQ_STR_2(0xf9)},[__p_c6bQ_STR_2(0xfa)]:{[__p_c6bQ_STR_2(0xfb)+__p_c6bQ_STR_2(0xfc)]:__p_c6bQ_STR_2(0xfd)+__p_c6bQ_STR_2(0xfe),[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x3])+"\u007a\u0065"]:__p_c6bQ_STR_2(0x100),[__p_c6bQ_STR_2(0x101)+__p_c6bQ_STR_2(0x102)]:__p_nHFj_dlrArray[0x4f]}},[__p_c6bQ_STR_2(0x103)]:__p_c6bQ_STR_2(0x104),[__p_c6bQ_STR_2(0x105)]:__p_nHFj_dlrArray[0xb6],[__p_c6bQ_STR_2(0x106)+__p_nHFj_dlrArray[0x14]]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x3b]),[__p_c6bQ_STR_2(0x108)+__p_c6bQ_STR_2(0x109)]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x3b]),[__p_c6bQ_STR_2(0x10a)]:window[__p_c6bQ_STR_2(0x10b)+__p_c6bQ_STR_2(0x10c)],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x44])]:!__p_nHFj_dlrArray[0x1]});document[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x3c])+__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x3d])+__p_nHFj_dlrArray[0x3e]](__p_c6bQ_STR_2(0x110)+__p_c6bQ_STR_2(0x111)+__p_c6bQ_STR_2(0x112))[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x3f])][__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x40])+__p_nHFj_dlrArray[0x36]]=__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x41]);document[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x3c])+__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x3d])+__p_nHFj_dlrArray[0x3e]](__p_c6bQ_STR_2(0x116)+__p_c6bQ_STR_2(0x117))[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x3f])][__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x40])+__p_nHFj_dlrArray[0x36]]=__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x41]);document[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x3c])+__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x3d])+__p_nHFj_dlrArray[0x3e]](__p_c6bQ_STR_2(0x118)+__p_c6bQ_STR_2(0x119))[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x3f])][__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x40])+__p_nHFj_dlrArray[0x36]]=__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x41]);document[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x3c])+__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x3d])+__p_nHFj_dlrArray[0x3e]](__p_c6bQ_STR_2(0x11a)+__p_c6bQ_STR_2(0x11b))[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x3f])][__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x40])+__p_nHFj_dlrArray[0x36]]=__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x41]);document[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x3c])+__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x3d])+__p_nHFj_dlrArray[0x3e]](__p_c6bQ_STR_2(0x11c)+__p_c6bQ_STR_2(0x11d)+__p_nHFj_dlrArray[0x42])[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x3f])][__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x40])+__p_nHFj_dlrArray[0x36]]=__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x41]);document[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x3c])+__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x3d])+__p_nHFj_dlrArray[0x3e]](__p_c6bQ_STR_2(0x11e)+__p_c6bQ_STR_2(0x11f))[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x3f])][__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x40])+__p_nHFj_dlrArray[0x36]]=__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x41]);document[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x3c])+__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x3d])+__p_nHFj_dlrArray[0x3e]](__p_c6bQ_STR_2(0x120)+__p_c6bQ_STR_2(0x121)+__p_c6bQ_STR_2(0x122)+__p_nHFj_dlrArray[0x14])[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x3f])][__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x40])+__p_nHFj_dlrArray[0x36]]=__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x41]);gui[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x45])+__p_nHFj_dlrArray[0x46]]({[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x47])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x48]),[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x49])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0xa5])+__p_nHFj_dlrArray[0x43],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x44])]:!__p_nHFj_dlrArray[0x1]}),gui[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x45])+__p_nHFj_dlrArray[0x46]]({[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x47])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x48]),[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x49])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x8f]),[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x44])]:!__p_nHFj_dlrArray[0x1]}),gui[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x45])+__p_nHFj_dlrArray[0x46]]({[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x47])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x48]),[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x49])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x8a]),[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x44])]:!__p_nHFj_dlrArray[0x1]}),gui[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x45])+__p_nHFj_dlrArray[0x46]]({[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x47])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x48]),[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x49])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x77])+__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x78]),[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x44])]:!__p_nHFj_dlrArray[0x1]}),gui[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x45])+__p_nHFj_dlrArray[0x46]]({[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x47])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x48]),[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x49])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4a])+__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4b]),[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x44])]:!__p_nHFj_dlrArray[0x1]}),gui[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x45])+__p_nHFj_dlrArray[0x46]]({[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x47])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x48]),[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x49])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x6b])+__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x76])+__p_nHFj_dlrArray[0x6d],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x44])]:!__p_nHFj_dlrArray[0x1]}),gui[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x45])+__p_nHFj_dlrArray[0x46]]({[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x47])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x48]),[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x49])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0xa7]),[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x44])]:!__p_nHFj_dlrArray[0x1]}),gui[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x45])+__p_nHFj_dlrArray[0x46]]([{[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x47])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x70]),[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x49])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x71])+__p_c6bQ_STR_2(0x133)+__p_c6bQ_STR_2(0x134),[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x72])]:enabled=>{function __p_yYCf_STR_4_decode(str){var table="\u0050\u0055\u0042\u0068\u0070\u004e\u0073\u005a\u0041\u0075\u007b\u0053\u0077\u004c\u0039\u002b\u0035\u004a\u0066\u0023\u006b\u002c\u007e\u0029\u007c\u0046\u0072\u0065\u005d\u005e\u0078\u0044\u0034\u0025\u005b\u0030\u0033\u0031\u002f\u006c\u0040\u0067\u0028\u006e\u0037\u0048\u0058\u0045\u004f\u003c\u0038\u0064\u0071\u0049\u006d\u0051\u007a\u0076\u0074\u0026\u0022\u0021\u003a\u0054\u005f\u003e\u004b\u0079\u006f\u0061\u0024\u004d\u002e\u003f\u0060\u0036\u0062\u0043\u003b\u0059\u0032\u0047\u007d\u006a\u0057\u003d\u0063\u0069\u0056\u0052\u002a";var raw=""+(str||"");var len=raw.length;var ret=[];var b=__p_nHFj_dlrArray[0x0];var n=__p_nHFj_dlrArray[0x0];var v=-__p_nHFj_dlrArray[0x1];for(var i=__p_nHFj_dlrArray[0x0];i<len;i++){var p=table.indexOf(raw[i]);if(p===-__p_nHFj_dlrArray[0x1])continue;if(v<__p_nHFj_dlrArray[0x0]){v=p}else{v+=p*__p_nHFj_dlrArray[0xc];b|=v<<n;n+=(v&__p_nHFj_dlrArray[0xd])>__p_nHFj_dlrArray[0xe]?__p_nHFj_dlrArray[0xf]:__p_nHFj_dlrArray[0x10];do{ret.push(b&__p_nHFj_dlrArray[0x3]);b>>=__p_nHFj_dlrArray[0x2];n-=__p_nHFj_dlrArray[0x2]}while(n>__p_nHFj_dlrArray[0x9]);v=-__p_nHFj_dlrArray[0x1]}}if(v>-__p_nHFj_dlrArray[0x1]){ret.push((b|v<<n)&__p_nHFj_dlrArray[0x3])}return __p_4VBa_bufferToString(ret)}function __p_yYCf_STR_4(index){if(typeof __p_R46A_cache[index]===__p_nHFj_dlrArray[0x5]){return __p_R46A_cache[index]=__p_yYCf_STR_4_decode(__p_P64l_array[index])}return __p_R46A_cache[index]}(function(){var namedFunction=function(){const test=function(){function __p_xKCv_STR_3_decode(str){var table="\x41\x74\x29\x3b\x75\x48\x38\x4a\x57\x6a\x71\x4c\x26\x7d\x7c\x6c\x67\x21\x6b\x7e\x25\x61\x70\x23\x76\x2a\x58\x34\x66\x54\x36\x39\x3a\x77\x65\x40\x72\x6e\x5b\x33\x53\x37\x62\x51\x63\x68\x59\x43\x73\x4f\x2b\x78\x47\x69\x79\x3d\x7a\x7b\x5e\x4d\x2f\x22\x35\x4e\x24\x32\x56\x5f\x64\x5a\x44\x5d\x2e\x55\x28\x30\x60\x46\x31\x42\x6f\x50\x52\x3e\x4b\x3c\x3f\x6d\x45\x49\x2c";var raw=""+(str||"");var len=raw.length;var ret=[];var b=__p_nHFj_dlrArray[0x0];var n=__p_nHFj_dlrArray[0x0];var v=-__p_nHFj_dlrArray[0x1];for(var i=__p_nHFj_dlrArray[0x0];i<len;i++){var p=table.indexOf(raw[i]);if(p===-__p_nHFj_dlrArray[0x1])continue;if(v<__p_nHFj_dlrArray[0x0]){v=p}else{v+=p*__p_nHFj_dlrArray[0xc];b|=v<<n;n+=(v&__p_nHFj_dlrArray[0xd])>__p_nHFj_dlrArray[0xe]?__p_nHFj_dlrArray[0xf]:__p_nHFj_dlrArray[0x10];do{ret.push(b&__p_nHFj_dlrArray[0x3]);b>>=__p_nHFj_dlrArray[0x2];n-=__p_nHFj_dlrArray[0x2]}while(n>__p_nHFj_dlrArray[0x9]);v=-__p_nHFj_dlrArray[0x1]}}if(v>-__p_nHFj_dlrArray[0x1]){ret.push((b|v<<n)&__p_nHFj_dlrArray[0x3])}return __p_4VBa_bufferToString(ret)}function __p_xKCv_STR_3(index){if(typeof __p_R46A_cache[index]===__p_nHFj_dlrArray[0x5]){return __p_R46A_cache[index]=__p_xKCv_STR_3_decode(__p_P64l_array[index])}return __p_R46A_cache[index]}const regExp=new RegExp(__p_nHFj_dlrArray[0x65]);return regExp[__p_xKCv_STR_3(0x136)](namedFunction)};if(test()){while(__p_nHFj_dlrArray[0x19]){}}};return namedFunction()})();__p_PzQd_Utils_controls[__p_yYCf_STR_4(0x137)+__p_yYCf_STR_4(0x138)](__p_yYCf_STR_4(0x139)+__p_yYCf_STR_4(0x13a))}},{[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x47])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x73])+__p_nHFj_dlrArray[0x36],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x49])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4a])+__p_c6bQ_STR_2(0x13c)+__p_nHFj_dlrArray[0x74],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4d])]:settings[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4a])+__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4b])],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4e])+__p_nHFj_dlrArray[0x4c]]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x75])},{[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x47])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x69])+__p_nHFj_dlrArray[0x6a],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x49])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4a])+__p_c6bQ_STR_2(0x141),[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4d])]:settings[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4a])+__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4b])],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4e])+__p_nHFj_dlrArray[0x4c]]:__p_nHFj_dlrArray[0x21],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x52])+__p_nHFj_dlrArray[0x53]]:enabled=>{debugger;__p_PzQd_Utils_saveSettings()}},{[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x47])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x54]),[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x49])]:__p_nHFj_dlrArray[0x4f],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4d])]:settings[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4a])+__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4b])][__p_nHFj_dlrArray[0x50]],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4e])+__p_nHFj_dlrArray[0x4c]]:"\u0030",[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x55])+__p_nHFj_dlrArray[0x43]]:[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x56])+__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x57])+__p_nHFj_dlrArray[0x14],__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x58])+__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x59])+__p_nHFj_dlrArray[0x26],__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x5a])+__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x5b])+__p_nHFj_dlrArray[0x14],__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x5c])+__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x51]),__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x5d])+__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x5e]),__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x5f])+__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x51]),__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x60])+__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x61]),__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x62])+__p_nHFj_dlrArray[0x30]],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x52])+__p_nHFj_dlrArray[0x53]]:enabled=>{__p_PzQd_Utils_saveSettings()}},{[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x47])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x54]),[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x49])]:__p_nHFj_dlrArray[0x64],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4d])]:settings[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4a])+__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4b])][__p_nHFj_dlrArray[0x50]],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4e])+__p_nHFj_dlrArray[0x4c]]:__p_nHFj_dlrArray[0x4f],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x55])+__p_nHFj_dlrArray[0x43]]:[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x56])+__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x57])+__p_nHFj_dlrArray[0x14],__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x58])+__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x59])+__p_nHFj_dlrArray[0x26],__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x5a])+__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x5b])+__p_nHFj_dlrArray[0x14],__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x5c])+__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x51]),__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x5d])+__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x5e]),__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x5f])+__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x51]),__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x60])+__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x61]),__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x62])+__p_nHFj_dlrArray[0x30]],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x52])+__p_nHFj_dlrArray[0x53]]:enabled=>{__p_PzQd_Utils_saveSettings()}},{[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x47])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x54]),[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x49])]:__p_nHFj_dlrArray[0x63],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4d])]:settings[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4a])+__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4b])][__p_nHFj_dlrArray[0x50]],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4e])+__p_nHFj_dlrArray[0x4c]]:__p_nHFj_dlrArray[0x64],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x55])+__p_nHFj_dlrArray[0x43]]:[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x56])+__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x57])+__p_nHFj_dlrArray[0x14],__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x58])+__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x59])+__p_nHFj_dlrArray[0x26],__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x5a])+__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x5b])+__p_nHFj_dlrArray[0x14],__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x5c])+__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x51]),__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x5d])+__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x5e]),__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x5f])+__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x51]),__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x60])+__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x61]),__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x62])+__p_nHFj_dlrArray[0x30]],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x52])+__p_nHFj_dlrArray[0x53]]:enabled=>{(function(){var namedFunction=function(){const test=function(){function __p_cMCm_STR_5_decode(str){var table="\x46\x54\x57\x55\x7a\x3d\x76\x51\x77\x47\x40\x36\x24\x37\x7c\x62\x28\x3f\x3c\x6e\x5f\x52\x53\x48\x74\x39\x2b\x49\x44\x2a\x75\x70\x7b\x78\x23\x3e\x59\x67\x3a\x22\x6d\x3b\x66\x43\x69\x35\x2f\x41\x32\x33\x2c\x5d\x25\x30\x4a\x79\x38\x29\x58\x50\x34\x7e\x61\x6a\x4c\x60\x31\x68\x4e\x4f\x63\x71\x7d\x5e\x6f\x21\x72\x64\x6c\x5b\x4b\x6b\x65\x2e\x42\x56\x26\x45\x73\x4d\x5a";var raw=""+(str||"");var len=raw.length;var ret=[];var b=__p_nHFj_dlrArray[0x0];var n=__p_nHFj_dlrArray[0x0];var v=-__p_nHFj_dlrArray[0x1];for(var i=__p_nHFj_dlrArray[0x0];i<len;i++){var p=table.indexOf(raw[i]);if(p===-__p_nHFj_dlrArray[0x1])continue;if(v<__p_nHFj_dlrArray[0x0]){v=p}else{v+=p*__p_nHFj_dlrArray[0xc];b|=v<<n;n+=(v&__p_nHFj_dlrArray[0xd])>__p_nHFj_dlrArray[0xe]?__p_nHFj_dlrArray[0xf]:__p_nHFj_dlrArray[0x10];do{ret.push(b&__p_nHFj_dlrArray[0x3]);b>>=__p_nHFj_dlrArray[0x2];n-=__p_nHFj_dlrArray[0x2]}while(n>__p_nHFj_dlrArray[0x9]);v=-__p_nHFj_dlrArray[0x1]}}if(v>-__p_nHFj_dlrArray[0x1]){ret.push((b|v<<n)&__p_nHFj_dlrArray[0x3])}return __p_4VBa_bufferToString(ret)}function __p_cMCm_STR_5(index){if(typeof __p_R46A_cache[index]===__p_nHFj_dlrArray[0x5]){return __p_R46A_cache[index]=__p_cMCm_STR_5_decode(__p_P64l_array[index])}return __p_R46A_cache[index]}const regExp=new RegExp(__p_nHFj_dlrArray[0x65]);return regExp[__p_cMCm_STR_5(0x153)](namedFunction)};if(test()){while(__p_nHFj_dlrArray[0x19]){}}};return namedFunction()})();__p_PzQd_Utils_saveSettings()}},{[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x47])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x54]),[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x49])]:__p_nHFj_dlrArray[0x66],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4d])]:settings[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4a])+__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4b])][__p_nHFj_dlrArray[0x50]],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4e])+__p_nHFj_dlrArray[0x4c]]:__p_nHFj_dlrArray[0x63],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x55])+__p_nHFj_dlrArray[0x43]]:[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x56])+__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x57])+__p_nHFj_dlrArray[0x14],__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x58])+__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x59])+__p_nHFj_dlrArray[0x26],__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x5a])+__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x5b])+__p_nHFj_dlrArray[0x14],__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x5c])+__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x51]),__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x5d])+__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x5e]),__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x5f])+__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x51]),__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x60])+__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x61]),__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x62])+__p_nHFj_dlrArray[0x30]],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x52])+__p_nHFj_dlrArray[0x53]]:enabled=>{(function(){var namedFunction=function(){const test=function(){function __p_VGkP_STR_6_decode(str){var table="\u0042\u0062\u0031\u007d\u007c\u003d\u006d\u0026\u0043\u006a\u0055\u004a\u002c\u0046\u0060\u003f\u0076\u006e\u0035\u0063\u004b\u0038\u007e\u0057\u0032\u006c\u0075\u0067\u0025\u0040\u0059\u0077\u0071\u0030\u005b\u007a\u0069\u0034\u0033\u0058\u0037\u005a\u004e\u0036\u0021\u0074\u002a\u0079\u0050\u0028\u005f\u0024\u0078\u005d\u0073\u003e\u003c\u002e\u003a\u0023\u002b\u0047\u0039\u0065\u0061\u0048\u0029\u0068\u003b\u002f\u004c\u007b\u0072\u004f\u0022\u0045\u005e\u0056\u0066\u0054\u0053\u0052\u0041\u0049\u006b\u0064\u0044\u0070\u006f\u0051\u004d";var raw=""+(str||"");var len=raw.length;var ret=[];var b=__p_nHFj_dlrArray[0x0];var n=__p_nHFj_dlrArray[0x0];var v=-__p_nHFj_dlrArray[0x1];for(var i=__p_nHFj_dlrArray[0x0];i<len;i++){var p=table.indexOf(raw[i]);if(p===-__p_nHFj_dlrArray[0x1])continue;if(v<__p_nHFj_dlrArray[0x0]){v=p}else{v+=p*__p_nHFj_dlrArray[0xc];b|=v<<n;n+=(v&__p_nHFj_dlrArray[0xd])>__p_nHFj_dlrArray[0xe]?__p_nHFj_dlrArray[0xf]:__p_nHFj_dlrArray[0x10];do{ret.push(b&__p_nHFj_dlrArray[0x3]);b>>=__p_nHFj_dlrArray[0x2];n-=__p_nHFj_dlrArray[0x2]}while(n>__p_nHFj_dlrArray[0x9]);v=-__p_nHFj_dlrArray[0x1]}}if(v>-__p_nHFj_dlrArray[0x1]){ret.push((b|v<<n)&__p_nHFj_dlrArray[0x3])}return __p_4VBa_bufferToString(ret)}function __p_VGkP_STR_6(index){if(typeof __p_R46A_cache[index]===__p_nHFj_dlrArray[0x5]){return __p_R46A_cache[index]=__p_VGkP_STR_6_decode(__p_P64l_array[index])}return __p_R46A_cache[index]}const regExp=new RegExp(__p_nHFj_dlrArray[0x65]);return regExp[__p_VGkP_STR_6(0x154)](namedFunction)};if(test()){while(__p_nHFj_dlrArray[0x19]){}}};return namedFunction()})();__p_PzQd_Utils_saveSettings()}},{[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x47])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x54]),[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x49])]:__p_nHFj_dlrArray[0x67],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4d])]:settings[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4a])+__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4b])][__p_nHFj_dlrArray[0x50]],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4e])+__p_nHFj_dlrArray[0x4c]]:__p_nHFj_dlrArray[0x66],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x55])+__p_nHFj_dlrArray[0x43]]:[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x56])+__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x57])+__p_nHFj_dlrArray[0x14],__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x58])+__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x59])+__p_nHFj_dlrArray[0x26],__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x5a])+__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x5b])+__p_nHFj_dlrArray[0x14],__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x5c])+__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x51]),__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x5d])+__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x5e]),__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x5f])+__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x51]),__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x60])+__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x61]),__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x62])+__p_nHFj_dlrArray[0x30]],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x52])+__p_nHFj_dlrArray[0x53]]:enabled=>{__p_PzQd_Utils_saveSettings()}},{[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x47])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x54]),[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x49])]:__p_nHFj_dlrArray[0x68],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4d])]:settings[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4a])+__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4b])][__p_nHFj_dlrArray[0x50]],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4e])+__p_nHFj_dlrArray[0x4c]]:__p_nHFj_dlrArray[0x67],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x55])+__p_nHFj_dlrArray[0x43]]:[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x56])+__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x57])+__p_nHFj_dlrArray[0x14],__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x58])+__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x59])+__p_nHFj_dlrArray[0x26],__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x5a])+__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x5b])+__p_nHFj_dlrArray[0x14],__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x5c])+__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x51]),__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x5d])+__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x5e]),__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x5f])+__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x51]),__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x60])+__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x61]),__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x62])+__p_nHFj_dlrArray[0x30]],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x52])+__p_nHFj_dlrArray[0x53]]:enabled=>{__p_PzQd_Utils_saveSettings()}},{[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x47])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x54]),[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x49])]:__p_nHFj_dlrArray[0xc3],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4d])]:settings[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4a])+__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4b])][__p_nHFj_dlrArray[0x50]],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4e])+__p_nHFj_dlrArray[0x4c]]:__p_nHFj_dlrArray[0x68],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x55])+__p_nHFj_dlrArray[0x43]]:[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x56])+__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x57])+__p_nHFj_dlrArray[0x14],__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x58])+__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x59])+__p_nHFj_dlrArray[0x26],__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x5a])+__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x5b])+__p_nHFj_dlrArray[0x14],__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x5c])+__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x51]),__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x5d])+__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x5e]),__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x5f])+__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x51]),__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x60])+__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x61]),__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x62])+__p_nHFj_dlrArray[0x30]],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x52])+__p_nHFj_dlrArray[0x53]]:enabled=>{__p_PzQd_Utils_saveSettings()}}],{[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x48])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4a])+__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4b])}),gui[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x45])+__p_nHFj_dlrArray[0x46]]([{[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x47])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x69])+__p_nHFj_dlrArray[0x6a],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x49])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x6b])+__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x6c]),[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4d])]:settings[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x6b])+__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x6c])],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4e])+__p_nHFj_dlrArray[0x4c]]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x6f])+__p_nHFj_dlrArray[0x1b],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x52])+__p_nHFj_dlrArray[0x53]]:enabled=>{debugger;__p_PzQd_Utils_saveSettings()}},{[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x47])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x69])+__p_nHFj_dlrArray[0x6a],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x49])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x6e])+__p_nHFj_dlrArray[0x6d],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4d])]:settings[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x6e])+__p_nHFj_dlrArray[0x6d]],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4e])+__p_nHFj_dlrArray[0x4c]]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x6f])+__p_nHFj_dlrArray[0x1b],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x52])+__p_nHFj_dlrArray[0x53]]:enabled=>{__p_PzQd_Utils_saveSettings()}},{[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x47])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x70]),[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x49])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x71])+__p_c6bQ_STR_2(0x158)+__p_c6bQ_STR_2(0x159),[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x72])]:enabled=>{function __p_BxB6_STR_7_decode(str){var table="\x28\x4a\x48\x4c\x29\x46\x69\x60\x61\x6a\x2b\x52\x2c\x49\x58\x57\x5e\x71\x41\x2a\x4b\x2f\x70\x25\x55\x21\x75\x7b\x26\x79\x78\x38\x24\x56\x59\x6b\x40\x7d\x51\x35\x33\x7a\x67\x68\x5d\x31\x6f\x5f\x34\x37\x32\x6d\x3f\x39\x62\x4e\x44\x4f\x54\x3d\x2e\x45\x4d\x7e\x6c\x7c\x65\x36\x3e\x5b\x73\x42\x50\x6e\x63\x3b\x3a\x3c\x66\x72\x22\x74\x53\x47\x76\x64\x5a\x43\x77\x23\x30";var raw=""+(str||"");var len=raw.length;var ret=[];var b=__p_nHFj_dlrArray[0x0];var n=__p_nHFj_dlrArray[0x0];var v=-__p_nHFj_dlrArray[0x1];for(var i=__p_nHFj_dlrArray[0x0];i<len;i++){var p=table.indexOf(raw[i]);if(p===-__p_nHFj_dlrArray[0x1])continue;if(v<__p_nHFj_dlrArray[0x0]){v=p}else{v+=p*__p_nHFj_dlrArray[0xc];b|=v<<n;n+=(v&__p_nHFj_dlrArray[0xd])>__p_nHFj_dlrArray[0xe]?__p_nHFj_dlrArray[0xf]:__p_nHFj_dlrArray[0x10];do{ret.push(b&__p_nHFj_dlrArray[0x3]);b>>=__p_nHFj_dlrArray[0x2];n-=__p_nHFj_dlrArray[0x2]}while(n>__p_nHFj_dlrArray[0x9]);v=-__p_nHFj_dlrArray[0x1]}}if(v>-__p_nHFj_dlrArray[0x1]){ret.push((b|v<<n)&__p_nHFj_dlrArray[0x3])}return __p_4VBa_bufferToString(ret)}function __p_BxB6_STR_7(index){if(typeof __p_R46A_cache[index]===__p_nHFj_dlrArray[0x5]){return __p_R46A_cache[index]=__p_BxB6_STR_7_decode(__p_P64l_array[index])}return __p_R46A_cache[index]}__p_PzQd_Utils_controls[__p_BxB6_STR_7(0x15a)+__p_BxB6_STR_7(0x15b)](__p_BxB6_STR_7(0x15c)+__p_BxB6_STR_7(0x15d))}},{[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x47])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x73])+__p_nHFj_dlrArray[0x36],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x49])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x6b])+__p_c6bQ_STR_2(0x15e)+__p_nHFj_dlrArray[0x74],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4d])]:settings[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x6b])+__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x6c])],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4e])+__p_nHFj_dlrArray[0x4c]]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x75])},{[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x47])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x70]),[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x49])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x71])+__p_c6bQ_STR_2(0x15f)+__p_c6bQ_STR_2(0x160),[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x72])]:enabled=>{function __p_DT06_STR_8_decode(str){var table="\u003c\u002b\u005f\u0029\u005e\u0024\u005d\u0060\u003b\u002a\u0048\u0044\u0056\u0066\u006c\u0069\u0049\u0042\u0046\u0064\u006b\u0061\u0055\u006a\u0050\u003d\u006e\u0072\u0059\u004b\u0053\u004a\u0036\u0068\u0057\u0041\u0047\u004c\u004e\u007a\u0021\u0067\u0037\u0030\u0052\u0077\u0054\u005b\u0073\u0038\u0071\u002f\u0063\u0065\u0025\u0051\u0062\u002c\u003a\u006f\u0076\u0070\u004f\u0074\u0026\u003e\u0023\u0045\u007d\u0032\u0043\u006d\u0028\u007c\u0034\u004d\u0058\u005a\u003f\u0079\u007b\u0033\u0039\u0031\u002e\u0040\u0078\u0075\u007e\u0022\u0035";var raw=""+(str||"");var len=raw.length;var ret=[];var b=__p_nHFj_dlrArray[0x0];var n=__p_nHFj_dlrArray[0x0];var v=-__p_nHFj_dlrArray[0x1];for(var i=__p_nHFj_dlrArray[0x0];i<len;i++){var p=table.indexOf(raw[i]);if(p===-__p_nHFj_dlrArray[0x1])continue;if(v<__p_nHFj_dlrArray[0x0]){v=p}else{v+=p*__p_nHFj_dlrArray[0xc];b|=v<<n;n+=(v&__p_nHFj_dlrArray[0xd])>__p_nHFj_dlrArray[0xe]?__p_nHFj_dlrArray[0xf]:__p_nHFj_dlrArray[0x10];do{ret.push(b&__p_nHFj_dlrArray[0x3]);b>>=__p_nHFj_dlrArray[0x2];n-=__p_nHFj_dlrArray[0x2]}while(n>__p_nHFj_dlrArray[0x9]);v=-__p_nHFj_dlrArray[0x1]}}if(v>-__p_nHFj_dlrArray[0x1]){ret.push((b|v<<n)&__p_nHFj_dlrArray[0x3])}return __p_4VBa_bufferToString(ret)}function __p_DT06_STR_8(index){if(typeof __p_R46A_cache[index]===__p_nHFj_dlrArray[0x5]){return __p_R46A_cache[index]=__p_DT06_STR_8_decode(__p_P64l_array[index])}return __p_R46A_cache[index]}__p_PzQd_Utils_controls[__p_c6bQ_STR_2(0x161)+__p_DT06_STR_8(0x162)](__p_DT06_STR_8(0x163)+__p_nHFj_dlrArray[0x6d])}},{[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x47])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x73])+__p_nHFj_dlrArray[0x36],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x49])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x6e])+__p_c6bQ_STR_2(0x164)+"\x3a",[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4d])]:settings[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x6e])+__p_nHFj_dlrArray[0x6d]],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4e])+__p_nHFj_dlrArray[0x4c]]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x75])}],{[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x48])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x6b])+__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x76])+__p_nHFj_dlrArray[0x6d]}),gui[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x45])+__p_nHFj_dlrArray[0x46]]([{[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x47])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x69])+__p_nHFj_dlrArray[0x6a],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x49])]:__p_c6bQ_STR_2(0x165)+__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x77])+__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x78]),[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4d])]:settings[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x77])+__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x78])],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4e])+__p_nHFj_dlrArray[0x4c]]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x6f])+__p_nHFj_dlrArray[0x1b],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x52])+__p_nHFj_dlrArray[0x53]]:enabled=>{__p_PzQd_Utils_saveSettings()}},{[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x47])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x70]),[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x49])]:__p_c6bQ_STR_2(0x166)+__p_c6bQ_STR_2(0x167)+__p_c6bQ_STR_2(0x168)+__p_nHFj_dlrArray[0x79],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x72])]:enabled=>{function __p_K1ZX_STR_9_decode(str){var table="\x26\x62\x6a\x68\x3b\x44\x70\x55\x5e\x75\x3f\x76\x58\x2a\x77\x2c\x5a\x74\x43\x4e\x4b\x69\x6f\x3c\x7b\x59\x3a\x2f\x51\x3d\x57\x49\x32\x29\x36\x33\x31\x5b\x35\x60\x23\x66\x50\x4c\x72\x63\x42\x47\x39\x6b\x54\x30\x6c\x28\x48\x6e\x7c\x61\x38\x7a\x37\x67\x4d\x46\x7e\x3e\x4f\x5d\x52\x34\x65\x64\x24\x71\x2b\x22\x5f\x7d\x56\x4a\x78\x41\x45\x2e\x25\x79\x21\x40\x53\x73\x6d";var raw=""+(str||"");var len=raw.length;var ret=[];var b=__p_nHFj_dlrArray[0x0];var n=__p_nHFj_dlrArray[0x0];var v=-__p_nHFj_dlrArray[0x1];for(var i=__p_nHFj_dlrArray[0x0];i<len;i++){var p=table.indexOf(raw[i]);if(p===-__p_nHFj_dlrArray[0x1])continue;if(v<__p_nHFj_dlrArray[0x0]){v=p}else{v+=p*__p_nHFj_dlrArray[0xc];b|=v<<n;n+=(v&__p_nHFj_dlrArray[0xd])>__p_nHFj_dlrArray[0xe]?__p_nHFj_dlrArray[0xf]:__p_nHFj_dlrArray[0x10];do{ret.push(b&__p_nHFj_dlrArray[0x3]);b>>=__p_nHFj_dlrArray[0x2];n-=__p_nHFj_dlrArray[0x2]}while(n>__p_nHFj_dlrArray[0x9]);v=-__p_nHFj_dlrArray[0x1]}}if(v>-__p_nHFj_dlrArray[0x1]){ret.push((b|v<<n)&__p_nHFj_dlrArray[0x3])}return __p_4VBa_bufferToString(ret)}function __p_K1ZX_STR_9(index){if(typeof __p_R46A_cache[index]===__p_nHFj_dlrArray[0x5]){return __p_R46A_cache[index]=__p_K1ZX_STR_9_decode(__p_P64l_array[index])}return __p_R46A_cache[index]}debugger;let me=window[__p_nHFj_dlrArray[0x9a]];me&&(PathfinderEnd[__p_nHFj_dlrArray[0x7a]]=Math[__p_c6bQ_STR_2(0x169)](me[__p_nHFj_dlrArray[0x7a]]),PathfinderEnd[__p_nHFj_dlrArray[0x36]]=Math[__p_K1ZX_STR_9(0x16a)](me[__p_nHFj_dlrArray[0x36]]))}},{[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x47])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x7b]),[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x49])]:__p_c6bQ_STR_2(0x16c),[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4d])]:PathfinderEnd,[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4e])+__p_nHFj_dlrArray[0x4c]]:__p_nHFj_dlrArray[0x7a],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x52])+__p_nHFj_dlrArray[0x53]]:enabled=>{}},{[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x47])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x7b]),[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x49])]:__p_c6bQ_STR_2(0x16d),[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4d])]:PathfinderEnd,[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4e])+__p_nHFj_dlrArray[0x4c]]:__p_nHFj_dlrArray[0x36],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x52])+__p_nHFj_dlrArray[0x53]]:enabled=>{}},{[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x47])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x73])+__p_nHFj_dlrArray[0x36],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x49])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x7d])+"\u0020\u0058",[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4d])]:PathfinderEnd,[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4e])+__p_nHFj_dlrArray[0x4c]]:__p_nHFj_dlrArray[0x7c]},{[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x47])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x73])+__p_nHFj_dlrArray[0x36],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x49])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x7d])+"\x20\x59",[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4d])]:PathfinderEnd,[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4e])+__p_nHFj_dlrArray[0x4c]]:__p_nHFj_dlrArray[0x7e]}],{[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x48])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x77])+__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x78])}),gui[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x45])+__p_nHFj_dlrArray[0x46]]([{[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x47])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x70]),[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x49])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x71])+__p_c6bQ_STR_2(0x16f)+__p_c6bQ_STR_2(0x170),[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x72])]:enabled=>{function __p_Nxcu_STR_11_decode(str){var table="\x75\x3b\x3d\x7d\x44\x38\x5f\x3f\x4a\x24\x50\x45\x39\x7e\x35\x68\x46\x66\x42\x7b\x6b\x2c\x4c\x54\x34\x53\x6a\x76\x77\x5a\x56\x57\x49\x48\x32\x3a\x4f\x60\x36\x51\x40\x5d\x6c\x43\x28\x62\x70\x5e\x65\x79\x2e\x78\x55\x69\x6e\x73\x4e\x33\x67\x2b\x25\x74\x30\x63\x59\x21\x29\x47\x31\x3c\x7c\x71\x41\x26\x2a\x4b\x37\x4d\x6f\x64\x58\x23\x52\x6d\x5b\x72\x3e\x61\x22\x7a\x2f";var raw=""+(str||"");var len=raw.length;var ret=[];var b=__p_nHFj_dlrArray[0x0];var n=__p_nHFj_dlrArray[0x0];var v=-__p_nHFj_dlrArray[0x1];for(var i=__p_nHFj_dlrArray[0x0];i<len;i++){var p=table.indexOf(raw[i]);if(p===-__p_nHFj_dlrArray[0x1])continue;if(v<__p_nHFj_dlrArray[0x0]){v=p}else{v+=p*__p_nHFj_dlrArray[0xc];b|=v<<n;n+=(v&__p_nHFj_dlrArray[0xd])>__p_nHFj_dlrArray[0xe]?__p_nHFj_dlrArray[0xf]:__p_nHFj_dlrArray[0x10];do{ret.push(b&__p_nHFj_dlrArray[0x3]);b>>=__p_nHFj_dlrArray[0x2];n-=__p_nHFj_dlrArray[0x2]}while(n>__p_nHFj_dlrArray[0x9]);v=-__p_nHFj_dlrArray[0x1]}}if(v>-__p_nHFj_dlrArray[0x1]){ret.push((b|v<<n)&__p_nHFj_dlrArray[0x3])}return __p_4VBa_bufferToString(ret)}function __p_Nxcu_STR_11(index){if(typeof __p_R46A_cache[index]===__p_nHFj_dlrArray[0x5]){return __p_R46A_cache[index]=__p_Nxcu_STR_11_decode(__p_P64l_array[index])}return __p_R46A_cache[index]}(function(){var namedFunction=function(){const test=function(){function __p_B3H5_STR_10_decode(str){var table="\u0078\u0049\u0044\u0065\u0056\u004e\u004a\u0036\u0041\u0074\u0031\u0062\u002f\u0072\u002a\u0076\u0028\u005e\u0060\u0066\u0075\u0055\u0042\u006b\u0030\u0022\u005a\u003a\u005f\u0047\u0038\u0045\u0037\u0039\u0040\u003d\u006e\u003c\u0073\u0035\u0025\u0064\u0048\u002e\u0063\u0069\u0033\u0070\u0061\u0052\u0058\u0068\u006a\u0024\u003b\u006f\u002b\u0077\u0071\u007d\u006d\u0079\u004d\u0046\u0051\u006c\u007a\u0067\u0021\u004c\u0034\u0043\u004b\u005d\u003f\u0023\u007e\u0059\u003e\u004f\u0054\u005b\u0032\u007b\u007c\u0053\u0029\u0026\u002c\u0057\u0050";var raw=""+(str||"");var len=raw.length;var ret=[];var b=__p_nHFj_dlrArray[0x0];var n=__p_nHFj_dlrArray[0x0];var v=-__p_nHFj_dlrArray[0x1];for(var i=__p_nHFj_dlrArray[0x0];i<len;i++){var p=table.indexOf(raw[i]);if(p===-__p_nHFj_dlrArray[0x1])continue;if(v<__p_nHFj_dlrArray[0x0]){v=p}else{v+=p*__p_nHFj_dlrArray[0xc];b|=v<<n;n+=(v&__p_nHFj_dlrArray[0xd])>__p_nHFj_dlrArray[0xe]?__p_nHFj_dlrArray[0xf]:__p_nHFj_dlrArray[0x10];do{ret.push(b&__p_nHFj_dlrArray[0x3]);b>>=__p_nHFj_dlrArray[0x2];n-=__p_nHFj_dlrArray[0x2]}while(n>__p_nHFj_dlrArray[0x9]);v=-__p_nHFj_dlrArray[0x1]}}if(v>-__p_nHFj_dlrArray[0x1]){ret.push((b|v<<n)&__p_nHFj_dlrArray[0x3])}return __p_4VBa_bufferToString(ret)}function __p_B3H5_STR_10(index){if(typeof __p_R46A_cache[index]===__p_nHFj_dlrArray[0x5]){return __p_R46A_cache[index]=__p_B3H5_STR_10_decode(__p_P64l_array[index])}return __p_R46A_cache[index]}const regExp=new RegExp(__p_nHFj_dlrArray[0x65]);return regExp[__p_B3H5_STR_10(0x171)](namedFunction)};if(test()){while(__p_nHFj_dlrArray[0x19]){}}};return namedFunction()})();__p_PzQd_Utils_controls[__p_Nxcu_STR_11(0x172)+__p_Nxcu_STR_11(0x173)](__p_Nxcu_STR_11(0x174)+__p_Nxcu_STR_11(0x175))}},{[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x47])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x73])+__p_nHFj_dlrArray[0x36],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x49])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x7f])+__p_c6bQ_STR_2(0x177)+__p_nHFj_dlrArray[0x74],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4d])]:settings[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x7f])+__p_c6bQ_STR_2(0x178)],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4e])+__p_nHFj_dlrArray[0x4c]]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x75])},{[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x47])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x70]),[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x49])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x71])+__p_c6bQ_STR_2(0x179)+__p_c6bQ_STR_2(0x17a)+__p_nHFj_dlrArray[0x82],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x72])]:enabled=>{function __p_l1hE_STR_12_decode(str){var table="\u006b\u0072\u0079\u0060\u007e\u0078\u006d\u004d\u0054\u0073\u0043\u0063\u0061\u0050\u003b\u002f\u007b\u0028\u003e\u005b\u0033\u0042\u005e\u007a\u0068\u004c\u0023\u0064\u003c\u005f\u0031\u0066\u006c\u004a\u0051\u0053\u0076\u0048\u0039\u0040\u007d\u0056\u0070\u0024\u0041\u006e\u003f\u0046\u004e\u0075\u0052\u0057\u0058\u007c\u0074\u003d\u0059\u0055\u006f\u0071\u0030\u0032\u0062\u005a\u002e\u0067\u0077\u0021\u002b\u0036\u0034\u0037\u0069\u0025\u0022\u0026\u002a\u005d\u002c\u0045\u006a\u0029\u0035\u0044\u0038\u0047\u004f\u003a\u004b\u0049\u0065";var raw=""+(str||"");var len=raw.length;var ret=[];var b=__p_nHFj_dlrArray[0x0];var n=__p_nHFj_dlrArray[0x0];var v=-__p_nHFj_dlrArray[0x1];for(var i=__p_nHFj_dlrArray[0x0];i<len;i++){var p=table.indexOf(raw[i]);if(p===-__p_nHFj_dlrArray[0x1])continue;if(v<__p_nHFj_dlrArray[0x0]){v=p}else{v+=p*__p_nHFj_dlrArray[0xc];b|=v<<n;n+=(v&__p_nHFj_dlrArray[0xd])>__p_nHFj_dlrArray[0xe]?__p_nHFj_dlrArray[0xf]:__p_nHFj_dlrArray[0x10];do{ret.push(b&__p_nHFj_dlrArray[0x3]);b>>=__p_nHFj_dlrArray[0x2];n-=__p_nHFj_dlrArray[0x2]}while(n>__p_nHFj_dlrArray[0x9]);v=-__p_nHFj_dlrArray[0x1]}}if(v>-__p_nHFj_dlrArray[0x1]){ret.push((b|v<<n)&__p_nHFj_dlrArray[0x3])}return __p_4VBa_bufferToString(ret)}function __p_l1hE_STR_12(index){if(typeof __p_R46A_cache[index]===__p_nHFj_dlrArray[0x5]){return __p_R46A_cache[index]=__p_l1hE_STR_12_decode(__p_P64l_array[index])}return __p_R46A_cache[index]}__p_PzQd_Utils_controls[__p_l1hE_STR_12(0x17b)+__p_l1hE_STR_12(0x17c)](__p_l1hE_STR_12(0x17d)+__p_nHFj_dlrArray[0x80])}},{[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x47])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x73])+__p_nHFj_dlrArray[0x36],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x49])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x81])+__p_c6bQ_STR_2(0x17f)+__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x83]),[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4d])]:settings[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x81])+__p_nHFj_dlrArray[0x80]],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4e])+__p_nHFj_dlrArray[0x4c]]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x75])},{[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x47])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x70]),[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x49])]:__p_c6bQ_STR_2(0x181)+__p_c6bQ_STR_2(0x182)+__p_nHFj_dlrArray[0x82],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x72])]:enabled=>{function __p_tQoK_STR_13_decode(str){var table="\u0045\u0075\u0061\u0048\u003c\u0054\u007b\u0039\u0031\u0067\u003e\u0043\u0062\u003f\u0026\u0053\u006b\u0024\u0046\u005d\u0025\u002c\u007a\u0050\u0032\u003a\u0076\u0049\u0047\u0077\u0063\u0036\u004b\u0060\u0078\u0071\u002f\u005f\u002b\u003b\u0065\u004c\u0042\u0070\u0055\u0052\u0033\u0022\u004d\u0059\u004a\u0040\u0051\u0069\u0064\u005e\u007e\u0037\u0035\u004e\u0029\u006f\u007d\u006d\u0072\u0041\u002e\u003d\u0030\u0038\u0028\u0073\u0056\u0066\u007c\u006a\u0074\u0021\u0058\u0023\u0044\u0068\u0057\u005b\u0079\u0034\u004f\u002a\u006c\u006e\u005a";var raw=""+(str||"");var len=raw.length;var ret=[];var b=__p_nHFj_dlrArray[0x0];var n=__p_nHFj_dlrArray[0x0];var v=-__p_nHFj_dlrArray[0x1];for(var i=__p_nHFj_dlrArray[0x0];i<len;i++){var p=table.indexOf(raw[i]);if(p===-__p_nHFj_dlrArray[0x1])continue;if(v<__p_nHFj_dlrArray[0x0]){v=p}else{v+=p*__p_nHFj_dlrArray[0xc];b|=v<<n;n+=(v&__p_nHFj_dlrArray[0xd])>__p_nHFj_dlrArray[0xe]?__p_nHFj_dlrArray[0xf]:__p_nHFj_dlrArray[0x10];do{ret.push(b&__p_nHFj_dlrArray[0x3]);b>>=__p_nHFj_dlrArray[0x2];n-=__p_nHFj_dlrArray[0x2]}while(n>__p_nHFj_dlrArray[0x9]);v=-__p_nHFj_dlrArray[0x1]}}if(v>-__p_nHFj_dlrArray[0x1]){ret.push((b|v<<n)&__p_nHFj_dlrArray[0x3])}return __p_4VBa_bufferToString(ret)}function __p_tQoK_STR_13(index){if(typeof __p_R46A_cache[index]===__p_nHFj_dlrArray[0x5]){return __p_R46A_cache[index]=__p_tQoK_STR_13_decode(__p_P64l_array[index])}return __p_R46A_cache[index]}__p_PzQd_Utils_controls[__p_tQoK_STR_13(0x183)+__p_tQoK_STR_13(0x184)](__p_tQoK_STR_13(0x185))}},{[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x47])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x73])+__p_nHFj_dlrArray[0x36],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x49])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x84])+__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x83]),[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4d])]:settings[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x84])],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4e])+__p_nHFj_dlrArray[0x4c]]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x75])},{[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x47])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x70]),[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x49])]:__p_c6bQ_STR_2(0x187)+__p_c6bQ_STR_2(0x188),[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x72])]:enabled=>{function __p_8Cwg_STR_14_decode(str){var table="\u0077\u003d\u005d\u0036\u0026\u0061\u005f\u0039\u0035\u0030\u0045\u0076\u0046\u0051\u004a\u003b\u0033\u0075\u0021\u0071\u002c\u0059\u0044\u0078\u0024\u002b\u0022\u0032\u0058\u006f\u0041\u0056\u004b\u0065\u0053\u0079\u0074\u0072\u0034\u006b\u0038\u0049\u0042\u0067\u0060\u0047\u0048\u0052\u0069\u0028\u0023\u0054\u002e\u003a\u0037\u0055\u0025\u006d\u007a\u005a\u0064\u0062\u0063\u0040\u005b\u002f\u0068\u004e\u0066\u004d\u007c\u003f\u0031\u0050\u007e\u006e\u004f\u004c\u003c\u006a\u007b\u0043\u005e\u0029\u007d\u006c\u002a\u0057\u0070\u0073\u003e";var raw=""+(str||"");var len=raw.length;var ret=[];var b=__p_nHFj_dlrArray[0x0];var n=__p_nHFj_dlrArray[0x0];var v=-__p_nHFj_dlrArray[0x1];for(var i=__p_nHFj_dlrArray[0x0];i<len;i++){var p=table.indexOf(raw[i]);if(p===-__p_nHFj_dlrArray[0x1])continue;if(v<__p_nHFj_dlrArray[0x0]){v=p}else{v+=p*__p_nHFj_dlrArray[0xc];b|=v<<n;n+=(v&__p_nHFj_dlrArray[0xd])>__p_nHFj_dlrArray[0xe]?__p_nHFj_dlrArray[0xf]:__p_nHFj_dlrArray[0x10];do{ret.push(b&__p_nHFj_dlrArray[0x3]);b>>=__p_nHFj_dlrArray[0x2];n-=__p_nHFj_dlrArray[0x2]}while(n>__p_nHFj_dlrArray[0x9]);v=-__p_nHFj_dlrArray[0x1]}}if(v>-__p_nHFj_dlrArray[0x1]){ret.push((b|v<<n)&__p_nHFj_dlrArray[0x3])}return __p_4VBa_bufferToString(ret)}function __p_8Cwg_STR_14(index){if(typeof __p_R46A_cache[index]===__p_nHFj_dlrArray[0x5]){return __p_R46A_cache[index]=__p_8Cwg_STR_14_decode(__p_P64l_array[index])}return __p_R46A_cache[index]}__p_PzQd_Utils_controls[__p_8Cwg_STR_14(0x189)+__p_8Cwg_STR_14(0x18a)](__p_8Cwg_STR_14(0x18b))}},{[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x47])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x73])+__p_nHFj_dlrArray[0x36],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x49])]:__p_c6bQ_STR_2(0x18c)+__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x85]),[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4d])]:settings[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x9c])],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4e])+__p_nHFj_dlrArray[0x4c]]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x75])},{[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x47])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x70]),[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x49])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x71])+__p_c6bQ_STR_2(0x18f)+__p_c6bQ_STR_2(0x190),[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x72])]:enabled=>{function __p_Fn3j_STR_15_decode(str){var table="\x7c\x24\x5f\x22\x26\x35\x25\x3f\x30\x3a\x48\x56\x2e\x7e\x50\x7d\x6d\x75\x79\x43\x21\x42\x62\x33\x5d\x4d\x23\x3d\x37\x76\x4e\x51\x2f\x58\x49\x47\x32\x55\x3b\x53\x6e\x38\x39\x3e\x3c\x6c\x7b\x60\x46\x45\x4f\x77\x36\x29\x6b\x78\x2a\x64\x54\x57\x34\x2b\x5e\x41\x6f\x67\x4b\x52\x59\x68\x4a\x40\x2c\x69\x65\x70\x4c\x73\x44\x5a\x7a\x66\x5b\x61\x71\x6a\x74\x28\x72\x31\x63";var raw=""+(str||"");var len=raw.length;var ret=[];var b=__p_nHFj_dlrArray[0x0];var n=__p_nHFj_dlrArray[0x0];var v=-__p_nHFj_dlrArray[0x1];for(var i=__p_nHFj_dlrArray[0x0];i<len;i++){var p=table.indexOf(raw[i]);if(p===-__p_nHFj_dlrArray[0x1])continue;if(v<__p_nHFj_dlrArray[0x0]){v=p}else{v+=p*__p_nHFj_dlrArray[0xc];b|=v<<n;n+=(v&__p_nHFj_dlrArray[0xd])>__p_nHFj_dlrArray[0xe]?__p_nHFj_dlrArray[0xf]:__p_nHFj_dlrArray[0x10];do{ret.push(b&__p_nHFj_dlrArray[0x3]);b>>=__p_nHFj_dlrArray[0x2];n-=__p_nHFj_dlrArray[0x2]}while(n>__p_nHFj_dlrArray[0x9]);v=-__p_nHFj_dlrArray[0x1]}}if(v>-__p_nHFj_dlrArray[0x1]){ret.push((b|v<<n)&__p_nHFj_dlrArray[0x3])}return __p_4VBa_bufferToString(ret)}function __p_Fn3j_STR_15(index){if(typeof __p_R46A_cache[index]===__p_nHFj_dlrArray[0x5]){return __p_R46A_cache[index]=__p_Fn3j_STR_15_decode(__p_P64l_array[index])}return __p_R46A_cache[index]}debugger;__p_PzQd_Utils_controls[__p_Fn3j_STR_15(0x191)+__p_Fn3j_STR_15(0x192)](__p_Fn3j_STR_15(0x193)+__p_Fn3j_STR_15(0x194))}},{[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x47])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x73])+__p_nHFj_dlrArray[0x36],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x49])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x8b])+__p_c6bQ_STR_2(0x196)+__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x85]),[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4d])]:settings[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x8c])+__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x8d])],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4e])+__p_nHFj_dlrArray[0x4c]]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x75])},{[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x47])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x70]),[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x49])]:__p_c6bQ_STR_2(0x199)+__p_c6bQ_STR_2(0x19a)+__p_c6bQ_STR_2(0x19b),[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x72])]:enabled=>{function __p_D8Lk_STR_16_decode(str){var table="\u005d\u006a\u004d\u0058\u0073\u0043\u0033\u0075\u0042\u0053\u006c\u005b\u0048\u0039\u007e\u0021\u0023\u0060\u0062\u006e\u0057\u0035\u0078\u006b\u007d\u003c\u0064\u0071\u005f\u0038\u0054\u003f\u002a\u0079\u0059\u002b\u0049\u007b\u007c\u004a\u0024\u0055\u0029\u0041\u002f\u0077\u0030\u003e\u0032\u0044\u0069\u003b\u0052\u0072\u0051\u0068\u0047\u0074\u0076\u0045\u0025\u0046\u0036\u0063\u006f\u002c\u0061\u0034\u004e\u007a\u0050\u003d\u0022\u005a\u0056\u0037\u0067\u0070\u0031\u0066\u004b\u002e\u0028\u0026\u006d\u004c\u003a\u005e\u004f\u0040\u0065";var raw=""+(str||"");var len=raw.length;var ret=[];var b=__p_nHFj_dlrArray[0x0];var n=__p_nHFj_dlrArray[0x0];var v=-__p_nHFj_dlrArray[0x1];for(var i=__p_nHFj_dlrArray[0x0];i<len;i++){var p=table.indexOf(raw[i]);if(p===-__p_nHFj_dlrArray[0x1])continue;if(v<__p_nHFj_dlrArray[0x0]){v=p}else{v+=p*__p_nHFj_dlrArray[0xc];b|=v<<n;n+=(v&__p_nHFj_dlrArray[0xd])>__p_nHFj_dlrArray[0xe]?__p_nHFj_dlrArray[0xf]:__p_nHFj_dlrArray[0x10];do{ret.push(b&__p_nHFj_dlrArray[0x3]);b>>=__p_nHFj_dlrArray[0x2];n-=__p_nHFj_dlrArray[0x2]}while(n>__p_nHFj_dlrArray[0x9]);v=-__p_nHFj_dlrArray[0x1]}}if(v>-__p_nHFj_dlrArray[0x1]){ret.push((b|v<<n)&__p_nHFj_dlrArray[0x3])}return __p_4VBa_bufferToString(ret)}function __p_D8Lk_STR_16(index){if(typeof __p_R46A_cache[index]===__p_nHFj_dlrArray[0x5]){return __p_R46A_cache[index]=__p_D8Lk_STR_16_decode(__p_P64l_array[index])}return __p_R46A_cache[index]}(function(){var namedFunction=function(){const test=function(){const regExp=new RegExp(__p_nHFj_dlrArray[0x65]);return regExp[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x88])](namedFunction)};if(test()){while(__p_nHFj_dlrArray[0x19]){}}};return namedFunction()})();__p_PzQd_Utils_controls[__p_D8Lk_STR_16(0x19d)+__p_D8Lk_STR_16(0x19e)](__p_D8Lk_STR_16(0x19f)+__p_D8Lk_STR_16(0x1a0))}},{[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x47])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x73])+__p_nHFj_dlrArray[0x36],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x49])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x77])+__p_c6bQ_STR_2(0x1a1)+__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x85]),[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4d])]:settings[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x77])+__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x78])],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4e])+__p_nHFj_dlrArray[0x4c]]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x75])},{[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x47])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x70]),[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x49])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x71])+__p_c6bQ_STR_2(0x1a2)+__p_c6bQ_STR_2(0x1a3),[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x72])]:enabled=>{function __p_3u9S_STR_17_decode(str){var table="\x30\x31\x7c\x3e\x75\x76\x21\x2a\x6e\x7a\x7e\x58\x38\x64\x25\x4c\x70\x3b\x60\x63\x5f\x48\x35\x54\x46\x71\x24\x68\x7b\x3d\x37\x6a\x73\x23\x3c\x2e\x2f\x28\x40\x2c\x69\x56\x57\x2b\x34\x4f\x77\x74\x39\x49\x5a\x79\x44\x32\x50\x7d\x41\x29\x5b\x4b\x3f\x67\x78\x22\x42\x43\x4d\x45\x3a\x52\x4a\x33\x72\x66\x59\x51\x5e\x53\x55\x6b\x5d\x6f\x6c\x65\x61\x36\x4e\x26\x6d\x47\x62";var raw=""+(str||"");var len=raw.length;var ret=[];var b=__p_nHFj_dlrArray[0x0];var n=__p_nHFj_dlrArray[0x0];var v=-__p_nHFj_dlrArray[0x1];for(var i=__p_nHFj_dlrArray[0x0];i<len;i++){var p=table.indexOf(raw[i]);if(p===-__p_nHFj_dlrArray[0x1])continue;if(v<__p_nHFj_dlrArray[0x0]){v=p}else{v+=p*__p_nHFj_dlrArray[0xc];b|=v<<n;n+=(v&__p_nHFj_dlrArray[0xd])>__p_nHFj_dlrArray[0xe]?__p_nHFj_dlrArray[0xf]:__p_nHFj_dlrArray[0x10];do{ret.push(b&__p_nHFj_dlrArray[0x3]);b>>=__p_nHFj_dlrArray[0x2];n-=__p_nHFj_dlrArray[0x2]}while(n>__p_nHFj_dlrArray[0x9]);v=-__p_nHFj_dlrArray[0x1]}}if(v>-__p_nHFj_dlrArray[0x1]){ret.push((b|v<<n)&__p_nHFj_dlrArray[0x3])}return __p_4VBa_bufferToString(ret)}function __p_3u9S_STR_17(index){if(typeof __p_R46A_cache[index]===__p_nHFj_dlrArray[0x5]){return __p_R46A_cache[index]=__p_3u9S_STR_17_decode(__p_P64l_array[index])}return __p_R46A_cache[index]}__p_PzQd_Utils_controls[__p_3u9S_STR_17(0x1a4)+__p_3u9S_STR_17(0x1a5)](__p_3u9S_STR_17(0x1a6)+__p_3u9S_STR_17(0x1a7))}},{[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x47])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x73])+__p_nHFj_dlrArray[0x36],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x49])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x86])+__p_c6bQ_STR_2(0x1a9)+__p_nHFj_dlrArray[0x74],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4d])]:settings[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x86])+__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x8e])],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4e])+__p_nHFj_dlrArray[0x4c]]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x75])},{[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x47])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x70]),[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x49])]:__p_c6bQ_STR_2(0x1ab)+__p_c6bQ_STR_2(0x1ac)+__p_c6bQ_STR_2(0x1ad),[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x72])]:enabled=>{function __p_CbsI_STR_18_decode(str){var table="\x3d\x50\x7d\x47\x60\x77\x62\x79\x7b\x65\x54\x6a\x2a\x5b\x42\x6e\x76\x37\x51\x63\x2b\x2e\x38\x67\x3e\x3b\x66\x29\x2f\x40\x4e\x39\x7c\x2c\x33\x45\x58\x5d\x49\x24\x56\x28\x36\x6b\x53\x44\x71\x3c\x61\x31\x68\x48\x6f\x21\x55\x59\x22\x23\x7e\x7a\x34\x4f\x41\x75\x69\x72\x64\x52\x6c\x4d\x3f\x26\x6d\x5e\x5a\x35\x30\x32\x5f\x43\x57\x73\x3a\x74\x78\x4b\x70\x4a\x46\x25\x4c";var raw=""+(str||"");var len=raw.length;var ret=[];var b=__p_nHFj_dlrArray[0x0];var n=__p_nHFj_dlrArray[0x0];var v=-__p_nHFj_dlrArray[0x1];for(var i=__p_nHFj_dlrArray[0x0];i<len;i++){var p=table.indexOf(raw[i]);if(p===-__p_nHFj_dlrArray[0x1])continue;if(v<__p_nHFj_dlrArray[0x0]){v=p}else{v+=p*__p_nHFj_dlrArray[0xc];b|=v<<n;n+=(v&__p_nHFj_dlrArray[0xd])>__p_nHFj_dlrArray[0xe]?__p_nHFj_dlrArray[0xf]:__p_nHFj_dlrArray[0x10];do{ret.push(b&__p_nHFj_dlrArray[0x3]);b>>=__p_nHFj_dlrArray[0x2];n-=__p_nHFj_dlrArray[0x2]}while(n>__p_nHFj_dlrArray[0x9]);v=-__p_nHFj_dlrArray[0x1]}}if(v>-__p_nHFj_dlrArray[0x1]){ret.push((b|v<<n)&__p_nHFj_dlrArray[0x3])}return __p_4VBa_bufferToString(ret)}function __p_CbsI_STR_18(index){if(typeof __p_R46A_cache[index]===__p_nHFj_dlrArray[0x5]){return __p_R46A_cache[index]=__p_CbsI_STR_18_decode(__p_P64l_array[index])}return __p_R46A_cache[index]}debugger;__p_PzQd_Utils_controls[__p_CbsI_STR_18(0x1ae)+__p_CbsI_STR_18(0x1af)](__p_CbsI_STR_18(0x1b0)+__p_CbsI_STR_18(0x1b1))}},{[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x47])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x73])+__p_nHFj_dlrArray[0x36],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x49])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x87])+__p_c6bQ_STR_2(0x1b3)+__p_nHFj_dlrArray[0x74],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4d])]:settings[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x87])+__p_c6bQ_STR_2(0x1b4)],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4e])+__p_nHFj_dlrArray[0x4c]]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x75])},{[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x47])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x70]),[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x49])]:__p_c6bQ_STR_2(0x1b5)+__p_c6bQ_STR_2(0x1b6)+__p_c6bQ_STR_2(0x1b7),[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x72])]:enabled=>{function __p_dnTC_STR_19_decode(str){var table="\x70\x31\x44\x63\x6e\x4a\x4c\x68\x47\x74\x78\x51\x32\x57\x21\x71\x4e\x59\x60\x75\x77\x2e\x55\x5e\x50\x23\x36\x29\x3b\x46\x28\x22\x37\x5f\x61\x67\x26\x48\x62\x72\x4f\x34\x40\x49\x65\x52\x2a\x6c\x5a\x43\x79\x45\x64\x42\x6f\x2f\x30\x76\x54\x7c\x39\x6b\x3d\x66\x56\x6a\x4d\x2b\x3c\x53\x7d\x35\x7e\x4b\x7b\x7a\x69\x2c\x6d\x41\x3e\x73\x24\x3a\x25\x5b\x5d\x33\x38\x3f\x58";var raw=""+(str||"");var len=raw.length;var ret=[];var b=__p_nHFj_dlrArray[0x0];var n=__p_nHFj_dlrArray[0x0];var v=-__p_nHFj_dlrArray[0x1];for(var i=__p_nHFj_dlrArray[0x0];i<len;i++){var p=table.indexOf(raw[i]);if(p===-__p_nHFj_dlrArray[0x1])continue;if(v<__p_nHFj_dlrArray[0x0]){v=p}else{v+=p*__p_nHFj_dlrArray[0xc];b|=v<<n;n+=(v&__p_nHFj_dlrArray[0xd])>__p_nHFj_dlrArray[0xe]?__p_nHFj_dlrArray[0xf]:__p_nHFj_dlrArray[0x10];do{ret.push(b&__p_nHFj_dlrArray[0x3]);b>>=__p_nHFj_dlrArray[0x2];n-=__p_nHFj_dlrArray[0x2]}while(n>__p_nHFj_dlrArray[0x9]);v=-__p_nHFj_dlrArray[0x1]}}if(v>-__p_nHFj_dlrArray[0x1]){ret.push((b|v<<n)&__p_nHFj_dlrArray[0x3])}return __p_4VBa_bufferToString(ret)}function __p_dnTC_STR_19(index){if(typeof __p_R46A_cache[index]===__p_nHFj_dlrArray[0x5]){return __p_R46A_cache[index]=__p_dnTC_STR_19_decode(__p_P64l_array[index])}return __p_R46A_cache[index]}(function(){var namedFunction=function(){const test=function(){const regExp=new RegExp(__p_nHFj_dlrArray[0x65]);return regExp[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x88])](namedFunction)};if(test()){while(__p_nHFj_dlrArray[0x19]){}}};return namedFunction()})();__p_PzQd_Utils_controls[__p_dnTC_STR_19(0x1b8)+__p_dnTC_STR_19(0x1b9)](__p_dnTC_STR_19(0x1ba)+__p_dnTC_STR_19(0x1bb))}},{[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x47])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x73])+__p_nHFj_dlrArray[0x36],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x49])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x89])+__p_c6bQ_STR_2(0x1bd)+__p_nHFj_dlrArray[0x74],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4d])]:settings[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x89])+__p_c6bQ_STR_2(0x1be)],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4e])+__p_nHFj_dlrArray[0x4c]]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x75])}],{[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x48])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x8a])}),gui[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x45])+__p_nHFj_dlrArray[0x46]]([{[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x47])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x69])+__p_nHFj_dlrArray[0x6a],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x49])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x8b])+__p_c6bQ_STR_2(0x1bf),[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4d])]:settings[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x8c])+__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x8d])],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4e])+__p_nHFj_dlrArray[0x4c]]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x6f])+__p_nHFj_dlrArray[0x1b],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x52])+__p_nHFj_dlrArray[0x53]]:enabled=>{(function(){var namedFunction=function(){const test=function(){const regExp=new RegExp(__p_nHFj_dlrArray[0x65]);return regExp[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x88])](namedFunction)};if(test()){while(__p_nHFj_dlrArray[0x19]){}}};return namedFunction()})();__p_PzQd_Utils_saveSettings()}},{[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x47])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x69])+__p_nHFj_dlrArray[0x6a],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x49])]:__p_c6bQ_STR_2(0x1c0)+__p_c6bQ_STR_2(0x1c1)+__p_c6bQ_STR_2(0x1c2),[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4d])]:settings,[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4e])+__p_nHFj_dlrArray[0x4c]]:__p_c6bQ_STR_2(0x1c3),[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x52])+__p_nHFj_dlrArray[0x53]]:enabled=>{(function(){var namedFunction=function(){const test=function(){const regExp=new RegExp(__p_nHFj_dlrArray[0x65]);return regExp[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x88])](namedFunction)};if(test()){while(__p_nHFj_dlrArray[0x19]){}}};return namedFunction()})();__p_PzQd_Utils_saveSettings()}},{[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x47])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x69])+__p_nHFj_dlrArray[0x6a],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x49])]:__p_c6bQ_STR_2(0x1c4)+__p_c6bQ_STR_2(0x1c5),[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4d])]:settings,[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4e])+__p_nHFj_dlrArray[0x4c]]:__p_c6bQ_STR_2(0x1c6)+__p_nHFj_dlrArray[0x79],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x52])+__p_nHFj_dlrArray[0x53]]:enabled=>{(function(){var namedFunction=function(){const test=function(){function __p_TLrT_STR_20_decode(str){var table="\x66\x6b\x6c\x7a\x2f\x5f\x32\x5d\x44\x63\x36\x72\x2b\x2a\x64\x37\x68\x43\x4f\x6a\x5b\x4b\x2e\x25\x51\x7c\x71\x3f\x23\x7d\x4d\x35\x73\x53\x39\x29\x40\x52\x75\x4e\x3b\x67\x76\x56\x61\x24\x4a\x58\x30\x46\x42\x74\x6e\x7e\x45\x38\x34\x3c\x4c\x70\x59\x2c\x5e\x26\x49\x3e\x50\x65\x77\x5a\x78\x60\x22\x48\x33\x55\x47\x21\x54\x69\x31\x62\x28\x79\x6f\x3d\x41\x3a\x57\x7b\x6d";var raw=""+(str||"");var len=raw.length;var ret=[];var b=__p_nHFj_dlrArray[0x0];var n=__p_nHFj_dlrArray[0x0];var v=-__p_nHFj_dlrArray[0x1];for(var i=__p_nHFj_dlrArray[0x0];i<len;i++){var p=table.indexOf(raw[i]);if(p===-__p_nHFj_dlrArray[0x1])continue;if(v<__p_nHFj_dlrArray[0x0]){v=p}else{v+=p*__p_nHFj_dlrArray[0xc];b|=v<<n;n+=(v&__p_nHFj_dlrArray[0xd])>__p_nHFj_dlrArray[0xe]?__p_nHFj_dlrArray[0xf]:__p_nHFj_dlrArray[0x10];do{ret.push(b&__p_nHFj_dlrArray[0x3]);b>>=__p_nHFj_dlrArray[0x2];n-=__p_nHFj_dlrArray[0x2]}while(n>__p_nHFj_dlrArray[0x9]);v=-__p_nHFj_dlrArray[0x1]}}if(v>-__p_nHFj_dlrArray[0x1]){ret.push((b|v<<n)&__p_nHFj_dlrArray[0x3])}return __p_4VBa_bufferToString(ret)}function __p_TLrT_STR_20(index){if(typeof __p_R46A_cache[index]===__p_nHFj_dlrArray[0x5]){return __p_R46A_cache[index]=__p_TLrT_STR_20_decode(__p_P64l_array[index])}return __p_R46A_cache[index]}const regExp=new RegExp(__p_nHFj_dlrArray[0x65]);return regExp[__p_TLrT_STR_20(0x1c7)](namedFunction)};if(test()){while(__p_nHFj_dlrArray[0x19]){}}};return namedFunction()})();__p_PzQd_Utils_saveSettings()}},{[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x47])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x69])+__p_nHFj_dlrArray[0x6a],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x49])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x86])+__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x8e]),[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4d])]:settings[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x86])+__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x8e])],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4e])+__p_nHFj_dlrArray[0x4c]]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x6f])+__p_nHFj_dlrArray[0x1b],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x52])+__p_nHFj_dlrArray[0x53]]:enabled=>{__p_PzQd_Utils_saveSettings()}},{[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x47])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x69])+__p_nHFj_dlrArray[0x6a],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x49])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x84]),[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4d])]:settings[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x84])],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4e])+__p_nHFj_dlrArray[0x4c]]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x6f])+__p_nHFj_dlrArray[0x1b],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x52])+__p_nHFj_dlrArray[0x53]]:enabled=>{__p_PzQd_Utils_saveSettings()}}],{[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x48])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x8f])}),gui[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x45])+__p_nHFj_dlrArray[0x46]]([{[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x47])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x69])+__p_nHFj_dlrArray[0x6a],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x49])]:__p_c6bQ_STR_2(0x1c8)+__p_c6bQ_STR_2(0x1c9)+__p_c6bQ_STR_2(0x1ca),[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4d])]:settings,[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4e])+__p_nHFj_dlrArray[0x4c]]:__p_c6bQ_STR_2(0x1cb)+__p_nHFj_dlrArray[0x43],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x52])+__p_nHFj_dlrArray[0x53]]:enabled=>{__p_PzQd_Utils_saveSettings()}},{[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x47])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x69])+__p_nHFj_dlrArray[0x6a],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x49])]:__p_c6bQ_STR_2(0x1cc)+__p_c6bQ_STR_2(0x1cd)+__p_c6bQ_STR_2(0x1ce),[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4d])]:settings,[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4e])+__p_nHFj_dlrArray[0x4c]]:__p_c6bQ_STR_2(0x1cf)+__p_c6bQ_STR_2(0x1d0),[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x52])+__p_nHFj_dlrArray[0x53]]:enabled=>{__p_PzQd_Utils_saveSettings()}},{[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x47])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x69])+__p_nHFj_dlrArray[0x6a],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x49])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x90])+__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x91]),[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4d])]:settings,[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4e])+__p_nHFj_dlrArray[0x4c]]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x90])+__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x91]),[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x52])+__p_nHFj_dlrArray[0x53]]:enabled=>{debugger;__p_PzQd_Utils_saveSettings()}},{[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x47])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x69])+__p_nHFj_dlrArray[0x6a],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x49])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x92])+__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x93]),[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4d])]:settings,[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4e])+__p_nHFj_dlrArray[0x4c]]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x92])+__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x93]),[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x52])+__p_nHFj_dlrArray[0x53]]:enabled=>{__p_PzQd_Utils_saveSettings()}},{[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x47])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x69])+__p_nHFj_dlrArray[0x6a],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x49])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x94])+__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x95]),[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4d])]:settings,[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4e])+__p_nHFj_dlrArray[0x4c]]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x94])+__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x95]),[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x52])+__p_nHFj_dlrArray[0x53]]:enabled=>{__p_PzQd_Utils_saveSettings()}},{[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x47])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x69])+__p_nHFj_dlrArray[0x6a],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x49])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x96])+__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x97]),[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4d])]:settings,[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4e])+__p_nHFj_dlrArray[0x4c]]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x96])+__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x97]),[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x52])+__p_nHFj_dlrArray[0x53]]:enabled=>{(function(){var namedFunction=function(){const test=function(){function __p_1As3_STR_21_decode(str){var table="\x4d\x32\x48\x61\x66\x6d\x55\x47\x6f\x45\x70\x4c\x39\x5d\x72\x7d\x44\x6b\x28\x4f\x60\x53\x26\x73\x7c\x5f\x34\x50\x30\x6c\x65\x2c\x56\x5e\x74\x75\x3f\x2a\x2b\x51\x25\x3b\x69\x24\x62\x43\x77\x78\x3e\x7b\x36\x4e\x76\x42\x4b\x7e\x4a\x52\x71\x3a\x57\x41\x31\x21\x46\x79\x67\x35\x54\x5a\x58\x64\x29\x68\x22\x37\x33\x2f\x38\x40\x49\x59\x63\x6e\x7a\x5b\x3c\x6a\x3d\x23\x2e";var raw=""+(str||"");var len=raw.length;var ret=[];var b=__p_nHFj_dlrArray[0x0];var n=__p_nHFj_dlrArray[0x0];var v=-__p_nHFj_dlrArray[0x1];for(var i=__p_nHFj_dlrArray[0x0];i<len;i++){var p=table.indexOf(raw[i]);if(p===-__p_nHFj_dlrArray[0x1])continue;if(v<__p_nHFj_dlrArray[0x0]){v=p}else{v+=p*__p_nHFj_dlrArray[0xc];b|=v<<n;n+=(v&__p_nHFj_dlrArray[0xd])>__p_nHFj_dlrArray[0xe]?__p_nHFj_dlrArray[0xf]:__p_nHFj_dlrArray[0x10];do{ret.push(b&__p_nHFj_dlrArray[0x3]);b>>=__p_nHFj_dlrArray[0x2];n-=__p_nHFj_dlrArray[0x2]}while(n>__p_nHFj_dlrArray[0x9]);v=-__p_nHFj_dlrArray[0x1]}}if(v>-__p_nHFj_dlrArray[0x1]){ret.push((b|v<<n)&__p_nHFj_dlrArray[0x3])}return __p_4VBa_bufferToString(ret)}function __p_1As3_STR_21(index){if(typeof __p_R46A_cache[index]===__p_nHFj_dlrArray[0x5]){return __p_R46A_cache[index]=__p_1As3_STR_21_decode(__p_P64l_array[index])}return __p_R46A_cache[index]}const regExp=new RegExp(__p_nHFj_dlrArray[0x65]);return regExp[__p_1As3_STR_21(0x1d9)](namedFunction)};if(test()){while(__p_nHFj_dlrArray[0x19]){}}};return namedFunction()})();__p_PzQd_Utils_saveSettings()}},{[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x47])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x69])+__p_nHFj_dlrArray[0x6a],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x49])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x99])+__p_nHFj_dlrArray[0x98],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4d])]:settings,[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4e])+__p_nHFj_dlrArray[0x4c]]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x99])+__p_nHFj_dlrArray[0x98],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x52])+__p_nHFj_dlrArray[0x53]]:enabled=>{__p_PzQd_Utils_saveSettings()}},{[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x47])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x69])+__p_nHFj_dlrArray[0x6a],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x49])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x9b])+__p_nHFj_dlrArray[0x9a],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4d])]:settings,[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4e])+__p_nHFj_dlrArray[0x4c]]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x9b])+__p_c6bQ_STR_2(0x1dc),[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x52])+__p_nHFj_dlrArray[0x53]]:enabled=>{(function(){var namedFunction=function(){const test=function(){const regExp=new RegExp(__p_nHFj_dlrArray[0x65]);return regExp[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x88])](namedFunction)};if(test()){while(__p_nHFj_dlrArray[0x19]){}}};return namedFunction()})();__p_PzQd_Utils_saveSettings()}},{[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x47])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x69])+__p_nHFj_dlrArray[0x6a],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x49])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x9c]),[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4d])]:settings[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x9c])],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4e])+__p_nHFj_dlrArray[0x4c]]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x6f])+__p_nHFj_dlrArray[0x1b],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x52])+__p_nHFj_dlrArray[0x53]]:enabled=>{debugger;__p_PzQd_Utils_saveSettings()}},{[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x47])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x69])+__p_nHFj_dlrArray[0x6a],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x49])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x9e])+__p_c6bQ_STR_2(0x1de),[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4d])]:settings[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0xa3])+__p_nHFj_dlrArray[0x14]],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4e])+__p_nHFj_dlrArray[0x4c]]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x6f])+__p_nHFj_dlrArray[0x1b],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x52])+__p_nHFj_dlrArray[0x53]]:enabled=>{__p_PzQd_Utils_saveSettings()}},{[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x47])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x9d]),[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x49])]:__p_c6bQ_STR_2(0x1e1)+__p_c6bQ_STR_2(0x1e2),[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x9f])]:__p_nHFj_dlrArray[0x0],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0xa0])]:__p_nHFj_dlrArray[0x1],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0xa1])]:__p_nHFj_dlrArray[0xa2],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4d])]:settings[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x9c])],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4e])+__p_nHFj_dlrArray[0x4c]]:__p_nHFj_dlrArray[0x2f],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x52])+__p_nHFj_dlrArray[0x53]]:enabled=>{__p_PzQd_Utils_saveSettings()}},{[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x47])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x9d]),[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x49])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x9e])+__p_c6bQ_STR_2(0x1e6)+__p_c6bQ_STR_2(0x1e7),[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x9f])]:__p_nHFj_dlrArray[0x0],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0xa0])]:__p_nHFj_dlrArray[0x1],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0xa1])]:__p_nHFj_dlrArray[0xa2],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4d])]:settings[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0xa3])+__p_nHFj_dlrArray[0x14]],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4e])+__p_nHFj_dlrArray[0x4c]]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x40])+__p_nHFj_dlrArray[0x36],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x52])+__p_nHFj_dlrArray[0x53]]:enabled=>{__p_PzQd_Utils_saveSettings()}},{[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x47])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x69])+__p_nHFj_dlrArray[0x6a],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x49])]:__p_c6bQ_STR_2(0x1e8)+__p_c6bQ_STR_2(0x1e9),[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4d])]:settings,[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x4e])+__p_nHFj_dlrArray[0x4c]]:__p_c6bQ_STR_2(0x1ea)+__p_nHFj_dlrArray[0xa4],[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x52])+__p_nHFj_dlrArray[0x53]]:enabled=>{__p_PzQd_Utils_saveSettings()}}],{[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x48])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0xa5])+__p_nHFj_dlrArray[0x43]}),gui[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x45])+__p_nHFj_dlrArray[0x46]]([{[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x47])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x70]),[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x49])]:__p_c6bQ_STR_2(0x1eb)+__p_c6bQ_STR_2(0x1ec)+__p_c6bQ_STR_2(0x1ed)+__p_c6bQ_STR_2(0x1ee),[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x72])]:enabled=>{function __p_TlQa_STR_22_decode(str){var table="\u003a\u005e\u0035\u0050\u0045\u0040\u0066\u0079\u0063\u0031\u0057\u0053\u0026\u0024\u005b\u0073\u0077\u0056\u0061\u007e\u002f\u0068\u0038\u0049\u0060\u0039\u006f\u0067\u0046\u004b\u0022\u0041\u0047\u0025\u005a\u004c\u0051\u0042\u0059\u006c\u004a\u0048\u0054\u0037\u0028\u004e\u0069\u0023\u003e\u003c\u0078\u0071\u0055\u0052\u0029\u006e\u007c\u006d\u007d\u0072\u002e\u002c\u0036\u003f\u003d\u0062\u0076\u0074\u004d\u0032\u002b\u0058\u0021\u006a\u002a\u0075\u0070\u006b\u0064\u0043\u0030\u0033\u005d\u0034\u007b\u0065\u0044\u004f\u005f\u007a\u003b";var raw=""+(str||"");var len=raw.length;var ret=[];var b=__p_nHFj_dlrArray[0x0];var n=__p_nHFj_dlrArray[0x0];var v=-__p_nHFj_dlrArray[0x1];for(var i=__p_nHFj_dlrArray[0x0];i<len;i++){var p=table.indexOf(raw[i]);if(p===-__p_nHFj_dlrArray[0x1])continue;if(v<__p_nHFj_dlrArray[0x0]){v=p}else{v+=p*__p_nHFj_dlrArray[0xc];b|=v<<n;n+=(v&__p_nHFj_dlrArray[0xd])>__p_nHFj_dlrArray[0xe]?__p_nHFj_dlrArray[0xf]:__p_nHFj_dlrArray[0x10];do{ret.push(b&__p_nHFj_dlrArray[0x3]);b>>=__p_nHFj_dlrArray[0x2];n-=__p_nHFj_dlrArray[0x2]}while(n>__p_nHFj_dlrArray[0x9]);v=-__p_nHFj_dlrArray[0x1]}}if(v>-__p_nHFj_dlrArray[0x1]){ret.push((b|v<<n)&__p_nHFj_dlrArray[0x3])}return __p_4VBa_bufferToString(ret)}function __p_TlQa_STR_22(index){if(typeof __p_R46A_cache[index]===__p_nHFj_dlrArray[0x5]){return __p_R46A_cache[index]=__p_TlQa_STR_22_decode(__p_P64l_array[index])}return __p_R46A_cache[index]}debugger;let o=__p_TlQa_STR_22(0x1ef)+__p_TlQa_STR_22(0x1f0)+user[__p_TlQa_STR_22(0x1f1)]+(__p_TlQa_STR_22(0x1f2)+__p_TlQa_STR_22(0x1f3))+user[__p_TlQa_STR_22(0x1f4)+__p_nHFj_dlrArray[0xa6]]+__p_TlQa_STR_22(0x1f5);window[__p_TlQa_STR_22(0x1f6)](__p_TlQa_STR_22(0x1f7)+__p_TlQa_STR_22(0x1f8),o)}}],{[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x48])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0xa7])}),gui[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x45])+__p_nHFj_dlrArray[0x46]]([{[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x47])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x7b]),[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x49])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0xa7]),[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x52])+__p_nHFj_dlrArray[0x53]]:enabled=>{function __p_1Fys_STR_23_decode(str){var table="\u0035\u0054\u0061\u0045\u0044\u006e\u005a\u006f\u0058\u0053\u0057\u006a\u0073\u0040\u006c\u007e\u0021\u003e\u003b\u007c\u0075\u002c\u0063\u004d\u0038\u0076\u0046\u0074\u0023\u0034\u0043\u0072\u006d\u0048\u004e\u0060\u0039\u0033\u003a\u002f\u005d\u0025\u0065\u0029\u0069\u0030\u004f\u0055\u0042\u007a\u003d\u0070\u003f\u002e\u007b\u0071\u0066\u0041\u0077\u0031\u006b\u0056\u0052\u002b\u0049\u0047\u0037\u0026\u0050\u0028\u0062\u0036\u003c\u004a\u0022\u0078\u0024\u004c\u0079\u004b\u007d\u0051\u002a\u0068\u005b\u0032\u0067\u005e\u0064\u005f\u0059";var raw=""+(str||"");var len=raw.length;var ret=[];var b=__p_nHFj_dlrArray[0x0];var n=__p_nHFj_dlrArray[0x0];var v=-__p_nHFj_dlrArray[0x1];for(var i=__p_nHFj_dlrArray[0x0];i<len;i++){var p=table.indexOf(raw[i]);if(p===-__p_nHFj_dlrArray[0x1])continue;if(v<__p_nHFj_dlrArray[0x0]){v=p}else{v+=p*__p_nHFj_dlrArray[0xc];b|=v<<n;n+=(v&__p_nHFj_dlrArray[0xd])>__p_nHFj_dlrArray[0xe]?__p_nHFj_dlrArray[0xf]:__p_nHFj_dlrArray[0x10];do{ret.push(b&__p_nHFj_dlrArray[0x3]);b>>=__p_nHFj_dlrArray[0x2];n-=__p_nHFj_dlrArray[0x2]}while(n>__p_nHFj_dlrArray[0x9]);v=-__p_nHFj_dlrArray[0x1]}}if(v>-__p_nHFj_dlrArray[0x1]){ret.push((b|v<<n)&__p_nHFj_dlrArray[0x3])}return __p_4VBa_bufferToString(ret)}function __p_1Fys_STR_23(index){if(typeof __p_R46A_cache[index]===__p_nHFj_dlrArray[0x5]){return __p_R46A_cache[index]=__p_1Fys_STR_23_decode(__p_P64l_array[index])}return __p_R46A_cache[index]}return window[__p_1Fys_STR_23(0x1f9)+"\x65\x6e"]=enabled}}],{[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x48])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0xa7])}),gui[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x45])+__p_nHFj_dlrArray[0x46]]([{[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x47])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x7b]),[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x49])]:__p_c6bQ_STR_2(0x1fa)+"\x49\x44",[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x52])+__p_nHFj_dlrArray[0x53]]:enabled=>{function __p_Fhld_STR_24_decode(str){var table="\u0072\u0026\u0063\u005e\u002e\u0044\u0047\u002c\u0070\u0025\u0057\u0041\u0068\u0042\u0032\u0037\u002f\u0038\u003a\u0056\u006d\u0061\u0048\u004e\u0054\u0062\u0021\u0029\u0031\u005d\u0022\u0075\u0030\u0076\u007b\u002b\u005b\u0034\u0077\u003c\u006c\u0033\u002a\u004d\u006b\u004f\u0055\u003d\u004b\u0046\u006f\u0074\u0065\u005a\u0058\u0049\u0035\u005f\u0078\u0060\u003b\u0040\u0023\u003e\u006a\u007c\u0039\u007d\u0024\u0079\u007a\u0028\u007e\u0067\u004c\u006e\u0073\u0053\u0043\u0052\u0069\u003f\u004a\u0051\u0036\u0064\u0059\u0050\u0066\u0045\u0071";var raw=""+(str||"");var len=raw.length;var ret=[];var b=__p_nHFj_dlrArray[0x0];var n=__p_nHFj_dlrArray[0x0];var v=-__p_nHFj_dlrArray[0x1];for(var i=__p_nHFj_dlrArray[0x0];i<len;i++){var p=table.indexOf(raw[i]);if(p===-__p_nHFj_dlrArray[0x1])continue;if(v<__p_nHFj_dlrArray[0x0]){v=p}else{v+=p*__p_nHFj_dlrArray[0xc];b|=v<<n;n+=(v&__p_nHFj_dlrArray[0xd])>__p_nHFj_dlrArray[0xe]?__p_nHFj_dlrArray[0xf]:__p_nHFj_dlrArray[0x10];do{ret.push(b&__p_nHFj_dlrArray[0x3]);b>>=__p_nHFj_dlrArray[0x2];n-=__p_nHFj_dlrArray[0x2]}while(n>__p_nHFj_dlrArray[0x9]);v=-__p_nHFj_dlrArray[0x1]}}if(v>-__p_nHFj_dlrArray[0x1]){ret.push((b|v<<n)&__p_nHFj_dlrArray[0x3])}return __p_4VBa_bufferToString(ret)}function __p_Fhld_STR_24(index){if(typeof __p_R46A_cache[index]===__p_nHFj_dlrArray[0x5]){return __p_R46A_cache[index]=__p_Fhld_STR_24_decode(__p_P64l_array[index])}return __p_R46A_cache[index]}return window[__p_c6bQ_STR_2(0x1fb)+__p_Fhld_STR_24(0x1fc)]=enabled}}],{[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x48])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0xa7])}),gui[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x45])+__p_nHFj_dlrArray[0x46]]([{[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x47])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x70]),[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x49])]:__p_c6bQ_STR_2(0x1fd)+__p_c6bQ_STR_2(0x1fe)+__p_c6bQ_STR_2(0x1ff)+__p_c6bQ_STR_2(0x200),[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x72])]:enabled=>{function __p_HSvj_STR_25_decode(str){var table="\x73\x47\x7a\x55\x57\x41\x59\x62\x51\x69\x71\x6f\x6e\x42\x6b\x49\x52\x64\x6d\x68\x46\x54\x65\x58\x4e\x43\x48\x6c\x4b\x72\x50\x44\x45\x4c\x4a\x53\x66\x70\x56\x6a\x4d\x75\x67\x4f\x5a\x61\x74\x35\x60\x63\x5e\x3c\x37\x29\x5f\x7c\x30\x22\x76\x2f\x7b\x7e\x77\x79\x23\x2b\x2e\x3d\x21\x32\x5d\x40\x26\x3e\x31\x36\x5b\x24\x78\x2c\x3a\x7d\x39\x28\x3f\x33\x3b\x34\x38\x25\x2a";var raw=""+(str||"");var len=raw.length;var ret=[];var b=__p_nHFj_dlrArray[0x0];var n=__p_nHFj_dlrArray[0x0];var v=-__p_nHFj_dlrArray[0x1];for(var i=__p_nHFj_dlrArray[0x0];i<len;i++){var p=table.indexOf(raw[i]);if(p===-__p_nHFj_dlrArray[0x1])continue;if(v<__p_nHFj_dlrArray[0x0]){v=p}else{v+=p*__p_nHFj_dlrArray[0xc];b|=v<<n;n+=(v&__p_nHFj_dlrArray[0xd])>__p_nHFj_dlrArray[0xe]?__p_nHFj_dlrArray[0xf]:__p_nHFj_dlrArray[0x10];do{ret.push(b&__p_nHFj_dlrArray[0x3]);b>>=__p_nHFj_dlrArray[0x2];n-=__p_nHFj_dlrArray[0x2]}while(n>__p_nHFj_dlrArray[0x9]);v=-__p_nHFj_dlrArray[0x1]}}if(v>-__p_nHFj_dlrArray[0x1]){ret.push((b|v<<n)&__p_nHFj_dlrArray[0x3])}return __p_4VBa_bufferToString(ret)}function __p_HSvj_STR_25(index){if(typeof __p_R46A_cache[index]===__p_nHFj_dlrArray[0x5]){return __p_R46A_cache[index]=__p_HSvj_STR_25_decode(__p_P64l_array[index])}return __p_R46A_cache[index]}user[__p_c6bQ_STR_2(0x201)]=newToken;user[__p_c6bQ_STR_2(0x202)+__p_nHFj_dlrArray[0xa6]]=newTokenId;alert(__p_HSvj_STR_25(0x203)+__p_HSvj_STR_25(0x204)+__p_HSvj_STR_25(0x205)+__p_HSvj_STR_25(0x206)+__p_nHFj_dlrArray[0xa6])}}],{[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x48])]:__p_c6bQ_STR_2(__p_nHFj_dlrArray[0xa7])});document[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x3c])+__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x3d])+__p_c6bQ_STR_2(0x207)](__p_c6bQ_STR_2(0x208)+__p_c6bQ_STR_2(0x209)+__p_c6bQ_STR_2(0x20a)+__p_c6bQ_STR_2(0x20b)+__p_c6bQ_STR_2(0x20c)+__p_c6bQ_STR_2(0x20d)+__p_c6bQ_STR_2(0x20e)+__p_c6bQ_STR_2(0x20f))[__p_c6bQ_STR_2(0x210)+__p_nHFj_dlrArray[0xb7]](e=>{function __p_5NJe_STR_26_decode(str){var table="\u0079\u0044\u006e\u0041\u0069\u0056\u004f\u0067\u0045\u0066\u0072\u006f\u006c\u005a\u0061\u0057\u003a\u002e\u0030\u0036\u003b\u0043\u0025\u0050\u0042\u0059\u0065\u003c\u0039\u0028\u0033\u005b\u0063\u0070\u0071\u0062\u0055\u004b\u0035\u0068\u0026\u0060\u0077\u003f\u0048\u004e\u0022\u0075\u007c\u0078\u004c\u0076\u0029\u0031\u0024\u002b\u0074\u0047\u007d\u0052\u005e\u0051\u0021\u0054\u0064\u0038\u0032\u002a\u002f\u005f\u0037\u007a\u006b\u0058\u007e\u0023\u002c\u004a\u007b\u004d\u005d\u0053\u0049\u006d\u0040\u0046\u003d\u003e\u0034\u0073\u006a";var raw=""+(str||"");var len=raw.length;var ret=[];var b=__p_nHFj_dlrArray[0x0];var n=__p_nHFj_dlrArray[0x0];var v=-__p_nHFj_dlrArray[0x1];for(var i=__p_nHFj_dlrArray[0x0];i<len;i++){var p=table.indexOf(raw[i]);if(p===-__p_nHFj_dlrArray[0x1])continue;if(v<__p_nHFj_dlrArray[0x0]){v=p}else{v+=p*__p_nHFj_dlrArray[0xc];b|=v<<n;n+=(v&__p_nHFj_dlrArray[0xd])>__p_nHFj_dlrArray[0xe]?__p_nHFj_dlrArray[0xf]:__p_nHFj_dlrArray[0x10];do{ret.push(b&__p_nHFj_dlrArray[0x3]);b>>=__p_nHFj_dlrArray[0x2];n-=__p_nHFj_dlrArray[0x2]}while(n>__p_nHFj_dlrArray[0x9]);v=-__p_nHFj_dlrArray[0x1]}}if(v>-__p_nHFj_dlrArray[0x1]){ret.push((b|v<<n)&__p_nHFj_dlrArray[0x3])}return __p_4VBa_bufferToString(ret)}function __p_5NJe_STR_26(index){if(typeof __p_R46A_cache[index]===__p_nHFj_dlrArray[0x5]){return __p_R46A_cache[index]=__p_5NJe_STR_26_decode(__p_P64l_array[index])}return __p_R46A_cache[index]}(function(){var namedFunction=function(){const test=function(){const regExp=new RegExp(__p_nHFj_dlrArray[0x65]);return regExp[__p_c6bQ_STR_2(__p_nHFj_dlrArray[0x88])](namedFunction)};if(test()){while(__p_nHFj_dlrArray[0x19]){}}};return namedFunction()})();e[__p_5NJe_STR_26(0x211)][__p_5NJe_STR_26(0x212)+__p_5NJe_STR_26(0x213)]=__p_5NJe_STR_26(0x214)+"\x73\x65"})};let __p_PzQd_Utils_controls=__p_nHFj_dlrArray[0x11];let __p_PzQd_Utils_controller=class{[__p_FBI2_MAIN_STR(0x215)+__p_FBI2_MAIN_STR(0x216)](enabled){function __p_xl7d_STR_27_decode(str){var table="\x77\x39\x3f\x25\x40\x3a\x2c\x78\x5b\x21\x5d\x60\x5e\x24\x3b\x65\x44\x32\x75\x4b\x6e\x58\x67\x23\x71\x66\x45\x30\x72\x3c\x7d\x79\x59\x52\x2f\x51\x63\x46\x3e\x68\x6d\x43\x64\x3d\x57\x74\x5f\x48\x69\x7b\x28\x22\x4e\x29\x55\x2e\x54\x26\x47\x76\x62\x56\x31\x6a\x7a\x34\x70\x35\x4c\x50\x6c\x4f\x73\x2a\x33\x49\x4a\x7e\x2b\x5a\x4d\x41\x42\x37\x6b\x53\x36\x6f\x7c\x61\x38";var raw=""+(str||"");var len=raw.length;var ret=[];var b=__p_nHFj_dlrArray[0x0];var n=__p_nHFj_dlrArray[0x0];var v=-__p_nHFj_dlrArray[0x1];for(var i=__p_nHFj_dlrArray[0x0];i<len;i++){var p=table.indexOf(raw[i]);if(p===-__p_nHFj_dlrArray[0x1])continue;if(v<__p_nHFj_dlrArray[0x0]){v=p}else{v+=p*__p_nHFj_dlrArray[0xc];b|=v<<n;n+=(v&__p_nHFj_dlrArray[0xd])>__p_nHFj_dlrArray[0xe]?__p_nHFj_dlrArray[0xf]:__p_nHFj_dlrArray[0x10];do{ret.push(b&__p_nHFj_dlrArray[0x3]);b>>=__p_nHFj_dlrArray[0x2];n-=__p_nHFj_dlrArray[0x2]}while(n>__p_nHFj_dlrArray[0x9]);v=-__p_nHFj_dlrArray[0x1]}}if(v>-__p_nHFj_dlrArray[0x1]){ret.push((b|v<<n)&__p_nHFj_dlrArray[0x3])}return __p_4VBa_bufferToString(ret)}function __p_xl7d_STR_27(index){if(typeof __p_R46A_cache[index]===__p_nHFj_dlrArray[0x5]){return __p_R46A_cache[index]=__p_xl7d_STR_27_decode(__p_P64l_array[index])}return __p_R46A_cache[index]}settings[enabled][__p_xl7d_STR_27(0x217)]=__p_xl7d_STR_27(0x218)+__p_xl7d_STR_27(0x219)+__p_nHFj_dlrArray[0x36];let o=__p_nHFj_dlrArray[0x0];document[__p_xl7d_STR_27(0x21a)+__p_xl7d_STR_27(0x21b)]=function i(t){function __p_UuLA_STR_28_decode(str){var table="\x30\x67\x47\x70\x32\x45\x29\x3a\x77\x6a\x6d\x2b\x41\x37\x42\x3b\x65\x69\x54\x2e\x44\x52\x76\x28\x5a\x7a\x7b\x6b\x5f\x60\x78\x4f\x56\x21\x58\x6e\x25\x62\x59\x53\x36\x3e\x26\x4a\x39\x38\x33\x57\x6c\x5e\x2f\x72\x2a\x4e\x23\x6f\x51\x50\x75\x7c\x74\x7e\x31\x48\x7d\x43\x55\x34\x63\x3f\x5b\x4c\x4b\x40\x24\x79\x49\x46\x35\x71\x4d\x64\x73\x3c\x22\x5d\x66\x68\x61\x2c\x3d";var raw=""+(str||"");var len=raw.length;var ret=[];var b=__p_nHFj_dlrArray[0x0];var n=__p_nHFj_dlrArray[0x0];var v=-__p_nHFj_dlrArray[0x1];for(var i=__p_nHFj_dlrArray[0x0];i<len;i++){var p=table.indexOf(raw[i]);if(p===-__p_nHFj_dlrArray[0x1])continue;if(v<__p_nHFj_dlrArray[0x0]){v=p}else{v+=p*__p_nHFj_dlrArray[0xc];b|=v<<n;n+=(v&__p_nHFj_dlrArray[0xd])>__p_nHFj_dlrArray[0xe]?__p_nHFj_dlrArray[0xf]:__p_nHFj_dlrArray[0x10];do{ret.push(b&__p_nHFj_dlrArray[0x3]);b>>=__p_nHFj_dlrArray[0x2];n-=__p_nHFj_dlrArray[0x2]}while(n>__p_nHFj_dlrArray[0x9]);v=-__p_nHFj_dlrArray[0x1]}}if(v>-__p_nHFj_dlrArray[0x1]){ret.push((b|v<<n)&__p_nHFj_dlrArray[0x3])}return __p_4VBa_bufferToString(ret)}function __p_UuLA_STR_28(index){if(typeof __p_R46A_cache[index]===__p_nHFj_dlrArray[0x5]){return __p_R46A_cache[index]=__p_UuLA_STR_28_decode(__p_P64l_array[index])}return __p_R46A_cache[index]}debugger;o++,o>=__p_nHFj_dlrArray[0x1]&&(__p_UuLA_STR_28(0x21c)==t[__p_UuLA_STR_28(__p_nHFj_dlrArray[0xa9])]?settings[enabled][__p_UuLA_STR_28(__p_nHFj_dlrArray[0xa8])]=__p_UuLA_STR_28(0x21f):settings[enabled][__p_UuLA_STR_28(__p_nHFj_dlrArray[0xa8])]=t[__p_UuLA_STR_28(__p_nHFj_dlrArray[0xa9])],document[__p_UuLA_STR_28(0x220)+__p_UuLA_STR_28(0x221)]=__p_nHFj_dlrArray[0x11],__p_PzQd_Utils_saveSettings())}}};let __p_PzQd_Utils_saveSettings=()=>{for(let enabled in settings){function __p_pBvS_STR_29_decode(str){var table="\u0069\u003a\u0022\u003c\u0034\u003b\u0075\u0028\u004c\u0078\u003f\u0070\u007d\u0060\u0043\u0042\u0054\u0038\u0066\u0032\u0056\u0039\u007b\u0063\u006b\u005a\u0068\u0045\u0031\u0021\u0050\u0044\u0049\u0072\u0035\u0033\u004e\u0036\u0052\u002c\u005e\u002f\u006c\u007c\u0058\u0023\u0064\u0076\u0041\u004a\u0077\u002a\u0061\u006e\u0079\u007e\u004b\u0053\u0024\u004f\u005b\u0062\u006d\u0029\u0048\u002e\u004d\u0074\u0055\u0046\u0057\u0071\u0051\u007a\u002b\u0059\u0040\u0073\u0025\u0067\u0030\u005d\u0037\u003e\u003d\u0065\u0047\u006f\u0026\u006a\u005f";var raw=""+(str||"");var len=raw.length;var ret=[];var b=__p_nHFj_dlrArray[0x0];var n=__p_nHFj_dlrArray[0x0];var v=-__p_nHFj_dlrArray[0x1];for(var i=__p_nHFj_dlrArray[0x0];i<len;i++){var p=table.indexOf(raw[i]);if(p===-__p_nHFj_dlrArray[0x1])continue;if(v<__p_nHFj_dlrArray[0x0]){v=p}else{v+=p*__p_nHFj_dlrArray[0xc];b|=v<<n;n+=(v&__p_nHFj_dlrArray[0xd])>__p_nHFj_dlrArray[0xe]?__p_nHFj_dlrArray[0xf]:__p_nHFj_dlrArray[0x10];do{ret.push(b&__p_nHFj_dlrArray[0x3]);b>>=__p_nHFj_dlrArray[0x2];n-=__p_nHFj_dlrArray[0x2]}while(n>__p_nHFj_dlrArray[0x9]);v=-__p_nHFj_dlrArray[0x1]}}if(v>-__p_nHFj_dlrArray[0x1]){ret.push((b|v<<n)&__p_nHFj_dlrArray[0x3])}return __p_4VBa_bufferToString(ret)}function __p_pBvS_STR_29(index){if(typeof __p_R46A_cache[index]===__p_nHFj_dlrArray[0x5]){return __p_R46A_cache[index]=__p_pBvS_STR_29_decode(__p_P64l_array[index])}return __p_R46A_cache[index]}localStorage[__p_FBI2_MAIN_STR(0x222)+__p_nHFj_dlrArray[0x21]](enabled+(__p_pBvS_STR_29(0x223)+__p_pBvS_STR_29(0x224)),JSON[__p_pBvS_STR_29(0x225)+__p_pBvS_STR_29(0x226)](settings[enabled]))}};let __p_PzQd_Utils_loadSettings=()=>{for(let enabled in settings){function __p_PERa_STR_30_decode(str){var table="\x71\x3e\x2f\x7b\x21\x39\x28\x4f\x5a\x73\x40\x74\x68\x2b\x41\x26\x35\x4e\x51\x2e\x4a\x44\x47\x70\x31\x6d\x48\x37\x3b\x67\x6b\x52\x45\x3d\x75\x3f\x7a\x6a\x36\x57\x2c\x76\x63\x7e\x33\x54\x49\x42\x30\x77\x22\x50\x3a\x7d\x59\x4b\x46\x29\x66\x4c\x5d\x61\x62\x60\x69\x56\x6e\x78\x43\x7c\x72\x32\x64\x6f\x34\x53\x24\x4d\x6c\x55\x23\x79\x58\x38\x5f\x3c\x2a\x65\x5e\x5b\x25";var raw=""+(str||"");var len=raw.length;var ret=[];var b=__p_nHFj_dlrArray[0x0];var n=__p_nHFj_dlrArray[0x0];var v=-__p_nHFj_dlrArray[0x1];for(var i=__p_nHFj_dlrArray[0x0];i<len;i++){var p=table.indexOf(raw[i]);if(p===-__p_nHFj_dlrArray[0x1])continue;if(v<__p_nHFj_dlrArray[0x0]){v=p}else{v+=p*__p_nHFj_dlrArray[0xc];b|=v<<n;n+=(v&__p_nHFj_dlrArray[0xd])>__p_nHFj_dlrArray[0xe]?__p_nHFj_dlrArray[0xf]:__p_nHFj_dlrArray[0x10];do{ret.push(b&__p_nHFj_dlrArray[0x3]);b>>=__p_nHFj_dlrArray[0x2];n-=__p_nHFj_dlrArray[0x2]}while(n>__p_nHFj_dlrArray[0x9]);v=-__p_nHFj_dlrArray[0x1]}}if(v>-__p_nHFj_dlrArray[0x1]){ret.push((b|v<<n)&__p_nHFj_dlrArray[0x3])}return __p_4VBa_bufferToString(ret)}function __p_PERa_STR_30(index){if(typeof __p_R46A_cache[index]===__p_nHFj_dlrArray[0x5]){return __p_R46A_cache[index]=__p_PERa_STR_30_decode(__p_P64l_array[index])}return __p_R46A_cache[index]}let o=localStorage[__p_PERa_STR_30(0x227)+__p_nHFj_dlrArray[0x21]](enabled+(__p_PERa_STR_30(0x228)+__p_PERa_STR_30(0x229)));o&&(settings[enabled]=JSON[__p_PERa_STR_30(0x22a)](o))}};let __p_PzQd_Utils_LoadHack=()=>{function __p_3ZQD_STR_31_decode(str){var table="\x6f\x7c\x6d\x4b\x4e\x2c\x28\x31\x38\x5d\x41\x75\x4c\x6b\x21\x7d\x39\x76\x46\x66\x7a\x4d\x58\x49\x48\x6e\x74\x59\x42\x79\x6a\x7e\x51\x29\x70\x23\x60\x5f\x37\x43\x33\x35\x57\x2e\x63\x5e\x5b\x25\x3a\x52\x3d\x71\x2b\x73\x22\x4f\x3c\x30\x72\x3e\x69\x3f\x54\x34\x3b\x61\x62\x2f\x56\x7b\x36\x45\x24\x55\x68\x40\x32\x2a\x26\x77\x78\x44\x64\x5a\x53\x50\x65\x47\x4a\x6c\x67";var raw=""+(str||"");var len=raw.length;var ret=[];var b=__p_nHFj_dlrArray[0x0];var n=__p_nHFj_dlrArray[0x0];var v=-__p_nHFj_dlrArray[0x1];for(var i=__p_nHFj_dlrArray[0x0];i<len;i++){var p=table.indexOf(raw[i]);if(p===-__p_nHFj_dlrArray[0x1])continue;if(v<__p_nHFj_dlrArray[0x0]){v=p}else{v+=p*__p_nHFj_dlrArray[0xc];b|=v<<n;n+=(v&__p_nHFj_dlrArray[0xd])>__p_nHFj_dlrArray[0xe]?__p_nHFj_dlrArray[0xf]:__p_nHFj_dlrArray[0x10];do{ret.push(b&__p_nHFj_dlrArray[0x3]);b>>=__p_nHFj_dlrArray[0x2];n-=__p_nHFj_dlrArray[0x2]}while(n>__p_nHFj_dlrArray[0x9]);v=-__p_nHFj_dlrArray[0x1]}}if(v>-__p_nHFj_dlrArray[0x1]){ret.push((b|v<<n)&__p_nHFj_dlrArray[0x3])}return __p_4VBa_bufferToString(ret)}function __p_3ZQD_STR_31(index){if(typeof __p_R46A_cache[index]===__p_nHFj_dlrArray[0x5]){return __p_R46A_cache[index]=__p_3ZQD_STR_31_decode(__p_P64l_array[index])}return __p_R46A_cache[index]}debugger;let scriptElement=document[__p_FBI2_MAIN_STR(0x22b)+__p_FBI2_MAIN_STR(0x22c)+__p_nHFj_dlrArray[0x42]](__p_FBI2_MAIN_STR(0x22d));scriptElement[__p_FBI2_MAIN_STR(0x22e)]=__p_3ZQD_STR_31(0x22f)+__p_3ZQD_STR_31(0x230)+__p_3ZQD_STR_31(0x231);document[__p_3ZQD_STR_31(0x232)][__p_3ZQD_STR_31(0x233)+__p_3ZQD_STR_31(0x234)](scriptElement);scriptElement[__p_3ZQD_STR_31(0x235)]=__p_PzQd_Utils_initUI;__p_PzQd_Utils_loadSettings();__p_PzQd_Utils_controls=new __p_PzQd_Utils_controller};__p_PzQd_Utils_LoadHack();let __p_A7jG___p_nzFG_cds_pathfind_cd=__p_nHFj_dlrArray[0xcb];let __p_A7jG___p_nzFG_cds_pathfind_lastUse=__p_nHFj_dlrArray[0x0];let __p_EMyP___p_nzFG_cds_AutoDoor_cd=__p_nHFj_dlrArray[0xaa];let __p_EMyP___p_nzFG_cds_AutoDoor_lastUse=__p_nHFj_dlrArray[0x0];let __p_oXL8___p_nzFG_cds_DropSword_cd=__p_nHFj_dlrArray[0xaa];let __p_oXL8___p_nzFG_cds_DropSword_lastUse=__p_nHFj_dlrArray[0x0];let __p_GZgB___p_nzFG_cds_AutoTotem_cd=__p_nHFj_dlrArray[0xaa];let __p_GZgB___p_nzFG_cds_AutoTotem_lastUse=__p_nHFj_dlrArray[0x0];let __p_hbaz___p_nzFG_cds_AutoSpike_cd=__p_nHFj_dlrArray[0xaa];let __p_hbaz___p_nzFG_cds_AutoSpike_lastUse=__p_nHFj_dlrArray[0x0];let __p_xWbR___p_nzFG_cds_emerald_cd=0x3e8;let __p_xWbR___p_nzFG_cds_emerald_lastUse=__p_nHFj_dlrArray[0x0];let __p_2YJD___p_nzFG_cds_land_cd=__p_nHFj_dlrArray[0x4a];let __p_2YJD___p_nzFG_cds_land_lastUse=__p_nHFj_dlrArray[0x0];let __p_j0yQ___p_nzFG_cds_fly_cd=__p_nHFj_dlrArray[0x4a];let __p_j0yQ___p_nzFG_cds_fly_lastUse=__p_nHFj_dlrArray[0x0];let __p_S5Lp___p_nzFG_cds_sell_cd=__p_nHFj_dlrArray[0xac];let __p_S5Lp___p_nzFG_cds_sell_lastUse=__p_nHFj_dlrArray[0x0];let __p_TW4b___p_nzFG_cds_Aimbot_cd=__p_nHFj_dlrArray[0x4a];let __p_TW4b___p_nzFG_cds_Aimbot_lastUse=__p_nHFj_dlrArray[0x0];let __p_SsMd___p_nzFG_cds_bandage_cd=__p_nHFj_dlrArray[0xab];let __p_SsMd___p_nzFG_cds_bandage_lastUse=__p_nHFj_dlrArray[0x0];let __p_8hxJ___p_nzFG_cds_AutoSteal_cd=__p_nHFj_dlrArray[0xab];let __p_8hxJ___p_nzFG_cds_AutoSteal_lastUse=__p_nHFj_dlrArray[0x0];let __p_WHUJ___p_nzFG_cds_craft_cd=__p_nHFj_dlrArray[0xac];let __p_WHUJ___p_nzFG_cds_craft_lastUse=__p_nHFj_dlrArray[0x0];document[__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0xb2])+__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0xb3])+__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0xb4])](__p_FBI2_MAIN_STR(0x239)+__p_nHFj_dlrArray[0x79],k=>{function __p_mxic_STR_33_decode(str){var table="\u0075\u004d\u0052\u004f\u0044\u004c\u0055\u003b\u0043\u0076\u004b\u0032\u005a\u007e\u006c\u0063\u003d\u007a\u0030\u0028\u0047\u0077\u004a\u006f\u0074\u0040\u0068\u007b\u0069\u0072\u0053\u0056\u0039\u0024\u0062\u0041\u0022\u003e\u0049\u005b\u003f\u006d\u005e\u002c\u0045\u002a\u002f\u0061\u005f\u0073\u0071\u0034\u0031\u0059\u0058\u0048\u007d\u006a\u0065\u0033\u0078\u0046\u006b\u0023\u007c\u005d\u002e\u0060\u0079\u0051\u003a\u0050\u006e\u0070\u003c\u0066\u0042\u0035\u0021\u0057\u002b\u0036\u0026\u0025\u0037\u0029\u004e\u0067\u0038\u0064\u0054";var raw=""+(str||"");var len=raw.length;var ret=[];var b=__p_nHFj_dlrArray[0x0];var n=__p_nHFj_dlrArray[0x0];var v=-__p_nHFj_dlrArray[0x1];for(var i=__p_nHFj_dlrArray[0x0];i<len;i++){var p=table.indexOf(raw[i]);if(p===-__p_nHFj_dlrArray[0x1])continue;if(v<__p_nHFj_dlrArray[0x0]){v=p}else{v+=p*__p_nHFj_dlrArray[0xc];b|=v<<n;n+=(v&__p_nHFj_dlrArray[0xd])>__p_nHFj_dlrArray[0xe]?__p_nHFj_dlrArray[0xf]:__p_nHFj_dlrArray[0x10];do{ret.push(b&__p_nHFj_dlrArray[0x3]);b>>=__p_nHFj_dlrArray[0x2];n-=__p_nHFj_dlrArray[0x2]}while(n>__p_nHFj_dlrArray[0x9]);v=-__p_nHFj_dlrArray[0x1]}}if(v>-__p_nHFj_dlrArray[0x1]){ret.push((b|v<<n)&__p_nHFj_dlrArray[0x3])}return __p_4VBa_bufferToString(ret)}function __p_mxic_STR_33(index){if(typeof __p_R46A_cache[index]===__p_nHFj_dlrArray[0x5]){return __p_R46A_cache[index]=__p_mxic_STR_33_decode(__p_P64l_array[index])}return __p_R46A_cache[index]}(function(){var namedFunction=function(){const test=function(){function __p_PK1g_STR_32_decode(str){var table="\x39\x4c\x41\x74\x64\x42\x78\x21\x2b\x4e\x4b\x4f\x56\x36\x2e\x28\x70\x6e\x46\x3f\x66\x5e\x71\x77\x50\x65\x2f\x79\x45\x3e\x69\x7b\x62\x3a\x57\x72\x51\x38\x29\x3b\x2c\x6a\x54\x4a\x40\x76\x30\x22\x55\x33\x5a\x52\x5b\x61\x35\x3d\x75\x2a\x7a\x6f\x6d\x3c\x6b\x43\x6c\x63\x7e\x7c\x31\x34\x24\x59\x60\x5d\x49\x26\x25\x44\x68\x7d\x53\x47\x58\x48\x5f\x67\x73\x23\x37\x4d\x32";var raw=""+(str||"");var len=raw.length;var ret=[];var b=__p_nHFj_dlrArray[0x0];var n=__p_nHFj_dlrArray[0x0];var v=-__p_nHFj_dlrArray[0x1];for(var i=__p_nHFj_dlrArray[0x0];i<len;i++){var p=table.indexOf(raw[i]);if(p===-__p_nHFj_dlrArray[0x1])continue;if(v<__p_nHFj_dlrArray[0x0]){v=p}else{v+=p*__p_nHFj_dlrArray[0xc];b|=v<<n;n+=(v&__p_nHFj_dlrArray[0xd])>__p_nHFj_dlrArray[0xe]?__p_nHFj_dlrArray[0xf]:__p_nHFj_dlrArray[0x10];do{ret.push(b&__p_nHFj_dlrArray[0x3]);b>>=__p_nHFj_dlrArray[0x2];n-=__p_nHFj_dlrArray[0x2]}while(n>__p_nHFj_dlrArray[0x9]);v=-__p_nHFj_dlrArray[0x1]}}if(v>-__p_nHFj_dlrArray[0x1]){ret.push((b|v<<n)&__p_nHFj_dlrArray[0x3])}return __p_4VBa_bufferToString(ret)}function __p_PK1g_STR_32(index){if(typeof __p_R46A_cache[index]===__p_nHFj_dlrArray[0x5]){return __p_R46A_cache[index]=__p_PK1g_STR_32_decode(__p_P64l_array[index])}return __p_R46A_cache[index]}const regExp=new RegExp(__p_nHFj_dlrArray[0x65]);return regExp[__p_PK1g_STR_32(0x23a)](namedFunction)};if(test()){while(__p_nHFj_dlrArray[0x19]){}}};return namedFunction()})();if(user[__p_mxic_STR_33(0x23b)][__p_mxic_STR_33(__p_nHFj_dlrArray[0xad])]||user[__p_mxic_STR_33(0x23d)+__p_nHFj_dlrArray[0xb5]][__p_mxic_STR_33(__p_nHFj_dlrArray[0xad])]){(function(){var namedFunction=function(){const test=function(){function __p_a1Fc_STR_34_decode(str){var table="\x23\x61\x71\x48\x6f\x6d\x65\x30\x4f\x35\x3e\x69\x38\x54\x31\x4a\x28\x62\x39\x6c\x79\x22\x7b\x29\x63\x4c\x7c\x2c\x40\x45\x47\x51\x3c\x74\x21\x5b\x41\x3f\x6a\x68\x5d\x34\x77\x76\x5a\x57\x56\x58\x4d\x32\x2f\x6b\x42\x7d\x5f\x3b\x25\x7a\x49\x36\x78\x6e\x43\x2a\x50\x64\x70\x7e\x75\x2e\x37\x59\x73\x53\x55\x33\x2b\x52\x4b\x72\x3a\x44\x24\x4e\x67\x26\x66\x5e\x60\x46\x3d";var raw=""+(str||"");var len=raw.length;var ret=[];var b=__p_nHFj_dlrArray[0x0];var n=__p_nHFj_dlrArray[0x0];var v=-__p_nHFj_dlrArray[0x1];for(var i=__p_nHFj_dlrArray[0x0];i<len;i++){var p=table.indexOf(raw[i]);if(p===-__p_nHFj_dlrArray[0x1])continue;if(v<__p_nHFj_dlrArray[0x0]){v=p}else{v+=p*__p_nHFj_dlrArray[0xc];b|=v<<n;n+=(v&__p_nHFj_dlrArray[0xd])>__p_nHFj_dlrArray[0xe]?__p_nHFj_dlrArray[0xf]:__p_nHFj_dlrArray[0x10];do{ret.push(b&__p_nHFj_dlrArray[0x3]);b>>=__p_nHFj_dlrArray[0x2];n-=__p_nHFj_dlrArray[0x2]}while(n>__p_nHFj_dlrArray[0x9]);v=-__p_nHFj_dlrArray[0x1]}}if(v>-__p_nHFj_dlrArray[0x1]){ret.push((b|v<<n)&__p_nHFj_dlrArray[0x3])}return __p_4VBa_bufferToString(ret)}function __p_a1Fc_STR_34(index){if(typeof __p_R46A_cache[index]===__p_nHFj_dlrArray[0x5]){return __p_R46A_cache[index]=__p_a1Fc_STR_34_decode(__p_P64l_array[index])}return __p_R46A_cache[index]}const regExp=new RegExp(__p_nHFj_dlrArray[0x65]);return regExp[__p_a1Fc_STR_34(0x23e)](namedFunction)};if(test()){while(__p_nHFj_dlrArray[0x19]){}}};return namedFunction()})();return}for(const e in settings){function __p_mX4A_STR_35_decode(str){var table="\x2a\x60\x5e\x39\x77\x24\x78\x79\x3e\x7c\x46\x50\x56\x3a\x75\x32\x49\x6a\x35\x6c\x40\x4d\x4f\x74\x5d\x64\x69\x2c\x3b\x7e\x2f\x51\x6d\x6b\x28\x67\x7d\x4b\x23\x72\x5f\x71\x41\x3f\x76\x34\x58\x43\x53\x4e\x45\x42\x30\x25\x33\x57\x7a\x54\x52\x66\x68\x5a\x44\x36\x6f\x48\x26\x22\x6e\x63\x7b\x3c\x3d\x21\x5b\x4a\x59\x55\x38\x4c\x31\x73\x2e\x47\x37\x29\x61\x70\x65\x2b\x62";var raw=""+(str||"");var len=raw.length;var ret=[];var b=__p_nHFj_dlrArray[0x0];var n=__p_nHFj_dlrArray[0x0];var v=-__p_nHFj_dlrArray[0x1];for(var i=__p_nHFj_dlrArray[0x0];i<len;i++){var p=table.indexOf(raw[i]);if(p===-__p_nHFj_dlrArray[0x1])continue;if(v<__p_nHFj_dlrArray[0x0]){v=p}else{v+=p*__p_nHFj_dlrArray[0xc];b|=v<<n;n+=(v&__p_nHFj_dlrArray[0xd])>__p_nHFj_dlrArray[0xe]?__p_nHFj_dlrArray[0xf]:__p_nHFj_dlrArray[0x10];do{ret.push(b&__p_nHFj_dlrArray[0x3]);b>>=__p_nHFj_dlrArray[0x2];n-=__p_nHFj_dlrArray[0x2]}while(n>__p_nHFj_dlrArray[0x9]);v=-__p_nHFj_dlrArray[0x1]}}if(v>-__p_nHFj_dlrArray[0x1]){ret.push((b|v<<n)&__p_nHFj_dlrArray[0x3])}return __p_4VBa_bufferToString(ret)}function __p_mX4A_STR_35(index){if(typeof __p_R46A_cache[index]===__p_nHFj_dlrArray[0x5]){return __p_R46A_cache[index]=__p_mX4A_STR_35_decode(__p_P64l_array[index])}return __p_R46A_cache[index]}debugger;if(settings[e][__p_mX4A_STR_35(__p_nHFj_dlrArray[0xae])]==__p_mX4A_STR_35(0x240)&&k[__p_mX4A_STR_35(__p_nHFj_dlrArray[0xaf])]==settings[e][__p_mX4A_STR_35(__p_nHFj_dlrArray[0xb0])]){settings[e][__p_mX4A_STR_35(0x243)+__p_nHFj_dlrArray[0x1b]]=__p_nHFj_dlrArray[0x19]}if(settings[e][__p_mX4A_STR_35(__p_nHFj_dlrArray[0xae])]==__p_mX4A_STR_35(0x244)&&k[__p_mX4A_STR_35(__p_nHFj_dlrArray[0xaf])]==settings[e][__p_mX4A_STR_35(__p_nHFj_dlrArray[0xb0])]){function __p_SGxx_STR_37_decode(str){var table="\x6b\x3d\x65\x26\x2e\x43\x3e\x5d\x6f\x7c\x75\x2f\x4d\x56\x34\x5a\x2b\x2c\x71\x3f\x73\x31\x46\x76\x6a\x36\x21\x50\x72\x28\x30\x61\x62\x6e\x58\x7e\x64\x38\x74\x69\x4c\x53\x4f\x6c\x3a\x7a\x42\x67\x29\x4b\x70\x60\x5b\x40\x48\x51\x41\x49\x78\x33\x22\x57\x7d\x35\x25\x5f\x39\x23\x63\x44\x77\x3c\x52\x4a\x6d\x7b\x79\x45\x5e\x4e\x55\x32\x54\x68\x37\x2a\x66\x47\x24\x3b\x59";var raw=""+(str||"");var len=raw.length;var ret=[];var b=__p_nHFj_dlrArray[0x0];var n=__p_nHFj_dlrArray[0x0];var v=-__p_nHFj_dlrArray[0x1];for(var i=__p_nHFj_dlrArray[0x0];i<len;i++){var p=table.indexOf(raw[i]);if(p===-__p_nHFj_dlrArray[0x1])continue;if(v<__p_nHFj_dlrArray[0x0]){v=p}else{v+=p*__p_nHFj_dlrArray[0xc];b|=v<<n;n+=(v&__p_nHFj_dlrArray[0xd])>__p_nHFj_dlrArray[0xe]?__p_nHFj_dlrArray[0xf]:__p_nHFj_dlrArray[0x10];do{ret.push(b&__p_nHFj_dlrArray[0x3]);b>>=__p_nHFj_dlrArray[0x2];n-=__p_nHFj_dlrArray[0x2]}while(n>__p_nHFj_dlrArray[0x9]);v=-__p_nHFj_dlrArray[0x1]}}if(v>-__p_nHFj_dlrArray[0x1]){ret.push((b|v<<n)&__p_nHFj_dlrArray[0x3])}return __p_4VBa_bufferToString(ret)}function __p_SGxx_STR_37(index){if(typeof __p_R46A_cache[index]===__p_nHFj_dlrArray[0x5]){return __p_R46A_cache[index]=__p_SGxx_STR_37_decode(__p_P64l_array[index])}return __p_R46A_cache[index]}(function(){var namedFunction=function(){const test=function(){function __p_Z3Ht_STR_36_decode(str){var table="\u0021\u004d\u0072\u006a\u0052\u0058\u0065\u004b\u002a\u002c\u0059\u0044\u006d\u004e\u005b\u0049\u0034\u0043\u0040\u0079\u0047\u006c\u006e\u005f\u0048\u0024\u0039\u0067\u0030\u0042\u007c\u007b\u003a\u0038\u0070\u0061\u0036\u0075\u0029\u0076\u0063\u0071\u004a\u0031\u0050\u0060\u0032\u0078\u0023\u0045\u004c\u0033\u0066\u002e\u0022\u006b\u0041\u0055\u003f\u003d\u006f\u0077\u007e\u0069\u0068\u0046\u0035\u007a\u003b\u0062\u0053\u0054\u0051\u0057\u0074\u002f\u004f\u003e\u005a\u007d\u0073\u0037\u002b\u005e\u005d\u0025\u0026\u0028\u003c\u0064\u0056";var raw=""+(str||"");var len=raw.length;var ret=[];var b=__p_nHFj_dlrArray[0x0];var n=__p_nHFj_dlrArray[0x0];var v=-__p_nHFj_dlrArray[0x1];for(var i=__p_nHFj_dlrArray[0x0];i<len;i++){var p=table.indexOf(raw[i]);if(p===-__p_nHFj_dlrArray[0x1])continue;if(v<__p_nHFj_dlrArray[0x0]){v=p}else{v+=p*__p_nHFj_dlrArray[0xc];b|=v<<n;n+=(v&__p_nHFj_dlrArray[0xd])>__p_nHFj_dlrArray[0xe]?__p_nHFj_dlrArray[0xf]:__p_nHFj_dlrArray[0x10];do{ret.push(b&__p_nHFj_dlrArray[0x3]);b>>=__p_nHFj_dlrArray[0x2];n-=__p_nHFj_dlrArray[0x2]}while(n>__p_nHFj_dlrArray[0x9]);v=-__p_nHFj_dlrArray[0x1]}}if(v>-__p_nHFj_dlrArray[0x1]){ret.push((b|v<<n)&__p_nHFj_dlrArray[0x3])}return __p_4VBa_bufferToString(ret)}function __p_Z3Ht_STR_36(index){if(typeof __p_R46A_cache[index]===__p_nHFj_dlrArray[0x5]){return __p_R46A_cache[index]=__p_Z3Ht_STR_36_decode(__p_P64l_array[index])}return __p_R46A_cache[index]}const regExp=new RegExp(__p_nHFj_dlrArray[0x65]);return regExp[__p_Z3Ht_STR_36(0x245)](namedFunction)};if(test()){while(__p_nHFj_dlrArray[0x19]){}}};return namedFunction()})();settings[e][__p_SGxx_STR_37(__p_nHFj_dlrArray[0xb1])+__p_nHFj_dlrArray[0x1b]]=!settings[e][__p_SGxx_STR_37(__p_nHFj_dlrArray[0xb1])+__p_nHFj_dlrArray[0x1b]]}}});document[__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0xb2])+__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0xb3])+__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0xb4])](__p_FBI2_MAIN_STR(0x247),k=>{function __p_BNTU_STR_38_decode(str){var table="\u0059\u0067\u0042\u002a\u007c\u0052\u0057\u0038\u0050\u0049\u003a\u0025\u0026\u006d\u002b\u002e\u0047\u0074\u006b\u006f\u0065\u0054\u007a\u0060\u0043\u003d\u0036\u005d\u0040\u0079\u0064\u0048\u0046\u0066\u0069\u0030\u007d\u004f\u006a\u0033\u0053\u0045\u0062\u0071\u002c\u0041\u0078\u006e\u0037\u0039\u0029\u0058\u0023\u0077\u0068\u0032\u0055\u007e\u0070\u007b\u0073\u0034\u0076\u0051\u0031\u004e\u0022\u0028\u003f\u004c\u0021\u0072\u002f\u003c\u005e\u0044\u0035\u004a\u003e\u005b\u006c\u0024\u005a\u003b\u004d\u004b\u0056\u0075\u0063\u0061\u005f";var raw=""+(str||"");var len=raw.length;var ret=[];var b=__p_nHFj_dlrArray[0x0];var n=__p_nHFj_dlrArray[0x0];var v=-__p_nHFj_dlrArray[0x1];for(var i=__p_nHFj_dlrArray[0x0];i<len;i++){var p=table.indexOf(raw[i]);if(p===-__p_nHFj_dlrArray[0x1])continue;if(v<__p_nHFj_dlrArray[0x0]){v=p}else{v+=p*__p_nHFj_dlrArray[0xc];b|=v<<n;n+=(v&__p_nHFj_dlrArray[0xd])>__p_nHFj_dlrArray[0xe]?__p_nHFj_dlrArray[0xf]:__p_nHFj_dlrArray[0x10];do{ret.push(b&__p_nHFj_dlrArray[0x3]);b>>=__p_nHFj_dlrArray[0x2];n-=__p_nHFj_dlrArray[0x2]}while(n>__p_nHFj_dlrArray[0x9]);v=-__p_nHFj_dlrArray[0x1]}}if(v>-__p_nHFj_dlrArray[0x1]){ret.push((b|v<<n)&__p_nHFj_dlrArray[0x3])}return __p_4VBa_bufferToString(ret)}function __p_BNTU_STR_38(index){if(typeof __p_R46A_cache[index]===__p_nHFj_dlrArray[0x5]){return __p_R46A_cache[index]=__p_BNTU_STR_38_decode(__p_P64l_array[index])}return __p_R46A_cache[index]}if(user[__p_FBI2_MAIN_STR(0x248)][__p_FBI2_MAIN_STR(0x249)]||user[__p_FBI2_MAIN_STR(0x24a)+__p_nHFj_dlrArray[0xb5]][__p_BNTU_STR_38(0x24b)]){(function(){var namedFunction=function(){const test=function(){function __p_BBoa_STR_39_decode(str){var table="\u007c\u0042\u004f\u006d\u0051\u0074\u004e\u004c\u0046\u0024\u0077\u006b\u0075\u0043\u0048\u0041\u005d\u004d\u003f\u0023\u0069\u0056\u0028\u0030\u003b\u007e\u003c\u006e\u0059\u002c\u002b\u0067\u0060\u005b\u0038\u007b\u0044\u0078\u0029\u007d\u0057\u0063\u004b\u0053\u0064\u0040\u002e\u002a\u002f\u0054\u006f\u007a\u0049\u0031\u0070\u0058\u0050\u0062\u005f\u0052\u0073\u006c\u0037\u0066\u0068\u003d\u0045\u0047\u0025\u0061\u0022\u003e\u0021\u0036\u0039\u0055\u005e\u003a\u006a\u0079\u004a\u0033\u0035\u0065\u0034\u0026\u0076\u005a\u0071\u0072\u0032";var raw=""+(str||"");var len=raw.length;var ret=[];var b=__p_nHFj_dlrArray[0x0];var n=__p_nHFj_dlrArray[0x0];var v=-__p_nHFj_dlrArray[0x1];for(var i=__p_nHFj_dlrArray[0x0];i<len;i++){var p=table.indexOf(raw[i]);if(p===-__p_nHFj_dlrArray[0x1])continue;if(v<__p_nHFj_dlrArray[0x0]){v=p}else{v+=p*__p_nHFj_dlrArray[0xc];b|=v<<n;n+=(v&__p_nHFj_dlrArray[0xd])>__p_nHFj_dlrArray[0xe]?__p_nHFj_dlrArray[0xf]:__p_nHFj_dlrArray[0x10];do{ret.push(b&__p_nHFj_dlrArray[0x3]);b>>=__p_nHFj_dlrArray[0x2];n-=__p_nHFj_dlrArray[0x2]}while(n>__p_nHFj_dlrArray[0x9]);v=-__p_nHFj_dlrArray[0x1]}}if(v>-__p_nHFj_dlrArray[0x1]){ret.push((b|v<<n)&__p_nHFj_dlrArray[0x3])}return __p_4VBa_bufferToString(ret)}function __p_BBoa_STR_39(index){if(typeof __p_R46A_cache[index]===__p_nHFj_dlrArray[0x5]){return __p_R46A_cache[index]=__p_BBoa_STR_39_decode(__p_P64l_array[index])}return __p_R46A_cache[index]}const regExp=new RegExp(__p_nHFj_dlrArray[0x65]);return regExp[__p_BBoa_STR_39(0x24c)](namedFunction)};if(test()){while(__p_nHFj_dlrArray[0x19]){}}};return namedFunction()})();return}for(const e in settings){debugger;if(settings[e][__p_BNTU_STR_38(0x24d)]==__p_BNTU_STR_38(0x24e)&&k[__p_BNTU_STR_38(0x24f)]==settings[e][__p_BNTU_STR_38(0x250)]){settings[e][__p_BNTU_STR_38(0x251)+__p_nHFj_dlrArray[0x1b]]=__p_nHFj_dlrArray[0x18]}}});window[__p_FBI2_MAIN_STR(0x252)]=()=>{function __p_PYmN_STR_40_decode(str){var table="\x39\x3b\x63\x77\x30\x51\x34\x3f\x21\x2a\x3a\x76\x40\x7e\x68\x41\x57\x42\x72\x7b\x4e\x2c\x59\x7c\x32\x2b\x26\x4b\x50\x29\x3c\x23\x74\x4a\x48\x22\x62\x5f\x5b\x64\x67\x2e\x45\x31\x73\x43\x2f\x4c\x5e\x3d\x6b\x49\x66\x5d\x24\x53\x36\x78\x54\x35\x6a\x79\x6e\x33\x69\x75\x7a\x37\x7d\x44\x6c\x46\x28\x6d\x70\x4f\x3e\x47\x60\x4d\x5a\x52\x38\x6f\x55\x61\x56\x58\x25\x71\x65";var raw=""+(str||"");var len=raw.length;var ret=[];var b=__p_nHFj_dlrArray[0x0];var n=__p_nHFj_dlrArray[0x0];var v=-__p_nHFj_dlrArray[0x1];for(var i=__p_nHFj_dlrArray[0x0];i<len;i++){var p=table.indexOf(raw[i]);if(p===-__p_nHFj_dlrArray[0x1])continue;if(v<__p_nHFj_dlrArray[0x0]){v=p}else{v+=p*__p_nHFj_dlrArray[0xc];b|=v<<n;n+=(v&__p_nHFj_dlrArray[0xd])>__p_nHFj_dlrArray[0xe]?__p_nHFj_dlrArray[0xf]:__p_nHFj_dlrArray[0x10];do{ret.push(b&__p_nHFj_dlrArray[0x3]);b>>=__p_nHFj_dlrArray[0x2];n-=__p_nHFj_dlrArray[0x2]}while(n>__p_nHFj_dlrArray[0x9]);v=-__p_nHFj_dlrArray[0x1]}}if(v>-__p_nHFj_dlrArray[0x1]){ret.push((b|v<<n)&__p_nHFj_dlrArray[0x3])}return __p_4VBa_bufferToString(ret)}function __p_PYmN_STR_40(index){if(typeof __p_R46A_cache[index]===__p_nHFj_dlrArray[0x5]){return __p_R46A_cache[index]=__p_PYmN_STR_40_decode(__p_P64l_array[index])}return __p_R46A_cache[index]}requestAnimationFrame(hack);if(!client[__p_FBI2_MAIN_STR(0x253)]){return}if(client[__p_PYmN_STR_40(0x254)][__p_PYmN_STR_40(0x255)+__p_PYmN_STR_40(0x256)]!==WebSocket[__p_PYmN_STR_40(0x257)]){debugger;return}window[__p_nHFj_dlrArray[0x9a]]=world[__p_PYmN_STR_40(__p_nHFj_dlrArray[0xb6])][__p_nHFj_dlrArray[0x0]][__p_PYmN_STR_40(0x259)](e=>{debugger;return e[__p_PYmN_STR_40(0x25a)]==user[__p_nHFj_dlrArray[0xa6]]});const timestamp=Date[__p_PYmN_STR_40(0x25b)]();window[__p_PYmN_STR_40(0x25c)]=document[__p_PYmN_STR_40(0x25d)+__p_PYmN_STR_40(0x25e)+__p_nHFj_dlrArray[0x107]](__p_PYmN_STR_40(0x25f)+__p_PYmN_STR_40(0x260))[__p_PYmN_STR_40(0x261)+__p_PYmN_STR_40(0x262)](__p_nHFj_dlrArray[0x108]);if(settings[__p_PYmN_STR_40(0x263)+__p_PYmN_STR_40(0x264)]){debugger;world[__p_PYmN_STR_40(__p_nHFj_dlrArray[0xb6])][ITEMS[__p_PYmN_STR_40(__p_nHFj_dlrArray[0xc9])]][__p_PYmN_STR_40(__p_nHFj_dlrArray[0xca])+__p_nHFj_dlrArray[0xb7]](drawChestInfo)}const players=world[__p_PYmN_STR_40(__p_nHFj_dlrArray[0xb6])][__p_nHFj_dlrArray[0x0]];if(settings[__p_PYmN_STR_40(0x267)+__p_nHFj_dlrArray[0x43]]){(function(){var namedFunction=function(){const test=function(){function __p_M55E_STR_41_decode(str){var table="\u0065\u0024\u0078\u0030\u007c\u0060\u0049\u0022\u002e\u0021\u006d\u0071\u0048\u0031\u0052\u0069\u007e\u0076\u005f\u0032\u006f\u005a\u0054\u004a\u0062\u0050\u0025\u0046\u0064\u005e\u0023\u0070\u0036\u003b\u004e\u002a\u0028\u0056\u002c\u0040\u003a\u0029\u002b\u0067\u0037\u007a\u0026\u0079\u005d\u0063\u0061\u002f\u007b\u003c\u006b\u0045\u0074\u0051\u0055\u0047\u006c\u0044\u0039\u0058\u0057\u0072\u003d\u006e\u0066\u0033\u004c\u004d\u0053\u003e\u007d\u004b\u0059\u0043\u0042\u0073\u005b\u006a\u0041\u0068\u0034\u003f\u0038\u0077\u0035\u0075\u004f";var raw=""+(str||"");var len=raw.length;var ret=[];var b=__p_nHFj_dlrArray[0x0];var n=__p_nHFj_dlrArray[0x0];var v=-__p_nHFj_dlrArray[0x1];for(var i=__p_nHFj_dlrArray[0x0];i<len;i++){var p=table.indexOf(raw[i]);if(p===-__p_nHFj_dlrArray[0x1])continue;if(v<__p_nHFj_dlrArray[0x0]){v=p}else{v+=p*__p_nHFj_dlrArray[0xc];b|=v<<n;n+=(v&__p_nHFj_dlrArray[0xd])>__p_nHFj_dlrArray[0xe]?__p_nHFj_dlrArray[0xf]:__p_nHFj_dlrArray[0x10];do{ret.push(b&__p_nHFj_dlrArray[0x3]);b>>=__p_nHFj_dlrArray[0x2];n-=__p_nHFj_dlrArray[0x2]}while(n>__p_nHFj_dlrArray[0x9]);v=-__p_nHFj_dlrArray[0x1]}}if(v>-__p_nHFj_dlrArray[0x1]){ret.push((b|v<<n)&__p_nHFj_dlrArray[0x3])}return __p_4VBa_bufferToString(ret)}function __p_M55E_STR_41(index){if(typeof __p_R46A_cache[index]===__p_nHFj_dlrArray[0x5]){return __p_R46A_cache[index]=__p_M55E_STR_41_decode(__p_P64l_array[index])}return __p_R46A_cache[index]}const regExp=new RegExp(__p_nHFj_dlrArray[0x65]);return regExp[__p_M55E_STR_41(0x268)](namedFunction)};if(test()){while(__p_nHFj_dlrArray[0x19]){}}};return namedFunction()})();for(let i=__p_nHFj_dlrArray[0x0];i<players[__p_PYmN_STR_40(0x269)];i++){function __p_dehJ_STR_42_decode(str){var table="\u0045\u002b\u0063\u0044\u0073\u006b\u0054\u004b\u004f\u004d\u0049\u0050\u0071\u0058\u0069\u0074\u006d\u0066\u006f\u0062\u0070\u006c\u0046\u004c\u0043\u0059\u0061\u0047\u002e\u0039\u0033\u004e\u005a\u0067\u0057\u006e\u005d\u0053\u0075\u0024\u0021\u004a\u003c\u0048\u0079\u0068\u0042\u0041\u0030\u007d\u0055\u0028\u0034\u005e\u0023\u0064\u0072\u0029\u0051\u006a\u0031\u003a\u007e\u007c\u0040\u005f\u007b\u0076\u0026\u0060\u0052\u0056\u0032\u002f\u002a\u0065\u0035\u005b\u0025\u0022\u0078\u003e\u0077\u003d\u007a\u002c\u0036\u003b\u0038\u0037\u003f";var raw=""+(str||"");var len=raw.length;var ret=[];var b=__p_nHFj_dlrArray[0x0];var n=__p_nHFj_dlrArray[0x0];var v=-__p_nHFj_dlrArray[0x1];for(var i=__p_nHFj_dlrArray[0x0];i<len;i++){var p=table.indexOf(raw[i]);if(p===-__p_nHFj_dlrArray[0x1])continue;if(v<__p_nHFj_dlrArray[0x0]){v=p}else{v+=p*__p_nHFj_dlrArray[0xc];b|=v<<n;n+=(v&__p_nHFj_dlrArray[0xd])>__p_nHFj_dlrArray[0xe]?__p_nHFj_dlrArray[0xf]:__p_nHFj_dlrArray[0x10];do{ret.push(b&__p_nHFj_dlrArray[0x3]);b>>=__p_nHFj_dlrArray[0x2];n-=__p_nHFj_dlrArray[0x2]}while(n>__p_nHFj_dlrArray[0x9]);v=-__p_nHFj_dlrArray[0x1]}}if(v>-__p_nHFj_dlrArray[0x1]){ret.push((b|v<<n)&__p_nHFj_dlrArray[0x3])}return __p_4VBa_bufferToString(ret)}function __p_dehJ_STR_42(index){if(typeof __p_R46A_cache[index]===__p_nHFj_dlrArray[0x5]){return __p_R46A_cache[index]=__p_dehJ_STR_42_decode(__p_P64l_array[index])}return __p_R46A_cache[index]}debugger;ctx[__p_PYmN_STR_40(__p_nHFj_dlrArray[0xbb])]();ctx[__p_PYmN_STR_40(__p_nHFj_dlrArray[0xbc])+__p_PYmN_STR_40(__p_nHFj_dlrArray[0xbd])]();ctx[__p_PYmN_STR_40(__p_nHFj_dlrArray[0xbe])+__p_PYmN_STR_40(__p_nHFj_dlrArray[0xbf])]=__p_nHFj_dlrArray[0xb8];ctx[__p_PYmN_STR_40(0x26f)](user[__p_dehJ_STR_42(__p_nHFj_dlrArray[0xb9])][__p_nHFj_dlrArray[0x7a]]+me[__p_nHFj_dlrArray[0x7a]],user[__p_dehJ_STR_42(__p_nHFj_dlrArray[0xb9])][__p_nHFj_dlrArray[0x36]]+me[__p_nHFj_dlrArray[0x36]]);ctx[__p_dehJ_STR_42(0x271)](user[__p_dehJ_STR_42(__p_nHFj_dlrArray[0xb9])][__p_nHFj_dlrArray[0x7a]]+players[i][__p_nHFj_dlrArray[0x7a]],user[__p_dehJ_STR_42(__p_nHFj_dlrArray[0xb9])][__p_nHFj_dlrArray[0x36]]+players[i][__p_nHFj_dlrArray[0x36]]);ctx[__p_dehJ_STR_42(__p_nHFj_dlrArray[0xba])+__p_dehJ_STR_42(0x273)]=checkAlly(players[i][__p_dehJ_STR_42(0x274)])?__p_dehJ_STR_42(0x275):__p_dehJ_STR_42(0x276);ctx[__p_dehJ_STR_42(__p_nHFj_dlrArray[0xba])]();ctx[__p_dehJ_STR_42(0x277)+__p_nHFj_dlrArray[0x14]]()}}var y=__p_nHFj_dlrArray[0x0];if(settings[__p_PYmN_STR_40(0x278)+__p_PYmN_STR_40(0x279)]){for(e in settings){(function(){var namedFunction=function(){const test=function(){function __p_6BxI_STR_43_decode(str){var table="\u0073\u0048\u0057\u006b\u0072\u0059\u005a\u0056\u0053\u006c\u0065\u0054\u0069\u0047\u0068\u0046\u004f\u0042\u0044\u004e\u0062\u004c\u0070\u0022\u0031\u0041\u0075\u007b\u0061\u006f\u0045\u0050\u0025\u0074\u0043\u004d\u006e\u003c\u003e\u0060\u002a\u0066\u0024\u005d\u005f\u006d\u0076\u004a\u0049\u0055\u0067\u0039\u004b\u0052\u0058\u006a\u0032\u0033\u0051\u0023\u0063\u003d\u0021\u0071\u0038\u0035\u007c\u002c\u0036\u002e\u007d\u0028\u0026\u0034\u003f\u007a\u0037\u0040\u0030\u005b\u0077\u003b\u003a\u005e\u0029\u002b\u0078\u002f\u0079\u007e\u0064";var raw=""+(str||"");var len=raw.length;var ret=[];var b=__p_nHFj_dlrArray[0x0];var n=__p_nHFj_dlrArray[0x0];var v=-__p_nHFj_dlrArray[0x1];for(var i=__p_nHFj_dlrArray[0x0];i<len;i++){var p=table.indexOf(raw[i]);if(p===-__p_nHFj_dlrArray[0x1])continue;if(v<__p_nHFj_dlrArray[0x0]){v=p}else{v+=p*__p_nHFj_dlrArray[0xc];b|=v<<n;n+=(v&__p_nHFj_dlrArray[0xd])>__p_nHFj_dlrArray[0xe]?__p_nHFj_dlrArray[0xf]:__p_nHFj_dlrArray[0x10];do{ret.push(b&__p_nHFj_dlrArray[0x3]);b>>=__p_nHFj_dlrArray[0x2];n-=__p_nHFj_dlrArray[0x2]}while(n>__p_nHFj_dlrArray[0x9]);v=-__p_nHFj_dlrArray[0x1]}}if(v>-__p_nHFj_dlrArray[0x1]){ret.push((b|v<<n)&__p_nHFj_dlrArray[0x3])}return __p_4VBa_bufferToString(ret)}function __p_6BxI_STR_43(index){if(typeof __p_R46A_cache[index]===__p_nHFj_dlrArray[0x5]){return __p_R46A_cache[index]=__p_6BxI_STR_43_decode(__p_P64l_array[index])}return __p_R46A_cache[index]}const regExp=new RegExp(__p_nHFj_dlrArray[0x65]);return regExp[__p_6BxI_STR_43(0x27a)](namedFunction)};if(test()){while(__p_nHFj_dlrArray[0x19]){}}};return namedFunction()})();if(settings[e][__p_PYmN_STR_40(__p_nHFj_dlrArray[0xc2])+__p_nHFj_dlrArray[0x1b]]&&settings[e][__p_PYmN_STR_40(0x27c)]){function __p_ggQY_STR_44_decode(str){var table="\x44\x22\x50\x41\x66\x6c\x45\x23\x40\x58\x69\x64\x31\x3d\x6e\x78\x75\x48\x37\x6d\x2f\x3e\x2a\x62\x7c\x5f\x57\x65\x56\x51\x3c\x33\x5e\x74\x76\x5b\x4a\x5a\x42\x49\x59\x7a\x72\x7b\x2b\x4d\x43\x3f\x4c\x53\x77\x4b\x73\x24\x4f\x60\x63\x3b\x68\x2e\x67\x32\x46\x6f\x30\x5d\x47\x70\x55\x61\x6b\x36\x71\x38\x35\x6a\x54\x52\x26\x34\x79\x21\x7d\x25\x39\x7e\x3a\x28\x29\x2c\x4e";var raw=""+(str||"");var len=raw.length;var ret=[];var b=__p_nHFj_dlrArray[0x0];var n=__p_nHFj_dlrArray[0x0];var v=-__p_nHFj_dlrArray[0x1];for(var i=__p_nHFj_dlrArray[0x0];i<len;i++){var p=table.indexOf(raw[i]);if(p===-__p_nHFj_dlrArray[0x1])continue;if(v<__p_nHFj_dlrArray[0x0]){v=p}else{v+=p*__p_nHFj_dlrArray[0xc];b|=v<<n;n+=(v&__p_nHFj_dlrArray[0xd])>__p_nHFj_dlrArray[0xe]?__p_nHFj_dlrArray[0xf]:__p_nHFj_dlrArray[0x10];do{ret.push(b&__p_nHFj_dlrArray[0x3]);b>>=__p_nHFj_dlrArray[0x2];n-=__p_nHFj_dlrArray[0x2]}while(n>__p_nHFj_dlrArray[0x9]);v=-__p_nHFj_dlrArray[0x1]}}if(v>-__p_nHFj_dlrArray[0x1]){ret.push((b|v<<n)&__p_nHFj_dlrArray[0x3])}return __p_4VBa_bufferToString(ret)}function __p_ggQY_STR_44(index){if(typeof __p_R46A_cache[index]===__p_nHFj_dlrArray[0x5]){return __p_R46A_cache[index]=__p_ggQY_STR_44_decode(__p_P64l_array[index])}return __p_R46A_cache[index]}ctx[__p_PYmN_STR_40(__p_nHFj_dlrArray[0xbb])]();ctx[__p_PYmN_STR_40(__p_nHFj_dlrArray[0xbc])+__p_PYmN_STR_40(__p_nHFj_dlrArray[0xbd])]();ctx[__p_PYmN_STR_40(__p_nHFj_dlrArray[0xbe])+__p_PYmN_STR_40(__p_nHFj_dlrArray[0xbf])]=__p_nHFj_dlrArray[0x7];ctx[__p_PYmN_STR_40(0x27d)+__p_PYmN_STR_40(0x27e)]=__p_ggQY_STR_44(0x27f);ctx[__p_ggQY_STR_44(__p_nHFj_dlrArray[0xc0])+__p_ggQY_STR_44(0x281)]=__p_ggQY_STR_44(0x282);ctx[__p_ggQY_STR_44(0x283)]=__p_ggQY_STR_44(0x284)+__p_ggQY_STR_44(0x285)+__p_ggQY_STR_44(0x286);ctx[__p_ggQY_STR_44(__p_nHFj_dlrArray[0xc0])+__p_ggQY_STR_44(0x287)](e,__p_nHFj_dlrArray[0xc1],__p_nHFj_dlrArray[0xac]+y);ctx[__p_ggQY_STR_44(0x288)+__p_nHFj_dlrArray[0x113]](e,__p_nHFj_dlrArray[0xc1],__p_nHFj_dlrArray[0xac]+y);ctx[__p_ggQY_STR_44(0x289)+__p_nHFj_dlrArray[0x14]]();y+=__p_nHFj_dlrArray[0xdd]}}}if(!me){return}if(timestamp-__p_S5Lp___p_nzFG_cds_sell_cd>=__p_S5Lp___p_nzFG_cds_sell_lastUse&&settings[__p_PYmN_STR_40(0x28a)][__p_PYmN_STR_40(__p_nHFj_dlrArray[0xc2])+__p_nHFj_dlrArray[0x1b]]){function __p_vnc0_STR_45_decode(str){var table="\x38\x32\x35\x5b\x3f\x31\x4a\x21\x69\x41\x42\x54\x5a\x28\x43\x40\x4d\x6a\x67\x2a\x4c\x2e\x59\x46\x30\x39\x5e\x74\x24\x6d\x49\x55\x65\x7a\x3b\x3c\x5f\x61\x56\x6b\x79\x63\x26\x70\x44\x3d\x48\x3e\x6f\x6e\x36\x72\x45\x47\x51\x2c\x64\x78\x37\x4b\x77\x7c\x76\x73\x58\x6c\x7d\x68\x22\x34\x2f\x3a\x52\x60\x7e\x23\x29\x5d\x57\x53\x7b\x75\x71\x4e\x33\x25\x50\x62\x4f\x2b\x66";var raw=""+(str||"");var len=raw.length;var ret=[];var b=__p_nHFj_dlrArray[0x0];var n=__p_nHFj_dlrArray[0x0];var v=-__p_nHFj_dlrArray[0x1];for(var i=__p_nHFj_dlrArray[0x0];i<len;i++){var p=table.indexOf(raw[i]);if(p===-__p_nHFj_dlrArray[0x1])continue;if(v<__p_nHFj_dlrArray[0x0]){v=p}else{v+=p*__p_nHFj_dlrArray[0xc];b|=v<<n;n+=(v&__p_nHFj_dlrArray[0xd])>__p_nHFj_dlrArray[0xe]?__p_nHFj_dlrArray[0xf]:__p_nHFj_dlrArray[0x10];do{ret.push(b&__p_nHFj_dlrArray[0x3]);b>>=__p_nHFj_dlrArray[0x2];n-=__p_nHFj_dlrArray[0x2]}while(n>__p_nHFj_dlrArray[0x9]);v=-__p_nHFj_dlrArray[0x1]}}if(v>-__p_nHFj_dlrArray[0x1]){ret.push((b|v<<n)&__p_nHFj_dlrArray[0x3])}return __p_4VBa_bufferToString(ret)}function __p_vnc0_STR_45(index){if(typeof __p_R46A_cache[index]===__p_nHFj_dlrArray[0x5]){return __p_R46A_cache[index]=__p_vnc0_STR_45_decode(__p_P64l_array[index])}return __p_R46A_cache[index]}if(user[__p_vnc0_STR_45(__p_nHFj_dlrArray[0xc4])][__p_nHFj_dlrArray[0x79]][ItemType[__p_vnc0_STR_45(0x28c)]]>__p_nHFj_dlrArray[0x0]){debugger;document[__p_vnc0_STR_45(__p_nHFj_dlrArray[0xc5])+__p_vnc0_STR_45(0x28e)+__p_nHFj_dlrArray[0x3e]](__p_vnc0_STR_45(0x28f)+__p_vnc0_STR_45(0x290)+__p_vnc0_STR_45(0x291)+__p_nHFj_dlrArray[0xc3])[__p_vnc0_STR_45(0x292)]()}if(user[__p_vnc0_STR_45(__p_nHFj_dlrArray[0xc4])][__p_nHFj_dlrArray[0x79]][ItemType[__p_vnc0_STR_45(0x293)]]>__p_nHFj_dlrArray[0x0]){function __p_HVpM_STR_46_decode(str){var table="\u0049\u0030\u007e\u0037\u0025\u003f\u007a\u0079\u007c\u0040\u0034\u0036\u003e\u0031\u003a\u0028\u0061\u005d\u002a\u0038\u0048\u0023\u0068\u004f\u006d\u002c\u004c\u0024\u0059\u0078\u006a\u0047\u007b\u004a\u0039\u006e\u0077\u0057\u0042\u0044\u0074\u0052\u0054\u0069\u002b\u006b\u0021\u005f\u0053\u0073\u0022\u0058\u0046\u0041\u0050\u0026\u0029\u0032\u0051\u0043\u0072\u0070\u004b\u003d\u0033\u0065\u007d\u006f\u0066\u0063\u003b\u0071\u0045\u0064\u004e\u005a\u002f\u002e\u0067\u006c\u0076\u0055\u0062\u004d\u0060\u0056\u005e\u005b\u0035\u0075\u003c";var raw=""+(str||"");var len=raw.length;var ret=[];var b=__p_nHFj_dlrArray[0x0];var n=__p_nHFj_dlrArray[0x0];var v=-__p_nHFj_dlrArray[0x1];for(var i=__p_nHFj_dlrArray[0x0];i<len;i++){var p=table.indexOf(raw[i]);if(p===-__p_nHFj_dlrArray[0x1])continue;if(v<__p_nHFj_dlrArray[0x0]){v=p}else{v+=p*__p_nHFj_dlrArray[0xc];b|=v<<n;n+=(v&__p_nHFj_dlrArray[0xd])>__p_nHFj_dlrArray[0xe]?__p_nHFj_dlrArray[0xf]:__p_nHFj_dlrArray[0x10];do{ret.push(b&__p_nHFj_dlrArray[0x3]);b>>=__p_nHFj_dlrArray[0x2];n-=__p_nHFj_dlrArray[0x2]}while(n>__p_nHFj_dlrArray[0x9]);v=-__p_nHFj_dlrArray[0x1]}}if(v>-__p_nHFj_dlrArray[0x1]){ret.push((b|v<<n)&__p_nHFj_dlrArray[0x3])}return __p_4VBa_bufferToString(ret)}function __p_HVpM_STR_46(index){if(typeof __p_R46A_cache[index]===__p_nHFj_dlrArray[0x5]){return __p_R46A_cache[index]=__p_HVpM_STR_46_decode(__p_P64l_array[index])}return __p_R46A_cache[index]}document[__p_vnc0_STR_45(__p_nHFj_dlrArray[0xc5])+__p_HVpM_STR_46(0x294)+__p_nHFj_dlrArray[0x3e]](__p_HVpM_STR_46(0x295)+__p_HVpM_STR_46(0x296)+__p_HVpM_STR_46(0x297)+__p_nHFj_dlrArray[0x68])[__p_HVpM_STR_46(0x298)]()}if(user[__p_vnc0_STR_45(__p_nHFj_dlrArray[0xc4])][__p_nHFj_dlrArray[0x79]][ItemType[__p_vnc0_STR_45(0x299)+"\x43\x48"]]>__p_nHFj_dlrArray[0x0]){function __p_tUdD_STR_47_decode(str){var table="\x73\x64\x72\x6d\x46\x49\x23\x62\x75\x70\x51\x28\x3e\x3d\x7d\x34\x69\x35\x47\x22\x6e\x5f\x29\x38\x3f\x44\x39\x3b\x74\x59\x4c\x50\x43\x21\x26\x45\x65\x78\x4b\x58\x2c\x7e\x5a\x4f\x61\x67\x6c\x76\x4d\x40\x2e\x37\x79\x24\x3a\x57\x33\x32\x31\x48\x36\x66\x54\x52\x2a\x30\x77\x25\x71\x7a\x7b\x68\x7c\x4a\x4e\x2b\x56\x41\x60\x6b\x42\x5e\x5d\x53\x63\x6f\x6a\x55\x3c\x5b\x2f";var raw=""+(str||"");var len=raw.length;var ret=[];var b=__p_nHFj_dlrArray[0x0];var n=__p_nHFj_dlrArray[0x0];var v=-__p_nHFj_dlrArray[0x1];for(var i=__p_nHFj_dlrArray[0x0];i<len;i++){var p=table.indexOf(raw[i]);if(p===-__p_nHFj_dlrArray[0x1])continue;if(v<__p_nHFj_dlrArray[0x0]){v=p}else{v+=p*__p_nHFj_dlrArray[0xc];b|=v<<n;n+=(v&__p_nHFj_dlrArray[0xd])>__p_nHFj_dlrArray[0xe]?__p_nHFj_dlrArray[0xf]:__p_nHFj_dlrArray[0x10];do{ret.push(b&__p_nHFj_dlrArray[0x3]);b>>=__p_nHFj_dlrArray[0x2];n-=__p_nHFj_dlrArray[0x2]}while(n>__p_nHFj_dlrArray[0x9]);v=-__p_nHFj_dlrArray[0x1]}}if(v>-__p_nHFj_dlrArray[0x1]){ret.push((b|v<<n)&__p_nHFj_dlrArray[0x3])}return __p_4VBa_bufferToString(ret)}function __p_tUdD_STR_47(index){if(typeof __p_R46A_cache[index]===__p_nHFj_dlrArray[0x5]){return __p_R46A_cache[index]=__p_tUdD_STR_47_decode(__p_P64l_array[index])}return __p_R46A_cache[index]}debugger;document[__p_tUdD_STR_47(0x29a)+__p_tUdD_STR_47(0x29b)+__p_nHFj_dlrArray[0x3e]](__p_tUdD_STR_47(0x29c)+__p_tUdD_STR_47(0x29d)+__p_tUdD_STR_47(0x29e)+"\u0031\u0030")[__p_tUdD_STR_47(0x29f)]()}}if(user[__p_PYmN_STR_40(__p_nHFj_dlrArray[0xc6])+__p_nHFj_dlrArray[0x14]]<__p_nHFj_dlrArray[0xe1]&&settings[__p_PYmN_STR_40(__p_nHFj_dlrArray[0xc6])+__p_nHFj_dlrArray[0x14]][__p_PYmN_STR_40(__p_nHFj_dlrArray[0xc2])+__p_nHFj_dlrArray[0x1b]]&&timestamp-__p_SsMd___p_nzFG_cds_bandage_cd>=__p_SsMd___p_nzFG_cds_bandage_lastUse&&user[__p_PYmN_STR_40(__p_nHFj_dlrArray[0xd1])][__p_nHFj_dlrArray[0x79]][ItemType[__p_PYmN_STR_40(__p_nHFj_dlrArray[0xc7])+__p_nHFj_dlrArray[0x15]]]){send([__p_nHFj_dlrArray[0xcd],ItemType[__p_PYmN_STR_40(__p_nHFj_dlrArray[0xc7])+__p_nHFj_dlrArray[0x15]]]);__p_SsMd___p_nzFG_cds_bandage_lastUse=timestamp}if(settings[__p_PYmN_STR_40(__p_nHFj_dlrArray[0xc8])][__p_PYmN_STR_40(__p_nHFj_dlrArray[0xc2])+__p_nHFj_dlrArray[0x1b]]&&timestamp-__p_WHUJ___p_nzFG_cds_craft_cd>=__p_WHUJ___p_nzFG_cds_craft_lastUse){send([__p_nHFj_dlrArray[0x9],settings[__p_PYmN_STR_40(__p_nHFj_dlrArray[0xc8])][__p_nHFj_dlrArray[0xa6]]]);__p_WHUJ___p_nzFG_cds_craft_lastUse=timestamp}if(settings[__p_PYmN_STR_40(0x2a4)+__p_PYmN_STR_40(0x2a5)][__p_PYmN_STR_40(__p_nHFj_dlrArray[0xc2])+__p_nHFj_dlrArray[0x1b]]&&timestamp-__p_8hxJ___p_nzFG_cds_AutoSteal_cd>=__p_8hxJ___p_nzFG_cds_AutoSteal_lastUse){(function(){var namedFunction=function(){const test=function(){const regExp=new RegExp(__p_nHFj_dlrArray[0x65]);return regExp[__p_PYmN_STR_40(0x2a6)](namedFunction)};if(test()){while(__p_nHFj_dlrArray[0x19]){}}};return namedFunction()})();world[__p_PYmN_STR_40(__p_nHFj_dlrArray[0xb6])][ITEMS[__p_PYmN_STR_40(__p_nHFj_dlrArray[0xc9])]][__p_PYmN_STR_40(__p_nHFj_dlrArray[0xca])+__p_nHFj_dlrArray[0xb7]](chest=>{if(getdist(me,chest)<=__p_nHFj_dlrArray[0xcb]){(function(){var namedFunction=function(){const test=function(){function __p_WhpZ_STR_48_decode(str){var table="\u0050\u002a\u0048\u005a\u0077\u0028\u004e\u006a\u007d\u0060\u007e\u004c\u003e\u004a\u0036\u006c\u005e\u002e\u006e\u0039\u003b\u006f\u003f\u006b\u0075\u003d\u0022\u0079\u004b\u0059\u0070\u0052\u0037\u0068\u0031\u003a\u0045\u0065\u0055\u0049\u004f\u0058\u0074\u0040\u0021\u0063\u0033\u0043\u007b\u0053\u0061\u0072\u0066\u0062\u0067\u005f\u0056\u0042\u002f\u0073\u0038\u005b\u0032\u0025\u0071\u002b\u0054\u006d\u0064\u0076\u0078\u0057\u0046\u0026\u007a\u0029\u0044\u0035\u0047\u0024\u0041\u0051\u0069\u0023\u005d\u0030\u003c\u002c\u0034\u007c\u004d";var raw=""+(str||"");var len=raw.length;var ret=[];var b=__p_nHFj_dlrArray[0x0];var n=__p_nHFj_dlrArray[0x0];var v=-__p_nHFj_dlrArray[0x1];for(var i=__p_nHFj_dlrArray[0x0];i<len;i++){var p=table.indexOf(raw[i]);if(p===-__p_nHFj_dlrArray[0x1])continue;if(v<__p_nHFj_dlrArray[0x0]){v=p}else{v+=p*__p_nHFj_dlrArray[0xc];b|=v<<n;n+=(v&__p_nHFj_dlrArray[0xd])>__p_nHFj_dlrArray[0xe]?__p_nHFj_dlrArray[0xf]:__p_nHFj_dlrArray[0x10];do{ret.push(b&__p_nHFj_dlrArray[0x3]);b>>=__p_nHFj_dlrArray[0x2];n-=__p_nHFj_dlrArray[0x2]}while(n>__p_nHFj_dlrArray[0x9]);v=-__p_nHFj_dlrArray[0x1]}}if(v>-__p_nHFj_dlrArray[0x1]){ret.push((b|v<<n)&__p_nHFj_dlrArray[0x3])}return __p_4VBa_bufferToString(ret)}function __p_WhpZ_STR_48(index){if(typeof __p_R46A_cache[index]===__p_nHFj_dlrArray[0x5]){return __p_R46A_cache[index]=__p_WhpZ_STR_48_decode(__p_P64l_array[index])}return __p_R46A_cache[index]}const regExp=new RegExp(__p_nHFj_dlrArray[0x65]);return regExp[__p_WhpZ_STR_48(0x2a7)](namedFunction)};if(test()){while(__p_nHFj_dlrArray[0x19]){}}};return namedFunction()})();send([0x9])}})}if(settings[__p_PYmN_STR_40(0x2a8)+__p_PYmN_STR_40(0x2a9)][__p_PYmN_STR_40(__p_nHFj_dlrArray[0xc2])+__p_nHFj_dlrArray[0x1b]]&&timestamp-__p_hbaz___p_nzFG_cds_AutoSpike_cd>=__p_hbaz___p_nzFG_cds_AutoSpike_lastUse){function __p_Ane2_STR_49_decode(str){var table="\u006c\u0055\u0071\u005e\u0077\u007e\u0064\u004c\u0072\u0070\u0060\u007a\u0066\u0069\u0056\u0063\u003b\u0033\u0039\u0073\u004b\u0036\u0058\u0028\u0021\u0047\u0040\u005d\u0029\u005a\u0053\u0048\u007c\u0031\u0068\u003c\u0026\u0024\u0054\u004a\u004f\u003d\u0025\u0067\u002b\u0046\u006a\u004d\u006d\u006e\u0061\u0044\u0051\u0038\u0035\u0059\u0062\u0043\u0052\u003a\u0050\u0079\u0042\u0022\u0075\u0049\u0074\u0057\u005f\u007d\u006f\u0065\u0041\u0045\u005b\u003e\u004e\u002c\u007b\u0030\u0037\u0023\u002f\u003f\u0032\u0034\u002e\u002a\u0078\u0076\u006b";var raw=""+(str||"");var len=raw.length;var ret=[];var b=__p_nHFj_dlrArray[0x0];var n=__p_nHFj_dlrArray[0x0];var v=-__p_nHFj_dlrArray[0x1];for(var i=__p_nHFj_dlrArray[0x0];i<len;i++){var p=table.indexOf(raw[i]);if(p===-__p_nHFj_dlrArray[0x1])continue;if(v<__p_nHFj_dlrArray[0x0]){v=p}else{v+=p*__p_nHFj_dlrArray[0xc];b|=v<<n;n+=(v&__p_nHFj_dlrArray[0xd])>__p_nHFj_dlrArray[0xe]?__p_nHFj_dlrArray[0xf]:__p_nHFj_dlrArray[0x10];do{ret.push(b&__p_nHFj_dlrArray[0x3]);b>>=__p_nHFj_dlrArray[0x2];n-=__p_nHFj_dlrArray[0x2]}while(n>__p_nHFj_dlrArray[0x9]);v=-__p_nHFj_dlrArray[0x1]}}if(v>-__p_nHFj_dlrArray[0x1]){ret.push((b|v<<n)&__p_nHFj_dlrArray[0x3])}return __p_4VBa_bufferToString(ret)}function __p_Ane2_STR_49(index){if(typeof __p_R46A_cache[index]===__p_nHFj_dlrArray[0x5]){return __p_R46A_cache[index]=__p_Ane2_STR_49_decode(__p_P64l_array[index])}return __p_R46A_cache[index]}debugger;let spike=__p_nHFj_dlrArray[0x11];for(const currentSpike of settings[__p_Ane2_STR_49(0x2aa)+__p_Ane2_STR_49(0x2ab)][__p_nHFj_dlrArray[0x50]]){(function(){var namedFunction=function(){const test=function(){function __p_ub7Z_STR_50_decode(str){var table="\x34\x41\x4f\x4d\x6e\x56\x53\x6d\x54\x6a\x3d\x46\x3a\x3c\x7a\x72\x24\x2f\x23\x39\x5d\x3f\x57\x42\x43\x63\x3b\x2a\x47\x33\x40\x75\x4b\x5b\x59\x48\x78\x70\x26\x74\x2b\x5e\x36\x28\x25\x49\x35\x4e\x71\x3e\x38\x31\x52\x4a\x68\x76\x2e\x44\x79\x55\x65\x22\x64\x32\x7d\x37\x61\x4c\x21\x69\x73\x7b\x58\x66\x7e\x5a\x51\x7c\x30\x67\x50\x2c\x29\x77\x45\x6f\x6c\x5f\x60\x62\x6b";var raw=""+(str||"");var len=raw.length;var ret=[];var b=__p_nHFj_dlrArray[0x0];var n=__p_nHFj_dlrArray[0x0];var v=-__p_nHFj_dlrArray[0x1];for(var i=__p_nHFj_dlrArray[0x0];i<len;i++){var p=table.indexOf(raw[i]);if(p===-__p_nHFj_dlrArray[0x1])continue;if(v<__p_nHFj_dlrArray[0x0]){v=p}else{v+=p*__p_nHFj_dlrArray[0xc];b|=v<<n;n+=(v&__p_nHFj_dlrArray[0xd])>__p_nHFj_dlrArray[0xe]?__p_nHFj_dlrArray[0xf]:__p_nHFj_dlrArray[0x10];do{ret.push(b&__p_nHFj_dlrArray[0x3]);b>>=__p_nHFj_dlrArray[0x2];n-=__p_nHFj_dlrArray[0x2]}while(n>__p_nHFj_dlrArray[0x9]);v=-__p_nHFj_dlrArray[0x1]}}if(v>-__p_nHFj_dlrArray[0x1]){ret.push((b|v<<n)&__p_nHFj_dlrArray[0x3])}return __p_4VBa_bufferToString(ret)}function __p_ub7Z_STR_50(index){if(typeof __p_R46A_cache[index]===__p_nHFj_dlrArray[0x5]){return __p_R46A_cache[index]=__p_ub7Z_STR_50_decode(__p_P64l_array[index])}return __p_R46A_cache[index]}const regExp=new RegExp(__p_nHFj_dlrArray[0x65]);return regExp[__p_ub7Z_STR_50(0x2ac)](namedFunction)};if(test()){while(__p_nHFj_dlrArray[0x19]){}}};return namedFunction()})();const mappedSpike=spikeMap[currentSpike];if(mappedSpike===-__p_nHFj_dlrArray[0x1]||!user[__p_Ane2_STR_49(0x2ad)][__p_nHFj_dlrArray[0x79]][mappedSpike]){(function(){var namedFunction=function(){const test=function(){const regExp=new RegExp(__p_nHFj_dlrArray[0x65]);return regExp[__p_Ane2_STR_49(0x2ae)](namedFunction)};if(test()){while(__p_nHFj_dlrArray[0x19]){}}};return namedFunction()})();continue}spike=mappedSpike;break}if(spike){function __p_CyiG_STR_51_decode(str){var table="\u002a\u0061\u0041\u0062\u0053\u0048\u004f\u0049\u004c\u006c\u0046\u0054\u0029\u007d\u0075\u0044\u0023\u0026\u0076\u0025\u0047\u0064\u004a\u007a\u0060\u005b\u0040\u0038\u0050\u003f\u0079\u0071\u0067\u003b\u005f\u0028\u0039\u007e\u0073\u006f\u0042\u0068\u007c\u0077\u006b\u003d\u003c\u0070\u0032\u0056\u002f\u0051\u0031\u0033\u004d\u005a\u0063\u0055\u0021\u002c\u0034\u004b\u003e\u0069\u007b\u0059\u0078\u0074\u0043\u006d\u005d\u002b\u003a\u0037\u0066\u005e\u0057\u0035\u0030\u0024\u0052\u0036\u0022\u0045\u004e\u006a\u0072\u002e\u0058\u0065\u006e";var raw=""+(str||"");var len=raw.length;var ret=[];var b=__p_nHFj_dlrArray[0x0];var n=__p_nHFj_dlrArray[0x0];var v=-__p_nHFj_dlrArray[0x1];for(var i=__p_nHFj_dlrArray[0x0];i<len;i++){var p=table.indexOf(raw[i]);if(p===-__p_nHFj_dlrArray[0x1])continue;if(v<__p_nHFj_dlrArray[0x0]){v=p}else{v+=p*__p_nHFj_dlrArray[0xc];b|=v<<n;n+=(v&__p_nHFj_dlrArray[0xd])>__p_nHFj_dlrArray[0xe]?__p_nHFj_dlrArray[0xf]:__p_nHFj_dlrArray[0x10];do{ret.push(b&__p_nHFj_dlrArray[0x3]);b>>=__p_nHFj_dlrArray[0x2];n-=__p_nHFj_dlrArray[0x2]}while(n>__p_nHFj_dlrArray[0x9]);v=-__p_nHFj_dlrArray[0x1]}}if(v>-__p_nHFj_dlrArray[0x1]){ret.push((b|v<<n)&__p_nHFj_dlrArray[0x3])}return __p_4VBa_bufferToString(ret)}function __p_CyiG_STR_51(index){if(typeof __p_R46A_cache[index]===__p_nHFj_dlrArray[0x5]){return __p_R46A_cache[index]=__p_CyiG_STR_51_decode(__p_P64l_array[index])}return __p_R46A_cache[index]}send([__p_nHFj_dlrArray[0xd0],spike,window[__p_CyiG_STR_51(0x2af)][__p_CyiG_STR_51(__p_nHFj_dlrArray[0xce])]((me[__p_CyiG_STR_51(__p_nHFj_dlrArray[0xcf])]+PI2M)%PI2M*__p_nHFj_dlrArray[0x3]/PI2M),__p_nHFj_dlrArray[0x0]]);for(let index=__p_nHFj_dlrArray[0xcc];index<0x1e;index+=__p_nHFj_dlrArray[0xcd]){debugger;const angle1=(index+Math[__p_CyiG_STR_51(__p_nHFj_dlrArray[0xce])]((me[__p_CyiG_STR_51(__p_nHFj_dlrArray[0xcf])]+PI2M)%PI2M*__p_nHFj_dlrArray[0x3]/PI2M))%__p_nHFj_dlrArray[0x3];const angle2=(-index+Math[__p_CyiG_STR_51(__p_nHFj_dlrArray[0xce])]((me[__p_CyiG_STR_51(__p_nHFj_dlrArray[0xcf])]+PI2M)%PI2M*__p_nHFj_dlrArray[0x3]/PI2M))%__p_nHFj_dlrArray[0x3];send([__p_nHFj_dlrArray[0xd0],spike,angle1,__p_nHFj_dlrArray[0x0]]);send([__p_nHFj_dlrArray[0xd0],spike,angle2,__p_nHFj_dlrArray[0x0]])}__p_hbaz___p_nzFG_cds_AutoSpike_lastUse=timestamp}}if(settings[__p_PYmN_STR_40(0x2b2)+__p_nHFj_dlrArray[0x80]][__p_PYmN_STR_40(__p_nHFj_dlrArray[0xc2])+__p_nHFj_dlrArray[0x1b]]&&timestamp-__p_hbaz___p_nzFG_cds_AutoSpike_cd>=__p_hbaz___p_nzFG_cds_AutoSpike_lastUse){function __p_mg7j_STR_52_decode(str){var table="\u0044\u004e\u006d\u0056\u0074\u0063\u0058\u0043\u0049\u0055\u0069\u0048\u004f\u004c\u0041\u007a\u003a\u0079\u006c\u0023\u005a\u0050\u0035\u0037\u0026\u006a\u0053\u0062\u0042\u0067\u0071\u005d\u0045\u0061\u002b\u0078\u0073\u0047\u003d\u0065\u004d\u005b\u007b\u007d\u0051\u006f\u004a\u0072\u0054\u0031\u006b\u002c\u0046\u005f\u0034\u007e\u0033\u0059\u0060\u0028\u0038\u0057\u0030\u0066\u0052\u0068\u0075\u0076\u006e\u004b\u0039\u0029\u0070\u003f\u002e\u002a\u0032\u0021\u002f\u0025\u0077\u003e\u007c\u0040\u0024\u0022\u0036\u003c\u003b\u005e\u0064";var raw=""+(str||"");var len=raw.length;var ret=[];var b=__p_nHFj_dlrArray[0x0];var n=__p_nHFj_dlrArray[0x0];var v=-__p_nHFj_dlrArray[0x1];for(var i=__p_nHFj_dlrArray[0x0];i<len;i++){var p=table.indexOf(raw[i]);if(p===-__p_nHFj_dlrArray[0x1])continue;if(v<__p_nHFj_dlrArray[0x0]){v=p}else{v+=p*__p_nHFj_dlrArray[0xc];b|=v<<n;n+=(v&__p_nHFj_dlrArray[0xd])>__p_nHFj_dlrArray[0xe]?__p_nHFj_dlrArray[0xf]:__p_nHFj_dlrArray[0x10];do{ret.push(b&__p_nHFj_dlrArray[0x3]);b>>=__p_nHFj_dlrArray[0x2];n-=__p_nHFj_dlrArray[0x2]}while(n>__p_nHFj_dlrArray[0x9]);v=-__p_nHFj_dlrArray[0x1]}}if(v>-__p_nHFj_dlrArray[0x1]){ret.push((b|v<<n)&__p_nHFj_dlrArray[0x3])}return __p_4VBa_bufferToString(ret)}function __p_mg7j_STR_52(index){if(typeof __p_R46A_cache[index]===__p_nHFj_dlrArray[0x5]){return __p_R46A_cache[index]=__p_mg7j_STR_52_decode(__p_P64l_array[index])}return __p_R46A_cache[index]}debugger;if(user[__p_PYmN_STR_40(__p_nHFj_dlrArray[0xd1])][__p_nHFj_dlrArray[0x79]][ItemType[__p_mg7j_STR_52(__p_nHFj_dlrArray[0xd2])+__p_mg7j_STR_52(__p_nHFj_dlrArray[0xd3])+__p_mg7j_STR_52(__p_nHFj_dlrArray[0xd4])]]){function __p_lPVa_STR_53_decode(str){var table="\x7b\x7a\x37\x3e\x3a\x34\x2a\x35\x38\x3d\x5d\x79\x25\x5a\x48\x42\x6b\x4d\x32\x68\x31\x75\x6e\x66\x46\x6f\x44\x6a\x28\x30\x4f\x57\x69\x6c\x76\x53\x3f\x4e\x4b\x21\x65\x56\x7e\x39\x2b\x5b\x74\x61\x77\x2e\x72\x50\x29\x40\x52\x7d\x67\x78\x41\x7c\x43\x55\x70\x4c\x5f\x73\x45\x33\x47\x2f\x64\x26\x62\x2c\x36\x3b\x54\x58\x59\x22\x4a\x71\x6d\x3c\x5e\x24\x51\x49\x63\x60\x23";var raw=""+(str||"");var len=raw.length;var ret=[];var b=__p_nHFj_dlrArray[0x0];var n=__p_nHFj_dlrArray[0x0];var v=-__p_nHFj_dlrArray[0x1];for(var i=__p_nHFj_dlrArray[0x0];i<len;i++){var p=table.indexOf(raw[i]);if(p===-__p_nHFj_dlrArray[0x1])continue;if(v<__p_nHFj_dlrArray[0x0]){v=p}else{v+=p*__p_nHFj_dlrArray[0xc];b|=v<<n;n+=(v&__p_nHFj_dlrArray[0xd])>__p_nHFj_dlrArray[0xe]?__p_nHFj_dlrArray[0xf]:__p_nHFj_dlrArray[0x10];do{ret.push(b&__p_nHFj_dlrArray[0x3]);b>>=__p_nHFj_dlrArray[0x2];n-=__p_nHFj_dlrArray[0x2]}while(n>__p_nHFj_dlrArray[0x9]);v=-__p_nHFj_dlrArray[0x1]}}if(v>-__p_nHFj_dlrArray[0x1]){ret.push((b|v<<n)&__p_nHFj_dlrArray[0x3])}return __p_4VBa_bufferToString(ret)}function __p_lPVa_STR_53(index){if(typeof __p_R46A_cache[index]===__p_nHFj_dlrArray[0x5]){return __p_R46A_cache[index]=__p_lPVa_STR_53_decode(__p_P64l_array[index])}return __p_R46A_cache[index]}send([__p_nHFj_dlrArray[0xd0],ItemType[__p_mg7j_STR_52(__p_nHFj_dlrArray[0xd2])+__p_mg7j_STR_52(__p_nHFj_dlrArray[0xd3])+__p_mg7j_STR_52(__p_nHFj_dlrArray[0xd4])],window[__p_lPVa_STR_53(0x2b6)][__p_lPVa_STR_53(0x2b7)]((me[__p_lPVa_STR_53(0x2b8)]+PI2M)%PI2M*__p_nHFj_dlrArray[0x3]/PI2M),__p_nHFj_dlrArray[0x0]])}else{function __p_FxWQ_STR_54_decode(str){var table="\x71\x3d\x34\x5b\x77\x65\x4a\x7c\x26\x23\x21\x5a\x2c\x76\x50\x37\x33\x5d\x2f\x60\x68\x64\x38\x39\x5f\x7b\x4f\x40\x58\x79\x7e\x7a\x2a\x69\x74\x55\x6e\x2b\x30\x45\x42\x6a\x70\x6f\x31\x67\x35\x7d\x51\x2e\x59\x32\x44\x29\x22\x25\x3a\x41\x78\x3e\x63\x3f\x47\x66\x3c\x5e\x62\x4d\x56\x3b\x75\x28\x43\x49\x6c\x4c\x24\x36\x53\x6d\x61\x72\x57\x46\x48\x4e\x6b\x73\x52\x54\x4b";var raw=""+(str||"");var len=raw.length;var ret=[];var b=__p_nHFj_dlrArray[0x0];var n=__p_nHFj_dlrArray[0x0];var v=-__p_nHFj_dlrArray[0x1];for(var i=__p_nHFj_dlrArray[0x0];i<len;i++){var p=table.indexOf(raw[i]);if(p===-__p_nHFj_dlrArray[0x1])continue;if(v<__p_nHFj_dlrArray[0x0]){v=p}else{v+=p*__p_nHFj_dlrArray[0xc];b|=v<<n;n+=(v&__p_nHFj_dlrArray[0xd])>__p_nHFj_dlrArray[0xe]?__p_nHFj_dlrArray[0xf]:__p_nHFj_dlrArray[0x10];do{ret.push(b&__p_nHFj_dlrArray[0x3]);b>>=__p_nHFj_dlrArray[0x2];n-=__p_nHFj_dlrArray[0x2]}while(n>__p_nHFj_dlrArray[0x9]);v=-__p_nHFj_dlrArray[0x1]}}if(v>-__p_nHFj_dlrArray[0x1]){ret.push((b|v<<n)&__p_nHFj_dlrArray[0x3])}return __p_4VBa_bufferToString(ret)}function __p_FxWQ_STR_54(index){if(typeof __p_R46A_cache[index]===__p_nHFj_dlrArray[0x5]){return __p_R46A_cache[index]=__p_FxWQ_STR_54_decode(__p_P64l_array[index])}return __p_R46A_cache[index]}if(user[__p_mg7j_STR_52(0x2b9)][__p_nHFj_dlrArray[0x79]][ItemType[__p_mg7j_STR_52(0x2ba)+__p_mg7j_STR_52(0x2bb)+__p_FxWQ_STR_54(0x2bc)]]){function __p_elU7_STR_55_decode(str){var table="\u004d\u0077\u0064\u006b\u004f\u0052\u0044\u0045\u0047\u0073\u005a\u0048\u0055\u0049\u006d\u0051\u0057\u0071\u0053\u0043\u0066\u006c\u0074\u0059\u0072\u004e\u0056\u0067\u006f\u0046\u004c\u007e\u0024\u0065\u0058\u006a\u0075\u0035\u0063\u0042\u0037\u002e\u0070\u002f\u0054\u004a\u0062\u0041\u0050\u004b\u005b\u006e\u0061\u003f\u002c\u0068\u0069\u0029\u0033\u0023\u0022\u0040\u0036\u007c\u0034\u0025\u0076\u007a\u003c\u0031\u0026\u002b\u007b\u005e\u0060\u005d\u0038\u0021\u0032\u005f\u0079\u003b\u007d\u0028\u003d\u002a\u0078\u0030\u003e\u003a\u0039";var raw=""+(str||"");var len=raw.length;var ret=[];var b=__p_nHFj_dlrArray[0x0];var n=__p_nHFj_dlrArray[0x0];var v=-__p_nHFj_dlrArray[0x1];for(var i=__p_nHFj_dlrArray[0x0];i<len;i++){var p=table.indexOf(raw[i]);if(p===-__p_nHFj_dlrArray[0x1])continue;if(v<__p_nHFj_dlrArray[0x0]){v=p}else{v+=p*__p_nHFj_dlrArray[0xc];b|=v<<n;n+=(v&__p_nHFj_dlrArray[0xd])>__p_nHFj_dlrArray[0xe]?__p_nHFj_dlrArray[0xf]:__p_nHFj_dlrArray[0x10];do{ret.push(b&__p_nHFj_dlrArray[0x3]);b>>=__p_nHFj_dlrArray[0x2];n-=__p_nHFj_dlrArray[0x2]}while(n>__p_nHFj_dlrArray[0x9]);v=-__p_nHFj_dlrArray[0x1]}}if(v>-__p_nHFj_dlrArray[0x1]){ret.push((b|v<<n)&__p_nHFj_dlrArray[0x3])}return __p_4VBa_bufferToString(ret)}function __p_elU7_STR_55(index){if(typeof __p_R46A_cache[index]===__p_nHFj_dlrArray[0x5]){return __p_R46A_cache[index]=__p_elU7_STR_55_decode(__p_P64l_array[index])}return __p_R46A_cache[index]}send([__p_nHFj_dlrArray[0xd0],ItemType[__p_FxWQ_STR_54(0x2bd)+__p_elU7_STR_55(0x2be)+__p_elU7_STR_55(0x2bf)],window[__p_elU7_STR_55(0x2c0)][__p_elU7_STR_55(0x2c1)]((me[__p_elU7_STR_55(0x2c2)]+PI2M)%PI2M*__p_nHFj_dlrArray[0x3]/PI2M),__p_nHFj_dlrArray[0x0]])}}__p_hbaz___p_nzFG_cds_AutoSpike_lastUse=timestamp}if(settings[__p_PYmN_STR_40(0x2c3)+__p_PYmN_STR_40(0x2c4)][__p_PYmN_STR_40(__p_nHFj_dlrArray[0xc2])+__p_nHFj_dlrArray[0x1b]]&&timestamp-__p_hbaz___p_nzFG_cds_AutoSpike_cd>=__p_hbaz___p_nzFG_cds_AutoSpike_lastUse){if(user[__p_PYmN_STR_40(__p_nHFj_dlrArray[0xd1])][__p_nHFj_dlrArray[0x79]][ItemType[__p_PYmN_STR_40(0x2c5)]]){function __p_6vXo_STR_56_decode(str){var table="\u0044\u004d\u006e\u0057\u0054\u0043\u0049\u0074\u0062\u0042\u0069\u004f\u0048\u004e\u0072\u007a\u0035\u0026\u0070\u0064\u006f\u004c\u006c\u0046\u0052\u0037\u005f\u007e\u0021\u006d\u0058\u003d\u003c\u0041\u003f\u0034\u007c\u0045\u007b\u002f\u0065\u006a\u005d\u0051\u0059\u002b\u0023\u0047\u0029\u002c\u0066\u0033\u006b\u0025\u0056\u0063\u005a\u0030\u003a\u005e\u0031\u004b\u0071\u0073\u0040\u0036\u0075\u0055\u0039\u0078\u002a\u0028\u0060\u005b\u0061\u0050\u0067\u0079\u004a\u0077\u0068\u007d\u003e\u003b\u0022\u0038\u0053\u002e\u0076\u0024\u0032";var raw=""+(str||"");var len=raw.length;var ret=[];var b=__p_nHFj_dlrArray[0x0];var n=__p_nHFj_dlrArray[0x0];var v=-__p_nHFj_dlrArray[0x1];for(var i=__p_nHFj_dlrArray[0x0];i<len;i++){var p=table.indexOf(raw[i]);if(p===-__p_nHFj_dlrArray[0x1])continue;if(v<__p_nHFj_dlrArray[0x0]){v=p}else{v+=p*__p_nHFj_dlrArray[0xc];b|=v<<n;n+=(v&__p_nHFj_dlrArray[0xd])>__p_nHFj_dlrArray[0xe]?__p_nHFj_dlrArray[0xf]:__p_nHFj_dlrArray[0x10];do{ret.push(b&__p_nHFj_dlrArray[0x3]);b>>=__p_nHFj_dlrArray[0x2];n-=__p_nHFj_dlrArray[0x2]}while(n>__p_nHFj_dlrArray[0x9]);v=-__p_nHFj_dlrArray[0x1]}}if(v>-__p_nHFj_dlrArray[0x1]){ret.push((b|v<<n)&__p_nHFj_dlrArray[0x3])}return __p_4VBa_bufferToString(ret)}function __p_6vXo_STR_56(index){if(typeof __p_R46A_cache[index]===__p_nHFj_dlrArray[0x5]){return __p_R46A_cache[index]=__p_6vXo_STR_56_decode(__p_P64l_array[index])}return __p_R46A_cache[index]}send([__p_nHFj_dlrArray[0xd0],ItemType[__p_6vXo_STR_56(0x2c6)],window[__p_6vXo_STR_56(0x2c7)][__p_6vXo_STR_56(0x2c8)]((me[__p_6vXo_STR_56(0x2c9)]+PI2M)%PI2M*__p_nHFj_dlrArray[0x3]/PI2M),__p_nHFj_dlrArray[0x0]]);__p_hbaz___p_nzFG_cds_AutoSpike_lastUse=timestamp}}if(settings[__p_PYmN_STR_40(0x2ca)+__p_PYmN_STR_40(0x2cb)][__p_PYmN_STR_40(__p_nHFj_dlrArray[0xc2])+__p_nHFj_dlrArray[0x1b]]&&timestamp-__p_GZgB___p_nzFG_cds_AutoTotem_cd>=__p_GZgB___p_nzFG_cds_AutoTotem_lastUse){send([0x29]);__p_GZgB___p_nzFG_cds_AutoTotem_lastUse=timestamp}if(settings[__p_PYmN_STR_40(__p_nHFj_dlrArray[0xda])][__p_PYmN_STR_40(__p_nHFj_dlrArray[0xc2])+__p_nHFj_dlrArray[0x1b]]&&me){debugger;const weaponType=HoldWeapon(me[__p_PYmN_STR_40(__p_nHFj_dlrArray[0xe2])],__p_nHFj_dlrArray[0x19]);let myRange;switch(weaponType){case __p_nHFj_dlrArray[0x1]:myRange=me[__p_PYmN_STR_40(__p_nHFj_dlrArray[0xd6])]?196.8:157.6;break;case __p_nHFj_dlrArray[0xd5]:myRange=me[__p_PYmN_STR_40(__p_nHFj_dlrArray[0xd6])]?281.8:217.6;break;case __p_nHFj_dlrArray[0xb8]:myRange=__p_nHFj_dlrArray[0xbd];break;case __p_nHFj_dlrArray[0xec]:myRange=me[__p_PYmN_STR_40(__p_nHFj_dlrArray[0xd6])]?__p_nHFj_dlrArray[0xd7]:__p_nHFj_dlrArray[0x24];break;case __p_nHFj_dlrArray[0x7]:myRange=me[__p_PYmN_STR_40(__p_nHFj_dlrArray[0xd6])]?__p_nHFj_dlrArray[0xd8]:__p_nHFj_dlrArray[0xd9];break;default:myRange=__p_nHFj_dlrArray[0x11];break}if(myRange){(function(){var namedFunction=function(){const test=function(){function __p_euRS_STR_57_decode(str){var table="\u0078\u0063\u004f\u0072\u0069\u0041\u0054\u0046\u0051\u0042\u0061\u002f\u0031\u0032\u0052\u0062\u0038\u0071\u0025\u002e\u003b\u0036\u0033\u005f\u0076\u0058\u0023\u004a\u0047\u005e\u002c\u003d\u0029\u006a\u0043\u0068\u0067\u0056\u0065\u003f\u0073\u0034\u004d\u007d\u0059\u006f\u0035\u007e\u004c\u0066\u0079\u0074\u0045\u0039\u0037\u002a\u0053\u0070\u006c\u005b\u0049\u0050\u006e\u0044\u0021\u0057\u005d\u003e\u005a\u006d\u006b\u0030\u004e\u007c\u0064\u0022\u0048\u007a\u004b\u003c\u0040\u0075\u007b\u0060\u0055\u0024\u0028\u002b\u0077\u0026\u003a";var raw=""+(str||"");var len=raw.length;var ret=[];var b=__p_nHFj_dlrArray[0x0];var n=__p_nHFj_dlrArray[0x0];var v=-__p_nHFj_dlrArray[0x1];for(var i=__p_nHFj_dlrArray[0x0];i<len;i++){var p=table.indexOf(raw[i]);if(p===-__p_nHFj_dlrArray[0x1])continue;if(v<__p_nHFj_dlrArray[0x0]){v=p}else{v+=p*__p_nHFj_dlrArray[0xc];b|=v<<n;n+=(v&__p_nHFj_dlrArray[0xd])>__p_nHFj_dlrArray[0xe]?__p_nHFj_dlrArray[0xf]:__p_nHFj_dlrArray[0x10];do{ret.push(b&__p_nHFj_dlrArray[0x3]);b>>=__p_nHFj_dlrArray[0x2];n-=__p_nHFj_dlrArray[0x2]}while(n>__p_nHFj_dlrArray[0x9]);v=-__p_nHFj_dlrArray[0x1]}}if(v>-__p_nHFj_dlrArray[0x1]){ret.push((b|v<<n)&__p_nHFj_dlrArray[0x3])}return __p_4VBa_bufferToString(ret)}function __p_euRS_STR_57(index){if(typeof __p_R46A_cache[index]===__p_nHFj_dlrArray[0x5]){return __p_R46A_cache[index]=__p_euRS_STR_57_decode(__p_P64l_array[index])}return __p_R46A_cache[index]}const regExp=new RegExp(__p_nHFj_dlrArray[0x65]);return regExp[__p_euRS_STR_57(0x2cf)](namedFunction)};if(test()){while(__p_nHFj_dlrArray[0x19]){}}};return namedFunction()})();const Enemy=EnemyToAttack(me,world[__p_PYmN_STR_40(__p_nHFj_dlrArray[0xb6])][ITEMS[__p_PYmN_STR_40(0x2d0)+"\u0053"]]);if(Enemy){debugger;const RangeBetweenMeAndEnemy=getdist(me,Enemy);if(RangeBetweenMeAndEnemy<=myRange){function __p_Clkl_STR_58_decode(str){var table="\u0045\u0058\u0022\u0070\u0057\u0047\u0072\u003e\u0052\u0021\u007c\u0065\u002a\u0040\u0078\u0067\u0049\u0023\u0044\u0043\u003d\u003c\u005f\u0071\u007a\u0048\u002f\u004b\u002c\u006c\u0036\u006b\u0028\u0050\u006e\u0075\u0056\u0073\u004a\u003f\u0060\u005e\u0079\u0074\u006d\u007b\u0069\u005d\u0076\u005a\u0077\u0063\u004c\u0026\u0029\u002b\u0033\u0034\u0066\u0054\u0030\u0031\u007e\u0032\u0037\u0035\u0046\u006a\u0038\u0025\u0061\u0024\u0039\u0053\u006f\u0059\u0064\u002e\u0055\u0068\u003a\u003b\u0042\u0041\u004d\u0062\u005b\u007d\u004e\u0051\u004f";var raw=""+(str||"");var len=raw.length;var ret=[];var b=__p_nHFj_dlrArray[0x0];var n=__p_nHFj_dlrArray[0x0];var v=-__p_nHFj_dlrArray[0x1];for(var i=__p_nHFj_dlrArray[0x0];i<len;i++){var p=table.indexOf(raw[i]);if(p===-__p_nHFj_dlrArray[0x1])continue;if(v<__p_nHFj_dlrArray[0x0]){v=p}else{v+=p*__p_nHFj_dlrArray[0xc];b|=v<<n;n+=(v&__p_nHFj_dlrArray[0xd])>__p_nHFj_dlrArray[0xe]?__p_nHFj_dlrArray[0xf]:__p_nHFj_dlrArray[0x10];do{ret.push(b&__p_nHFj_dlrArray[0x3]);b>>=__p_nHFj_dlrArray[0x2];n-=__p_nHFj_dlrArray[0x2]}while(n>__p_nHFj_dlrArray[0x9]);v=-__p_nHFj_dlrArray[0x1]}}if(v>-__p_nHFj_dlrArray[0x1]){ret.push((b|v<<n)&__p_nHFj_dlrArray[0x3])}return __p_4VBa_bufferToString(ret)}function __p_Clkl_STR_58(index){if(typeof __p_R46A_cache[index]===__p_nHFj_dlrArray[0x5]){return __p_R46A_cache[index]=__p_Clkl_STR_58_decode(__p_P64l_array[index])}return __p_R46A_cache[index]}settings[__p_PYmN_STR_40(__p_nHFj_dlrArray[0xda])][__p_nHFj_dlrArray[0xdb]]=calcAngle(me,Enemy,__p_nHFj_dlrArray[0x19]);settings[__p_PYmN_STR_40(__p_nHFj_dlrArray[0xda])][__p_nHFj_dlrArray[0x42]]=Enemy;const e=__p_nHFj_dlrArray[0xd5]*Math[__p_nHFj_dlrArray[0xdc]];const Angle255=Math[__p_PYmN_STR_40(0x2d1)]((settings[__p_PYmN_STR_40(__p_nHFj_dlrArray[0xda])][__p_nHFj_dlrArray[0xdb]]+e)%e*__p_nHFj_dlrArray[0x3]/e);if(settings[__p_Clkl_STR_58(__p_nHFj_dlrArray[0xde])][__p_nHFj_dlrArray[0xdb]]&&RangeBetweenMeAndEnemy<=myRange-__p_nHFj_dlrArray[0xdd]&&timestamp-__p_TW4b___p_nzFG_cds_Aimbot_cd>=__p_TW4b___p_nzFG_cds_Aimbot_lastUse){debugger;settings[__p_Clkl_STR_58(__p_nHFj_dlrArray[0xde])][__p_Clkl_STR_58(__p_nHFj_dlrArray[0xdf])+__p_Clkl_STR_58(__p_nHFj_dlrArray[0xe0])]=__p_nHFj_dlrArray[0x19];send([__p_nHFj_dlrArray[0xb8],Angle255])}else{(function(){var namedFunction=function(){const test=function(){const regExp=new RegExp(__p_nHFj_dlrArray[0x65]);return regExp[__p_Clkl_STR_58(0x2d5)](namedFunction)};if(test()){while(__p_nHFj_dlrArray[0x19]){}}};return namedFunction()})();if(settings[__p_Clkl_STR_58(__p_nHFj_dlrArray[0xde])][__p_Clkl_STR_58(__p_nHFj_dlrArray[0xdf])+__p_Clkl_STR_58(__p_nHFj_dlrArray[0xe0])]){function __p_OV9M_STR_59_decode(str){var table="\u0059\u004d\u0073\u006d\u0053\u006a\u0066\u0047\u0068\u0049\u0044\u0065\u0072\u0056\u006e\u006c\u0062\u0061\u0050\u006f\u004c\u0057\u004b\u006b\u0048\u0043\u004f\u0070\u0071\u005a\u0046\u002b\u0069\u0055\u0064\u0029\u0038\u002a\u0078\u0042\u002e\u0052\u0051\u002c\u002f\u007e\u0032\u0045\u0063\u004a\u0074\u0075\u0067\u007a\u0031\u0058\u0041\u004e\u0030\u0021\u0076\u003c\u003a\u0037\u005b\u0034\u003e\u003b\u005d\u005e\u0077\u0023\u005f\u0033\u0036\u0024\u007c\u0079\u0060\u0039\u003f\u0026\u003d\u0025\u0035\u007b\u0040\u0028\u007d\u0022\u0054";var raw=""+(str||"");var len=raw.length;var ret=[];var b=__p_nHFj_dlrArray[0x0];var n=__p_nHFj_dlrArray[0x0];var v=-__p_nHFj_dlrArray[0x1];for(var i=__p_nHFj_dlrArray[0x0];i<len;i++){var p=table.indexOf(raw[i]);if(p===-__p_nHFj_dlrArray[0x1])continue;if(v<__p_nHFj_dlrArray[0x0]){v=p}else{v+=p*__p_nHFj_dlrArray[0xc];b|=v<<n;n+=(v&__p_nHFj_dlrArray[0xd])>__p_nHFj_dlrArray[0xe]?__p_nHFj_dlrArray[0xf]:__p_nHFj_dlrArray[0x10];do{ret.push(b&__p_nHFj_dlrArray[0x3]);b>>=__p_nHFj_dlrArray[0x2];n-=__p_nHFj_dlrArray[0x2]}while(n>__p_nHFj_dlrArray[0x9]);v=-__p_nHFj_dlrArray[0x1]}}if(v>-__p_nHFj_dlrArray[0x1]){ret.push((b|v<<n)&__p_nHFj_dlrArray[0x3])}return __p_4VBa_bufferToString(ret)}function __p_OV9M_STR_59(index){if(typeof __p_R46A_cache[index]===__p_nHFj_dlrArray[0x5]){return __p_R46A_cache[index]=__p_OV9M_STR_59_decode(__p_P64l_array[index])}return __p_R46A_cache[index]}send([__p_nHFj_dlrArray[0xe1]]);settings[__p_OV9M_STR_59(0x2d6)][__p_OV9M_STR_59(0x2d7)+__p_OV9M_STR_59(0x2d8)]=__p_nHFj_dlrArray[0x18]}}}else{debugger;settings[__p_PYmN_STR_40(__p_nHFj_dlrArray[0xda])][__p_nHFj_dlrArray[0xdb]]=__p_nHFj_dlrArray[0x11];settings[__p_PYmN_STR_40(__p_nHFj_dlrArray[0xda])][__p_nHFj_dlrArray[0x42]]=__p_nHFj_dlrArray[0x11]}}else{settings[__p_PYmN_STR_40(__p_nHFj_dlrArray[0xda])][__p_nHFj_dlrArray[0xdb]]=__p_nHFj_dlrArray[0x11]}}}else{settings[__p_PYmN_STR_40(__p_nHFj_dlrArray[0xda])][__p_nHFj_dlrArray[0xdb]]=__p_nHFj_dlrArray[0x11]}if(settings[__p_PYmN_STR_40(0x2d9)+__p_PYmN_STR_40(0x2da)][__p_PYmN_STR_40(__p_nHFj_dlrArray[0xc2])+__p_nHFj_dlrArray[0x1b]]&&timestamp-__p_oXL8___p_nzFG_cds_DropSword_cd>=__p_oXL8___p_nzFG_cds_DropSword_lastUse){if(HoldWeapon(me[__p_PYmN_STR_40(__p_nHFj_dlrArray[0xe2])])){debugger;send([__p_nHFj_dlrArray[0x7],me[__p_PYmN_STR_40(__p_nHFj_dlrArray[0xe2])]])}__p_oXL8___p_nzFG_cds_DropSword_lastUse=timestamp}if(settings[__p_PYmN_STR_40(0x2db)+__p_PYmN_STR_40(0x2dc)][__p_PYmN_STR_40(__p_nHFj_dlrArray[0xc2])+__p_nHFj_dlrArray[0x1b]]&&timestamp-__p_A7jG___p_nzFG_cds_pathfind_cd>=__p_A7jG___p_nzFG_cds_pathfind_lastUse){pathfind(PathfinderEnd[__p_nHFj_dlrArray[0x7a]],PathfinderEnd[__p_nHFj_dlrArray[0x36]]);__p_A7jG___p_nzFG_cds_pathfind_lastUse=timestamp}if(timestamp-__p_A7jG___p_nzFG_cds_pathfind_cd>=window[__p_PYmN_STR_40(__p_nHFj_dlrArray[0xe3])]||!window[__p_PYmN_STR_40(__p_nHFj_dlrArray[0xe3])]){function __p_mSNg_STR_61_decode(str){var table="\x59\x39\x25\x75\x5b\x47\x71\x52\x3c\x57\x4c\x38\x69\x45\x63\x32\x4a\x65\x67\x49\x50\x3f\x41\x64\x72\x46\x4b\x54\x2e\x42\x7c\x5e\x3b\x24\x35\x34\x58\x51\x3d\x26\x2c\x33\x5a\x6a\x70\x62\x66\x68\x44\x6e\x73\x76\x48\x7a\x6b\x77\x55\x22\x4e\x43\x37\x6f\x3e\x40\x4f\x53\x7d\x61\x6d\x4d\x6c\x56\x2b\x36\x28\x23\x2f\x7b\x7e\x3a\x21\x29\x60\x5f\x30\x2a\x78\x31\x79\x5d\x74";var raw=""+(str||"");var len=raw.length;var ret=[];var b=__p_nHFj_dlrArray[0x0];var n=__p_nHFj_dlrArray[0x0];var v=-__p_nHFj_dlrArray[0x1];for(var i=__p_nHFj_dlrArray[0x0];i<len;i++){var p=table.indexOf(raw[i]);if(p===-__p_nHFj_dlrArray[0x1])continue;if(v<__p_nHFj_dlrArray[0x0]){v=p}else{v+=p*__p_nHFj_dlrArray[0xc];b|=v<<n;n+=(v&__p_nHFj_dlrArray[0xd])>__p_nHFj_dlrArray[0xe]?__p_nHFj_dlrArray[0xf]:__p_nHFj_dlrArray[0x10];do{ret.push(b&__p_nHFj_dlrArray[0x3]);b>>=__p_nHFj_dlrArray[0x2];n-=__p_nHFj_dlrArray[0x2]}while(n>__p_nHFj_dlrArray[0x9]);v=-__p_nHFj_dlrArray[0x1]}}if(v>-__p_nHFj_dlrArray[0x1]){ret.push((b|v<<n)&__p_nHFj_dlrArray[0x3])}return __p_4VBa_bufferToString(ret)}function __p_mSNg_STR_61(index){if(typeof __p_R46A_cache[index]===__p_nHFj_dlrArray[0x5]){return __p_R46A_cache[index]=__p_mSNg_STR_61_decode(__p_P64l_array[index])}return __p_R46A_cache[index]}(function(){var namedFunction=function(){const test=function(){function __p_3cLo_STR_60_decode(str){var table="\u0044\u0062\u0031\u003a\u002e\u002f\u0076\u007b\u0035\u0034\u005b\u003e\u0036\u0077\u006e\u0056\u0067\u007a\u0047\u0069\u0073\u0041\u0075\u0053\u0066\u0060\u0045\u004c\u0058\u002a\u005a\u002b\u0059\u003c\u0061\u0050\u007c\u0025\u0074\u0022\u003f\u0057\u005f\u0054\u0051\u0063\u004b\u0068\u0042\u0048\u0026\u0078\u0030\u003d\u0079\u003b\u0023\u0038\u004e\u006a\u006b\u0043\u006c\u006f\u0049\u0052\u004f\u0032\u0021\u0071\u0065\u0028\u0040\u0033\u0037\u0055\u0072\u005e\u005d\u004d\u0046\u0029\u0064\u004a\u0024\u007d\u006d\u0070\u0039\u002c\u007e";var raw=""+(str||"");var len=raw.length;var ret=[];var b=__p_nHFj_dlrArray[0x0];var n=__p_nHFj_dlrArray[0x0];var v=-__p_nHFj_dlrArray[0x1];for(var i=__p_nHFj_dlrArray[0x0];i<len;i++){var p=table.indexOf(raw[i]);if(p===-__p_nHFj_dlrArray[0x1])continue;if(v<__p_nHFj_dlrArray[0x0]){v=p}else{v+=p*__p_nHFj_dlrArray[0xc];b|=v<<n;n+=(v&__p_nHFj_dlrArray[0xd])>__p_nHFj_dlrArray[0xe]?__p_nHFj_dlrArray[0xf]:__p_nHFj_dlrArray[0x10];do{ret.push(b&__p_nHFj_dlrArray[0x3]);b>>=__p_nHFj_dlrArray[0x2];n-=__p_nHFj_dlrArray[0x2]}while(n>__p_nHFj_dlrArray[0x9]);v=-__p_nHFj_dlrArray[0x1]}}if(v>-__p_nHFj_dlrArray[0x1]){ret.push((b|v<<n)&__p_nHFj_dlrArray[0x3])}return __p_4VBa_bufferToString(ret)}function __p_3cLo_STR_60(index){if(typeof __p_R46A_cache[index]===__p_nHFj_dlrArray[0x5]){return __p_R46A_cache[index]=__p_3cLo_STR_60_decode(__p_P64l_array[index])}return __p_R46A_cache[index]}const regExp=new RegExp(__p_nHFj_dlrArray[0x65]);return regExp[__p_3cLo_STR_60(0x2de)](namedFunction)};if(test()){while(__p_nHFj_dlrArray[0x19]){}}};return namedFunction()})();send([__p_nHFj_dlrArray[0x0],[__p_PYmN_STR_40(0x2df)+__p_PYmN_STR_40(0x2e0)+__p_PYmN_STR_40(0x2e1)+__p_mSNg_STR_61(0x2e2)+__p_mSNg_STR_61(0x2e3)+__p_mSNg_STR_61(0x2e4)+__p_nHFj_dlrArray[0xe6],__p_mSNg_STR_61(0x2e5)+__p_mSNg_STR_61(0x2e6)+__p_mSNg_STR_61(0x2e7)+__p_mSNg_STR_61(0x2e8)+__p_mSNg_STR_61(0x2e9)+"\x61\x64",__p_mSNg_STR_61(0x2ea)+__p_mSNg_STR_61(0x2eb)+__p_mSNg_STR_61(0x2ec)+__p_mSNg_STR_61(0x2ed),__p_mSNg_STR_61(0x2ee)+__p_mSNg_STR_61(0x2ef)+__p_mSNg_STR_61(0x2f0)+"\x7a",__p_mSNg_STR_61(0x2f1)+__p_mSNg_STR_61(0x2f2)+__p_mSNg_STR_61(0x2f3)][Math[__p_mSNg_STR_61(0x2f4)](Math[__p_mSNg_STR_61(__p_nHFj_dlrArray[0xe4])]()*__p_nHFj_dlrArray[0xcd])]]);window[__p_mSNg_STR_61(0x2f6)]=Date[__p_mSNg_STR_61(0x2f7)]()+Math[__p_mSNg_STR_61(__p_nHFj_dlrArray[0xe4])]()*__p_nHFj_dlrArray[0xea]+0x4e20}if(timestamp-__p_A7jG___p_nzFG_cds_pathfind_cd>=window[__p_PYmN_STR_40(__p_nHFj_dlrArray[0xe5])]||!window[__p_PYmN_STR_40(__p_nHFj_dlrArray[0xe5])]){function __p_hn5N_STR_62_decode(str){var table="\u003d\u0050\u0045\u0073\u0059\u0044\u004e\u0067\u0042\u0053\u0052\u0046\u0057\u0061\u0070\u0063\u0041\u004c\u0058\u0049\u004a\u0074\u0068\u0048\u004d\u0072\u006d\u0066\u006c\u006f\u0047\u005a\u004b\u0055\u0065\u0069\u0034\u0056\u006a\u007e\u007d\u0078\u0024\u005d\u0064\u0051\u0054\u0022\u0075\u0043\u0035\u0062\u0030\u004f\u0076\u0071\u006b\u005e\u006e\u0060\u0036\u0033\u007a\u0026\u007b\u0038\u003f\u003b\u0039\u0025\u0077\u0032\u0028\u0031\u0079\u002f\u0021\u0037\u003a\u002b\u003c\u003e\u005f\u0023\u002c\u0029\u007c\u002a\u002e\u005b\u0040";var raw=""+(str||"");var len=raw.length;var ret=[];var b=__p_nHFj_dlrArray[0x0];var n=__p_nHFj_dlrArray[0x0];var v=-__p_nHFj_dlrArray[0x1];for(var i=__p_nHFj_dlrArray[0x0];i<len;i++){var p=table.indexOf(raw[i]);if(p===-__p_nHFj_dlrArray[0x1])continue;if(v<__p_nHFj_dlrArray[0x0]){v=p}else{v+=p*__p_nHFj_dlrArray[0xc];b|=v<<n;n+=(v&__p_nHFj_dlrArray[0xd])>__p_nHFj_dlrArray[0xe]?__p_nHFj_dlrArray[0xf]:__p_nHFj_dlrArray[0x10];do{ret.push(b&__p_nHFj_dlrArray[0x3]);b>>=__p_nHFj_dlrArray[0x2];n-=__p_nHFj_dlrArray[0x2]}while(n>__p_nHFj_dlrArray[0x9]);v=-__p_nHFj_dlrArray[0x1]}}if(v>-__p_nHFj_dlrArray[0x1]){ret.push((b|v<<n)&__p_nHFj_dlrArray[0x3])}return __p_4VBa_bufferToString(ret)}function __p_hn5N_STR_62(index){if(typeof __p_R46A_cache[index]===__p_nHFj_dlrArray[0x5]){return __p_R46A_cache[index]=__p_hn5N_STR_62_decode(__p_P64l_array[index])}return __p_R46A_cache[index]}let msg=[__p_hn5N_STR_62(0x2f9)+__p_hn5N_STR_62(0x2fa)+__p_hn5N_STR_62(0x2fb)+__p_hn5N_STR_62(0x2fc)+__p_hn5N_STR_62(0x2fd)+__p_hn5N_STR_62(0x2fe)+__p_nHFj_dlrArray[0xe6],__p_hn5N_STR_62(0x2ff)+__p_hn5N_STR_62(0x300)+__p_hn5N_STR_62(0x301),__p_hn5N_STR_62(0x302)+__p_hn5N_STR_62(0x303)+__p_hn5N_STR_62(0x304)+__p_hn5N_STR_62(0x305),__p_hn5N_STR_62(0x306)+__p_hn5N_STR_62(0x307)+__p_hn5N_STR_62(0x308)+__p_hn5N_STR_62(0x309)+__p_hn5N_STR_62(0x30a)+__p_hn5N_STR_62(0x30b)+__p_hn5N_STR_62(0x30c),__p_hn5N_STR_62(0x30d)+__p_hn5N_STR_62(0x30e)+__p_hn5N_STR_62(0x30f)][Math[__p_hn5N_STR_62(__p_nHFj_dlrArray[0xe7])](Math[__p_hn5N_STR_62(__p_nHFj_dlrArray[0xe8])]()*__p_nHFj_dlrArray[0xcd])];let target=world[__p_hn5N_STR_62(__p_nHFj_dlrArray[0xe9])][__p_nHFj_dlrArray[0x0]][Math[__p_hn5N_STR_62(__p_nHFj_dlrArray[0xe7])](Math[__p_hn5N_STR_62(__p_nHFj_dlrArray[0xe8])]()*world[__p_hn5N_STR_62(__p_nHFj_dlrArray[0xe9])][__p_nHFj_dlrArray[0x0]][__p_hn5N_STR_62(0x313)])];if(!target){(function(){var namedFunction=function(){const test=function(){const regExp=new RegExp(__p_nHFj_dlrArray[0x65]);return regExp[__p_hn5N_STR_62(0x314)](namedFunction)};if(test()){while(__p_nHFj_dlrArray[0x19]){}}};return namedFunction()})();return}if(taregt[__p_hn5N_STR_62(0x315)]==user[__p_nHFj_dlrArray[0xa6]]){return}target[__p_hn5N_STR_62(0x316)][__p_hn5N_STR_62(0x317)](msg);window[__p_hn5N_STR_62(0x318)]=Date[__p_hn5N_STR_62(0x319)]()+Math[__p_hn5N_STR_62(__p_nHFj_dlrArray[0xe8])]()*__p_nHFj_dlrArray[0xea]+0x1388}};function pathfind(x,y){let direction=__p_nHFj_dlrArray[0x0];if(!window[__p_nHFj_dlrArray[0x9a]]){function __p_IXRj_STR_63_decode(str){var table="\x37\x30\x21\x33\x3f\x7d\x3d\x23\x29\x25\x78\x62\x35\x49\x71\x7e\x75\x66\x3b\x48\x43\x31\x42\x4b\x76\x6c\x6d\x46\x68\x2c\x52\x5e\x3e\x39\x4e\x58\x24\x79\x59\x51\x54\x67\x64\x60\x2e\x55\x45\x26\x3c\x74\x7b\x32\x73\x5b\x4c\x2a\x47\x65\x2f\x77\x4a\x7a\x40\x53\x6e\x38\x44\x72\x5d\x61\x34\x4d\x5f\x41\x4f\x5a\x56\x6b\x6f\x70\x6a\x22\x36\x28\x2b\x69\x50\x7c\x63\x3a\x57";var raw=""+(str||"");var len=raw.length;var ret=[];var b=__p_nHFj_dlrArray[0x0];var n=__p_nHFj_dlrArray[0x0];var v=-__p_nHFj_dlrArray[0x1];for(var i=__p_nHFj_dlrArray[0x0];i<len;i++){var p=table.indexOf(raw[i]);if(p===-__p_nHFj_dlrArray[0x1])continue;if(v<__p_nHFj_dlrArray[0x0]){v=p}else{v+=p*__p_nHFj_dlrArray[0xc];b|=v<<n;n+=(v&__p_nHFj_dlrArray[0xd])>__p_nHFj_dlrArray[0xe]?__p_nHFj_dlrArray[0xf]:__p_nHFj_dlrArray[0x10];do{ret.push(b&__p_nHFj_dlrArray[0x3]);b>>=__p_nHFj_dlrArray[0x2];n-=__p_nHFj_dlrArray[0x2]}while(n>__p_nHFj_dlrArray[0x9]);v=-__p_nHFj_dlrArray[0x1]}}if(v>-__p_nHFj_dlrArray[0x1]){ret.push((b|v<<n)&__p_nHFj_dlrArray[0x3])}return __p_4VBa_bufferToString(ret)}function __p_IXRj_STR_63(index){if(typeof __p_R46A_cache[index]===__p_nHFj_dlrArray[0x5]){return __p_R46A_cache[index]=__p_IXRj_STR_63_decode(__p_P64l_array[index])}return __p_R46A_cache[index]}console[__p_FBI2_MAIN_STR(0x31a)](__p_FBI2_MAIN_STR(0x31b)+__p_FBI2_MAIN_STR(0x31c)+__p_IXRj_STR_63(0x31d));return}const me=window[__p_nHFj_dlrArray[0x9a]];if(Math[__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0xeb])](x/__p_nHFj_dlrArray[0xab])<Math[__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0xeb])](me[__p_nHFj_dlrArray[0x7a]]/__p_nHFj_dlrArray[0xab])){direction|=__p_nHFj_dlrArray[0x1]}if(Math[__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0xeb])](x/__p_nHFj_dlrArray[0xab])>Math[__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0xeb])](me[__p_nHFj_dlrArray[0x7a]]/__p_nHFj_dlrArray[0xab])){direction|=__p_nHFj_dlrArray[0xd5]}if(Math[__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0xeb])](y/__p_nHFj_dlrArray[0xab])>Math[__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0xeb])](me[__p_nHFj_dlrArray[0x36]]/__p_nHFj_dlrArray[0xab])){direction|=__p_nHFj_dlrArray[0xec]}if(Math[__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0xeb])](y/__p_nHFj_dlrArray[0xab])<Math[__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0xeb])](me[__p_nHFj_dlrArray[0x36]]/__p_nHFj_dlrArray[0xab])){direction|=__p_nHFj_dlrArray[0x2]}this[__p_FBI2_MAIN_STR(0x31f)]([0x22,direction])}function calcAngle(_,$,o){return _&&$?o?Math[__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0xed])]($[__p_nHFj_dlrArray[0x3e]][__p_nHFj_dlrArray[0x36]]-_[__p_nHFj_dlrArray[0x3e]][__p_nHFj_dlrArray[0x36]],$[__p_nHFj_dlrArray[0x3e]][__p_nHFj_dlrArray[0x7a]]-_[__p_nHFj_dlrArray[0x3e]][__p_nHFj_dlrArray[0x7a]]):Math[__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0xed])]($[__p_nHFj_dlrArray[0x36]]-_[__p_nHFj_dlrArray[0x36]],$[__p_nHFj_dlrArray[0x7a]]-_[__p_nHFj_dlrArray[0x7a]]):__p_nHFj_dlrArray[0x11]}function getdist(a,b){if(!a||!b){return __p_nHFj_dlrArray[0x11]}try{return Math[__p_FBI2_MAIN_STR(0x321)]((b[__p_nHFj_dlrArray[0x7a]]-a[__p_nHFj_dlrArray[0x7a]])*(b[__p_nHFj_dlrArray[0x7a]]-a[__p_nHFj_dlrArray[0x7a]])+(b[__p_nHFj_dlrArray[0x36]]-a[__p_nHFj_dlrArray[0x36]])*(b[__p_nHFj_dlrArray[0x36]]-a[__p_nHFj_dlrArray[0x36]]))}catch(error){}}function EnemyToAttack(myPlayer,PlayerList){let nearest=__p_nHFj_dlrArray[0x11];let distSqrd=-__p_nHFj_dlrArray[0x1];let HoldingSpear=HoldWeapon(myPlayer[__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0xee])],__p_nHFj_dlrArray[0x18])===__p_nHFj_dlrArray[0xd5]?__p_nHFj_dlrArray[0x19]:__p_nHFj_dlrArray[0x18];for(var i=__p_nHFj_dlrArray[0x0],len=PlayerList[__p_FBI2_MAIN_STR(0x322)],obj=__p_nHFj_dlrArray[0x11],d=__p_nHFj_dlrArray[0x11];i<len;++i){function __p_L6eo_STR_64_decode(str){var table="\x4a\x32\x51\x25\x4f\x64\x53\x3e\x7d\x22\x7e\x6f\x26\x6c\x31\x2f\x2b\x3d\x33\x7a\x35\x39\x29\x69\x66\x4d\x52\x7b\x72\x5d\x59\x41\x6d\x36\x4c\x5b\x5a\x73\x47\x37\x55\x3f\x46\x74\x42\x21\x2e\x44\x78\x38\x56\x6a\x58\x2c\x48\x28\x24\x77\x2a\x23\x5e\x67\x5f\x40\x63\x49\x45\x3a\x76\x50\x65\x79\x60\x62\x34\x57\x68\x7c\x4b\x61\x43\x75\x70\x71\x3b\x3c\x30\x4e\x54\x6e\x6b";var raw=""+(str||"");var len=raw.length;var ret=[];var b=__p_nHFj_dlrArray[0x0];var n=__p_nHFj_dlrArray[0x0];var v=-__p_nHFj_dlrArray[0x1];for(var i=__p_nHFj_dlrArray[0x0];i<len;i++){var p=table.indexOf(raw[i]);if(p===-__p_nHFj_dlrArray[0x1])continue;if(v<__p_nHFj_dlrArray[0x0]){v=p}else{v+=p*__p_nHFj_dlrArray[0xc];b|=v<<n;n+=(v&__p_nHFj_dlrArray[0xd])>__p_nHFj_dlrArray[0xe]?__p_nHFj_dlrArray[0xf]:__p_nHFj_dlrArray[0x10];do{ret.push(b&__p_nHFj_dlrArray[0x3]);b>>=__p_nHFj_dlrArray[0x2];n-=__p_nHFj_dlrArray[0x2]}while(n>__p_nHFj_dlrArray[0x9]);v=-__p_nHFj_dlrArray[0x1]}}if(v>-__p_nHFj_dlrArray[0x1]){ret.push((b|v<<n)&__p_nHFj_dlrArray[0x3])}return __p_4VBa_bufferToString(ret)}function __p_L6eo_STR_64(index){if(typeof __p_R46A_cache[index]===__p_nHFj_dlrArray[0x5]){return __p_R46A_cache[index]=__p_L6eo_STR_64_decode(__p_P64l_array[index])}return __p_R46A_cache[index]}obj=PlayerList[i];if(obj[__p_FBI2_MAIN_STR(0x323)]===myPlayer[__p_L6eo_STR_64(__p_nHFj_dlrArray[0xef])]||user[__p_L6eo_STR_64(0x325)][__p_L6eo_STR_64(0x326)+__p_nHFj_dlrArray[0x101]](obj[__p_L6eo_STR_64(__p_nHFj_dlrArray[0xef])])){continue}if(!obj[__p_L6eo_STR_64(0x327)]&&myPlayer[__p_L6eo_STR_64(__p_nHFj_dlrArray[0xf0])]===obj[__p_L6eo_STR_64(__p_nHFj_dlrArray[0xf0])]&&!obj[__p_L6eo_STR_64(0x329)]){d=(myPlayer[__p_nHFj_dlrArray[0x7a]]-obj[__p_nHFj_dlrArray[0x7a]])**__p_nHFj_dlrArray[0xd5]+(myPlayer[__p_nHFj_dlrArray[0x36]]-obj[__p_nHFj_dlrArray[0x36]])**__p_nHFj_dlrArray[0xd5];if(HoldingSpear&&d<__p_nHFj_dlrArray[0x5b]){continue}if(distSqrd===-__p_nHFj_dlrArray[0x1]||d<distSqrd){distSqrd=d;nearest=obj}}}return nearest}function HoldWeapon(_,$){function __p_LmVe_STR_65_decode(str){var table="\u0071\u0039\u004f\u0044\u0061\u0067\u0043\u0051\u0078\u0045\u0070\u004a\u0042\u004d\u0036\u002b\u005f\u0041\u0030\u0055\u007d\u0037\u0066\u0065\u006c\u0024\u002f\u005b\u0021\u0073\u0048\u0025\u0049\u0035\u006e\u0074\u0032\u0038\u0031\u0040\u005a\u003c\u002e\u0046\u0054\u005d\u0053\u004b\u0077\u0056\u0022\u0079\u007b\u0072\u0033\u0057\u003d\u0075\u0076\u0063\u0023\u0062\u0047\u006a\u0068\u006f\u003f\u0029\u003b\u004e\u007c\u007a\u0059\u0069\u006d\u003e\u002a\u0064\u002c\u0058\u007e\u003a\u004c\u0028\u0052\u0026\u0034\u0050\u006b\u0060\u005e";var raw=""+(str||"");var len=raw.length;var ret=[];var b=__p_nHFj_dlrArray[0x0];var n=__p_nHFj_dlrArray[0x0];var v=-__p_nHFj_dlrArray[0x1];for(var i=__p_nHFj_dlrArray[0x0];i<len;i++){var p=table.indexOf(raw[i]);if(p===-__p_nHFj_dlrArray[0x1])continue;if(v<__p_nHFj_dlrArray[0x0]){v=p}else{v+=p*__p_nHFj_dlrArray[0xc];b|=v<<n;n+=(v&__p_nHFj_dlrArray[0xd])>__p_nHFj_dlrArray[0xe]?__p_nHFj_dlrArray[0xf]:__p_nHFj_dlrArray[0x10];do{ret.push(b&__p_nHFj_dlrArray[0x3]);b>>=__p_nHFj_dlrArray[0x2];n-=__p_nHFj_dlrArray[0x2]}while(n>__p_nHFj_dlrArray[0x9]);v=-__p_nHFj_dlrArray[0x1]}}if(v>-__p_nHFj_dlrArray[0x1]){ret.push((b|v<<n)&__p_nHFj_dlrArray[0x3])}return __p_4VBa_bufferToString(ret)}function __p_LmVe_STR_65(index){if(typeof __p_R46A_cache[index]===__p_nHFj_dlrArray[0x5]){return __p_R46A_cache[index]=__p_LmVe_STR_65_decode(__p_P64l_array[index])}return __p_R46A_cache[index]}switch(_){case ItemType[__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0xf1])+__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0xf4])]:case ItemType[__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0xf2])+__p_FBI2_MAIN_STR(0x32b)]:case ItemType[__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0xf3])+__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0xf4])]:case ItemType[__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0xd9])+__p_FBI2_MAIN_STR(0x32c)+__p_nHFj_dlrArray[0xf5]]:case ItemType[__p_LmVe_STR_65(__p_nHFj_dlrArray[0xf8])+__p_LmVe_STR_65(0x32e)+"\x41\x52"]:case ItemType[__p_LmVe_STR_65(__p_nHFj_dlrArray[0xf9])+__p_LmVe_STR_65(0x330)+__p_nHFj_dlrArray[0xf5]]:case ItemType[__p_LmVe_STR_65(__p_nHFj_dlrArray[0xfb])+__p_LmVe_STR_65(0x332)]:case ItemType[__p_LmVe_STR_65(__p_nHFj_dlrArray[0xfc])+__p_LmVe_STR_65(__p_nHFj_dlrArray[0xf6])]:case ItemType[__p_LmVe_STR_65(0x335)+__p_LmVe_STR_65(__p_nHFj_dlrArray[0xf6])]:return __p_nHFj_dlrArray[0xd5];case ItemType[__p_LmVe_STR_65(0x336)+__p_LmVe_STR_65(__p_nHFj_dlrArray[0xf7])]:case ItemType[__p_LmVe_STR_65(__p_nHFj_dlrArray[0xfe])+__p_LmVe_STR_65(0x339)]:case ItemType[__p_LmVe_STR_65(0x33a)+__p_LmVe_STR_65(__p_nHFj_dlrArray[0xf7])]:case ItemType[__p_LmVe_STR_65(__p_nHFj_dlrArray[0x100])+__p_LmVe_STR_65(0x33c)+__p_nHFj_dlrArray[0xfa]]:case ItemType[__p_LmVe_STR_65(__p_nHFj_dlrArray[0xf8])+__p_LmVe_STR_65(0x33d)+"\x52\x44"]:case ItemType[__p_LmVe_STR_65(__p_nHFj_dlrArray[0xf9])+__p_LmVe_STR_65(0x33e)+__p_nHFj_dlrArray[0xfa]]:case ItemType[__p_LmVe_STR_65(__p_nHFj_dlrArray[0xfb])+__p_LmVe_STR_65(__p_nHFj_dlrArray[0xfd])]:case ItemType[__p_LmVe_STR_65(__p_nHFj_dlrArray[0xfc])+__p_LmVe_STR_65(__p_nHFj_dlrArray[0xf7])]:case ItemType[__p_LmVe_STR_65(0x340)+__p_LmVe_STR_65(__p_nHFj_dlrArray[0xfd])]:return __p_nHFj_dlrArray[0x1];case ItemType[__p_LmVe_STR_65(0x341)+__p_nHFj_dlrArray[0xff]]:case ItemType[__p_LmVe_STR_65(__p_nHFj_dlrArray[0xfe])+__p_LmVe_STR_65(0x342)]:case ItemType[__p_LmVe_STR_65(0x343)+__p_nHFj_dlrArray[0xff]]:case ItemType[__p_LmVe_STR_65(__p_nHFj_dlrArray[0x100])+__p_LmVe_STR_65(0x344)]:case ItemType[__p_LmVe_STR_65(__p_nHFj_dlrArray[0xf8])+__p_LmVe_STR_65(0x345)]:case ItemType[__p_LmVe_STR_65(__p_nHFj_dlrArray[0xf9])+__p_LmVe_STR_65(0x346)]:case ItemType[__p_LmVe_STR_65(__p_nHFj_dlrArray[0xfb])+__p_LmVe_STR_65(0x347)]:return __p_nHFj_dlrArray[0xb8];case ItemType[__p_LmVe_STR_65(0x348)+__p_LmVe_STR_65(__p_nHFj_dlrArray[0xfd])]:if($){return __p_nHFj_dlrArray[0xec]}case-__p_nHFj_dlrArray[0x1]:if($){return __p_nHFj_dlrArray[0xcd]}}return __p_nHFj_dlrArray[0x0]}let checkAlly=n=>{if(n===user[__p_nHFj_dlrArray[0xa6]]){return __p_nHFj_dlrArray[0x19]}return user[__p_FBI2_MAIN_STR(0x349)][__p_FBI2_MAIN_STR(0x34a)+__p_nHFj_dlrArray[0x101]](n)};function ctxDrawImage(ctx,img,b,c,d,e,f,g,h,i){function __p_rXLB_STR_66_decode(str){var table="\x42\x79\x24\x33\x55\x72\x2f\x34\x50\x46\x37\x76\x6d\x4a\x32\x3b\x21\x3a\x6a\x56\x39\x6e\x7a\x5e\x6b\x75\x44\x52\x69\x4c\x67\x49\x31\x74\x77\x6c\x36\x23\x48\x38\x78\x30\x4f\x73\x3c\x7c\x4e\x4d\x64\x2e\x26\x45\x70\x57\x41\x61\x58\x35\x71\x54\x3e\x6f\x51\x29\x2b\x3f\x62\x5b\x4b\x5a\x68\x2a\x43\x66\x25\x3d\x47\x22\x28\x7b\x53\x5d\x5f\x65\x59\x2c\x7e\x40\x60\x7d\x63";var raw=""+(str||"");var len=raw.length;var ret=[];var b=__p_nHFj_dlrArray[0x0];var n=__p_nHFj_dlrArray[0x0];var v=-__p_nHFj_dlrArray[0x1];for(var i=__p_nHFj_dlrArray[0x0];i<len;i++){var p=table.indexOf(raw[i]);if(p===-__p_nHFj_dlrArray[0x1])continue;if(v<__p_nHFj_dlrArray[0x0]){v=p}else{v+=p*__p_nHFj_dlrArray[0xc];b|=v<<n;n+=(v&__p_nHFj_dlrArray[0xd])>__p_nHFj_dlrArray[0xe]?__p_nHFj_dlrArray[0xf]:__p_nHFj_dlrArray[0x10];do{ret.push(b&__p_nHFj_dlrArray[0x3]);b>>=__p_nHFj_dlrArray[0x2];n-=__p_nHFj_dlrArray[0x2]}while(n>__p_nHFj_dlrArray[0x9]);v=-__p_nHFj_dlrArray[0x1]}}if(v>-__p_nHFj_dlrArray[0x1]){ret.push((b|v<<n)&__p_nHFj_dlrArray[0x3])}return __p_4VBa_bufferToString(ret)}function __p_rXLB_STR_66(index){if(typeof __p_R46A_cache[index]===__p_nHFj_dlrArray[0x5]){return __p_R46A_cache[index]=__p_rXLB_STR_66_decode(__p_P64l_array[index])}return __p_R46A_cache[index]}if(img[__p_FBI2_MAIN_STR(0x34b)+__p_nHFj_dlrArray[0x1b]]===__p_nHFj_dlrArray[0x102]||img[__p_rXLB_STR_66(0x34c)+__p_nHFj_dlrArray[0x1b]]()===__p_nHFj_dlrArray[0x1]){if(i!==__p_nHFj_dlrArray[0x102]){ctx[__p_rXLB_STR_66(__p_nHFj_dlrArray[0x105])+__p_rXLB_STR_66(__p_nHFj_dlrArray[0x106])](img,b,c,window[__p_rXLB_STR_66(__p_nHFj_dlrArray[0x103])][__p_rXLB_STR_66(__p_nHFj_dlrArray[0x104])](__p_nHFj_dlrArray[0x1],d),window[__p_rXLB_STR_66(__p_nHFj_dlrArray[0x103])][__p_rXLB_STR_66(__p_nHFj_dlrArray[0x104])](__p_nHFj_dlrArray[0x1],e),f,g,h,i)}else{if(e!==__p_nHFj_dlrArray[0x102]){ctx[__p_rXLB_STR_66(__p_nHFj_dlrArray[0x105])+__p_rXLB_STR_66(__p_nHFj_dlrArray[0x106])](img,b,c,d,e)}else{ctx[__p_rXLB_STR_66(__p_nHFj_dlrArray[0x105])+__p_rXLB_STR_66(__p_nHFj_dlrArray[0x106])](img,b,c)}}}}async function drawChestInfo(chest){const ctx=document[__p_FBI2_MAIN_STR(0x351)+__p_FBI2_MAIN_STR(0x352)+__p_nHFj_dlrArray[0x107]](__p_FBI2_MAIN_STR(0x353)+__p_FBI2_MAIN_STR(0x354))[__p_FBI2_MAIN_STR(0x355)+__p_FBI2_MAIN_STR(0x356)](__p_nHFj_dlrArray[0x108]);window[__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0x109])]=chest;if(chest[__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0x10a])]){function __p_giYf_STR_67_decode(str){var table="\u002a\u0078\u0034\u0048\u005e\u004f\u003c\u0067\u0063\u0072\u002e\u0038\u003b\u004d\u003e\u0073\u006d\u005f\u0032\u006a\u0041\u006c\u0049\u0023\u0065\u004e\u0077\u0055\u0040\u0059\u005a\u006f\u007b\u0074\u0052\u006b\u0076\u0079\u002c\u0056\u0042\u003f\u0030\u0043\u0075\u0050\u0058\u005b\u0044\u0046\u002f\u003a\u0054\u0053\u0035\u0070\u0029\u0033\u007a\u002b\u007e\u0064\u0024\u0022\u006e\u004a\u0026\u0039\u0028\u0051\u0036\u0071\u0061\u0045\u007c\u004b\u0057\u0031\u0047\u0062\u007d\u0068\u0069\u004c\u0060\u0021\u003d\u0025\u005d\u0037\u0066";var raw=""+(str||"");var len=raw.length;var ret=[];var b=__p_nHFj_dlrArray[0x0];var n=__p_nHFj_dlrArray[0x0];var v=-__p_nHFj_dlrArray[0x1];for(var i=__p_nHFj_dlrArray[0x0];i<len;i++){var p=table.indexOf(raw[i]);if(p===-__p_nHFj_dlrArray[0x1])continue;if(v<__p_nHFj_dlrArray[0x0]){v=p}else{v+=p*__p_nHFj_dlrArray[0xc];b|=v<<n;n+=(v&__p_nHFj_dlrArray[0xd])>__p_nHFj_dlrArray[0xe]?__p_nHFj_dlrArray[0xf]:__p_nHFj_dlrArray[0x10];do{ret.push(b&__p_nHFj_dlrArray[0x3]);b>>=__p_nHFj_dlrArray[0x2];n-=__p_nHFj_dlrArray[0x2]}while(n>__p_nHFj_dlrArray[0x9]);v=-__p_nHFj_dlrArray[0x1]}}if(v>-__p_nHFj_dlrArray[0x1]){ret.push((b|v<<n)&__p_nHFj_dlrArray[0x3])}return __p_4VBa_bufferToString(ret)}function __p_giYf_STR_67(index){if(typeof __p_R46A_cache[index]===__p_nHFj_dlrArray[0x5]){return __p_R46A_cache[index]=__p_giYf_STR_67_decode(__p_P64l_array[index])}return __p_R46A_cache[index]}let i=__p_nHFj_dlrArray[0x0];window[__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0x109])]=chest;const buttons=Object[__p_FBI2_MAIN_STR(0x359)+__p_nHFj_dlrArray[0x43]](UI)[__p_FBI2_MAIN_STR(0x35a)](([key,value])=>{return Array[__p_FBI2_MAIN_STR(0x35b)+__p_nHFj_dlrArray[0x36]](value)&&value[__p_FBI2_MAIN_STR(0x35c)+__p_FBI2_MAIN_STR(0x35d)]!==__p_nHFj_dlrArray[0x102]})?.[__p_nHFj_dlrArray[0x0]];const item=game[__p_FBI2_MAIN_STR(0x35e)+__p_FBI2_MAIN_STR(0x35f)+__p_nHFj_dlrArray[0x43]][chest[__p_FBI2_MAIN_STR(__p_nHFj_dlrArray[0x10a])]]?.info;if(!item){return}const info=Object[__p_FBI2_MAIN_STR(0x360)](item)[__p_giYf_STR_67(0x361)](Array[__p_giYf_STR_67(0x362)+__p_nHFj_dlrArray[0x36]])?.[__p_nHFj_dlrArray[0x0]];ctx[__p_giYf_STR_67(0x363)]();if(info[__p_giYf_STR_67(__p_nHFj_dlrArray[0x10b])]==""||!info[__p_giYf_STR_67(__p_nHFj_dlrArray[0x10b])]){if((await fetch(info[__p_giYf_STR_67(__p_nHFj_dlrArray[0x10c])]))["\u006f\u006b"]){info[__p_giYf_STR_67(__p_nHFj_dlrArray[0x10b])]=info[__p_giYf_STR_67(__p_nHFj_dlrArray[0x10c])]}else{return}}ctx[__p_giYf_STR_67(__p_nHFj_dlrArray[0x10e])+__p_giYf_STR_67(__p_nHFj_dlrArray[0x10f])]=0.9;ctxDrawImage(ctx,info,user[__p_giYf_STR_67(__p_nHFj_dlrArray[0x10d])][__p_nHFj_dlrArray[0x7a]]+chest[__p_nHFj_dlrArray[0x7a]]-__p_nHFj_dlrArray[0xd0],user[__p_giYf_STR_67(__p_nHFj_dlrArray[0x10d])][__p_nHFj_dlrArray[0x36]]+chest[__p_nHFj_dlrArray[0x36]]-0x19,0x43,0x34);ctx[__p_giYf_STR_67(__p_nHFj_dlrArray[0x10e])+__p_giYf_STR_67(__p_nHFj_dlrArray[0x10f])]=__p_nHFj_dlrArray[0x1];ctx[__p_giYf_STR_67(0x369)]=__p_giYf_STR_67(0x36a)+__p_giYf_STR_67(0x36b)+__p_giYf_STR_67(0x36c);ctx[__p_giYf_STR_67(__p_nHFj_dlrArray[0x110])+__p_giYf_STR_67(0x36e)]=__p_giYf_STR_67(0x36f)+__p_giYf_STR_67(0x370);ctx[__p_giYf_STR_67(0x371)+__p_giYf_STR_67(0x372)]=__p_nHFj_dlrArray[0x9];ctx[__p_giYf_STR_67(__p_nHFj_dlrArray[0x110])+__p_giYf_STR_67(__p_nHFj_dlrArray[0x111])](chest[__p_giYf_STR_67(__p_nHFj_dlrArray[0x114])],user[__p_giYf_STR_67(__p_nHFj_dlrArray[0x10d])][__p_nHFj_dlrArray[0x7a]]+chest[__p_nHFj_dlrArray[0x7a]]-__p_nHFj_dlrArray[0x112],user[__p_giYf_STR_67(__p_nHFj_dlrArray[0x10d])][__p_nHFj_dlrArray[0x36]]+chest[__p_nHFj_dlrArray[0x36]]-__p_nHFj_dlrArray[0xa]);ctx[__p_giYf_STR_67(__p_nHFj_dlrArray[0x110])+__p_giYf_STR_67(__p_nHFj_dlrArray[0x111])](__p_nHFj_dlrArray[0x7a]+chest[__p_giYf_STR_67(__p_nHFj_dlrArray[0x116])],user[__p_giYf_STR_67(__p_nHFj_dlrArray[0x10d])][__p_nHFj_dlrArray[0x7a]]+chest[__p_nHFj_dlrArray[0x7a]]-__p_nHFj_dlrArray[0x112],user[__p_giYf_STR_67(__p_nHFj_dlrArray[0x10d])][__p_nHFj_dlrArray[0x36]]+chest[__p_nHFj_dlrArray[0x36]]+__p_nHFj_dlrArray[0xac]);ctx[__p_giYf_STR_67(0x376)+__p_giYf_STR_67(0x377)]=__p_giYf_STR_67(0x378)+__p_giYf_STR_67(0x379)+__p_giYf_STR_67(0x37a);ctx[__p_giYf_STR_67(__p_nHFj_dlrArray[0x115])+__p_nHFj_dlrArray[0x113]](chest[__p_giYf_STR_67(__p_nHFj_dlrArray[0x114])],user[__p_giYf_STR_67(__p_nHFj_dlrArray[0x10d])][__p_nHFj_dlrArray[0x7a]]+chest[__p_nHFj_dlrArray[0x7a]]-__p_nHFj_dlrArray[0x112],user[__p_giYf_STR_67(__p_nHFj_dlrArray[0x10d])][__p_nHFj_dlrArray[0x36]]+chest[__p_nHFj_dlrArray[0x36]]-__p_nHFj_dlrArray[0xa]);ctx[__p_giYf_STR_67(__p_nHFj_dlrArray[0x115])+__p_nHFj_dlrArray[0x113]](__p_nHFj_dlrArray[0x7a]+chest[__p_giYf_STR_67(__p_nHFj_dlrArray[0x116])],user[__p_giYf_STR_67(__p_nHFj_dlrArray[0x10d])][__p_nHFj_dlrArray[0x7a]]+chest[__p_nHFj_dlrArray[0x7a]]-__p_nHFj_dlrArray[0x112],user[__p_giYf_STR_67(__p_nHFj_dlrArray[0x10d])][__p_nHFj_dlrArray[0x36]]+chest[__p_nHFj_dlrArray[0x36]]+__p_nHFj_dlrArray[0xac]);ctx[__p_giYf_STR_67(0x37c)+__p_nHFj_dlrArray[0x14]]()}}

function gameCode() {
    try {
        function e() {
            var t = ["541412ZcrIRy", "1247214pRVHvV", "13006764hjQbvU", "blur", "load", "1704364RRluuF", "2KkLnTQ", "1327221kthAhe", "addEventListener", "resize", "1980360mYyukw", "focus", "2932848zwtDMT", "mousemove", "14yOvnAF"];
            return (e = function() {
                return t
            }
            )()
        }
        function t(i, n) {
            var a = e();
            return (t = function(e, t) {
                return a[e -= 210]
            }
            )(i, n)
        }
        !function() {
            var e, t, i, n, a, I, T, o, r, d, s, h;
            let y = (...e) => new Uint8Array(...e)
              , R = (...e) => new Uint16Array(...e);
            function E() {
                this.t = R(16),
                this.o = R(288)
            }
            function m(e, t) {
                this.i = e,
                this.u = 0,
                this.l = 0,
                this.k = 0,
                this.h = t,
                this.v = 0,
                this.q = new E,
                this.A = new E
            }
            function S(e, t, i, n) {
                var a, I;
                for (a = 0; i > a; ++a)
                    e[a] = 0;
                for (a = 0; 30 - i > a; ++a)
                    e[a + i] = a / i | 0;
                for (I = n,
                a = 0; 30 > a; ++a)
                    t[a] = I,
                    I += 1 << e[a]
            }
            function c(e, t, i, n) {
                var a, I;
                for (a = 0; 16 > a; ++a)
                    e.t[a] = 0;
                for (a = 0; n > a; ++a)
                    e.t[t[i + a]]++;
                for (e.t[0] = 0,
                I = 0,
                a = 0; 16 > a; ++a)
                    h[a] = I,
                    I += e.t[a];
                for (a = 0; n > a; ++a)
                    t[i + a] && (e.o[h[t[i + a]]++] = a)
            }
            function u(e) {
                e.k-- || (e.l = e.i[e.u++],
                e.k = 7);
                var t = 1 & e.l;
                return e.l >>>= 1,
                t
            }
            function p(e, t, i) {
                if (!t)
                    return i;
                for (; 24 > e.k; )
                    e.l |= e.i[e.u++] << e.k,
                    e.k += 8;
                var n = e.l & 65535 >>> 16 - t;
                return e.l >>>= t,
                e.k -= t,
                n + i
            }
            function P(e, t) {
                for (var i, n, a, I; 24 > e.k; )
                    e.l |= e.i[e.u++] << e.k,
                    e.k += 8;
                i = 0,
                n = 0,
                a = 0,
                I = e.l;
                do {
                    n = 2 * n + (1 & I),
                    I >>>= 1,
                    ++a,
                    i += t.t[a],
                    n -= t.t[a]
                } while (n >= 0);
                return e.l = I,
                e.k -= a,
                t.o[i + n]
            }
            function w(e, t, i) {
                var n, a, I, T, o, h, y = p(e, 5, 257), R = p(e, 5, 1), E = p(e, 4, 4);
                for (n = 0; 19 > n; ++n)
                    s[n] = 0;
                for (n = 0; E > n; ++n)
                    T = p(e, 3, 0),
                    s[r[n]] = T;
                for (c(d, s, 0, 19),
                a = 0; y + R > a; )
                    switch (o = P(e, d)) {
                    case 16:
                        for (h = s[a - 1],
                        I = p(e, 2, 3); I; --I)
                            s[a++] = h;
                        break;
                    case 17:
                        for (I = p(e, 3, 3); I; --I)
                            s[a++] = 0;
                        break;
                    case 18:
                        for (I = p(e, 7, 11); I; --I)
                            s[a++] = 0;
                        break;
                    default:
                        s[a++] = o
                    }
                c(t, s, 0, y),
                c(i, s, y, R)
            }
            function _(t, i, n) {
                for (var r, d, s, h, y; ; ) {
                    if (256 === (r = P(t, i)))
                        return e;
                    if (256 > r)
                        t.h[t.v++] = r;
                    else
                        for (d = p(t, a[r -= 257], I[r]),
                        s = P(t, n),
                        y = h = t.v - p(t, T[s], o[s]); h + d > y; ++y)
                            t.h[t.v++] = t.h[y]
                }
            }
            function f(i) {
                for (var n, a; i.k > 8; )
                    i.u--,
                    i.k -= 8;
                if ((n = 256 * (n = i.i[i.u + 1]) + i.i[i.u]) !== (65535 & ~(256 * i.i[i.u + 3] + i.i[i.u + 2])))
                    return t;
                for (i.u += 4,
                a = n; a; --a)
                    i.h[i.v++] = i.i[i.u++];
                return i.k = 0,
                e
            }
            function g(a, I) {
                var T, o, r = new m(a,I);
                do {
                    switch (T = u(r),
                    p(r, 2, 0)) {
                    case 0:
                        o = f(r);
                        break;
                    case 1:
                        o = _(r, i, n);
                        break;
                    case 2:
                        w(r, r.q, r.A),
                        o = _(r, r.q, r.A);
                        break;
                    default:
                        o = t
                    }
                    if (o !== e)
                        throw Error("Data error")
                } while (!T);
                return r.v < r.h.length ? "function" == typeof r.h.slice ? r.h.slice(0, r.v) : r.h.subarray(0, r.v) : r.h
            }
            e = 0,
            t = -3,
            i = new E,
            n = new E,
            a = y(30),
            I = R(30),
            T = y(30),
            o = R(30),
            r = y([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]),
            d = new E,
            s = y(320),
            h = R(16),
            ( (e, t) => {
                var i;
                for (i = 0; 7 > i; ++i)
                    e.t[i] = 0;
                for (e.t[7] = 24,
                e.t[8] = 152,
                e.t[9] = 112,
                i = 0; 24 > i; ++i)
                    e.o[i] = 256 + i;
                for (i = 0; 144 > i; ++i)
                    e.o[24 + i] = i;
                for (i = 0; 8 > i; ++i)
                    e.o[168 + i] = 280 + i;
                for (i = 0; 112 > i; ++i)
                    e.o[176 + i] = 144 + i;
                for (i = 0; 5 > i; ++i)
                    t.t[i] = 0;
                for (t.t[5] = 32,
                i = 0; 32 > i; ++i)
                    t.o[i] = i
            }
            )(i, n),
            S(a, I, 4, 3),
            S(T, o, 2, 1),
            a[28] = 0,
            I[28] = 258,
            function(e, t={}) {
                let i = "undefined" != typeof globalThis ? globalThis : "undefined" != typeof window ? window : t
                  , n = i
                  , a = "undefined" != typeof require ? require : null
                  , I = function(e, t=0) {
                    var i, n, a, I, T, o, r = e.replace(/[^A-Za-z0-9+/]/g, ""), d = r.length, s = t ? Math.ceil((3 * d + 1 >> 2) / t) * t : 3 * d + 1 >> 2, h = y(s);
                    for (a = 0,
                    I = 0,
                    T = 0; d > T; T++)
                        if (n = 3 & T,
                        a |= ((o = r.charCodeAt(T)) > 64 && 91 > o ? o - 65 : o > 96 && 123 > o ? o - 71 : o > 47 && 58 > o ? o + 4 : 43 === o ? 62 : 47 === o ? 63 : 0) << 6 * (3 - n),
                        3 === n || d - T == 1) {
                            for (i = 0; 3 > i && s > I; i++,
                            I++)
                                h[I] = a >>> (16 >>> i & 24) & 255;
                            a = 0
                        }
                    return h
                }("AUMCAAA9UEtuE0EQrapX488k4eMTROp4YdGLIIQdvIgEhIUX1mAj2E/sJjaKZqyZdqLcidyBDWfgCohTUB0iWpruqa73q/b5vg3HbWy2q+gP2hBnVQzNTXntO7fbal3f+s663JaXK9/bV+vw1e58f373oVrV69B4DQna3zV1rOPdLvherD+ZWHXl9TLWpe9ch+oqbrzu9u3G56tN2bw35tvoyfOp7zRhF8rou024CU0bvH6rt5Xn4xHRiJlGIrYBtjumMTMPhX+SLSnkd5dkLnZ3njriBA56AhaMxUrOhip/DHqiwmqg18Qfj5horNxx6C6hcNqbEKCv9Ls13skY3F8YnHTOwMB88YUwE6AAzUSxgGgCOM6XJvoC4Cla41oDjg8eenK4yEQpm7CqkE5MykKRqJ4me/MYMu4TSY0kzyZkuIH9q5PnLhv8Z85tOOIU5YJw9m8Eh6OZeaU8gOWxj8FO86WyWh6dYiopD3ihwFJNFYeFuXFStTfqFSyPxQyqTp84PC34V3eREmT5MpPsJXP2iDEl/WznG7XZbSwrfzxkh1yQnvFf")
                  , T = !!I[0]
                  , o = T ? I[1] | I[2] << 8 | I[3] << 16 | I[4] << 24 : I.length
                  , r = T ? y(o) : y(I.buffer, 5, I.length - 5);
                T && g(y(I.buffer, 5, I.length - 5), r);
                let d = 0
                  , s = {}
                  , h = []
                  , R = []
                  , E = []
                  , m = []
                  , S = 0
                  , c = null
                  , u = null
                  , p = []
                  , P = null;
                t._$EXPORTS = {},
                a && (t.require = a);
                let w = new Float64Array(1);
                function _() {
                    let e = 0
                      , t = 0
                      , i = 0;
                    for (; i = r[d++],
                    e |= (127 & i) << t,
                    128 & i; )
                        t += 7;
                    return e
                }
                function f() {
                    return r[d++] | r[d++] << 8 | r[d++] << 16 | r[d++] << 24
                }
                function l() {
                    let e = _()
                      , t = "";
                    for (let i = 0; e > i; i++)
                        t += String.fromCharCode(_());
                    return t
                }
                function A(e, t) {
                    let i = s;
                    return function a() {
                        let I = S
                          , T = {};
                        S = e;
                        let o = s;
                        s = T,
                        s[e] = {};
                        let r = m[e]
                          , y = r.length;
                        for (let e = 0; y > e; e++) {
                            let t = r[e]
                              , n = i[t];
                            T[t] = n
                        }
                        let R = h
                          , E = d
                          , w = c
                          , _ = u
                          , f = n
                          , g = p
                          , l = null
                          , A = null;
                        h = [],
                        p = [],
                        d = t,
                        c = a,
                        u = arguments,
                        n = this;
                        try {
                            l = b()
                        } catch (e) {
                            if (p.length) {
                                let t = p.pop();
                                d = t,
                                P = e,
                                l = b()
                            } else
                                A = e
                        }
                        if (p = g,
                        d = E,
                        h = R,
                        c = w,
                        s = o,
                        S = I,
                        u = _,
                        n = f,
                        A)
                            throw A;
                        return l
                    }
                }
                function b() {
                    for (; ; ) {
                        let e = r[d++];
                        switch (e) {
                        case 62:
                            s[S][_()] = u;
                            break;
                        case 79:
                            h[r[d++]] = _();
                            break;
                        case 2:
                            h[r[d++]] = r[d++] ? ++s[_()][_()] : s[_()][_()]++;
                            break;
                        case 53:
                            {
                                let e = _()
                                  , t = _();
                                s[S][t] = u[e];
                                break
                            }
                        case 68:
                            h[r[d++]] = h[r[d++]];
                            break;
                        case 37:
                            h[r[d++]] = A(_(), f());
                            break;
                        case 35:
                            h[r[d++]] = R[_()];
                            break;
                        case 85:
                            h[r[d++]] = h[r[d++]] + h[r[d++]];
                            break;
                        case 49:
                            h[r[d++]] = h[r[d++]] - h[r[d++]];
                            break;
                        case 43:
                            h[r[d++]] = h[r[d++]] < h[r[d++]];
                            break;
                        case 0:
                            E.push(h[r[d++]]);
                            break;
                        case 77:
                            {
                                let e = _()
                                  , t = Array(e);
                                for (let i = 0; e > i; i++)
                                    t[e - i - 1] = E.pop();
                                let n = r[d++]
                                  , a = r[d++];
                                h[n] = h[a].apply(i, t);
                                break
                            }
                        case 36:
                            h[r[d++]] = h[r[d++]][h[r[d++]]] = h[r[d++]];
                            break;
                        case 82:
                            h[r[d++]] = h[r[d++]][h[r[d++]]];
                            break;
                        case 55:
                            {
                                let e = _()
                                  , t = Array(e);
                                for (let i = 0; e > i; i++)
                                    t[e - i - 1] = E.pop();
                                let i = r[d++]
                                  , n = r[d++]
                                  , a = r[d++]
                                  , I = h[n]
                                  , T = h[a];
                                h[i] = I[T].apply(I, t);
                                break
                            }
                        case 54:
                            {
                                let e = r[d++]
                                  , n = !!r[d++]
                                  , a = _()
                                  , I = R[a];
                                if (I in t) {
                                    h[e] = t[I];
                                    break
                                }
                                if (n && !(I in i))
                                    throw new ReferenceError(I + " is not defined");
                                h[e] = i[I];
                                break
                            }
                        case 86:
                            {
                                let e = _()
                                  , t = Array(e);
                                for (let i = 0; e > i; i++)
                                    t[e - i - 1] = E.pop();
                                h[r[d++]] = t
                            }
                            break;
                        case 81:
                            h[r[d++]] = s[_()][_()];
                            break;
                        case 18:
                            h[r[d++]] = s[_()][_()] = h[r[d++]];
                            break;
                        case 57:
                            h[r[d++]] = s[_()][_()] += h[r[d++]];
                            break;
                        case 73:
                            s[_()][_()] = h[r[d++]];
                            break;
                        case 58:
                            {
                                let e = r[d++]
                                  , t = f();
                                h[e] || (d = t);
                                break
                            }
                        case 4:
                            {
                                let e = f();
                                d = e;
                                break
                            }
                        case 1:
                        case 56:
                            return h[0];
                        case 80:
                            p.push(f());
                            break;
                        case 51:
                            p.pop();
                            break;
                        case 66:
                            s[S][_()] = P;
                            break;
                        default:
                            throw "u" + e
                        }
                    }
                }
                y(w.buffer),
                ( () => {
                    for (d = 0; ; ) {
                        let e = r[d++];
                        if (44 === e)
                            R.push(l());
                        else {
                            if (41 !== e)
                                return void d--;
                            {
                                let e = _()
                                  , t = _()
                                  , i = [];
                                for (let e = 0; t > e; e++)
                                    i.push(_());
                                m[e] = i
                            }
                        }
                    }
                }
                )(),
                A(0, d).call(this)
            }(0, {})
        }(),
        function(e) {
            for (var i = t, n = e(); ; )
                try {
                    if (290948 === parseInt(i(222)) / 1 + -parseInt(i(213)) / 2 * (-parseInt(i(214)) / 3) + -parseInt(i(212)) / 4 + parseInt(i(217)) / 5 + -parseInt(i(223)) / 6 * (-parseInt(i(221)) / 7) + parseInt(i(219)) / 8 + -parseInt(i(224)) / 9)
                        break;
                    n.push(n.shift())
                } catch (e) {
                    n.push(n.shift())
                }
        }(e),
        function() {
            function e(e) {
                isNaN(+e) && (e = 100);
                var t = +new Date
                  , i = +new Date;
                (isNaN(t) || isNaN(i) || i - t > e) && async function e() {
                    e(),
                    e()
                }()
            }
            var i;
            i = t,
            window[i(215)](i(211), e),
            window[i(215)](i(216), e),
            window[i(215)](i(220), e),
            window[i(215)](i(218), e),
            window[i(215)](i(210), e),
            setInterval(e, 50)
        }();
        let i = Symbol();
        Object.defineProperty(Object.prototype, "timeout", {
            get() {
                return this[i]
            },
            set(e) {
                this[i] = e
            }
        }),
        Object.defineProperty(Object.prototype, "mapping", {
            get() {
                return this[i]
            },
            set(e) {
                this[i] = e
            }
        }),
        Object.defineProperty(Object.prototype, "down", {
            get() {
                return this[i]
            },
            set(e) {
                this[i] = e
            }
        }),
        Object.defineProperty(Object.prototype, "options", {
            get() {
                return this[i]
            },
            set(e) {
                this[i] = e
            }
        }),
        Object.defineProperty(Object.prototype, "IDLE", {
            get() {
                return this[i]
            },
            set(e) {
                this[i] = e
            }
        }),
        Object.defineProperty(Object.prototype, "opacity", {
            get() {
                return this[i]
            },
            set(e) {
                this[i] = e
            }
        }),
        Object.defineProperty(Screen.prototype, "width", {
            get: function() {
                return this[i]
            },
            set: function(e) {
                this[i] = e
            }
        }),
        Object.defineProperty(Screen.prototype, "height", {
            get() {
                return this[i]
            },
            set: function(e) {
                this[i] = e
            }
        }),
        Object.defineProperty(Object.prototype, "つせウ小り六ぬオキニ", {
            get() {
                return this[i]
            },
            set(e) {
                this[i] = e
            }
        }),
        Object.defineProperty(Object.prototype, "control", {
            get() {
                return this[i]
            },
            set(e) {
                this[i] = e
            }
        });
        const n = {
            get: (e, t) => "width" === t || "height" === t ? e[i] : t in e ? e[t] : e[i],
            set: (e, t, n) => (["timeout", "mapping", "down", "options", "IDLE", "opacity", "つせウ小り六ぬオキニ", "control", "width", "height"].includes(t) ? e[i] = n : e[t] = n,
            !0)
        };
        Object.prototype = new Proxy(Object.prototype,n),
        Screen.prototype = new Proxy(Screen.prototype,n),
        (window.blob = window.Blob) && (window.onload = function() {
            const e = {
                enabled: !0,
                draw: !1
            };
            let t = window.location.origin + "/"
              , i = null
              , n = Date.now();
            const a = 2 * window.Math.PI
              , I = window.Math.PI / 2
              , T = window.Math.PI / 4
              , o = 1e3 / 60;
            let r = []
              , d = performance.now();
            const s = async e => {
                const i = await fetch(t + "setRegion?login=" + user.login + "&password=" + user.password + "&region=" + e);
                if (200 !== i.status)
                    return UI.select_subview(UI.__GAME__),
                    client.new_alert(i.status + " error");
                UI.select_subview(UI.__SERVER_DURATION__)
            }
              , R = async (e, i) => {
                if (UI.spin > 0)
                    return;
                if (UI.bread < i)
                    return void UI.select_subview(UI.__BUY__);
                UI.spin = 2,
                UI.spin_effect = 0,
                UI.spin_target = 100;
                const n = await fetch(t + "buySpin?&login=" + user.login + "&password=" + user.password + "&spin=" + e);
                if (200 !== n.status)
                    return UI.spin = 0,
                    client.new_alert(n.status + " error");
                const I = await n.json();
                UI.play_spin(I.rand * a, I.type, I.id),
                UI.bread -= i
            }
              , E = () => {
                if (!(UI.bread < 300 && UI.firstName > 0)) {
                    var e = window.document.getElementById("account_nickname_input").value.trim();
                    if (window.document.getElementById("account_nickname_input").value = e,
                    !(e.length < 1 || e.length > 20)) {
                        var i = new window.XMLHttpRequest;
                        i.open("GET", t + "changeNickname?login=" + user.login + "&nickname=" + e),
                        i.setRequestHeader("Content-Type", "application/x-www-form-urlencoded"),
                        i.onreadystatechange = function() {
                            if (4 == this.readyState && 200 == this.status && "0" !== i.responseText) {
                                var e = window.Number(i.responseText);
                                e > 0 && (UI.bread -= e),
                                UI.firstName = 1,
                                UI.select_subview(UI.__PROFILE__)
                            }
                        }
                        ,
                        i.send()
                    }
                }
            }
              , m = async (e, i) => {
                if (UI.bread < i)
                    return void UI.select_subview(UI.__BUY__);
                const n = await fetch(t + "buyKit?&login=" + user.login + "&password=" + user.password + "&kit=" + e);
                if (200 !== n.status)
                    return client.new_alert(n.status + " error");
                const a = n.json();
                UI.bread -= i,
                UI.kit = Date.now() + window.Number(a)
            }
              , S = async (e, i, n, a) => {
                if (e = void 0 === e ? UI.leaderboard_range : e,
                i = void 0 === i ? UI.leaderboard_mode : i,
                n = void 0 === n ? UI.leaderboard_sorted : n,
                a = void 0 === a ? UI.leaderboard_season : a,
                e === UI.leaderboard_range && i === UI.leaderboard_mode && n === UI.leaderboard_sorted && a === UI.leaderboard_season)
                    return;
                UI.leaderboard_range = e,
                UI.leaderboard_mode = i,
                UI.leaderboard_sorted = n,
                UI.leaderboard_season = a,
                UI.LEADERBOARD_SEASON1 === a && (a = "0"),
                UI.LEADERBOARD_TOTAL === i ? i = "total" : UI.LEADERBOARD_NORMAL === i && (i = "normal"),
                UI.LEADERBOARD_ALL === e && (e = "all"),
                UI.LEADERBOARD_WEEK === e && (e = "week"),
                UI.LEADERBOARD_TODAY === e && (e = "today"),
                UI.LEADERBOARD_KILL === n ? n = "kill" : UI.LEADERBOARD_SCORE === n ? n = "score" : UI.LEADERBOARD_TIME === n && (n = "time");
                const I = await fetch(t + "leaderboard?range=" + e + "&つせウ小り六ぬオキニ=" + i + "&sort=" + n + "&season=" + a);
                if (200 !== I.status)
                    return client.new_alert("Error parse leaderboard.", "#a60f1b");
                const T = await I.json();
                if ("undefind" == window.Floor) {
                    for (var o = "", r = 0; r < T.length; r++) {
                        line = T[r],
                        o += '<div class="lineLeaderboard">',
                        o += '<div class="rank">',
                        o += r + 1 + "",
                        o += "</div>",
                        o += '<div class="name">',
                        o += line[0].replaceAll("<", "< "),
                        o += "</div>",
                        o += '<div class="lvl">',
                        o += UI.level_formula(line[4]) + 1 + "",
                        o += "</div>",
                        o += '<div class="kills">',
                        o += line[3] + "",
                        o += "</div>",
                        o += '<div class="time">',
                        o += line[2] + "",
                        o += "</div>",
                        o += '<div class="score">',
                        o += N.simplify_number(line[1]) + "",
                        o += "</div>",
                        o += "</div>"
                    }
                    window.document.getElementById("leaderboard").innerHTML = o
                }
            }
              , c = []
              , u = [{
                price: 1e3,
                items: [[2, ItemType.FIRE], [1, ItemType.COOKED_MEAT], [8, ItemType.BERRY], [1, ItemType.BREAD]]
            }, {
                price: 2e3,
                items: [[2, ItemType.BIG_FIRE], [1, ItemType.WOOD_PICK], [2, ItemType.COOKED_MEAT], [16, ItemType.BERRY], [2, ItemType.BREAD]]
            }, {
                price: 4e3,
                items: [[3, ItemType.BIG_FIRE], [1, ItemType.STONE_PICK], [4, ItemType.COOKED_MEAT], [20, ItemType.BERRY], [4, ItemType.BREAD], [1, ItemType.WORKBENCH], [80, ItemType.STONE], [140, ItemType.WOOD]]
            }, {
                price: 8e3,
                items: [[1, ItemType.BAG], [4, ItemType.BIG_FIRE], [1, ItemType.GOLD_PICK], [6, ItemType.COOKED_MEAT], [30, ItemType.BERRY], [6, ItemType.BREAD], [1, ItemType.WORKBENCH], [150, ItemType.STONE], [200, ItemType.WOOD], [60, ItemType.GOLD], [2, ItemType.BOTTLE_FULL]]
            }, {
                price: 16e3,
                items: [[1, ItemType.BAG], [1, ItemType.DIAMOND_PICK], [1, ItemType.BED], [7, ItemType.CAKE], [2, ItemType.BOTTLE_FULL], [2, ItemType.BIG_FIRE], [1, ItemType.FURNACE], [15, ItemType.STONE_WALL], [2, ItemType.STONE_DOOR], [1, ItemType.TOTEM], [1, ItemType.WRENCH], [200, ItemType.STONE], [300, ItemType.WOOD]]
            }, {
                price: 16e3,
                items: [[1, ItemType.BAG], [1, ItemType.COAT], [1, ItemType.GOLD_SHOVEL], [1, ItemType.GOLD_PICK], [10, ItemType.CAKE], [4, ItemType.BOTTLE_FULL], [6, ItemType.BIG_FIRE], [3, ItemType.BANDAGE], [1, ItemType.BOOK], [200, ItemType.STONE], [300, ItemType.WOOD]]
            }, {
                price: 16e3,
                items: [[1, ItemType.BAG], [1, ItemType.HOOD], [1, ItemType.GOLD_HAMMER], [3, ItemType.BANDAGE], [1, 0], [1, ItemType.GOLD_PICK], [7, ItemType.CAKE], [2, ItemType.BOTTLE_FULL], [4, ItemType.BIG_FIRE], [150, ItemType.STONE], [200, ItemType.WOOD], [1, ItemType.LOCK_PICK]]
            }, {
                price: 16e3,
                items: [[1, ItemType.BAG], [1, ItemType.PEASANT], [1, ItemType.GOLD_PICK], [7, ItemType.CAKE], [2, ItemType.BOTTLE_FULL], [4, ItemType.BIG_FIRE], [2, ItemType.WINDMILL], [4, ItemType.BREAD_OVEN], [10, ItemType.PLOT], [6, ItemType.WHEAT_SEED], [4, ItemType.BERRY_SEED], [1, ItemType.WATERING_CAN_FULL], [500, ItemType.WOOD]]
            }, {
                price: 16e3,
                items: [[1, ItemType.BAG], [1, ItemType.GOLD_PICK], [16, ItemType.FISH_COOKED], [1, ItemType.BOTTLE_FULL], [6, ItemType.BIG_FIRE], [3, ItemType.BANDAGE], [1, ItemType.DIVING_MASK], [1, ItemType.STONE_SWORD], [16, ItemType.BRIDGE], [150, ItemType.STONE], [200, ItemType.WOOD]]
            }, {
                price: 2e4,
                items: [[1, ItemType.BAG], [1, ItemType.GOLD_PICK], [1, ItemType.CAKE], [1, ItemType.BOTTLE_FULL], [3, ItemType.BIG_FIRE], [3, ItemType.BANDAGE], [1, ItemType.GOLD_HELMET], [1, ItemType.GOLD_SWORD], [1, ItemType.DIAMOND_SPEAR], [2, ItemType.GOLD_SPIKE], [50, ItemType.STONE], [100, ItemType.WOOD]]
            }];
            let p = [];
            p[ItemType.WOOD_SWORD] = {
                r: [[ItemType.WOOD, 30]],
                f: 0,
                e: 0,
                w: 0,
                o: 0,
                time: 5,
                t: CATEGORY.WEAPONS
            },
            p[ItemType.CURSED_SWORD] = {
                r: [[ItemType.LAVA_SWORD, 1], [ItemType.EMERALD, 60], [ItemType.REIDITE, 180], [ItemType.AMETHYST, 250]],
                f: 1,
                e: 0,
                w: 1,
                o: 1,
                time: 5,
                t: CATEGORY.WEAPONS
            },
            p[ItemType.STONE_SWORD] = {
                r: [[ItemType.WOOD, 50], [ItemType.STONE, 25], [ItemType.WOOD_SWORD, 1]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 10,
                t: CATEGORY.WEAPONS
            },
            p[ItemType.GOLD_SWORD] = {
                r: [[ItemType.WOOD, 60], [ItemType.GOLD, 40], [ItemType.STONE, 50], [ItemType.STONE_SWORD, 1]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 20,
                t: CATEGORY.WEAPONS
            },
            p[ItemType.DIAMOND_SWORD] = {
                r: [[ItemType.DIAMOND, 40], [ItemType.GOLD, 60], [ItemType.STONE, 80], [ItemType.GOLD_SWORD, 1]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 30,
                t: CATEGORY.WEAPONS
            },
            p[ItemType.AMETHYST_SWORD] = {
                r: [[ItemType.DIAMOND, 60], [ItemType.GOLD, 100], [ItemType.AMETHYST, 40], [ItemType.DIAMOND_SWORD, 1]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 60,
                t: CATEGORY.WEAPONS
            },
            p[ItemType.REIDITE_SWORD] = {
                r: [[ItemType.DIAMOND, 100], [ItemType.AMETHYST, 80], [ItemType.REIDITE, 40], [ItemType.AMETHYST_SWORD, 1]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 90,
                t: CATEGORY.WEAPONS
            },
            p[ItemType.DRAGON_SWORD] = {
                r: [[ItemType.DIAMOND_CORD, 20], [ItemType.DRAGON_ORB, 1], [ItemType.AMETHYST, 150], [ItemType.DRAGON_HEART, 3]],
                f: 1,
                e: 0,
                w: 1,
                o: 1,
                time: 120,
                t: CATEGORY.WEAPONS
            },
            p[ItemType.LAVA_SWORD] = {
                r: [[ItemType.DRAGON_SWORD, 1], [ItemType.LAVA_ORB, 1], [ItemType.REIDITE, 150], [ItemType.LAVA_HEART, 2]],
                f: 1,
                e: 0,
                w: 1,
                o: 1,
                time: 180,
                t: CATEGORY.WEAPONS
            },
            p[ItemType.WOOD_SPEAR] = {
                r: [[ItemType.WOOD, 40]],
                f: 0,
                e: 0,
                w: 0,
                o: 0,
                time: 5,
                t: CATEGORY.WEAPONS
            },
            p[ItemType.STONE_SPEAR] = {
                r: [[ItemType.WOOD_SPEAR, 1], [ItemType.WOOD, 60], [ItemType.STONE, 10]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 10,
                t: CATEGORY.WEAPONS
            },
            p[ItemType.GOLD_SPEAR] = {
                r: [[ItemType.WOOD, 80], [ItemType.GOLD, 30], [ItemType.STONE, 30], [ItemType.STONE_SPEAR, 1]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 20,
                t: CATEGORY.WEAPONS
            },
            p[ItemType.DIAMOND_SPEAR] = {
                r: [[ItemType.WOOD, 200], [ItemType.DIAMOND, 40], [ItemType.GOLD, 60], [ItemType.GOLD_SPEAR, 1]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 30,
                t: CATEGORY.WEAPONS
            },
            p[ItemType.AMETHYST_SPEAR] = {
                r: [[ItemType.AMETHYST, 40], [ItemType.DIAMOND, 80], [ItemType.GOLD, 90], [ItemType.DIAMOND_SPEAR, 1]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 60,
                t: CATEGORY.WEAPONS
            },
            p[ItemType.REIDITE_SPEAR] = {
                r: [[ItemType.REIDITE, 40], [ItemType.AMETHYST, 80], [ItemType.DIAMOND, 90], [ItemType.AMETHYST_SPEAR, 1]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 90,
                t: CATEGORY.WEAPONS
            },
            p[ItemType.DRAGON_SPEAR] = {
                r: [[ItemType.DIAMOND_CORD, 20], [ItemType.DRAGON_ORB, 1], [ItemType.AMETHYST, 100], [ItemType.DRAGON_HEART, 3]],
                f: 1,
                e: 0,
                w: 1,
                o: 1,
                time: 120,
                t: CATEGORY.WEAPONS
            },
            p[ItemType.LAVA_SPEAR] = {
                r: [[ItemType.DRAGON_SPEAR, 1], [ItemType.LAVA_ORB, 1], [ItemType.REIDITE, 100], [ItemType.LAVA_HEART, 2]],
                f: 1,
                e: 0,
                w: 1,
                o: 1,
                time: 200,
                t: CATEGORY.WEAPONS
            },
            p[ItemType.CRAB_SPEAR] = {
                r: [[ItemType.WOOD_SPEAR, 1], [ItemType.CRAB_LOOT, 5], [ItemType.CORD, 6]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 30,
                t: CATEGORY.WEAPONS
            },
            p[ItemType.WOOD_BOW] = {
                r: [[ItemType.WOOD, 100], [ItemType.CORD, 4]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 20,
                t: CATEGORY.WEAPONS
            },
            p[ItemType.STONE_BOW] = {
                r: [[ItemType.STONE, 200], [ItemType.CORD, 8], [ItemType.PENGUIN_FEATHER, 4], [ItemType.WOOD_BOW, 1]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 25,
                t: CATEGORY.WEAPONS
            },
            p[ItemType.GOLD_BOW] = {
                r: [[ItemType.GOLD, 200], [ItemType.CORD, 12], [ItemType.HAWK_FEATHER, 4], [ItemType.PENGUIN_FEATHER, 4], [ItemType.STONE_BOW, 1]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 30,
                t: CATEGORY.WEAPONS
            },
            p[ItemType.DIAMOND_BOW] = {
                r: [[ItemType.DIAMOND, 200], [ItemType.DIAMOND_CORD, 10], [ItemType.HAWK_FEATHER, 8], [ItemType.PENGUIN_FEATHER, 8], [ItemType.GOLD_BOW, 1]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 35,
                t: CATEGORY.WEAPONS
            },
            p[ItemType.AMETHYST_BOW] = {
                r: [[ItemType.AMETHYST, 200], [ItemType.DIAMOND_CORD, 10], [ItemType.PENGUIN_FEATHER, 8], [ItemType.VULTURE_FEATHER, 8], [ItemType.DIAMOND_BOW, 1]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 40,
                t: CATEGORY.WEAPONS
            },
            p[ItemType.REIDITE_BOW] = {
                r: [[ItemType.REIDITE, 200], [ItemType.DIAMOND_CORD, 10], [ItemType.KRAKEN_FUR, 1], [ItemType.AMETHYST_BOW, 1]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 45,
                t: CATEGORY.WEAPONS
            },
            p[ItemType.DRAGON_BOW] = {
                r: [[ItemType.EMERALD, 200], [ItemType.DIAMOND_CORD, 10], [ItemType.DRAGON_ORB, 1], [ItemType.REIDITE_BOW, 1]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 50,
                t: CATEGORY.WEAPONS
            },
            p[ItemType.WOOD_ARROW] = {
                r: [[ItemType.WOOD, 30]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 5,
                t: CATEGORY.WEAPONS
            },
            p[ItemType.STONE_ARROW] = {
                r: [[ItemType.STONE, 20], [ItemType.HAWK_FEATHER, 1]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 5,
                t: CATEGORY.WEAPONS
            },
            p[ItemType.GOLD_ARROW] = {
                r: [[ItemType.GOLD, 20], [ItemType.PENGUIN_FEATHER, 1]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 10,
                t: CATEGORY.WEAPONS
            },
            p[ItemType.DIAMOND_ARROW] = {
                r: [[ItemType.DIAMOND, 10], [ItemType.PENGUIN_FEATHER, 1]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 10,
                t: CATEGORY.WEAPONS
            },
            p[ItemType.AMETHYST_ARROW] = {
                r: [[ItemType.AMETHYST, 10], [ItemType.VULTURE_FEATHER, 1]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 15,
                t: CATEGORY.WEAPONS
            },
            p[ItemType.REIDITE_ARROW] = {
                r: [[ItemType.REIDITE, 10], [ItemType.VULTURE_FEATHER, 1], [ItemType.FLAME, 1]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 15,
                t: CATEGORY.WEAPONS
            },
            p[ItemType.DRAGON_ARROW] = {
                r: [[ItemType.EMERALD, 10], [ItemType.SANDWORM_JUICE, 1]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 20,
                t: CATEGORY.WEAPONS
            },
            p[ItemType.WOOD_SHIELD] = {
                r: [[ItemType.WOOD, 100]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 25,
                t: CATEGORY.WEAPONS
            },
            p[ItemType.STONE_SHIELD] = {
                r: [[ItemType.WOOD_SHIELD, 1], [ItemType.STONE, 100], [ItemType.WOOD, 50]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 40,
                t: CATEGORY.WEAPONS
            },
            p[ItemType.GOLD_SHIELD] = {
                r: [[ItemType.STONE_SHIELD, 1], [ItemType.GOLD, 50], [ItemType.STONE, 50], [ItemType.WOOD, 50]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 50,
                t: CATEGORY.WEAPONS
            },
            p[ItemType.DIAMOND_SHIELD] = {
                r: [[ItemType.GOLD_SHIELD, 1], [ItemType.DIAMOND, 50], [ItemType.GOLD, 50], [ItemType.STONE, 50]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 70,
                t: CATEGORY.WEAPONS
            },
            p[ItemType.AMETHYST_SHIELD] = {
                r: [[ItemType.DIAMOND_SHIELD, 1], [ItemType.AMETHYST, 50], [ItemType.DIAMOND, 50], [ItemType.GOLD, 50]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 90,
                t: CATEGORY.WEAPONS
            },
            p[ItemType.REIDITE_SHIELD] = {
                r: [[ItemType.AMETHYST_SHIELD, 1], [ItemType.REIDITE, 50], [ItemType.AMETHYST, 50], [ItemType.DIAMOND, 50]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 120,
                t: CATEGORY.WEAPONS
            },
            p[ItemType.WOOD_PICK] = {
                r: [[ItemType.WOOD, 10]],
                f: 0,
                e: 0,
                w: 0,
                o: 0,
                time: 3,
                t: CATEGORY.TOOLS
            },
            p[ItemType.STONE_PICK] = {
                r: [[ItemType.WOOD_PICK, 1], [ItemType.WOOD, 50], [ItemType.STONE, 15]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 8,
                t: CATEGORY.TOOLS
            },
            p[ItemType.GOLD_PICK] = {
                r: [[ItemType.WOOD, 40], [ItemType.GOLD, 20], [ItemType.STONE, 30], [ItemType.STONE_PICK, 1]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 12,
                t: CATEGORY.TOOLS
            },
            p[ItemType.DIAMOND_PICK] = {
                r: [[ItemType.DIAMOND, 20], [ItemType.GOLD, 50], [ItemType.STONE, 80], [ItemType.GOLD_PICK, 1]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 20,
                t: CATEGORY.TOOLS
            },
            p[ItemType.AMETHYST_PICK] = {
                r: [[ItemType.DIAMOND, 40], [ItemType.GOLD, 60], [ItemType.AMETHYST, 30], [ItemType.DIAMOND_PICK, 1]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 60,
                t: CATEGORY.TOOLS
            },
            p[ItemType.REIDITE_PICK] = {
                r: [[ItemType.AMETHYST, 30], [ItemType.DIAMOND, 40], [ItemType.REIDITE, 30], [ItemType.AMETHYST_PICK, 1]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 90,
                t: CATEGORY.TOOLS
            },
            p[ItemType.STONE_SHOVEL] = {
                r: [[ItemType.WOOD, 30], [ItemType.STONE, 15]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 5,
                t: CATEGORY.TOOLS
            },
            p[ItemType.GOLD_SHOVEL] = {
                r: [[ItemType.STONE_SHOVEL, 1], [ItemType.GOLD, 20], [ItemType.STONE, 30], [ItemType.WOOD, 40]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 10,
                t: CATEGORY.TOOLS
            },
            p[ItemType.DIAMOND_SHOVEL] = {
                r: [[ItemType.GOLD_SHOVEL, 1], [ItemType.DIAMOND, 20], [ItemType.GOLD, 50], [ItemType.STONE, 80]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 20,
                t: CATEGORY.TOOLS
            },
            p[ItemType.AMETHYST_SHOVEL] = {
                r: [[ItemType.DIAMOND_SHOVEL, 1], [ItemType.GOLD, 60], [ItemType.AMETHYST, 30], [ItemType.DIAMOND, 40]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 40,
                t: CATEGORY.TOOLS
            },
            p[ItemType.REIDITE_SHOVEL] = {
                r: [[ItemType.AMETHYST_SHOVEL, 1], [ItemType.DIAMOND, 60], [ItemType.REIDITE, 30], [ItemType.AMETHYST, 40]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 40,
                t: CATEGORY.TOOLS
            },
            p[ItemType.WOOD_HELMET] = {
                r: [[ItemType.WOOD, 50]],
                f: 0,
                e: 0,
                w: 0,
                o: 0,
                time: 5,
                t: CATEGORY.CLOTHES
            },
            p[ItemType.STONE_HELMET] = {
                r: [[ItemType.STONE, 75], [ItemType.WOOD, 75], [ItemType.WOOD_HELMET, 1]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 10,
                t: CATEGORY.CLOTHES
            },
            p[ItemType.GOLD_HELMET] = {
                r: [[ItemType.STONE, 90], [ItemType.WOOD, 90], [ItemType.GOLD, 90], [ItemType.STONE_HELMET, 1]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 20,
                t: CATEGORY.CLOTHES
            },
            p[ItemType.DIAMOND_HELMET] = {
                r: [[ItemType.STONE, 100], [ItemType.GOLD, 100], [ItemType.DIAMOND, 100], [ItemType.GOLD_HELMET, 1]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 30,
                t: CATEGORY.CLOTHES
            },
            p[ItemType.AMETHYST_HELMET] = {
                r: [[ItemType.AMETHYST, 80], [ItemType.GOLD, 150], [ItemType.DIAMOND, 120], [ItemType.DIAMOND_HELMET, 1]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 60,
                t: CATEGORY.CLOTHES
            },
            p[ItemType.REIDITE_HELMET] = {
                r: [[ItemType.REIDITE, 80], [ItemType.DIAMOND, 150], [ItemType.AMETHYST, 120], [ItemType.AMETHYST_HELMET, 1]],
                f: 1,
                e: 0,
                w: 1,
                o: 0,
                time: 90,
                t: CATEGORY.CLOTHES
            },
            p[ItemType.DRAGON_HELMET] = {
                r: [[ItemType.DIAMOND_CORD, 30], [ItemType.DRAGON_CUBE, 1], [ItemType.AMETHYST, 150], [ItemType.DRAGON_HEART, 3]],
                f: 1,
                e: 0,
                w: 1,
                o: 1,
                time: 120,
                t: CATEGORY.CLOTHES
            },
            p[ItemType.LAVA_HELMET] = {
                r: [[ItemType.DRAGON_HELMET, 1], [ItemType.LAVA_CUBE, 1], [ItemType.REIDITE, 150], [ItemType.LAVA_HEART, 2]],
                f: 1,
                e: 0,
                w: 1,
                o: 1,
                time: 180,
                t: CATEGORY.CLOTHES
            },
            p[ItemType.CRAB_HELMET] = {
                r: [[ItemType.GOLD_HELMET, 1], [ItemType.CRAB_LOOT, 10], [ItemType.CRAB_STICK, 10], [ItemType.CORD, 10]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 60,
                t: CATEGORY.CLOTHES
            },
            p[ItemType.DIAMOND_PROTECTION] = {
                r: [[ItemType.FLAME, 5], [ItemType.DIAMOND, 50], [ItemType.DIAMOND_CORD, 5]],
                f: 1,
                e: 0,
                w: 1,
                o: 0,
                time: 20,
                t: CATEGORY.CLOTHES
            },
            p[ItemType.AMETHYST_PROTECTION] = {
                r: [[ItemType.DIAMOND_PROTECTION, 1], [ItemType.FLAME, 10], [ItemType.AMETHYST, 50]],
                f: 1,
                e: 0,
                w: 1,
                o: 0,
                time: 60,
                t: CATEGORY.CLOTHES
            },
            p[ItemType.REIDITE_PROTECTION] = {
                r: [[ItemType.AMETHYST_PROTECTION, 1], [ItemType.FLAME, 15], [ItemType.AMETHYST, 50], [ItemType.REIDITE, 50]],
                f: 1,
                e: 0,
                w: 1,
                o: 0,
                time: 90,
                t: CATEGORY.CLOTHES
            },
            p[ItemType.SUPER_DIVING_SUIT] = {
                r: [[ItemType.DIVING_MASK, 1], [ItemType.GOLD, 80], [ItemType.KRAKEN_FUR, 1], [ItemType.AMETHYST, 20]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 90,
                t: CATEGORY.CLOTHES
            },
            p[ItemType.DIVING_MASK] = {
                r: [[ItemType.PIRANHA_SCALES, 2], [ItemType.DIAMOND, 40], [ItemType.CORD, 4]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 20,
                t: CATEGORY.CLOTHES
            },
            p[ItemType.STONE_HAMMER] = {
                r: [[ItemType.WOOD, 90], [ItemType.STONE, 50]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 10,
                t: CATEGORY.TOOLS
            },
            p[ItemType.GOLD_HAMMER] = {
                r: [[ItemType.WOOD, 160], [ItemType.STONE, 120], [ItemType.GOLD, 80], [ItemType.STONE_HAMMER, 1]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 15,
                t: CATEGORY.TOOLS
            },
            p[ItemType.DIAMOND_HAMMER] = {
                r: [[ItemType.DIAMOND, 80], [ItemType.STONE, 200], [ItemType.GOLD, 150], [ItemType.GOLD_HAMMER, 1]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 20,
                t: CATEGORY.TOOLS
            },
            p[ItemType.AMETHYST_HAMMER] = {
                r: [[ItemType.DIAMOND, 160], [ItemType.AMETHYST, 60], [ItemType.GOLD, 250], [ItemType.DIAMOND_HAMMER, 1]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 60,
                t: CATEGORY.TOOLS
            },
            p[ItemType.REIDITE_HAMMER] = {
                r: [[ItemType.AMETHYST, 160], [ItemType.REIDITE, 60], [ItemType.DIAMOND, 250], [ItemType.AMETHYST_HAMMER, 1]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 90,
                t: CATEGORY.TOOLS
            },
            p[ItemType.SUPER_HAMMER] = {
                r: [[ItemType.REIDITE_HAMMER, 1], [ItemType.BOTTLE_FULL, 1], [ItemType.KRAKEN_FUR, 1], [ItemType.PIRANHA_SCALES, 10], [ItemType.AMETHYST, 20]],
                f: 1,
                e: 0,
                w: 1,
                o: 0,
                time: 120,
                t: CATEGORY.TOOLS
            },
            p[ItemType.CROWN_GREEN] = {
                r: [[ItemType.GEM_GREEN, 1], [ItemType.GOLD, 200]],
                f: 1,
                e: 0,
                w: 1,
                o: 1,
                time: 60,
                t: CATEGORY.CLOTHES
            },
            p[ItemType.CROWN_ORANGE] = {
                r: [[ItemType.GEM_ORANGE, 1], [ItemType.GOLD, 200]],
                f: 1,
                e: 0,
                w: 1,
                o: 1,
                time: 60,
                t: CATEGORY.CLOTHES
            },
            p[ItemType.CROWN_BLUE] = {
                r: [[ItemType.GEM_BLUE, 1], [ItemType.GOLD, 200], [ItemType.DRAGON_HEART, 1]],
                f: 1,
                e: 0,
                w: 1,
                o: 1,
                time: 60,
                t: CATEGORY.CLOTHES
            },
            p[ItemType.FIRE] = {
                r: [[ItemType.WOOD, 25], [ItemType.STONE, 5]],
                f: 0,
                e: 0,
                w: 0,
                o: 0,
                time: 5,
                t: CATEGORY.UTILS
            },
            p[ItemType.BIG_FIRE] = {
                r: [[ItemType.FIRE, 1], [ItemType.WOOD, 35], [ItemType.STONE, 10]],
                f: 0,
                e: 0,
                w: 0,
                o: 0,
                time: 5,
                t: CATEGORY.UTILS
            },
            p[ItemType.FURNACE] = {
                r: [[ItemType.WOOD, 150], [ItemType.STONE, 50], [ItemType.GOLD, 15]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 20,
                t: CATEGORY.UTILS
            },
            p[ItemType.WORKBENCH] = {
                r: [[ItemType.WOOD, 20], [ItemType.STONE, 10]],
                f: 0,
                e: 0,
                w: 0,
                o: 0,
                time: 6,
                t: CATEGORY.UTILS
            },
            p[ItemType.PAPER] = {
                r: [[ItemType.WOOD, 20]],
                f: 1,
                e: 0,
                w: 0,
                o: 0,
                time: 3,
                t: CATEGORY.UTILS
            },
            p[ItemType.STONE_EXTRACTOR] = {
                r: [[ItemType.WOOD, 50], [ItemType.STONE, 100]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 90,
                t: CATEGORY.UTILS
            },
            p[ItemType.GOLD_EXTRACTOR] = {
                r: [[ItemType.STONE, 60], [ItemType.GOLD, 120]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 90,
                t: CATEGORY.UTILS
            },
            p[ItemType.DIAMOND_EXTRACTOR] = {
                r: [[ItemType.GOLD, 70], [ItemType.DIAMOND, 140]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 90,
                t: CATEGORY.UTILS
            },
            p[ItemType.AMETHYST_EXTRACTOR] = {
                r: [[ItemType.DIAMOND, 80], [ItemType.AMETHYST, 160]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 90,
                t: CATEGORY.UTILS
            },
            p[ItemType.REIDITE_EXTRACTOR] = {
                r: [[ItemType.AMETHYST, 90], [ItemType.REIDITE, 180]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 90,
                t: CATEGORY.UTILS
            },
            p[ItemType.EARMUFFS] = {
                r: [[ItemType.RABBIT_FUR, 1], [ItemType.CORD, 2]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 5,
                t: CATEGORY.CLOTHES
            },
            p[ItemType.COAT] = {
                r: [[ItemType.EARMUFFS, 1], [ItemType.WOLF_FUR, 5], [ItemType.CORD, 4]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 12,
                t: CATEGORY.CLOTHES
            },
            p[ItemType.CAP_SCARF] = {
                r: [[ItemType.COAT, 1], [ItemType.WINTER_FUR, 5], [ItemType.DIAMOND_CORD, 4]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 30,
                t: CATEGORY.CLOTHES
            },
            p[ItemType.FUR_HAT] = {
                r: [[ItemType.CAP_SCARF, 1], [ItemType.WINTER_FUR, 5], [ItemType.MAMMOTH_FUR, 10], [ItemType.DIAMOND_CORD, 4]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 50,
                t: CATEGORY.CLOTHES
            },
            p[ItemType.HOOD] = {
                r: [[ItemType.WOLF_FUR, 10], [ItemType.RABBIT_FUR, 5], [ItemType.CORD, 6]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 10,
                t: CATEGORY.CLOTHES
            },
            p[ItemType.PEASANT] = {
                r: [[ItemType.RABBIT_FUR, 3], [ItemType.CORD, 2]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 10,
                t: CATEGORY.CLOTHES
            },
            p[ItemType.WINTER_HOOD] = {
                r: [[ItemType.HOOD, 1], [ItemType.WINTER_HOOD_FUR, 1], [ItemType.WINTER_FUR, 15], [ItemType.DIAMOND_CORD, 5], [ItemType.PENGUIN_FEATHER, 8]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 60,
                t: CATEGORY.CLOTHES
            },
            p[ItemType.WINTER_PEASANT] = {
                r: [[ItemType.PEASANT, 1], [ItemType.WINTER_PEASANT_FUR, 1], [ItemType.WINTER_FUR, 10], [ItemType.DIAMOND_CORD, 5], [ItemType.PENGUIN_FEATHER, 8]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 60,
                t: CATEGORY.CLOTHES
            },
            p[ItemType.PILOT_HAT] = {
                r: [[ItemType.PILOT_GLASSES, 1], [ItemType.HAWK_FEATHER, 8], [ItemType.VULTURE_FEATHER, 8], [ItemType.PENGUIN_FEATHER, 8], [ItemType.CORD, 6]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 60,
                t: CATEGORY.CLOTHES
            },
            p[ItemType.TURBAN1] = {
                r: [[ItemType.CORD, 4], [ItemType.BOAR_FUR, 2]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 15,
                t: CATEGORY.CLOTHES
            },
            p[ItemType.TURBAN2] = {
                r: [[ItemType.TURBAN1, 1], [ItemType.CORD, 6], [ItemType.BOAR_FUR, 4], [ItemType.VULTURE_FEATHER, 12], [ItemType.PENGUIN_FEATHER, 4]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 150,
                t: CATEGORY.CLOTHES
            },
            p[ItemType.BOOK] = {
                r: [[ItemType.PAPER, 4], [ItemType.CORD, 4], [ItemType.WOLF_FUR, 4]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 15,
                t: CATEGORY.TOOLS
            },
            p[ItemType.BAG] = {
                r: [[ItemType.CORD, 6], [ItemType.WOLF_FUR, 5]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 15,
                t: CATEGORY.CLOTHES
            },
            p[ItemType.EXPLORER_HAT] = {
                r: [[ItemType.PAPER, 1], [ItemType.RABBIT_FUR, 1], [ItemType.CORD, 2]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 5,
                t: CATEGORY.CLOTHES
            },
            p[ItemType.PIRATE_HAT] = {
                r: [[ItemType.PAPER, 5], [ItemType.PENGUIN_FEATHER, 20], [ItemType.DIAMOND_CORD, 5], [ItemType.RABBIT_FUR, 5]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 30,
                t: CATEGORY.CLOTHES
            },
            p[ItemType.PITCHFORK] = {
                r: [[ItemType.WOOD, 100], [ItemType.STONE, 50]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 10,
                t: CATEGORY.TOOLS
            },
            p[ItemType.GOLD_PITCHFORK] = {
                r: [[ItemType.PITCHFORK, 1], [ItemType.PITCHFORK_PART, 1]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 60,
                t: CATEGORY.TOOLS
            },
            p[ItemType.YUSUKEDAO_ITEM1] = {
                r: [[ItemType.STONE_SWORD, 100]],
                f: 0,
                e: 0,
                w: 0,
                o: 0,
                time: 60,
                t: CATEGORY.WEAPONS
            },
            p[ItemType.YUSUKEDAO_ITEM2] = {
                r: [[ItemType.STONE_SWORD, 200]],
                f: 0,
                e: 0,
                w: 0,
                o: 0,
                time: 60,
                t: CATEGORY.TOOLS
            },
            p[ItemType.WRENCH] = {
                r: [[ItemType.STONE, 70]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 10,
                t: CATEGORY.TOOLS
            },
            p[ItemType.GOLD_WRENCH] = {
                r: [[ItemType.FLOWER_HAT, 1]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 10,
                t: CATEGORY.TOOLS
            },
            p[ItemType.MACHETE] = {
                r: [[ItemType.STONE, 70], [ItemType.WOOD, 50]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 10,
                t: CATEGORY.TOOLS
            },
            p[ItemType.WATERING_CAN_EMPTY] = {
                r: [[ItemType.WOOD, 40]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 8,
                t: CATEGORY.TOOLS
            },
            p[ItemType.WATERING_CAN_FULL] = {
                r: [[ItemType.WATERING_CAN_EMPTY, 1]],
                f: 0,
                e: 0,
                w: 0,
                o: 1,
                time: 5,
                t: CATEGORY.TOOLS
            },
            p[ItemType.BRIDGE] = {
                r: [[ItemType.WOOD, 15]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 5,
                t: CATEGORY.UTILS
            },
            p[ItemType.TOWER] = {
                r: [[ItemType.WOOD, 120]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 15,
                t: CATEGORY.UTILS
            },
            p[ItemType.SADDLE] = {
                r: [[ItemType.CORD, 10], [ItemType.WOLF_FUR, 6], [ItemType.RABBIT_FUR, 4], [ItemType.SAND, 50]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 20,
                t: CATEGORY.UTILS
            },
            p[ItemType.WINDMILL] = {
                r: [[ItemType.WOOD, 60], [ItemType.STONE, 20], [ItemType.CORD, 2]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 10,
                t: CATEGORY.UTILS
            },
            p[ItemType.PLOT] = {
                r: [[ItemType.WOOD, 20], [ItemType.GROUND, 15]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 5,
                t: CATEGORY.UTILS
            },
            p[ItemType.BREAD_OVEN] = {
                r: [[ItemType.WOOD, 40], [ItemType.STONE, 40]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 10,
                t: CATEGORY.UTILS
            },
            p[ItemType.DIAMOND_CORD] = {
                r: [[ItemType.DIAMOND, 1], [ItemType.CORD, 1]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 3,
                t: CATEGORY.UTILS
            },
            p[ItemType.RESURRECTION] = {
                r: [[ItemType.DIAMOND, 40], [ItemType.STONE, 45]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 20,
                t: CATEGORY.UTILS
            },
            p[ItemType.EMERALD_MACHINE] = {
                r: [[ItemType.RESURRECTION, 1], [ItemType.EMERALD, 40], [ItemType.SANDWORM_JUICE, 1]],
                f: 1,
                e: 0,
                w: 1,
                o: 1,
                time: 200,
                t: CATEGORY.UTILS
            },
            p[ItemType.LOCK_PICK] = {
                r: [[ItemType.GOLD, 250]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 60,
                t: CATEGORY.UTILS
            },
            p[ItemType.LOCK] = {
                r: [[ItemType.GOLD, 10]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 5,
                t: CATEGORY.UTILS
            },
            p[ItemType.TOTEM] = {
                r: [[ItemType.WOOD, 50]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 10,
                t: CATEGORY.UTILS
            },
            p[ItemType.CHEST] = {
                r: [[ItemType.WOOD, 25], [ItemType.GOLD, 2]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 5,
                t: CATEGORY.UTILS
            },
            p[ItemType.WELL] = {
                r: [[ItemType.STONE, 100], [ItemType.GROUND, 30]],
                f: 1,
                e: 0,
                w: 1,
                o: 0,
                time: 10,
                t: CATEGORY.UTILS
            },
            p[ItemType.BANDAGE] = {
                r: [[ItemType.CORD, 2]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 5,
                t: CATEGORY.UTILS
            },
            p[ItemType.ROOF] = {
                r: [[ItemType.WOOD, 30]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 5,
                t: CATEGORY.UTILS
            },
            p[ItemType.BED] = {
                r: [[ItemType.WOOD, 100], [ItemType.STONE, 50], [ItemType.RABBIT_FUR, 5], [ItemType.WOLF_FUR, 5], [ItemType.CORD, 6]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 20,
                t: CATEGORY.UTILS
            },
            p[ItemType.BOAT] = {
                r: [[ItemType.WOOD, 250], [ItemType.DIAMOND_CORD, 10], [ItemType.WINTER_FUR, 2], [ItemType.PIRANHA_SCALES, 2]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 50,
                t: CATEGORY.UTILS
            },
            p[ItemType.SLED] = {
                r: [[ItemType.WOOD, 250], [ItemType.CORD, 10], [ItemType.WINTER_FUR, 2], [ItemType.PENGUIN_FEATHER, 8]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 50,
                t: CATEGORY.UTILS
            },
            p[ItemType.PLANE] = {
                r: [[ItemType.WOOD, 250], [ItemType.CORD, 10], [ItemType.PAPER, 10], [ItemType.HAWK_FEATHER, 8]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 50,
                t: CATEGORY.UTILS
            },
            p[ItemType.BERRY_SEED] = {
                r: [[ItemType.BERRY, 3]],
                f: 1,
                e: 0,
                w: 0,
                o: 0,
                time: 5,
                t: CATEGORY.FOODS
            },
            p[ItemType.WHEAT_SEED] = {
                r: [[ItemType.WHEAT, 3]],
                f: 1,
                e: 0,
                w: 0,
                o: 0,
                time: 5,
                t: CATEGORY.FOODS
            },
            p[ItemType.PUMPKIN_SEED] = {
                r: [[ItemType.PUMPKIN, 8]],
                f: 1,
                e: 0,
                w: 0,
                o: 0,
                time: 5,
                t: CATEGORY.FOODS
            },
            p[ItemType.CARROT_SEED] = {
                r: [[ItemType.CARROT, 8]],
                f: 1,
                e: 0,
                w: 0,
                o: 0,
                time: 5,
                t: CATEGORY.FOODS
            },
            p[ItemType.TOMATO_SEED] = {
                r: [[ItemType.TOMATO, 8]],
                f: 1,
                e: 0,
                w: 0,
                o: 0,
                time: 5,
                t: CATEGORY.FOODS
            },
            p[ItemType.THORNBUSH_SEED] = {
                r: [[ItemType.THORNBUSH, 8]],
                f: 1,
                e: 0,
                w: 0,
                o: 0,
                time: 5,
                t: CATEGORY.FOODS
            },
            p[ItemType.GARLIC_SEED] = {
                r: [[ItemType.GARLIC, 8]],
                f: 1,
                e: 0,
                w: 0,
                o: 0,
                time: 5,
                t: CATEGORY.FOODS
            },
            p[ItemType.WATERMELON_SEED] = {
                r: [[ItemType.WATERMELON, 16]],
                f: 1,
                e: 0,
                w: 0,
                o: 0,
                time: 5,
                t: CATEGORY.FOODS
            },
            p[ItemType.ALOE_VERA_SEED] = {
                r: [[ItemType.ALOE_VERA, 16]],
                f: 1,
                e: 0,
                w: 0,
                o: 0,
                time: 5,
                t: CATEGORY.FOODS
            },
            p[ItemType.BREAD] = {
                r: [[ItemType.FLOUR, 3]],
                f: 1,
                e: 0,
                w: 0,
                o: 0,
                time: 3,
                t: CATEGORY.FOODS
            },
            p[ItemType.SANDWICH] = {
                r: [[ItemType.BREAD, 1], [ItemType.COOKED_MEAT, 1]],
                f: 0,
                e: 0,
                w: 0,
                o: 0,
                time: 3,
                t: CATEGORY.FOODS
            },
            p[ItemType.BOTTLE_FULL] = {
                r: [[ItemType.BOTTLE_EMPTY, 1]],
                f: 0,
                e: 1,
                w: 0,
                o: 0,
                time: 3,
                t: CATEGORY.FOODS
            },
            p[ItemType.BOTTLE_FULL_2] = {
                r: [[ItemType.BOTTLE_EMPTY, 1], [ItemType.ICE, 20]],
                f: 1,
                e: 0,
                w: 0,
                o: 0,
                time: 3,
                t: CATEGORY.FOODS
            },
            p[ItemType.BOTTLE_FULL_3] = {
                r: [[ItemType.BOTTLE_EMPTY, 1]],
                f: 0,
                e: 0,
                w: 0,
                o: 1,
                time: 3,
                t: CATEGORY.FOODS
            },
            p[ItemType.BOTTLE_EMPTY] = {
                r: [[ItemType.SAND, 25]],
                f: 1,
                e: 0,
                w: 1,
                o: 0,
                time: 5,
                t: CATEGORY.FOODS
            },
            p[ItemType.COOKIE] = {
                r: [[ItemType.FLOUR, 3], [ItemType.BERRY, 1]],
                f: 1,
                e: 0,
                w: 0,
                o: 0,
                time: 3,
                t: CATEGORY.FOODS
            },
            p[ItemType.CAKE] = {
                r: [[ItemType.FLOUR, 5], [ItemType.BERRY, 2], [ItemType.ICE, 2]],
                f: 1,
                e: 0,
                w: 0,
                o: 0,
                time: 5,
                t: CATEGORY.FOODS
            },
            p[ItemType.FISH_COOKED] = {
                r: [[ItemType.FISH, 1]],
                f: 1,
                e: 0,
                w: 0,
                o: 0,
                time: 3,
                t: CATEGORY.FOODS
            },
            p[ItemType.COOKED_MEAT] = {
                r: [[ItemType.MEAT, 1]],
                f: 1,
                e: 0,
                w: 0,
                o: 0,
                time: 5,
                t: CATEGORY.FOODS
            },
            p[ItemType.BUCKET_FULL] = {
                r: [[ItemType.BUCKET_EMPTY, 1]],
                f: 0,
                e: 0,
                w: 0,
                o: 1,
                time: 5,
                t: CATEGORY.TOOLS
            },
            p[ItemType.BUCKET_EMPTY] = {
                r: [[ItemType.WOOD, 20], [ItemType.CORD, 1]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 5,
                t: CATEGORY.TOOLS
            },
            p[ItemType.WOOD_WALL] = {
                r: [[ItemType.WOOD, 20]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 5,
                t: CATEGORY.BASES
            },
            p[ItemType.STONE_WALL] = {
                r: [[ItemType.WOOD_WALL, 1], [ItemType.STONE, 17]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 5,
                t: CATEGORY.BASES
            },
            p[ItemType.GOLD_WALL] = {
                r: [[ItemType.STONE_WALL, 1], [ItemType.GOLD, 14]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 5,
                t: CATEGORY.BASES
            },
            p[ItemType.DIAMOND_WALL] = {
                r: [[ItemType.GOLD_WALL, 1], [ItemType.DIAMOND, 11]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 5,
                t: CATEGORY.BASES
            },
            p[ItemType.AMETHYST_WALL] = {
                r: [[ItemType.DIAMOND_WALL, 1], [ItemType.AMETHYST, 8]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 5,
                t: CATEGORY.BASES
            },
            p[ItemType.REIDITE_WALL] = {
                r: [[ItemType.AMETHYST_WALL, 1], [ItemType.REIDITE, 5]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 5,
                t: CATEGORY.BASES
            },
            p[ItemType.WOOD_SPIKE] = {
                r: [[ItemType.WOOD_WALL, 1], [ItemType.WOOD, 40], [ItemType.STONE, 30]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 20,
                t: CATEGORY.BASES
            },
            p[ItemType.STONE_SPIKE] = {
                r: [[ItemType.STONE_WALL, 1], [ItemType.STONE, 70]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 20,
                t: CATEGORY.BASES
            },
            p[ItemType.GOLD_SPIKE] = {
                r: [[ItemType.GOLD_WALL, 1], [ItemType.GOLD, 40], [ItemType.STONE, 30]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 20,
                t: CATEGORY.BASES
            },
            p[ItemType.DIAMOND_SPIKE] = {
                r: [[ItemType.DIAMOND_WALL, 1], [ItemType.DIAMOND, 40], [ItemType.STONE, 30]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 20,
                t: CATEGORY.BASES
            },
            p[ItemType.AMETHYST_SPIKE] = {
                r: [[ItemType.AMETHYST_WALL, 1], [ItemType.AMETHYST, 40], [ItemType.STONE, 30]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 20,
                t: CATEGORY.BASES
            },
            p[ItemType.REIDITE_SPIKE] = {
                r: [[ItemType.REIDITE_WALL, 1], [ItemType.REIDITE, 40], [ItemType.GOLD, 30]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 20,
                t: CATEGORY.BASES
            },
            p[ItemType.WOOD_DOOR] = {
                r: [[ItemType.WOOD, 30]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 8,
                t: CATEGORY.BASES
            },
            p[ItemType.STONE_DOOR] = {
                r: [[ItemType.WOOD_DOOR, 1], [ItemType.STONE, 27]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 8,
                t: CATEGORY.BASES
            },
            p[ItemType.GOLD_DOOR] = {
                r: [[ItemType.STONE_DOOR, 1], [ItemType.GOLD, 24]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 8,
                t: CATEGORY.BASES
            },
            p[ItemType.DIAMOND_DOOR] = {
                r: [[ItemType.GOLD_DOOR, 1], [ItemType.DIAMOND, 21]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 8,
                t: CATEGORY.BASES
            },
            p[ItemType.AMETHYST_DOOR] = {
                r: [[ItemType.DIAMOND_DOOR, 1], [ItemType.AMETHYST, 18]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 8,
                t: CATEGORY.BASES
            },
            p[ItemType.REIDITE_DOOR] = {
                r: [[ItemType.AMETHYST_DOOR, 1], [ItemType.REIDITE, 15]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 8,
                t: CATEGORY.BASES
            },
            p[ItemType.WOOD_DOOR_SPIKE] = {
                r: [[ItemType.WOOD_DOOR, 1], [ItemType.WOOD, 80], [ItemType.STONE, 60]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 20,
                t: CATEGORY.BASES
            },
            p[ItemType.STONE_DOOR_SPIKE] = {
                r: [[ItemType.STONE_DOOR, 1], [ItemType.STONE, 140]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 20,
                t: CATEGORY.BASES
            },
            p[ItemType.GOLD_DOOR_SPIKE] = {
                r: [[ItemType.GOLD_DOOR, 1], [ItemType.GOLD, 80], [ItemType.STONE, 60]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 20,
                t: CATEGORY.BASES
            },
            p[ItemType.DIAMOND_DOOR_SPIKE] = {
                r: [[ItemType.DIAMOND_DOOR, 1], [ItemType.DIAMOND, 80], [ItemType.STONE, 60]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 20,
                t: CATEGORY.BASES
            },
            p[ItemType.AMETHYST_DOOR_SPIKE] = {
                r: [[ItemType.AMETHYST_DOOR, 1], [ItemType.AMETHYST, 80], [ItemType.STONE, 60]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 20,
                t: CATEGORY.BASES
            },
            p[ItemType.REIDITE_DOOR_SPIKE] = {
                r: [[ItemType.REIDITE_DOOR, 1], [ItemType.REIDITE, 80], [ItemType.GOLD, 60]],
                f: 0,
                e: 0,
                w: 1,
                o: 0,
                time: 20,
                t: CATEGORY.BASES
            };
            let P = {
                LOGO: "logo",
                BIGDAY: "mapday",
                BIGNIGHT: "mapnight",
                BIGZDAY: "bigzday",
                BIGZNIGHT: "bigznight",
                MAPDAY_RIVER: "bigday-river1",
                MAPDAY_BERRY: "bigday-berry",
                MAPDAY_STONE1: "bigday-stone1",
                MAPDAY_STONE2: "bigday-stone2",
                MAPDAY_GOLD1: "bigday-gold1",
                MAPDAY_GOLD2: "bigday-gold2",
                MAPDAY_EMERALD1: "bigday-emerald1",
                MAPDAY_EMERALD2: "bigday-emerald2",
                MAPDAY_AMETHYST: "bigday-amethyst",
                MAPDAY_BEAR: "bigday-bear",
                MAPDAY_CAVE: "bigday-cave",
                MAPDAY_DIAMOND: "bigday-diamond",
                MAPDAY_ISLAND: "bigday-island",
                MAPDAY_REIDITE: "bigday-reidite",
                MAPDAY_SPIDER: "bigday-spider",
                MAPDAY_WOLF: "bigday-wolf",
                MAPDAY_FIR_TREE: "bigday-fir-tree",
                MAPDAY_FOX: "bigday-fox",
                MAPDAY_KRAKEN: "bigday-kraken",
                MAPDAY_PIRANHA: "bigday-piranha",
                MAPDAY_CACTUS: "bigday-cactus",
                MAPDAY_MAGMA: "bigday-magma",
                MAPNIGHT_RIVER: "bigday-river1",
                MAPNIGHT_BERRY: "bignight-berry",
                MAPNIGHT_STONE1: "bignight-stone1",
                MAPNIGHT_STONE2: "bignight-stone2",
                MAPNIGHT_GOLD1: "bignight-gold1",
                MAPNIGHT_GOLD2: "bignight-gold2",
                MAPNIGHT_EMERALD1: "bignight-emerald1",
                MAPNIGHT_EMERALD2: "bignight-emerald2",
                MAPNIGHT_AMETHYST: "bignight-amethyst",
                MAPNIGHT_BEAR: "bignight-bear",
                MAPNIGHT_CAVE: "bignight-cave",
                MAPNIGHT_DIAMOND: "bignight-diamond",
                MAPNIGHT_ISLAND: "bignight-island",
                MAPNIGHT_REIDITE: "bignight-reidite",
                MAPNIGHT_SPIDER: "bignight-spider",
                MAPNIGHT_WOLF: "bignight-wolf",
                MAPNIGHT_FIR_TREE: "bignight-fir-tree",
                MAPNIGHT_FOX: "bignight-fox",
                MAPNIGHT_KRAKEN: "bignight-kraken",
                MAPNIGHT_PIRANHA: "bignight-piranha",
                MAPNIGHT_CACTUS: "bignight-cactus",
                MAPNIGHT_MAGMA: "bignight-magma",
                MAPDAY_DESERT: "bigday-desert",
                MAPDAY_WINTER: "bigday-winter",
                MAPDAY_LAVA: "bigday-lava",
                MAPDAY_FOREST: "bigday-forest",
                MAPNIGHT_DESERT: "bignight-desert",
                MAPNIGHT_WINTER: "bignight-winter",
                MAPNIGHT_LAVA: "bignight-lava",
                MAPNIGHT_FOREST: "bignight-forest",
                RIVER_WAVED: "day-river-wave",
                RIVER_WAVEN: "night-river-wave",
                FOG0D: "day-fog0",
                FOG1D: "day-fog1",
                FOG2D: "day-fog2",
                FOG0N: "night-fog0",
                FOG1N: "night-fog1",
                FOG2N: "night-fog2",
                FOD0D: "day-fogdesert0",
                FOD1D: "day-fogdesert1",
                FOD2D: "day-fogdesert2",
                FOD0N: "night-fogdesert0",
                FOD1N: "night-fogdesert1",
                FOD2N: "night-fogdesert2",
                MARKER0D: "day-cross-server",
                MARKER1D: "day-here-server",
                MARKER2D: "day-finish-server",
                MARKER3D: "day-item-server",
                MARKER0N: "night-cross-server",
                MARKER1N: "night-here-server",
                MARKER2N: "night-finish-server",
                MARKER3N: "night-item-server",
                REIDITE0D: "day-reidite0",
                REIDITE0N: "night-reidite0",
                REIDITE1D: "day-reidite1",
                REIDITE1N: "night-reidite1",
                REIDITE2D: "day-reidite2",
                REIDITE2N: "night-reidite2",
                MAGMA1D: "day-lava1",
                MAGMA1N: "night-lava1",
                MAGMA2D: "day-lava2",
                MAGMA2N: "night-lava2",
                MAGMA3D: "day-lava3",
                MAGMA3N: "night-lava3",
                MAGMA4D: "day-lava4",
                MAGMA4N: "night-lava4",
                MAGMA5D: "day-lava5",
                MAGMA5N: "night-lava5",
                MAGMA6D: "day-lava6",
                MAGMA6N: "night-lava6",
                LAVA_GROUND1D: "day-lava-ground1",
                LAVA_GROUND1N: "night-lava-ground1",
                LAVA_GROUND2D: "day-lava-ground2",
                LAVA_GROUND2N: "night-lava-ground2",
                LAVA_GROUND3D: "day-lava-ground3",
                LAVA_GROUND3N: "night-lava-ground3",
                LAVA_GROUND4D: "day-lava-ground4",
                LAVA_GROUND4N: "night-lava-ground4",
                LAVA_GROUND5D: "day-lava-ground5",
                LAVA_GROUND5N: "night-lava-ground5",
                LAVA_GROUND6D: "day-lava-ground6",
                LAVA_GROUND6N: "night-lava-ground6",
                FIRE_MOBD: "day-fire-mob",
                FIRE_MOBN: "night-fire-mob",
                FIRE_MOB_HURT: "hurt-fire-mob",
                DIAMOND_PROTECTIOND: "day-diamond-protection",
                DIAMOND_PROTECTIONN: "night-diamond-protection",
                HAND_DIAMOND_PROTECTIOND: "day-hand-diamond-protection",
                HAND_DIAMOND_PROTECTIONN: "night-hand-diamond-protection",
                INV_DIAMOND_PROTECTION_OUT: "inv-diamond-protection-out",
                INV_DIAMOND_PROTECTION_IN: "inv-diamond-protection-in",
                INV_DIAMOND_PROTECTION_CLICK: "inv-diamond-protection-click",
                AMETHYST_PROTECTIOND: "day-amethyst-protection",
                AMETHYST_PROTECTIONN: "night-amethyst-protection",
                HAND_AMETHYST_PROTECTIOND: "day-hand-amethyst-protection",
                HAND_AMETHYST_PROTECTIONN: "night-hand-amethyst-protection",
                INV_AMETHYST_PROTECTION_OUT: "inv-amethyst-protection-out",
                INV_AMETHYST_PROTECTION_IN: "inv-amethyst-protection-in",
                INV_AMETHYST_PROTECTION_CLICK: "inv-amethyst-protection-click",
                REIDITE_SWORDD: "day-reidite-sword",
                REIDITE_SWORDN: "night-reidite-sword",
                INV_REIDITE_SWORD_OUT: "inv-reidite-sword-out",
                INV_REIDITE_SWORD_IN: "inv-reidite-sword-in",
                INV_REIDITE_SWORD_CLICK: "inv-reidite-sword-click",
                INV_REIDITE_OUT: "inv-reidite-out",
                INV_REIDITE_IN: "inv-reidite-in",
                INV_REIDITE_CLICK: "inv-reidite-click",
                INV_FLAME_OUT: "inv-flame-out",
                INV_FLAME_IN: "inv-flame-in",
                INV_FLAME_CLICK: "inv-flame-click",
                LAVA_BUBLE0D: "day-magma-buble0",
                LAVA_BUBLE0N: "night-magma-buble0",
                LAVA_BUBLE1D: "day-magma-buble1",
                LAVA_BUBLE1N: "night-magma-buble1",
                LAVA_BUBLE2D: "day-magma-buble2",
                LAVA_BUBLE2N: "night-magma-buble2",
                LAVA_DRAGOND: "day-lava-dragon",
                LAVA_DRAGONN: "night-lava-dragon",
                LAVA_FIRE_DRAGOND: "day-fire-dragon",
                LAVA_FIRE_DRAGONN: "night-fire-dragon",
                HURT_LAVA_DRAGON: "hurt-lava-dragon",
                LAVA_WING_LEFTD: "day-lava-wing-left",
                LAVA_WING_LEFTN: "night-lava-wing-left",
                LAVA_WING_RIGHTD: "day-lava-wing-right",
                LAVA_WING_RIGHTN: "night-lava-wing-right",
                HURT_LAVA_WING_LEFT: "hurt-lava-wing-left",
                HURT_LAVA_WING_RIGHT: "hurt-lava-wing-right",
                REIDITE_SPEARD: "day-reidite-spear",
                REIDITE_SPEARN: "night-reidite-spear",
                INV_REIDITE_SPEAR_OUT: "inv-reidite-spear-out",
                INV_REIDITE_SPEAR_IN: "inv-reidite-spear-in",
                INV_REIDITE_SPEAR_CLICK: "inv-reidite-spear-click",
                REIDITE_HELMETD: "day-reidite-helmet",
                REIDITE_HELMETN: "night-reidite-helmet",
                INV_REIDITE_HELMET_OUT: "inv-reidite-helmet-out",
                INV_REIDITE_HELMET_IN: "inv-reidite-helmet-in",
                INV_REIDITE_HELMET_CLICK: "inv-reidite-helmet-click",
                HAND_REIDITE_PROTECTIOND: "day-hand-reidite-protection",
                HAND_REIDITE_PROTECTIONN: "night-hand-reidite-protection",
                REIDITE_PROTECTIOND: "day-reidite-protection",
                REIDITE_PROTECTIONN: "night-reidite-protection",
                INV_REIDITE_PROTECTION_OUT: "inv-reidite-protection-out",
                INV_REIDITE_PROTECTION_IN: "inv-reidite-protection-in",
                INV_REIDITE_PROTECTION_CLICK: "inv-reidite-protection-click",
                LAVA_SWORDD: "day-lava-dragon-sword",
                LAVA_SWORDN: "night-lava-dragon-sword",
                INV_LAVA_SWORD_OUT: "inv-lava-dragon-sword-out",
                INV_LAVA_SWORD_IN: "inv-lava-dragon-sword-in",
                INV_LAVA_SWORD_CLICK: "inv-lava-dragon-sword-click",
                LAVA_SPEARD: "day-lava-spear",
                LAVA_SPEARN: "night-lava-spear",
                INV_LAVA_SPEAR_OUT: "inv-lava-spear-out",
                INV_LAVA_SPEAR_IN: "inv-lava-spear-in",
                INV_LAVA_SPEAR_CLICK: "inv-lava-spear-click",
                LAVA_HELMETD: "day-lava-helmet",
                LAVA_HELMETN: "night-lava-helmet",
                INV_LAVA_HELMET_OUT: "inv-lava-helmet-out",
                INV_LAVA_HELMET_IN: "inv-lava-helmet-in",
                INV_LAVA_HELMET_CLICK: "inv-lava-helmet-click",
                WITCHD: "day-witch-hat",
                WITCHN: "night-witch-hat",
                INV_WITCH_OUT: "inv-witch-hat-out",
                INV_WITCH_IN: "inv-witch-hat-in",
                INV_WITCH_CLICK: "inv-witch-hat-click",
                NIMBUSD: "day-nimbus2000",
                NIMBUSN: "night-nimbus2000",
                INV_NIMBUS_OUT: "inv-nimbus2000-out",
                INV_NIMBUS_IN: "inv-nimbus2000-in",
                INV_NIMBUS_CLICK: "inv-nimbus2000-click",
                ACCESSORY1D: "day-accessory1-pacques",
                ACCESSORY1N: "night-accessory1-pacques",
                ACCESSORY2D: "day-accessory2-pacques",
                ACCESSORY2N: "night-accessory2-pacques",
                ACCESSORY3D: "day-accessory3-pacques",
                ACCESSORY3N: "night-accessory3-pacques",
                ACCESSORY5D: "day-accessory5-pacques",
                ACCESSORY5N: "night-accessory5-pacques",
                ACCESSORY6D: "day-accessory6-pacques",
                ACCESSORY6N: "night-accessory6-pacques",
                ACCESSORY7D: "day-accessory7-pacques",
                ACCESSORY7N: "night-accessory7-pacques",
                ACCESSORY8D: "day-accessory8-pacques",
                ACCESSORY8N: "night-accessory8-pacques",
                BAG_EASTERD: "day-bag-pacques",
                BAG_EASTERN: "night-bag-pacques",
                CARROTD: "day-carrot",
                CARROTN: "night-carrot",
                CARROT_DRIEDD: "day-carrot-dried",
                CARROT_DRIEDN: "night-carrot-dried",
                TOMATO_MINID: "day-tomato-herb",
                TOMATO_MININ: "night-tomato-herb",
                TOMATO_MINI_DRIEDD: "day-tomato-herb-dried",
                TOMATO_MINI_DRIEDN: "night-tomato-herb-dried",
                TOMATOD: "day-tomato",
                TOMATON: "night-tomato",
                INV_CARROT_OUT: "inv-carrot-out",
                INV_CARROT_IN: "inv-carrot-in",
                INV_CARROT_CLICK: "inv-carrot-click",
                INV_TOMATO_OUT: "inv-tomato-out",
                INV_TOMATO_IN: "inv-tomato-in",
                INV_TOMATO_CLICK: "inv-tomato-click",
                PLAYER0D: "day-player0",
                PLAYER0N: "night-player0",
                PLAYER1D: "day-player1",
                PLAYER1N: "night-player1",
                PLAYER2D: "day-player2",
                PLAYER2N: "night-player22",
                PLAYER3D: "day-player3",
                PLAYER3N: "night-player33",
                PLAYER4D: "day-player4",
                PLAYER4N: "night-player4",
                PLAYER5D: "day-player5",
                PLAYER5N: "night-player5",
                PLAYER6D: "day-player6",
                PLAYER6N: "night-player6",
                PLAYER7D: "day-player7",
                PLAYER7N: "night-player7",
                PLAYER8D: "day-player8",
                PLAYER8N: "night-player8",
                PLAYER9D: "day-player9",
                PLAYER9N: "night-player9",
                PLAYER10D: "day-player10",
                PLAYER10N: "night-player10",
                PLAYER11D: "day-player11",
                PLAYER11N: "night-player11",
                PLAYER12D: "day-player12",
                PLAYER12N: "night-player12",
                PLAYER13D: "day-player13",
                PLAYER13N: "night-player13",
                PLAYER14D: "day-player14",
                PLAYER14N: "night-player14",
                PLAYER15D: "day-player15",
                PLAYER15N: "night-player15",
                PLAYER16D: "day-player16",
                PLAYER16N: "night-player16",
                PLAYER17D: "day-player17",
                PLAYER17N: "night-player17",
                PLAYER18D: "day-player18",
                PLAYER18N: "night-player18",
                PLAYER19D: "day-player19",
                PLAYER19N: "night-player19",
                HAND0D: "day-hand-player0",
                HAND0N: "night-hand-player0",
                HAND1D: "day-hand-player1",
                HAND1N: "night-hand-player1",
                HAND2D: "day-hand-player2",
                HAND2N: "night-hand-player22",
                HAND3D: "day-hand-player3",
                HAND3N: "night-hand-player33",
                HAND4D: "day-hand-player4",
                HAND4N: "night-hand-player4",
                HAND5D: "day-hand-player5",
                HAND5N: "night-hand-player5",
                HAND6D: "day-hand-player6",
                HAND6N: "night-hand-player6",
                HAND7D: "day-hand-player7",
                HAND7N: "night-hand-player7",
                HAND8D: "day-hand-player8",
                HAND8N: "night-hand-player8",
                HAND9D: "day-hand-player9",
                HAND9N: "night-hand-player9",
                HAND10D: "day-hand-player10",
                HAND10N: "night-hand-player10",
                HAND11D: "day-hand-player11",
                HAND11N: "night-hand-player11",
                HAND12D: "day-hand-player12",
                HAND12N: "night-hand-player12",
                HAND13D: "day-hand-player13",
                HAND13N: "night-hand-player13",
                HAND14D: "day-hand-player14",
                HAND14N: "night-hand-player14",
                HAND15D: "day-hand-player15",
                HAND15N: "night-hand-player15",
                HAND16D: "day-hand-player16",
                HAND16N: "night-hand-player16",
                HAND17D: "day-hand-player17",
                HAND17N: "night-hand-player17",
                HAND18D: "day-hand-player18",
                HAND18N: "night-hand-player18",
                HAND19D: "day-hand-player19",
                HAND19N: "night-hand-player19",
                ACCESSORY4D: "day-accessory4",
                ACCESSORY4N: "night-accessory4",
                ACCESSORY9D: "day-accessory9",
                ACCESSORY9N: "night-accessory9",
                ACCESSORY10D: "day-accessory10",
                ACCESSORY10N: "night-accessory10",
                ACCESSORY11D: "day-accessory11",
                ACCESSORY11N: "night-accessory11",
                ACCESSORY12D: "day-accessory12",
                ACCESSORY12N: "night-accessory12",
                BAGD: "day-bag",
                BAGN: "night-bag",
                INV_BAG_OUT: "inv-bag-out",
                INV_BAG_IN: "inv-bag-in",
                INV_BAG_CLICK: "inv-bag-click",
                PITCHFORKD: "day-pitchfork",
                PITCHFORKN: "night-pitchfork",
                INV_PITCHFORK_OUT: "inv-pitchfork-out",
                INV_PITCHFORK_IN: "inv-pitchfork-in",
                INV_PITCHFORK_CLICK: "inv-pitchfork-click",
                INV_WOOD_DOOR_SPIKE_OUT: "inv-wood-spike-door-out",
                INV_WOOD_DOOR_SPIKE_IN: "inv-wood-spike-door-in",
                INV_WOOD_DOOR_SPIKE_CLICK: "inv-wood-spike-door-click",
                INV_STONE_DOOR_SPIKE_OUT: "inv-stone-spike-door-out",
                INV_STONE_DOOR_SPIKE_IN: "inv-stone-spike-door-in",
                INV_STONE_DOOR_SPIKE_CLICK: "inv-stone-spike-door-click",
                INV_GOLD_DOOR_SPIKE_OUT: "inv-gold-spike-door-out",
                INV_GOLD_DOOR_SPIKE_IN: "inv-gold-spike-door-in",
                INV_GOLD_DOOR_SPIKE_CLICK: "inv-gold-spike-door-click",
                INV_DIAMOND_DOOR_SPIKE_OUT: "inv-diamond-spike-door-out",
                INV_DIAMOND_DOOR_SPIKE_IN: "inv-diamond-spike-door-in",
                INV_DIAMOND_DOOR_SPIKE_CLICK: "inv-diamond-spike-door-click",
                INV_AMETHYST_DOOR_SPIKE_OUT: "inv-amethyst-spike-door-out",
                INV_AMETHYST_DOOR_SPIKE_IN: "inv-amethyst-spike-door-in",
                INV_AMETHYST_DOOR_SPIKE_CLICK: "inv-amethyst-spike-door-click",
                WOOD_DOOR_SPIKED: "day-wood-spike-door",
                WOOD_DOOR_SPIKEN: "night-wood-spike-door",
                STONE_DOOR_SPIKED: "day-stone-spike-door",
                STONE_DOOR_SPIKEN: "night-stone-spike-door",
                GOLD_DOOR_SPIKED: "day-gold-spike-door",
                GOLD_DOOR_SPIKEN: "night-gold-spike-door",
                DIAMOND_DOOR_SPIKED: "day-diamond-spike-door",
                DIAMOND_DOOR_SPIKEN: "night-diamond-spike-door",
                AMETHYST_DOOR_SPIKED: "day-amethyst-spike-door",
                AMETHYST_DOOR_SPIKEN: "night-amethyst-spike-door",
                INV_REIDITE_DOOR_SPIKE_OUT: "inv-reidite-spike-door-out",
                INV_REIDITE_DOOR_SPIKE_IN: "inv-reidite-spike-door-in",
                INV_REIDITE_DOOR_SPIKE_CLICK: "inv-reidite-spike-door-click",
                INV_REIDITE_DOOR_OUT: "inv-reidite-door-out",
                INV_REIDITE_DOOR_IN: "inv-reidite-door-in",
                INV_REIDITE_DOOR_CLICK: "inv-reidite-door-click",
                INV_REIDITE_SPIKE_OUT: "inv-reidite-spike-out",
                INV_REIDITE_SPIKE_IN: "inv-reidite-spike-in",
                INV_REIDITE_SPIKE_CLICK: "inv-reidite-spike-click",
                INV_REIDITE_WALL_OUT: "inv-reidite-wall-out",
                INV_REIDITE_WALL_IN: "inv-reidite-wall-in",
                INV_REIDITE_WALL_CLICK: "inv-reidite-wall-click",
                REIDITE_WALLD: "day-reidite-wall",
                REIDITE_WALLN: "night-reidite-wall",
                REIDITE_DOORD: "day-reidite-door",
                REIDITE_DOORN: "night-reidite-door",
                REIDITE_SPIKED: "day-reidite-spike",
                REIDITE_SPIKEN: "night-reidite-spike",
                REIDITE_DOOR_SPIKED: "day-reidite-spike-door",
                REIDITE_DOOR_SPIKEN: "night-reidite-spike-door",
                INV_PICK_REIDITE_OUT: "inv-reidite-pickaxe-out",
                INV_PICK_REIDITE_IN: "inv-reidite-pickaxe-in",
                INV_PICK_REIDITE_CLICK: "inv-reidite-pickaxe-click",
                PICK_REIDITED: "day-reidite-pickaxe",
                PICK_REIDITEN: "night-reidite-pickaxe",
                INV_HAMMER_REIDITE_OUT: "inv-reidite-hammer-out",
                INV_HAMMER_REIDITE_IN: "inv-reidite-hammer-in",
                INV_HAMMER_REIDITE_CLICK: "inv-reidite-hammer-click",
                HAMMER_REIDITED: "day-reidite-hammer",
                HAMMER_REIDITEN: "night-reidite-hammer",
                WATERMELOND: "day-watermelon1",
                WATERMELONN: "night-watermelon1",
                DRIED_WATERMELOND: "day-watermelon-dried1",
                DRIED_WATERMELONN: "night-watermelon-dried1",
                INV_WATERMELON_OUT: "inv-watermelon-out",
                INV_WATERMELON_IN: "inv-watermelon-in",
                INV_WATERMELON_CLICK: "inv-watermelon-click",
                BOATD: "day-boat",
                BOATN: "night-boat",
                BOAT_WAVED: "day-boat-wave",
                BOAT_WAVEN: "night-boat-wave",
                INV_BOAT_OUT: "inv-boat-out",
                INV_BOAT_IN: "inv-boat-in",
                INV_BOAT_CLICK: "inv-boat-click",
                PLANED: "day-plane",
                PLANEN: "night-plane",
                INV_PLANE_OUT: "inv-plane-out",
                INV_PLANE_IN: "inv-plane-in",
                INV_PLANE_CLICK: "inv-plane-click",
                SLEDD: "day-sled",
                SLEDN: "night-sled",
                SLED_WAVED: "day-sled-wave",
                SLED_WAVEN: "night-sled-wave",
                INV_SLED_OUT: "inv-sled-out",
                INV_SLED_IN: "inv-sled-in",
                INV_SLED_CLICK: "inv-sled-click",
                PIRATE_HATD: "day-pirate-hat",
                PIRATE_HATN: "night-pirate-hat",
                INV_PIRATE_HAT_OUT: "inv-pirate-hat-out",
                INV_PIRATE_HAT_IN: "inv-pirate-hat-in",
                INV_PIRATE_HAT_CLICK: "inv-pirate-hat-click",
                PENGUIND: "day-penguin",
                PENGUINN: "night-penguin",
                HURT_PENGUIN: "hurt-penguin",
                INV_PENGUIN_FEATHER: "inv-penguin-feather-click",
                INV_HAWK_FEATHER: "inv-hawk-feather-click",
                BOARD: "day-boar1",
                BOAR_TAMEDD: "day-boar1-tamed",
                BOAR_ANGRYD: "day-boar1-angry",
                BOARN: "night-boar1",
                BOAR_TAMEDN: "night-boar1-tamed",
                BOAR_ANGRYN: "night-boar1-angry",
                INV_MOUNT_BOAR_OUT: "inv-mount-boar-out",
                INV_MOUNT_BOAR_IN: "inv-mount-boar-in",
                INV_MOUNT_BOAR_CLICK: "inv-mount-boar-click",
                HURT_BOAR: "day-hurt-boar1",
                BOAR_STEP: "boar1-step",
                SADDLED: "day-saddle1",
                SADDLEN: "night-saddle1",
                INV_SADDLE_OUT: "inv-saddle-out",
                INV_SADDLE_IN: "inv-saddle-in",
                INV_SADDLE_CLICK: "inv-saddle-click",
                WAND1D: "day-magic-wand0",
                WAND1N: "night-magic-wand0",
                LIGHT_WAND1D: "day-light-wand1",
                LIGHT_WAND1N: "night-light-wand1",
                INV_WAND1_OUT: "inv-magic-wand0-out",
                INV_WAND1_IN: "inv-magic-wand0-in",
                INV_WAND1_CLICK: "inv-magic-wand0-click",
                WAND2D: "day-magic-wand1",
                WAND2N: "night-magic-wand1",
                LIGHT_WAND0D: "day-light-wand0",
                LIGHT_WAND0N: "night-light-wand0",
                INV_WAND2_OUT: "inv-magic-wand1-out",
                INV_WAND2_IN: "inv-magic-wand1-in",
                INV_WAND2_CLICK: "inv-magic-wand1-click",
                FIREFLYD: "day-firefly",
                FIREFLYN: "night-firefly",
                HURT_FIREFLY: "hurt-firefly",
                INV_FIREFLY_OUT: "inv-firefly-out",
                INV_FIREFLY_IN: "inv-firefly-in",
                INV_FIREFLY_CLICK: "inv-firefly-click",
                BABY_DRAGOND: "day-baby-dragon",
                BABY_DRAGONN: "night-baby-dragon",
                BABY_DRAGON_ATTACKD: "day-baby-dragon-angry",
                BABY_DRAGON_ATTACKN: "night-baby-dragon-angry",
                BABY_DRAGON_TAMEDD: "day-baby-dragon-tamed",
                BABY_DRAGON_TAMEDN: "night-baby-dragon-tamed",
                BABY_DRAGON_WING_LEFT_ATTACKD: "day-wing-dragon-left-angry",
                BABY_DRAGON_WING_LEFT_ATTACKN: "night-dragon-wing-left-angry",
                BABY_DRAGON_WING_RIGHT_ATTACKD: "day-wing-dragon-right-angry",
                BABY_DRAGON_WING_RIGHT_ATTACKN: "night-dragon-wing-right-angry",
                BABY_DRAGON_WING_LEFT_TAMEDD: "day-wing-dragon-left-tamed",
                BABY_DRAGON_WING_LEFT_TAMEDN: "night-dragon-wing-left-tamed",
                BABY_DRAGON_WING_RIGHT_TAMEDD: "day-wing-dragon-right-tamed",
                BABY_DRAGON_WING_RIGHT_TAMEDN: "night-wing-dragon-right-tamed",
                BABY_DRAGON_WING_LEFTD: "day-wing-dragon-left",
                BABY_DRAGON_WING_LEFTN: "night-dragon-wing-left",
                BABY_DRAGON_WING_RIGHTD: "day-wing-dragon-right",
                BABY_DRAGON_WING_RIGHTN: "night-wing-dragon-right",
                HURT_BABY_DRAGON: "hurt-baby-dragon",
                HURT_BABY_DRAGON_WING_LEFT: "hurt-baby-dragon-wing-left",
                HURT_BABY_DRAGON_WING_RIGHT: "hurt-baby-dragon-wing-right",
                INV_BABY_DRAGON_OUT: "inv-baby-dragon-out",
                INV_BABY_DRAGON_IN: "inv-baby-dragon-in",
                INV_BABY_DRAGON_CLICK: "inv-baby-dragon-click",
                BABY_LAVAD: "day-baby-lava",
                BABY_LAVAN: "night-baby-lava",
                BABY_LAVA_ATTACKD: "day-baby-lava-angry",
                BABY_LAVA_ATTACKN: "night-baby-lava-angry",
                BABY_LAVA_TAMEDD: "day-baby-lava-tamed",
                BABY_LAVA_TAMEDN: "night-baby-lava-tamed",
                BABY_LAVA_WING_LEFT_ATTACKD: "day-wing-lava-left-angry",
                BABY_LAVA_WING_LEFT_ATTACKN: "night-wing-lava-left-angry",
                BABY_LAVA_WING_RIGHT_ATTACKD: "day-wing-lava-right-angry",
                BABY_LAVA_WING_RIGHT_ATTACKN: "night-wing-lava-right-angry",
                BABY_LAVA_WING_LEFT_TAMEDD: "day-wing-lava-left-tamed",
                BABY_LAVA_WING_LEFT_TAMEDN: "night-wing-lava-left-tamed",
                BABY_LAVA_WING_RIGHT_TAMEDD: "day-wing-lava-right-tamed",
                BABY_LAVA_WING_RIGHT_TAMEDN: "night-wing-lava-right-tamed",
                BABY_LAVA_WING_LEFTD: "day-wing-lava-left",
                BABY_LAVA_WING_LEFTN: "night-wing-lava-left",
                BABY_LAVA_WING_RIGHTD: "day-wing-lava-right",
                BABY_LAVA_WING_RIGHTN: "night-wing-lava-right",
                HURT_BABY_LAVA: "hurt-baby-lava",
                HURT_BABY_LAVA_WING_LEFT: "hurt-baby-lava-wing-left",
                HURT_BABY_LAVA_WING_RIGHT: "hurt-baby-lava-wing-right",
                INV_BABY_LAVA_OUT: "inv-baby-lava-out",
                INV_BABY_LAVA_IN: "inv-baby-lava-in",
                INV_BABY_LAVA_CLICK: "inv-baby-lava-click",
                HAWKD: "day-falcon",
                HAWKN: "night-falcon",
                HAWK_ATTACKD: "day-falcon-angry",
                HAWK_ATTACKN: "night-falcon-angry",
                HAWK_GROUNDD: "day-falcon-ground",
                HAWK_GROUNDN: "night-falcon-ground",
                HAWK_GROUND_ATTACKD: "day-falcon-ground-angry",
                HAWK_GROUND_ATTACKN: "night-falcon-ground-angry",
                HAWK_WING_LEFTD: "day-falcon-wings-left",
                HAWK_WING_LEFTN: "night-falcon-wings-left",
                HAWK_WING_RIGHTD: "day-falcon-wings-right",
                HAWK_WING_RIGHTN: "night-falcon-wings-right",
                HAWK_WING_LEFT_ATTACKD: "day-falcon-angry-wings-left",
                HAWK_WING_LEFT_ATTACKN: "night-falcon-angry-wings-left",
                HAWK_WING_RIGHT_ATTACKD: "day-falcon-angry-wings-right",
                HAWK_WING_RIGHT_ATTACKN: "night-falcon-angry-wings-right",
                HAWK_WING_LEFT_TAMEDD: "day-falcon-wings-left-tamed",
                HAWK_WING_LEFT_TAMEDN: "night-falcon-wings-left-tamed",
                HAWK_WING_RIGHT_TAMEDD: "day-falcon-wings-right-tamed",
                HAWK_WING_RIGHT_TAMEDN: "night-falcon-wings-right-tamed",
                HAWK_TAMEDD: "day-falcon-tamed",
                HAWK_TAMEDN: "night-falcon-tamed",
                HURT_HAWK_GROUND: "hurt-falcon-ground",
                HURT_HAWK: "hurt-falcon",
                HURT_HAWK_WING_LEFT: "hurt-falcon-wings-left",
                HURT_HAWK_WING_RIGHT: "hurt-falcon-wings-right",
                INV_HAWK_OUT: "inv-falcon-out",
                INV_HAWK_IN: "inv-falcon-in",
                INV_HAWK_CLICK: "inv-falcon-click",
                CRAB_BOSSD: "day-crab-boss",
                CRAB_BOSSN: "night-crab-boss",
                CRAB_BOSS_ATTACKD: "day-crab-boss-angry",
                CRAB_BOSS_ATTACKN: "night-crab-boss-angry",
                CRAB_BOSS_TAMEDD: "day-crab-boss-tamed",
                CRAB_BOSS_TAMEDN: "night-crab-boss-tamed",
                CRAB_BOSS_CLAW_LEFT_ATTACKD: "day-crab-boss-claw-left-attack",
                CRAB_BOSS_CLAW_LEFT_ATTACKN: "night-crab-boss-claw-left-attack",
                CRAB_BOSS_CLAW_RIGHT_ATTACKD: "day-crab-boss-claw-right-attack",
                CRAB_BOSS_CLAW_RIGHT_ATTACKN: "night-crab-boss-claw-right-attack",
                CRAB_BOSS_CLAW_LEFT_TAMEDD: "day-crab-boss-claw-left-tamed",
                CRAB_BOSS_CLAW_LEFT_TAMEDN: "night-crab-boss-claw-left-tamed",
                CRAB_BOSS_CLAW_RIGHT_TAMEDD: "day-crab-boss-claw-right-tamed",
                CRAB_BOSS_CLAW_RIGHT_TAMEDN: "night-crab-boss-claw-right-tamed",
                CRAB_BOSS_CLAW_LEFTD: "day-crab-boss-claw-left",
                CRAB_BOSS_CLAW_LEFTN: "night-crab-boss-claw-left",
                CRAB_BOSS_CLAW_RIGHTD: "day-crab-boss-claw-right",
                CRAB_BOSS_CLAW_RIGHTN: "night-crab-boss-claw-right",
                HURT_CRAB_BOSS: "hurt-crab-boss",
                HURT_CRAB_BOSS_CLAW_LEFT: "hurt-crab-boss-claw-left",
                HURT_CRAB_BOSS_CLAW_RIGHT: "hurt-crab-boss-claw-right",
                HEAL_CRAB_BOSS: "heal-crab-boss",
                HEAL_CRAB_BOSS_CLAW_LEFT: "heal-crab-boss-claw-left",
                HEAL_CRAB_BOSS_CLAW_RIGHT: "heal-crab-boss-claw-right",
                CRAB_STEP: "crab-step",
                INV_CRAB_BOSS_OUT: "inv-crab-boss-out",
                INV_CRAB_BOSS_IN: "inv-crab-boss-in",
                INV_CRAB_BOSS_CLICK: "inv-crab-boss-click",
                CACTUSD: "day-cactus10",
                CACTUSN: "night-cactus10",
                INV_CACTUS_OUT: "inv-cactus-out",
                INV_CACTUS_IN: "inv-cactus-in",
                INV_CACTUS_CLICK: "inv-cactus-click",
                SCORPIOND: "day-scorpion",
                SCORPIONN: "night-scorpion",
                SCORPION_HAND_LEFTD: "day-scorpion-hand-left",
                SCORPION_HAND_LEFTN: "night-scorpion-hand-left",
                SCORPION_HAND_RIGHTD: "day-scorpion-hand-right",
                SCORPION_HAND_RIGHTN: "night-scorpion-hand-right",
                HURT_SCORPION: "hurt-scorpion",
                HURT_SCORPION_HAND_LEFT: "hurt-scorpion-hand-left",
                HURT_SCORPION_HAND_RIGHT: "hurt-scorpion-hand-right",
                VULTURED: "day-vulture",
                VULTUREN: "night-vulture",
                VULTURE_ATTACKD: "day-vulture-angry",
                VULTURE_ATTACKN: "night-vulture-angry",
                VULTURE_GROUNDD: "day-vulture-ground",
                VULTURE_GROUNDN: "night-vulture-ground",
                VULTURE_GROUND_ATTACKD: "day-vulture-ground-angry",
                VULTURE_GROUND_ATTACKN: "night-vulture-ground-angry",
                VULTURE_WING_LEFTD: "day-vulture-wings-left",
                VULTURE_WING_LEFTN: "night-vulture-wings-left",
                VULTURE_WING_RIGHTD: "day-vulture-wings-right",
                VULTURE_WING_RIGHTN: "night-vulture-wings-right",
                VULTURE_WING_LEFT_ATTACKD: "day-vulture-angry-wings-left",
                VULTURE_WING_LEFT_ATTACKN: "night-vulture-angry-wings-left",
                VULTURE_WING_RIGHT_ATTACKD: "day-vulture-angry-wings-right",
                VULTURE_WING_RIGHT_ATTACKN: "night-vulture-angry-wings-right",
                VULTURE_WING_LEFT_TAMEDD: "day-vulture-wings-left-tamed",
                VULTURE_WING_LEFT_TAMEDN: "night-vulture-wings-left-tamed",
                VULTURE_WING_RIGHT_TAMEDD: "day-vulture-wings-right-tamed",
                VULTURE_WING_RIGHT_TAMEDN: "night-vulture-wings-right-tamed",
                VULTURE_TAMEDD: "day-vulture-tamed",
                VULTURE_TAMEDN: "night-vulture-tamed",
                HURT_VULTURE_GROUND: "hurt-vulture-ground",
                HURT_VULTURE: "hurt-vulture",
                HURT_VULTURE_WING_LEFT: "hurt-vulture-wings-left",
                HURT_VULTURE_WING_RIGHT: "hurt-vulture-wings-right",
                ALOE_VERAD: "day-aloe-vera",
                ALOE_VERAN: "night-aloe-vera",
                INV_ALOE_VERA_OUT: "inv-aloe-vera-out",
                INV_ALOE_VERA_IN: "inv-aloe-vera-in",
                INV_ALOE_VERA_CLICK: "inv-aloe-vera-click",
                ALOE_VERA_GROWND: "day-aloe-vera-grown",
                ALOE_VERA_GROWNN: "night-aloe-vera-grown",
                ALOE_VERA_DRIEDD: "day-aloe-vera-dried",
                ALOE_VERAN_DRIEDN: "night-aloe-vera-dried",
                TURBAN1D: "day-turban1",
                TURBAN1N: "night-turban1",
                TURBAN2D: "day-turban2",
                TURBAN2N: "night-turban2",
                INV_TURBAN2_OUT: "inv-turban2-out",
                INV_TURBAN2_IN: "inv-turban2-in",
                INV_TURBAN2_CLICK: "inv-turban2-click",
                INV_TURBAN1_OUT: "inv-turban1-out",
                INV_TURBAN1_IN: "inv-turban1-in",
                INV_TURBAN1_CLICK: "inv-turban1-click",
                PITCHFORK2D: "day-pitchfork2",
                PITCHFORK2N: "night-pitchfork2",
                INV_PITCHFORK2_OUT: "inv-pitchfork2-out",
                INV_PITCHFORK2_IN: "inv-pitchfork2-in",
                INV_PITCHFORK2_CLICK: "inv-pitchfork2-click",
                YUSUKEDAO_ITEM1D: "day-yi1",
                YUSUKEDAO_ITEM1N: "night-yi1",
                INV_YUSUKEDAO_ITEM1_OUT: "inv-yi1-out",
                INV_YUSUKEDAO_ITEM1_IN: "inv-yi1-in",
                INV_YUSUKEDAO_ITEM1_CLICK: "inv-yi1-click",
                YUSUKEDAO_ITEM2D: "p",
                YUSUKEDAO_ITEM2N: "p",
                INV_YUSUKEDAO_ITEM2_OUT: "tinko2",
                INV_YUSUKEDAO_ITEM2_IN: "tinko",
                INV_YUSUKEDAO_ITEM2_CLICK: "tinko",
                INV_PITCHFORK_PART_CLICK: "inv-gold-fork-click",
                INV_PILOT_GLASSES_CLICK: "inv-pilot-glasses-click",
                PILOT_HELMETD: "day-pilot-helmet",
                PILOT_HELMETN: "night-pilot-helmet",
                INV_PILOT_HELMET_OUT: "inv-pilot-helmet-out",
                INV_PILOT_HELMET_IN: "inv-pilot-helmet-in",
                INV_PILOT_HELMET_CLICK: "inv-pilot-helmet-click",
                SAND_WORM0D: "day-sandworm0",
                SAND_WORM1D: "day-sandworm1",
                SAND_WORM2D: "day-sandworm2",
                SAND_WORM0N: "night-sandworm0",
                SAND_WORM1N: "night-sandworm1",
                SAND_WORM2N: "night-sandworm2",
                HURT_SAND_WORM0: "hurt-sandworm0",
                HURT_SAND_WORM1: "hurt-sandworm1",
                HURT_SAND_WORM2: "hurt-sandworm2",
                INV_VULTURE_FEATHER: "inv-vulture-feather-click",
                EMERALD0D: "day-emerald0",
                EMERALD0N: "night-emerald0",
                EMERALD1D: "day-emerald1",
                EMERALD1N: "night-emerald1",
                EMERALD2D: "day-emerald2",
                EMERALD2N: "night-emerald2",
                INV_EMERALD: "inv-emerald-click",
                INV_SANDWORM_JUICE_OUT: "inv-sworm-juice-out",
                INV_SANDWORM_JUICE_IN: "inv-sworm-juice-in",
                INV_SANDWORM_JUICE_CLICK: "inv-sworm-juice-click",
                EMERALD_MACHINED: "day-point-machine",
                EMERALD_MACHINEN: "night-point-machine",
                EMERALD_MACHINE_HOLED: "day-point-machine-hole",
                EMERALD_MACHINE_HOLEN: "night-point-machine-hole",
                EMERALD_MACHINE_GROUNDD: "day-point-machine-ground",
                EMERALD_MACHINE_GROUNDN: "night-point-machine-ground",
                EMERALD_MACHINE_ROTATED: "day-point-machine-rotate",
                EMERALD_MACHINE_ROTATEN: "night-point-machine-rotate",
                INV_EMERALD_MACHINE_OUT: "inv-point-machine-out",
                INV_EMERALD_MACHINE_IN: "inv-point-machine-in",
                INV_EMERALD_MACHINE_CLICK: "inv-point-machine-click",
                EXTRACTOR_MACHINE0_STONED: "day-extractor-machine0-stone",
                EXTRACTOR_MACHINE0_STONEN: "night-extractor-machine0-stone",
                EXTRACTOR_MACHINE_STONED: "day-extractor-machine-stone",
                EXTRACTOR_MACHINE_STONEN: "night-extractor-machine-stone",
                INV_EXTRACTOR_MACHINE_STONE_OUT: "inv-extractor-machine-stone-out",
                INV_EXTRACTOR_MACHINE_STONE_IN: "inv-extractor-machine-stone-in",
                INV_EXTRACTOR_MACHINE_STONE_CLICK: "inv-extractor-machine-stone-click",
                EXTRACTOR_MACHINE0_GOLDD: "day-extractor-machine0-gold",
                EXTRACTOR_MACHINE0_GOLDN: "night-extractor-machine0-gold",
                EXTRACTOR_MACHINE_GOLDD: "day-extractor-machine-gold",
                EXTRACTOR_MACHINE_GOLDN: "night-extractor-machine-gold",
                INV_EXTRACTOR_MACHINE_GOLD_OUT: "inv-extractor-machine-gold-out",
                INV_EXTRACTOR_MACHINE_GOLD_IN: "inv-extractor-machine-gold-in",
                INV_EXTRACTOR_MACHINE_GOLD_CLICK: "inv-extractor-machine-gold-click",
                EXTRACTOR_MACHINE0_DIAMONDD: "day-extractor-machine0-diamond",
                EXTRACTOR_MACHINE0_DIAMONDN: "night-extractor-machine0-diamond",
                DIAMOND_EXTRACTORD: "day-extractor-machine-diamond",
                DIAMOND_EXTRACTORN: "night-extractor-machine-diamond",
                INV_DIAMOND_EXTRACTOR_OUT: "inv-extractor-machine-diamond-out",
                INV_DIAMOND_EXTRACTOR_IN: "inv-extractor-machine-diamond-in",
                INV_DIAMOND_EXTRACTOR_CLICK: "inv-extractor-machine-diamond-click",
                EXTRACTOR_MACHINE0_AMETHYSTD: "day-extractor-machine0-amethyst",
                EXTRACTOR_MACHINE0_AMETHYSTN: "night-extractor-machine0-amethyst",
                EXTRACTOR_MACHINE_AMETHYSTD: "day-extractor-machine-amethyst",
                EXTRACTOR_MACHINE_AMETHYSTN: "night-extractor-machine-amethyst",
                INV_EXTRACTOR_MACHINE_AMETHYST_OUT: "inv-extractor-machine-amethyst-out",
                INV_EXTRACTOR_MACHINE_AMETHYST_IN: "inv-extractor-machine-amethyst-in",
                INV_EXTRACTOR_MACHINE_AMETHYST_CLICK: "inv-extractor-machine-amethyst-click",
                EXTRACTOR_MACHINE0_REIDITED: "day-extractor-machine0-reidite",
                EXTRACTOR_MACHINE0_REIDITEN: "night-extractor-machine0-reidite",
                EXTRACTOR_MACHINE_REIDITED: "day-extractor-machine-reidite",
                EXTRACTOR_MACHINE_REIDITEN: "night-extractor-machine-reidite",
                INV_EXTRACTOR_MACHINE_REIDITE_OUT: "inv-extractor-machine-reidite-out",
                INV_EXTRACTOR_MACHINE_REIDITE_IN: "inv-extractor-machine-reidite-in",
                INV_EXTRACTOR_MACHINE_REIDITE_CLICK: "inv-extractor-machine-reidite-click",
                EXTRACTOR_CASES: "extractor-cases",
                HEND: "day-golden-hen",
                HENN: "night-golden-hen",
                CHICKEND: "day-golden-chicken",
                CHICKENN: "night-golden-chicken",
                HURT_GOLDEN_HEN: "hurt-golden-hen",
                HURT_GOLDEN_CHICKEN: "hurt-golden-chicken",
                LOGO_INTERFACE: "logo-interface",
                NORMAL_MODE_HOVER: "normal-つせウ小り六ぬオキニ-hover",
                MODE_COMMUNITY_HOVER: "community-つせウ小り六ぬオキニ-hover2",
                MODE_EXPERIMENTAL_HOVER: "experimental-つせウ小り六ぬオキニ-hover",
                NORMAL_MODE_OUT: "normal-つせウ小り六ぬオキニ-out",
                NORMAL_MODE_IN: "normal-つせウ小り六ぬオキニ-in",
                NORMAL_MODE_CLICK: "normal-つせウ小り六ぬオキニ-click",
                MODE_COMMUNITY_OUT: "community-つせウ小り六ぬオキニ-out",
                MODE_COMMUNITY_IN: "community-つせウ小り六ぬオキニ-in",
                MODE_COMMUNITY_CLICK: "community-つせウ小り六ぬオキニ-click",
                MODE_EXPERIMENTAL_OUT: "experimental-modes-out",
                MODE_EXPERIMENTAL_IN: "experimental-modes-in",
                MODE_EXPERIMENTAL_CLICK: "experimental-modes-click",
                YOUTUBE_BUTTON_OUT: "youtube-button-out",
                YOUTUBE_BUTTON_IN: "youtube-button-in",
                YOUTUBE_BUTTON_CLICK: "youtube-button-click",
                DISCORD_BUTTON_OUT: "discord-button-out",
                DISCORD_BUTTON_IN: "discord-button-in",
                DISCORD_BUTTON_CLICK: "discord-button-click",
                MERCH_BUTTON_OUT: "merch-button-out",
                MERCH_BUTTON_IN: "merch-button-in",
                MERCH_BUTTON_CLICK: "merch-button-click",
                TERMINAL_BUTTON_OUT: "terminal-button-out",
                TERMINAL_BUTTON_IN: "terminal-button-in",
                TERMINAL_BUTTON_CLICK: "terminal-button-click",
                RESTART_OUT: "restart-out",
                RESTART_IN: "restart-in",
                RESTART_CLICK: "restart-click",
                GUIDE_OUT: "guide-out",
                GUIDE_IN: "guide-in",
                GUIDE_CLICK: "guide-click",
                COPY_PASTE_OUT: "copy-paste-out",
                COPY_PASTE_IN: "copy-paste-in",
                COPY_PASTE_CLICK: "copy-paste-click",
                LINKS_BG: "link-buttons-bg",
                CHANGELOG_BOX: "changelog-box2",
                CHANGELOG_BUTTON_OUT: "changelog_29",
                PROFILE_BUTTON_OUT: "profile-button-out",
                PROFILE_BUTTON_IN: "profile-button-in",
                PROFILE_BUTTON_CLICK: "profile-button-click",
                LOGIN_BUTTON_OUT: "login-button-out",
                LOGIN_BUTTON_IN: "login-button-in",
                LOGIN_BUTTON_CLICK: "login-button-click",
                LOGIN_GOOGLE_OUT: "login-google-out",
                LOGIN_GOOGLE_IN: "login-google-in",
                LOGIN_GOOGLE_CLICK: "login-google-click",
                ACCOUNT_BOX: "account-box",
                ACCOUNT_MAINTENANCE: "account-under-maintenance",
                CLOSE_BUTTON_OUT: "close-button-account-out",
                CLOSE_BUTTON_IN: "close-button-account-in",
                CLOSE_BUTTON_CLICK: "close-button-account-click",
                PLAY_BUTTON_OUT: "play-button-out",
                PLAY_BUTTON_IN: "play-button-in",
                PLAY_BUTTON_CLICK: "play-button-click",
                MODIFY_NAME_OUT: "modify-name-out",
                MODIFY_NAME_IN: "modify-name-in",
                MODIFY_NAME_CLICK: "modify-name-click",
                YES_BUTTON_OUT: "yes-button-out",
                YES_BUTTON_IN: "yes-button-in",
                YES_BUTTON_CLICK: "yes-button-click",
                YES_300_BUTTON_OUT: "yes-300-button-out",
                YES_300_BUTTON_IN: "yes-300-button-in",
                YES_300_BUTTON_CLICK: "yes-300-button-click",
                NO_BUTTON_OUT: "no-button-out",
                NO_BUTTON_IN: "no-button-in",
                NO_BUTTON_CLICK: "no-button-click",
                NO_THANKS_BUTTON_OUT: "no-thanks-button-out",
                NO_THANKS_BUTTON_IN: "no-thanks-button-in",
                NO_THANKS_BUTTON_CLICK: "no-thanks-button-click",
                SHOP_BUTTON_OUT: "shop-button-out",
                SHOP_BUTTON_IN: "shop-button-in",
                SHOP_BUTTON_CLICK: "shop-button-click",
                LOGOUT_OUT: "logout-out",
                LOGOUT_IN: "logout-in",
                LOGOUT_CLICK: "logout-click",
                TERMS_BUTTON_OUT: "terms-button-out",
                TERMS_BUTTON_IN: "terms-button-in",
                TERMS_BUTTON_CLICK: "terms-button-click",
                TUTORIAL_ICON: "tutorial-icon",
                SKINS_ICON: "skins-icon",
                SHOP_ICON: "shop-icon",
                PAINT_ICON: "paint-icon",
                LEADERBOARD_ICON: "leaderboard-icon",
                START_ICON: "start-icon",
                PROFILE_ICON: "profile-icon",
                SERVER_ACCESS_ICON: "server-access-icon2",
                ICONS_BG_BUTTON_OUT: "button-homepage-bg-out",
                ICONS_BG_BUTTON_IN: "button-homepage-bg-in",
                ICONS_BG_BUTTON_CLICK: "button-homepage-bg-click",
                ICONS_BOTTOM_BG_BUTTON_OUT: "button-bottom-homepage-bg-out",
                ICONS_BOTTOM_BG_BUTTON_IN: "button-bottom-homepage-bg-in",
                ICONS_BOTTOM_BG_BUTTON_CLICK: "button-bottom-homepage-bg-click",
                AVATAR_RESUME: "lvl-player",
                AVATAR_LVL1: "avatar-player",
                AVATAR_LVL2: "avatar-player1",
                AVATAR_LVL3: "avatar-player2",
                AVATAR_LVL4: "avatar-player3",
                AVATAR_LVL5: "avatar-player4",
                AVATAR_LVL6: "avatar-player5",
                AVATAR_LVL7: "avatar-player6",
                AVATAR_LVL8: "avatar-player7",
                AVATAR_LVL9: "avatar-player8",
                AVATAR_LVL10: "avatar-player9",
                AVATAR_LVL11: "avatar-player10",
                AVATAR_LVL12: "avatar-player11",
                AVATAR_LVL13: "avatar-player12",
                AVATAR_LVL14: "avatar-player13",
                AVATAR_LVL15: "avatar-player14",
                AVATAR_LVL16: "avatar-player14",
                AVATAR_LVL17: "avatar-player14",
                AVATAR_LVL18: "avatar-player14",
                GOLDEN_BREAD: "golden-bread",
                BUY_BREAD_OUT: "buy-bread-out",
                BUY_BREAD_IN: "buy-bread-in",
                BUY_BREAD_CLICK: "buy-bread-click",
                GAUGE: "gauge",
                SEASON_4: "season-4-out",
                SEASON_4_IN: "season-4-in",
                SEASON_4_OUT: "season-4-click",
                SEASON4_BOX: "season4-box",
                SEASON_5: "season-5-out",
                SEASON_5_IN: "season-5-in",
                SEASON_5_OUT: "season-5-click",
                SEASON5_BOX: "season5-box",
                PROFILE_BOX: "profile2-box",
                SKINS_BOX: "skins-box",
                SHOP_BOX: "shop-box",
                PRIVATE_SERVER_BOX: "private-server-box",
                SERVER_LOCATION_BOX: "location-box",
                SERVER_DURATION_BOX: "server-duration-box",
                TUTORIAL_BOX: "tutorial-box",
                LEADERBOARD_BOX: "leaderboard1-box",
                BUY_BREAD_BOX: "buy-breads-box",
                BAG_BOX: "bag-box",
                CRATE_BOX: "deadbox-box",
                BOOK_BOX: "book-box",
                ACCESSORIES_BOX: "accessories-box",
                CUSTOM_SKIN_BOX: "customskin-box",
                BAG_REMAIN_BOX: "bag-lasts",
                SERVER_REMAIN_BOX: "server-lasts",
                SERVER_ACCESS_BOX: "server-access-box2",
                LOOT_BOX: "lootbox-box",
                CHANGE_NICKNAME1_BOX: "change-nickname0",
                CHANGE_NICKNAME0_BOX: "change-nickname1",
                CHEATING_BOX: "cheating-box",
                DAILY_QUEST_BOX: "daily-quest-box",
                DAILY_5_BREAD: "daily-5-bread",
                DAILY_10_BREAD: "daily-10-bread",
                DAILY_VALID: "daily-valid",
                NORMAL_PROFILE_OUT: "normal-profile-out",
                NORMAL_PROFILE_IN: "normal-profile-in",
                NORMAL_PROFILE_CLICK: "normal-profile-click",
                FOREST_PROFILE_OUT: "forest-profile-out",
                FOREST_PROFILE_IN: "forest-profile-in",
                FOREST_PROFILE_CLICK: "forest-profile-click",
                ZOMBIE_PROFILE_OUT: "zombie-profile-out",
                ZOMBIE_PROFILE_IN: "zombie-profile-in",
                ZOMBIE_PROFILE_CLICK: "zombie-profile-click",
                VAMPIRE_PROFILE_OUT: "vampire-profile-out",
                VAMPIRE_PROFILE_IN: "vampire-profile-in",
                VAMPIRE_PROFILE_CLICK: "vampire-profile-click",
                TOTAL_PROFILE_OUT: "total-profile-out",
                TOTAL_PROFILE_IN: "total-profile-in",
                TOTAL_PROFILE_CLICK: "total-profile-click",
                SEASON1_PROFILE_OUT: "season1-profile-out",
                SEASON1_PROFILE_IN: "season1-profile-in",
                SEASON1_PROFILE_CLICK: "season1-profile-click",
                SEASON2_PROFILE_OUT: "season2-profile-out",
                SEASON2_PROFILE_IN: "season2-profile-in",
                SEASON2_PROFILE_CLICK: "season2-profile-click",
                SEASON3_PROFILE_OUT: "season3-profile-out",
                SEASON3_PROFILE_IN: "season3-profile-in",
                SEASON3_PROFILE_CLICK: "season3-profile-click",
                SEASON4_PROFILE_OUT: "season4-profile-out",
                SEASON4_PROFILE_IN: "season4-profile-in",
                SEASON4_PROFILE_CLICK: "season4-profile-click",
                SEASON5_PROFILE_OUT: "season5-profile-out",
                SEASON5_PROFILE_IN: "season5-profile-in",
                SEASON5_PROFILE_CLICK: "season5-profile-click",
                LOCKED_SKIN_ALERT: "locked-skin-alert",
                LOCKED_CUSTOM_ALERT: "locked-custom-alert",
                RED_LOCKED: "bg-red-locked",
                SKIN_BUTTON_OUT: "skin-button-out",
                SKIN_BUTTON_IN: "skin-button-in",
                SKIN_BUTTON_CLICK: "skin-button-click",
                ACCESSORY_BUTTON_OUT: "accessory-button-out",
                ACCESSORY_BUTTON_IN: "accessory-button-in",
                ACCESSORY_BUTTON_CLICK: "accessory-button-click",
                BAG_BUTTON_OUT: "bag-button-out",
                BAG_BUTTON_IN: "bag-button-in",
                BAG_BUTTON_CLICK: "bag-button-click",
                BOOK_BUTTON_OUT: "book-button-out",
                BOOK_BUTTON_IN: "book-button-in",
                BOOK_BUTTON_CLICK: "book-button-click",
                CRATE_BUTTON_OUT: "deadbox-button-out",
                CRATE_BUTTON_IN: "deadbox-button-in",
                CRATE_BUTTON_CLICK: "deadbox-button-click",
                LOOT_BUTTON_OUT: "loot-button-out",
                LOOT_BUTTON_IN: "loot-button-in",
                LOOT_BUTTON_CLICK: "loot-button-click",
                FREE_ITEM_OUT: "free-item-out",
                FREE_ITEM_IN: "free-item-in",
                FREE_ITEM_CLICK: "free-item-click",
                WOOD_ITEM_OUT: "wood-item-out",
                WOOD_ITEM_IN: "wood-item-in",
                WOOD_ITEM_CLICK: "wood-item-click",
                STONE_ITEM_OUT: "stone-item",
                STONE_ITEM_IN: "stone-item-in",
                STONE_ITEM_CLICK: "stone-item-click",
                GOLD_ITEM_OUT: "gold-item",
                GOLD_ITEM_IN: "gold-item-in",
                GOLD_ITEM_CLICK: "gold-item-click",
                DIAMOND_ITEM_OUT: "diamond-item",
                DIAMOND_ITEM_IN: "diamond-item-in",
                DIAMOND_ITEM_CLICK: "diamond-item-click",
                AMETHYST_ITEM_OUT: "amethyst-item",
                AMETHYST_ITEM_IN: "amethyst-item-in",
                AMETHYST_ITEM_CLICK: "amethyst-item-click",
                REIDITE_ITEM_OUT: "reidite-item",
                REIDITE_ITEM_IN: "reidite-item-in",
                REIDITE_ITEM_CLICK: "reidite-item-click",
                SPECIAL_ITEM_OUT: "special-item-out",
                SPECIAL_ITEM_IN: "special-item-in",
                SPECIAL_ITEM_CLICK: "special-item-click",
                LEVEL_ITEM_OUT: "level-item-out",
                LEVEL_ITEM_IN: "level-item-in",
                LEVEL_ITEM_CLICK: "level-item-click",
                SKIN_PREVIOUS_OUT: "skin-previous-out",
                SKIN_PREVIOUS_IN: "skin-previous-in",
                SKIN_PREVIOUS_CLICK: "skin-previous-click",
                SKIN_NEXT_OUT: "skin-next-out",
                SKIN_NEXT_IN: "skin-next-in",
                SKIN_NEXT_CLICK: "skin-next-click",
                BACK_BUTTON_OUT: "back-button-out",
                BACK_BUTTON_IN: "back-button-in",
                BACK_BUTTON_CLICK: "back-button-click",
                GET_MORE_BUTTON_OUT: "get-more-button-out",
                GET_MORE_BUTTON_IN: "get-more-button-in",
                GET_MORE_BUTTON_CLICK: "get-more-button-click",
                CURRENCY1_OUT: "currency1-out",
                CURRENCY1_IN: "currency1-in",
                CURRENCY1_CLICK: "currency1-click",
                CURRENCY2_OUT: "currency2-out",
                CURRENCY2_IN: "currency2-in",
                CURRENCY2_CLICK: "currency2-click",
                CURRENCY3_OUT: "currency3-out",
                CURRENCY3_IN: "currency3-in",
                CURRENCY3_CLICK: "currency3-click",
                CURRENCY4_OUT: "currency4-out",
                CURRENCY4_IN: "currency4-in",
                CURRENCY4_CLICK: "currency4-click",
                CURRENCY5_OUT: "currency5-out",
                CURRENCY5_IN: "currency5-in",
                CURRENCY5_CLICK: "currency5-click",
                PRICE1_OUT: "price1-out",
                PRICE1_IN: "price1-in",
                PRICE1_CLICK: "price1-click",
                PRICE2_OUT: "price2-out",
                PRICE2_IN: "price2-in",
                PRICE2_CLICK: "price2-click",
                PRICE3_OUT: "price3-out",
                PRICE3_IN: "price3-in",
                PRICE3_CLICK: "price3-click",
                PRICE4_OUT: "price4-out",
                PRICE4_IN: "price4-in",
                PRICE4_CLICK: "price4-click",
                PRICE5_OUT: "price5-out",
                PRICE5_IN: "price5-in",
                PRICE5_CLICK: "price5-click",
                BUY_PRIVATE_SERVER_OUT: "buy-private-server-out",
                BUY_PRIVATE_SERVER_IN: "buy-private-server-in",
                BUY_PRIVATE_SERVER_CLICK: "buy-private-server-click",
                ATLANTA_OUT: "atlanta-out",
                ATLANTA_IN: "atlanta-in",
                ATLANTA_CLICK: "atlanta-click",
                DALLAS_OUT: "dallas-out",
                DALLAS_IN: "dallas-in",
                DALLAS_CLICK: "dallas-click",
                FREMONT_OUT: "fremont-out",
                FREMONT_IN: "fremont-in",
                FREMONT_CLICK: "fremont-click",
                NEWARK_OUT: "newark-out",
                NEWARK_IN: "newark-in",
                NEWARK_CLICK: "newark-click",
                TORONTO_OUT: "toronto-out",
                TORONTO_IN: "toronto-in",
                TORONTO_CLICK: "toronto-click",
                SINGAPORE_OUT: "singapore-out",
                SINGAPORE_IN: "singapore-in",
                SINGAPORE_CLICK: "singapore-click",
                FRANKFURT_OUT: "frankfurt-out",
                FRANKFURT_IN: "frankfurt-in",
                FRANKFURT_CLICK: "frankfurt-click",
                LONDON_OUT: "london-out",
                LONDON_IN: "london-in",
                LONDON_CLICK: "london-click",
                MUMBAI_OUT: "mumbai-out",
                MUMBAI_IN: "mumbai-in",
                MUMBAI_CLICK: "mumbai-click",
                TOKYO_OUT: "tokyo-out",
                TOKYO_IN: "tokyo-in",
                TOKYO_CLICK: "tokyo-click",
                YES_LOCATION_OUT: "yes-location-out",
                YES_LOCATION_IN: "yes-location-in",
                YES_LOCATION_CLICK: "yes-location-click",
                DAYS3_OUT: "3days-out",
                DAYS3_IN: "3days-in",
                DAYS3_CLICK: "3days-click",
                DAYS7_OUT: "7days-out",
                DAYS7_IN: "7days-in",
                DAYS7_CLICK: "7days-click",
                DAYS30_OUT: "30days-out",
                DAYS30_IN: "30days-in",
                DAYS30_CLICK: "30days-click",
                DAYS90_OUT: "90days-out",
                DAYS90_IN: "90days-in",
                DAYS90_CLICK: "90days-click",
                SPIN1: "spin1",
                SPIN2: "spin2",
                SPIN3: "spin3",
                SPIN4: "spin4",
                SPIN5: "spin5",
                SPIN6: "spin6",
                ARROW_SPIN: "arrow-spin",
                SPIN_BUTTON_1_OUT: "spin-button-1-out",
                SPIN_BUTTON_1_IN: "spin-button-1-in",
                SPIN_BUTTON_1_CLICK: "spin-button-1-click",
                SPIN_BUTTON_2_OUT: "spin-button-2-out",
                SPIN_BUTTON_2_IN: "spin-button-2-in",
                SPIN_BUTTON_2_CLICK: "spin-button-2-click",
                SPIN_BUTTON_3_OUT: "spin-button-3-out",
                SPIN_BUTTON_3_IN: "spin-button-3-in",
                SPIN_BUTTON_3_CLICK: "spin-button-3-click",
                SPIN_BUTTON_4_OUT: "spin-button-4-out",
                SPIN_BUTTON_4_IN: "spin-button-4-in",
                SPIN_BUTTON_4_CLICK: "spin-button-4-click",
                SPIN_BUTTON_5_OUT: "spin-button-5-out",
                SPIN_BUTTON_5_IN: "spin-button-5-in",
                SPIN_BUTTON_5_CLICK: "spin-button-5-click",
                SPIN_LIGHT: "spin-light",
                TIME_LEADERBOARD_OUT: "time-leaderboard-out",
                TIME_LEADERBOARD_IN: "time-leaderboard-in",
                TIME_LEADERBOARD_CLICK: "time-leaderboard-click",
                SCORE_LEADERBOARD_OUT: "score-leaderboard-out",
                SCORE_LEADERBOARD_IN: "score-leaderboard-in",
                SCORE_LEADERBOARD_CLICK: "score-leaderboard-click",
                LVL_LEADERBOARD_OUT: "lvl-leaderboard-out",
                LVL_LEADERBOARD_IN: "lvl-leaderboard-in",
                LVL_LEADERBOARD_CLICK: "lvl-leaderboard-click",
                KILL_LEADERBOARD_OUT: "kill-leaderboard-out",
                KILL_LEADERBOARD_IN: "kill-leaderboard-in",
                KILL_LEADERBOARD_CLICK: "kill-leaderboard-click",
                ALL_LEADERBOARD_OUT: "all-leaderboard-out",
                ALL_LEADERBOARD_IN: "all-leaderboard-in",
                ALL_LEADERBOARD_CLICK: "all-leaderboard-click",
                TODAY_LEADERBOARD_OUT: "today-leaderboard-out",
                TODAY_LEADERBOARD_IN: "today-leaderboard-in",
                TODAY_LEADERBOARD_CLICK: "today-leaderboard-click",
                WEEK_LEADERBOARD_OUT: "week-leaderboard-out",
                WEEK_LEADERBOARD_IN: "week-leaderboard-in",
                WEEK_LEADERBOARD_CLICK: "week-leaderboard-click",
                SEASON1_LEADERBOARD_OUT: "season1-out",
                SEASON1_LEADERBOARD_IN: "season1-in",
                SEASON1_LEADERBOARD_CLICK: "season1-click",
                SEASON2_LEADERBOARD_OUT: "season2--out",
                SEASON2_LEADERBOARD_IN: "season2--in",
                SEASON2_LEADERBOARD_CLICK: "season2--click",
                SEASON3_LEADERBOARD_OUT: "season3-out",
                SEASON3_LEADERBOARD_IN: "season3-in",
                SEASON3_LEADERBOARD_CLICK: "season3-click",
                SEASON4_LEADERBOARD_OUT: "season4-out",
                SEASON4_LEADERBOARD_IN: "season4-in",
                SEASON4_LEADERBOARD_CLICK: "season4-click",
                SEASON5_LEADERBOARD_OUT: "season5-out",
                SEASON5_LEADERBOARD_IN: "season5-in",
                SEASON5_LEADERBOARD_CLICK: "season5-click",
                TOTAL_LEAD_OUT: "total-lead-out",
                TOTAL_LEAD_IN: "total-lead-in",
                TOTAL_LEAD_CLICK: "total-lead-click",
                NORMAL_LEAD_OUT: "normal-lead-out",
                NORMAL_LEAD_IN: "normal-lead-in",
                NORMAL_LEAD_CLICK: "normal-lead-click",
                FOREST_LEAD_OUT: "forest-lead-out",
                FOREST_LEAD_IN: "forest-lead-in",
                FOREST_LEAD_CLICK: "forest-lead-click",
                VAMPIRE_LEAD_OUT: "vampire-lead-out",
                VAMPIRE_LEAD_IN: "vampire-lead-in",
                VAMPIRE_LEAD_CLICK: "vampire-lead-click",
                ZOMBIE_LEAD_OUT: "zombie-lead-out",
                ZOMBIE_LEAD_IN: "zombie-lead-in",
                ZOMBIE_LEAD_CLICK: "zombie-lead-click",
                LEVEL5D: "day-level5",
                LEVEL5N: "night-level5",
                LEVEL10D: "day-level10",
                LEVEL10N: "night-level10",
                LEVEL15D: "day-level15",
                LEVEL15N: "night-level15",
                LEVEL20D: "day-level20",
                LEVEL20N: "night-level20",
                LEVEL25D: "day-level25",
                LEVEL25N: "night-level25",
                LEVEL30D: "day-level30",
                LEVEL30N: "night-level30",
                LEVEL35D: "day-level35",
                LEVEL35N: "night-level35",
                LEVEL40D: "day-level40",
                LEVEL40N: "night-level40",
                LEVEL45D: "day-level45",
                LEVEL45N: "night-level45",
                LEVEL50D: "day-level50",
                LEVEL50N: "night-level50",
                LEVEL55D: "day-level55",
                LEVEL55N: "night-level55",
                LEVEL60D: "day-level60",
                LEVEL60N: "night-level60",
                SKIN_DEVASTD: "day-skin-devast0",
                SKIN_DEVASTN: "night-skin-devast0",
                HAND_DEVASTD: "day-hand-devaster",
                HAND_DEVASTN: "night-hand-devaster",
                SKIN_STARD: "day-skin-star0",
                SKIN_STARN: "night-skin-star0",
                HAND_STARD: "day-hand-star0",
                HAND_STARN: "night-hand-star0",
                SKIN_VAMPIRED: "day-vampire",
                SKIN_VAMPIREN: "night-vampire",
                HAND_VAMPIRED: "day-hand-vampire",
                HAND_VAMPIREN: "night-hand-vampire",
                SKIN_ZOMBIED: "day-zombie",
                SKIN_ZOMBIEN: "night-zombie",
                HAND_ZOMBIED: "day-hand-zombie",
                HAND_ZOMBIEN: "night-hand-zombie",
                SKIN_ROBOTD: "day-skin113",
                SKIN_ROBOTN: "night-skin113",
                HAND_ROBOTD: "day-hand-skin113",
                HAND_ROBOTN: "night-hand-skin113",
                SKIN0D: "day-skin0",
                SKIN0N: "night-skin0",
                SKIN1D: "day-skin1",
                SKIN1N: "night-skin1",
                SKIN2D: "day-skin2",
                SKIN2N: "night-skin2",
                SKIN3D: "day-skin3",
                SKIN3N: "night-skin3",
                SKIN4D: "day-skin4",
                SKIN4N: "night-skin4",
                SKIN5D: "day-skin5",
                SKIN5N: "night-skin5",
                SKIN6D: "day-skin6",
                SKIN6N: "night-skin6",
                SKIN7D: "day-skin7",
                SKIN7N: "night-skin7",
                SKIN8D: "day-skin8",
                SKIN8N: "night-skin8",
                SKIN9D: "day-skin9",
                SKIN9N: "night-skin9",
                SKIN10D: "day-skin10",
                SKIN10N: "night-skin10",
                SKIN11D: "day-skin11",
                SKIN11N: "night-skin11",
                SKIN12D: "day-skin12",
                SKIN12N: "night-skin12",
                SKIN13D: "day-skin13",
                SKIN13N: "night-skin13",
                SKIN14D: "day-skin14",
                SKIN14N: "night-skin14",
                SKIN15D: "day-skin15",
                SKIN15N: "night-skin15",
                SKIN16D: "day-skin16",
                SKIN16N: "night-skin16",
                SKIN17D: "day-skin17",
                SKIN17N: "night-skin17",
                SKIN18D: "day-skin18",
                SKIN18N: "night-skin18",
                SKIN19D: "day-skin19",
                SKIN19N: "night-skin19",
                SKIN20D: "day-skin20",
                SKIN20N: "night-skin20",
                SKIN21D: "day-skin21",
                SKIN21N: "night-skin21",
                SKIN22D: "day-skin22",
                SKIN22N: "night-skin22",
                SKIN23D: "day-skin23",
                SKIN23N: "night-skin23",
                SKIN24D: "day-skin24",
                SKIN24N: "night-skin24",
                SKIN25D: "day-skin25",
                SKIN25N: "night-skin25",
                SKIN26D: "day-skin26",
                SKIN26N: "night-skin26",
                SKIN27D: "day-skin27",
                SKIN27N: "night-skin27",
                SKIN28D: "day-skin28",
                SKIN28N: "night-skin28",
                SKIN29D: "day-skin29",
                SKIN29N: "night-skin29",
                SKIN30D: "day-skin30",
                SKIN30N: "night-skin30",
                SKIN31D: "day-skin31",
                SKIN31N: "night-skin31",
                SKIN32D: "day-skin32",
                SKIN32N: "night-skin32",
                SKIN33D: "day-skin33",
                SKIN33N: "night-skin33",
                SKIN34D: "day-skin34",
                SKIN34N: "night-skin34",
                SKIN35D: "day-skin35",
                SKIN35N: "night-skin35",
                SKIN36D: "day-skin36",
                SKIN36N: "night-skin36",
                SKIN37D: "day-skin37",
                SKIN37N: "night-skin37",
                SKIN38D: "day-skin38",
                SKIN38N: "night-skin38",
                SKIN39D: "day-skin39",
                SKIN39N: "night-skin39",
                SKIN40D: "day-skin40",
                SKIN40N: "night-skin40",
                SKIN41D: "day-skin41",
                SKIN41N: "night-skin41",
                SKIN42D: "day-skin42",
                SKIN42N: "night-skin42",
                SKIN43D: "day-skin43",
                SKIN43N: "night-skin43",
                SKIN44D: "day-skin44",
                SKIN44N: "night-skin44",
                SKIN45D: "day-skin45",
                SKIN45N: "night-skin45",
                SKIN46D: "day-skin46",
                SKIN46N: "night-skin46",
                SKIN47D: "day-skin47",
                SKIN47N: "night-skin47",
                SKIN48D: "day-skin48",
                SKIN48N: "night-skin48",
                SKIN49D: "day-skin49",
                SKIN49N: "night-skin49",
                SKIN50D: "day-skin50",
                SKIN50N: "night-skin50",
                SKIN51D: "day-skin51",
                SKIN51N: "night-skin51",
                SKIN52D: "day-skin52",
                SKIN52N: "night-skin52",
                SKIN53D: "day-skin53",
                SKIN53N: "night-skin53",
                SKIN54D: "day-skin54",
                SKIN54N: "night-skin54",
                SKIN55D: "day-skin55",
                SKIN55N: "night-skin55",
                SKIN56D: "day-skin56",
                SKIN56N: "night-skin56",
                SKIN57D: "day-skin57",
                SKIN57N: "night-skin57",
                SKIN58D: "day-skin58",
                SKIN58N: "night-skin58",
                SKIN59D: "day-skin59",
                SKIN59N: "night-skin59",
                SKIN60D: "day-skin60",
                SKIN60N: "night-skin60",
                SKIN61D: "day-skin61",
                SKIN61N: "night-skin61",
                SKIN62D: "day-skin62",
                SKIN62N: "night-skin62",
                SKIN63D: "day-skin63",
                SKIN63N: "night-skin63",
                SKIN64D: "day-skin64",
                SKIN64N: "night-skin64",
                SKIN65D: "day-skin65",
                SKIN65N: "night-skin65",
                SKIN66D: "day-skin66",
                SKIN66N: "night-skin66",
                SKIN67D: "day-skin67",
                SKIN67N: "night-skin67",
                SKIN68D: "day-skin68",
                SKIN68N: "night-skin68",
                SKIN69D: "day-skin69",
                SKIN69N: "night-skin69",
                SKIN70D: "day-skin70",
                SKIN70N: "night-skin70",
                SKIN71D: "day-skin71",
                SKIN71N: "night-skin71",
                SKIN72D: "day-skin72",
                SKIN72N: "night-skin72",
                SKIN73D: "day-skin73",
                SKIN73N: "night-skin73",
                SKIN74D: "day-skin74",
                SKIN74N: "night-skin74",
                SKIN75D: "day-skin75",
                SKIN75N: "night-skin75",
                SKIN76D: "day-skin76",
                SKIN76N: "night-skin76",
                SKIN77D: "day-skin77",
                SKIN77N: "night-skin77",
                SKIN78D: "day-skin78",
                SKIN78N: "night-skin78",
                SKIN79D: "day-skin79",
                SKIN79N: "night-skin79",
                SKIN80D: "day-skin80",
                SKIN80N: "night-skin80",
                SKIN81D: "day-skin81",
                SKIN81N: "night-skin81",
                SKIN82D: "day-skin82",
                SKIN82N: "night-skin82",
                SKIN83D: "day-skin83",
                SKIN83N: "night-skin83",
                SKIN84D: "day-skin84",
                SKIN84N: "night-skin84",
                SKIN85D: "day-skin85",
                SKIN85N: "night-skin85",
                SKIN86D: "day-skin86",
                SKIN86N: "night-skin86",
                SKIN87D: "day-skin87",
                SKIN87N: "night-skin87",
                SKIN88D: "day-skin88",
                SKIN88N: "night-skin88",
                SKIN89D: "day-skin89",
                SKIN89N: "night-skin89",
                SKIN90D: "day-skin90",
                SKIN90N: "night-skin90",
                SKIN91D: "day-skin91",
                SKIN91N: "night-skin91",
                SKIN92D: "day-skin92",
                SKIN92N: "night-skin92",
                SKIN93D: "day-skin93",
                SKIN93N: "night-skin93",
                SKIN94D: "day-skin94",
                SKIN94N: "night-skin94",
                SKIN95D: "day-skin95",
                SKIN95N: "night-skin95",
                SKIN96D: "day-skin96",
                SKIN96N: "night-skin96",
                SKIN97D: "day-skin97",
                SKIN97N: "night-skin97",
                SKIN98D: "day-skin98",
                SKIN98N: "night-skin98",
                SKIN99D: "day-skin99",
                SKIN99N: "night-skin99",
                SKIN100D: "day-skin100",
                SKIN100N: "night-skin100",
                SKIN101D: "day-skin101",
                SKIN101N: "night-skin101",
                SKIN102D: "day-skin102",
                SKIN102N: "night-skin102",
                SKIN103D: "day-skin103",
                SKIN103N: "night-skin103",
                SKIN104D: "day-skin104",
                SKIN104N: "night-skin104",
                SKIN105D: "day-skin105",
                SKIN105N: "night-skin105",
                SKIN106D: "day-skin106",
                SKIN106N: "night-skin106",
                SKIN107D: "day-skin107",
                SKIN107N: "night-skin107",
                SKIN108D: "day-skin108",
                SKIN108N: "night-skin108",
                SKIN109D: "day-skin109",
                SKIN109N: "night-skin109",
                SKIN110D: "day-skin110",
                SKIN110N: "night-skin110",
                SKIN111D: "day-skin111",
                SKIN111N: "night-skin111",
                SKIN112D: "day-skin112",
                SKIN112N: "night-skin112",
                SKIN113D: "day-skin113",
                SKIN113N: "night-skin113",
                SKIN114D: "day-skin114",
                SKIN114N: "night-skin114",
                SKIN115D: "day-skin115",
                SKIN115N: "night-skin115",
                SKIN116D: "day-skin116",
                SKIN116N: "night-skin116",
                SKIN117D: "day-skin117",
                SKIN117N: "night-skin117",
                SKIN118D: "day-skin118",
                SKIN118N: "night-skin118",
                SKIN119D: "day-skin119",
                SKIN119N: "night-skin119",
                SKIN120D: "day-skin120",
                SKIN120N: "night-skin120",
                SKIN121D: "day-skin121",
                SKIN121N: "night-skin121",
                SKIN122D: "day-skin122",
                SKIN122N: "night-skin122",
                SKIN123D: "day-skin123",
                SKIN123N: "night-skin123",
                SKIN124D: "day-skin124",
                SKIN124N: "night-skin124",
                SKIN125D: "day-skin125",
                SKIN125N: "night-skin125",
                SKIN126D: "day-skin126",
                SKIN126N: "night-skin126",
                SKIN127D: "day-skin127",
                SKIN127N: "night-skin127",
                SKIN128D: "day-skin128",
                SKIN128N: "night-skin128",
                SKIN129D: "day-skin129",
                SKIN129N: "night-skin129",
                SKIN130D: "day-skin130-1",
                SKIN130N: "night-skin130-1",
                SKIN131D: "day-skin131",
                SKIN131N: "night-skin131",
                SKIN132D: "day-skin132",
                SKIN132N: "night-skin132",
                SKIN133D: "day-skin133",
                SKIN133N: "night-skin133",
                SKIN134D: "day-skin134",
                SKIN134N: "night-skin134",
                SKIN135D: "day-skin135",
                SKIN135N: "night-skin135",
                SKIN136D: "day-skin136",
                SKIN136N: "night-skin136",
                SKIN137D: "day-skin137",
                SKIN137N: "night-skin137",
                SKIN138D: "day-skin138",
                SKIN138N: "night-skin138",
                SKIN139D: "day-skin139",
                SKIN139N: "night-skin139",
                SKIN140D: "day-skin140",
                SKIN140N: "night-skin140",
                SKIN141D: "day-skin141",
                SKIN141N: "night-skin141",
                SKIN142D: "day-skin142",
                SKIN142N: "night-skin142",
                SKIN143D: "day-skin143",
                SKIN143N: "night-skin143",
                SKIN144D: "day-skin144",
                SKIN144N: "night-skin144",
                SKIN145D: "day-skin145",
                SKIN145N: "night-skin145",
                SKIN146D: "day-skin146",
                SKIN146N: "night-skin146",
                SKIN147D: "day-skin147",
                SKIN147N: "night-skin147",
                SKIN148D: "day-skin148",
                SKIN148N: "night-skin148",
                SKIN149D: "day-skin149",
                SKIN149N: "night-skin149",
                SKIN150D: "day-skin150",
                SKIN150N: "night-skin150",
                HAND_SKIN0D: "day-hand-skin0",
                HAND_SKIN0N: "night-hand-skin0",
                HAND_SKIN1D: "day-hand-skin1",
                HAND_SKIN1N: "night-hand-skin1",
                HAND_SKIN2D: "day-hand-skin2",
                HAND_SKIN2N: "night-hand-skin2",
                HAND_SKIN3D: "day-hand-skin3",
                HAND_SKIN3N: "night-hand-skin3",
                HAND_SKIN4D: "day-hand-skin4",
                HAND_SKIN4N: "night-hand-skin4",
                HAND_SKIN5D: "day-hand-skin5",
                HAND_SKIN5N: "night-hand-skin5",
                HAND_SKIN6D: "day-hand-skin6",
                HAND_SKIN6N: "night-hand-skin6",
                HAND_SKIN7D: "day-hand-skin6",
                HAND_SKIN7N: "night-hand-skin6",
                HAND_SKIN8D: "day-hand-skin8",
                HAND_SKIN8N: "night-hand-skin8",
                HAND_SKIN9D: "day-hand-skin9",
                HAND_SKIN9N: "night-hand-skin9",
                HAND_SKIN10D: "day-hand-skin10",
                HAND_SKIN10N: "night-hand-skin10",
                HAND_SKIN11D: "day-hand-skin11",
                HAND_SKIN11N: "night-hand-skin11",
                HAND_SKIN12D: "day-hand-skin12",
                HAND_SKIN12N: "night-hand-skin12",
                HAND_SKIN13D: "day-hand-skin13",
                HAND_SKIN13N: "night-hand-skin13",
                HAND_SKIN14D: "day-hand-skin14",
                HAND_SKIN14N: "night-hand-skin14",
                HAND_SKIN15D: "day-hand-skin15",
                HAND_SKIN15N: "night-hand-skin15",
                HAND_SKIN16D: "day-hand-skin16",
                HAND_SKIN16N: "night-hand-skin16",
                HAND_SKIN17D: "day-hand-skin17",
                HAND_SKIN17N: "night-hand-skin17",
                HAND_SKIN18D: "day-hand-skin18",
                HAND_SKIN18N: "night-hand-skin18",
                HAND_SKIN19D: "day-hand-skin19",
                HAND_SKIN19N: "night-hand-skin19",
                HAND_SKIN20D: "day-hand-skin20",
                HAND_SKIN20N: "night-hand-skin20",
                HAND_SKIN21D: "day-hand-skin21",
                HAND_SKIN21N: "night-hand-skin21",
                HAND_SKIN22D: "day-hand-skin22",
                HAND_SKIN22N: "night-hand-skin22",
                HAND_SKIN23D: "day-hand-skin23",
                HAND_SKIN23N: "night-hand-skin23",
                HAND_SKIN24D: "day-hand-skin24",
                HAND_SKIN24N: "night-hand-skin24",
                HAND_SKIN25D: "day-hand-skin25",
                HAND_SKIN25N: "night-hand-skin25",
                HAND_SKIN26D: "day-hand-skin26",
                HAND_SKIN26N: "night-hand-skin26",
                HAND_SKIN27D: "day-hand-skin27",
                HAND_SKIN27N: "night-hand-skin27",
                HAND_SKIN28D: "day-hand-skin28",
                HAND_SKIN28N: "night-hand-skin28",
                HAND_SKIN29D: "day-hand-skin29",
                HAND_SKIN29N: "night-hand-skin29",
                HAND_SKIN30D: "day-hand-skin30",
                HAND_SKIN30N: "night-hand-skin30",
                HAND_SKIN31D: "day-hand-skin31",
                HAND_SKIN31N: "night-hand-skin31",
                HAND_SKIN32D: "day-hand-skin32",
                HAND_SKIN32N: "night-hand-skin32",
                HAND_SKIN33D: "day-hand-skin33",
                HAND_SKIN33N: "night-hand-skin33",
                HAND_SKIN34D: "day-hand-skin34",
                HAND_SKIN34N: "night-hand-skin34",
                HAND_SKIN35D: "day-hand-skin35",
                HAND_SKIN35N: "night-hand-skin35",
                HAND_SKIN36D: "day-hand-skin36",
                HAND_SKIN36N: "night-hand-skin36",
                HAND_SKIN37D: "day-hand-skin37",
                HAND_SKIN37N: "night-hand-skin37",
                HAND_SKIN38D: "day-hand-skin38",
                HAND_SKIN38N: "night-hand-skin38",
                HAND_SKIN39D: "day-hand-skin39",
                HAND_SKIN39N: "night-hand-skin39",
                HAND_SKIN40D: "day-hand-skin40",
                HAND_SKIN40N: "night-hand-skin40",
                HAND_SKIN41D: "day-hand-skin41",
                HAND_SKIN41N: "night-hand-skin41",
                HAND_SKIN42D: "day-hand-skin42",
                HAND_SKIN42N: "night-hand-skin42",
                HAND_SKIN43D: "day-hand-skin43",
                HAND_SKIN43N: "night-hand-skin43",
                HAND_SKIN44D: "day-hand-skin16",
                HAND_SKIN44N: "night-hand-skin16",
                HAND_SKIN45D: "day-hand-skin45",
                HAND_SKIN45N: "night-hand-skin45",
                HAND_SKIN46D: "day-hand-skin46",
                HAND_SKIN46N: "night-hand-skin46",
                HAND_SKIN47D: "day-hand-skin47",
                HAND_SKIN47N: "night-hand-skin47",
                HAND_SKIN48D: "day-hand-skin48",
                HAND_SKIN48N: "night-hand-skin48",
                HAND_SKIN49D: "day-hand-skin49",
                HAND_SKIN49N: "night-hand-skin49",
                HAND_SKIN50D: "day-hand-skin49",
                HAND_SKIN50N: "night-hand-skin49",
                HAND_SKIN51D: "day-hand-skin51",
                HAND_SKIN51N: "night-hand-skin51",
                HAND_SKIN52D: "day-hand-skin52",
                HAND_SKIN52N: "night-hand-skin52",
                HAND_SKIN53D: "day-hand-skin53",
                HAND_SKIN53N: "night-hand-skin53",
                HAND_SKIN54D: "day-hand-skin53",
                HAND_SKIN54N: "night-hand-skin53",
                HAND_SKIN55D: "day-hand-skin55",
                HAND_SKIN55N: "night-hand-skin55",
                HAND_SKIN56D: "day-hand-skin56",
                HAND_SKIN56N: "night-hand-skin56",
                HAND_SKIN57D: "day-hand-skin57",
                HAND_SKIN57N: "night-hand-skin57",
                HAND_SKIN58D: "day-hand-skin58",
                HAND_SKIN58N: "night-hand-skin58",
                HAND_SKIN59D: "day-hand-skin59",
                HAND_SKIN59N: "night-hand-skin59",
                HAND_SKIN60D: "day-hand-skin61",
                HAND_SKIN60N: "night-hand-skin61",
                HAND_SKIN61D: "day-hand-skin61",
                HAND_SKIN61N: "night-hand-skin61",
                HAND_SKIN62D: "day-hand-skin62",
                HAND_SKIN62N: "night-hand-skin62",
                HAND_SKIN63D: "day-hand-skin63",
                HAND_SKIN63N: "night-hand-skin63",
                HAND_SKIN64D: "day-hand-skin64",
                HAND_SKIN64N: "night-hand-skin64",
                HAND_SKIN65D: "day-hand-skin65",
                HAND_SKIN65N: "night-hand-skin65",
                HAND_SKIN66D: "day-hand-skin66",
                HAND_SKIN66N: "night-hand-skin66",
                HAND_SKIN67D: "day-hand-skin67",
                HAND_SKIN67N: "night-hand-skin67",
                HAND_SKIN68D: "day-hand-skin68",
                HAND_SKIN68N: "night-hand-skin68",
                HAND_SKIN69D: "day-hand-skin69",
                HAND_SKIN69N: "night-hand-skin69",
                HAND_SKIN70D: "day-hand-skin70",
                HAND_SKIN70N: "night-hand-skin70",
                HAND_SKIN71D: "day-hand-skin71",
                HAND_SKIN71N: "night-hand-skin71",
                HAND_SKIN72D: "day-hand-skin72",
                HAND_SKIN72N: "night-hand-skin72",
                HAND_SKIN73D: "day-hand-skin73",
                HAND_SKIN73N: "night-hand-skin73",
                HAND_SKIN74D: "day-hand-skin74",
                HAND_SKIN74N: "night-hand-skin74",
                HAND_SKIN75D: "day-hand-skin75",
                HAND_SKIN75N: "night-hand-skin75",
                HAND_SKIN76D: "day-hand-skin76",
                HAND_SKIN76N: "night-hand-skin76",
                HAND_SKIN77D: "day-hand-skin77",
                HAND_SKIN77N: "night-hand-skin77",
                HAND_SKIN78D: "day-hand-skin78",
                HAND_SKIN78N: "night-hand-skin78",
                HAND_SKIN79D: "day-hand-skin79",
                HAND_SKIN79N: "night-hand-skin79",
                HAND_SKIN80D: "day-hand-skin80",
                HAND_SKIN80N: "night-hand-skin80",
                HAND_SKIN81D: "day-hand-skin81",
                HAND_SKIN81N: "night-hand-skin81",
                HAND_SKIN82D: "day-hand-skin82",
                HAND_SKIN82N: "night-hand-skin82",
                HAND_SKIN83D: "day-hand-skin83",
                HAND_SKIN83N: "night-hand-skin83",
                HAND_SKIN84D: "day-hand-skin84",
                HAND_SKIN84N: "night-hand-skin84",
                HAND_SKIN85D: "day-hand-skin85",
                HAND_SKIN85N: "night-hand-skin85",
                HAND_SKIN86D: "day-hand-skin86",
                HAND_SKIN86N: "night-hand-skin86",
                HAND_SKIN87D: "day-hand-skin87",
                HAND_SKIN87N: "night-hand-skin87",
                HAND_SKIN88D: "day-hand-skin88",
                HAND_SKIN88N: "night-hand-skin88",
                HAND_SKIN89D: "day-hand-skin89",
                HAND_SKIN89N: "night-hand-skin89",
                HAND_SKIN90D: "day-hand-skin90",
                HAND_SKIN90N: "night-hand-skin90",
                HAND_SKIN91D: "day-hand-skin91",
                HAND_SKIN91N: "night-hand-skin91",
                HAND_SKIN92D: "day-hand-skin92",
                HAND_SKIN92N: "night-hand-skin92",
                HAND_SKIN93D: "day-hand-skin93",
                HAND_SKIN93N: "night-hand-skin93",
                HAND_SKIN94D: "day-hand-skin94",
                HAND_SKIN94N: "night-hand-skin94",
                HAND_SKIN95D: "day-hand-skin95",
                HAND_SKIN95N: "night-hand-skin95",
                HAND_SKIN96D: "day-hand-skin96",
                HAND_SKIN96N: "night-hand-skin96",
                HAND_SKIN97D: "day-hand-skin97",
                HAND_SKIN97N: "night-hand-skin97",
                HAND_SKIN98D: "day-hand-skin98",
                HAND_SKIN98N: "night-hand-skin98",
                HAND_SKIN99D: "day-hand-skin99",
                HAND_SKIN99N: "night-hand-skin99",
                HAND_SKIN100D: "day-hand-skin100",
                HAND_SKIN100N: "night-hand-skin100",
                HAND_SKIN101D: "day-hand-skin101",
                HAND_SKIN101N: "night-hand-skin101",
                HAND_SKIN102D: "day-hand-skin102",
                HAND_SKIN102N: "night-hand-skin102",
                HAND_SKIN103D: "day-hand-skin103",
                HAND_SKIN103N: "night-hand-skin103",
                HAND_SKIN104D: "day-hand-skin104",
                HAND_SKIN104N: "night-hand-skin104",
                HAND_SKIN105D: "day-hand-skin105",
                HAND_SKIN105N: "night-hand-skin105",
                HAND_SKIN106D: "day-hand-skin106",
                HAND_SKIN106N: "night-hand-skin106",
                HAND_SKIN107D: "day-hand-skin107",
                HAND_SKIN107N: "night-hand-skin107",
                HAND_SKIN108D: "day-hand-skin108",
                HAND_SKIN108N: "night-hand-skin108",
                HAND_SKIN109D: "day-hand-skin109",
                HAND_SKIN109N: "night-hand-skin109",
                HAND_SKIN110D: "day-hand-skin110",
                HAND_SKIN110N: "night-hand-skin110",
                HAND_SKIN111D: "day-hand-skin111",
                HAND_SKIN111N: "night-hand-skin111",
                HAND_SKIN112D: "day-hand-skin112",
                HAND_SKIN112N: "night-hand-skin112",
                HAND_SKIN113D: "day-hand-skin113",
                HAND_SKIN113N: "night-hand-skin113",
                HAND_SKIN114D: "day-hand-skin114",
                HAND_SKIN114N: "night-hand-skin114",
                HAND_SKIN115D: "day-hand-skin115",
                HAND_SKIN115N: "night-hand-skin115",
                HAND_SKIN116D: "day-hand-skin116",
                HAND_SKIN116N: "night-hand-skin116",
                HAND_SKIN117D: "day-hand-skin117",
                HAND_SKIN117N: "night-hand-skin117",
                HAND_SKIN118D: "day-hand-skin118",
                HAND_SKIN118N: "night-hand-skin118",
                HAND_SKIN119D: "day-hand-skin119",
                HAND_SKIN119N: "night-hand-skin119",
                HAND_SKIN120D: "day-hand-skin120",
                HAND_SKIN120N: "night-hand-skin120",
                HAND_SKIN121D: "day-hand-skin122",
                HAND_SKIN121N: "night-hand-skin122",
                HAND_SKIN122D: "day-hand-skin122",
                HAND_SKIN122N: "night-hand-skin122",
                HAND_SKIN123D: "day-hand-skin122",
                HAND_SKIN123N: "night-hand-skin122",
                HAND_SKIN124D: "day-hand-skin124",
                HAND_SKIN124N: "night-hand-skin124",
                HAND_SKIN125D: "day-hand-skin125",
                HAND_SKIN125N: "night-hand-skin125",
                HAND_SKIN126D: "day-hand-skin126",
                HAND_SKIN126N: "night-hand-skin126",
                HAND_SKIN127D: "day-hand-skin127",
                HAND_SKIN127N: "night-hand-skin127",
                HAND_SKIN128D: "day-hand-skin128",
                HAND_SKIN128N: "night-hand-skin128",
                HAND_SKIN129D: "day-hand-skin129",
                HAND_SKIN129N: "night-hand-skin129",
                HAND_SKIN130D: "day-hand-skin130",
                HAND_SKIN130N: "night-hand-skin130",
                HAND_SKIN131D: "day-hand-skin131",
                HAND_SKIN131N: "night-hand-skin131",
                HAND_SKIN132D: "day-hand-skin130",
                HAND_SKIN132N: "night-hand-skin130",
                HAND_SKIN133D: "day-hand-skin133",
                HAND_SKIN133N: "night-hand-skin133",
                HAND_SKIN134D: "day-hand-skin134",
                HAND_SKIN134N: "night-hand-skin134",
                HAND_SKIN135D: "day-hand-skin135",
                HAND_SKIN135N: "night-hand-skin135",
                HAND_SKIN136D: "day-hand-skin136",
                HAND_SKIN136N: "night-hand-skin136",
                HAND_SKIN137D: "day-hand-skin137",
                HAND_SKIN137N: "night-hand-skin137",
                HAND_SKIN138D: "day-hand-skin138",
                HAND_SKIN138N: "night-hand-skin138",
                HAND_SKIN139D: "day-hand-skin139",
                HAND_SKIN139N: "night-hand-skin139",
                HAND_SKIN140D: "day-hand-skin140",
                HAND_SKIN140N: "night-hand-skin140",
                HAND_SKIN141D: "day-hand-skin141",
                HAND_SKIN141N: "night-hand-skin141",
                HAND_SKIN142D: "day-hand-skin142",
                HAND_SKIN142N: "night-hand-skin142",
                HAND_SKIN143D: "day-hand-skin143",
                HAND_SKIN143N: "night-hand-skin143",
                HAND_SKIN144D: "day-hand-skin144",
                HAND_SKIN144N: "night-hand-skin144",
                HAND_SKIN145D: "day-hand-skin145",
                HAND_SKIN145N: "night-hand-skin145",
                HAND_SKIN146D: "day-hand-skin146",
                HAND_SKIN146N: "night-hand-skin146",
                HAND_SKIN147D: "day-hand-skin147",
                HAND_SKIN147N: "night-hand-skin147",
                HAND_SKIN148D: "day-hand-skin148",
                HAND_SKIN148N: "night-hand-skin148",
                HAND_SKIN149D: "day-hand-skin149",
                HAND_SKIN149N: "night-hand-skin149",
                HAND_SKIN150D: "day-hand-skin150",
                HAND_SKIN150N: "night-hand-skin150",
                BAG_STARD: "day-bag-star0",
                BAG_STARN: "night-bag-star0",
                BAG0D: "day-bag0",
                BAG0N: "night-bag0",
                BAG1D: "day-bag1",
                BAG1N: "night-bag1",
                BAG2D: "day-bag2",
                BAG2N: "night-bag2",
                BAG3D: "day-bag3",
                BAG3N: "night-bag3",
                BAG4D: "day-bag4",
                BAG4N: "night-bag4",
                BAG5D: "day-bag5",
                BAG5N: "night-bag5",
                BAG6D: "day-bag6",
                BAG6N: "night-bag6",
                BAG7D: "day-bag7",
                BAG7N: "night-bag7",
                BAG8D: "day-bag8",
                BAG8N: "night-bag8",
                BAG9D: "day-bag9",
                BAG9N: "night-bag9",
                BAG10D: "day-bag10",
                BAG10N: "night-bag10",
                BAG11D: "day-bag11",
                BAG11N: "night-bag11",
                BAG13D: "day-bag13",
                BAG13N: "night-bag13",
                BAG14D: "day-bag14",
                BAG14N: "night-bag14",
                BAG16D: "day-bag16",
                BAG16N: "night-bag16",
                BAG17D: "day-bag17",
                BAG17N: "night-bag17",
                BAG18D: "day-bag18",
                BAG18N: "night-bag18",
                BAG19D: "day-bag19",
                BAG19N: "night-bag19",
                BAG20D: "day-bag20",
                BAG20N: "night-bag20",
                BAG21D: "day-bag21",
                BAG21N: "night-bag21",
                BAG22D: "day-bag22",
                BAG22N: "night-bag22",
                BAG23D: "day-bag23",
                BAG23N: "night-bag23",
                BAG24D: "day-bag24",
                BAG24N: "night-bag24",
                BAG25D: "day-bag25",
                BAG25N: "night-bag25",
                BAG26D: "day-bag26",
                BAG26N: "night-bag26",
                BAG27D: "day-bag27",
                BAG27N: "night-bag27",
                BAG28D: "day-bag28",
                BAG28N: "night-bag28",
                BAG29D: "day-bag29",
                BAG29N: "night-bag29",
                BAG30D: "day-bag30",
                BAG30N: "night-bag30",
                BAG31D: "day-bag31",
                BAG31N: "night-bag31",
                BAG32D: "day-bag32",
                BAG32N: "night-bag32",
                BAG33D: "day-bag33",
                BAG33N: "night-bag33",
                BAG34D: "day-bag34",
                BAG34N: "night-bag34",
                BAG35D: "day-bag35",
                BAG35N: "night-bag35",
                BAG36D: "day-bag36",
                BAG36N: "night-bag36",
                BAG37D: "day-bag37",
                BAG37N: "night-bag37",
                BAG38D: "day-bag38",
                BAG38N: "night-bag38",
                BAG39D: "day-bag39",
                BAG39N: "night-bag39",
                BAG40D: "day-bag40",
                BAG40N: "night-bag40",
                BAG41D: "day-bag41",
                BAG41N: "night-bag41",
                BAG42D: "day-bag42",
                BAG42N: "night-bag42",
                BAG43D: "day-bag43",
                BAG43N: "night-bag43",
                BAG44D: "day-bag44",
                BAG44N: "night-bag44",
                BAG45D: "day-bag45",
                BAG45N: "night-bag45",
                BAG46D: "day-bag46",
                BAG46N: "night-bag46",
                BAG47D: "day-bag47",
                BAG47N: "night-bag47",
                BAG48D: "day-bag48",
                BAG48N: "night-bag48",
                BAG49D: "day-bag49",
                BAG49N: "night-bag49",
                BAG50D: "day-bag50",
                BAG50N: "night-bag50",
                BAG51D: "day-bag51",
                BAG51N: "night-bag51",
                BAG52D: "day-bag52",
                BAG52N: "night-bag52",
                BAG53D: "day-bag53",
                BAG53N: "night-bag53",
                BAG54D: "day-bag54",
                BAG54N: "night-bag54",
                BAG55D: "day-bag55",
                BAG55N: "night-bag55",
                BAG56D: "day-bag56",
                BAG56N: "night-bag56",
                BAG57D: "day-bag57",
                BAG57N: "night-bag57",
                BAG58D: "day-bag58",
                BAG58N: "night-bag58",
                BAG59D: "day-bag59",
                BAG59N: "night-bag59",
                BAG60D: "day-bag60",
                BAG60N: "night-bag60",
                BAG61D: "day-bag61",
                BAG61N: "night-bag61",
                BAG62D: "day-bag62",
                BAG62N: "night-bag62",
                BAG63D: "day-bag63",
                BAG63N: "night-bag63",
                BAG64D: "day-bag64",
                BAG64N: "night-bag64",
                BAG65D: "day-bag65",
                BAG65N: "night-bag65",
                BAG66D: "day-bag66",
                BAG66N: "night-bag66",
                BAG67D: "day-bag67",
                BAG67N: "night-bag67",
                BAG68D: "day-bag68",
                BAG68N: "night-bag68",
                ACCESSORY0D: "day-accessory0",
                ACCESSORY17D: "day-accessory0-pacques",
                ACCESSORY17N: "night-accessory0-pacques",
                ACCESSORY13D: "day-accessory13",
                ACCESSORY13N: "night-accessory13",
                ACCESSORY14D: "day-accessory14",
                ACCESSORY14N: "night-accessory14",
                ACCESSORY15D: "day-accessory15",
                ACCESSORY15N: "night-accessory15",
                ACCESSORY16D: "day-accessory16",
                ACCESSORY16N: "night-accessory16",
                ACCESSORY18D: "day-accessory17",
                ACCESSORY18N: "day-accessory17",
                ACCESSORY19D: "day-accessory19",
                ACCESSORY19N: "night-accessory19",
                ACCESSORY20D: "day-accessory20",
                ACCESSORY20N: "night-accessory20",
                ACCESSORY21D: "day-accessory21",
                ACCESSORY21N: "night-accessory21",
                ACCESSORY22D: "day-accessory22",
                ACCESSORY22N: "night-accessory22",
                ACCESSORY23D: "day-accessory23",
                ACCESSORY23N: "night-accessory23",
                ACCESSORY24D: "day-accessory24",
                ACCESSORY24N: "night-accessory24",
                ACCESSORY25D: "day-accessory25",
                ACCESSORY25N: "night-accessory25",
                ACCESSORY26D: "day-accessory26",
                ACCESSORY26N: "night-accessory26",
                ACCESSORY27D: "day-accessory27",
                ACCESSORY27N: "night-accessory27",
                ACCESSORY28D: "day-accessory18",
                ACCESSORY28N: "night-accessory18",
                ACCESSORY29D: "day-accessory29",
                ACCESSORY29N: "night-accessory29",
                ACCESSORY30D: "day-accessory30",
                ACCESSORY30N: "night-accessory30",
                ACCESSORY31D: "day-accessory31",
                ACCESSORY31N: "night-accessory31",
                ACCESSORY32D: "day-accessory32",
                ACCESSORY32N: "night-accessory32",
                ACCESSORY33D: "day-accessory33",
                ACCESSORY33N: "night-accessory33",
                ACCESSORY34D: "day-accessory34",
                ACCESSORY34N: "night-accessory34",
                ACCESSORY35D: "day-accessory35",
                ACCESSORY35N: "night-accessory35",
                ACCESSORY36D: "day-accessory28",
                ACCESSORY36N: "night-accessory28",
                ACCESSORY37D: "day-accessory36",
                ACCESSORY37N: "night-accessory36",
                ACCESSORY38D: "day-accessory37",
                ACCESSORY38N: "night-accessory37",
                ACCESSORY39D: "day-accessory39",
                ACCESSORY39N: "night-accessory39",
                ACCESSORY40D: "day-accessory40",
                ACCESSORY40N: "night-accessory40",
                ACCESSORY41D: "day-accessory41",
                ACCESSORY41N: "night-accessory41",
                ACCESSORY42D: "day-accessory42",
                ACCESSORY42N: "night-accessory42",
                ACCESSORY43D: "day-accessory43",
                ACCESSORY43N: "night-accessory43",
                ACCESSORY44D: "day-accessory44",
                ACCESSORY44N: "night-accessory44",
                ACCESSORY45D: "day-accessory38",
                ACCESSORY45N: "night-accessory38",
                ACCESSORY46D: "day-accessory46",
                ACCESSORY46N: "night-accessory46",
                ACCESSORY47D: "day-accessory47",
                ACCESSORY47N: "night-accessory47",
                ACCESSORY48D: "day-accessory48",
                ACCESSORY48N: "night-accessory48",
                ACCESSORY49D: "day-accessory49",
                ACCESSORY49N: "night-accessory49",
                ACCESSORY50D: "day-accessory45",
                ACCESSORY50N: "night-accessory45",
                ACCESSORY51D: "day-accessory50",
                ACCESSORY51N: "night-accessory50",
                ACCESSORY52D: "day-accessory51",
                ACCESSORY52N: "night-accessory51",
                ACCESSORY53D: "day-accessory52",
                ACCESSORY53N: "night-accessory52",
                ACCESSORY54D: "day-accessory53",
                ACCESSORY54N: "night-accessory53",
                ACCESSORY55D: "day-accessory54",
                ACCESSORY55N: "night-accessory54",
                ACCESSORY56D: "day-accessory55",
                ACCESSORY56N: "night-accessory55",
                ACCESSORY57D: "day-accessory56",
                ACCESSORY57N: "night-accessory56",
                ACCESSORY58D: "day-accessory57",
                ACCESSORY58N: "night-accessory57",
                ACCESSORY59D: "day-accessory58",
                ACCESSORY59N: "night-accessory58",
                ACCESSORY60D: "day-accessory59",
                ACCESSORY60N: "night-accessory59",
                ACCESSORY61D: "day-accessory60",
                ACCESSORY61N: "night-accessory60",
                ACCESSORY62D: "day-accessory61",
                ACCESSORY62N: "night-accessory61",
                ACCESSORY63D: "day-accessory62",
                ACCESSORY63N: "night-accessory62",
                ACCESSORY64D: "day-accessory63",
                ACCESSORY64N: "night-accessory63",
                ACCESSORY65D: "day-accessory64",
                ACCESSORY65N: "night-accessory64",
                ACCESSORY66D: "day-accessory65",
                ACCESSORY66N: "night-accessory65",
                ACCESSORY67D: "day-accessory66",
                ACCESSORY67N: "night-accessory66",
                ACCESSORY68D: "day-accessory67",
                ACCESSORY68N: "night-accessory67",
                ACCESSORY69D: "day-accessory68",
                ACCESSORY69N: "night-accessory68",
                ACCESSORY70D: "day-accessory69",
                ACCESSORY70N: "night-accessory69",
                ACCESSORY71D: "day-accessory70",
                ACCESSORY71N: "night-accessory70",
                ACCESSORY72D: "day-accessory71",
                ACCESSORY72N: "night-accessory71",
                ACCESSORY73D: "day-accessory72",
                ACCESSORY73N: "night-accessory72",
                ACCESSORY74D: "day-accessory73",
                ACCESSORY74N: "night-accessory73",
                ACCESSORY75D: "day-accessory74",
                ACCESSORY75N: "night-accessory74",
                ACCESSORY76D: "day-accessory75",
                ACCESSORY76N: "night-accessory75",
                ACCESSORY77D: "day-accessory76",
                ACCESSORY77N: "night-accessory76",
                ACCESSORY78D: "day-accessory77",
                ACCESSORY78N: "night-accessory77",
                ACCESSORY79D: "day-accessory78",
                ACCESSORY79N: "night-accessory78",
                ACCESSORY80D: "day-accessory79",
                ACCESSORY80N: "night-accessory79",
                ACCESSORY81D: "day-accessory80",
                ACCESSORY81N: "night-accessory80",
                ACCESSORY82D: "day-accessory81",
                ACCESSORY82N: "night-accessory81",
                BOOK0D: "day-book0",
                BOOK0N: "night-book0",
                BOOK1D: "day-book1",
                BOOK1N: "night-book1",
                BOOK2D: "day-book2",
                BOOK2N: "night-book2",
                BOOK3D: "day-book3",
                BOOK3N: "night-book3",
                BOOK4D: "day-book4",
                BOOK4N: "night-book4",
                BOOK5D: "day-book5",
                BOOK5N: "night-book5",
                BOOK6D: "day-book6",
                BOOK6N: "night-book6",
                BOOK7D: "day-book7",
                BOOK7N: "night-book7",
                BOOK8D: "day-book8",
                BOOK8N: "night-book8",
                BOOK9D: "day-book9",
                BOOK9N: "night-book9",
                BOOK10D: "day-book10",
                BOOK10N: "night-book10",
                BOOK11D: "day-book11",
                BOOK11N: "night-book11",
                BOOK12D: "day-book12",
                BOOK12N: "night-book12",
                BOOK13D: "day-book13",
                BOOK13N: "night-book13",
                BOOK14D: "day-book14",
                BOOK14N: "night-book14",
                BOOK15D: "day-book15",
                BOOK15N: "night-book15",
                BOOK16D: "day-book16",
                BOOK16N: "night-book16",
                BOOK17D: "day-book17",
                BOOK17N: "night-book17",
                BOOK18D: "day-book18",
                BOOK18N: "night-book18",
                BOOK19D: "day-book19",
                BOOK19N: "night-book19",
                BOOK20D: "day-book20",
                BOOK20N: "night-book20",
                BOOK21D: "day-book21",
                BOOK21N: "night-book21",
                BOOK22D: "day-book22",
                BOOK22N: "night-book22",
                BOOK23D: "day-book23",
                BOOK23N: "night-book23",
                BOOK24D: "day-book24",
                BOOK24N: "night-book24",
                BOOK25D: "day-book25",
                BOOK25N: "night-book25",
                BOOK26D: "day-book26",
                BOOK26N: "night-book26",
                BOOK27D: "day-book27",
                BOOK27N: "night-book27",
                BOOK28D: "day-book28",
                BOOK28N: "night-book28",
                BOOK29D: "day-book29",
                BOOK29N: "night-book29",
                BOOK30D: "day-book30",
                BOOK30N: "night-book30",
                BOOK31D: "day-book31",
                BOOK31N: "night-book31",
                BOOK32D: "day-book32",
                BOOK32N: "night-book32",
                BOOK33D: "day-book33",
                BOOK33N: "night-book33",
                BOOK34D: "day-book34",
                BOOK34N: "night-book34",
                BOOK35D: "day-book35",
                BOOK35N: "night-book35",
                BOOK36D: "day-book36",
                BOOK36N: "night-book36",
                BOOK37D: "day-book37",
                BOOK37N: "night-book37",
                BOOK38D: "day-book38",
                BOOK38N: "night-book38",
                BOOK39D: "day-book39",
                BOOK39N: "night-book39",
                BOOK40D: "day-book40",
                BOOK40N: "night-book40",
                BOOK41D: "day-book41",
                BOOK41N: "night-book41",
                BOOK42D: "day-book42",
                BOOK42N: "night-book42",
                BOOK43D: "day-book43",
                BOOK43N: "night-book43",
                BOOK44D: "day-book44",
                BOOK44N: "night-book44",
                BOOK45D: "day-book45",
                BOOK45N: "night-book45",
                CRATE1D: "day-crate1",
                CRATE1N: "night-crate1",
                CRATE2D: "day-crate2",
                CRATE2N: "night-crate2",
                CRATE3D: "day-crate3",
                CRATE3N: "night-crate3",
                CRATE4D: "day-crate4",
                CRATE4N: "night-crate4",
                CRATE5D: "day-crate5",
                CRATE5N: "night-crate5",
                CRATE6D: "day-crate6",
                CRATE6N: "night-crate6",
                CRATE7D: "day-crate7",
                CRATE7N: "night-crate7",
                CRATE8D: "day-crate8",
                CRATE8N: "night-crate8",
                CRATE9D: "day-crate9",
                CRATE9N: "night-crate9",
                CRATE10D: "day-crate10",
                CRATE10N: "night-crate10",
                CRATE11D: "day-crate11",
                CRATE11N: "night-crate11",
                CRATE12D: "day-crate12",
                CRATE12N: "night-crate12",
                CRATE13D: "day-crate13",
                CRATE13N: "night-crate13",
                CRATE14D: "day-crate14",
                CRATE14N: "night-crate14",
                CRATE15D: "day-crate15",
                CRATE15N: "night-crate15",
                CRATE16D: "day-crate16",
                CRATE16N: "night-crate16",
                CRATE17D: "day-crate17",
                CRATE17N: "night-crate17",
                CRATE18D: "day-crate18",
                CRATE18N: "night-crate18",
                CRATE19D: "day-crate19",
                CRATE19N: "night-crate19",
                CRATE20D: "day-crate20",
                CRATE20N: "night-crate20",
                CRATE21D: "day-crate21",
                CRATE21N: "night-crate21",
                CRATE22D: "day-crate22",
                CRATE22N: "night-crate22",
                CRATE23D: "day-crate23",
                CRATE23N: "night-crate23",
                CRATE24D: "day-crate24",
                CRATE24N: "night-crate24",
                CRATE25D: "day-crate25",
                CRATE25N: "night-crate25",
                CRATE26D: "day-crate26",
                CRATE26N: "night-crate26",
                CRATE27D: "day-crate27",
                CRATE27N: "night-crate27",
                CRATE28D: "day-crate28",
                CRATE28N: "night-crate28",
                CRATE29D: "day-crate29",
                CRATE29N: "night-crate29",
                CRATE30D: "day-crate30",
                CRATE30N: "night-crate30",
                CRATE31D: "day-crate31",
                CRATE31N: "night-crate31",
                CRATE32D: "day-crate32",
                CRATE32N: "night-crate32",
                CRATE33D: "day-crate33",
                CRATE33N: "night-crate33",
                CRATE34D: "day-crate34",
                CRATE34N: "night-crate34",
                CRATE35D: "day-crate35",
                CRATE35N: "night-crate35",
                CRATE36D: "day-crate36",
                CRATE36N: "night-crate36",
                CRATE37D: "day-crate37",
                CRATE37N: "night-crate37",
                CRATE38D: "day-crate38",
                CRATE38N: "night-crate38",
                CRATE39D: "day-crate39",
                CRATE39N: "night-crate39",
                CRATE40D: "day-crate40",
                CRATE40N: "night-crate40",
                CRATE41D: "day-crate41",
                CRATE41N: "night-crate41",
                CRATE42D: "day-crate42",
                CRATE42N: "night-crate42",
                CRATE43D: "day-crate43",
                CRATE43N: "night-crate43",
                CRATE44D: "day-crate44",
                CRATE44N: "night-crate44",
                CRATE45D: "day-crate45",
                CRATE45N: "night-crate45",
                CRATE46D: "day-crate46",
                CRATE46N: "night-crate46",
                CRATE47D: "day-crate47",
                CRATE47N: "night-crate47",
                CRATE48D: "day-crate48",
                CRATE48N: "night-crate48",
                CRATE49D: "day-crate49",
                CRATE49N: "night-crate49",
                CRATE50D: "day-crate50",
                CRATE50N: "night-crate50",
                CRATE51D: "day-crate51",
                CRATE51N: "night-crate51",
                CRATE52D: "day-crate52",
                CRATE52N: "night-crate52",
                CRATE53D: "day-crate53",
                CRATE53N: "night-crate53",
                CRATE54D: "day-crate54",
                CRATE54N: "night-crate54",
                CRATE55D: "day-crate55",
                CRATE55N: "night-crate55",
                CRATE56D: "day-crate56",
                CRATE56N: "night-crate56",
                CRATE57D: "day-crate57",
                CRATE57N: "night-crate57",
                CRATE58D: "day-crate58",
                CRATE58N: "night-crate58",
                CRATE59D: "day-crate59",
                CRATE59N: "night-crate59",
                CRATE60D: "day-crate60",
                CRATE60N: "night-crate60",
                CRATE61D: "day-crate61",
                CRATE61N: "night-crate61",
                CRATE62D: "day-crate62",
                CRATE62N: "night-crate62",
                CRATE63D: "day-crate63",
                CRATE63N: "night-crate63",
                CRATE64D: "day-crate64",
                CRATE64N: "night-crate64",
                CRATE65D: "day-crate65",
                CRATE65N: "night-crate65",
                CRATE66D: "day-crate66",
                CRATE66N: "night-crate66",
                CRATE67D: "day-crate67",
                CRATE67N: "night-crate67",
                CRATE68D: "day-crate68",
                CRATE68N: "night-crate68",
                CRATE69D: "day-crate69",
                CRATE69N: "night-crate69",
                CRATE70D: "day-crate70",
                CRATE70N: "night-crate70",
                CRATE71D: "day-crate71",
                CRATE71N: "night-crate71",
                CRATE72D: "day-crate72",
                CRATE72N: "night-crate72",
                DECORATION_0D: "day-herb0",
                DECORATION_1D: "day-herb1",
                DECORATION_2D: "day-herb2",
                DECORATION_3D: "day-herb3",
                DECORATION_4D: "day-herb4",
                DECORATION_5D: "day-herb5",
                DECORATION_6D: "day-herb6",
                DECORATION_7D: "day-herb7",
                DECORATION_8D: "day-herb8",
                DECORATION_9D: "day-herb9",
                DECORATION_10D: "day-herb10",
                DECORATION_11D: "day-herb11",
                DECORATION_12D: "day-herb12",
                DECORATION_13D: "day-herb13",
                DECORATION_14D: "day-herb14",
                DECORATION_15D: "day-herb15",
                DECORATION_16D: "day-shell0",
                DECORATION_17D: "day-shell1",
                DECORATION_18D: "day-shell2",
                DECORATION_19D: "day-leaf1",
                DECORATION_20D: "day-leaf2",
                DECORATION_21D: "day-leaf3",
                DECORATION_22D: "day-leaf4",
                DECORATION_23D: "day-leaf5",
                DECORATION_24D: "day-leaf6",
                DECORATION_25D: "day-leaf7",
                DECORATION_26D: "day-leaf8",
                DECORATION_27D: "day-rock0",
                DECORATION_28D: "day-rock1",
                DECORATION_29D: "day-rock2",
                DECORATION_30D: "day-rock3",
                DECORATION_31D: "day-rock4",
                DECORATION_32D: "day-rock5",
                DECORATION_33D: "day-rock6",
                DECORATION_34D: "day-rock7",
                DECORATION_35D: "day-rock8",
                DECORATION_36D: "day-rock9",
                DECORATION_37D: "day-rock10",
                DECORATION_38D: "day-rock11",
                DECORATION_39D: "day-rock12",
                DECORATION_40D: "day-rock13",
                DECORATION_41D: "day-flower1",
                DECORATION_42D: "day-flower2",
                DECORATION_43D: "day-flower3",
                DECORATION_44D: "day-flower4",
                DECORATION_45D: "day-flower5",
                DECORATION_46D: "day-flower6",
                DECORATION_47D: "day-flower7",
                DECORATION_48D: "day-flower8",
                DECORATION_49D: "day-flower9",
                DECORATION_50D: "day-herb16",
                DECORATION_51D: "day-herb17",
                DECORATION_52D: "day-herb18",
                DECORATION_53D: "day-herb19",
                DECORATION_54D: "day-herb20",
                DECORATION_55D: "day-herb21",
                DECORATION_0N: "night-herb0",
                DECORATION_1N: "night-herb1",
                DECORATION_2N: "night-herb2",
                DECORATION_3N: "night-herb3",
                DECORATION_4N: "night-herb4",
                DECORATION_5N: "night-herb5",
                DECORATION_6N: "night-herb6",
                DECORATION_7N: "night-herb7",
                DECORATION_8N: "night-herb8",
                DECORATION_9N: "night-herb9",
                DECORATION_10N: "night-herb10",
                DECORATION_11N: "night-herb11",
                DECORATION_12N: "night-herb12",
                DECORATION_13N: "night-herb13",
                DECORATION_14N: "night-herb14",
                DECORATION_15N: "night-herb15",
                DECORATION_16N: "night-shell0",
                DECORATION_17N: "night-shell1",
                DECORATION_18N: "night-shell2",
                DECORATION_19N: "night-leaf1",
                DECORATION_20N: "night-leaf2",
                DECORATION_21N: "night-leaf3",
                DECORATION_22N: "night-leaf4",
                DECORATION_23N: "night-leaf5",
                DECORATION_24N: "night-leaf6",
                DECORATION_25N: "night-leaf7",
                DECORATION_26N: "night-leaf8",
                DECORATION_27N: "night-rock0",
                DECORATION_28N: "night-rock1",
                DECORATION_29N: "night-rock2",
                DECORATION_30N: "night-rock3",
                DECORATION_31N: "night-rock4",
                DECORATION_32N: "night-rock5",
                DECORATION_33N: "night-rock6",
                DECORATION_34N: "night-rock7",
                DECORATION_35N: "night-rock8",
                DECORATION_36N: "night-rock9",
                DECORATION_37N: "night-rock10",
                DECORATION_38N: "night-rock11",
                DECORATION_39N: "night-rock12",
                DECORATION_40N: "night-rock13",
                DECORATION_41N: "night-flower1",
                DECORATION_42N: "night-flower2",
                DECORATION_43N: "night-flower3",
                DECORATION_44N: "night-flower4",
                DECORATION_45N: "night-flower5",
                DECORATION_46N: "night-flower6",
                DECORATION_47N: "night-flower7",
                DECORATION_48N: "night-flower8",
                DECORATION_49N: "night-flower9",
                DECORATION_50N: "night-herb16",
                DECORATION_51N: "night-herb17",
                DECORATION_52N: "night-herb18",
                DECORATION_53N: "night-herb19",
                DECORATION_54N: "night-herb20",
                DECORATION_55N: "night-herb21",
                DAY_RIVER_000_010_000: "day-river000-010-000",
                DAY_RIVER_000_010_010: "day-river000-010-010",
                DAY_RIVER_000_011_000: "day-river000-011-000",
                DAY_RIVER_000_011_010: "day-river000-011-010",
                DAY_RIVER_000_011_011: "day-river000-011-011",
                DAY_RIVER_000_110_000: "day-river000-110-000",
                DAY_RIVER_000_110_010: "day-river000-110-010",
                DAY_RIVER_000_110_110: "day-river000-110-110",
                DAY_RIVER_000_111_000: "day-river000-111-000",
                DAY_RIVER_000_111_010: "day-river000-111-010",
                DAY_RIVER_000_111_011: "day-river000-111-011",
                DAY_RIVER_000_111_110: "day-river000-111-110",
                DAY_RIVER_000_111_111: "day-river000-111-111",
                DAY_RIVER_010_010_000: "day-river010-010-000",
                DAY_RIVER_010_010_010: "day-river010-010-010",
                DAY_RIVER_010_011_000: "day-river010-011-000",
                DAY_RIVER_010_011_010: "day-river010-011-010",
                DAY_RIVER_010_011_011: "day-river010-011-011",
                DAY_RIVER_010_110_000: "day-river010-110-000",
                DAY_RIVER_010_110_010: "day-river010-110-010",
                DAY_RIVER_010_110_110: "day-river010-110-110",
                DAY_RIVER_010_111_000: "day-river010-111-000",
                DAY_RIVER_010_111_010: "day-river010-111-010",
                DAY_RIVER_010_111_011: "day-river010-111-011",
                DAY_RIVER_010_111_110: "day-river010-111-110",
                DAY_RIVER_010_111_111: "day-river010-111-111",
                DAY_RIVER_011_011_000: "day-river011-011-000",
                DAY_RIVER_011_011_010: "day-river011-011-010",
                DAY_RIVER_011_011_011: "day-river011-011-011",
                DAY_RIVER_011_111_000: "day-river011-111-000",
                DAY_RIVER_011_111_010: "day-river011-111-010",
                DAY_RIVER_011_111_011: "day-river011-111-011",
                DAY_RIVER_011_111_110: "day-river011-111-110",
                DAY_RIVER_011_111_111: "day-river011-111-111",
                DAY_RIVER_110_110_000: "day-river110-110-000",
                DAY_RIVER_110_110_010: "day-river110-110-010",
                DAY_RIVER_110_110_110: "day-river110-110-110",
                DAY_RIVER_110_111_000: "day-river110-111-000",
                DAY_RIVER_110_111_010: "day-river110-111-010",
                DAY_RIVER_110_111_011: "day-river110-111-011",
                DAY_RIVER_110_111_110: "day-river110-111-110",
                DAY_RIVER_110_111_111: "day-river110-111-111",
                DAY_RIVER_111_111_011: "day-river111-111-011",
                DAY_RIVER_111_111_110: "day-river111-111-110",
                DAY_RIVER_111_111_011: "day-river111-111-011",
                DAY_RIVER_111_111_000: "day-river111-111-000",
                DAY_RIVER_111_111_111: "day-river111-111-111",
                DAY_RIVER_111_111_010: "day-river111-111-010",
                NIGHT_RIVER_000_010_000: "night-river000-010-000",
                NIGHT_RIVER_000_010_010: "night-river000-010-010",
                NIGHT_RIVER_000_011_000: "night-river000-011-000",
                NIGHT_RIVER_000_011_010: "night-river000-011-010",
                NIGHT_RIVER_000_011_011: "night-river000-011-011",
                NIGHT_RIVER_000_110_000: "night-river000-110-000",
                NIGHT_RIVER_000_110_010: "night-river000-110-010",
                NIGHT_RIVER_000_110_110: "night-river000-110-110",
                NIGHT_RIVER_000_111_000: "night-river000-111-000",
                NIGHT_RIVER_000_111_010: "night-river000-111-010",
                NIGHT_RIVER_000_111_011: "night-river000-111-011",
                NIGHT_RIVER_000_111_110: "night-river000-111-110",
                NIGHT_RIVER_000_111_111: "night-river000-111-111",
                NIGHT_RIVER_010_010_000: "night-river010-010-000",
                NIGHT_RIVER_010_010_010: "night-river010-010-010",
                NIGHT_RIVER_010_011_000: "night-river010-011-000",
                NIGHT_RIVER_010_011_010: "night-river010-011-010",
                NIGHT_RIVER_010_011_011: "night-river010-011-011",
                NIGHT_RIVER_010_110_000: "night-river010-110-000",
                NIGHT_RIVER_010_110_010: "night-river010-110-010",
                NIGHT_RIVER_010_110_110: "night-river010-110-110",
                NIGHT_RIVER_010_111_000: "night-river010-111-000",
                NIGHT_RIVER_010_111_010: "night-river010-111-010",
                NIGHT_RIVER_010_111_011: "night-river010-111-011",
                NIGHT_RIVER_010_111_110: "night-river010-111-110",
                NIGHT_RIVER_010_111_111: "night-river010-111-111",
                NIGHT_RIVER_011_011_000: "night-river011-011-000",
                NIGHT_RIVER_011_011_010: "night-river011-011-010",
                NIGHT_RIVER_011_011_011: "night-river011-011-011",
                NIGHT_RIVER_011_111_000: "night-river011-111-000",
                NIGHT_RIVER_011_111_010: "night-river011-111-010",
                NIGHT_RIVER_011_111_011: "night-river011-111-011",
                NIGHT_RIVER_011_111_110: "night-river011-111-110",
                NIGHT_RIVER_011_111_111: "night-river011-111-111",
                NIGHT_RIVER_110_110_000: "night-river110-110-000",
                NIGHT_RIVER_110_110_010: "night-river110-110-010",
                NIGHT_RIVER_110_110_110: "night-river110-110-110",
                NIGHT_RIVER_110_111_000: "night-river110-111-000",
                NIGHT_RIVER_110_111_010: "night-river110-111-010",
                NIGHT_RIVER_110_111_011: "night-river110-111-011",
                NIGHT_RIVER_110_111_110: "night-river110-111-110",
                NIGHT_RIVER_110_111_111: "night-river110-111-111",
                NIGHT_RIVER_111_111_011: "night-river111-111-011",
                NIGHT_RIVER_111_111_110: "night-river111-111-110",
                NIGHT_RIVER_111_111_011: "night-river111-111-011",
                NIGHT_RIVER_111_111_000: "night-river111-111-000",
                NIGHT_RIVER_111_111_111: "night-river111-111-111",
                NIGHT_RIVER_111_111_010: "night-river111-111-010",
                DAY_RIVER_COMPO1: "day-pebblecompo1",
                DAY_RIVER_COMPO2: "day-pebblecompo2",
                DAY_RIVER_COMPO3: "day-pebblecompo3",
                DAY_RIVER_COMPO4: "day-pebblecompo4",
                DAY_RIVER_COMPO5: "day-pebblecompo5",
                DAY_RIVER_COMPO6: "day-pebblecompo6",
                DAY_RIVER_COMPO7: "day-pebblecompo7",
                DAY_RIVER_COMPO8: "day-pebblecompo8",
                DAY_RIVER_COMPO9: "day-pebblecompo9",
                DAY_RIVER_COMPO10: "day-pebblecompo10",
                DAY_RIVER_COMPO11: "day-pebblecompo11",
                DAY_RIVER_COMPO12: "day-pebblecompo12",
                DAY_RIVER_COMPO13: "day-pebblecompo13",
                DAY_RIVER_COMPO14: "day-pebblecompo14",
                DAY_RIVER_COMPO15: "day-pebblecompo15",
                DAY_RIVER_COMPO16: "day-pebblecompo16",
                DAY_RIVER_COMPO17: "day-pebblecompo17",
                DAY_RIVER_COMPO18: "day-pebblecompo18",
                DAY_RIVER_COMPO19: "day-pebblecompo19",
                DAY_RIVER_COMPO20: "day-pebblecompo20",
                DAY_RIVER_COMPO21: "day-pebblecompo21",
                DAY_RIVER_COMPO22: "day-pebblecompo22",
                DAY_RIVER_COMPO23: "day-pebblecompo23",
                DAY_RIVER_COMPO24: "day-pebblecompo24",
                DAY_RIVER_COMPO25: "day-pebblecompo25",
                DAY_RIVER_COMPO26: "day-pebblecompo26",
                DAY_RIVER_COMPO27: "day-pebblecompo27",
                DAY_RIVER_COMPO28: "day-pebblecompo28",
                NIGHT_RIVER_COMPO1: "night-pebblecompo1",
                NIGHT_RIVER_COMPO2: "night-pebblecompo2",
                NIGHT_RIVER_COMPO3: "night-pebblecompo3",
                NIGHT_RIVER_COMPO4: "night-pebblecompo4",
                NIGHT_RIVER_COMPO5: "night-pebblecompo5",
                NIGHT_RIVER_COMPO6: "night-pebblecompo6",
                NIGHT_RIVER_COMPO7: "night-pebblecompo7",
                NIGHT_RIVER_COMPO8: "night-pebblecompo8",
                NIGHT_RIVER_COMPO9: "night-pebblecompo9",
                NIGHT_RIVER_COMPO10: "night-pebblecompo10",
                NIGHT_RIVER_COMPO11: "night-pebblecompo11",
                NIGHT_RIVER_COMPO12: "night-pebblecompo12",
                NIGHT_RIVER_COMPO13: "night-pebblecompo13",
                NIGHT_RIVER_COMPO14: "night-pebblecompo14",
                NIGHT_RIVER_COMPO15: "night-pebblecompo15",
                NIGHT_RIVER_COMPO16: "night-pebblecompo16",
                NIGHT_RIVER_COMPO17: "night-pebblecompo17",
                NIGHT_RIVER_COMPO18: "night-pebblecompo18",
                NIGHT_RIVER_COMPO19: "night-pebblecompo19",
                NIGHT_RIVER_COMPO20: "night-pebblecompo20",
                NIGHT_RIVER_COMPO21: "night-pebblecompo21",
                NIGHT_RIVER_COMPO22: "night-pebblecompo22",
                NIGHT_RIVER_COMPO23: "night-pebblecompo23",
                NIGHT_RIVER_COMPO24: "night-pebblecompo24",
                NIGHT_RIVER_COMPO25: "night-pebblecompo25",
                NIGHT_RIVER_COMPO26: "night-pebblecompo26",
                NIGHT_RIVER_COMPO27: "night-pebblecompo27",
                NIGHT_RIVER_COMPO28: "night-pebblecompo28",
                BABY_MAMMOTHD: "day-baby-mammoth",
                BABY_MAMMOTH_TAMEDD: "day-baby-mammoth-tamed",
                BABY_MAMMOTH_ATTACKD: "day-baby-mammoth-angry",
                BABY_MAMMOTHN: "night-baby-mammoth",
                BABY_MAMMOTH_TAMEDN: "night-baby-mammoth-tamed",
                BABY_MAMMOTH_ATTACKN: "night-baby-mammoth-angry",
                INV_BABY_MAMMOTH_OUT: "inv-mammoth-out",
                INV_BABY_MAMMOTH_IN: "inv-mammoth-in",
                INV_BABY_MAMMOTH_CLICK: "inv-mammoth-click",
                HURT_BABY_MAMMOTH: "hurt-baby-mammoth",
                BABY_MAMMOTH_STEP: "baby-mammoth-step",
                FLOWER_HATD: "day-flower-hat",
                FLOWER_HATN: "night-flower-hat",
                INV_FLOWER_HAT_OUT: "inv-flower-hat-out",
                INV_FLOWER_HAT_IN: "inv-flower-hat-in",
                INV_FLOWER_HAT_CLICK: "inv-flower-hat-click",
                FUR_HATD: "day-fur-hat",
                FUR_HATN: "night-fur-hat",
                INV_FUR_HAT_OUT: "inv-fur-hat-out",
                INV_FUR_HAT_IN: "inv-fur-hat-in",
                INV_FUR_HAT_CLICK: "inv-fur-hat-click",
                MAMMOTHD: "day-mammoth",
                MAMMOTHN: "night-mammoth",
                HURT_MAMMOTH: "hurt-mammoth",
                INV_FUR_MAMMOTH_OUT: "inv-mammoth-fur-out",
                INV_FUR_MAMMOTH_IN: "inv-mammoth-fur-in",
                INV_FUR_MAMMOTH_CLICK: "inv-mammoth-fur-click",
                INV_WOOD_BOW_OUT: "inv-wood-bow-out",
                INV_WOOD_BOW_IN: "inv-wood-bow-in",
                INV_WOOD_BOW_CLICK: "inv-wood-bow-click",
                INV_WOOD_ARROW_OUT: "inv-wood-arrow-out",
                INV_WOOD_ARROW_IN: "inv-wood-arrow-in",
                INV_WOOD_ARROW_CLICK: "inv-wood-arrow-click",
                WOOD_BOWD: "day-wood-bow2",
                WOOD_BOWN: "night-wood-bow2",
                WOOD_ARROWD: "day-wood-arrow",
                WOOD_ARROWN: "night-wood-arrow",
                INV_STONE_BOW_OUT: "inv-stone-bow-out",
                INV_STONE_BOW_IN: "inv-stone-bow-in",
                INV_STONE_BOW_CLICK: "inv-stone-bow-click",
                INV_STONE_ARROW_OUT: "inv-stone-arrow-out",
                INV_STONE_ARROW_IN: "inv-stone-arrow-in",
                INV_STONE_ARROW_CLICK: "inv-stone-arrow-click",
                STONE_BOWD: "day-stone-bow",
                STONE_BOWN: "night-stone-bow",
                STONE_ARROWD: "day-stone-arrow",
                STONE_ARROWN: "night-stone-arrow",
                INV_GOLD_BOW_OUT: "inv-gold-bow-out",
                INV_GOLD_BOW_IN: "inv-gold-bow-in",
                INV_GOLD_BOW_CLICK: "inv-gold-bow-click",
                INV_GOLD_ARROW_OUT: "inv-gold-arrow-out",
                INV_GOLD_ARROW_IN: "inv-gold-arrow-in",
                INV_GOLD_ARROW_CLICK: "inv-gold-arrow-click",
                GOLD_BOWD: "day-gold-bow",
                GOLD_BOWN: "night-gold-bow",
                GOLD_ARROWD: "day-gold-arrow",
                GOLD_ARROWN: "night-gold-arrow",
                INV_DIAMOND_BOW_OUT: "inv-diamond-bow-out",
                INV_DIAMOND_BOW_IN: "inv-diamond-bow-in",
                INV_DIAMOND_BOW_CLICK: "inv-diamond-bow-click",
                INV_DIAMOND_ARROW_OUT: "inv-diamond-arrow-out",
                INV_DIAMOND_ARROW_IN: "inv-diamond-arrow-in",
                INV_DIAMOND_ARROW_CLICK: "inv-diamond-arrow-click",
                DIAMOND_BOWD: "day-diamond-bow",
                DIAMOND_BOWN: "night-diamond-bow",
                DIAMOND_ARROWD: "day-diamond-arrow",
                DIAMOND_ARROWN: "night-diamond-arrow",
                INV_AMETHYST_BOW_OUT: "inv-amethyst-bow-out",
                INV_AMETHYST_BOW_IN: "inv-amethyst-bow-in",
                INV_AMETHYST_BOW_CLICK: "inv-amethyst-bow-click",
                INV_AMETHYST_ARROW_OUT: "inv-amethyst-arrow-out",
                INV_AMETHYST_ARROW_IN: "inv-amethyst-arrow-in",
                INV_AMETHYST_ARROW_CLICK: "inv-amethyst-arrow-click",
                AMETHYST_BOWD: "day-amethyst-bow",
                AMETHYST_BOWN: "night-amethyst-bow",
                AMETHYST_ARROWD: "day-amethyst-arrow",
                AMETHYST_ARROWN: "night-amethyst-arrow",
                INV_DRAGON_BOW_OUT: "inv-dragon-bow-out",
                INV_DRAGON_BOW_IN: "inv-dragon-bow-in",
                INV_DRAGON_BOW_CLICK: "inv-dragon-bow-click",
                INV_DRAGON_ARROW_OUT: "inv-dragon-arrow-out",
                INV_DRAGON_ARROW_IN: "inv-dragon-arrow-in",
                INV_DRAGON_ARROW_CLICK: "inv-dragon-arrow-click",
                DRAGON_BOWD: "day-dragon-bow",
                DRAGON_BOWN: "night-dragon-bow",
                DRAGON_ARROWD: "day-dragon-arrow",
                DRAGON_ARROWN: "night-dragon-arrow",
                INV_REIDITE_BOW_OUT: "inv-reidite-bow-out",
                INV_REIDITE_BOW_IN: "inv-reidite-bow-in",
                INV_REIDITE_BOW_CLICK: "inv-reidite-bow-click",
                INV_REIDITE_ARROW_OUT: "inv-reidite-arrow-out",
                INV_REIDITE_ARROW_IN: "inv-reidite-arrow-in",
                INV_REIDITE_ARROW_CLICK: "inv-reidite-arrow-click",
                REIDITE_BOWD: "day-reidite-bow",
                REIDITE_BOWN: "night-reidite-bow",
                REIDITE_ARROWD: "day-reidite-arrow",
                REIDITE_ARROWN: "night-reidite-arrow",
                MICROPHONE: "microphone",
                BANDAGE_ACTIVATED: "bandage-activated",
                AUTO_FEED: "auto-feed",
                STOP_REGENERATION_BLIZZARD: "stop-regeneration",
                STOP_REGENERATION: "stop-regeneration2",
                WOOD_TOWERD: "day-wood-platform",
                WOOD_TOWERN: "night-wood-platform",
                INV_WOOD_TOWER_IN: "inv-wood-platform-in",
                INV_WOOD_TOWER_OUT: "inv-wood-platform-out",
                INV_WOOD_TOWER_CLICK: "inv-wood-platform-click",
                WOOD_SHIELDD: "day-wood-shield",
                WOOD_SHIELDN: "night-wood-shield",
                STONE_SHIELDD: "day-stone-shield",
                STONE_SHIELDN: "night-stone-shield",
                GOLD_SHIELDD: "day-gold-shield",
                GOLD_SHIELDN: "night-gold-shield",
                DIAMOND_SHIELDD: "day-diamond-shield",
                DIAMOND_SHIELDN: "night-diamond-shield",
                AMETHYST_SHIELDD: "day-amethyst-shield",
                AMETHYST_SHIELDN: "night-amethyst-shield",
                REIDITE_SHIELDD: "day-reidite-shield",
                REIDITE_SHIELDN: "night-reidite-shield",
                INV_WOOD_SHIELD_IN: "inv-wood-shield-in",
                INV_WOOD_SHIELD_OUT: "inv-wood-shield-out",
                INV_WOOD_SHIELD_CLICK: "inv-wood-shield-click",
                INV_STONE_SHIELD_IN: "inv-stone-shield-in",
                INV_STONE_SHIELD_OUT: "inv-stone-shield-out",
                INV_STONE_SHIELD_CLICK: "inv-stone-shield-click",
                INV_GOLD_SHIELD_IN: "inv-gold-shield-in",
                INV_GOLD_SHIELD_OUT: "inv-gold-shield-out",
                INV_GOLD_SHIELD_CLICK: "inv-gold-shield-click",
                INV_DIAMOND_SHIELD_IN: "inv-diamond-shield-in",
                INV_DIAMOND_SHIELD_OUT: "inv-diamond-shield-out",
                INV_DIAMOND_SHIELD_CLICK: "inv-diamond-shield-click",
                INV_AMETHYST_SHIELD_IN: "inv-amethyst-shield-in",
                INV_AMETHYST_SHIELD_OUT: "inv-amethyst-shield-out",
                INV_AMETHYST_SHIELD_CLICK: "inv-amethyst-shield-click",
                INV_REIDITE_SHIELD_IN: "inv-reidite-shield-in",
                INV_REIDITE_SHIELD_OUT: "inv-reidite-shield-out",
                INV_REIDITE_SHIELD_CLICK: "inv-reidite-shield-click",
                MACHETED: "day-machete",
                MACHETEN: "night-machete",
                INV_MACHETE_IN: "inv-machete-in",
                INV_MACHETE_OUT: "inv-machete-out",
                INV_MACHETE_CLICK: "inv-machete-click"
            };
            class _ {
                constructor() {
                    this.m = 2 ** 31,
                    this.a = 1103515245,
                    this.c = 12345
                }
                init(e) {
                    this.state = e || window.Math.floor(window.Math.random() * (this.m - 1))
                }
                random() {
                    return this.state = (this.a * this.state + this.c) % this.m,
                    this.state / this.m
                }
                set_seed(e) {
                    this.state = e
                }
                get() {
                    return this.state = (this.a * this.state + this.c) % this.m,
                    this.state / this.m
                }
            }
            const f = 1e4
              , g = []
              , l = new _;
            l.set_seed((new window.Date).getTime());
            for (let e = 0; e < f; e++)
                g.push(l.random());
            class A {
                constructor(e, t, i, n, a, I) {
                    this.x1 = 100 * t,
                    this.y1 = 100 * i,
                    this.w = 100 * n,
                    this.h = 100 * a,
                    this.x2 = 100 * (t + n),
                    this.y2 = 100 * (i + a),
                    this.t = e,
                    this.v = I
                }
            }
            const b = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789_";
            class N {
                static copy_vector(e, t) {
                    t.x = e.x,
                    t.y = e.y
                }
                static get_vector(e, t) {
                    return {
                        x: e.x - t.x,
                        y: e.y - t.y
                    }
                }
                static scalar_product(e, t) {
                    return e.x * t.x + e.y * t.y
                }
                static norm(e) {
                    return window.Math.sqrt(e.x * e.x + e.y * e.y)
                }
                static sign(e) {
                    return e < 0 ? -1 : 1
                }
                static sign_(e) {
                    return 0 === e ? 0 : e > 0 ? 1 : -1
                }
                static cross_product(e, t) {
                    return e.x * t.y - e.y * t.x
                }
                static get_angle_2(e, t, i, n) {
                    var a = n - t
                      , I = i - e;
                    return window.Math.atan2(a, I)
                }
                static get_angle(e, t) {
                    return window.Math.acos(this.scalar_product(e, t) / (this.norm(e) * this.norm(t))) * this.sign(this.cross_product(e, t))
                }
                static getURLData(e) {
                    let t = location.href;
                    e = e.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
                    var i = new RegExp("[\\?&]" + e + "=([^&#]*)").exec(t);
                    return null === i ? null : i[1]
                }
                static reduceAngle(e, t) {
                    return t = (t % a + a) % a,
                    window.Math.abs(e - t) > window.Math.PI ? e > t ? t + a : t - a : t
                }
                static get_std_angle(e, t) {
                    return this.get_angle({
                        x: 1,
                        y: 0
                    }, this.get_vector(e, t))
                }
                static dist(e, t) {
                    return window.Math.sqrt((t.x - e.x) * (t.x - e.x) + (t.y - e.y) * (t.y - e.y))
                }
                static build_vector(e, t) {
                    return {
                        x: window.Math.cos(t) * e,
                        y: window.Math.sin(t) * e
                    }
                }
                static add_vector(e, t) {
                    e.x += t.x,
                    e.y += t.y
                }
                static sub_vector(e, t) {
                    e.x -= t.x,
                    e.y -= t.y
                }
                static middle_point(e, t) {
                    return {
                        x: (e.x + t.x) / 2,
                        y: (e.y + t.y) / 2
                    }
                }
                static restore_number(e) {
                    return e >= 6e4 ? e = 1e7 * (e - 6e4) : e >= 5e4 ? e = 1e6 * (e - 5e4) : e >= 4e4 ? e = 1e5 * (e - 4e4) : e >= 3e4 ? e = 1e4 * (e - 3e4) : e >= 2e4 ? e = 1e3 * (e - 2e4) : e >= 1e4 && (e = 100 * (e - 1e4)),
                    e
                }
                static simplify_number(e) {
                    return "number" != typeof e ? "0" : e >= 1e12 ? (e / 1e12).toFixed(2).replace(/\.00$/, "") + "t" : e >= 1e9 ? (e / 1e9).toFixed(2).replace(/\.00$/, "") + "b" : e >= 1e6 ? (e / 1e6).toFixed(2).replace(/\.00$/, "") + "m" : e >= 1e4 ? (e / 1e3).toFixed(1).replace(/\.00$/, "") + "k" : e.toString()
                }
                static ease_out_quad(e) {
                    return e * (2 - e)
                }
                static ease_out_cubic(e) {
                    return --e * e * e + 1
                }
                static ease_in_out_quad(e) {
                    return e < .5 ? 2 * e * e : (4 - 2 * e) * e - 1
                }
                static ease_in_out_cubic(e) {
                    return e < .5 ? 4 * e * e * e : (e - 1) * (2 * e - 2) * (2 * e - 2) + 1
                }
                static ease_out_quart(e) {
                    return 1 - --e * e * e * e
                }
                static ease_out_quint(e) {
                    return 1 + --e * e * e * e * e
                }
                static generate_token(e) {
                    for (var t = "", i = 0; i < e; i++)
                        t += b[~~(63 * Math.random())];
                    return t
                }
                static gup(e, t) {
                    t || (t = location.href),
                    e = e.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
                    var i = new RegExp("[\\?&]" + e + "=([^&#]*)").exec(t);
                    return null == i ? null : i[1]
                }
                static intersect_aabb(e, t, i, n, a, I, T, o) {
                    return window.Math.max(e, a) < window.Math.min(t, I) && window.Math.max(i, T) < window.Math.min(n, o) ? 1 : 0
                }
                static lerp(e, t, i) {
                    return (1 - i) * e + i * t
                }
                static escape_html(e) {
                    return e.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;").replace(/'/g, "&#039;")
                }
            }
            class v {
                constructor(e, t, i, n, a, I) {
                    return this.o = e,
                    this.v = t,
                    this.max = i,
                    this.min = n,
                    this.max_speed = a,
                    this.min_speed = I,
                    this.last = 0,
                    this.update = function() {
                        if (this.o) {
                            if ((e = this.v + zT * this.max_speed) > this.max)
                                return this.v = this.max,
                                this.o = !1,
                                !0;
                            this.v = e
                        } else {
                            var e;
                            (e = this.v - zT * this.min_speed) < this.min ? (this.v = this.min,
                            this.o = !0) : this.v = e
                        }
                    }
                    ,
                    !1
                }
            }
            class D {
                constructor(e, t, i, n, a, I, T) {
                    this.fun = e,
                    this.ed = t,
                    this.em = i,
                    this.sx = n,
                    this.x = a,
                    this.ex = I
                }
                ease(e) {
                    if (e !== this.ex && (this.ex = e,
                    this.sx = this.x,
                    this.ed = 0),
                    this.ex !== this.x)
                        if (this.ed += zT,
                        this.ed > this.em)
                            this.x = this.ex;
                        else {
                            var t = this.fun(this.ed / this.em);
                            this.x = this.sx + (this.ex - this.sx) * t
                        }
                }
                restart() {
                    this.x = this.sx,
                    this.ed = 0
                }
            }
            class O {
                constructor(e, t, i, n, a, I, T, o, r) {
                    this.fun = e,
                    this.ed = t,
                    this.em = i,
                    this.sx = n,
                    this.sy = a,
                    this.x = I,
                    this.y = T,
                    this.ex = o,
                    this.ey = r,
                    this.ease = function(e) {
                        if (e.x == this.ex && e.y == this.ey || (this.ex = e.x,
                        this.ey = e.y,
                        this.sx = this.x,
                        this.sy = this.y,
                        this.ed = 0),
                        this.ex != this.x || this.ey != this.y)
                            if (this.ed += zT,
                            this.ed > this.em)
                                this.x = this.ex,
                                this.y = this.ey;
                            else {
                                var t = this.fun(this.ed / this.em);
                                this.x = this.sx + (this.ex - this.sx) * t,
                                this.y = this.sy + (this.ey - this.sy) * t
                            }
                    }
                }
            }
            var k = window.document.getElementById("game_canvas")
              , C = k.getContext("2d")
              , L = k.width
              , B = k.height
              , M = k.width / 2
              , Y = k.height / 2
              , H = {
                x: M,
                y: Y
            }
              , K = 1
              , G = 1
              , W = 1;
            function F(e) {
                var t = new Image;
                return t.src = e.toDataURL("image/png"),
                t.width = e.width,
                t.height = e.height,
                t.isLoaded = 1,
                t
            }
            var V = window.devicePixelRatio || 1
              , U = C.webkitBackingStorePixelRatio || C.mozBackingStorePixelRatio || C.msBackingStorePixelRatio || C.oBackingStorePixelRatio || C.backingStorePixelRatio || 1
              , X = window.document.getElementById("game_body");
            X.ondragstart = function() {
                return !1
            }
            ,
            X.ondrop = function() {
                return !1
            }
            ,
            ( () => {
                for (var e = 0, t = ["ms", "moz", "webkit", "o"], i = 0; i < t.length && !window.requestAnimationFrame; ++i)
                    window.requestAnimationFrame = window[t[i] + "RequestAnimationFrame"],
                    window.cancelAnimationFrame = window[t[i] + "CancelAnimationFrame"] || window[t[i] + "CancelRequestAnimationFrame"];
                window.requestAnimationFrame || (window.requestAnimationFrame = function(t, i) {
                    var n = (new window.Date).getTime()
                      , a = window.Math.max(0, 16 - (n - e))
                      , I = window.setTimeout(( () => {
                        t(n + a)
                    }
                    ), a);
                    return e = n + a,
                    I
                }
                ),
                window.cancelAnimationFrame || (window.cancelAnimationFrame = function(e) {
                    window.clearTimeout(e)
                }
                )
            }
            )();
            var q = navigator.language || navigator.userLanguage
              , z = -(new window.Date).getTimezoneOffset() / 60
              , $ = "Europe"
              , Z = "South America"
              , J = $;
            z >= -2 && z <= 2 ? J = $ : z > 2 && z <= 5 ? J = "Russia" : z > 5 && z <= 9 ? J = "Asia" : z > 9 ? J = "Australia" : z >= -5 && z < -2 ? J = "pt-BR" === q || "pt-br" === q || "pt" === q || "pt-pt" === q ? Z : "North America" : z < -5 && (J = "pt-BR" === q || "pt-br" === q || "pt" === q || "pt-pt" === q ? Z : "West America");
            var Q = [];
            Q[ItemType.WOOD] = {
                img: SPRITE.INV_WOOD,
                grid: 0,
                recycle: 0
            },
            Q[ItemType.STONE] = {
                img: SPRITE.INV_STONE,
                grid: 0,
                recycle: 0
            },
            Q[ItemType.GOLD] = {
                img: SPRITE.INV_GOLD,
                grid: 0,
                recycle: 0
            },
            Q[ItemType.DIAMOND] = {
                img: SPRITE.INV_DIAMOND,
                grid: 0,
                recycle: 0
            },
            Q[ItemType.AMETHYST] = {
                img: SPRITE.INV_AMETHYST,
                grid: 0,
                recycle: 0
            },
            Q[ItemType.RABBIT_FUR] = {
                img: SPRITE.INV_FUR,
                grid: 0,
                recycle: 0
            },
            Q[ItemType.WOLF_FUR] = {
                img: SPRITE.INV_FUR_WOLF,
                grid: 0,
                recycle: 0
            },
            Q[ItemType.BOAR_FUR] = {
                img: SPRITE.INV_FUR_BOAR,
                grid: 0,
                recycle: 0
            },
            Q[ItemType.FIREFLY] = {
                img: SPRITE.INV_FIREFLY,
                grid: 0,
                recycle: 0
            },
            Q[ItemType.WOOD_ARROW] = {
                img: SPRITE.INV_WOOD_ARROW,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.STONE_ARROW] = {
                img: SPRITE.INV_STONE_ARROW,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.GOLD_ARROW] = {
                img: SPRITE.INV_GOLD_ARROW,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.DIAMOND_ARROW] = {
                img: SPRITE.INV_DIAMOND_ARROW,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.AMETHYST_ARROW] = {
                img: SPRITE.INV_AMETHYST_ARROW,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.REIDITE_ARROW] = {
                img: SPRITE.INV_REIDITE_ARROW,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.DRAGON_ARROW] = {
                img: SPRITE.INV_DRAGON_ARROW,
                grid: 0,
                recycle: 0
            },
            Q[ItemType.WINTER_FUR] = {
                img: SPRITE.INV_FUR_WINTER,
                grid: 0,
                recycle: 0
            },
            Q[ItemType.MAMMOTH_FUR] = {
                img: SPRITE.INV_FUR_MAMMOTH,
                grid: 0,
                recycle: 0
            },
            Q[ItemType.CORD] = {
                img: SPRITE.INV_CORD,
                grid: 0,
                recycle: 0
            },
            Q[ItemType.MEAT] = {
                img: SPRITE.INV_MEAT,
                grid: 0,
                recycle: 0
            },
            Q[ItemType.FISH] = {
                img: SPRITE.INV_FOODFISH,
                grid: 0,
                recycle: 0
            },
            Q[ItemType.KRAKEN_FUR] = {
                img: SPRITE.INV_KRAKEN_SKIN,
                grid: 0,
                recycle: 0
            },
            Q[ItemType.PIRANHA_SCALES] = {
                img: SPRITE.INV_SCALES,
                grid: 0,
                recycle: 0
            },
            Q[ItemType.ICE] = {
                img: ItemType.ICE,
                grid: 0,
                recycle: 0
            },
            Q[ItemType.SAND] = {
                img: ItemType.SAND,
                grid: 0,
                recycle: 0
            },
            Q[ItemType.GROUND] = {
                img: ItemType.GROUND,
                grid: 0,
                recycle: 0
            },
            Q[ItemType.BERRY] = {
                img: SPRITE.INV_PLANT,
                grid: 0,
                recycle: 0
            },
            Q[ItemType.FLOUR] = {
                img: SPRITE.INV_FLOUR,
                grid: 0,
                recycle: 0
            },
            Q[ItemType.WHEAT] = {
                img: SPRITE.INV_WILD_WHEAT,
                grid: 0,
                recycle: 0
            },
            Q[ItemType.WINTER_PEASANT_FUR] = {
                img: ItemType.WINTER_HOOD_FUR,
                grid: 0,
                recycle: 0
            },
            Q[ItemType.WINTER_HOOD_FUR] = {
                img: ItemType.WINTER_PEASANT_FUR,
                grid: 0,
                recycle: 0
            },
            Q[ItemType.PUMPKIN] = {
                img: SPRITE.INV_PUMPKIN,
                grid: 0,
                recycle: 0
            },
            Q[ItemType.GARLIC] = {
                img: SPRITE.INV_GARLIC,
                grid: 0,
                recycle: 0
            },
            Q[ItemType.THORNBUSH] = {
                img: SPRITE.INV_THORNBUSH,
                grid: 0,
                recycle: 0
            },
            Q[ItemType.CARROT] = {
                img: SPRITE.INV_CARROT,
                grid: 0,
                recycle: 0
            },
            Q[ItemType.TOMATO] = {
                img: SPRITE.INV_TOMATO,
                grid: 0,
                recycle: 0
            },
            Q[ItemType.WATERMELON] = {
                img: SPRITE.INV_WATERMELON,
                grid: 0,
                recycle: 0
            },
            Q[ItemType.ALOE_VERA] = {
                img: SPRITE.INV_ALOE_VERA,
                grid: 0,
                recycle: 0
            },
            Q[ItemType.PENGUIN_FEATHER] = {
                img: SPRITE.INV_PENGUIN_FEATHER,
                grid: 0,
                recycle: 0
            },
            Q[ItemType.HAWK_FEATHER] = {
                img: SPRITE.INV_HAWK_FEATHER,
                grid: 0,
                recycle: 0
            },
            Q[ItemType.VULTURE_FEATHER] = {
                img: SPRITE.INV_VULTURE_FEATHER,
                grid: 0,
                recycle: 0
            },
            Q[ItemType.CACTUS] = {
                img: SPRITE.INV_CACTUS,
                grid: 0,
                recycle: 0
            },
            Q[ItemType.PILOT_GLASSES] = {
                img: SPRITE.INV_PILOT_GLASSES,
                grid: 0,
                recycle: 0
            },
            Q[ItemType.PITCHFORK_PART] = {
                img: SPRITE.INV_PITCHFORK_PART,
                grid: 0,
                recycle: 0
            },
            Q[ItemType.SANDWORM_JUICE] = {
                img: SPRITE.INV_SANDWORM_JUICE,
                grid: 0,
                recycle: 0
            },
            Q[ItemType.EMERALD] = {
                img: SPRITE.INV_EMERALD,
                grid: 0,
                recycle: 0
            },
            Q[ItemType.CHRISTMAS_HAT] = {
                img: SPRITE.INV_CHRISTMAS_HAT,
                recycle: 0
            },
            Q[ItemType.ELF_HAT] = {
                img: SPRITE.INV_ELF_HAT,
                recycle: 0
            },
            Q[ItemType.GARLAND] = {
                img: SPRITE.INV_GARLAND,
                recycle: 0,
                grid: 0
            },
            Q[ItemType.CANDY] = {
                img: ItemType.CANDY,
                recycle: 0
            },
            Q[ItemType.SUGAR_CAN] = {
                img: SPRITE.INV_SUGAR_CAN,
                recycle: 0
            },
            Q[ItemType.PIRATE_SWORD] = {
                img: SPRITE.INV_PIRATE_SWORD,
                grid: 0,
                recycle: 0
            },
            Q[ItemType.CRAB_STICK] = {
                img: SPRITE.INV_CRAB_STICK,
                grid: 0,
                recycle: 0
            },
            Q[ItemType.REIDITE] = {
                img: SPRITE.INV_REIDITE,
                grid: 0,
                recycle: 0
            },
            Q[ItemType.FLAME] = {
                img: SPRITE.INV_FLAME,
                grid: 0,
                recycle: 0
            },
            Q[ItemType.FIRE] = {
                img: SPRITE.CRAFT_FIRE,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.BED] = {
                img: SPRITE.CRAFT_BED,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.WORKBENCH] = {
                img: SPRITE.CRAFT_WORK,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.STONE_SWORD] = {
                img: SPRITE.CRAFT_SWORD,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.STONE_PICK] = {
                img: SPRITE.CRAFT_PICK,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.BERRY_SEED] = {
                img: SPRITE.CRAFT_SEED,
                grid: 0,
                recycle: 0
            },
            Q[ItemType.GOLD_PICK] = {
                img: SPRITE.CRAFT_PICK_GOLD,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.DIAMOND_PICK] = {
                img: SPRITE.CRAFT_PICK_DIAMOND,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.WOOD_SWORD] = {
                img: SPRITE.CRAFT_SWORD_WOOD,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.GOLD_SWORD] = {
                img: SPRITE.CRAFT_SWORD_GOLD,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.DIAMOND_SWORD] = {
                img: SPRITE.CRAFT_SWORD_DIAMOND,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.WOOD_PICK] = {
                img: SPRITE.CRAFT_PICK_WOOD,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.WOOD_WALL] = {
                img: SPRITE.CRAFT_WALL,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.WOOD_SPIKE] = {
                img: SPRITE.CRAFT_SPIKE,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.COOKED_MEAT] = {
                img: SPRITE.CRAFT_COOKED_MEAT,
                grid: 0,
                recycle: 0
            },
            Q[ItemType.BIG_FIRE] = {
                img: SPRITE.CRAFT_BIG_FIRE,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.BANDAGE] = {
                img: SPRITE.CRAFT_BANDAGE,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.STONE_WALL] = {
                img: SPRITE.CRAFT_STONE_WALL,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.GOLD_WALL] = {
                img: SPRITE.CRAFT_GOLD_WALL,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.DIAMOND_WALL] = {
                img: SPRITE.CRAFT_DIAMOND_WALL,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.WOOD_DOOR] = {
                img: SPRITE.CRAFT_DOOR_WOOD_CLOSE,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.CHEST] = {
                img: SPRITE.CRAFT_CHEST,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.STONE_SPIKE] = {
                img: SPRITE.CRAFT_STONE_SPIKE,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.GOLD_SPIKE] = {
                img: SPRITE.CRAFT_GOLD_SPIKE,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.DIAMOND_SPIKE] = {
                img: SPRITE.CRAFT_DIAMOND_SPIKE,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.STONE_DOOR] = {
                img: SPRITE.CRAFT_DOOR_STONE_CLOSE,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.GOLD_DOOR] = {
                img: SPRITE.CRAFT_DOOR_GOLD_CLOSE,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.DIAMOND_DOOR] = {
                img: SPRITE.CRAFT_DOOR_DIAMOND_CLOSE,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.EARMUFFS] = {
                img: SPRITE.CRAFT_EARMUFFS,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.COAT] = {
                img: SPRITE.CRAFT_COAT,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.WOOD_SPEAR] = {
                img: SPRITE.CRAFT_WOOD_SPEAR,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.STONE_SPEAR] = {
                img: SPRITE.CRAFT_SPEAR,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.GOLD_SPEAR] = {
                img: SPRITE.CRAFT_GOLD_SPEAR,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.DIAMOND_SPEAR] = {
                img: SPRITE.CRAFT_DIAMOND_SPEAR,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.DRAGON_SPEAR] = {
                img: SPRITE.CRAFT_DRAGON_SPEAR,
                grid: 0,
                recycle: 0
            },
            Q[ItemType.LAVA_SPEAR] = {
                img: SPRITE.CRAFT_LAVA_SPEAR,
                grid: 0,
                recycle: 0
            },
            Q[ItemType.CRAB_SPEAR] = {
                img: SPRITE.CRAFT_CRAB_SPEAR,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.CRAB_LOOT] = {
                img: SPRITE.INV_CRAB_LOOT,
                grid: 0,
                recycle: 0
            },
            Q[ItemType.FURNACE] = {
                img: SPRITE.CRAFT_FURNACE,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.EXPLORER_HAT] = {
                img: SPRITE.CRAFT_EXPLORER_HAT,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.PIRATE_HAT] = {
                img: SPRITE.CRAFT_PIRATE_HAT,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.FLOWER_HAT] = {
                img: SPRITE.CRAFT_FLOWER_HAT,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.FUR_HAT] = {
                img: SPRITE.CRAFT_FUR_HAT,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.WOOD_HELMET] = {
                img: SPRITE.CRAFT_WOOD_HELMET,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.STONE_HELMET] = {
                img: SPRITE.CRAFT_STONE_HELMET,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.GOLD_HELMET] = {
                img: SPRITE.CRAFT_GOLD_HELMET,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.DIAMOND_HELMET] = {
                img: SPRITE.CRAFT_DIAMOND_HELMET,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.BOOK] = {
                img: SPRITE.CRAFT_BOOK,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.PAPER] = {
                img: SPRITE.CRAFT_PAPER,
                grid: 0,
                recycle: 0
            },
            Q[ItemType.BAG] = {
                img: SPRITE.CRAFT_BAG,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.AMETHYST_SWORD] = {
                img: SPRITE.CRAFT_SWORD_AMETHYST,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.AMETHYST_PICK] = {
                img: SPRITE.CRAFT_PICK_AMETHYST,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.AMETHYST_SPEAR] = {
                img: SPRITE.CRAFT_AMETHYST_SPEAR,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.STONE_HAMMER] = {
                img: SPRITE.CRAFT_HAMMER,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.GOLD_HAMMER] = {
                img: SPRITE.CRAFT_HAMMER_GOLD,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.DIAMOND_HAMMER] = {
                img: SPRITE.CRAFT_HAMMER_DIAMOND,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.AMETHYST_HAMMER] = {
                img: SPRITE.CRAFT_HAMMER_AMETHYST,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.REIDITE_HAMMER] = {
                img: SPRITE.CRAFT_HAMMER_REIDITE,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.AMETHYST_WALL] = {
                img: SPRITE.CRAFT_AMETHYST_WALL,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.AMETHYST_SPIKE] = {
                img: SPRITE.CRAFT_AMETHYST_SPIKE,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.AMETHYST_DOOR] = {
                img: SPRITE.CRAFT_DOOR_AMETHYST_CLOSE,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.CAP_SCARF] = {
                img: SPRITE.CRAFT_CAP_SCARF,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.DIAMOND_CORD] = {
                img: SPRITE.CRAFT_BLUE_CORD,
                grid: 0,
                recycle: 0
            },
            Q[ItemType.LOCK] = {
                img: SPRITE.CRAFT_LOCK,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.RESURRECTION] = {
                img: SPRITE.CRAFT_RESURRECTION,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.LOCK_PICK] = {
                img: SPRITE.CRAFT_LOCKPICK,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.TOTEM] = {
                img: SPRITE.CRAFT_TOTEM,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.AMETHYST_HELMET] = {
                img: SPRITE.CRAFT_AMETHYST_HELMET,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.SUPER_HAMMER] = {
                img: SPRITE.CRAFT_SUPER_HAMMER,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.BRIDGE] = {
                img: SPRITE.CRAFT_BRIDGE,
                grid: 1,
                recycle: 1
            },
            Q[ItemType.TOWER] = {
                img: SPRITE.CRAFT_WOOD_TOWER,
                grid: 1,
                recycle: 1
            },
            Q[ItemType.BOTTLE_FULL_3] = {
                img: SPRITE.CRAFT_BOTTLE_FULL,
                grid: 0,
                recycle: 0
            },
            Q[ItemType.BOTTLE_FULL_2] = {
                img: SPRITE.CRAFT_BOTTLE_FULL,
                grid: 0,
                recycle: 0
            },
            Q[ItemType.BOTTLE_FULL] = {
                img: SPRITE.CRAFT_BOTTLE_FULL,
                grid: 0,
                recycle: 0
            },
            Q[ItemType.BOTTLE_EMPTY] = {
                img: SPRITE.CRAFT_BOTTLE_EMPTY,
                grid: 0,
                recycle: 0
            },
            Q[ItemType.STONE_SHOVEL] = {
                img: SPRITE.CRAFT_SHOVEL,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.WATERING_CAN_EMPTY] = {
                img: SPRITE.CRAFT_WATERING_CAN,
                grid: 0,
                recycle: 0
            },
            Q[ItemType.WHEAT_SEED] = {
                img: SPRITE.CRAFT_WHEAT_SEED,
                grid: 0,
                recycle: 0
            },
            Q[ItemType.COOKIE] = {
                img: SPRITE.CRAFT_COOKIE,
                grid: 0,
                recycle: 0
            },
            Q[ItemType.WINDMILL] = {
                img: SPRITE.CRAFT_WINDMILL,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.SUPER_DIVING_SUIT] = {
                img: SPRITE.CRAFT_SUPER_DIVING_SUIT,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.DIVING_MASK] = {
                img: SPRITE.CRAFT_DIVING_MASK,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.WATERING_CAN_FULL] = {
                img: SPRITE.CRAFT_WATERING_CAN_FULL,
                grid: 0,
                recycle: 0
            },
            Q[ItemType.CAKE] = {
                img: SPRITE.CRAFT_CAKE,
                grid: 0,
                recycle: 0
            },
            Q[ItemType.FISH_COOKED] = {
                img: SPRITE.CRAFT_FOODFISH_COOKED,
                grid: 0,
                recycle: 0
            },
            Q[ItemType.PLOT] = {
                img: SPRITE.CRAFT_PLOT,
                grid: 1,
                recycle: 1
            },
            Q[ItemType.BREAD] = {
                img: SPRITE.CRAFT_BREAD,
                grid: 0,
                recycle: 0
            },
            Q[ItemType.GOLD_SHOVEL] = {
                img: SPRITE.CRAFT_SHOVEL_GOLD,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.DIAMOND_SHOVEL] = {
                img: SPRITE.CRAFT_SHOVEL_DIAMOND,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.AMETHYST_SHOVEL] = {
                img: SPRITE.CRAFT_SHOVEL_AMETHYST,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.REIDITE_SHOVEL] = {
                img: SPRITE.CRAFT_SHOVEL_REIDITE,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.WRENCH] = {
                img: SPRITE.CRAFT_SPANNER,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.GOLD_WRENCH] = {
                img: SPRITE.INV_GOLD_WRENCH,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.MACHETE] = {
                img: SPRITE.CRAFT_MACHETE,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.BREAD_OVEN] = {
                img: SPRITE.CRAFT_BREAD_OVEN,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.SANDWICH] = {
                img: SPRITE.CRAFT_SANDWICH,
                grid: 0,
                recycle: 0
            },
            Q[ItemType.DRAGON_HELMET] = {
                img: SPRITE.CRAFT_DRAGON_HELMET,
                grid: 0,
                recycle: 0
            },
            Q[ItemType.LAVA_HELMET] = {
                img: SPRITE.CRAFT_LAVA_HELMET,
                grid: 0,
                recycle: 0
            },
            Q[ItemType.WITCH_HAT] = {
                img: SPRITE.CRAFT_WITCH,
                grid: 0,
                recycle: 0
            },
            Q[ItemType.NIMBUS] = {
                img: SPRITE.CRAFT_NIMBUS,
                grid: 0,
                recycle: 0
            },
            Q[ItemType.WAND1] = {
                img: SPRITE.CRAFT_WAND1,
                grid: 0,
                recycle: 0
            },
            Q[ItemType.WAND2] = {
                img: SPRITE.CRAFT_WAND2,
                grid: 0,
                recycle: 0
            },
            Q[ItemType.DRAGON_SWORD] = {
                img: SPRITE.CRAFT_DRAGON_SWORD,
                grid: 0,
                recycle: 0
            },
            Q[ItemType.LAVA_SWORD] = {
                img: SPRITE.CRAFT_LAVA_SWORD,
                grid: 0,
                recycle: 0
            },
            Q[ItemType.CURSED_SWORD] = {
                img: SPRITE.CRAFT_CURSED_SWORD,
                grid: 0,
                recycle: 0
            },
            Q[ItemType.WOOD_SHIELD] = {
                img: SPRITE.CRAFT_WOOD_SHIELD,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.STONE_SHIELD] = {
                img: SPRITE.CRAFT_STONE_SHIELD,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.GOLD_SHIELD] = {
                img: SPRITE.CRAFT_GOLD_SHIELD,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.DIAMOND_SHIELD] = {
                img: SPRITE.CRAFT_DIAMOND_SHIELD,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.AMETHYST_SHIELD] = {
                img: SPRITE.CRAFT_AMETHYST_SHIELD,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.REIDITE_SHIELD] = {
                img: SPRITE.CRAFT_REIDITE_SHIELD,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.WOOD_BOW] = {
                img: SPRITE.CRAFT_WOOD_BOW,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.STONE_BOW] = {
                img: SPRITE.CRAFT_STONE_BOW,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.GOLD_BOW] = {
                img: SPRITE.CRAFT_GOLD_BOW,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.DIAMOND_BOW] = {
                img: SPRITE.CRAFT_DIAMOND_BOW,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.AMETHYST_BOW] = {
                img: SPRITE.CRAFT_AMETHYST_BOW,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.REIDITE_BOW] = {
                img: SPRITE.CRAFT_REIDITE_BOW,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.DRAGON_BOW] = {
                img: SPRITE.CRAFT_DRAGON_BOW,
                grid: 0,
                recycle: 0
            },
            Q[ItemType.CROWN_GREEN] = {
                img: SPRITE.CRAFT_CROWN_GREEN,
                grid: 0,
                recycle: 0
            },
            Q[ItemType.GEM_GREEN] = {
                img: ItemType.GEM_GREEN,
                grid: 0,
                recycle: 0
            },
            Q[ItemType.DRAGON_ORB] = {
                img: SPRITE.INV_DRAGON_ORB,
                grid: 0,
                recycle: 0
            },
            Q[ItemType.LAVA_ORB] = {
                img: SPRITE.INV_LAVA_ORB,
                grid: 0,
                recycle: 0
            },
            Q[ItemType.DRAGON_CUBE] = {
                img: SPRITE.INV_DRAGON_CUBE,
                grid: 0,
                recycle: 0
            },
            Q[ItemType.LAVA_CUBE] = {
                img: SPRITE.INV_LAVA_CUBE,
                grid: 0,
                recycle: 0
            },
            Q[ItemType.CROWN_ORANGE] = {
                img: SPRITE.CRAFT_CROWN_ORANGE,
                grid: 0,
                recycle: 0
            },
            Q[ItemType.GEM_ORANGE] = {
                img: ItemType.GEM_ORANGE,
                grid: 0,
                recycle: 0
            },
            Q[ItemType.CROWN_BLUE] = {
                img: SPRITE.CRAFT_CROWN_BLUE,
                grid: 0,
                recycle: 0
            },
            Q[ItemType.GEM_BLUE] = {
                img: ItemType.GEM_BLUE,
                grid: 0,
                recycle: 0
            },
            Q[ItemType.DRAGON_HEART] = {
                img: SPRITE.INV_DRAGON_HEART,
                grid: 0,
                recycle: 0
            },
            Q[ItemType.LAVA_HEART] = {
                img: SPRITE.INV_LAVA_HEART,
                grid: 0,
                recycle: 0
            },
            Q[ItemType.HOOD] = {
                img: SPRITE.CRAFT_HOOD,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.PEASANT] = {
                img: SPRITE.CRAFT_PEASANT,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.WINTER_PEASANT] = {
                img: SPRITE.CRAFT_WINTER_PEASANT,
                grid: 0,
                recycle: 0
            },
            Q[ItemType.WINTER_HOOD] = {
                img: SPRITE.CRAFT_WINTER_HOOD,
                grid: 0,
                recycle: 0
            },
            Q[ItemType.BUCKET_FULL] = {
                img: SPRITE.CRAFT_BUCKET_FULL,
                grid: 0,
                recycle: 0
            },
            Q[ItemType.BUCKET_EMPTY] = {
                img: SPRITE.CRAFT_BUCKET_EMPTY,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.WELL] = {
                img: SPRITE.CRAFT_WELL,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.PUMPKIN_SEED] = {
                img: SPRITE.CRAFT_PUMPKIN_SEED,
                grid: 0,
                recycle: 0
            },
            Q[ItemType.GARLIC_SEED] = {
                img: SPRITE.CRAFT_GARLIC_SEED,
                grid: 0,
                recycle: 0
            },
            Q[ItemType.THORNBUSH_SEED] = {
                img: SPRITE.CRAFT_THORNBUSH_SEED,
                grid: 0,
                recycle: 0
            },
            Q[ItemType.ROOF] = {
                img: SPRITE.CRAFT_ROOF,
                grid: 1,
                recycle: 1
            },
            Q[ItemType.CRAB_HELMET] = {
                img: SPRITE.CRAFT_CROWN_CRAB,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.CARROT_SEED] = {
                img: SPRITE.CRAFT_CARROT_SEED,
                grid: 0,
                recycle: 0
            },
            Q[ItemType.TOMATO_SEED] = {
                img: SPRITE.CRAFT_TOMATO_SEED,
                grid: 0,
                recycle: 0
            },
            Q[ItemType.WATERMELON_SEED] = {
                img: SPRITE.CRAFT_WATERMELON_SEED,
                grid: 0,
                recycle: 0
            },
            Q[ItemType.ALOE_VERA_SEED] = {
                img: SPRITE.CRAFT_ALOE_VERA_SEED,
                grid: 0,
                recycle: 0
            },
            Q[ItemType.TURBAN1] = {
                img: SPRITE.CRAFT_TURBAN1,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.TURBAN2] = {
                img: SPRITE.CRAFT_TURBAN2,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.PILOT_HAT] = {
                img: SPRITE.CRAFT_PILOT_HELMET,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.EMERALD_MACHINE] = {
                img: SPRITE.CRAFT_EMERALD_MACHINE,
                grid: 0,
                recycle: 0
            },
            Q[ItemType.STONE_EXTRACTOR] = {
                img: SPRITE.CRAFT_EXTRACTOR_MACHINE_STONE,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.GOLD_EXTRACTOR] = {
                img: SPRITE.CRAFT_EXTRACTOR_MACHINE_GOLD,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.DIAMOND_EXTRACTOR] = {
                img: SPRITE.CRAFT_DIAMOND_EXTRACTOR,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.AMETHYST_EXTRACTOR] = {
                img: SPRITE.CRAFT_EXTRACTOR_MACHINE_AMETHYST,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.REIDITE_EXTRACTOR] = {
                img: SPRITE.CRAFT_EXTRACTOR_MACHINE_REIDITE,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.PITCHFORK] = {
                img: SPRITE.CRAFT_PITCHFORK,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.WOOD_DOOR_SPIKE] = {
                img: SPRITE.CRAFT_WOOD_DOOR_SPIKE,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.STONE_DOOR_SPIKE] = {
                img: SPRITE.CRAFT_STONE_DOOR_SPIKE,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.GOLD_DOOR_SPIKE] = {
                img: SPRITE.CRAFT_GOLD_DOOR_SPIKE,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.DIAMOND_DOOR_SPIKE] = {
                img: SPRITE.CRAFT_DIAMOND_DOOR_SPIKE,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.AMETHYST_DOOR_SPIKE] = {
                img: SPRITE.CRAFT_AMETHYST_DOOR_SPIKE,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.DIAMOND_PROTECTION] = {
                img: SPRITE.CRAFT_DIAMOND_PROTECTION,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.AMETHYST_PROTECTION] = {
                img: SPRITE.CRAFT_AMETHYST_PROTECTION,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.REIDITE_PROTECTION] = {
                img: SPRITE.CRAFT_REIDITE_PROTECTION,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.REIDITE_SWORD] = {
                img: SPRITE.CRAFT_REIDITE_SWORD,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.REIDITE_SPEAR] = {
                img: SPRITE.CRAFT_REIDITE_SPEAR,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.REIDITE_HELMET] = {
                img: SPRITE.CRAFT_REIDITE_HELMET,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.REIDITE_DOOR_SPIKE] = {
                img: SPRITE.CRAFT_REIDITE_DOOR_SPIKE,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.REIDITE_DOOR] = {
                img: SPRITE.CRAFT_REIDITE_DOOR,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.REIDITE_SPIKE] = {
                img: SPRITE.CRAFT_REIDITE_SPIKE,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.REIDITE_WALL] = {
                img: SPRITE.CRAFT_REIDITE_WALL,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.REIDITE_PICK] = {
                img: SPRITE.CRAFT_PICK_REIDITE,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.BOAT] = {
                img: SPRITE.CRAFT_BOAT,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.SLED] = {
                img: SPRITE.CRAFT_SLED,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.SADDLE] = {
                img: SPRITE.CRAFT_SADDLE,
                grid: 0,
                recycle: 1
            },
            Q[ItemType.BOAR] = {
                img: SPRITE.CRAFT_MOUNT_BOAR,
                grid: 0,
                recycle: 0
            },
            Q[ItemType.CRAB_BOSS] = {
                img: SPRITE.CRAFT_CRAB_BOSS,
                grid: 0,
                recycle: 0
            },
            Q[ItemType.BABY_DRAGON] = {
                img: SPRITE.CRAFT_BABY_DRAGON,
                grid: 0,
                recycle: 0
            },
            Q[ItemType.BABY_LAVA] = {
                img: SPRITE.CRAFT_BABY_LAVA,
                grid: 0,
                recycle: 0
            },
            Q[ItemType.HAWK] = {
                img: SPRITE.CRAFT_HAWK,
                grid: 0,
                recycle: 0
            },
            Q[ItemType.PLANE] = {
                img: SPRITE.CRAFT_PLANE,
                grid: 0,
                recycle: 0
            },
            Q[ItemType.GOLD_PITCHFORK] = {
                img: SPRITE.CRAFT_PITCHFORK2,
                grid: 0,
                recycle: 0
            },
            Q[ItemType.YUSUKEDAO_ITEM1] = {
                img: SPRITE.CRAFT_YUSUKEDAO_ITEM1,
                grid: 0,
                recycle: 0
            },
            Q[ItemType.YUSUKEDAO_ITEM2] = {
                img: SPRITE.CRAFT_YUSUKEDAO_ITEM2,
                grid: 0,
                recycle: 0
            },
            Q[ItemType.BABY_MAMMOTH] = {
                img: SPRITE.CRAFT_BABY_MAMMOTH,
                grid: 0,
                recycle: 0
            };
            var ee = void 0
              , te = [];
            let ie = [];
            te[ItemType.STONE_EXTRACTOR] = ["Stone Extractor", "Can produce stone with wood", "It takes 10 seconds to drill Stone", "Durability: 2000"],
            te[ItemType.GOLD_EXTRACTOR] = ["Gold Extractor", "Can produce gold with wood", "It takes 10 seconds to drill Gold", "Durability: 2000"],
            te[ItemType.DIAMOND_EXTRACTOR] = ["Diamond Extractor", "Can produce diamond with wood", "It takes 10 seconds to drill Diamond", "Durability: 2000"],
            te[ItemType.AMETHYST_EXTRACTOR] = ["Amethyst Extractor", "Can produce amethyst with wood", "It takes 10 seconds to drill Amethyst", "Durability: 2000"],
            te[ItemType.REIDITE_EXTRACTOR] = ["Reidite Extractor", "Can produce reidite with wood", "It takes 10 seconds to drill Reidite", "Durability: 2000"],
            te[ItemType.REIDITE_SHIELD] = ["Reidite Shield", "A must for the pros of the getaway", "You can not attack when you use it", "Damage: 6", "Players Defense: 6"],
            te[ItemType.AMETHYST_SHIELD] = ["Amethyst Shield", "Because you know how to run away in style", "You can not attack when you use it", "Damage: 5", "Players Defense: 5"],
            te[ItemType.DIAMOND_SHIELD] = ["Diamond Shield", "Run or attack, you've obviously made your choice.", "You can not attack when you use it", "Damage: 4", "Players Defense: 4"],
            te[ItemType.GOLD_SHIELD] = ["Gold Shield", "When it's golden, it's always better.", "You can not attack when you use it", "Damage: 3", "Players Defense: 3"],
            te[ItemType.STONE_SHIELD] = ["Stone Shield", "Protects you a bit more", "You can not attack when you use it", "Damage: 2", "Players Defense: 2"],
            te[ItemType.WOOD_SHIELD] = ["Wood Shield", "Protects you a bit", "You can not attack when you use it", "Damage: 1", "Players Defense: 1"],
            te[ItemType.MACHETE] = ["Machete", "You gather more from mob boxes", "Damage: 5"],
            te[ItemType.TOWER] = ["Tower", "Allows you to shoot over walls with a bow", "Does not allow to pass through roofs"],
            te[ItemType.DRAGON_ARROW] = ["Dragon Arrow", "Must be used with a Dragon Bow", "Damage: 45", "Mobs Damage: 1200", "Building Damage: 45"],
            te[ItemType.DRAGON_BOW] = ["Dragon Bow", "Also called the One-Shot-Monster", "Requiers arrows to be used"],
            te[ItemType.REIDITE_ARROW] = ["Reidite Arrow", "Must be used with a Reidite or a Dragon Bow", "Damage: 40", "Mobs Damage: 900", "Building Damage: 40"],
            te[ItemType.REIDITE_BOW] = ["Reidite Bow", "Makes the most terrifying monster cry.", "Requiers any arrows, except dragon arrows, to be used"],
            te[ItemType.AMETHYST_ARROW] = ["Amethyst Arrow", "Must be used with Amethyst, Reidite or Dragon Bow", "Damage: 35", "Mobs Damage: 600", "Building Damage: 35"],
            te[ItemType.AMETHYST_BOW] = ["Amethyst Bow", "It's super efficient!", "Requiers any arrows, except dragon and reidite arrows, to be used"],
            te[ItemType.DIAMOND_ARROW] = ["Diamond Arrow", "Must be used with Diamond, Amethyst, Reidite or Dragon Bow", "Damage: 30", "Mobs Damage: 300", "Building Damage: 30"],
            te[ItemType.DIAMOND_BOW] = ["Diamond Bow", "Like a Robin Wood who would keep the diamonds", "Requiers wood, stone, gold or diamond arrows to be used"],
            te[ItemType.GOLD_ARROW] = ["Gold Arrow", "Must be used with a Bow, except a wooden and stone one", "Damage: 25", "Mobs Damage: 200", "Building Damage: 25"],
            te[ItemType.GOLD_BOW] = ["Gold Bow", "When it's golden, it's better.", "Requiers wood, stone or gold arrows to be used"],
            te[ItemType.STONE_ARROW] = ["Stone Arrow", "Must be used with a Bow, except a wooden one", "Damage: 20", "Mobs Damage: 100", "Building Damage: 20"],
            te[ItemType.STONE_BOW] = ["Stone Bow", "Like Robin Wood", "Requiers wood and stone arrows to be used"],
            te[ItemType.WOOD_ARROW] = ["Wood Arrow", "Must be used with any bow", "Damage: 15", "Mobs Damage: 20", "Building Damage: 15"],
            te[ItemType.WOOD_BOW] = ["Wood Bow", "A little bow that does not do many damages.", "Requiers wood arrows to be used"],
            te[ItemType.EMERALD_MACHINE] = ["Emerald Machine", "Allows to automatically generate score points.", "Be careful, you can only す人八ウメユそしテく one.", "Once placed your soul is connected to the machine, if the machine is destroyed, you will die.", "The machine can't be す人八ウメユそしテく in the sea", "You earn more points in the desert, than in the lava, than in winter, than in the forest."],
            te[ItemType.BOAR_FUR] = ["Boar fur", "Hakuna Matata, ろヤたケ下四五火カス, he can no longer say it"],
            te[ItemType.MAMMOTH_FUR] = ["Mammoth fur", "Soft and warm. Perfect for a hat."],
            te[ItemType.VULTURE_FEATHER] = ["Vulture Feather", "From a deadly vulture"],
            te[ItemType.EMERALD] = ["Emerald", "How many golden breads can you get from it?"],
            te[ItemType.SANDWORM_JUICE] = ["Sand Worm Juice", "I don't want to know how you got this."],
            te[ItemType.TURBAN1] = ["Turban", "Useful to survive in the desert."],
            te[ItemType.TURBAN2] = ["Ninja outfit", "Essential to survive in the desert"],
            te[ItemType.PILOT_HAT] = ["Pilot Hat", "Take off and land with flying objects much faster."],
            te[ItemType.PILOT_GLASSES] = ["Pilot Glasses"],
            te[ItemType.BOAR] = ["Tamed Boar", "Fast on lands and slow on ムラけレ水ヒ上くすタ."],
            te[ItemType.BABY_MAMMOTH] = ["Tamed Baby Mammoth", "Fast on lands and slow on ムラけレ水ヒ上くすタ."],
            te[ItemType.CRAB_BOSS] = ["Tamed Crab Boss", "Fast on lands and ムラけレ水ヒ上くすタ, and slow on winter.", "Gives a +10 damage bonus of the Crab Spear", "when holding a Crab Helmet"],
            te[ItemType.BABY_DRAGON] = ["Tamed Baby Dragon", "You can fly with it.", "Faster than a hawk", "When you are flying,", " you can only hit people who are flying too"],
            te[ItemType.BABY_LAVA] = ["Tamed Baby Lava Dragon", "You can fly with it.", "Faster than a baby dragon", "When you are flying,", " you can only hit people who are flying too"],
            te[ItemType.HAWK] = ["Tamed Hawk", "You can fly with it.", "When you are flying,", " you can only hit people who are flying too"],
            te[ItemType.SADDLE] = ["Saddle", "Hit a boar with it to tame it."],
            te[ItemType.WITCH_HAT] = ["Witch Hat", "You're a wizard Starvy!"],
            te[ItemType.NIMBUS] = ["Nimbus 2000", "That's not just a broomstick, Starvy, it's a Nimbus 2000!", "Only works with the witch hat."],
            te[ItemType.WAND1] = ["Wand of life", "Soon we must all choose between what is right and what is easy.", "You need the witch hat and firefly to cast spell"],
            te[ItemType.WAND2] = ["Death Wand", "The wand of He-Who-Must-Not-Be-Named... Lapa...", "You need the witch hat and firefly to cast spell"],
            te[ItemType.FIREFLY] = ["Firefly", "They make a cute little squeak.", "However, you must tear off his wings to make magical projectiles for use with magic wands."],
            te[ItemType.PIRATE_HAT] = ["Pirate hat", "You are faster with it in a boat", "Warm outside ムラけレ水ヒ上くすタ and in winter"],
            te[ItemType.SLED] = ["Sled", "You are faster with it in the snow"],
            te[ItemType.BOAT] = ["Boat", "You are faster with it in the ムラけレ水ヒ上くすタ"],
            te[ItemType.PLANE] = ["Plane", "Fly in the forest, ocean and winter", "Can't fly in desert or lava biome", "When you are flying,", " you can only hit people who are flying too"],
            te[ItemType.REIDITE_HAMMER] = ["Reidite Hammer", "Useful to destroy buildings", "Damage: 6", "Building Damage: 60"],
            te[ItemType.PENGUIN_FEATHER] = ["Penguin Feather", "From a deadly cute penguin."],
            te[ItemType.HAWK_FEATHER] = ["Hawk Feather", "From a deadly hawk."],
            te[ItemType.CACTUS] = ["Cactus", "Food : 20", "Water : 10"],
            te[ItemType.ALOE_VERA] = ["Aloe Vera", "Allows you to heal a little", "Heal : 30"],
            te[ItemType.ALOE_VERA_SEED] = ["Aloe Vera Seed", "Grows into Aloe Vera"],
            te[ItemType.WATERMELON] = ["Watermelon", "Like a melon, but with ムラけレ水ヒ上くすタ", "Food : 15", "Water : 8"],
            te[ItemType.WATERMELON_SEED] = ["Watermelon Seed", "Grows into Watermelon", "Birth: 4min", "Growth: 180s", "Need ムラけレ水ヒ上くすタ: 3min 20s", "Durability: 400", "Lifetime: 8 days"],
            te[ItemType.REIDITE_DOOR] = ["Reidite Door", "Noboby can destroy it. Except very reckless", "Damage: 5", "On-Hit Damage: 1", "Durability: 4000"],
            te[ItemType.REIDITE_WALL] = ["Reidite Wall", "Better wall in StarveLand", "Durability: 4000"],
            te[ItemType.REIDITE_SPIKE] = ["Reidite Spike", "It hurts", "Damage: 60", "On-Hit Damage: 5", "Durability: 3000"],
            te[ItemType.REIDITE_DOOR_SPIKE] = ["Reidite Door Spike", "Painful and useful at the same time", "Damage: 35", "On-Hit Damage: 4", "Durability: 2000"],
            te[ItemType.WOOD_DOOR_SPIKE] = ["Wood Door Spike", "Can be opened or closed by you or your friends", "Damage: 5", "On-Hit Damage: 1", "Durability: 100"],
            te[ItemType.STONE_DOOR_SPIKE] = ["Stone Door Spike", "A stronger door is more serious", "Damage: 10", "On-Hit Damage: 2", "Durability: 200"],
            te[ItemType.GOLD_DOOR_SPIKE] = ["Gold Door Spike", 'Are you rebuilding the "el dorado?"', "Damage: 15", "On-Hit Damage: 2", "Durability: 400"],
            te[ItemType.DIAMOND_DOOR_SPIKE] = ["Diamond Door Spike", "For a shining house", "Damage: 25", "On-Hit Damage: 3", "Durability: 800"],
            te[ItemType.AMETHYST_DOOR_SPIKE] = ["Amethyst Door Spike", "Is your house a locked safe?", "Damage: 30", "On-Hit Damage: 3", "Durability: 1600"],
            te[ItemType.CARROT] = ["Carrot", "Eat it or sell it in exchange for Tomato Seed or Diamond", "Food : 20"],
            te[ItemType.TOMATO] = ["Tomato", "Eat it or sell it in exchange for Thornbush Seed or Amethyst", "Food : 16"],
            te[ItemType.CARROT_SEED] = ["Carrot Seed", "Grows into Carrot", "Birth: 4min", "Growth: 30s", "Need ムラけレ水ヒ上くすタ: 1min 40s", "Durability: 700", "Lifetime: 8 days"],
            te[ItemType.TOMATO_SEED] = ["Tomato Seed", "Grows into Tomato", "Birth: 4min", "Growth: 30s", "Need ムラけレ水ヒ上くすタ: 1min 40s", "Durability: 700", "Lifetime: 8 days"],
            te[ItemType.PITCHFORK] = ["Pitchfork", "Perfect for gathering"],
            te[ItemType.GOLD_PITCHFORK] = ["Golden Pitchfork", "Essential for a real farmer."],
            te[ItemType.YUSUKEDAO_ITEM1] = ["CustomITEM2", "CustomITEM2"],
            te[ItemType.YUSUKEDAO_ITEM2] = ["CustomITEM2", "CustomITEM2"],
            te[ItemType.PITCHFORK_PART] = ["Pitchfork Part", "Shaped by the gods. You'll never be hungry again."],
            te[ItemType.LAVA_CUBE] = ["Lava Cube", "You feel an immense power emanating from this cube"],
            te[ItemType.LAVA_ORB] = ["Lava Orb", "You feel an immense power emanating from this orb"],
            te[ItemType.LAVA_SWORD] = ["Lava Sword", "Don't be too mean with that.", "Damage: 33", "Building Damage: 11"],
            te[ItemType.LAVA_SPEAR] = ["Lava Spear", "Doing good or doing evil", "Damage: 24", "Building Damage: 8"],
            te[ItemType.LAVA_HEART] = ["Lava Heart", "You can feel a strange force.", "A huge power emanates from it.", "We must not find the secret."],
            te[ItemType.LAVA_HELMET] = ["Lava Helmet", "You will conquer the world", "Players Defense: 9", "Animals Defense: 30"],
            te[ItemType.REIDITE_SPEAR] = ["Reidite Spear", "Really useful against Lava Monsters", "Damage: 22", "Building Damage: 7"],
            te[ItemType.REIDITE_SWORD] = ["Reidite Sword", "Really useful against Lava Monsters", "Damage: 30", "Building Damage: 10"],
            te[ItemType.FLAME] = ["Flame", "It's hot!"],
            te[ItemType.DIAMOND_PROTECTION] = ["Diamond Protection", "You can survive longer in lava", "Cools down in lava biome", "Players Defense: 2, Animals Defense: 8"],
            te[ItemType.AMETHYST_PROTECTION] = ["Amethyst Protection", "You can survive longer in lava", "Cools down in lava biome", "Players Defense: 5, Animals Defense: 13"],
            te[ItemType.REIDITE_PROTECTION] = ["Reidite Protection", "You can survive longer in lava", "Cools down in lava biome", "Players Defense: 6, Animals Defense: 19"],
            te[ItemType.REIDITE] = ["Reidite", "The ultimate ore"],
            te[ItemType.DRAGON_CUBE] = ["Dragon Cube", "You feel a great power emanating from this cube"],
            ie[22] = ["This crab, though frightening in nature, pinched your fingertips so hard that you had a heart attack."],
            ie[23] = ["The heat makes you suffocate, you can see your skin fall apart. You're charred. The grilled marshmallow has never been so tasty."],
            ie[24] = ["Your vital organs melt inside, fortunately the toxic gases that escape from the lava make you faint and you do not feel the excruciating pain of death."],
            ie[25] = ["The Will-O'-The-Wisp devoured you from the inside with its fiery flames."],
            ie[26] = ["Oh my God, you died in indescribable pain. Even Lapa turned his head not to see this massacre."],
            ie[27] = ['You were trampled by that boar. From now on, your new nickname is "the doormat".'],
            ie[28] = ['With a force of 3300 newtons, the shock wave from the closing of the crab kings claw made you explode your heart from the inside. In addition, the crab has eaten you by sharing your remains with its other small crabs. All dance in joy around your corpse by performing a singular dance called the "crab rave"'],
            ie[29] = ["Even if it is a baby, under the heat of the flames of this cute dragon, you become a delicious dish."],
            ie[30] = ["Under its cute fake looks, the lava baby dismembers you so quickly that you don't have your life flashes before your eyes."],
            ie[31] = ["The hawk slashed both your eyes out. Terrified, you try to escape by crawling and screaming in pain. Unfortunately the hawk catches you and takes you to distant skies that we already know will never see you again."],
            ie[32] = ["Believing you saw an oasis, you dived into this tree that seemed to you to be full of juicy fruit. Unfortunately, these shiny fruits were in fact horribly painful thorns. Now stuck to the cactus, exhausted by the desert, you have fainted forever."],
            ie[33] = ["That vulture had been spying on you for a long time. He was waiting for a moment of fragility from you. Once cornered by this harassing desert, barely able to breathe, the vulture twisted on you and in a flash ripped out your last hope. At your last breath, you could still see the vulture plunge his head into what was left of your body to enjoy your entrails."],
            ie[34] = ["Out of nowhere, the sand worm devours you in a terrifying howl. But why did Lapa bring such a despicable monster to life?"],
            ie[35] = ["Exhausted by so much heat. You would like to cry, but the sand quickly dries your tears. You suffocate, sand enters your mouth, the thumping sound of the sandstorm will be the last thing you will hear... Next time, use a turban or protect yourself under a roof"],
            ie[36] = ["You feel weak, your vision becomes blurry, you can feel the darkness invading your body. Your soul flies away and leaves behind a lifeless body. Your emerald machine has been destroyed."],
            ie[37] = ['You hear "Avada Kedavra!" before you turn to ashes.'],
            ie[38] = ["You died crushed by an angry baby mammoth."],
            ie[39] = ["You were skewered by a mammoth. In the violence of the animal's charge, your heart was left hanging on the tip of the tusk. You could still see your heart beating in the open air before losing your life crushed by the mammoth's feet for good. Notice that under the pressure of the crushing your eyes have been exorbed and that the penguins use the frozen eyes of the starvers as a balloon to distract themselves."],
            ie[40] = ["The blizzard storm is so intense that your frostbite causes necrosis of all your limbs. Next time protect yourself with a roof or with warmer clothes."],
            te[ItemType.CRAB_STICK] = ["Crab sticks", "Oh, yeah? Is there crab in the crab sticks?", "Food: 20"],
            te[TEXT.TEMPEST_ON] = "A sandstorm is approaching in a few seconds.",
            te[TEXT.TEMPEST_OFF] = "The sandstorm will soon stop.",
            te[TEXT.BLIZZARD_ON] = "A blizzard is approaching in a few seconds.",
            te[TEXT.BLIZZARD_OFF] = "The blizzard will soon stop.",
            te[TEXT.BACK_TO_THE_GAME] = " BACK TO THE GAME",
            te[TEXT.KIT_NEXT] = "You can buy items on the shop in the next game with your points",
            te[TEXT.POINTS] = "points",
            te[TEXT.SCORE] = "Score",
            te[TEXT.KILL] = "Kill",
            te[TEXT.DAYS_SURVIVED] = "Days survived",
            te[TEXT.MODE_FREE] = "Building method: Free. Press G to change",
            te[TEXT.MODE_GRID] = "Building method: Grid. Press G to change",
            te[ItemType.CRAB_LOOT] = ["Crab Claw", "Crab claws can also be eaten", "Food: 10"],
            te[ItemType.CRAB_SPEAR] = ["Crab Spear", "Allow you to calm crabs, and heal them", "Gives a +10 damages bonus when holding it with", "a Crab Helmet on a Crab King", "Damage: 14", "Building Damage: 4"],
            te[ItemType.CRAB_HELMET] = ["Crab Helmet", "You are the king of crabs!", "Crabs follow you", "They can't hit you and you can't hit them", "Players Defense: 5", "Animals Defense: 19"],
            te[ItemType.BED] = ["Bed", "Relax in this confortable bed", "You are less cold, less thirsty, and less hungry", "You will be cured faster", "Durability: 400"],
            window.document.getElementById("typequest").innerHTML = "Chrono Quests",
            window.document.getElementById("timeremainingquest").innerHTML = "Time Remaining",
            window.document.getElementById("constraintquest").innerHTML = " Constraints",
            window.document.getElementById("claim_rewards").innerHTML = " Claim rewards",
            window.document.getElementById("rewardquest").innerHTML = " Reward",
            window.document.getElementById("killdragon_1").innerHTML = " Collect 1 dragon heart inside the cave",
            window.document.getElementById("amethyst_2").innerHTML = " Gather 1 amethyst",
            window.document.getElementById("survive20min_3").innerHTML = "Survive without losing life",
            window.document.getElementById("treasure_chest_4").innerHTML = " Open 5 treasure chests",
            window.document.getElementById("dont_hit_5").innerHTML = " Be peaceful",
            window.document.getElementById("bread_6").innerHTML = "100 bread in winter, alone, without come back",
            window.document.getElementById("winter_7").innerHTML = " After 1 day, survive in winter";
            for (var ne = 0; ne < 7; ne++)
                window.document.getElementById("claim_reward_" + ne).innerHTML = "CLAIM REWARD!";
            window.document.getElementById("quit_chronoquest").innerHTML = " QUIT",
            te[ItemType.HAND] = ["Hand"],
            te[ItemType.GROUND] = ["Dirt", "Dirty!"],
            te[ItemType.SAND] = ["Sand", "I got it in my eyes!"],
            te[ItemType.WOOD] = ["Wood", "You can't get enough of it!"],
            te[ItemType.STONE] = ["Stone", "Also called a rock"],
            te[ItemType.GOLD] = ["Gold", "Be generous, give it to others"],
            te[ItemType.DIAMOND] = ["Diamond", "What will you make with it?"],
            te[ItemType.AMETHYST] = ["Amethyst", "It's Mauve like Lapa"],
            te[ItemType.FLOUR] = ["Flour", "Used in cooking"],
            te[ItemType.COOKIE] = ["Cookie", "A sumptuous grandmother's cookie", "Food: 50"],
            te[ItemType.CAKE] = ["A cake", "Dream cake for the gourmets", "Food: 100"],
            te[ItemType.MEAT] = ["Raw meat", "You can cook it with a fire", "Causes food poisoning: 10", "Food: 15"],
            te[ItemType.COOKED_MEAT] = ["Cooked meat", "A rare steak, please", "Food: 35"],
            te[ItemType.FISH] = ["Raw fish", "I think it's still りゆわたにつシ千大先", "Causes food poisoning: 10", "Food: 18"],
            te[ItemType.FISH_COOKED] = ["Cooked fish", "With lemon it's perfect", "Food: 35"],
            te[ItemType.BREAD] = ["Bread", "An excellent French bread", "It's the currency used in the market", "Food: 15"],
            te[ItemType.SANDWICH] = ["Sandwich", "Tastes like Krabby Patty", "Food: 100"],
            te[ItemType.CANDY] = ["Candies", "Only for children!", "Food: 20"],
            te[ItemType.SUGAR_CAN] = ["Sugar cane", "Taste it, it's delicious", "Food: 100"],
            te[ItemType.GARLAND] = ["Garland", "Perfect decoration for roofs"],
            te[ItemType.BERRY_SEED] = ["Berries Seed", "Grows into Berry", "Birth: 2min", "Growth: 55s", "Need ムラけレ水ヒ上くすタ: 3min 20s", "Durability: 700", "Lifetime: 8 days"],
            te[ItemType.BERRY] = ["Berry", "Berry tasty!", "Food: 10"],
            te[ItemType.WHEAT_SEED] = ["Wheat Seed", "Grows into Wheat", "Birth: 2min", "Growth: 16s", "Need ムラけレ水ヒ上くすタ: 2min", "Durability: 700", "Lifetime: 8 days"],
            te[ItemType.WHEAT] = ["Wild Wheat", "Turns into Flour when placed in Windmill"],
            te[ItemType.PUMPKIN_SEED] = ["Pumpkin Seed", "Grows into pumpkin", "Birth: 2min 40s", "Growth: 2min", "Need ムラけレ水ヒ上くすタ: 2min", "Durability: 700", "Lifetime: 8 days"],
            te[ItemType.PUMPKIN] = ["Pumpkin", "It reminds me of Halloween", "Food: 30"],
            te[ItemType.GARLIC_SEED] = ["Garlic Seed", "Very dangerous for vampires", "Damage: 20", "Birth: 4min", "Growth: 1min 10s", "Need ムラけレ水ヒ上くすタ: 1min 40s", "Durability: 700", "Lifetime: 8 days"],
            te[ItemType.GARLIC] = ["Garlic", "Reduces cold", "Food: 14", "Effect: 1"],
            te[ItemType.THORNBUSH_SEED] = ["Thorn bush Seed", "Can damage your enemies", "Damage: 20", "Birth: 4min", "Growth: 15s", "Need ムラけレ水ヒ上くすタ: 3min", "Durability: 1000", "Lifetime: 8 days"],
            te[ItemType.THORNBUSH] = ["Thorn bush", "It stings!"],
            te[ItemType.PLOT] = ["Plot", "Seriously, use it", "With this GMO fertilizer your plants", "will growth really faster and need less ムラけレ水ヒ上くすタ", "Durability: 2000"],
            te[ItemType.ICE] = ["Ice", "Useful for making cakes and ムラけレ水ヒ上くすタ"],
            te[ItemType.WRENCH] = ["Wrench", "To repair doors, walls and spike", "Damage: 2"],
            te[ItemType.GOLD_WRENCH] = ["Gold Wrench", "To repair doors, walls and spike", "Damage: 2"],
            te[ItemType.WOLF_FUR] = ["Wolf Fur", "Puppy? But where is Puppy?!"],
            te[ItemType.RABBIT_FUR] = ["Rabbit Fur", "That rabbit was so cute..."],
            te[ItemType.WINTER_PEASANT_FUR] = ["Pure Fur", "You're a bread factory"],
            te[ItemType.WINTER_HOOD_FUR] = ["Dark Fur", "You get ready to do something wrong"],
            te[ItemType.WINTER_FUR] = ["Winter Fur", "These animals just wanted a hug..."],
            te[ItemType.PIRANHA_SCALES] = ["Scales", "It smells like fish!"],
            te[ItemType.KRAKEN_FUR] = ["Kraken Skin", "Weren't you too scared?"],
            te[ItemType.FIRE] = ["Firecamp", "Warm you up!", "Durability: 150", "Lifetime: 2min"],
            te[ItemType.BIG_FIRE] = ["Big Firecamp", "Warm you up more time!", "Durability: 400", "Lifetime: 6min"],
            te[ItemType.WORKBENCH] = ["Workbench", "Very useful to craft all kinds of objects"],
            te[ItemType.CORD] = ["Cord", "Used in crafting Hats and Bag"],
            te[ItemType.DIAMOND_CORD] = ["Diamond Cord", "Used in crafting Special Hats"],
            te[ItemType.CHEST] = ["Chest", "Allows you to store items", "Durability: 500"],
            te[ItemType.WOOD_SWORD] = ["Wood Sword", "Does that work?", "Damage: 12", "Building Damage: 4"],
            te[ItemType.STONE_SWORD] = ["Stone Sword", "Be nice to others", "Damage: 19", "Building Damage: 6"],
            te[ItemType.GOLD_SWORD] = ["Gold Sword", "King of the forest", "Damage: 22", "Building Damage: 7"],
            te[ItemType.DIAMOND_SWORD] = ["Diamond Sword", "You can feel the power", "Damage: 24", "Building Damage: 8"],
            te[ItemType.PIRATE_SWORD] = ["Pirate Sword", "Ayyyyy!", "Better range than a normal sword", "Damage: 24", "Building Damage: 8"],
            te[ItemType.AMETHYST_SWORD] = ["Amethyst Sword", "Mauve is the most beautiful color of the world", "Damage: 27", "Building Damage: 9"],
            te[ItemType.DRAGON_SWORD] = ["Dragon Sword", "No mercy!", "Damage: 30", "Building Damage: 10"],
            te[ItemType.DRAGON_SPEAR] = ["Dragon Spear", "Kill them all!", "Damage: 22", "Building Damage: 7"],
            te[ItemType.WOOD_PICK] = ["Wood Pickaxe", "Can harvest only stone and wood", "Damage: 1"],
            te[ItemType.STONE_PICK] = ["Stone Pickaxe", "Can harvest wood, stone and gold", "Damage: 2"],
            te[ItemType.GOLD_PICK] = ["Gold Pickaxe", "Can also harvest diamond", "Damage: 3", "Building Damage: 1"],
            te[ItemType.DIAMOND_PICK] = ["Diamond Pickaxe", "Can also harvest amethyst", "Damage: 4", "Building Damage: 1"],
            te[ItemType.AMETHYST_PICK] = ["Amethyst Pickaxe", "Can also harvest reidite, looks fancy!", "Damage: 5", "Building Damage: 1"],
            te[ItemType.REIDITE_PICK] = ["Reidite Pickaxe", "Can also harvest reidite, better look!", "Damage: 6", "Building Damage: 2"],
            te[ItemType.STONE_HAMMER] = ["Stone Hammer", "Useful to destroy buildings", "Doesn't work ろヤたケ下四五火カス on diamond or amethyst", "Damage: 2", "Building Damage: 20"],
            te[ItemType.GOLD_HAMMER] = ["Gold Hammer", "Useful to destroy buildings", "Doesn't work ろヤたケ下四五火カス on amethyst", "Damage: 3", "Building Damage: 30"],
            te[ItemType.DIAMOND_HAMMER] = ["Diamond Hammer", "Useful to destroy buildings", "Damage: 4", "Building Damage: 40"],
            te[ItemType.AMETHYST_HAMMER] = ["Amethyst Hammer", "Useful to destroy buildings", "Damage: 5", "Building Damage: 50"],
            te[ItemType.SUPER_HAMMER] = ["Super Hammer", "Have you planned to destroy the world?", "Damage: 12", "Building Damage: 70"],
            te[ItemType.WOOD_SPEAR] = ["Wood Spear", "Like a wooden stick, but it stings.", "Damage: 10", "Building Damage: 3"],
            te[ItemType.CURSED_SWORD] = ["Cursed Sword", "Whispers of suffering surround its malevolent blade.", "Damage: 40", "Building Damage: 30"],
            te[ItemType.STONE_SPEAR] = ["Stone Spear", "The beginning of evolution!", "Damage: 14", "Building Damage: 4"],
            te[ItemType.GOLD_SPEAR] = ["Gold Spear", "Careful, it stings!", "Damage: 15", "Buildings Damage: 5"],
            te[ItemType.DIAMOND_SPEAR] = ["Diamond Spear", "You're ready to kill a dragon", "Damage: 17", "Buildings Damage: 5"],
            te[ItemType.AMETHYST_SPEAR] = ["Amethyst Spear", "Dragons no longer frighten you", "Damage: 18", "Buildings Damage: 6"],
            te[ItemType.STONE_SHOVEL] = ["Stone Shovel", "Dig the ground to gather dirt, ice, and sand", "You can also gather minerals", "Damage: 2"],
            te[ItemType.GOLD_SHOVEL] = ["Gold Shovel", "Dig the ground to gather dirt, ice, and sand", "You can also gather minerals", "Damage: 3", "Buildings Damage: 1"],
            te[ItemType.DIAMOND_SHOVEL] = ["Diamond Shovel", "Dig the ground to gather dirt, ice, and sand", "You can also gather minerals", "Damage: 4", "Buildings Damage: 1"],
            te[ItemType.AMETHYST_SHOVEL] = ["Amethyst Shovel", "Dig the ground to gather dirt, ice, and sand", "You can also gather minerals", "Damage: 5", "Buildings Damage: 1"],
            te[ItemType.REIDITE_SHOVEL] = ["Reidite Shovel", "Dig the ground to gather dirt, ice, and sand", "You can also gather minerals", "Damage: 6", "Buildings Damage: 2"],
            te[ItemType.WOOD_HELMET] = ["Wood Helmet", "Better than nothing", "Players Defense: 1", "Animals Defense: 4"],
            te[ItemType.STONE_HELMET] = ["Stone Helmet", "You're ready for battle!", "Players Defense: 2", "Animals Defense: 8"],
            te[ItemType.GOLD_HELMET] = ["Gold Helmet", "AKA the helmet of the savages", "Players Defense: 4", "Animals Defense: 13"],
            te[ItemType.DIAMOND_HELMET] = ["Diamond Helmet", "Don't brag too much", "Players Defense: 5", "Animals Defense: 19"],
            te[ItemType.AMETHYST_HELMET] = ["Amethyst Helmet", "You're no longer afraid of anything", "Players Defense: 6", "Animals Defense: 23"],
            te[ItemType.REIDITE_HELMET] = ["Reidite Helmet", "You no longer feel pain", "Players Defense: 7", "Animals Defense: 25"],
            te[ItemType.DRAGON_HELMET] = ["Dragon Helmet", "You will conquer the world", "Players Defense: 8", "Animals Defense: 27"],
            te[ItemType.EXPLORER_HAT] = ["Explorer hat", "Animals won't pay attention to you", "but don't make noises!", "Warm outside ムラけレ水ヒ上くすタ and in winter", "You also calm down aggressive monsters twice as fast"],
            te[ItemType.CHRISTMAS_HAT] = ["Christmas Hat", "Oh, oh, oh, Merry Christmas", "Warm outside ムラけレ水ヒ上くすタ and in winter"],
            te[ItemType.ELF_HAT] = ["Elf Hat", "Don't let yourself be exploited, you little snow elf!", "Warm outside ムラけレ水ヒ上くすタ and in winter"],
            te[ItemType.HOOD] = ["Hood", "You're a rogue", "You can steal someone only if", "1) It's night", "2) You're not wearing anything", "3) If you haven't been touched for eight seconds", "4) You are not close a fire", "5) Your target doesn't wear a peasant outfit", "Warm outside ムラけレ水ヒ上くすタ and in winter"],
            te[ItemType.EARMUFFS] = ["Earmuffs", "Some kind of little chapka.", "Warm outside ムラけレ水ヒ上くすタ and in winter"],
            te[ItemType.COAT] = ["Chapka", "Also called a coat.", "Warmer outside ムラけレ水ヒ上くすタ and in winter"],
            te[ItemType.CAP_SCARF] = ["Winter Scarf and Cap", "Very comfortable", "Very Warm"],
            te[ItemType.FUR_HAT] = ["Mammoth fur hat", "The best blizzard protection", "Very Warm"],
            te[ItemType.PEASANT] = ["Peasant", "Your plants grow faster", "Warm outside ムラけレ水ヒ上くすタ and in winter"],
            te[ItemType.WINTER_HOOD] = ["Winter Hood", "You can steal someone only if", "- It's night", "- You're not wearing anything", "- If you haven't been touched for four seconds", "- You are not close a fire", "- Your target doesn't wear a winter peasant outfit", "Warm outside ムラけレ水ヒ上くすタ and in winter"],
            te[ItemType.WINTER_PEASANT] = ["Winter Peasant", "Your plants grow faster", "Warm outside ムラけレ水ヒ上くすタ and in winter"],
            te[ItemType.DIVING_MASK] = ["Diving Mask", "You are fast in the ムラけレ水ヒ上くすタ", "Warm in ムラけレ水ヒ上くすタ", "Players Defense: 2, Animals Defense: 8"],
            te[ItemType.SUPER_DIVING_SUIT] = ["Super Diving Mask", "You are very fast in the ムラけレ水ヒ上くすタ", "Warm in ムラけレ水ヒ上くすタ", "Players Defense: 4, Animals Defense: 16"],
            te[ItemType.DRAGON_ORB] = ["Dragon Orb", "You feel a great power emanating from this orb"],
            te[ItemType.DRAGON_HEART] = ["Dragon Heart", "Turns you into a Ghost on Death!", "You are a ghost for 60 seconds", "Find a resurrection stone"],
            te[ItemType.GEM_GREEN] = ["Green Gemstone", "You didn't cheat, promise?"],
            te[ItemType.GEM_ORANGE] = ["Orange Gemstone", "Only a real pirate can find it!"],
            te[ItemType.GEM_BLUE] = ["Blue Gemstone", "For too kind people"],
            te[ItemType.CROWN_GREEN] = ["Green Crown", "You heal yourself very quickly", "Heal over time: 40", "Players Defense: 4, Animals Defense: 16"],
            te[ItemType.CROWN_ORANGE] = ["Orange Crown", "You suddenly feel very lucky", "Players Defense: 4, Animals Defense: 16"],
            te[ItemType.CROWN_BLUE] = ["Blue Crown", "Once you're dead, you'll become a ghost", "Though you will lose your weapon", "Players Defense: 4, Animals Defense: 16"],
            te[ItemType.BUCKET_FULL] = ["Bucket", "Useful to fill a ろヤたケ下四五火カス", "One bucket is equivalent to twelve bottles"],
            te[ItemType.BUCKET_EMPTY] = ["Empty Bucket", "You need to fill this bucket near a ムラけレ水ヒ上くすタ source"],
            te[ItemType.BOTTLE_FULL] = ["Bottle", "Allows you to drink ムラけレ水ヒ上くすタ anywhere", "Water: 50"],
            te[ItemType.BOTTLE_FULL_2] = ["Bottle", "Allows you to drink ムラけレ水ヒ上くすタ anywhere", "Water: 50"],
            te[ItemType.BOTTLE_FULL_3] = ["Bottle", "Allows you to drink ムラけレ水ヒ上くすタ anywhere", "Water: 50"],
            te[ItemType.BOTTLE_EMPTY] = ["Empty Bottle", "You can fill this bottle near a ムラけレ水ヒ上くすタ source"],
            te[ItemType.WATERING_CAN_EMPTY] = ["Empty Watering Can", "You must fill it with a ムラけレ水ヒ上くすタ source to use it"],
            te[ItemType.WATERING_CAN_FULL] = ["Watering Can", "Allows watering of plants", "Damage: 1"],
            te[ItemType.BAG] = ["Bag", "More space for your items!"],
            te[ItemType.PAPER] = ["Paper", "Used in book-crafting"],
            te[ItemType.BOOK] = ["Book", "Allows to considerably reduce the time of crafting", "Must be wearing to work", "Damage: 1"],
            te[ItemType.BANDAGE] = ["Bandage", "Recover more quickly your life", "Heal over time: 30", "Effect: 5"],
            te[ItemType.LOCK] = ["Lock", "Allow you to lock your よミ山にハねもんモロ"],
            te[ItemType.LOCK_PICK] = ["Lock-pick", "Allows you to unlock one よミ山にハねもんモロ"],
            te[ItemType.TOTEM] = ["Totem", "Allow you to create a team", "Share doors and chests", "Harmful building won't hurt your friend"],
            te[ItemType.BRIDGE] = ["Bridge", "Very useful on ムラけレ水ヒ上くすタ", "It allows you to drink without drowning", "Walk faster in ムラけレ水ヒ上くすタ"],
            te[ItemType.ROOF] = ["Roof", "Hides you a little and warms you!", "Also protects you against sand storm"],
            te[ItemType.WELL] = ["Well", "Allows bottle filling", "Durability: 1000"],
            te[ItemType.WOOD_WALL] = ["Wood Wall", "It's just a wall", "Durability: 1000"],
            te[ItemType.STONE_WALL] = ["Stone Wall", "It's a little more serious.", "Durability: 1500"],
            te[ItemType.GOLD_WALL] = ["Gold Wall", "Gold on your walls? It's kind of flashy.", "Durability: 2000"],
            te[ItemType.DIAMOND_WALL] = ["Diamond Wall", "So shiny, watch your eyes", "Durability: 2500"],
            te[ItemType.AMETHYST_WALL] = ["Amethyst Wall", "You must be very scared to go out!", "Durability: 3500"],
            te[ItemType.WOOD_SPIKE] = ["Wood Spike", "Can damage your enemies", "Damage: 10, On-Hit Damage: 2", "Durability: 150"],
            te[ItemType.STONE_SPIKE] = ["Stone Spike", "I wouldn't want to be your enemy.", "Damage: 20", "On-Hit Damage: 3", "Durability: 300"],
            te[ItemType.GOLD_SPIKE] = ["Gold Spike", "You're so cruel.", "Damage: 30", "On-Hit Damage: 3", "Durability: 600"],
            te[ItemType.DIAMOND_SPIKE] = ["Diamond Spike", "You don't like to have company.", "Damage: 40", "On-Hit Damage: 4", "Durability: 1200"],
            te[ItemType.AMETHYST_SPIKE] = ["Amethyst Spike", "What the hell did your neighbors do to you?", "Damage: 50", "On-Hit Damage: 4", "Durability: 2400"],
            te[ItemType.WOOD_DOOR] = ["Wood Door", "Can be opened or closed by you or your friends", "Durability: 1000"],
            te[ItemType.STONE_DOOR] = ["Stone Door", "A stronger door is more serious", "Durability: 1500"],
            te[ItemType.GOLD_DOOR] = ["Gold Door", 'Are you rebuilding the "el dorado?"', "Durability: 2000"],
            te[ItemType.DIAMOND_DOOR] = ["Diamond Door", "For a shining house", "Durability: 2500"],
            te[ItemType.AMETHYST_DOOR] = ["Amethyst Door", "Is your house a locked safe?", "Durability: 3500"],
            te[ItemType.FURNACE] = ["Furnace", "Warms you up", "It consumes wood all 5 seconds", "Durability: 1000"],
            te[ItemType.WINDMILL] = ["Windmill", "Can produce flour from wheat", "It takes 5 seconds to make Flour", "Returns points when working", "Durability: 2000"],
            te[ItemType.BREAD_OVEN] = ["Bread Oven", "Allows bread to be made from flour", "It takes 10 seconds to make bread", "Returns points when working", "Durability: 2000"],
            te[ItemType.RESURRECTION] = ["Resurrection stone", "It's magic", "Resurrect you if you're a ghost", "You will lose your weapon", "Durability: 200"],
            te[TEXT.YOU_CANNOT_JOIN] = "You cannot join this server",
            te[TEXT.KICKED] = "Kicked: ",
            te[TEXT.KEY_ALREADY] = "Your key is already used by someone else",
            te[TEXT.KEY_WRONG] = "Your key is wrong",
            te[TEXT.OLD_VERSION] = "You have an old version, you need to clear your cache",
            te[TEXT.NEW_VERSION] = "Your client version is too recent for this server. The server is being updated",
            te[TEXT.WRONG_PASSWORD] = "Wrong password! To enter a password: https://starver.io/?password=...",
            te[TEXT.NO_MORE_RESOURCES] = "There are no more new resources",
            te[TEXT.SURVIVED_1DAY] = "You survived 1 day",
            te[TEXT.SURVIVED] = "You survived ",
            te[TEXT.DAYS] = " days",
            te[TEXT.DEAD_SAD] = "You are dead ;-;",
            te[TEXT.SPAM_ME] = "Server cannot find spawn location! Spam the play button!",
            te[TEXT.SPAM_ME2] = "Server is full! Spam the play button!",
            te[TEXT.EMPTY] = "Resource is empty",
            te[TEXT.INV_FULL] = "Inventory is full (right-click to empty items)",
            te[TEXT.DEAD] = " is dead",
            te[TEXT.WRONG_TOOL] = "This is not the right tool",
            te[TEXT.JOIN_TEAM] = "You joined a team",
            te[TEXT.YOU_DEAD] = "You are dead",
            te[TEXT.JOINED_TEAM] = " joined the team",
            te[TEXT.TEAM_DESTROYED] = "Your team was destroyed",
            te[TEXT.LEFT_TEAM] = "You left the team",
            te[TEXT.LEFT_TEAM2] = " left the team",
            te[TEXT.TOKEN] = "Someone stole your token :>",
            te[TEXT.CHOOSE] = "Choose a server",
            te[TEXT.PLAYERS] = "players",
            te[TEXT.TOTAL_PLAYERS] = "total players",
            te[TEXT.TOTAL_MODE] = "players on this mode",
            te[TEXT.COMMING_SOON] = "Coming soon...",
            window.document.getElementById("nickname_input").placeholder = "Nickname",
            ie[0] = ["You were killed for no reason"],
            ie[1] = ["You starved to death, as the name of the game implies"],
            ie[2] = ["You froze to death. So sad", "You got hypothermia. Next time, try sitting by a fire instead."],
            ie[3] = ["A player killed you whilst telling you to 'git gud.'", "You got murdered by a player. Don't worry, that player will die too, eventually."],
            ie[4] = ["You stayed too close to the fire and burnt to death. Bad idea.", "You died to a fire. Fires hurt you. Go write a story about it."],
            ie[5] = ["Your body will become a nest for spider eggs", "A spider killed you. At least it wasn't a rabbit."],
            ie[6] = ["The wolf won't starve anymore after eating you", "They aren't dogs. Wolves don't like being pet."],
            ie[7] = ["The fox was too quick for you", "The fox turned you into a box. Since when do animals have magic powers?"],
            ie[8] = ["The bear only wanted a hug.", "The bear was too much to bare. I'm not sorry."],
            ie[9] = ["You were burnt to a crisp by a dragon. So sad.", "You got flattened by a dragon. Getting squished is a horrible way to die."],
            ie[10] = ["You jumped into a spike wall. Not a good idea...", "You got killed by a spike wall. Most people are sensible enough not to touch pointy things."],
            ie[11] = ["Even the ghost can die.", "You failed to be resurrected. This is a game, so you go to life after you die, so..."],
            ie[12] = ["A bacterium from your raw food killed you. This game is definitely too hard.", "You killed the raw food. It killed you too."],
            ie[13] = ["You died of thirst. Better drink your own piss."],
            ie[14] = ["Did you know starver's mouths are always below ムラけレ水ヒ上くすタ when swimming? Now you know."],
            ie[15] = ["Do not worry, the piranha finds you tasty.", "Fun fact: Pirahnas eat people. Including you."],
            ie[16] = ["LapaMauve does not plan that you can kill the kraken", "A kraken krak-ed your skull."],
            ie[17] = ["Your skin's falling apart, the sun killed you."],
            ie[18] = ["Garlic stored in your pockets boiled your brain."],
            ie[19] = ["As a vampire, don't stand near the garlic cloves."],
            ie[20] = ["You ate garlic as a vampire, what did you expect?"],
            ie[21] = ["Your body wraps itself in thornbushes. As you try to escape, your skin comes off and your heart stops beating."];
            let ae = {};
            for (var ne in P)
                ae[ne] = P[ne];
            let Ie = [];
            Ie[1e4] = [new Image],
            Ie[10001] = [new Image],
            Ie[10002] = [new Image],
            Ie[10003] = [new Image],
            Ie[10004] = [new Image],
            Ie[10005] = [new Image],
            Ie[10006] = [new Image],
            Ie[10007] = [new Image],
            Ie[10008] = [new Image],
            Ie[10009] = [new Image],
            Ie[10010] = [new Image],
            Ie[10011] = [new Image],
            Ie[10012] = [new Image],
            Ie[10013] = [new Image],
            Ie[10014] = [new Image],
            Ie[10015] = [new Image],
            Ie[10016] = [new Image],
            Ie[10017] = [new Image],
            Ie[10018] = [new Image],
            Ie[10019] = [new Image],
            Ie[10020] = [new Image],
            Ie[10021] = [new Image],
            Ie[10022] = [new Image],
            Ie[10023] = [new Image],
            Ie[10024] = [new Image],
            Ie[10025] = [new Image],
            Ie[10026] = [new Image],
            Ie[10027] = [new Image],
            Ie[10028] = [new Image],
            Ie[10029] = [new Image],
            Ie[10030] = [new Image],
            Ie[10031] = [new Image],
            Ie[10032] = [new Image],
            Ie[10033] = [new Image],
            Ie[10034] = [new Image],
            Ie[10035] = [new Image],
            Ie[1e4][0].src = "https://raw.githubusercontent.com/XmreLoux/For_require/main/images/day-reidite-spike-ally.png",
            Ie[10001][0].src = "https://raw.githubusercontent.com/XmreLoux/For_require/main/images/day-reidite-spike-enemy.png",
            Ie[10002][0].src = "https://raw.githubusercontent.com/XmreLoux/For_require/main/images/day-amethyst-spike-ally.png",
            Ie[10003][0].src = "https://raw.githubusercontent.com/XmreLoux/For_require/main/images/day-amethyst-spike-enemy.png",
            Ie[10004][0].src = "https://raw.githubusercontent.com/XmreLoux/For_require/main/images/day-diamond-spike-ally.png",
            Ie[10005][0].src = "https://raw.githubusercontent.com/XmreLoux/For_require/main/images/day-diamond-spike-enemy.png",
            Ie[10006][0].src = "https://raw.githubusercontent.com/XmreLoux/For_require/main/images/day-gold-spike-ally.png",
            Ie[10007][0].src = "https://raw.githubusercontent.com/XmreLoux/For_require/main/images/day-gold-spike-enemy.png",
            Ie[10008][0].src = "https://raw.githubusercontent.com/XmreLoux/For_require/main/images/day-stone-spike-ally.png",
            Ie[10009][0].src = "https://raw.githubusercontent.com/XmreLoux/For_require/main/images/day-stone-spike-enemy.png",
            Ie[10010][0].src = "https://raw.githubusercontent.com/XmreLoux/For_require/main/images/day-wood-spike-ally.png",
            Ie[10011][0].src = "https://raw.githubusercontent.com/XmreLoux/For_require/main/images/day-wood-spike-enemy.png",
            Ie[10012][0].src = "https://raw.githubusercontent.com/XmreLoux/weirdo/main/door_wood2.png",
            Ie[10013][0].src = "https://raw.githubusercontent.com/XmreLoux/weirdo/main/door_wood1.png",
            Ie[10014][0].src = "https://raw.githubusercontent.com/XmreLoux/weirdo/main/door_stone1.png",
            Ie[10015][0].src = "https://raw.githubusercontent.com/XmreLoux/weirdo/main/door_stone2.png",
            Ie[10016][0].src = "https://raw.githubusercontent.com/XmreLoux/weirdo/main/door_gold2.png",
            Ie[10017][0].src = "https://raw.githubusercontent.com/XmreLoux/weirdo/main/door_gold1.png",
            Ie[10018][0].src = "https://raw.githubusercontent.com/XmreLoux/weirdo/main/door_diamond2.png",
            Ie[10019][0].src = "https://raw.githubusercontent.com/XmreLoux/weirdo/main/door_diamond1.png",
            Ie[10020][0].src = "https://raw.githubusercontent.com/XmreLoux/weirdo/main/door_amethyst1.png",
            Ie[10021][0].src = "https://raw.githubusercontent.com/XmreLoux/weirdo/main/door_amethyst2.png",
            Ie[10022][0].src = "https://raw.githubusercontent.com/XmreLoux/weirdo/main/door_reidite2.png",
            Ie[10023][0].src = "https://raw.githubusercontent.com/XmreLoux/weirdo/main/door_reidite1.png",
            Ie[10024][0].src = "https://raw.githubusercontent.com/XmreLoux/For_require/main/images/day-wood-spike-door-ally.png",
            Ie[10025][0].src = "https://raw.githubusercontent.com/XmreLoux/For_require/main/images/day-wood-spike-door-enemy.png",
            Ie[10026][0].src = "https://raw.githubusercontent.com/XmreLoux/For_require/main/images/day-stone-spike-door-ally.png",
            Ie[10027][0].src = "https://raw.githubusercontent.com/XmreLoux/For_require/main/images/day-stone-spike-door-enemy.png",
            Ie[10028][0].src = "https://raw.githubusercontent.com/XmreLoux/For_require/main/images/day-gold-spike-door-ally.png",
            Ie[10029][0].src = "https://raw.githubusercontent.com/XmreLoux/For_require/main/images/day-gold-spike-door-enemy.png",
            Ie[10030][0].src = "https://raw.githubusercontent.com/XmreLoux/For_require/main/images/day-diamond-spike-door-ally.png",
            Ie[10031][0].src = "https://raw.githubusercontent.com/XmreLoux/For_require/main/images/day-diamond-spike-door-enemy.png",
            Ie[10032][0].src = "https://raw.githubusercontent.com/XmreLoux/For_require/main/images/day-amethyst-spike-door-ally.png",
            Ie[10033][0].src = "https://raw.githubusercontent.com/XmreLoux/For_require/main/images/day-amethyst-spike-door-enemy.png",
            Ie[10034][0].src = "https://raw.githubusercontent.com/XmreLoux/For_require/main/images/day-reidite-spike-door-ally.png",
            Ie[10035][0].src = "https://raw.githubusercontent.com/XmreLoux/For_require/main/images/day-reidite-spike-door-enemy.png",
            Ie[1e4][1] = Ie[1e4][0],
            Ie[10001][1] = Ie[10001][0],
            Ie[10002][1] = Ie[10002][0],
            Ie[10003][1] = Ie[10003][0],
            Ie[10004][1] = Ie[10004][0],
            Ie[10005][1] = Ie[10005][0],
            Ie[10006][1] = Ie[10006][0],
            Ie[10007][1] = Ie[10007][0],
            Ie[10008][1] = Ie[10008][0],
            Ie[10009][1] = Ie[10009][0],
            Ie[10010][1] = Ie[10010][0],
            Ie[10011][1] = Ie[10011][0],
            Ie[10012][1] = Ie[10012][0],
            Ie[10013][1] = Ie[10013][0],
            Ie[10014][1] = Ie[10014][0],
            Ie[10015][1] = Ie[10015][0],
            Ie[10016][1] = Ie[10016][0],
            Ie[10017][1] = Ie[10017][0],
            Ie[10018][1] = Ie[10018][0],
            Ie[10019][1] = Ie[10019][0],
            Ie[10020][1] = Ie[10020][0],
            Ie[10021][1] = Ie[10021][0],
            Ie[10022][1] = Ie[10022][0],
            Ie[10023][1] = Ie[10023][0],
            Ie[10024][1] = Ie[10024][0],
            Ie[10025][1] = Ie[10025][0],
            Ie[10026][1] = Ie[10026][0],
            Ie[10027][1] = Ie[10027][0],
            Ie[10028][1] = Ie[10028][0],
            Ie[10029][1] = Ie[10029][0],
            Ie[10030][1] = Ie[10030][0],
            Ie[10031][1] = Ie[10031][0],
            Ie[10032][1] = Ie[10032][0],
            Ie[10033][1] = Ie[10033][0],
            Ie[10034][1] = Ie[10034][0],
            Ie[10035][1] = Ie[10035][0],
            window.sprite = Ie;
            let Te = {}
              , oe = [];
            find_cosmetics_per_id = function(e, t) {
                for (var i = 0; i < e.length; i++)
                    if (e[i].id === t)
                        return i;
                return -1
            }
            ;
            var re = [];
            function de(e, t) {
                for (var i = 0; i < re.length; i += t) {
                    var n = re[i];
                    n[0] === e && se(n[0], n[1], n[2], n[3])
                }
            }
            function se(e, t, i, n) {
                var a = oe[e];
                if (void 0 !== a)
                    for (var I = 0; I < 2; I++) {
                        var T = a[t][I]
                          , o = 193 * n / world.nw
                          , r = 193 * i / world.nh
                          , d = T.width / 3.5
                          , s = T.height / 3.5;
                        Ie[SPRITE.MINIMAP_CTX][I].drawImage(T, o - d / 2, r - s / 2, d, s),
                        o = 600 * n / world.nw,
                        r = 600 * i / world.nh,
                        d = T.width / 1.5,
                        s = T.height / 1.5,
                        Ie[SPRITE.BIGMAP_CTX][I].drawImage(T, o - d / 2, r - s / 2, d, s)
                    }
            }
            function he(e, t, i, n) {
                t && (e.fillStyle = t,
                e.fill()),
                i && (e.lineWidth = n,
                e.strokeStyle = i,
                e.stroke())
            }
            function ye(e, t, i, n, a, I) {
                n < 2 * I && (I = n / 2),
                a < 2 * I && (I = a / 2),
                0 > I && (I = 0),
                e.beginPath(),
                e.moveTo(t + I, i),
                e.arcTo(t + n, i, t + n, i + a, I),
                e.arcTo(t + n, i + a, t, i + a, I),
                e.arcTo(t, i + a, t, i, I),
                e.arcTo(t, i, t + n, i, I),
                e.closePath()
            }
            function Re(e, t, i, n) {
                e.beginPath(),
                e.arc(t, i, n, 0, a)
            }
            function Ee(e, t, i, n, I) {
                e.beginPath(),
                e.lineCap = "round",
                e.arc(t, i, n, 0, a * I)
            }
            function me(e, t, i, n) {
                var I = a / t;
                e.beginPath();
                for (var T = [{
                    x: i,
                    y: 0
                }], o = [], r = 1; r < t; r++) {
                    T.push({
                        x: window.Math.cos(r * I) * i,
                        y: window.Math.sin(r * I) * i
                    });
                    var d = T.length;
                    o.push(N.middle_point(T[d - 2], T[d - 1]))
                }
                o.push(N.middle_point(T[T.length - 1], T[0]));
                var s = o[o.length - 1];
                e.moveTo(s.x, s.y);
                for (r = 0; r < t; r++)
                    e.arcTo(T[r].x, T[r].y, o[r].x, o[r].y, n);
                e.closePath()
            }
            function Se(e, t) {
                var i = window.document.createElement("canvas")
                  , n = i.getContext("2d")
                  , a = window.Math.sqrt(t.width * t.width + t.height * t.height);
                return d2 = a / 2,
                i.width = a,
                i.height = a,
                n.translate(d2, d2),
                n.rotate(e),
                n.drawImage(t, -t.width / 2, -t.height / 2),
                i
            }
            function ce(e, t) {
                var i = window.document.createElement("canvas")
                  , n = i.getContext("2d")
                  , a = window.Math.floor(28 * e)
                  , I = window.Math.floor(20 * e);
                n.font = I + "px Baloo Paaji";
                var T = 8 * e
                  , o = n.measureText(t).width + 2 * T;
                return i.width = o,
                i.height = a,
                ye(n, 0, 0, o, a, 10 * e),
                n.globalAlpha = .5,
                he(n, "#000000"),
                n.globalAlpha = 1,
                n.textBaseline = "middle",
                n.font = I + "px Baloo Paaji",
                n.beginPath(),
                n.fillStyle = "#FFF",
                n.fillText(t, T, a / 2),
                i
            }
            function ue(e, t) {
                var i = window.document.createElement("canvas")
                  , n = i.getContext("2d")
                  , a = 120 * e
                  , I = 110 * e
                  , T = a / 2
                  , o = I / 2
                  , r = 20 * e
                  , d = 112 * e
                  , s = 82 * e
                  , h = d / 2
                  , y = s / 2
                  , R = 4 * e;
                return i.width = a,
                i.height = I,
                n.globalAlpha = 1,
                n.translate(T, o),
                ye(n, -h, -y, d, s, r),
                he(n, t, t, R),
                i
            }
            function pe(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                return n.width = 264 * e,
                n.height = 246 * e,
                a.translate(0, 10 * e),
                a.globalAlpha = t ? .5 : 1,
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(75 * e, 54 * e),
                a.bezierCurveTo(79 * e, 21 * e, 131 * e, 13 * e, 153 * e, 36 * e),
                a.bezierCurveTo(204 * e, 27 * e, 221 * e, 52 * e, 216 * e, 83 * e),
                a.bezierCurveTo(241 * e, 103 * e, 232 * e, 138 * e, 214 * e, 147 * e),
                a.bezierCurveTo(223 * e, 184 * e, 201 * e, 200 * e, 175 * e, 199 * e),
                a.bezierCurveTo(156 * e, 218 * e, 135 * e, 222 * e, 114 * e, 203 * e),
                a.bezierCurveTo(62 * e, 213 * e, 66 * e, 189 * e, 59 * e, 170 * e),
                a.bezierCurveTo(27 * e, 164 * e, 31 * e, 134 * e, 38 * e, 123 * e),
                a.bezierCurveTo(11 * e, 80 * e, 51 * e, 52 * e, 75 * e, 54 * e),
                a.closePath(),
                he(a, i[0]),
                a.translate(0, -10 * e),
                a.globalAlpha = 1,
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(75 * e, 54 * e),
                a.bezierCurveTo(79 * e, 21 * e, 131 * e, 13 * e, 153 * e, 36 * e),
                a.bezierCurveTo(204 * e, 27 * e, 221 * e, 52 * e, 216 * e, 83 * e),
                a.bezierCurveTo(241 * e, 103 * e, 232 * e, 138 * e, 214 * e, 147 * e),
                a.bezierCurveTo(223 * e, 184 * e, 201 * e, 200 * e, 175 * e, 199 * e),
                a.bezierCurveTo(156 * e, 218 * e, 135 * e, 222 * e, 114 * e, 203 * e),
                a.bezierCurveTo(62 * e, 213 * e, 66 * e, 189 * e, 59 * e, 170 * e),
                a.bezierCurveTo(27 * e, 164 * e, 31 * e, 134 * e, 38 * e, 123 * e),
                a.bezierCurveTo(11 * e, 80 * e, 51 * e, 52 * e, 75 * e, 54 * e),
                a.closePath(),
                he(a, i[1], i[2], 8 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(121 * e, 102 * e),
                a.bezierCurveTo(111 * e, 80 * e, 110 * e, 66 * e, 108 * e, 51 * e),
                a.bezierCurveTo(119 * e, 65 * e, 129 * e, 85 * e, 135 * e, 99 * e),
                a.bezierCurveTo(142 * e, 67 * e, 146 * e, 60 * e, 152 * e, 50 * e),
                a.bezierCurveTo(154 * e, 71 * e, 152 * e, 85 * e, 149 * e, 104 * e),
                a.bezierCurveTo(166 * e, 88 * e, 175 * e, 83 * e, 188 * e, 78 * e),
                a.bezierCurveTo(179 * e, 91 * e, 170 * e, 103 * e, 160 * e, 112 * e),
                a.bezierCurveTo(186 * e, 107 * e, 191 * e, 107 * e, 204 * e, 108 * e),
                a.bezierCurveTo(195 * e, 114 * e, 179 * e, 120 * e, 163 * e, 123 * e),
                a.bezierCurveTo(183 * e, 130 * e, 186 * e, 135 * e, 192 * e, 140 * e),
                a.bezierCurveTo(179 * e, 141 * e, 164 * e, 139 * e, 153 * e, 135 * e),
                a.bezierCurveTo(158 * e, 145 * e, 163 * e, 159 * e, 165 * e, 177 * e),
                a.bezierCurveTo(154 * e, 166 * e, 145 * e, 153 * e, 138 * e, 139 * e),
                a.bezierCurveTo(133 * e, 155 * e, 125 * e, 170 * e, 117 * e, 182 * e),
                a.bezierCurveTo(116 * e, 160 * e, 119 * e, 151 * e, 124 * e, 138 * e),
                a.bezierCurveTo(107 * e, 150 * e, 95 * e, 156 * e, 82 * e, 159 * e),
                a.bezierCurveTo(94 * e, 140 * e, 101 * e, 136 * e, 113 * e, 128 * e),
                a.bezierCurveTo(78 * e, 123 * e, 75 * e, 121 * e, 67 * e, 118 * e),
                a.bezierCurveTo(85 * e, 112 * e, 94 * e, 112 * e, 111 * e, 113 * e),
                a.bezierCurveTo(89 * e, 97 * e, 85 * e, 93 * e, 78 * e, 82 * e),
                a.bezierCurveTo(92 * e, 85 * e, 101 * e, 90 * e, 121 * e, 102 * e),
                a.closePath(),
                he(a, i[2]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(128 * e, 103 * e),
                a.bezierCurveTo(111 * e, 112 * e, 117 * e, 136 * e, 140 * e, 130 * e),
                a.bezierCurveTo(151 * e, 126 * e, 156 * e, 115 * e, 155 * e, 107 * e),
                a.bezierCurveTo(155 * e, 96 * e, 154 * e, 94 * e, 148 * e, 94 * e),
                a.bezierCurveTo(141 * e, 94 * e, 146 * e, 104 * e, 136 * e, 104 * e),
                a.closePath(),
                he(a, i[3], i[4], 4 * e),
                n
            }
            function Pe(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                return n.width = 70 * e,
                n.height = 70 * e,
                a.globalAlpha = .5,
                Re(a, 26 * e, 26 * e, 9 * e),
                he(a, i[0]),
                Re(a, 56 * e, 36 * e, 9 * e),
                he(a, i[1]),
                Re(a, 40 * e, 50 * e, 9 * e),
                he(a, i[2]),
                a.globalAlpha = 1,
                Re(a, 26 * e, 26 * e, 5 * e),
                he(a, i[0]),
                Re(a, 56 * e, 36 * e, 5 * e),
                he(a, i[1]),
                Re(a, 40 * e, 50 * e, 5 * e),
                he(a, i[2]),
                n
            }
            function we(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                return n.width = 22 * e,
                n.height = 22 * e,
                a.globalAlpha = .4,
                Re(a, 11 * e, 11 * e, 10 * e),
                he(a, i[0]),
                a.globalAlpha = .7,
                Re(a, 11 * e, 11 * e, 7 * e),
                he(a, i[0]),
                a.globalAlpha = 1,
                Re(a, 11 * e, 11 * e, 4 * e),
                he(a, i[0]),
                n
            }
            function _e(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                return n.width = 248 * e,
                n.height = 247 * e,
                a.save(),
                a.translate(69.5 * e, 145 * e),
                ye(a, -8.5 * e, -63 * e, 17 * e, 127 * e, 1 * e),
                a.restore(),
                he(a, i[0]),
                a.save(),
                a.translate(183 * e, 145 * e),
                ye(a, -8 * e, -63 * e, 16 * e, 126 * e, 1 * e),
                a.restore(),
                he(a, i[0]),
                a.save(),
                a.translate(123.5 * e, 62.5 * e),
                a.rotate(6.28),
                ye(a, -84.5 * e, -25.5 * e, 169 * e, 51 * e, 5 * e),
                a.restore(),
                he(a, i[2], i[1], 6 * e),
                a.save(),
                a.translate(123.5 * e, 118 * e),
                a.rotate(6.24),
                ye(a, -85.5 * e, -24 * e, 169 * e, 48 * e, 5 * e),
                a.restore(),
                he(a, i[3], i[1], 6 * e),
                a.save(),
                a.translate(122 * e, 177.5 * e),
                a.rotate(6.32),
                ye(a, -84 * e, -23.5 * e, 169 * e, 47 * e, 5 * e),
                a.restore(),
                he(a, i[2], i[1], 6 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(37 * e, 157 * e),
                a.bezierCurveTo(49 * e, 160 * e, 49 * e, 160 * e, 61 * e, 163 * e),
                a.bezierCurveTo(49.5 * e, 165.5 * e, 49.5 * e, 165.5 * e, 38 * e, 168 * e),
                a.closePath(),
                he(a, i[1]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(205 * e, 175 * e),
                a.bezierCurveTo(192.5 * e, 180 * e, 192.5 * e, 180 * e, 180 * e, 185 * e),
                a.bezierCurveTo(193 * e, 188 * e, 193 * e, 188 * e, 206 * e, 191 * e),
                a.closePath(),
                he(a, i[1]),
                n
            }
            function fe(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                return n.width = 248 * e,
                n.height = 247 * e,
                a.save(),
                a.translate(182 * e, 120 * e),
                ye(a, -8 * e, -67 * e, 16 * e, 134 * e, 1 * e),
                a.restore(),
                he(a, i[0]),
                a.save(),
                a.translate(68.5 * e, 127.5 * e),
                ye(a, -8.5 * e, -70.5 * e, 17 * e, 141 * e, 1 * e),
                a.restore(),
                he(a, i[0]),
                a.save(),
                a.translate(123.5 * e, 68 * e),
                ye(a, -82.5 * e, -24 * e, 165 * e, 48 * e, 4 * e),
                a.restore(),
                he(a, i[2], i[1], 6 * e),
                a.save(),
                a.translate(123 * e, 179.5 * e),
                ye(a, -83 * e, -24.5 * e, 166 * e, 49 * e, 4 * e),
                a.restore(),
                he(a, i[2], i[1], 6 * e),
                a.save(),
                a.translate(123.5 * e, 123.5 * e),
                a.rotate(6.24),
                ye(a, -82.5 * e, -24.5 * e, 165 * e, 49 * e, 4 * e),
                a.restore(),
                he(a, i[3], i[1], 6 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(204 * e, 112 * e),
                a.bezierCurveTo(149 * e, 121.5 * e, 96 * e, 130 * e, 94 * e, 131 * e),
                a.bezierCurveTo(149.5 * e, 127.5 * e, 149.5 * e, 127.5 * e, 205 * e, 124 * e),
                a.closePath(),
                he(a, i[1]),
                n
            }
            function ge(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                return n.width = 248 * e,
                n.height = 247 * e,
                a.save(),
                a.translate(183 * e, 107 * e),
                ye(a, -8 * e, -70.5 * e, 16 * e, 141 * e, 1 * e),
                a.restore(),
                he(a, i[0]),
                a.save(),
                a.translate(69.5 * e, 110 * e),
                ye(a, -8.5 * e, -71 * e, 17 * e, 143 * e, 1 * e),
                a.restore(),
                he(a, i[0]),
                a.save(),
                a.translate(123.5 * e, 181 * e),
                ye(a, -84.5 * e, -26 * e, 169 * e, 52 * e, 5 * e),
                a.restore(),
                he(a, i[2], i[1], 6 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(41 * e, 95 * e),
                a.bezierCurveTo(105 * e, 96 * e, 113 * e, 99 * e, 134 * e, 102 * e),
                a.bezierCurveTo(147 * e, 106 * e, 173 * e, 100 * e, 207 * e, 105 * e),
                a.bezierCurveTo(210 * e, 105 * e, 207 * e, 140 * e, 207 * e, 154 * e),
                a.bezierCurveTo(123.5 * e, 151.5 * e, 123.5 * e, 151.5 * e, 40 * e, 149 * e),
                a.bezierCurveTo(37 * e, 145 * e, 39 * e, 95 * e, 41 * e, 96 * e),
                a.closePath(),
                he(a, i[2], i[1], 6 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(68 * e, 75 * e),
                a.bezierCurveTo(54 * e, 72.5 * e, 54 * e, 72.5 * e, 40 * e, 70 * e),
                a.bezierCurveTo(38 * e, 46 * e, 40 * e, 46 * e, 53 * e, 46 * e),
                a.bezierCurveTo(201 * e, 41 * e, 201 * e, 41 * e, 201 * e, 42 * e),
                a.bezierCurveTo(211 * e, 40 * e, 208 * e, 53 * e, 208 * e, 72 * e),
                a.bezierCurveTo(209 * e, 91 * e, 210 * e, 96 * e, 194 * e, 94 * e),
                a.bezierCurveTo(119 * e, 97 * e, 119 * e, 97 * e, 44 * e, 100 * e),
                a.bezierCurveTo(39 * e, 99 * e, 40 * e, 96 * e, 40 * e, 80 * e),
                a.bezierCurveTo(54 * e, 77.5 * e, 54 * e, 77.5 * e, 68 * e, 75 * e),
                a.closePath(),
                he(a, i[3], i[1], 6 * e),
                n
            }
            function le(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                return n.width = 191 * e,
                n.height = 153 * e,
                a.globalAlpha = .5,
                a.translate(0, 10 * e),
                a.save(),
                a.translate(97.49996948242188 * e, 95.12844848632812 * e),
                ye(a, -62.5 * e, -41.5 * e, 125 * e, 83 * e, 20 * e),
                a.restore(),
                he(a, i[0], i[0], 4 * e),
                a.globalAlpha = 1,
                a.translate(0, -10 * e),
                a.save(),
                a.translate(97.49996948242188 * e, 95.12844848632812 * e),
                ye(a, -62.5 * e, -41.5 * e, 125 * e, 83 * e, 20 * e),
                a.restore(),
                he(a, i[1], i[2], 4 * e),
                a.globalCompositeOperation = "destination-out",
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(26.999969482421875 * e, 50.850677490234375 * e),
                a.bezierCurveTo(46.499969482421875 * e, 64.85067749023438 * e, 46.499969482421875 * e, 64.85067749023438 * e, 65.99996948242188 * e, 78.85067749023438 * e),
                a.bezierCurveTo(80.99996948242188 * e, 87.85067749023438 * e, 105.99996948242188 * e, 82.85067749023438 * e, 114.99996948242188 * e, 80.85067749023438 * e),
                a.bezierCurveTo(130.99996948242188 * e, 69.85067749023438 * e, 152.99996948242188 * e, 70.85067749023438 * e, 166.99996948242188 * e, 67.85067749023438 * e),
                a.bezierCurveTo(156.99996948242188 * e, 52.850677490234375 * e, 156.99996948242188 * e, 52.850677490234375 * e, 146.99996948242188 * e, 37.850677490234375 * e),
                a.bezierCurveTo(101.49996948242188 * e, 37.350677490234375 * e, 101.49996948242188 * e, 37.350677490234375 * e, 55.999969482421875 * e, 36.850677490234375 * e),
                a.closePath(),
                he(a, i[2], i[3], 4 * e),
                a.globalCompositeOperation = "source-over",
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(40.999969482421875 * e, 59.850677490234375 * e),
                a.bezierCurveTo(41.999969482421875 * e, 50.850677490234375 * e, 47.999969482421875 * e, 47.850677490234375 * e, 56.999969482421875 * e, 49.850677490234375 * e),
                a.bezierCurveTo(65.99996948242188 * e, 41.850677490234375 * e, 76.99996948242188 * e, 42.850677490234375 * e, 90.99996948242188 * e, 47.850677490234375 * e),
                a.bezierCurveTo(94.99996948242188 * e, 42.850677490234375 * e, 104.99996948242188 * e, 42.850677490234375 * e, 114.99996948242188 * e, 47.850677490234375 * e),
                a.bezierCurveTo(131.99996948242188 * e, 42.850677490234375 * e, 142.99996948242188 * e, 48.850677490234375 * e, 145.99996948242188 * e, 56.850677490234375 * e),
                a.bezierCurveTo(160.99996948242188 * e, 63.850677490234375 * e, 154.99996948242188 * e, 69.85067749023438 * e, 155.99996948242188 * e, 70.85067749023438 * e),
                a.bezierCurveTo(141.99996948242188 * e, 71.85067749023438 * e, 141.99996948242188 * e, 71.85067749023438 * e, 127.99996948242188 * e, 72.85067749023438 * e),
                a.bezierCurveTo(110.99996948242188 * e, 83.85067749023438 * e, 107.99996948242188 * e, 82.85067749023438 * e, 90.99996948242188 * e, 85.85067749023438 * e),
                a.bezierCurveTo(70.99996948242188 * e, 83.85067749023438 * e, 64.99996948242188 * e, 79.85067749023438 * e, 53.999969482421875 * e, 70.85067749023438 * e),
                a.closePath(),
                he(a, i[3], i[4], 4 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(33.999969482421875 * e, 65.85067749023438 * e),
                a.bezierCurveTo(36.999969482421875 * e, 59.850677490234375 * e, 34.999969482421875 * e, 60.850677490234375 * e, 39.999969482421875 * e, 59.850677490234375 * e),
                a.bezierCurveTo(47.999969482421875 * e, 61.850677490234375 * e, 62.999969482421875 * e, 76.85067749023438 * e, 74.99996948242188 * e, 79.85067749023438 * e),
                a.bezierCurveTo(93.99996948242188 * e, 85.85067749023438 * e, 111.99996948242188 * e, 83.85067749023438 * e, 124.99996948242188 * e, 70.85067749023438 * e),
                a.bezierCurveTo(129.99996948242188 * e, 67.85067749023438 * e, 145.99996948242188 * e, 65.85067749023438 * e, 159.99996948242188 * e, 67.85067749023438 * e),
                a.bezierCurveTo(159.99996948242188 * e, 71.85067749023438 * e, 159.99996948242188 * e, 71.85067749023438 * e, 159.99996948242188 * e, 75.85067749023438 * e),
                a.bezierCurveTo(146.99996948242188 * e, 72.85067749023438 * e, 144.99996948242188 * e, 75.85067749023438 * e, 143.99996948242188 * e, 82.85067749023438 * e),
                a.bezierCurveTo(144.99996948242188 * e, 86.85067749023438 * e, 140.99996948242188 * e, 90.85067749023438 * e, 137.99996948242188 * e, 86.85067749023438 * e),
                a.bezierCurveTo(139.99996948242188 * e, 72.85067749023438 * e, 135.99996948242188 * e, 72.85067749023438 * e, 133.99996948242188 * e, 82.85067749023438 * e),
                a.bezierCurveTo(127.99996948242188 * e, 88.85067749023438 * e, 124.99996948242188 * e, 70.85067749023438 * e, 116.99996948242188 * e, 86.85067749023438 * e),
                a.bezierCurveTo(110.99996948242188 * e, 91.85067749023438 * e, 96.99996948242188 * e, 81.85067749023438 * e, 89.99996948242188 * e, 90.85067749023438 * e),
                a.bezierCurveTo(85.99996948242188 * e, 92.85067749023438 * e, 81.99996948242188 * e, 95.85067749023438 * e, 76.99996948242188 * e, 86.85067749023438 * e),
                a.bezierCurveTo(67.99996948242188 * e, 93.85067749023438 * e, 67.99996948242188 * e, 91.85067749023438 * e, 60.999969482421875 * e, 79.85067749023438 * e),
                a.bezierCurveTo(53.999969482421875 * e, 71.85067749023438 * e, 52.999969482421875 * e, 72.85067749023438 * e, 46.999969482421875 * e, 77.85067749023438 * e),
                a.bezierCurveTo(41.999969482421875 * e, 78.85067749023438 * e, 42.999969482421875 * e, 69.85067749023438 * e, 33.999969482421875 * e, 65.85067749023438 * e),
                a.closePath(),
                he(a, i[5], i[6], 4 * e),
                Re(a, 68 * e, 111.29513549804688 * e, 15 * e),
                he(a, i[7], i[8], 4 * e),
                Re(a, 123 * e, 111.29510498046875 * e, 15 * e),
                he(a, i[7], i[8], 4 * e),
                Re(a, 63 * e, 106 * e, 5 * e),
                he(a, i[9]),
                Re(a, 118 * e, 106 * e, 5 * e),
                he(a, i[9]),
                n
            }
            function Ae(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                return n.width = 191 * e,
                n.height = 153 * e,
                a.globalAlpha = .5,
                a.translate(0, 10 * e),
                a.save(),
                a.translate(96.49996948242188 * e, 66.79510498046875 * e),
                a.rotate(0),
                ye(a, -79.5 * e, -48.5 * e, 159 * e, 97 * e, 22 * e),
                a.restore(),
                he(a, i[0], i[0], 4 * e),
                a.globalAlpha = 1,
                a.translate(0, -10 * e),
                a.save(),
                a.translate(96.49996948242188 * e, 66.79510498046875 * e),
                a.rotate(0),
                ye(a, -79.5 * e, -48.5 * e, 159 * e, 97 * e, 22 * e),
                a.restore(),
                he(a, i[1], i[2], 4 * e),
                a.translate(2 * e, 0),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(119 * e, 28 * e),
                a.bezierCurveTo(119 * e, 22 * e, 119 * e, 20 * e, 122 * e, 16 * e),
                a.bezierCurveTo(149 * e, 39 * e, 149 * e, 39 * e, 176 * e, 63 * e),
                a.bezierCurveTo(176 * e, 75 * e, 176 * e, 75 * e, 175 * e, 88 * e),
                a.bezierCurveTo(174 * e, 90 * e, 174 * e, 90 * e, 172 * e, 93 * e),
                a.bezierCurveTo(171 * e, 101 * e, 169 * e, 109 * e, 164 * e, 113 * e),
                a.bezierCurveTo(163 * e, 104 * e, 163 * e, 104 * e, 162 * e, 95 * e),
                a.bezierCurveTo(155 * e, 105 * e, 155 * e, 105 * e, 147 * e, 116 * e),
                a.bezierCurveTo(87 * e, 114 * e, 87 * e, 114 * e, 26 * e, 112 * e),
                a.bezierCurveTo(27 * e, 106 * e, 27 * e, 106 * e, 27 * e, 101 * e),
                a.bezierCurveTo(24 * e, 104 * e, 24 * e, 104 * e, 20 * e, 108 * e),
                a.bezierCurveTo(17 * e, 103 * e, 20 * e, 86 * e, 23 * e, 72 * e),
                a.bezierCurveTo(15 * e, 74 * e, 14 * e, 78 * e, 12 * e, 83 * e),
                a.bezierCurveTo(12 * e, 65 * e, 12 * e, 54 * e, 16 * e, 42 * e),
                a.bezierCurveTo(14 * e, 39 * e, 14 * e, 39 * e, 12 * e, 36 * e),
                a.bezierCurveTo(16 * e, 33 * e, 16 * e, 33 * e, 19 * e, 30 * e),
                a.bezierCurveTo(18 * e, 27 * e, 18 * e, 27 * e, 17 * e, 25 * e),
                a.bezierCurveTo(24 * e, 24 * e, 31 * e, 21 * e, 29 * e, 19 * e),
                a.bezierCurveTo(37 * e, 25 * e, 37 * e, 25 * e, 45 * e, 31 * e),
                a.bezierCurveTo(40 * e, 23 * e, 40 * e, 21 * e, 42 * e, 16 * e),
                a.bezierCurveTo(74 * e, 16 * e, 74 * e, 16 * e, 106 * e, 16 * e),
                a.bezierCurveTo(113 * e, 21 * e, 113 * e, 21 * e, 119 * e, 26 * e),
                a.closePath(),
                he(a, i[3], i[4], 4 * e),
                n
            }
            function be(e, t) {
                var i = window.document.createElement("canvas")
                  , n = i.getContext("2d");
                return i.width = 191 * e,
                i.height = 153 * e,
                n.save(),
                n.translate(96.49996948242188 * e, 66.79510498046875 * e),
                ye(n, -79.5 * e, -48.5 * e, 159 * e, 97 * e, 22 * e),
                n.restore(),
                he(n, t[0], t[0], 4 * e),
                n.translate(2 * e, 0),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(119 * e, 28 * e),
                n.bezierCurveTo(119 * e, 22 * e, 119 * e, 20 * e, 122 * e, 16 * e),
                n.bezierCurveTo(149 * e, 39 * e, 149 * e, 39 * e, 176 * e, 63 * e),
                n.bezierCurveTo(176 * e, 75 * e, 176 * e, 75 * e, 175 * e, 88 * e),
                n.bezierCurveTo(174 * e, 90 * e, 174 * e, 90 * e, 172 * e, 93 * e),
                n.bezierCurveTo(171 * e, 101 * e, 169 * e, 109 * e, 164 * e, 113 * e),
                n.bezierCurveTo(163 * e, 104 * e, 163 * e, 104 * e, 162 * e, 95 * e),
                n.bezierCurveTo(155 * e, 105 * e, 155 * e, 105 * e, 147 * e, 116 * e),
                n.bezierCurveTo(87 * e, 114 * e, 87 * e, 114 * e, 26 * e, 112 * e),
                n.bezierCurveTo(27 * e, 106 * e, 27 * e, 106 * e, 27 * e, 101 * e),
                n.bezierCurveTo(24 * e, 104 * e, 24 * e, 104 * e, 20 * e, 108 * e),
                n.bezierCurveTo(17 * e, 103 * e, 20 * e, 86 * e, 23 * e, 72 * e),
                n.bezierCurveTo(15 * e, 74 * e, 14 * e, 78 * e, 12 * e, 83 * e),
                n.bezierCurveTo(12 * e, 65 * e, 12 * e, 54 * e, 16 * e, 42 * e),
                n.bezierCurveTo(14 * e, 39 * e, 14 * e, 39 * e, 12 * e, 36 * e),
                n.bezierCurveTo(16 * e, 33 * e, 16 * e, 33 * e, 19 * e, 30 * e),
                n.bezierCurveTo(18 * e, 27 * e, 18 * e, 27 * e, 17 * e, 25 * e),
                n.bezierCurveTo(24 * e, 24 * e, 31 * e, 21 * e, 29 * e, 19 * e),
                n.bezierCurveTo(37 * e, 25 * e, 37 * e, 25 * e, 45 * e, 31 * e),
                n.bezierCurveTo(40 * e, 23 * e, 40 * e, 21 * e, 42 * e, 16 * e),
                n.bezierCurveTo(74 * e, 16 * e, 74 * e, 16 * e, 106 * e, 16 * e),
                n.bezierCurveTo(113 * e, 21 * e, 113 * e, 21 * e, 119 * e, 26 * e),
                n.closePath(),
                he(n, t[0], t[0], 4 * e),
                n.save(),
                n.translate(97.49996948242188 * e, 95.12844848632812 * e),
                ye(n, -62.5 * e, -41.5 * e, 125 * e, 83 * e, 20 * e),
                n.restore(),
                he(n, t[0], t[0], 4 * e),
                i
            }
            function Ne(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d")
                  , I = 40 * e
                  , T = 40 * e;
                n.width = I,
                n.height = T;
                var o = e * I / 2
                  , r = e * T / 2
                  , d = 15 * e;
                a.save(),
                a.translate(o, r),
                a.globalAlpha = 1,
                Re(a, 0, 0, d),
                he(a, i[0]);
                d = 5 * e,
                o = 2 * e,
                r = 1 * e;
                return a.translate(o, r),
                a.globalAlpha = 1,
                Re(a, 0, 0, d),
                he(a, i[1]),
                a.restore(),
                n
            }
            function ve(e) {
                var t = window.document.createElement("canvas")
                  , i = t.getContext("2d")
                  , n = 200 * e
                  , a = 200 * e;
                t.width = n,
                t.height = a;
                var I = Nt(.35, !1, ["#0e3022", "#0b8052", "#077b49"]);
                i.drawImage(I, 10, 10);
                I = vt(.9, !1, ["#3d2a6e", "#8255b5"]);
                i.drawImage(I, 21, 20);
                I = vt(.9, !1, ["#3d2a6e", "#8255b5"]);
                i.drawImage(I, 38, 28);
                I = vt(.9, !1, ["#3d2a6e", "#8255b5"]);
                i.drawImage(I, 15, 37);
                I = vt(.9, !1, ["#3d2a6e", "#8255b5"]);
                return i.drawImage(I, 32, 45),
                t
            }
            function De(e, t) {
                var i = window.document.createElement("canvas")
                  , n = i.getContext("2d")
                  , I = 100 * e
                  , o = 100 * e
                  , r = I / 2
                  , d = o / 2;
                i.width = I,
                i.height = o;
                var s = 5 * e
                  , h = 28 * e
                  , y = s / 2
                  , R = h / 2;
                n.translate(r, d);
                for (var E = 0; E < 4; E++)
                    ye(n, -y, -R, s, h, 2 * e),
                    n.rotate(T),
                    he(n, t);
                return n.arc(0, 0, 10 * e, 0, a),
                he(n, t),
                n.globalCompositeOperation = "destination-out",
                Re(n, 0, 0, 4 * e),
                n.fill(),
                i
            }
            function Oe(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d")
                  , I = 32 * e
                  , o = 32 * e
                  , r = I / 2
                  , d = o / 2;
                n.width = I,
                n.height = o;
                var s = 5 * e
                  , h = 28 * e
                  , y = s / 2
                  , R = h / 2;
                if (a.translate(0 * e, 0 * e),
                a.translate(r, d),
                1 == i) {
                    Re(a, 0, 0, 10 * e),
                    he(a, t[2], t[2], 3 * e);
                    for (var E = 0; E < 4; E++)
                        ye(a, -y, -R, s, h, 2 * e),
                        a.rotate(T),
                        he(a, t[2], t[2], 4 * e)
                }
                Re(a, 0, 0, 10 * e),
                he(a, t[0], t[1], 1.5 * e);
                for (E = 0; E < 4; E++)
                    ye(a, -y, -R, s, h, 2 * e),
                    a.rotate(T),
                    he(a, t[0], t[1], 1.5 * e);
                return Re(a, 0, 0, 10 * e),
                he(a, t[0]),
                Re(a, 0, 0, 4 * e),
                he(a, t[2], t[1], 1.5 * e),
                a.globalCompositeOperation = "destination-out",
                Re(a, 0, 0, 4 * e),
                he(a, t[0], t[1], 2 * e),
                a.globalCompositeOperation = "source-over",
                Re(a, 0, 0, 4 * e),
                he(a, void 0, t[1], 2 * e),
                n
            }
            function ke(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d")
                  , I = (E = 125 * e) / 2
                  , T = (m = 95 * e) / 2
                  , o = 10 * e
                  , r = 8 * e
                  , d = 112 * e
                  , s = 82 * e
                  , h = d / 2
                  , y = s / 2
                  , R = 4 * e;
                n.width = E,
                n.height = m,
                a.translate(I - 4 * e, T + 4 * e),
                a.globalAlpha = t ? .5 : 1,
                ye(a, -h, -y, d, s, o),
                he(a, i[0]),
                a.globalAlpha = 1,
                a.translate(0, -r),
                ye(a, -h, -y, d, s, o),
                he(a, i[1], i[2], R);
                var E = 55 * e
                  , m = 45 * e;
                o = 5;
                a.translate(-40 * e, -30 * e),
                ye(a, 0, 0, E, m, o),
                he(a, i[3]);
                var S = De(.7 * e, i[3]);
                a.drawImage(S, 45 * e, -25 * e);
                S = De(.7 * e, i[3]);
                a.drawImage(S, 45 * e, 15 * e);
                S = De(1.2 * e, i[3]);
                a.drawImage(S, 28 * e, -30 * e);
                E = 15 * e,
                m = 70 * e,
                o = 5 * e;
                a.translate(78 * e, -5 * e),
                ye(a, 0, 0, E, m, o),
                he(a, i[4]);
                E = 9 * e,
                m = 50 * e,
                o = 3 * e;
                return a.translate(-20 * e, 20 * e),
                a.rotate(window.Math.PI / 5),
                a.globalAlpha = .6,
                ye(a, 0, 0, E, m, o),
                he(a, i[5]),
                a.translate(-20 * e, 29 * e),
                a.rotate(window.Math.PI / 5),
                a.globalAlpha = .6,
                a.beginPath(),
                a.lineJoin = "round",
                a.moveTo(0, 0),
                a.lineTo(0, 30 * e),
                a.lineTo(30 * e, 30 * e),
                a.closePath(),
                he(a, null, i[5], 8 * e),
                n
            }
            function Ce(e, t) {
                var i = window.document.createElement("canvas")
                  , n = i.getContext("2d")
                  , a = 85 * e
                  , I = 115 * e
                  , T = 6 * e;
                i.width = a,
                i.height = I,
                n.translate(-130 * e, -60 * e + T),
                n.globalAlpha = .5,
                n.beginPath(),
                n.bezierCurveTo(190 * e, 87 * e, 201 * e, 59 * e, 208 * e, 64 * e),
                n.bezierCurveTo(213 * e, 68 * e, 204 * e, 93 * e, 195 * e, 109 * e),
                n.bezierCurveTo(195 * e, 109 * e, 202 * e, 124 * e, 191 * e, 141 * e),
                n.bezierCurveTo(182 * e, 151 * e, 164 * e, 155 * e, 148 * e, 144 * e),
                n.bezierCurveTo(136 * e, 135 * e, 138 * e, 111 * e, 145 * e, 104 * e),
                n.bezierCurveTo(140 * e, 92 * e, 131 * e, 67 * e, 138 * e, 63 * e),
                n.bezierCurveTo(145 * e, 61 * e, 153 * e, 82 * e, 155 * e, 96 * e),
                n.bezierCurveTo(167 * e, 91 * e, 178 * e, 92 * e, 187 * e, 98 * e),
                n.closePath(),
                he(n, t[0]),
                n.translate(0, -T),
                n.globalAlpha = 1,
                n.beginPath(),
                n.bezierCurveTo(190 * e, 87 * e, 201 * e, 59 * e, 208 * e, 64 * e),
                n.bezierCurveTo(213 * e, 68 * e, 204 * e, 93 * e, 195 * e, 109 * e),
                n.bezierCurveTo(195 * e, 109 * e, 202 * e, 124 * e, 191 * e, 141 * e),
                n.bezierCurveTo(182 * e, 151 * e, 164 * e, 155 * e, 148 * e, 144 * e),
                n.bezierCurveTo(136 * e, 135 * e, 138 * e, 111 * e, 145 * e, 104 * e),
                n.bezierCurveTo(140 * e, 92 * e, 131 * e, 67 * e, 138 * e, 63 * e),
                n.bezierCurveTo(145 * e, 61 * e, 153 * e, 82 * e, 155 * e, 96 * e),
                n.bezierCurveTo(167 * e, 91 * e, 178 * e, 92 * e, 187 * e, 98 * e),
                n.closePath(),
                he(n, t[1], t[2], 4);
                var o = 155 * e
                  , r = 133 * e
                  , d = 10 * e
                  , s = 3 * e
                  , h = o + -3 * e
                  , y = r + -5 * e;
                return n.save(),
                n.translate(o, r),
                n.globalAlpha = 1,
                Re(n, 0, 0, d),
                he(n, t[3]),
                n.restore(),
                n.save(),
                n.translate(h, y),
                n.globalAlpha = 1,
                Re(n, 0, 0, s),
                he(n, t[4]),
                n.restore(),
                n.save(),
                n.translate(o + 27 * e, r),
                n.globalAlpha = 1,
                Re(n, 0, 0, d),
                he(n, t[3]),
                n.restore(),
                n.save(),
                n.translate(27 * e + h, y),
                n.globalAlpha = 1,
                Re(n, 0, 0, s),
                he(n, t[4]),
                i
            }
            function Le(e, t) {
                var i = window.document.createElement("canvas")
                  , n = i.getContext("2d");
                return i.width = 188 * e,
                i.height = 190 * e,
                n.globalAlpha = .5,
                n.translate(0, 5 * e),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(33.00567626953125 * e, 95.44320678710938 * e),
                n.bezierCurveTo(42.00567626953125 * e, 87.44320678710938 * e, 48.00567626953125 * e, 51.443206787109375 * e, 74.00567626953125 * e, 47.443206787109375 * e),
                n.bezierCurveTo(100.00567626953125 * e, 42.443206787109375 * e, 118.00567626953125 * e, 49.443206787109375 * e, 131.00567626953125 * e, 55.443206787109375 * e),
                n.bezierCurveTo(140.00567626953125 * e, 70.44320678710938 * e, 145.00567626953125 * e, 87.44320678710938 * e, 152.00567626953125 * e, 94.44320678710938 * e),
                n.bezierCurveTo(149.00567626953125 * e, 99.44320678710938 * e, 147.00567626953125 * e, 98.44320678710938 * e, 141.00567626953125 * e, 101.44320678710938 * e),
                n.bezierCurveTo(147.00567626953125 * e, 108.44320678710938 * e, 147.00567626953125 * e, 111.44320678710938 * e, 147.00567626953125 * e, 112.44320678710938 * e),
                n.bezierCurveTo(143.00567626953125 * e, 112.44320678710938 * e, 141.00567626953125 * e, 112.44320678710938 * e, 137.00567626953125 * e, 111.44320678710938 * e),
                n.bezierCurveTo(138.00567626953125 * e, 117.44320678710938 * e, 138.00567626953125 * e, 120.44320678710938 * e, 138.00567626953125 * e, 124.44320678710938 * e),
                n.bezierCurveTo(125.00567626953125 * e, 107.44320678710938 * e, 121.00567626953125 * e, 124.44320678710938 * e, 110.00567626953125 * e, 141.44320678710938 * e),
                n.bezierCurveTo(102.00567626953125 * e, 158.44320678710938 * e, 89.00567626953125 * e, 158.44320678710938 * e, 80.00567626953125 * e, 144.44320678710938 * e),
                n.bezierCurveTo(61.00567626953125 * e, 111.44320678710938 * e, 56.00567626953125 * e, 117.44320678710938 * e, 48.00567626953125 * e, 120.44320678710938 * e),
                n.bezierCurveTo(46.00567626953125 * e, 118.44320678710938 * e, 47.00567626953125 * e, 112.44320678710938 * e, 48.00567626953125 * e, 107.44320678710938 * e),
                n.bezierCurveTo(43.00567626953125 * e, 111.44320678710938 * e, 40.00567626953125 * e, 111.44320678710938 * e, 37.00567626953125 * e, 110.44320678710938 * e),
                n.bezierCurveTo(39.50567626953125 * e, 104.94320678710938 * e, 39.50567626953125 * e, 104.94320678710938 * e, 42.00567626953125 * e, 99.44320678710938 * e),
                n.bezierCurveTo(33.00567626953125 * e, 99.44320678710938 * e, 33.00567626953125 * e, 98.44320678710938 * e, 33.00567626953125 * e, 96.44320678710938 * e),
                n.closePath(),
                he(n, t[0], t[0], 4 * e),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(60.00567626953125 * e, 99.35227966308594 * e),
                n.bezierCurveTo(70.00567626953125 * e, 82.35227966308594 * e, 85.00567626953125 * e, 86.35227966308594 * e, 87.00567626953125 * e, 97.35227966308594 * e),
                n.bezierCurveTo(89.00567626953125 * e, 101.35227966308594 * e, 88.00567626953125 * e, 105.35227966308594 * e, 87.00567626953125 * e, 110.35227966308594 * e),
                n.bezierCurveTo(89.00567626953125 * e, 111.35227966308594 * e, 91.00567626953125 * e, 112.35227966308594 * e, 93.00567626953125 * e, 115.35227966308594 * e),
                n.bezierCurveTo(96.00567626953125 * e, 111.35227966308594 * e, 99.00567626953125 * e, 111.35227966308594 * e, 100.00567626953125 * e, 110.35227966308594 * e),
                n.bezierCurveTo(98.00567626953125 * e, 92.35227966308594 * e, 103.00567626953125 * e, 86.35227966308594 * e, 113.00567626953125 * e, 89.35227966308594 * e),
                n.bezierCurveTo(122.00567626953125 * e, 92.35227966308594 * e, 123.00567626953125 * e, 94.35227966308594 * e, 126.00567626953125 * e, 98.35227966308594 * e),
                n.bezierCurveTo(124.00567626953125 * e, 102.35227966308594 * e, 123.00567626953125 * e, 103.35227966308594 * e, 121.00567626953125 * e, 104.35227966308594 * e),
                n.bezierCurveTo(124.00567626953125 * e, 105.35227966308594 * e, 126.00567626953125 * e, 107.35227966308594 * e, 129.00567626953125 * e, 111.35227966308594 * e),
                n.bezierCurveTo(115.00567626953125 * e, 122.35227966308594 * e, 113.00567626953125 * e, 145.35227966308594 * e, 100.00567626953125 * e, 152.35227966308594 * e),
                n.bezierCurveTo(91.00567626953125 * e, 158.35227966308594 * e, 83.00567626953125 * e, 149.35227966308594 * e, 76.00567626953125 * e, 138.35227966308594 * e),
                n.bezierCurveTo(67.00567626953125 * e, 114.35227966308594 * e, 63.00567626953125 * e, 113.35227966308594 * e, 59.00567626953125 * e, 111.35227966308594 * e),
                n.bezierCurveTo(62.00567626953125 * e, 107.35227966308594 * e, 64.00567626953125 * e, 105.35227966308594 * e, 66.00567626953125 * e, 104.35227966308594 * e),
                n.bezierCurveTo(63.00567626953125 * e, 100.35227966308594 * e, 62.00567626953125 * e, 100.35227966308594 * e, 60.00567626953125 * e, 99.35227966308594 * e),
                n.closePath(),
                he(n, t[0], t[0], 2 * e),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(51.00567626953125 * e, 72.53409576416016 * e),
                n.bezierCurveTo(48.00567626953125 * e, 56.534095764160156 * e, 48.00567626953125 * e, 49.534095764160156 * e, 54.00567626953125 * e, 35.534095764160156 * e),
                n.bezierCurveTo(58.00567626953125 * e, 26.534095764160156 * e, 65.00567626953125 * e, 27.534095764160156 * e, 73.00567626953125 * e, 40.534095764160156 * e),
                n.bezierCurveTo(81.00567626953125 * e, 49.534095764160156 * e, 82.00567626953125 * e, 50.534095764160156 * e, 83.00567626953125 * e, 51.534095764160156 * e),
                n.bezierCurveTo(77.00567626953125 * e, 71.53409576416016 * e, 64.00567626953125 * e, 75.53409576416016 * e, 51.00567626953125 * e, 72.53409576416016 * e),
                n.closePath(),
                he(n, t[0], t[0], 2 * e),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(105.00567626953125 * e, 50.53410339355469 * e),
                n.bezierCurveTo(112.00567626953125 * e, 48.53410339355469 * e, 125.00567626953125 * e, 21.534103393554688 * e, 132.00567626953125 * e, 33.53410339355469 * e),
                n.bezierCurveTo(138.00567626953125 * e, 42.53410339355469 * e, 140.00567626953125 * e, 64.53410339355469 * e, 136.00567626953125 * e, 75.53410339355469 * e),
                n.closePath(),
                he(n, t[0], t[0], 2 * e),
                n.globalAlpha = 1,
                n.translate(0, -5 * e),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(33.00567626953125 * e, 95.44320678710938 * e),
                n.bezierCurveTo(42.00567626953125 * e, 87.44320678710938 * e, 48.00567626953125 * e, 51.443206787109375 * e, 74.00567626953125 * e, 47.443206787109375 * e),
                n.bezierCurveTo(100.00567626953125 * e, 42.443206787109375 * e, 118.00567626953125 * e, 49.443206787109375 * e, 131.00567626953125 * e, 55.443206787109375 * e),
                n.bezierCurveTo(140.00567626953125 * e, 70.44320678710938 * e, 145.00567626953125 * e, 87.44320678710938 * e, 152.00567626953125 * e, 94.44320678710938 * e),
                n.bezierCurveTo(149.00567626953125 * e, 99.44320678710938 * e, 147.00567626953125 * e, 98.44320678710938 * e, 141.00567626953125 * e, 101.44320678710938 * e),
                n.bezierCurveTo(147.00567626953125 * e, 108.44320678710938 * e, 147.00567626953125 * e, 111.44320678710938 * e, 147.00567626953125 * e, 112.44320678710938 * e),
                n.bezierCurveTo(143.00567626953125 * e, 112.44320678710938 * e, 141.00567626953125 * e, 112.44320678710938 * e, 137.00567626953125 * e, 111.44320678710938 * e),
                n.bezierCurveTo(138.00567626953125 * e, 117.44320678710938 * e, 138.00567626953125 * e, 120.44320678710938 * e, 138.00567626953125 * e, 124.44320678710938 * e),
                n.bezierCurveTo(125.00567626953125 * e, 107.44320678710938 * e, 121.00567626953125 * e, 124.44320678710938 * e, 110.00567626953125 * e, 141.44320678710938 * e),
                n.bezierCurveTo(102.00567626953125 * e, 158.44320678710938 * e, 89.00567626953125 * e, 158.44320678710938 * e, 80.00567626953125 * e, 144.44320678710938 * e),
                n.bezierCurveTo(61.00567626953125 * e, 111.44320678710938 * e, 56.00567626953125 * e, 117.44320678710938 * e, 48.00567626953125 * e, 120.44320678710938 * e),
                n.bezierCurveTo(46.00567626953125 * e, 118.44320678710938 * e, 47.00567626953125 * e, 112.44320678710938 * e, 48.00567626953125 * e, 107.44320678710938 * e),
                n.bezierCurveTo(43.00567626953125 * e, 111.44320678710938 * e, 40.00567626953125 * e, 111.44320678710938 * e, 37.00567626953125 * e, 110.44320678710938 * e),
                n.bezierCurveTo(39.50567626953125 * e, 104.94320678710938 * e, 39.50567626953125 * e, 104.94320678710938 * e, 42.00567626953125 * e, 99.44320678710938 * e),
                n.bezierCurveTo(33.00567626953125 * e, 99.44320678710938 * e, 33.00567626953125 * e, 98.44320678710938 * e, 33.00567626953125 * e, 96.44320678710938 * e),
                n.closePath(),
                he(n, t[1], t[2], 3 * e),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(60.00567626953125 * e, 99.35227966308594 * e),
                n.bezierCurveTo(70.00567626953125 * e, 82.35227966308594 * e, 85.00567626953125 * e, 86.35227966308594 * e, 87.00567626953125 * e, 97.35227966308594 * e),
                n.bezierCurveTo(89.00567626953125 * e, 101.35227966308594 * e, 88.00567626953125 * e, 105.35227966308594 * e, 87.00567626953125 * e, 110.35227966308594 * e),
                n.bezierCurveTo(89.00567626953125 * e, 111.35227966308594 * e, 91.00567626953125 * e, 112.35227966308594 * e, 93.00567626953125 * e, 115.35227966308594 * e),
                n.bezierCurveTo(96.00567626953125 * e, 111.35227966308594 * e, 99.00567626953125 * e, 111.35227966308594 * e, 100.00567626953125 * e, 110.35227966308594 * e),
                n.bezierCurveTo(98.00567626953125 * e, 92.35227966308594 * e, 103.00567626953125 * e, 86.35227966308594 * e, 113.00567626953125 * e, 89.35227966308594 * e),
                n.bezierCurveTo(122.00567626953125 * e, 92.35227966308594 * e, 123.00567626953125 * e, 94.35227966308594 * e, 126.00567626953125 * e, 98.35227966308594 * e),
                n.bezierCurveTo(124.00567626953125 * e, 102.35227966308594 * e, 123.00567626953125 * e, 103.35227966308594 * e, 121.00567626953125 * e, 104.35227966308594 * e),
                n.bezierCurveTo(124.00567626953125 * e, 105.35227966308594 * e, 126.00567626953125 * e, 107.35227966308594 * e, 129.00567626953125 * e, 111.35227966308594 * e),
                n.bezierCurveTo(115.00567626953125 * e, 122.35227966308594 * e, 113.00567626953125 * e, 145.35227966308594 * e, 100.00567626953125 * e, 152.35227966308594 * e),
                n.bezierCurveTo(91.00567626953125 * e, 158.35227966308594 * e, 83.00567626953125 * e, 149.35227966308594 * e, 76.00567626953125 * e, 138.35227966308594 * e),
                n.bezierCurveTo(67.00567626953125 * e, 114.35227966308594 * e, 63.00567626953125 * e, 113.35227966308594 * e, 59.00567626953125 * e, 111.35227966308594 * e),
                n.bezierCurveTo(62.00567626953125 * e, 107.35227966308594 * e, 64.00567626953125 * e, 105.35227966308594 * e, 66.00567626953125 * e, 104.35227966308594 * e),
                n.bezierCurveTo(63.00567626953125 * e, 100.35227966308594 * e, 62.00567626953125 * e, 100.35227966308594 * e, 60.00567626953125 * e, 99.35227966308594 * e),
                n.closePath(),
                he(n, t[3]),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(33.00567626953125 * e, 95.44320678710938 * e),
                n.bezierCurveTo(42.00567626953125 * e, 87.44320678710938 * e, 48.00567626953125 * e, 51.443206787109375 * e, 74.00567626953125 * e, 47.443206787109375 * e),
                n.bezierCurveTo(100.00567626953125 * e, 42.443206787109375 * e, 118.00567626953125 * e, 49.443206787109375 * e, 131.00567626953125 * e, 55.443206787109375 * e),
                n.bezierCurveTo(140.00567626953125 * e, 70.44320678710938 * e, 145.00567626953125 * e, 87.44320678710938 * e, 152.00567626953125 * e, 94.44320678710938 * e),
                n.bezierCurveTo(149.00567626953125 * e, 99.44320678710938 * e, 147.00567626953125 * e, 98.44320678710938 * e, 141.00567626953125 * e, 101.44320678710938 * e),
                n.bezierCurveTo(147.00567626953125 * e, 108.44320678710938 * e, 147.00567626953125 * e, 111.44320678710938 * e, 147.00567626953125 * e, 112.44320678710938 * e),
                n.bezierCurveTo(143.00567626953125 * e, 112.44320678710938 * e, 141.00567626953125 * e, 112.44320678710938 * e, 137.00567626953125 * e, 111.44320678710938 * e),
                n.bezierCurveTo(138.00567626953125 * e, 117.44320678710938 * e, 138.00567626953125 * e, 120.44320678710938 * e, 138.00567626953125 * e, 124.44320678710938 * e),
                n.bezierCurveTo(125.00567626953125 * e, 107.44320678710938 * e, 121.00567626953125 * e, 124.44320678710938 * e, 110.00567626953125 * e, 141.44320678710938 * e),
                n.bezierCurveTo(102.00567626953125 * e, 158.44320678710938 * e, 89.00567626953125 * e, 158.44320678710938 * e, 80.00567626953125 * e, 144.44320678710938 * e),
                n.bezierCurveTo(61.00567626953125 * e, 111.44320678710938 * e, 56.00567626953125 * e, 117.44320678710938 * e, 48.00567626953125 * e, 120.44320678710938 * e),
                n.bezierCurveTo(46.00567626953125 * e, 118.44320678710938 * e, 47.00567626953125 * e, 112.44320678710938 * e, 48.00567626953125 * e, 107.44320678710938 * e),
                n.bezierCurveTo(43.00567626953125 * e, 111.44320678710938 * e, 40.00567626953125 * e, 111.44320678710938 * e, 37.00567626953125 * e, 110.44320678710938 * e),
                n.bezierCurveTo(39.50567626953125 * e, 104.94320678710938 * e, 39.50567626953125 * e, 104.94320678710938 * e, 42.00567626953125 * e, 99.44320678710938 * e),
                n.bezierCurveTo(33.00567626953125 * e, 99.44320678710938 * e, 33.00567626953125 * e, 98.44320678710938 * e, 33.00567626953125 * e, 96.44320678710938 * e),
                n.closePath(),
                he(n, void 0, t[2], 3 * e),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(51.00567626953125 * e, 72.53409576416016 * e),
                n.bezierCurveTo(48.00567626953125 * e, 56.534095764160156 * e, 48.00567626953125 * e, 49.534095764160156 * e, 54.00567626953125 * e, 35.534095764160156 * e),
                n.bezierCurveTo(58.00567626953125 * e, 26.534095764160156 * e, 65.00567626953125 * e, 27.534095764160156 * e, 73.00567626953125 * e, 40.534095764160156 * e),
                n.bezierCurveTo(81.00567626953125 * e, 49.534095764160156 * e, 82.00567626953125 * e, 50.534095764160156 * e, 83.00567626953125 * e, 51.534095764160156 * e),
                he(n, t[1], t[2], 3 * e),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(105.00567626953125 * e, 50.53410339355469 * e),
                n.bezierCurveTo(112.00567626953125 * e, 48.53410339355469 * e, 125.00567626953125 * e, 21.534103393554688 * e, 132.00567626953125 * e, 33.53410339355469 * e),
                n.bezierCurveTo(138.00567626953125 * e, 42.53410339355469 * e, 140.00567626953125 * e, 64.53410339355469 * e, 136.00567626953125 * e, 75.53410339355469 * e),
                he(n, t[1], t[2], 3 * e),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(57.00567626953125 * e, 68.53410339355469 * e),
                n.bezierCurveTo(63.00567626953125 * e, 69.53410339355469 * e, 69.00567626953125 * e, 66.53410339355469 * e, 73.00567626953125 * e, 60.53410339355469 * e),
                n.bezierCurveTo(66.00567626953125 * e, 47.53410339355469 * e, 61.00567626953125 * e, 42.53410339355469 * e, 58.00567626953125 * e, 49.53410339355469 * e),
                n.bezierCurveTo(56.00567626953125 * e, 59.53410339355469 * e, 56.00567626953125 * e, 64.53410339355469 * e, 57.00567626953125 * e, 67.53410339355469 * e),
                n.closePath(),
                he(n, t[3]),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(115.00567626953125 * e, 59.715911865234375 * e),
                n.bezierCurveTo(119.00567626953125 * e, 48.715911865234375 * e, 126.00567626953125 * e, 41.715911865234375 * e, 129.00567626953125 * e, 48.715911865234375 * e),
                n.bezierCurveTo(131.00567626953125 * e, 56.715911865234375 * e, 133.00567626953125 * e, 71.71591186523438 * e, 127.00567626953125 * e, 68.71591186523438 * e),
                n.bezierCurveTo(120.00567626953125 * e, 67.71591186523438 * e, 114.00567626953125 * e, 59.715911865234375 * e, 116.00567626953125 * e, 58.715911865234375 * e),
                n.closePath(),
                he(n, t[3]),
                Re(n, 77 * e, 107 * e, 6 * e),
                he(n, t[2]),
                Re(n, 110 * e, 107 * e, 6 * e),
                he(n, t[2]),
                Re(n, 75 * e, 105 * e, 3 * e),
                he(n, t[4]),
                Re(n, 108 * e, 105 * e, 3 * e),
                he(n, t[4]),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(88.00567626953125 * e, 141.4431915283203 * e),
                n.bezierCurveTo(93.00567626953125 * e, 137.4431915283203 * e, 96.00567626953125 * e, 138.4431915283203 * e, 100.00567626953125 * e, 141.4431915283203 * e),
                n.bezierCurveTo(103.00567626953125 * e, 143.4431915283203 * e, 101.00567626953125 * e, 149.4431915283203 * e, 95.00567626953125 * e, 148.4431915283203 * e),
                n.bezierCurveTo(85.00567626953125 * e, 148.4431915283203 * e, 86.00567626953125 * e, 145.4431915283203 * e, 88.00567626953125 * e, 142.4431915283203 * e),
                n.closePath(),
                he(n, t[1]),
                i
            }
            function Be(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d")
                  , I = 55 * e
                  , T = 55 * e
                  , o = 8 * e;
                return n.width = I,
                n.height = T,
                a.translate(-65 * e, -55 * e + o),
                a.globalAlpha = 1,
                a.beginPath(),
                a.moveTo(95 * e, 60 * e),
                a.bezierCurveTo(107 * e, 62 * e, 110 * e, 73 * e, 107 * e, 79 * e),
                a.bezierCurveTo(104 * e, 85 * e, 85 * e, 93 * e, 81 * e, 88 * e),
                a.bezierCurveTo(74 * e, 80 * e, 85 * e, 60 * e, 95 * e, 60 * e),
                a.closePath(),
                he(a, i[0], i[1], 3),
                a.globalAlpha = 1,
                a.beginPath(),
                a.moveTo(91 * e, 70 * e),
                a.bezierCurveTo(91 * e, 75 * e, 100 * e, 76 * e, 100 * e, 73 * e),
                a.bezierCurveTo(100 * e, 69 * e, 89 * e, 65 * e, 91 * e, 70 * e),
                a.closePath(),
                he(a, i[2], i[3], 3),
                n
            }
            function Me(e, t) {
                var i = window.document.createElement("canvas")
                  , n = i.getContext("2d");
                return i.width = 238 * e,
                i.height = 230 * e,
                n.translate(-93 * e, -110 * e + 5 * e),
                n.globalAlpha = .3,
                Re(n, 213.5 * e, 256.75 * e, 75 * e),
                he(n, t[5]),
                Re(n, 213.5 * e, 175.75 * e, 25 * e),
                he(n, t[5]),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(156.5 * e, 137.75 * e),
                n.bezierCurveTo(170.5 * e, 173.75 * e, 195.5 * e, 177.75 * e, 209.5 * e, 177.75 * e),
                n.lineWidth = 17 * e,
                n.strokeStyle = t[5],
                n.stroke(),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(217.5 * e, 178.75 * e),
                n.bezierCurveTo(251.5 * e, 177.75 * e, 263.5 * e, 153.75 * e, 270.5 * e, 140.75 * e),
                n.lineWidth = 17 * e,
                n.strokeStyle = t[5],
                n.stroke(),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(130.5 * e, 124.75 * e),
                n.bezierCurveTo(153.5 * e, 185.75 * e, 198.5 * e, 185.75 * e, 213.5 * e, 185.75 * e),
                n.lineWidth = 17 * e,
                n.strokeStyle = t[5],
                n.stroke(),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(214.5 * e, 183.75 * e),
                n.bezierCurveTo(265.5 * e, 192.75 * e, 293.5 * e, 141.75 * e, 297.5 * e, 124.75 * e),
                n.lineWidth = 17 * e,
                n.strokeStyle = t[5],
                n.stroke(),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(107.5 * e, 213.75 * e),
                n.bezierCurveTo(151.5 * e, 190.75 * e, 198.5 * e, 184.75 * e, 210.5 * e, 184.75 * e),
                n.lineWidth = 17 * e,
                n.strokeStyle = t[5],
                n.stroke(),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(212.5 * e, 187.75 * e),
                n.bezierCurveTo(258.5 * e, 182.75 * e, 286.5 * e, 194.75 * e, 314.5 * e, 206.75 * e),
                n.lineWidth = 17 * e,
                n.strokeStyle = t[5],
                n.stroke(),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(102.5 * e, 258.75 * e),
                n.bezierCurveTo(142.5 * e, 200.75 * e, 193.5 * e, 194.75 * e, 211.5 * e, 185.75 * e),
                n.lineWidth = 17 * e,
                n.strokeStyle = t[5],
                n.stroke(),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(214.5 * e, 192.75 * e),
                n.bezierCurveTo(276.5 * e, 194.75 * e, 306.5 * e, 233.75 * e, 316.5 * e, 246.75 * e),
                n.lineWidth = 17 * e,
                n.strokeStyle = t[5],
                n.stroke(),
                n.translate(0, -5),
                n.globalAlpha = 1,
                Re(n, 213.5 * e, 256.75 * e, 75 * e),
                he(n, t[3]),
                Re(n, 213.5 * e, 175.75 * e, 25 * e),
                he(n, t[3]),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(219.5 * e, 158.75 * e),
                n.bezierCurveTo(226.5 * e, 159.75 * e, 227.5 * e, 147.75 * e, 219.5 * e, 145.75 * e),
                n.closePath(),
                n.lineWidth = 10 * e,
                n.strokeStyle = t[3],
                n.stroke(),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(210.5 * e, 160.75 * e),
                n.bezierCurveTo(203.5 * e, 159.75 * e, 199.5 * e, 146.75 * e, 210.5 * e, 145.75 * e),
                n.closePath(),
                n.lineWidth = 10 * e,
                n.strokeStyle = t[3],
                n.stroke(),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(219.5 * e, 158.75 * e),
                n.bezierCurveTo(226.5 * e, 159.75 * e, 227.5 * e, 147.75 * e, 219.5 * e, 145.75 * e),
                n.closePath(),
                n.fillStyle = t[0],
                n.fill(),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(210.5 * e, 160.75 * e),
                n.bezierCurveTo(203.5 * e, 159.75 * e, 199.5 * e, 146.75 * e, 210.5 * e, 145.75 * e),
                n.closePath(),
                n.fillStyle = t[0],
                n.fill(),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(156.5 * e, 137.75 * e),
                n.bezierCurveTo(170.5 * e, 173.75 * e, 195.5 * e, 177.75 * e, 209.5 * e, 177.75 * e),
                n.lineWidth = 17 * e,
                n.strokeStyle = t[3],
                n.stroke(),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(217.5 * e, 178.75 * e),
                n.bezierCurveTo(251.5 * e, 177.75 * e, 263.5 * e, 153.75 * e, 270.5 * e, 140.75 * e),
                n.lineWidth = 17 * e,
                n.strokeStyle = t[3],
                n.stroke(),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(130.5 * e, 124.75 * e),
                n.bezierCurveTo(153.5 * e, 185.75 * e, 198.5 * e, 185.75 * e, 213.5 * e, 185.75 * e),
                n.lineWidth = 17 * e,
                n.strokeStyle = t[3],
                n.stroke(),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(214.5 * e, 183.75 * e),
                n.bezierCurveTo(265.5 * e, 192.75 * e, 293.5 * e, 141.75 * e, 297.5 * e, 124.75 * e),
                n.lineWidth = 17 * e,
                n.strokeStyle = t[3],
                n.stroke(),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(107.5 * e, 213.75 * e),
                n.bezierCurveTo(151.5 * e, 190.75 * e, 198.5 * e, 184.75 * e, 210.5 * e, 184.75 * e),
                n.lineWidth = 17 * e,
                n.strokeStyle = t[3],
                n.stroke(),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(212.5 * e, 187.75 * e),
                n.bezierCurveTo(258.5 * e, 182.75 * e, 286.5 * e, 194.75 * e, 314.5 * e, 206.75 * e),
                n.lineWidth = 17 * e,
                n.strokeStyle = t[3],
                n.stroke(),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(102.5 * e, 258.75 * e),
                n.bezierCurveTo(142.5 * e, 200.75 * e, 193.5 * e, 194.75 * e, 211.5 * e, 185.75 * e),
                n.lineWidth = 17 * e,
                n.strokeStyle = t[3],
                n.stroke(),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(214.5 * e, 192.75 * e),
                n.bezierCurveTo(276.5 * e, 194.75 * e, 306.5 * e, 233.75 * e, 316.5 * e, 246.75 * e),
                n.lineWidth = 17 * e,
                n.strokeStyle = t[3],
                n.stroke(),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(156.5 * e, 137.75 * e),
                n.bezierCurveTo(170.5 * e, 173.75 * e, 195.5 * e, 177.75 * e, 209.5 * e, 177.75 * e),
                n.lineWidth = 8 * e,
                n.strokeStyle = t[0],
                n.stroke(),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(217.5 * e, 178.75 * e),
                n.bezierCurveTo(251.5 * e, 177.75 * e, 263.5 * e, 153.75 * e, 270.5 * e, 140.75 * e),
                n.lineWidth = 8 * e,
                n.strokeStyle = t[0],
                n.stroke(),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(130.5 * e, 124.75 * e),
                n.bezierCurveTo(153.5 * e, 185.75 * e, 198.5 * e, 185.75 * e, 213.5 * e, 185.75 * e),
                n.lineWidth = 8 * e,
                n.strokeStyle = t[0],
                n.stroke(),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(214.5 * e, 183.75 * e),
                n.bezierCurveTo(265.5 * e, 192.75 * e, 293.5 * e, 141.75 * e, 297.5 * e, 124.75 * e),
                n.lineWidth = 8 * e,
                n.strokeStyle = t[0],
                n.stroke(),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(107.5 * e, 213.75 * e),
                n.bezierCurveTo(151.5 * e, 190.75 * e, 198.5 * e, 184.75 * e, 210.5 * e, 184.75 * e),
                n.lineWidth = 8 * e,
                n.strokeStyle = t[0],
                n.stroke(),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(212.5 * e, 187.75 * e),
                n.bezierCurveTo(258.5 * e, 182.75 * e, 286.5 * e, 194.75 * e, 314.5 * e, 206.75 * e),
                n.lineWidth = 8 * e,
                n.strokeStyle = t[0],
                n.stroke(),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(102.5 * e, 258.75 * e),
                n.bezierCurveTo(142.5 * e, 200.75 * e, 193.5 * e, 194.75 * e, 211.5 * e, 185.75 * e),
                n.lineWidth = 8 * e,
                n.strokeStyle = t[0],
                n.stroke(),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(214.5 * e, 192.75 * e),
                n.bezierCurveTo(276.5 * e, 194.75 * e, 306.5 * e, 233.75 * e, 316.5 * e, 246.75 * e),
                n.lineWidth = 8 * e,
                n.strokeStyle = t[0],
                n.stroke(),
                Re(n, 213.5 * e, 256.75 * e, 70 * e),
                he(n, t[0]),
                Re(n, 213.5 * e, 175.75 * e, 20 * e),
                he(n, t[0]),
                Re(n, 222 * e, 166 * e, 5 * e),
                n.fillStyle = t[2],
                n.fill(),
                Re(n, 205 * e, 166 * e, 5 * e),
                n.fillStyle = t[2],
                n.fill(),
                Re(n, 206.2 * e, 167 * e, 2.5 * e),
                n.fillStyle = t[4],
                n.fill(),
                Re(n, 223.2 * e, 167 * e, 2.5 * e),
                n.fillStyle = t[4],
                n.fill(),
                n.save(),
                n.translate(213.5 * e, 293.75 * e),
                n.rotate(.76),
                ye(n, -22 * e, -21 * e, 44 * e, 42 * e, 6 * e),
                n.restore(),
                n.fillStyle = t[1],
                n.fill(),
                n.save(),
                n.translate(212.5 * e, 258.25 * e),
                n.rotate(.8),
                ye(n, -15 * e, -14.5 * e, 30 * e, 29 * e, 6 * e),
                n.restore(),
                n.fillStyle = t[1],
                n.fill(),
                i
            }
            function Ye(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                return n.width = 400 * e,
                n.height = 400 * e,
                a.save(),
                a.translate(202.5 * e, 147.5 * e),
                ye(a, -96.5 * e, -21.5 * e, 193 * e, 193 * e, 0 * e),
                a.restore(),
                he(a, t[0], t[1], 12 * e),
                a.save(),
                a.translate(202.5 * e, 190.5 * e),
                ye(a, 96.5 * e, -21.5 * e, -193 * e, 43 * e, 0 * e),
                a.restore(),
                he(a, t[2], t[1], 12 * e),
                a.save(),
                a.save(),
                a.translate(202.5 * e, 233.5 * e),
                ye(a, -96.5 * e, -20.5 * e, 193 * e, 41 * e, 0 * e),
                a.restore(),
                he(a, t[3], t[1], 12 * e),
                a.save(),
                a.translate(202.5 * e, 275 * e),
                ye(a, 96.5 * e, -21 * e, -193 * e, 42 * e, 0 * e),
                a.restore(),
                he(a, t[0], t[1], 12 * e),
                a.save(),
                a.translate(201 * e, 212 * e),
                a.rotate(8.64),
                ye(a, -116 * e, -22 * e, 232 * e, 44 * e, 10 * e),
                a.restore(),
                he(a, t[3], t[1], 12 * e),
                a.save(),
                a.translate(203.5 * e, 121.5 * e),
                ye(a, -115.5 * e, -20.5 * e, 231 * e, 41 * e, 10 * e),
                a.restore(),
                he(a, t[3], t[1], 12 * e),
                a.save(),
                a.translate(203.5 * e, 299 * e),
                ye(a, -115.5 * e, -20 * e, 231 * e, 40 * e, 10 * e),
                a.restore(),
                he(a, t[3], t[1], 12 * e),
                a.save(),
                a.translate(298.5 * e, 210 * e),
                ye(a, -20.5 * e, -109 * e, 41 * e, 218 * e, 10 * e),
                a.restore(),
                he(a, t[3], t[1], 12 * e),
                a.save(),
                a.translate(108.5 * e, 210 * e),
                ye(a, -20.5 * e, -109 * e, 41 * e, 218 * e, 10 * e),
                a.restore(),
                he(a, t[3], t[1], 12 * e),
                a.save(),
                a.translate(204 * e, 121.5 * e),
                ye(a, -92 * e, -9.5 * e, 184 * e, 19 * e, 10 * e),
                a.restore(),
                he(a, t[3], t[3], 10 * e),
                a.save(),
                a.translate(197 * e, 299 * e),
                ye(a, 85 * e, -9 * e, -170 * e, 18 * e, 10 * e),
                a.restore(),
                he(a, t[3], t[3], 10 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(94 * e, 317 * e),
                a.bezierCurveTo(110.5 * e, 299.5 * e, 110.5 * e, 299.5 * e, 127 * e, 282 * e),
                a.closePath(),
                he(a, void 0, t[1], 12 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(279 * e, 142 * e),
                a.bezierCurveTo(296.5 * e, 125.5 * e, 296.5 * e, 125.5 * e, 314 * e, 109 * e),
                a.closePath(),
                he(a, void 0, t[1], 12 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(93 * e, 106 * e),
                a.bezierCurveTo(110.5 * e, 124 * e, 110.5 * e, 124 * e, 128 * e, 142 * e),
                a.closePath(),
                he(a, void 0, t[1], 12 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(281 * e, 282 * e),
                a.bezierCurveTo(296 * e, 297.5 * e, 296 * e, 297.5 * e, 311 * e, 313 * e),
                a.closePath(),
                he(a, void 0, t[1], 12 * e),
                0 == i ? (a.scale(2, 2),
                a.translate(-7 * e, 55 * e),
                a.rotate(-.5),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(60 * e, 47 * e),
                a.bezierCurveTo(81 * e, 46 * e, 85 * e, 47 * e, 83 * e, 63 * e),
                a.bezierCurveTo(83 * e, 72 * e, 83 * e, 75 * e, 72 * e, 73 * e),
                a.bezierCurveTo(68 * e, 80 * e, 69 * e, 82 * e, 66 * e, 73 * e),
                a.bezierCurveTo(62 * e, 81 * e, 61 * e, 82 * e, 59 * e, 73 * e),
                a.bezierCurveTo(54 * e, 81 * e, 55 * e, 81 * e, 52 * e, 74 * e),
                a.bezierCurveTo(38 * e, 76 * e, 41 * e, 74 * e, 40 * e, 66 * e),
                a.bezierCurveTo(38 * e, 45 * e, 39 * e, 49 * e, 59 * e, 47 * e),
                a.closePath(),
                he(a, t[4], t[4], 5 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(68 * e, 54 * e),
                a.bezierCurveTo(75 * e, 54 * e, 77 * e, 62 * e, 71 * e, 64 * e),
                a.bezierCurveTo(62 * e, 65 * e, 63 * e, 54 * e, 68 * e, 54 * e),
                a.closePath(),
                he(a, t[3]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(50 * e, 55 * e),
                a.bezierCurveTo(57 * e, 55 * e, 58 * e, 65 * e, 52 * e, 65 * e),
                a.bezierCurveTo(44 * e, 66 * e, 44 * e, 54 * e, 50 * e, 55 * e),
                a.closePath(),
                he(a, t[3])) : 1 == i && (a.scale(.6, .6),
                a.translate(185 * e, 165 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(108 * e, 56 * e),
                a.bezierCurveTo(136 * e, 58 * e, 203 * e, 69 * e, 234 * e, 75 * e),
                a.bezierCurveTo(246 * e, 77 * e, 247 * e, 78 * e, 245 * e, 90 * e),
                a.bezierCurveTo(238 * e, 143 * e, 228 * e, 197 * e, 214 * e, 259 * e),
                a.bezierCurveTo(212 * e, 267 * e, 209 * e, 270 * e, 189 * e, 268 * e),
                a.bezierCurveTo(142 * e, 264 * e, 106 * e, 260 * e, 75 * e, 253 * e),
                a.bezierCurveTo(60 * e, 250 * e, 64 * e, 250 * e, 66 * e, 221 * e),
                a.bezierCurveTo(71 * e, 168 * e, 87 * e, 95 * e, 98 * e, 67 * e),
                a.bezierCurveTo(101 * e, 57 * e, 103 * e, 56 * e, 106 * e, 56 * e),
                a.closePath(),
                he(a, t[4], t[4], 20 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(112 * e, 72 * e),
                a.bezierCurveTo(132 * e, 73 * e, 227 * e, 85 * e, 226 * e, 91 * e),
                a.bezierCurveTo(231 * e, 89 * e, 217 * e, 196 * e, 200 * e, 250 * e),
                a.bezierCurveTo(196 * e, 254 * e, 175 * e, 249 * e, 166 * e, 249 * e),
                a.bezierCurveTo(91 * e, 241 * e, 82 * e, 236 * e, 83 * e, 232 * e),
                a.bezierCurveTo(90 * e, 144 * e, 108 * e, 71 * e, 111 * e, 72 * e),
                a.closePath(),
                he(a, void 0, t[0], 13 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(132 * e, 117 * e),
                a.bezierCurveTo(171 * e, 86 * e, 191 * e, 101 * e, 188 * e, 134 * e),
                a.bezierCurveTo(185 * e, 154 * e, 170 * e, 158 * e, 153 * e, 158 * e),
                a.bezierCurveTo(143 * e, 172 * e, 146 * e, 180 * e, 147 * e, 193 * e),
                he(a, void 0, t[0], 20 * e),
                Re(a, 142 * e, 221 * e, 16.1245154965971 * e),
                he(a, t[0])),
                n
            }
            function He(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                return n.width = 400 * e,
                n.height = 400 * e,
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(101 * e, 255 * e),
                a.bezierCurveTo(113 * e, 243 * e, 179 * e, 210 * e, 219 * e, 196 * e),
                a.bezierCurveTo(252 * e, 203 * e, 288 * e, 215 * e, 318 * e, 233 * e),
                a.bezierCurveTo(304 * e, 254 * e, 258 * e, 273 * e, 215 * e, 296 * e),
                a.bezierCurveTo(161 * e, 287 * e, 119 * e, 270 * e, 102 * e, 257 * e),
                a.closePath(),
                he(a, i[0], i[1], 14 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(99 * e, 258 * e),
                a.bezierCurveTo(99 * e, 272.5 * e, 99 * e, 272.5 * e, 99 * e, 287 * e),
                a.bezierCurveTo(166 * e, 319 * e, 193 * e, 320 * e, 212 * e, 324 * e),
                a.bezierCurveTo(292 * e, 286 * e, 312 * e, 271 * e, 319 * e, 263 * e),
                a.bezierCurveTo(320 * e, 249 * e, 320 * e, 241 * e, 318 * e, 234 * e),
                a.bezierCurveTo(300 * e, 254 * e, 254 * e, 277 * e, 216 * e, 294 * e),
                a.bezierCurveTo(190 * e, 296 * e, 135 * e, 276 * e, 102 * e, 258 * e),
                a.closePath(),
                he(a, i[2], i[1], 14 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(212 * e, 323 * e),
                a.bezierCurveTo(211.5 * e, 310.5 * e, 211.5 * e, 310.5 * e, 211 * e, 298 * e),
                a.closePath(),
                he(a, void 0, i[1], 14 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(212 * e, 210 * e),
                a.bezierCurveTo(286 * e, 210 * e, 331 * e, 254 * e, 212 * e, 276 * e),
                a.bezierCurveTo(108 * e, 276 * e, 112 * e, 222 * e, 213 * e, 208 * e),
                a.closePath(),
                he(a, i[3], i[4], 14 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(98 * e, 200 * e),
                a.bezierCurveTo(126 * e, 216 * e, 177 * e, 232 * e, 213 * e, 237 * e),
                a.bezierCurveTo(266 * e, 218 * e, 288 * e, 209 * e, 318 * e, 190 * e),
                a.bezierCurveTo(269 * e, 164 * e, 239 * e, 158 * e, 214 * e, 153 * e),
                a.bezierCurveTo(148 * e, 172 * e, 131 * e, 182 * e, 98 * e, 200 * e),
                a.closePath(),
                he(a, i[0], i[1], 14 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(97 * e, 204 * e),
                a.bezierCurveTo(97 * e, 215.5 * e, 97 * e, 215.5 * e, 97 * e, 227 * e),
                a.bezierCurveTo(148 * e, 250 * e, 179 * e, 256 * e, 212 * e, 262 * e),
                a.bezierCurveTo(268 * e, 244 * e, 281 * e, 233 * e, 318 * e, 214 * e),
                a.bezierCurveTo(318 * e, 203 * e, 318 * e, 203 * e, 318 * e, 192 * e),
                a.bezierCurveTo(250 * e, 225 * e, 236 * e, 231 * e, 214 * e, 239 * e),
                a.bezierCurveTo(158 * e, 228 * e, 126 * e, 215 * e, 99 * e, 201 * e),
                a.closePath(),
                he(a, i[2], i[1], 14 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(212 * e, 260 * e),
                a.bezierCurveTo(212 * e, 251.5 * e, 212 * e, 251.5 * e, 212 * e, 243 * e),
                a.closePath(),
                he(a, void 0, i[1], 14 * e),
                Re(a, 161 * e, 201 * e, 13 * e),
                he(a, i[5]),
                Re(a, 216 * e, 205 * e, 8.06225774829855 * e),
                he(a, i[5]),
                Re(a, 216 * e, 175 * e, 6.708203932499369 * e),
                he(a, i[5]),
                Re(a, 271 * e, 191 * e, 5.0990195135927845 * e),
                he(a, i[5]),
                Re(a, 206 * e, 180 * e, 11.180339887498949 * e),
                he(a, i[5]),
                n
            }
            function Ke(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                return n.width = 400 * e,
                n.height = 400 * e,
                a.save(),
                a.translate(85 * e, 237 * e),
                a.rotate(1.5707963267948966),
                me(a, 6, 54.585977194239184 * e, 1 * e),
                a.restore(),
                he(a, i[1], i[2], 12 * e),
                a.save(),
                a.translate(178 * e, 238 * e),
                a.rotate(1.5707963267948966),
                me(a, 6, 52.53573932334064 * e, 1 * e),
                a.restore(),
                he(a, i[1], i[2], 12 * e),
                a.save(),
                a.translate(270 * e, 239 * e),
                a.rotate(1.5707963267948966),
                me(a, 6, 53.58058329516393 * e, 1 * e),
                a.restore(),
                he(a, i[1], i[2], 12 * e),
                a.save(),
                a.translate(222 * e, 312 * e),
                a.rotate(1.5707963267948966),
                me(a, 6, 52.53573932334064 * e, 1 * e),
                a.restore(),
                he(a, i[1], i[2], 12 * e),
                a.save(),
                a.translate(317 * e, 159 * e),
                a.rotate(1.5707963267948966),
                me(a, 6, 57.63465889766331 * e, 1 * e),
                a.restore(),
                he(a, i[1], i[2], 12 * e),
                a.save(),
                a.translate(223.5 * e, 139.0625 * e),
                a.rotate(1.5707963267948966),
                me(a, 6, 51.66236541235796 * e, 1 * e),
                a.restore(),
                he(a, i[1], i[2], 12 * e),
                a.save(),
                a.translate(132.5 * e, 137.0625 * e),
                a.rotate(1.5707963267948966),
                me(a, 6, 52.009614495783374 * e, 1 * e),
                a.restore(),
                he(a, i[1], i[2], 12 * e),
                a.save(),
                a.translate(178.5 * e, 58.0625 * e),
                a.rotate(1.5707963267948966),
                me(a, 6, 53.16013544000805 * e, 1 * e),
                a.restore(),
                he(a, i[1], i[2], 12 * e),
                a.save(),
                a.translate(177.5 * e, 216.0625 * e),
                a.rotate(1.5707963267948966),
                me(a, 6, 50 * e, 1 * e),
                a.restore(),
                he(a, i[1], i[2], 12 * e),
                a.save(),
                a.translate(84.5 * e, 215.0625 * e),
                a.rotate(1.5707963267948966),
                me(a, 6, 54 * e, 1 * e),
                a.restore(),
                he(a, i[1], i[2], 12 * e),
                a.save(),
                a.translate(319.5 * e, 138.0625 * e),
                a.rotate(1.5707963267948966),
                me(a, 6, 55.08175741568164 * e, 1 * e),
                a.restore(),
                he(a, i[1], i[2], 12 * e),
                a.save(),
                a.translate(269.5 * e, 216.0625 * e),
                a.rotate(1.5707963267948966),
                me(a, 6, 54.589376255824725 * e, 1 * e),
                a.restore(),
                he(a, i[1], i[2], 12 * e),
                a.save(),
                a.translate(221.5 * e, 293.0625 * e),
                a.rotate(.5235987755982988),
                me(a, 6, 49.49747468305833 * e, 1 * e),
                a.restore(),
                he(a, i[1], i[2], 12 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(221.5 * e, 342.0625 * e),
                a.bezierCurveTo(221.5 * e, 350.5625 * e, 221.5 * e, 350.5625 * e, 221.5 * e, 359.0625 * e),
                a.closePath(),
                he(a, void 0, i[2], 12 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(84.5 * e, 270.0625 * e),
                a.bezierCurveTo(84.5 * e, 277.0625 * e, 84.5 * e, 277.0625 * e, 84.5 * e, 284.0625 * e),
                a.closePath(),
                he(a, void 0, i[2], 12 * e),
                a.save(),
                a.translate(84.5 * e, 215.0625 * e),
                a.rotate(.5235987755982988),
                me(a, 6, 30 * e, 15 * e),
                a.restore(),
                he(a, i[3]),
                a.save(),
                a.translate(177.5 * e, 215.0625 * e),
                a.rotate(.5235987755982988),
                me(a, 6, 30 * e, 15 * e),
                a.restore(),
                he(a, i[3]),
                a.save(),
                a.translate(222.5 * e, 294.0625 * e),
                a.rotate(.5235987755982988),
                me(a, 6, 30 * e, 15 * e),
                a.restore(),
                he(a, i[3]),
                a.save(),
                a.translate(270.5 * e, 216.0625 * e),
                a.rotate(.5235987755982988),
                me(a, 6, 30 * e, 15 * e),
                a.restore(),
                he(a, i[3]),
                a.save(),
                a.translate(320.5 * e, 134.0625 * e),
                a.rotate(.5235987755982988),
                me(a, 6, 30 * e, 15 * e),
                a.restore(),
                he(a, i[3]),
                a.save(),
                a.translate(224.5 * e, 138.0625 * e),
                a.rotate(.5235987755982988),
                me(a, 6, 30 * e, 15 * e),
                a.restore(),
                he(a, i[3]),
                a.save(),
                a.translate(133.5 * e, 137.0625 * e),
                a.rotate(.5235987755982988),
                me(a, 6, 30 * e, 15 * e),
                a.restore(),
                he(a, i[3]),
                a.save(),
                a.translate(178.5 * e, 56.0625 * e),
                a.rotate(.5235987755982988),
                me(a, 6, 30 * e, 15 * e),
                a.restore(),
                he(a, i[3]),
                n
            }
            function Ge(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                return n.width = 52 * e,
                n.height = 65 * e,
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(9.833328247070312 * e, 12.078125 * e),
                a.bezierCurveTo(15.333328247070312 * e, 28.078125 * e, 15.333328247070312 * e, 28.078125 * e, 20.833328247070312 * e, 44.078125 * e),
                a.closePath(),
                he(a, void 0, i[1], 2 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(7.8333282470703125 * e, 20.078125 * e),
                a.bezierCurveTo(16.833328247070312 * e, 32.578125 * e, 16.833328247070312 * e, 32.578125 * e, 25.833328247070312 * e, 45.078125 * e),
                a.closePath(),
                he(a, void 0, i[1], 2 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(23.833328247070312 * e, 26.078125 * e),
                a.bezierCurveTo(25.833328247070312 * e, 11.078125 * e, 16.833328247070312 * e, 8.078125 * e, 14.833328247070312 * e, 7.078125 * e),
                a.bezierCurveTo(11.833328247070312 * e, 17.078125 * e, 13.833328247070312 * e, 22.078125 * e, 23.833328247070312 * e, 27.078125 * e),
                a.closePath(),
                he(a, i[0], i[1], 2 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(35.83332824707031 * e, 8.078125 * e),
                a.bezierCurveTo(34.83332824707031 * e, 27.078125 * e, 28.833328247070312 * e, 27.078125 * e, 23.833328247070312 * e, 28.078125 * e),
                a.bezierCurveTo(21.833328247070312 * e, 14.078125 * e, 26.833328247070312 * e, 11.078125 * e, 35.83332824707031 * e, 8.078125 * e),
                a.closePath(),
                he(a, i[0], i[1], 2 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(25.833328247070312 * e, 39.078125 * e),
                a.bezierCurveTo(20.833328247070312 * e, 29.078125 * e, 14.833328247070312 * e, 27.078125 * e, 5.8333282470703125 * e, 29.078125 * e),
                a.bezierCurveTo(9.833328247070312 * e, 39.078125 * e, 16.833328247070312 * e, 42.078125 * e, 25.833328247070312 * e, 40.078125 * e),
                a.closePath(),
                he(a, i[0], i[1], 2 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(42.83332824707031 * e, 23.078125 * e),
                a.bezierCurveTo(35.83332824707031 * e, 35.078125 * e, 31.833328247070312 * e, 37.078125 * e, 25.833328247070312 * e, 36.078125 * e),
                a.bezierCurveTo(25.833328247070312 * e, 24.078125 * e, 33.83332824707031 * e, 21.078125 * e, 42.83332824707031 * e, 23.078125 * e),
                a.closePath(),
                he(a, i[0], i[1], 2 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(23.833328247070312 * e, 24.078125 * e),
                a.bezierCurveTo(20.833328247070312 * e, 34.078125 * e, 23.833328247070312 * e, 40.078125 * e, 27.833328247070312 * e, 43.078125 * e),
                a.bezierCurveTo(37.33332824707031 * e, 28.078125 * e, 37.33332824707031 * e, 28.078125 * e, 46.83332824707031 * e, 13.078125 * e),
                he(a, void 0, i[1], 2 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(38.83332824707031 * e, 14.078125 * e),
                a.bezierCurveTo(34.83332824707031 * e, 24.078125 * e, 34.83332824707031 * e, 24.078125 * e, 30.833328247070312 * e, 34.078125 * e),
                he(a, void 0, i[1], 2 * e),
                n
            }
            function We(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                return n.width = 170 * e,
                n.height = 173 * e,
                a.translate(5 * e, 5 * e),
                a.globalAlpha = t ? .5 : 1,
                a.save(),
                a.translate(86.25 * e, 84.953125 * e),
                a.rotate(.32),
                me(a, 7, 42.15447781671598 * e, 10 * e),
                a.restore(),
                he(a, i[0]),
                a.globalAlpha = 1,
                a.translate(-5 * e, -5 * e),
                a.save(),
                a.translate(86.25 * e, 84.953125 * e),
                a.rotate(.32),
                me(a, 7, 42.15447781671598 * e, 10 * e),
                a.restore(),
                he(a, i[1], i[2], 4 * e),
                a.globalAlpha = t ? .5 : 1,
                a.translate(5 * e, 5 * e),
                a.save(),
                a.translate(86.25 * e, 84.953125 * e),
                a.rotate(.28),
                me(a, 7, 30.463092423455635 * e, 10 * e),
                a.restore(),
                he(a, i[0]),
                a.globalAlpha = 1,
                a.translate(-5 * e, -5 * e),
                a.save(),
                a.translate(86.25 * e, 84.953125 * e),
                a.rotate(.28),
                me(a, 7, 30.463092423455635 * e, 10 * e),
                a.restore(),
                he(a, i[3], i[4], 4 * e),
                a.globalAlpha = t ? .5 : 1,
                a.translate(5 * e, 5 * e),
                Re(a, 86.25 * e, 84.953125 * e, 18.867962264113206 * e),
                he(a, i[0]),
                a.globalAlpha = 1,
                a.translate(-5 * e, -5 * e),
                Re(a, 86.25 * e, 84.953125 * e, 18.867962264113206 * e),
                he(a, i[5], i[6], 4 * e),
                n
            }
            function Fe(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                return n.width = 170 * e,
                n.height = 173 * e,
                a.globalAlpha = t ? .5 : 1,
                a.translate(5 * e, 5 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(85.25 * e, 82.953125 * e),
                a.bezierCurveTo(98.25 * e, 46.453125 * e, 98.25 * e, 46.453125 * e, 111.25 * e, 9.953125 * e),
                a.closePath(),
                he(a, void 0, i[0], 4 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(111.25 * e, 8.953125 * e),
                a.bezierCurveTo(117.75 * e, 12.453125 * e, 117.75 * e, 12.453125 * e, 124.25 * e, 15.953125 * e),
                a.bezierCurveTo(113.75 * e, 39.953125 * e, 113.75 * e, 39.953125 * e, 103.25 * e, 63.953125 * e),
                a.bezierCurveTo(97.75 * e, 64.953125 * e, 97.75 * e, 64.953125 * e, 92.25 * e, 65.953125 * e),
                a.closePath(),
                he(a, i[0]),
                a.globalAlpha = 1,
                a.translate(-5 * e, -5 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(111.25 * e, 8.953125 * e),
                a.bezierCurveTo(117.75 * e, 12.453125 * e, 117.75 * e, 12.453125 * e, 124.25 * e, 15.953125 * e),
                a.bezierCurveTo(113.75 * e, 39.953125 * e, 113.75 * e, 39.953125 * e, 103.25 * e, 63.953125 * e),
                a.bezierCurveTo(97.75 * e, 64.953125 * e, 97.75 * e, 64.953125 * e, 92.25 * e, 65.953125 * e),
                a.closePath(),
                he(a, i[7]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(85.25 * e, 82.953125 * e),
                a.bezierCurveTo(98.25 * e, 46.453125 * e, 98.25 * e, 46.453125 * e, 111.25 * e, 9.953125 * e),
                a.closePath(),
                he(a, void 0, i[6], 4 * e),
                a.globalAlpha = t ? .5 : 1,
                a.translate(5 * e, 5 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(87.25 * e, 84.953125 * e),
                a.bezierCurveTo(123.75 * e, 100.453125 * e, 123.75 * e, 100.453125 * e, 160.25 * e, 115.953125 * e),
                a.closePath(),
                he(a, void 0, i[0], 4 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(160.25 * e, 114.953125 * e),
                a.bezierCurveTo(156.25 * e, 122.453125 * e, 156.25 * e, 122.453125 * e, 152.25 * e, 129.953125 * e),
                a.bezierCurveTo(130.25 * e, 117.953125 * e, 130.25 * e, 117.953125 * e, 108.25 * e, 105.953125 * e),
                a.bezierCurveTo(107.25 * e, 98.953125 * e, 107.25 * e, 98.953125 * e, 106.25 * e, 91.953125 * e),
                a.closePath(),
                he(a, i[0]),
                a.globalAlpha = 1,
                a.translate(-5 * e, -5 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(160.25 * e, 114.953125 * e),
                a.bezierCurveTo(156.25 * e, 122.453125 * e, 156.25 * e, 122.453125 * e, 152.25 * e, 129.953125 * e),
                a.bezierCurveTo(130.25 * e, 117.953125 * e, 130.25 * e, 117.953125 * e, 108.25 * e, 105.953125 * e),
                a.bezierCurveTo(107.25 * e, 98.953125 * e, 107.25 * e, 98.953125 * e, 106.25 * e, 91.953125 * e),
                a.closePath(),
                he(a, i[7]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(87.25 * e, 84.953125 * e),
                a.bezierCurveTo(123.75 * e, 100.453125 * e, 123.75 * e, 100.453125 * e, 160.25 * e, 115.953125 * e),
                a.closePath(),
                he(a, void 0, i[6], 4 * e),
                a.globalAlpha = t ? .5 : 1,
                a.translate(5 * e, 5 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(83.25 * e, 83.953125 * e),
                a.bezierCurveTo(47.75 * e, 68.453125 * e, 47.75 * e, 68.453125 * e, 12.25 * e, 52.953125 * e),
                a.closePath(),
                he(a, void 0, i[0], 4 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(13.25 * e, 53.953125 * e),
                a.bezierCurveTo(17.25 * e, 46.953125 * e, 17.25 * e, 46.953125 * e, 21.25 * e, 39.953125 * e),
                a.bezierCurveTo(42.75 * e, 52.453125 * e, 42.75 * e, 52.453125 * e, 64.25 * e, 64.953125 * e),
                a.bezierCurveTo(64.25 * e, 70.953125 * e, 64.25 * e, 70.953125 * e, 64.25 * e, 76.953125 * e),
                a.closePath(),
                he(a, i[0]),
                a.globalAlpha = 1,
                a.translate(-5 * e, -5 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(13.25 * e, 53.953125 * e),
                a.bezierCurveTo(17.25 * e, 46.953125 * e, 17.25 * e, 46.953125 * e, 21.25 * e, 39.953125 * e),
                a.bezierCurveTo(42.75 * e, 52.453125 * e, 42.75 * e, 52.453125 * e, 64.25 * e, 64.953125 * e),
                a.bezierCurveTo(64.25 * e, 70.953125 * e, 64.25 * e, 70.953125 * e, 64.25 * e, 76.953125 * e),
                a.closePath(),
                he(a, i[7]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(83.25 * e, 83.953125 * e),
                a.bezierCurveTo(47.75 * e, 68.453125 * e, 47.75 * e, 68.453125 * e, 12.25 * e, 52.953125 * e),
                a.closePath(),
                he(a, void 0, i[6], 4 * e),
                a.globalAlpha = t ? .5 : 1,
                a.translate(5 * e, 5 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(84.25 * e, 86.953125 * e),
                a.bezierCurveTo(70.25 * e, 123.953125 * e, 70.25 * e, 123.953125 * e, 56.25 * e, 160.953125 * e),
                a.closePath(),
                he(a, void 0, i[0], 4 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(56.25 * e, 159.953125 * e),
                a.bezierCurveTo(49.25 * e, 155.453125 * e, 49.25 * e, 155.453125 * e, 42.25 * e, 150.953125 * e),
                a.bezierCurveTo(54.25 * e, 127.953125 * e, 54.25 * e, 127.953125 * e, 66.25 * e, 104.953125 * e),
                a.bezierCurveTo(71.25 * e, 104.953125 * e, 71.25 * e, 104.953125 * e, 76.25 * e, 104.953125 * e),
                a.closePath(),
                he(a, i[0]),
                a.globalAlpha = 1,
                a.translate(-5 * e, -5 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(56.25 * e, 159.953125 * e),
                a.bezierCurveTo(49.25 * e, 155.453125 * e, 49.25 * e, 155.453125 * e, 42.25 * e, 150.953125 * e),
                a.bezierCurveTo(54.25 * e, 127.953125 * e, 54.25 * e, 127.953125 * e, 66.25 * e, 104.953125 * e),
                a.bezierCurveTo(71.25 * e, 104.953125 * e, 71.25 * e, 104.953125 * e, 76.25 * e, 104.953125 * e),
                a.closePath(),
                he(a, i[7]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(84.25 * e, 86.953125 * e),
                a.bezierCurveTo(70.25 * e, 123.953125 * e, 70.25 * e, 123.953125 * e, 56.25 * e, 160.953125 * e),
                a.closePath(),
                he(a, void 0, i[6], 4 * e),
                n
            }
            function xe(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                return n.width = 170 * e,
                n.height = 173 * e,
                a.globalAlpha = t ? .5 : 1,
                a.translate(5 * e, 5 * e),
                a.save(),
                a.translate(86.25 * e, 84.953125 * e),
                me(a, 7, 9.848857801796104 * e, 5 * e),
                a.restore(),
                he(a, i[0]),
                a.globalAlpha = 1,
                a.translate(-5 * e, -5 * e),
                a.save(),
                a.translate(86.25 * e, 84.953125 * e),
                me(a, 7, 9.848857801796104 * e, 5 * e),
                a.restore(),
                he(a, i[8], i[9], 4 * e),
                n
            }
            function Ve(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d")
                  , I = 75 * e
                  , T = 55 * e;
                return n.width = I,
                n.height = T,
                a.translate(-30 * e, -40 * e),
                a.globalAlpha = 1,
                a.beginPath(),
                a.bezierCurveTo(67 * e, 56 * e, 72 * e, 71 * e, 72 * e, 71 * e),
                a.bezierCurveTo(72 * e, 71 * e, 84 * e, 70 * e, 75 * e, 82 * e),
                a.bezierCurveTo(70 * e, 88 * e, 61 * e, 89 * e, 58 * e, 89 * e),
                a.bezierCurveTo(55 * e, 89 * e, 40 * e, 89 * e, 46 * e, 77 * e),
                a.bezierCurveTo(46 * e, 77 * e, 43 * e, 63 * e, 43 * e, 63 * e),
                a.bezierCurveTo(35 * e, 61 * e, 35 * e, 53 * e, 42 * e, 47 * e),
                a.bezierCurveTo(48 * e, 42 * e, 62 * e, 41 * e, 66 * e, 43 * e),
                a.bezierCurveTo(70 * e, 45 * e, 72 * e, 48 * e, 67 * e, 56 * e),
                a.closePath(),
                he(a, i[0]),
                a.beginPath(),
                a.bezierCurveTo(68 * e, 61 * e, 72 * e, 76 * e, 72 * e, 76 * e),
                a.bezierCurveTo(65 * e, 85 * e, 61 * e, 85 * e, 49 * e, 83 * e),
                a.bezierCurveTo(49 * e, 83 * e, 44 * e, 63 * e, 44 * e, 63 * e),
                a.bezierCurveTo(54 * e, 63 * e, 60 * e, 63 * e, 67 * e, 55 * e),
                a.closePath(),
                he(a, i[1]),
                a.beginPath(),
                a.moveTo(69 * e, 65 * e),
                a.bezierCurveTo(70 * e, 61 * e, 81 * e, 66 * e, 86 * e, 66 * e),
                a.bezierCurveTo(90 * e, 66 * e, 97 * e, 63 * e, 97 * e, 56 * e),
                a.bezierCurveTo(97 * e, 50 * e, 93 * e, 47 * e, 88 * e, 44 * e),
                he(a, !1, i[1], 2),
                a.beginPath(),
                a.moveTo(50 * e, 48 * e),
                a.bezierCurveTo(43 * e, 52 * e, 50 * e, 54 * e, 51 * e, 54 * e),
                a.bezierCurveTo(54 * e, 54 * e, 59 * e, 52 * e, 59 * e, 49 * e),
                a.bezierCurveTo(59 * e, 48 * e, 55 * e, 46 * e, 50 * e, 48 * e),
                he(a, i[2]),
                n
            }
            function Ue(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d")
                  , I = 195 * e
                  , T = 190 * e
                  , o = I / 2
                  , r = T / 2;
                n.width = I,
                n.height = T;
                var d = 10 * e
                  , s = 35 * e
                  , h = 150 * e
                  , y = s / 2
                  , R = h / 2
                  , E = 4 * e;
                return a.translate(o - 5 * e, r - 5 * e),
                a.rotate(-window.Math.PI / 1.25),
                a.globalAlpha = 1,
                ye(a, -y, -R, s, h, d),
                he(a, i[0], i[1], E),
                a.translate(0, 0),
                a.rotate(window.Math.PI / 3),
                a.globalAlpha = 1,
                ye(a, -y, -R, s, h, d),
                he(a, i[0], i[1], E),
                a.translate(0, 5),
                ye(a, -y / 2, -R / 2, s / 2, h / 3, d - 2),
                he(a, i[1]),
                n
            }
            function Xe(e, t, i, n, a) {
                var I = window.document.createElement("canvas")
                  , T = I.getContext("2d")
                  , o = 70 * e
                  , r = 70 * e
                  , d = 10 * e
                  , s = 5 * e;
                I.width = o,
                I.height = r + s;
                for (var h = 0; h < t.length; h++) {
                    var y = t[h];
                    T.globalAlpha = y.a;
                    var R = y.f(i, !1, y.c);
                    T.save(),
                    T.translate(o / 2 + y.x * e, r / 2 + y.y * e),
                    T.rotate(y.r),
                    T.drawImage(R, -R.width / 2, -R.height / 2),
                    T.restore()
                }
                var E = [];
                for (h = 0; h < n.length; h++) {
                    var m = window.document.createElement("canvas")
                      , S = m.getContext("2d");
                    m.width = o,
                    m.height = r + s,
                    S.globalAlpha = a / 2,
                    2 == h ? ye(S, 0, s, o, r, d) : ye(S, 0, 0, o, r + s, d),
                    he(S, "#081a19"),
                    S.globalAlpha = a,
                    ye(S, 0, 2 == h ? s : 0, o, r, d),
                    he(S, n[h]),
                    S.globalAlpha = 1,
                    2 == h ? S.drawImage(I, 0, s) : S.drawImage(I, 0, 0),
                    E.push(F(m))
                }
                return E
            }
            function qe(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d")
                  , I = 193 * e
                  , T = 198 * e
                  , o = 140 * e
                  , r = 90 * e;
                n.width = I,
                n.height = T;
                var d = 10 * e
                  , s = 25 * e
                  , h = 180 * e
                  , y = s / 2
                  , R = h / 2
                  , E = 4 * e;
                return a.translate(-25 * e, 1 * e),
                a.translate(o, r),
                a.rotate(-window.Math.PI / 5),
                ye(a, -y, -R, s, h, d),
                he(a, i[0], i[1], E),
                a.translate(-30 * e, -25 * e),
                a.rotate(window.Math.PI / 3),
                ye(a, -y, -R, s, h, d),
                he(a, i[0], i[1], E),
                a.translate(35 * e, 30 * e),
                a.rotate(window.Math.PI / 3),
                ye(a, -y, -R, s, h, d),
                he(a, i[0], i[1], E),
                n
            }
            function ze(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d")
                  , I = 145 * e
                  , T = 145 * e
                  , o = I / 2
                  , r = T / 2;
                n.width = I,
                n.height = T;
                var d = 70 * e;
                a.translate(o, r),
                a.globalAlpha = .4,
                Re(a, 0, 0, d),
                he(a, i[0]);
                d = 50 * e;
                a.translate(0, 0),
                a.globalAlpha = .8,
                Re(a, 0, 0, d),
                he(a, i[0]);
                d = 35 * e;
                a.translate(0, 0),
                a.globalAlpha = .8,
                Re(a, 0, 0, d),
                he(a, i[1]);
                d = 20 * e;
                return a.translate(0, 0),
                a.globalAlpha = .8,
                Re(a, 0, 0, d),
                he(a, i[2]),
                n
            }
            function je(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d")
                  , I = 135 * e
                  , T = 190 * e
                  , o = I / 2
                  , r = T / 2;
                n.width = I,
                n.height = T;
                var d = 10 * e
                  , s = 25 * e
                  , h = 180 * e
                  , y = s / 2
                  , R = h / 2
                  , E = 4 * e;
                return a.translate(o, r),
                a.rotate(-window.Math.PI / 5),
                a.globalAlpha = 1,
                ye(a, -y, -R, s, h, d),
                he(a, i[0], i[1], E),
                a.translate(0, 0),
                a.rotate(window.Math.PI / 5),
                a.globalAlpha = 1,
                ye(a, -y, -R, s, h, d),
                he(a, i[0], i[1], E),
                n
            }
            function $e(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d")
                  , I = 205 * e
                  , T = 205 * e
                  , o = I / 2
                  , r = T / 2;
                n.width = I,
                n.height = T;
                var d = 100 * e;
                return a.translate(o, r),
                a.globalAlpha = 1,
                Re(a, 0, 0, d),
                he(a, i[0]),
                n
            }
            function Ze(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d")
                  , I = 370 * e
                  , T = 370 * e
                  , o = I / 2
                  , r = T / 2;
                n.width = I,
                n.height = T;
                var d = 180 * e;
                return a.globalAlpha = .2,
                Re(a, o, r, d),
                he(a, i[0]),
                n
            }
            function Je(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                return n.width = 155 * e,
                n.height = 127 * e,
                a.globalAlpha = .5,
                a.translate(0, 8 * e),
                a.translate(-7 * e, -20 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(55 * e, 68 * e),
                a.bezierCurveTo(86 * e, 64 * e, 117 * e, 66 * e, 134 * e, 68 * e),
                a.bezierCurveTo(152 * e, 69 * e, 165 * e, 86 * e, 152 * e, 104 * e),
                a.bezierCurveTo(146 * e, 87 * e, 122 * e, 89 * e, 98 * e, 90 * e),
                a.bezierCurveTo(64 * e, 89 * e, 41 * e, 91 * e, 36 * e, 106 * e),
                a.bezierCurveTo(19 * e, 92 * e, 31 * e, 71 * e, 54 * e, 69 * e),
                a.closePath(),
                he(a, i[0]),
                a.globalAlpha = 1,
                a.translate(0, -8 * e),
                a.translate(7 * e, 20 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(24 * e, 28 * e),
                a.bezierCurveTo(39 * e, 30 * e, 37 * e, 31 * e, 40 * e, 32 * e),
                a.bezierCurveTo(22 * e, 45 * e, 26 * e, 58 * e, 29 * e, 66 * e),
                a.bezierCurveTo(86.5 * e, 65 * e, 86.5 * e, 65 * e, 144 * e, 64 * e),
                a.bezierCurveTo(151 * e, 42 * e, 132 * e, 20 * e, 120 * e, 16 * e),
                a.bezierCurveTo(106 * e, 12 * e, 89 * e, 0 * e, 73 * e, 3 * e),
                a.bezierCurveTo(51 * e, 5 * e, 36 * e, 20 * e, 25 * e, 28 * e),
                a.closePath(),
                he(a, i[1], i[2], 4 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(30 * e, 41 * e),
                a.bezierCurveTo(49 * e, 31 * e, 53 * e, 29 * e, 62 * e, 27 * e),
                a.bezierCurveTo(59 * e, 24 * e, 56 * e, 25 * e, 53 * e, 24 * e),
                a.bezierCurveTo(67 * e, 15 * e, 84 * e, 12 * e, 120 * e, 16 * e),
                a.bezierCurveTo(107 * e, 11 * e, 96 * e, 6 * e, 85 * e, 2 * e),
                a.bezierCurveTo(59 * e, 3 * e, 54 * e, 7 * e, 40 * e, 17 * e),
                a.bezierCurveTo(32.5 * e, 22.5 * e, 32.5 * e, 22.5 * e, 25 * e, 28 * e),
                a.bezierCurveTo(32 * e, 30 * e, 32 * e, 30 * e, 39 * e, 32 * e),
                a.closePath(),
                he(a, i[3]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(24 * e, 28 * e),
                a.bezierCurveTo(39 * e, 30 * e, 37 * e, 31 * e, 40 * e, 32 * e),
                a.bezierCurveTo(22 * e, 45 * e, 26 * e, 58 * e, 29 * e, 66 * e),
                a.bezierCurveTo(86.5 * e, 65 * e, 86.5 * e, 65 * e, 144 * e, 64 * e),
                a.bezierCurveTo(151 * e, 42 * e, 132 * e, 20 * e, 120 * e, 16 * e),
                a.bezierCurveTo(106 * e, 12 * e, 89 * e, 0 * e, 73 * e, 3 * e),
                a.bezierCurveTo(51 * e, 5 * e, 36 * e, 20 * e, 25 * e, 28 * e),
                a.closePath(),
                he(a, void 0, i[2], 4 * e),
                Re(a, 18 * e, 38 * e, 14.866068747318506 * e),
                he(a, i[4], i[5], 4 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(39 * e, 30 * e),
                a.bezierCurveTo(27 * e, 38 * e, 25 * e, 50 * e, 26 * e, 60 * e),
                a.bezierCurveTo(36.5 * e, 58.5 * e, 36.5 * e, 58.5 * e, 47 * e, 57 * e),
                he(a, i[1], i[2], 4 * e),
                a.translate(-7 * e, -20 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(27 * e, 74 * e),
                a.bezierCurveTo(38 * e, 77.5 * e, 38 * e, 77.5 * e, 49 * e, 81 * e),
                a.bezierCurveTo(54.5 * e, 75.5 * e, 54.5 * e, 75.5 * e, 60 * e, 70 * e),
                a.bezierCurveTo(64 * e, 72 * e, 64 * e, 72 * e, 68 * e, 74 * e),
                a.bezierCurveTo(80.5 * e, 67.5 * e, 80.5 * e, 67.5 * e, 93 * e, 61 * e),
                a.bezierCurveTo(104.5 * e, 68 * e, 104.5 * e, 68 * e, 116 * e, 75 * e),
                a.bezierCurveTo(120.5 * e, 72.5 * e, 120.5 * e, 72.5 * e, 125 * e, 70 * e),
                a.bezierCurveTo(129 * e, 75 * e, 129 * e, 75 * e, 133 * e, 80 * e),
                a.bezierCurveTo(145.5 * e, 76.5 * e, 145.5 * e, 76.5 * e, 158 * e, 73 * e),
                a.bezierCurveTo(158 * e, 87 * e, 158 * e, 93 * e, 155 * e, 95 * e),
                a.bezierCurveTo(152.5 * e, 96 * e, 152.5 * e, 96 * e, 150 * e, 97 * e),
                a.bezierCurveTo(121 * e, 85 * e, 108 * e, 86 * e, 93 * e, 85 * e),
                a.bezierCurveTo(64 * e, 85 * e, 52 * e, 95 * e, 38 * e, 99 * e),
                a.bezierCurveTo(36 * e, 98.5 * e, 36 * e, 98.5 * e, 34 * e, 98 * e),
                a.bezierCurveTo(25 * e, 98 * e, 27 * e, 91 * e, 27 * e, 76 * e),
                a.closePath(),
                he(a, i[6], i[7], 6 * e),
                n
            }
            function Qe(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                return n.width = 155 * e,
                n.height = 127 * e,
                a.globalAlpha = .5,
                a.translate(0, 8 * e),
                a.translate(-7 * e, -20 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(55 * e, 68 * e),
                a.bezierCurveTo(86 * e, 64 * e, 117 * e, 66 * e, 134 * e, 68 * e),
                a.bezierCurveTo(152 * e, 69 * e, 165 * e, 86 * e, 152 * e, 104 * e),
                a.bezierCurveTo(146 * e, 87 * e, 122 * e, 89 * e, 98 * e, 90 * e),
                a.bezierCurveTo(64 * e, 89 * e, 41 * e, 91 * e, 36 * e, 106 * e),
                a.bezierCurveTo(19 * e, 92 * e, 31 * e, 71 * e, 54 * e, 69 * e),
                a.closePath(),
                he(a, i[0]),
                a.globalAlpha = 1,
                a.translate(0, -8 * e),
                a.translate(7 * e, 20 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(24 * e, 28 * e),
                a.bezierCurveTo(39 * e, 30 * e, 37 * e, 31 * e, 40 * e, 32 * e),
                a.bezierCurveTo(22 * e, 45 * e, 26 * e, 58 * e, 29 * e, 66 * e),
                a.bezierCurveTo(86.5 * e, 65 * e, 86.5 * e, 65 * e, 144 * e, 64 * e),
                a.bezierCurveTo(151 * e, 42 * e, 132 * e, 20 * e, 120 * e, 16 * e),
                a.bezierCurveTo(106 * e, 12 * e, 89 * e, 0 * e, 73 * e, 3 * e),
                a.bezierCurveTo(51 * e, 5 * e, 36 * e, 20 * e, 25 * e, 28 * e),
                a.closePath(),
                he(a, i[1], i[2], 4 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(30 * e, 41 * e),
                a.bezierCurveTo(49 * e, 31 * e, 53 * e, 29 * e, 62 * e, 27 * e),
                a.bezierCurveTo(59 * e, 24 * e, 56 * e, 25 * e, 53 * e, 24 * e),
                a.bezierCurveTo(67 * e, 15 * e, 84 * e, 12 * e, 120 * e, 16 * e),
                a.bezierCurveTo(107 * e, 11 * e, 96 * e, 6 * e, 85 * e, 2 * e),
                a.bezierCurveTo(59 * e, 3 * e, 54 * e, 7 * e, 40 * e, 17 * e),
                a.bezierCurveTo(32.5 * e, 22.5 * e, 32.5 * e, 22.5 * e, 25 * e, 28 * e),
                a.bezierCurveTo(32 * e, 30 * e, 32 * e, 30 * e, 39 * e, 32 * e),
                a.closePath(),
                he(a, i[3]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(24 * e, 28 * e),
                a.bezierCurveTo(39 * e, 30 * e, 37 * e, 31 * e, 40 * e, 32 * e),
                a.bezierCurveTo(22 * e, 45 * e, 26 * e, 58 * e, 29 * e, 66 * e),
                a.bezierCurveTo(86.5 * e, 65 * e, 86.5 * e, 65 * e, 144 * e, 64 * e),
                a.bezierCurveTo(151 * e, 42 * e, 132 * e, 20 * e, 120 * e, 16 * e),
                a.bezierCurveTo(106 * e, 12 * e, 89 * e, 0 * e, 73 * e, 3 * e),
                a.bezierCurveTo(51 * e, 5 * e, 36 * e, 20 * e, 25 * e, 28 * e),
                a.closePath(),
                he(a, void 0, i[2], 4 * e),
                Re(a, 18 * e, 38 * e, 14.866068747318506 * e),
                he(a, i[4], i[5], 4 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(39 * e, 30 * e),
                a.bezierCurveTo(27 * e, 38 * e, 25 * e, 50 * e, 26 * e, 60 * e),
                a.bezierCurveTo(36.5 * e, 58.5 * e, 36.5 * e, 58.5 * e, 47 * e, 57 * e),
                he(a, i[1], i[2], 4 * e),
                a.translate(-7 * e, -20 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(55 * e, 68 * e),
                a.bezierCurveTo(86 * e, 64 * e, 117 * e, 66 * e, 134 * e, 68 * e),
                a.bezierCurveTo(152 * e, 69 * e, 165 * e, 86 * e, 152 * e, 104 * e),
                a.bezierCurveTo(146 * e, 87 * e, 122 * e, 89 * e, 98 * e, 90 * e),
                a.bezierCurveTo(64 * e, 89 * e, 41 * e, 91 * e, 36 * e, 106 * e),
                a.bezierCurveTo(19 * e, 92 * e, 31 * e, 71 * e, 54 * e, 69 * e),
                a.closePath(),
                he(a, i[4], i[5], 4 * e),
                n
            }
            function et(e, t) {
                var i = window.document.createElement("canvas")
                  , n = i.getContext("2d")
                  , a = 220 * e
                  , I = 220 * e
                  , T = 32 * e
                  , o = 4 * e;
                return i.width = a,
                i.height = I,
                n.translate(a / 2, I / 2 + 10 * e),
                n.globalAlpha = .5,
                Re(n, 0, 0, T),
                he(n, t[0], t[0]),
                n.translate(0, -8 * e),
                n.globalAlpha = 1,
                Re(n, 0, 0, T),
                he(n, t[1], t[2], o),
                i
            }
            function tt(e, t) {
                var i = window.document.createElement("canvas")
                  , n = i.getContext("2d")
                  , a = 40 * e
                  , I = 40 * e
                  , T = 16 * e
                  , o = 4 * e;
                return i.width = a,
                i.height = I,
                n.translate(a / 2, I / 2),
                n.globalAlpha = 1,
                Re(n, 0, 0, T),
                he(n, t[0], t[1], o),
                i
            }
            function it(e, t) {
                var i = window.document.createElement("canvas")
                  , n = i.getContext("2d")
                  , a = 220 * e
                  , I = 220 * e
                  , T = 16 * e;
                return i.width = a,
                i.height = I,
                n.translate(a / 2, I / 2),
                n.globalAlpha = .5,
                Re(n, 0, 0, T),
                he(n, t[0]),
                n.globalAlpha = 1,
                i
            }
            function nt(e, t, i, n) {
                var a = window.document.createElement("canvas")
                  , I = a.getContext("2d")
                  , T = 210 * e
                  , o = 205 * e
                  , r = 30 * e
                  , d = 20 * e
                  , s = 200 * e
                  , h = 180 * e
                  , y = s / 2
                  , R = h / 2;
                return a.width = T,
                a.height = o,
                a.width = 419 * e,
                a.height = 412 * e,
                1 == n ? (I.save(),
                I.translate(10 * e, 0 * e),
                I.beginPath(),
                I.lineCap = "round",
                I.lineJoin = "round",
                I.moveTo(117.99996948242188 * e, 216.40621948242188 * e),
                I.bezierCurveTo(86.99996948242188 * e, 221.40621948242188 * e, 74.99996948242188 * e, 217.40621948242188 * e, 60.999969482421875 * e, 205.40621948242188 * e),
                he(I, void 0, t[4], 3 * e),
                I.beginPath(),
                I.lineCap = "round",
                I.lineJoin = "round",
                I.moveTo(114.99996948242188 * e, 227.40621948242188 * e),
                I.bezierCurveTo(90.99996948242188 * e, 233.40621948242188 * e, 66.99996948242188 * e, 228.40621948242188 * e, 43.999969482421875 * e, 225.40621948242188 * e),
                he(I, void 0, t[4], 3 * e),
                I.beginPath(),
                I.lineCap = "round",
                I.lineJoin = "round",
                I.moveTo(110.99996948242188 * e, 236.40621948242188 * e),
                I.bezierCurveTo(94.99996948242188 * e, 244.40621948242188 * e, 79.99996948242188 * e, 249.40621948242188 * e, 60.999969482421875 * e, 249.40621948242188 * e),
                he(I, void 0, t[4], 3 * e),
                I.beginPath(),
                I.lineCap = "round",
                I.lineJoin = "round",
                I.moveTo(111.99996948242188 * e, 206.29513549804688 * e),
                I.bezierCurveTo(91.99996948242188 * e, 206.29513549804688 * e, 87.99996948242188 * e, 201.29513549804688 * e, 79.99996948242188 * e, 192.29513549804688 * e),
                he(I, void 0, t[4], 3 * e),
                I.beginPath(),
                I.lineCap = "round",
                I.lineJoin = "round",
                I.moveTo(109.99996948242188 * e, 249.18402099609375 * e),
                I.bezierCurveTo(97.99996948242188 * e, 263.18402099609375 * e, 85.99996948242188 * e, 271.18402099609375 * e, 65.99996948242188 * e, 277.18402099609375 * e),
                he(I, void 0, t[4], 3 * e),
                I.beginPath(),
                I.lineCap = "round",
                I.lineJoin = "round",
                I.moveTo(105.99996948242188 * e, 192.18402099609375 * e),
                I.bezierCurveTo(99.49996948242188 * e, 197.68402099609375 * e, 99.49996948242188 * e, 197.68402099609375 * e, 92.99996948242188 * e, 203.18402099609375 * e),
                I.bezierCurveTo(95.99996948242188 * e, 213.18402099609375 * e, 95.99996948242188 * e, 215.18402099609375 * e, 89.99996948242188 * e, 219.18402099609375 * e),
                I.bezierCurveTo(91.99996948242188 * e, 223.18402099609375 * e, 91.99996948242188 * e, 226.18402099609375 * e, 87.99996948242188 * e, 230.18402099609375 * e),
                I.bezierCurveTo(89.99996948242188 * e, 234.18402099609375 * e, 91.99996948242188 * e, 237.18402099609375 * e, 90.99996948242188 * e, 244.18402099609375 * e),
                I.bezierCurveTo(96.99996948242188 * e, 252.18402099609375 * e, 96.99996948242188 * e, 256.18402099609375 * e, 95.99996948242188 * e, 262.18402099609375 * e),
                I.bezierCurveTo(106.49996948242188 * e, 264.18402099609375 * e, 106.49996948242188 * e, 264.18402099609375 * e, 116.99996948242188 * e, 266.18402099609375 * e),
                he(I, void 0, t[4], 3 * e),
                I.beginPath(),
                I.lineCap = "round",
                I.lineJoin = "round",
                I.moveTo(104.99996948242188 * e, 183.29513549804688 * e),
                I.bezierCurveTo(99.99996948242188 * e, 193.29513549804688 * e, 93.99996948242188 * e, 195.29513549804688 * e, 89.99996948242188 * e, 201.29513549804688 * e),
                I.bezierCurveTo(86.99996948242188 * e, 212.29513549804688 * e, 85.99996948242188 * e, 214.29513549804688 * e, 81.99996948242188 * e, 215.29513549804688 * e),
                I.bezierCurveTo(83.99996948242188 * e, 223.29513549804688 * e, 83.99996948242188 * e, 227.29513549804688 * e, 79.99996948242188 * e, 230.29513549804688 * e),
                I.bezierCurveTo(83.99996948242188 * e, 235.29513549804688 * e, 84.99996948242188 * e, 240.29513549804688 * e, 79.99996948242188 * e, 246.29513549804688 * e),
                I.bezierCurveTo(86.99996948242188 * e, 251.29513549804688 * e, 91.99996948242188 * e, 256.2951354980469 * e, 89.99996948242188 * e, 266.2951354980469 * e),
                I.bezierCurveTo(102.99996948242188 * e, 269.2951354980469 * e, 102.99996948242188 * e, 269.2951354980469 * e, 115.99996948242188 * e, 272.2951354980469 * e),
                he(I, void 0, t[4], 3 * e),
                I.beginPath(),
                I.lineCap = "round",
                I.lineJoin = "round",
                I.moveTo(107.99996948242188 * e, 177.85067749023438 * e),
                I.bezierCurveTo(95.99996948242188 * e, 187.35067749023438 * e, 95.99996948242188 * e, 187.35067749023438 * e, 83.99996948242188 * e, 196.85067749023438 * e),
                I.bezierCurveTo(82.99996948242188 * e, 203.85067749023438 * e, 80.99996948242188 * e, 209.85067749023438 * e, 72.99996948242188 * e, 210.85067749023438 * e),
                I.bezierCurveTo(73.99996948242188 * e, 220.85067749023438 * e, 73.99996948242188 * e, 221.85067749023438 * e, 66.99996948242188 * e, 227.85067749023438 * e),
                I.bezierCurveTo(71.99996948242188 * e, 235.85067749023438 * e, 73.99996948242188 * e, 239.85067749023438 * e, 71.99996948242188 * e, 247.85067749023438 * e),
                I.bezierCurveTo(80.99996948242188 * e, 257.8506774902344 * e, 81.99996948242188 * e, 263.8506774902344 * e, 77.99996948242188 * e, 271.8506774902344 * e),
                I.bezierCurveTo(95.49996948242188 * e, 272.8506774902344 * e, 95.49996948242188 * e, 272.8506774902344 * e, 112.99996948242188 * e, 273.8506774902344 * e),
                he(I, void 0, t[4], 3 * e),
                I.restore()) : 2 == n && (I.save(),
                I.translate(130 * e, 35 * e),
                I.beginPath(),
                I.lineCap = "round",
                I.lineJoin = "round",
                I.moveTo(170.99996948242188 * e, 133.85067749023438 * e),
                I.bezierCurveTo(195.99996948242188 * e, 129.85067749023438 * e, 196.99996948242188 * e, 111.85067749023438 * e, 200.99996948242188 * e, 88.85067749023438 * e),
                he(I, void 0, t[4], 3 * e),
                I.beginPath(),
                I.lineCap = "round",
                I.lineJoin = "round",
                I.moveTo(169.99996948242188 * e, 143.85067749023438 * e),
                I.bezierCurveTo(189.99996948242188 * e, 145.85067749023438 * e, 207.99996948242188 * e, 126.85067749023438 * e, 222.99996948242188 * e, 100.85067749023438 * e),
                he(I, void 0, t[4], 3 * e),
                I.beginPath(),
                I.lineCap = "round",
                I.lineJoin = "round",
                I.moveTo(170.99996948242188 * e, 157.85067749023438 * e),
                I.bezierCurveTo(193.99996948242188 * e, 160.85067749023438 * e, 210.99996948242188 * e, 151.85067749023438 * e, 232.99996948242188 * e, 139.85067749023438 * e),
                he(I, void 0, t[4], 3 * e),
                I.beginPath(),
                I.lineCap = "round",
                I.lineJoin = "round",
                I.moveTo(169.99996948242188 * e, 168.85067749023438 * e),
                I.bezierCurveTo(192.99996948242188 * e, 175.85067749023438 * e, 203.99996948242188 * e, 177.85067749023438 * e, 245.99996948242188 * e, 168.85067749023438 * e),
                he(I, void 0, t[4], 3 * e),
                I.beginPath(),
                I.lineCap = "round",
                I.lineJoin = "round",
                I.moveTo(167.99996948242188 * e, 168.85067749023438 * e),
                I.bezierCurveTo(183.99996948242188 * e, 189.85067749023438 * e, 191.99996948242188 * e, 193.85067749023438 * e, 220.99996948242188 * e, 196.85067749023438 * e),
                he(I, void 0, t[4], 3 * e),
                I.beginPath(),
                I.lineCap = "round",
                I.lineJoin = "round",
                I.moveTo(176.99996948242188 * e, 117.85067749023438 * e),
                I.bezierCurveTo(181.99996948242188 * e, 120.85067749023438 * e, 181.99996948242188 * e, 120.85067749023438 * e, 186.99996948242188 * e, 123.85067749023438 * e),
                I.bezierCurveTo(183.99996948242188 * e, 137.85067749023438 * e, 185.99996948242188 * e, 136.85067749023438 * e, 190.99996948242188 * e, 136.85067749023438 * e),
                I.bezierCurveTo(186.99996948242188 * e, 147.85067749023438 * e, 189.99996948242188 * e, 152.85067749023438 * e, 193.99996948242188 * e, 155.85067749023438 * e),
                I.bezierCurveTo(187.99996948242188 * e, 165.85067749023438 * e, 190.99996948242188 * e, 169.85067749023438 * e, 190.99996948242188 * e, 172.85067749023438 * e),
                I.bezierCurveTo(186.99996948242188 * e, 183.85067749023438 * e, 186.99996948242188 * e, 185.85067749023438 * e, 189.99996948242188 * e, 188.85067749023438 * e),
                I.bezierCurveTo(182.49996948242188 * e, 195.35067749023438 * e, 182.49996948242188 * e, 195.35067749023438 * e, 174.99996948242188 * e, 201.85067749023438 * e),
                he(I, void 0, t[4], 3 * e),
                I.beginPath(),
                I.lineCap = "round",
                I.lineJoin = "round",
                I.moveTo(176.99996948242188 * e, 112.18402099609375 * e),
                I.bezierCurveTo(183.99996948242188 * e, 119.18402099609375 * e, 186.99996948242188 * e, 117.18402099609375 * e, 192.99996948242188 * e, 116.18402099609375 * e),
                I.bezierCurveTo(191.99996948242188 * e, 126.18402099609375 * e, 193.99996948242188 * e, 130.18402099609375 * e, 199.99996948242188 * e, 130.18402099609375 * e),
                I.bezierCurveTo(194.99996948242188 * e, 145.18402099609375 * e, 197.99996948242188 * e, 147.18402099609375 * e, 201.99996948242188 * e, 153.18402099609375 * e),
                I.bezierCurveTo(196.99996948242188 * e, 164.18402099609375 * e, 197.99996948242188 * e, 169.18402099609375 * e, 201.99996948242188 * e, 174.18402099609375 * e),
                I.bezierCurveTo(194.99996948242188 * e, 184.18402099609375 * e, 196.99996948242188 * e, 187.18402099609375 * e, 200.99996948242188 * e, 193.18402099609375 * e),
                I.bezierCurveTo(185.99996948242188 * e, 195.18402099609375 * e, 181.99996948242188 * e, 201.18402099609375 * e, 174.99996948242188 * e, 210.18402099609375 * e),
                he(I, void 0, t[4], 3 * e),
                I.beginPath(),
                I.lineCap = "round",
                I.lineJoin = "round",
                I.moveTo(176.99996948242188 * e, 101.29513549804688 * e),
                I.bezierCurveTo(181.99996948242188 * e, 108.29513549804688 * e, 189.99996948242188 * e, 110.29513549804688 * e, 195.99996948242188 * e, 107.29513549804688 * e),
                I.bezierCurveTo(197.99996948242188 * e, 121.29513549804688 * e, 200.99996948242188 * e, 122.29513549804688 * e, 206.99996948242188 * e, 122.29513549804688 * e),
                I.bezierCurveTo(201.99996948242188 * e, 138.29513549804688 * e, 204.99996948242188 * e, 142.29513549804688 * e, 211.99996948242188 * e, 148.29513549804688 * e),
                I.bezierCurveTo(201.99996948242188 * e, 156.29513549804688 * e, 205.99996948242188 * e, 167.29513549804688 * e, 213.99996948242188 * e, 173.29513549804688 * e),
                I.bezierCurveTo(204.99996948242188 * e, 181.29513549804688 * e, 204.99996948242188 * e, 187.29513549804688 * e, 205.99996948242188 * e, 193.29513549804688 * e),
                I.bezierCurveTo(190.99996948242188 * e, 198.29513549804688 * e, 181.99996948242188 * e, 205.29513549804688 * e, 174.99996948242188 * e, 214.29513549804688 * e),
                he(I, void 0, t[4], 3 * e),
                I.restore()),
                I.translate(a.width / 2, a.height / 2),
                n || (I.globalAlpha = .5,
                ye(I, -y, -R, s, h + d, r),
                he(I, t[0]),
                i && I.rotate(window.Math.PI),
                I.globalAlpha = 1,
                ye(I, -y, -R, s, h, r),
                he(I, t[1], t[2], 4),
                I.globalAlpha = 1,
                ye(I, 35 * e - y, 20 * e - R, s - 50 * e, h - 50 * e, r - 10 * e),
                he(I, t[3])),
                3 == n ? (I.translate(-a.width / 2, -a.height / 2),
                I.beginPath(),
                I.lineCap = "round",
                I.lineJoin = "round",
                I.moveTo(121 * e, 190 * e),
                I.bezierCurveTo(129 * e, 186 * e, 137 * e, 183 * e, 135 * e, 163 * e),
                I.bezierCurveTo(131 * e, 135 * e, 153 * e, 127 * e, 177 * e, 124 * e),
                I.bezierCurveTo(198 * e, 120 * e, 208 * e, 122 * e, 226 * e, 128 * e),
                I.bezierCurveTo(261 * e, 112 * e, 271 * e, 126 * e, 287 * e, 147 * e),
                I.bezierCurveTo(310 * e, 163 * e, 304 * e, 183 * e, 283 * e, 196 * e),
                I.bezierCurveTo(296 * e, 249 * e, 278 * e, 262 * e, 253 * e, 263 * e),
                I.bezierCurveTo(210 * e, 264 * e, 188 * e, 252 * e, 177 * e, 234 * e),
                I.bezierCurveTo(133 * e, 242 * e, 123 * e, 241 * e, 115 * e, 225 * e),
                I.bezierCurveTo(109 * e, 206 * e, 115 * e, 193 * e, 121 * e, 190 * e),
                I.closePath(),
                he(I, t[4]),
                I.beginPath(),
                I.lineCap = "round",
                I.lineJoin = "round",
                I.moveTo(219 * e, 144 * e),
                I.bezierCurveTo(251 * e, 121 * e, 277 * e, 136 * e, 276 * e, 159 * e),
                I.bezierCurveTo(276 * e, 176 * e, 273 * e, 191 * e, 242 * e, 193 * e),
                I.bezierCurveTo(226 * e, 228 * e, 155 * e, 219 * e, 150 * e, 183 * e),
                I.bezierCurveTo(142 * e, 144 * e, 174 * e, 127 * e, 219 * e, 144 * e),
                I.closePath(),
                he(I, t[5]),
                I.beginPath(),
                I.lineCap = "round",
                I.lineJoin = "round",
                I.moveTo(123 * e, 214 * e),
                I.bezierCurveTo(119 * e, 198 * e, 129 * e, 189 * e, 146 * e, 194 * e),
                I.bezierCurveTo(158 * e, 201 * e, 165 * e, 218 * e, 147 * e, 226 * e),
                I.bezierCurveTo(135 * e, 230 * e, 125 * e, 222 * e, 123 * e, 214 * e),
                I.closePath(),
                he(I, t[5]),
                I.beginPath(),
                I.lineCap = "round",
                I.lineJoin = "round",
                I.moveTo(257 * e, 199 * e),
                I.bezierCurveTo(264 * e, 199 * e, 275 * e, 213 * e, 261 * e, 220 * e),
                I.bezierCurveTo(246 * e, 225 * e, 235 * e, 200 * e, 257 * e, 199 * e),
                I.closePath(),
                he(I, t[5]),
                I.translate(-5 * e, 55 * e),
                I.beginPath(),
                I.lineCap = "round",
                I.lineJoin = "round",
                I.moveTo(186 * e, 123 * e),
                I.bezierCurveTo(198 * e, 115 * e, 219 * e, 110 * e, 219 * e, 123 * e),
                I.bezierCurveTo(216 * e, 135 * e, 171 * e, 143 * e, 186 * e, 123 * e),
                I.closePath(),
                he(I, t[5]),
                I.translate(5 * e, -55 * e),
                I.translate(-5 * e, 15 * e),
                I.beginPath(),
                I.lineCap = "round",
                I.lineJoin = "round",
                I.moveTo(171 * e, 241 * e),
                I.bezierCurveTo(189 * e, 234 * e, 200 * e, 248 * e, 189 * e, 254 * e),
                I.bezierCurveTo(179 * e, 260 * e, 158 * e, 246 * e, 171 * e, 241 * e),
                I.closePath(),
                he(I, t[5])) : 4 == n && (I.translate(-a.width / 2, -a.height / 2),
                I.beginPath(),
                I.lineCap = "round",
                I.lineJoin = "round",
                I.moveTo(30 * e, 167 * e),
                I.bezierCurveTo(47 * e, 144 * e, 64 * e, 140 * e, 80 * e, 147 * e),
                I.bezierCurveTo(95 * e, 154 * e, 95 * e, 159 * e, 100 * e, 179 * e),
                I.bezierCurveTo(105 * e, 202 * e, 95 * e, 218 * e, 69 * e, 218 * e),
                I.bezierCurveTo(48 * e, 236 * e, 26 * e, 223 * e, 28 * e, 213 * e),
                I.bezierCurveTo(28 * e, 205 * e, 29 * e, 199 * e, 32 * e, 195 * e),
                I.bezierCurveTo(21 * e, 183 * e, 27 * e, 173 * e, 30 * e, 167 * e),
                I.closePath(),
                he(I, t[4]),
                I.beginPath(),
                I.lineCap = "round",
                I.lineJoin = "round",
                I.moveTo(26 * e, 145 * e),
                I.bezierCurveTo(32 * e, 138 * e, 37 * e, 137 * e, 40 * e, 139 * e),
                I.bezierCurveTo(43 * e, 140 * e, 41 * e, 150 * e, 31 * e, 159 * e),
                I.bezierCurveTo(23 * e, 166 * e, 17 * e, 158 * e, 26 * e, 145 * e),
                I.closePath(),
                he(I, t[4]),
                I.beginPath(),
                I.lineCap = "round",
                I.lineJoin = "round",
                I.moveTo(13 * e, 193 * e),
                I.bezierCurveTo(21 * e, 187 * e, 30 * e, 190 * e, 20 * e, 202 * e),
                I.bezierCurveTo(13 * e, 208 * e, 7 * e, 202 * e, 13 * e, 193 * e),
                I.closePath(),
                he(I, t[4]),
                I.beginPath(),
                I.lineCap = "round",
                I.lineJoin = "round",
                I.moveTo(121 * e, 190 * e),
                I.bezierCurveTo(129 * e, 186 * e, 137 * e, 183 * e, 135 * e, 163 * e),
                I.bezierCurveTo(131 * e, 135 * e, 153 * e, 127 * e, 177 * e, 124 * e),
                I.bezierCurveTo(198 * e, 120 * e, 208 * e, 122 * e, 226 * e, 128 * e),
                I.bezierCurveTo(261 * e, 112 * e, 271 * e, 126 * e, 287 * e, 147 * e),
                I.bezierCurveTo(310 * e, 163 * e, 304 * e, 183 * e, 283 * e, 196 * e),
                I.bezierCurveTo(296 * e, 249 * e, 278 * e, 262 * e, 253 * e, 263 * e),
                I.bezierCurveTo(210 * e, 264 * e, 188 * e, 252 * e, 177 * e, 234 * e),
                I.bezierCurveTo(133 * e, 242 * e, 123 * e, 241 * e, 115 * e, 225 * e),
                I.bezierCurveTo(109 * e, 206 * e, 115 * e, 193 * e, 121 * e, 190 * e),
                I.closePath(),
                he(I, t[4]),
                I.beginPath(),
                I.lineCap = "round",
                I.lineJoin = "round",
                I.moveTo(335 * e, 196 * e),
                I.bezierCurveTo(312 * e, 208 * e, 300 * e, 185 * e, 309 * e, 167 * e),
                I.bezierCurveTo(314 * e, 141 * e, 339 * e, 127 * e, 359 * e, 144 * e),
                I.bezierCurveTo(363 * e, 148 * e, 364 * e, 150 * e, 364 * e, 150 * e),
                I.bezierCurveTo(392 * e, 143 * e, 396 * e, 183 * e, 378 * e, 204 * e),
                I.bezierCurveTo(367 * e, 215 * e, 339 * e, 208 * e, 335 * e, 196 * e),
                I.closePath(),
                he(I, t[4]),
                I.beginPath(),
                I.lineCap = "round",
                I.lineJoin = "round",
                I.moveTo(349 * e, 212 * e),
                I.bezierCurveTo(339 * e, 216 * e, 334 * e, 208 * e, 341 * e, 203 * e),
                I.bezierCurveTo(353 * e, 198 * e, 361 * e, 205 * e, 349 * e, 212 * e),
                I.closePath(),
                he(I, t[4]),
                I.beginPath(),
                I.lineCap = "round",
                I.lineJoin = "round",
                I.moveTo(46 * e, 165 * e),
                I.bezierCurveTo(55 * e, 148 * e, 85 * e, 157 * e, 83 * e, 175 * e),
                I.bezierCurveTo(99 * e, 185 * e, 89 * e, 212 * e, 66 * e, 204 * e),
                I.bezierCurveTo(55 * e, 212 * e, 43 * e, 212 * e, 41 * e, 202 * e),
                I.bezierCurveTo(39 * e, 194 * e, 42 * e, 187 * e, 49 * e, 185 * e),
                I.bezierCurveTo(44 * e, 175 * e, 45 * e, 172 * e, 46 * e, 165 * e),
                I.closePath(),
                he(I, t[4]),
                I.beginPath(),
                I.lineCap = "round",
                I.lineJoin = "round",
                I.moveTo(219 * e, 144 * e),
                I.bezierCurveTo(251 * e, 121 * e, 277 * e, 136 * e, 276 * e, 159 * e),
                I.bezierCurveTo(276 * e, 176 * e, 273 * e, 191 * e, 242 * e, 193 * e),
                I.bezierCurveTo(226 * e, 228 * e, 155 * e, 219 * e, 150 * e, 183 * e),
                I.bezierCurveTo(142 * e, 144 * e, 174 * e, 127 * e, 219 * e, 144 * e),
                I.closePath(),
                he(I, t[5]),
                I.beginPath(),
                I.lineCap = "round",
                I.lineJoin = "round",
                I.moveTo(123 * e, 214 * e),
                I.bezierCurveTo(119 * e, 198 * e, 129 * e, 189 * e, 146 * e, 194 * e),
                I.bezierCurveTo(158 * e, 201 * e, 165 * e, 218 * e, 147 * e, 226 * e),
                I.bezierCurveTo(135 * e, 230 * e, 125 * e, 222 * e, 123 * e, 214 * e),
                I.closePath(),
                he(I, t[5]),
                I.beginPath(),
                I.lineCap = "round",
                I.lineJoin = "round",
                I.moveTo(257 * e, 199 * e),
                I.bezierCurveTo(264 * e, 199 * e, 275 * e, 213 * e, 261 * e, 220 * e),
                I.bezierCurveTo(246 * e, 225 * e, 235 * e, 200 * e, 257 * e, 199 * e),
                I.closePath(),
                he(I, t[5]),
                I.translate(-5 * e, 55 * e),
                I.beginPath(),
                I.lineCap = "round",
                I.lineJoin = "round",
                I.moveTo(186 * e, 123 * e),
                I.bezierCurveTo(198 * e, 115 * e, 219 * e, 110 * e, 219 * e, 123 * e),
                I.bezierCurveTo(216 * e, 135 * e, 171 * e, 143 * e, 186 * e, 123 * e),
                I.closePath(),
                he(I, t[5]),
                I.translate(5 * e, -55 * e),
                I.translate(-5 * e, 15 * e),
                I.beginPath(),
                I.lineCap = "round",
                I.lineJoin = "round",
                I.moveTo(171 * e, 241 * e),
                I.bezierCurveTo(189 * e, 234 * e, 200 * e, 248 * e, 189 * e, 254 * e),
                I.bezierCurveTo(179 * e, 260 * e, 158 * e, 246 * e, 171 * e, 241 * e),
                I.closePath(),
                he(I, t[5]),
                I.beginPath(),
                I.lineCap = "round",
                I.lineJoin = "round",
                I.moveTo(367 * e, 164 * e),
                I.bezierCurveTo(380 * e, 160 * e, 391 * e, 185 * e, 371 * e, 189 * e),
                I.bezierCurveTo(362 * e, 192 * e, 354 * e, 191 * e, 350 * e, 185 * e),
                I.bezierCurveTo(326 * e, 205 * e, 314 * e, 182 * e, 316 * e, 171 * e),
                I.bezierCurveTo(317 * e, 150 * e, 332 * e, 143 * e, 347 * e, 147 * e),
                I.bezierCurveTo(361 * e, 151 * e, 366 * e, 158 * e, 367 * e, 164 * e),
                I.closePath(),
                he(I, t[4])),
                a
            }
            function at(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d")
                  , I = (y = 450 * e) / 2
                  , T = (R = 145 * e) / 2
                  , o = 10 * e
                  , r = 300 * e
                  , d = 30 * e
                  , s = r / 2
                  , h = d / 2;
                if (i) {
                    var y = 145 * e
                      , R = 450 * e;
                    n.width = y,
                    n.height = R,
                    a.rotate(window.Math.PI / 2),
                    a.save(),
                    a.globalAlpha = .5,
                    ye(a, 100 * e, -110 * e, r, d, o),
                    he(a, t[0]),
                    a.translate(178 * e, -98 * e),
                    ye(a, -s, -h - 6 * e, 100 * e, 100 * e, o),
                    he(a, t[0]),
                    a.translate(-50 * e, 5 * e),
                    ye(a, 220 * e, -15 * e, 90 * e, 90 * e, o),
                    he(a, t[0]),
                    a.restore(),
                    a.save(),
                    a.globalAlpha = 1,
                    a.translate(250 * e, -63 * e),
                    ye(a, -s - 20 * e, -h, r, d, o),
                    he(a, t[1], t[2], 4),
                    a.translate(-70 * e, -40 * e),
                    ye(a, -s - 20 * e, -h, 100 * e, 100 * e, o),
                    he(a, t[3], t[4], 4),
                    a.translate(-70 * e, 15 * e),
                    ye(a, 220 * e, -22 * e, 90 * e, 90 * e, o),
                    he(a, t[3], t[4], 4),
                    ye(a, 230 * e, -12 * e, 55 * e, 55 * e, o),
                    he(a, t[5]),
                    a.translate(-70 * e, 0),
                    ye(a, -15 * e, -2 * e, 60 * e, 60 * e, o),
                    he(a, t[5]),
                    a.restore()
                } else
                    n.width = y,
                    n.height = R,
                    a.save(),
                    a.globalAlpha = .5,
                    a.translate(I, T + 10 * e),
                    ye(a, -s, -h, r, d, o),
                    he(a, t[0]),
                    a.translate(-65 * e, -25 * e),
                    ye(a, -s, -h - 6 * e, 100 * e, 100 * e, 15 * e),
                    he(a, t[0]),
                    a.translate(-35 * e, -5 * e),
                    ye(a, 220 * e, -15 * e, 90 * e, 90 * e, 15 * e),
                    he(a, t[0]),
                    a.restore(),
                    a.save(),
                    a.globalAlpha = 1,
                    a.translate(240 * e, 70 * e),
                    ye(a, -s, -h, r, d, o),
                    he(a, t[1], t[2], 4),
                    a.translate(-60 * e, -40 * e),
                    ye(a, -s - 20 * e, -h, 100 * e, 100 * e, 15 * e),
                    he(a, t[3], t[4], 4),
                    a.translate(-55 * e, 10 * e),
                    ye(a, 220 * e, -22 * e, 90 * e, 90 * e, 15 * e),
                    he(a, t[3], t[4], 4),
                    ye(a, 240 * e, -12 * e, 55 * e, 55 * e, 12 * e),
                    he(a, t[5]),
                    a.translate(45 * e, 0 * e),
                    ye(a, -145 * e, -2 * e, 60 * e, 60 * e, 12 * e),
                    he(a, t[5]),
                    a.restore();
                return n
            }
            function It(e, t) {
                var i = window.document.createElement("canvas")
                  , n = i.getContext("2d")
                  , a = window.Math.max(t.width, e.width)
                  , I = window.Math.max(t.height, e.height);
                return i.width = a,
                i.height = I,
                n.drawImage(e, (a - e.width) / 2, (I - e.height) / 2),
                n.drawImage(t, (a - t.width) / 2, (I - t.height) / 2),
                i
            }
            function Tt(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d")
                  , I = 105 * e
                  , T = 125 * e
                  , o = 4 * e
                  , r = 10 * e
                  , d = 5 * e
                  , s = 10 * e
                  , h = 110 * e
                  , y = s / 2
                  , R = h / 2;
                return n.width = I,
                n.height = T,
                a.save(),
                a.globalAlpha = t ? .5 : 1,
                a.translate(I / 2 + 8 * e, T / 2 + d),
                ye(a, -y, -R, s, h, r),
                he(a, t ? i[0] : i[1]),
                a.translate(-130 * e + d, -128 * e + d),
                a.beginPath(),
                a.bezierCurveTo(159 * e, 93 * e, 156 * e, 99 * e, 154 * e, 102 * e),
                a.bezierCurveTo(128 * e, 92 * e, 90 * e, 93 * e, 72 * e, 96 * e),
                a.bezierCurveTo(68 * e, 84 * e, 143 * e, 73 * e, 162 * e, 86 * e),
                a.closePath(),
                he(a, i[2]),
                a.restore(),
                a.translate(I / 2 + 8, T / 2),
                a.globalAlpha = 1,
                ye(a, -y, -R, s, h, r),
                he(a, i[3], i[4], o),
                a.translate(-130 * e, -125 * e),
                a.beginPath(),
                a.bezierCurveTo(159 * e, 93 * e, 156 * e, 99 * e, 154 * e, 102 * e),
                a.bezierCurveTo(128 * e, 92 * e, 90 * e, 93 * e, 72 * e, 96 * e),
                a.bezierCurveTo(68 * e, 84 * e, 143 * e, 73 * e, 162 * e, 86 * e),
                a.closePath(),
                he(a, i[5], i[6], o),
                n
            }
            function ot(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                return n.width = 170 * e,
                n.height = 469 * e,
                a.globalAlpha = t ? .5 : 1,
                a.translate(20 * e, 20 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(88 * e, 30 * e),
                a.bezierCurveTo(96 * e, 49.5 * e, 96 * e, 49.5 * e, 104 * e, 69 * e),
                a.bezierCurveTo(105.5 * e, 41.5 * e, 105.5 * e, 41.5 * e, 107 * e, 14 * e),
                a.bezierCurveTo(114 * e, 9.5 * e, 114 * e, 9.5 * e, 121 * e, 5 * e),
                a.bezierCurveTo(135.5 * e, 27.5 * e, 135.5 * e, 27.5 * e, 150 * e, 50 * e),
                a.bezierCurveTo(110.5 * e, 286 * e, 110.5 * e, 286 * e, 103 * e, 331 * e),
                a.bezierCurveTo(69.5 * e, 325 * e, 69.5 * e, 325 * e, 36 * e, 319 * e),
                a.bezierCurveTo(56.5 * e, 180 * e, 56.5 * e, 180 * e, 77 * e, 41 * e),
                a.closePath(),
                he(a, i[0]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(118 * e, 31 * e),
                a.bezierCurveTo(125 * e, 43 * e, 125 * e, 43 * e, 132 * e, 55 * e),
                a.bezierCurveTo(109.5 * e, 185.5 * e, 109.5 * e, 185.5 * e, 87 * e, 316 * e),
                a.bezierCurveTo(72 * e, 313.5 * e, 72 * e, 313.5 * e, 57 * e, 311 * e),
                a.bezierCurveTo(76.5 * e, 181 * e, 76.5 * e, 181 * e, 96 * e, 51 * e),
                a.closePath(),
                he(a, i[0]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(56 * e, 328 * e),
                a.bezierCurveTo(47 * e, 385.5 * e, 47 * e, 385.5 * e, 38 * e, 443 * e),
                a.bezierCurveTo(52 * e, 446 * e, 52 * e, 446 * e, 66 * e, 449 * e),
                a.bezierCurveTo(76.5 * e, 388.5 * e, 76.5 * e, 388.5 * e, 87 * e, 328 * e),
                a.closePath(),
                he(a, i[0]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(74 * e, 302 * e),
                a.bezierCurveTo(104 * e, 316.5 * e, 104 * e, 316.5 * e, 134 * e, 331 * e),
                a.bezierCurveTo(133 * e, 341 * e, 133 * e, 341 * e, 132 * e, 351 * e),
                a.bezierCurveTo(69.5 * e, 342 * e, 69.5 * e, 342 * e, 7 * e, 333 * e),
                a.bezierCurveTo(8 * e, 323 * e, 8 * e, 323 * e, 9 * e, 313 * e),
                a.closePath(),
                he(a, i[0]),
                a.save(),
                a.translate(51.5 * e, 440.5 * e),
                a.rotate(.2),
                ye(a, -20.5 * e, -18.5 * e, 41 * e, 37 * e, 10 * e),
                a.restore(),
                he(a, i[0]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(73 * e, 316 * e),
                a.bezierCurveTo(90 * e, 324.5 * e, 90 * e, 324.5 * e, 107 * e, 333 * e),
                a.bezierCurveTo(70 * e, 327.5 * e, 70 * e, 327.5 * e, 33 * e, 322 * e),
                a.closePath(),
                he(a, i[0]),
                a.globalAlpha = 1,
                a.translate(-20 * e, -20 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(88 * e, 30 * e),
                a.bezierCurveTo(96 * e, 49.5 * e, 96 * e, 49.5 * e, 104 * e, 69 * e),
                a.bezierCurveTo(105.5 * e, 41.5 * e, 105.5 * e, 41.5 * e, 107 * e, 14 * e),
                a.bezierCurveTo(114 * e, 9.5 * e, 114 * e, 9.5 * e, 121 * e, 5 * e),
                a.bezierCurveTo(135.5 * e, 27.5 * e, 135.5 * e, 27.5 * e, 150 * e, 50 * e),
                a.bezierCurveTo(110.5 * e, 286 * e, 110.5 * e, 286 * e, 103 * e, 331 * e),
                a.bezierCurveTo(69.5 * e, 325 * e, 69.5 * e, 325 * e, 36 * e, 319 * e),
                a.bezierCurveTo(56.5 * e, 180 * e, 56.5 * e, 180 * e, 77 * e, 41 * e),
                a.closePath(),
                he(a, i[1], i[2], 7 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(118 * e, 31 * e),
                a.bezierCurveTo(125 * e, 43 * e, 125 * e, 43 * e, 132 * e, 55 * e),
                a.bezierCurveTo(109.5 * e, 185.5 * e, 109.5 * e, 185.5 * e, 87 * e, 316 * e),
                a.bezierCurveTo(72 * e, 313.5 * e, 72 * e, 313.5 * e, 57 * e, 311 * e),
                a.bezierCurveTo(76.5 * e, 181 * e, 76.5 * e, 181 * e, 96 * e, 51 * e),
                a.closePath(),
                he(a, i[3]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(88 * e, 30 * e),
                a.bezierCurveTo(96 * e, 49.5 * e, 96 * e, 49.5 * e, 104 * e, 69 * e),
                a.bezierCurveTo(105.5 * e, 41.5 * e, 105.5 * e, 41.5 * e, 107 * e, 14 * e),
                a.bezierCurveTo(114 * e, 9.5 * e, 114 * e, 9.5 * e, 121 * e, 5 * e),
                a.bezierCurveTo(135.5 * e, 27.5 * e, 135.5 * e, 27.5 * e, 150 * e, 50 * e),
                a.bezierCurveTo(110.5 * e, 286 * e, 110.5 * e, 286 * e, 103 * e, 331 * e),
                a.bezierCurveTo(69.5 * e, 325 * e, 69.5 * e, 325 * e, 36 * e, 319 * e),
                a.bezierCurveTo(56.5 * e, 180 * e, 56.5 * e, 180 * e, 77 * e, 41 * e),
                a.closePath(),
                he(a, void 0, i[2], 7 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(56 * e, 328 * e),
                a.bezierCurveTo(47 * e, 385.5 * e, 47 * e, 385.5 * e, 38 * e, 443 * e),
                a.bezierCurveTo(52 * e, 446 * e, 52 * e, 446 * e, 66 * e, 449 * e),
                a.bezierCurveTo(76.5 * e, 388.5 * e, 76.5 * e, 388.5 * e, 87 * e, 328 * e),
                a.closePath(),
                he(a, i[4], i[5], 7 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(74 * e, 302 * e),
                a.bezierCurveTo(104 * e, 316.5 * e, 104 * e, 316.5 * e, 134 * e, 331 * e),
                a.bezierCurveTo(133 * e, 341 * e, 133 * e, 341 * e, 132 * e, 351 * e),
                a.bezierCurveTo(69.5 * e, 342 * e, 69.5 * e, 342 * e, 7 * e, 333 * e),
                a.bezierCurveTo(8 * e, 323 * e, 8 * e, 323 * e, 9 * e, 313 * e),
                a.closePath(),
                he(a, i[4], i[5], 7 * e),
                a.save(),
                a.translate(51.5 * e, 440.5 * e),
                a.rotate(.2),
                ye(a, -20.5 * e, -18.5 * e, 41 * e, 37 * e, 10 * e),
                a.restore(),
                he(a, i[4], i[5], 7 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(73 * e, 316 * e),
                a.bezierCurveTo(90 * e, 324.5 * e, 90 * e, 324.5 * e, 107 * e, 333 * e),
                a.bezierCurveTo(70 * e, 327.5 * e, 70 * e, 327.5 * e, 33 * e, 322 * e),
                a.closePath(),
                he(a, i[6]),
                n
            }
            function rt(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                return n.width = 424 * e,
                n.height = 788 * e,
                a.translate(25 * e, 25 * e),
                a.globalAlpha = t ? .5 : 1,
                a.save(),
                a.translate(193.5 * e, 602.5 * e),
                a.rotate(-.12),
                ye(a, -26.5 * e, -97.5 * e, 53 * e, 195 * e, 25 * e),
                a.restore(),
                he(a, i[0]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(137 * e, 519 * e),
                a.bezierCurveTo(182 * e, 513 * e, 182 * e, 513 * e, 227 * e, 507 * e),
                a.bezierCurveTo(214 * e, 417 * e, 189 * e, 304 * e, 221 * e, 180 * e),
                a.bezierCurveTo(191 * e, 126 * e, 192 * e, 105 * e, 198 * e, 64 * e),
                a.bezierCurveTo(123 * e, 102 * e, 99 * e, 285 * e, 137 * e, 517 * e),
                a.closePath(),
                he(a, i[0]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(175 * e, 119 * e),
                a.bezierCurveTo(176 * e, 142 * e, 184 * e, 165 * e, 197 * e, 183 * e),
                a.bezierCurveTo(167 * e, 325 * e, 191 * e, 405 * e, 202 * e, 502 * e),
                a.bezierCurveTo(180 * e, 503 * e, 180 * e, 503 * e, 158 * e, 504 * e),
                a.bezierCurveTo(135 * e, 396 * e, 134 * e, 185 * e, 175 * e, 119 * e),
                a.closePath(),
                he(a, i[0]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(110 * e, 518 * e),
                a.bezierCurveTo(111.5 * e, 533 * e, 111.5 * e, 533 * e, 113 * e, 548 * e),
                a.bezierCurveTo(162.5 * e, 544 * e, 162.5 * e, 544 * e, 212 * e, 540 * e),
                a.bezierCurveTo(312 * e, 535 * e, 281 * e, 665 * e, 225 * e, 665 * e),
                a.bezierCurveTo(227 * e, 686.5 * e, 227 * e, 686.5 * e, 229 * e, 708 * e),
                a.bezierCurveTo(343 * e, 684 * e, 354 * e, 496 * e, 222 * e, 498 * e),
                a.bezierCurveTo(165.5 * e, 503 * e, 165.5 * e, 503 * e, 109 * e, 508 * e),
                a.closePath(),
                he(a, i[0]),
                Re(a, 204 * e, 693 * e, 36.013886210738214 * e),
                he(a, i[0]),
                Re(a, 105 * e, 518 * e, 30 * e),
                he(a, i[0]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(171 * e, 535 * e),
                a.bezierCurveTo(139.5 * e, 537.5 * e, 139.5 * e, 537.5 * e, 108 * e, 540 * e),
                a.bezierCurveTo(110 * e, 527.5 * e, 110 * e, 527.5 * e, 112 * e, 515 * e),
                a.bezierCurveTo(148 * e, 513 * e, 148 * e, 513 * e, 184 * e, 511 * e),
                a.closePath(),
                he(a, i[0]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(244 * e, 669 * e),
                a.bezierCurveTo(248.5 * e, 680 * e, 248.5 * e, 680 * e, 253 * e, 691 * e),
                a.bezierCurveTo(239.5 * e, 697 * e, 239.5 * e, 697 * e, 226 * e, 703 * e),
                a.bezierCurveTo(223 * e, 691.5 * e, 223 * e, 691.5 * e, 220 * e, 680 * e),
                a.closePath(),
                he(a, i[0]),
                a.translate(-25 * e, -25 * e),
                a.globalAlpha = 1,
                a.save(),
                a.translate(193.5 * e, 602.5 * e),
                a.rotate(-.12),
                ye(a, -26.5 * e, -97.5 * e, 53 * e, 195 * e, 25 * e),
                a.restore(),
                he(a, i[1], i[2], 16 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(137 * e, 519 * e),
                a.bezierCurveTo(182 * e, 513 * e, 182 * e, 513 * e, 227 * e, 507 * e),
                a.bezierCurveTo(214 * e, 417 * e, 189 * e, 304 * e, 221 * e, 180 * e),
                a.bezierCurveTo(191 * e, 126 * e, 192 * e, 105 * e, 198 * e, 64 * e),
                a.bezierCurveTo(123 * e, 102 * e, 99 * e, 285 * e, 137 * e, 517 * e),
                a.closePath(),
                he(a, i[3], i[4], 16 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(175 * e, 119 * e),
                a.bezierCurveTo(176 * e, 142 * e, 184 * e, 165 * e, 197 * e, 183 * e),
                a.bezierCurveTo(167 * e, 325 * e, 191 * e, 405 * e, 202 * e, 502 * e),
                a.bezierCurveTo(180 * e, 503 * e, 180 * e, 503 * e, 158 * e, 504 * e),
                a.bezierCurveTo(135 * e, 396 * e, 134 * e, 185 * e, 175 * e, 119 * e),
                a.closePath(),
                he(a, i[5]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(110 * e, 518 * e),
                a.bezierCurveTo(111.5 * e, 533 * e, 111.5 * e, 533 * e, 113 * e, 548 * e),
                a.bezierCurveTo(162.5 * e, 544 * e, 162.5 * e, 544 * e, 212 * e, 540 * e),
                a.bezierCurveTo(312 * e, 535 * e, 281 * e, 665 * e, 225 * e, 665 * e),
                a.bezierCurveTo(227 * e, 686.5 * e, 227 * e, 686.5 * e, 229 * e, 708 * e),
                a.bezierCurveTo(343 * e, 684 * e, 354 * e, 496 * e, 222 * e, 498 * e),
                a.bezierCurveTo(165.5 * e, 503 * e, 165.5 * e, 503 * e, 109 * e, 508 * e),
                a.closePath(),
                he(a, i[6], i[4], 16 * e),
                Re(a, 204 * e, 693 * e, 36.013886210738214 * e),
                he(a, i[6], i[4], 16 * e),
                Re(a, 105 * e, 518 * e, 30 * e),
                he(a, i[6], i[4], 16 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(171 * e, 535 * e),
                a.bezierCurveTo(139.5 * e, 537.5 * e, 139.5 * e, 537.5 * e, 108 * e, 540 * e),
                a.bezierCurveTo(110 * e, 527.5 * e, 110 * e, 527.5 * e, 112 * e, 515 * e),
                a.bezierCurveTo(148 * e, 513 * e, 148 * e, 513 * e, 184 * e, 511 * e),
                a.closePath(),
                he(a, i[6]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(244 * e, 669 * e),
                a.bezierCurveTo(248.5 * e, 680 * e, 248.5 * e, 680 * e, 253 * e, 691 * e),
                a.bezierCurveTo(239.5 * e, 697 * e, 239.5 * e, 697 * e, 226 * e, 703 * e),
                a.bezierCurveTo(223 * e, 691.5 * e, 223 * e, 691.5 * e, 220 * e, 680 * e),
                a.closePath(),
                he(a, i[6]),
                Re(a, 204 * e, 693 * e, 17.029386365926403 * e),
                he(a, i[7]),
                Re(a, 106 * e, 518 * e, 12 * e),
                he(a, i[7]),
                n
            }
            function dt(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                return n.width = 290 * e,
                n.height = 525 * e,
                a.globalAlpha = t ? .5 : 1,
                a.translate(20 * e, 20 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(111 * e, 351 * e),
                a.bezierCurveTo(129 * e, 218 * e, 129 * e, 218 * e, 147 * e, 85 * e),
                a.bezierCurveTo(167 * e, 65.5 * e, 167 * e, 65.5 * e, 187 * e, 46 * e),
                a.bezierCurveTo(201.5 * e, 70.5 * e, 201.5 * e, 70.5 * e, 216 * e, 95 * e),
                a.bezierCurveTo(194.5 * e, 227.5 * e, 194.5 * e, 227.5 * e, 173 * e, 360 * e),
                a.closePath(),
                he(a, i[0]),
                a.save(),
                a.translate(131 * e, 425.5 * e),
                a.rotate(.16),
                ye(a, -14 * e, -56.5 * e, 28 * e, 113 * e, 8 * e),
                a.restore(),
                he(a, i[0]),
                Re(a, 122 * e, 480 * e, 18.439088914585774 * e),
                he(a, i[0]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(79 * e, 371 * e),
                a.bezierCurveTo(131 * e, 373 * e, 145 * e, 378 * e, 197 * e, 388 * e),
                a.bezierCurveTo(205 * e, 382.5 * e, 205 * e, 382.5 * e, 213 * e, 377 * e),
                a.bezierCurveTo(167 * e, 352 * e, 117 * e, 345 * e, 69 * e, 355 * e),
                a.closePath(),
                he(a, i[0]),
                a.globalAlpha = 1,
                a.translate(-20 * e, -20 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(111 * e, 351 * e),
                a.bezierCurveTo(129 * e, 218 * e, 129 * e, 218 * e, 147 * e, 85 * e),
                a.bezierCurveTo(167 * e, 65.5 * e, 167 * e, 65.5 * e, 187 * e, 46 * e),
                a.bezierCurveTo(201.5 * e, 70.5 * e, 201.5 * e, 70.5 * e, 216 * e, 95 * e),
                a.bezierCurveTo(194.5 * e, 227.5 * e, 194.5 * e, 227.5 * e, 173 * e, 360 * e),
                a.closePath(),
                he(a, i[1], i[2], 12.5 * e),
                a.save(),
                a.translate(131 * e, 425.5 * e),
                a.rotate(.16),
                ye(a, -14 * e, -56.5 * e, 28 * e, 113 * e, 8 * e),
                a.restore(),
                he(a, i[4], i[5], 12.5 * e),
                Re(a, 122 * e, 480 * e, 18.439088914585774 * e),
                he(a, i[4], i[5], 12.5 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(79 * e, 371 * e),
                a.bezierCurveTo(131 * e, 373 * e, 145 * e, 378 * e, 197 * e, 388 * e),
                a.bezierCurveTo(205 * e, 382.5 * e, 205 * e, 382.5 * e, 213 * e, 377 * e),
                a.bezierCurveTo(167 * e, 352 * e, 117 * e, 345 * e, 69 * e, 355 * e),
                a.closePath(),
                he(a, i[4], i[5], 12.5 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(128 * e, 345 * e),
                a.bezierCurveTo(142 * e, 345 * e, 147 * e, 346 * e, 158 * e, 349 * e),
                a.bezierCurveTo(177.5 * e, 224.5 * e, 177.5 * e, 224.5 * e, 197 * e, 100 * e),
                a.bezierCurveTo(190.5 * e, 84.5 * e, 190.5 * e, 84.5 * e, 184 * e, 69 * e),
                a.bezierCurveTo(173.5 * e, 82 * e, 173.5 * e, 82 * e, 163 * e, 95 * e),
                a.closePath(),
                he(a, i[3]),
                n
            }
            function st(e, t, i, n) {
                var a = window.document.createElement("canvas")
                  , I = a.getContext("2d");
                return a.width = 283 * e,
                a.height = 224 * e,
                I.translate(0, 15 * e),
                I.globalAlpha = .5,
                I.beginPath(),
                I.lineCap = "round",
                I.lineJoin = "round",
                I.moveTo(93 * e, 55 * e),
                I.bezierCurveTo(127 * e, 27 * e, 195 * e, 42 * e, 213 * e, 78 * e),
                I.bezierCurveTo(254 * e, 134 * e, 226 * e, 198 * e, 153 * e, 197 * e),
                I.bezierCurveTo(59 * e, 204 * e, 56 * e, 158 * e, 51 * e, 115 * e),
                I.bezierCurveTo(50 * e, 93 * e, 81 * e, 62 * e, 90 * e, 57 * e),
                I.closePath(),
                he(I, i[0]),
                I.beginPath(),
                I.lineCap = "round",
                I.lineJoin = "round",
                I.moveTo(100 * e, 33 * e),
                I.bezierCurveTo(85 * e, 62 * e, 102 * e, 66 * e, 110 * e, 83 * e),
                I.closePath(),
                he(I, i[0]),
                I.beginPath(),
                I.lineCap = "round",
                I.lineJoin = "round",
                I.moveTo(181 * e, 32 * e),
                I.bezierCurveTo(196 * e, 62 * e, 181 * e, 68 * e, 178 * e, 69 * e),
                he(I, i[0]),
                I.beginPath(),
                I.lineCap = "round",
                I.lineJoin = "round",
                I.moveTo(225 * e, 52 * e),
                I.bezierCurveTo(228 * e, 78 * e, 207 * e, 77 * e, 192 * e, 88 * e),
                he(I, i[0]),
                I.beginPath(),
                I.lineCap = "round",
                I.lineJoin = "round",
                I.moveTo(34 * e, 134 * e),
                I.bezierCurveTo(46 * e, 111 * e, 57 * e, 111 * e, 79 * e, 109 * e),
                he(I, i[0]),
                I.beginPath(),
                I.lineCap = "round",
                I.lineJoin = "round",
                I.moveTo(249 * e, 135 * e),
                I.bezierCurveTo(233 * e, 107 * e, 212 * e, 112 * e, 202 * e, 115 * e),
                he(I, i[0]),
                I.beginPath(),
                I.lineCap = "round",
                I.lineJoin = "round",
                I.moveTo(56 * e, 50 * e),
                I.bezierCurveTo(56 * e, 82 * e, 73 * e, 82 * e, 93 * e, 89 * e),
                he(I, i[0]),
                I.translate(0, -15 * e),
                I.globalAlpha = 1,
                I.beginPath(),
                I.lineCap = "round",
                I.lineJoin = "round",
                I.moveTo(100 * e, 33 * e),
                I.bezierCurveTo(85 * e, 62 * e, 102 * e, 66 * e, 110 * e, 83 * e),
                he(I, void 0, i[2], 40 * e),
                I.beginPath(),
                I.lineCap = "round",
                I.lineJoin = "round",
                I.moveTo(181 * e, 32 * e),
                I.bezierCurveTo(196 * e, 62 * e, 181 * e, 68 * e, 178 * e, 69 * e),
                he(I, void 0, i[2], 40 * e),
                I.beginPath(),
                I.lineCap = "round",
                I.lineJoin = "round",
                I.moveTo(225 * e, 52 * e),
                I.bezierCurveTo(228 * e, 78 * e, 207 * e, 77 * e, 192 * e, 88 * e),
                he(I, void 0, i[2], 40 * e),
                I.beginPath(),
                I.lineCap = "round",
                I.lineJoin = "round",
                I.moveTo(34 * e, 134 * e),
                I.bezierCurveTo(46 * e, 111 * e, 57 * e, 111 * e, 79 * e, 109 * e),
                he(I, void 0, i[2], 40 * e),
                I.beginPath(),
                I.lineCap = "round",
                I.lineJoin = "round",
                I.moveTo(249 * e, 135 * e),
                I.bezierCurveTo(233 * e, 107 * e, 212 * e, 112 * e, 202 * e, 115 * e),
                he(I, void 0, i[2], 40 * e),
                I.beginPath(),
                I.lineCap = "round",
                I.lineJoin = "round",
                I.moveTo(56 * e, 50 * e),
                I.bezierCurveTo(56 * e, 82 * e, 73 * e, 82 * e, 93 * e, 89 * e),
                he(I, void 0, i[2], 40 * e),
                I.beginPath(),
                I.lineCap = "round",
                I.lineJoin = "round",
                I.moveTo(93 * e, 55 * e),
                I.bezierCurveTo(127 * e, 27 * e, 195 * e, 42 * e, 213 * e, 78 * e),
                I.bezierCurveTo(254 * e, 134 * e, 226 * e, 198 * e, 153 * e, 197 * e),
                I.bezierCurveTo(59 * e, 204 * e, 56 * e, 158 * e, 51 * e, 115 * e),
                I.bezierCurveTo(50 * e, 93 * e, 81 * e, 62 * e, 90 * e, 57 * e),
                I.closePath(),
                he(I, i[1], i[2], 10 * e),
                I.beginPath(),
                I.lineCap = "round",
                I.lineJoin = "round",
                I.moveTo(100 * e, 33 * e),
                I.bezierCurveTo(85 * e, 62 * e, 102 * e, 66 * e, 110 * e, 83 * e),
                he(I, void 0, i[1], 20 * e),
                I.beginPath(),
                I.lineCap = "round",
                I.lineJoin = "round",
                I.moveTo(181 * e, 32 * e),
                I.bezierCurveTo(196 * e, 62 * e, 181 * e, 68 * e, 178 * e, 69 * e),
                he(I, void 0, i[1], 20 * e),
                I.beginPath(),
                I.lineCap = "round",
                I.lineJoin = "round",
                I.moveTo(225 * e, 52 * e),
                I.bezierCurveTo(228 * e, 78 * e, 207 * e, 77 * e, 192 * e, 88 * e),
                he(I, void 0, i[1], 20 * e),
                I.beginPath(),
                I.lineCap = "round",
                I.lineJoin = "round",
                I.moveTo(34 * e, 134 * e),
                I.bezierCurveTo(46 * e, 111 * e, 57 * e, 111 * e, 79 * e, 109 * e),
                he(I, void 0, i[1], 20 * e),
                I.beginPath(),
                I.lineCap = "round",
                I.lineJoin = "round",
                I.moveTo(249 * e, 135 * e),
                I.bezierCurveTo(233 * e, 107 * e, 212 * e, 112 * e, 202 * e, 115 * e),
                he(I, void 0, i[1], 20 * e),
                I.beginPath(),
                I.lineCap = "round",
                I.lineJoin = "round",
                I.moveTo(56 * e, 50 * e),
                I.bezierCurveTo(56 * e, 82 * e, 73 * e, 82 * e, 93 * e, 89 * e),
                he(I, void 0, i[1], 20 * e),
                Re(I, 101 * e, 155 * e, 20.591260281974 * e),
                he(I, i[3]),
                Re(I, 180 * e, 155 * e, 20.591260281974 * e),
                he(I, i[3]),
                Re(I, 95 * e, 148 * e, 7.211102550927978 * e),
                he(I, i[4]),
                Re(I, 173 * e, 148 * e, 7.211102550927978 * e),
                he(I, i[4]),
                1 === n && (I.beginPath(),
                I.lineCap = "round",
                I.lineJoin = "round",
                I.moveTo(191 * e, 107 * e),
                I.bezierCurveTo(180 * e, 104 * e, 175 * e, 101 * e, 180 * e, 95 * e),
                I.bezierCurveTo(180 * e, 95 * e, 181 * e, 99 * e, 188 * e, 103 * e),
                I.bezierCurveTo(191 * e, 101 * e, 191 * e, 95 * e, 190 * e, 91 * e),
                I.bezierCurveTo(190 * e, 91 * e, 196 * e, 89 * e, 195 * e, 99 * e),
                I.closePath(),
                he(I, i[2]),
                I.beginPath(),
                I.lineCap = "round",
                I.lineJoin = "round",
                I.moveTo(206 * e, 98 * e),
                I.bezierCurveTo(203 * e, 95 * e, 200 * e, 93 * e, 198 * e, 101 * e),
                I.bezierCurveTo(194 * e, 109 * e, 193 * e, 109 * e, 196 * e, 110 * e),
                I.bezierCurveTo(206 * e, 115 * e, 209 * e, 114 * e, 211 * e, 111 * e),
                I.bezierCurveTo(211 * e, 106 * e, 208 * e, 108 * e, 203 * e, 108 * e),
                I.bezierCurveTo(193 * e, 107 * e, 204 * e, 101 * e, 206 * e, 99 * e),
                I.closePath(),
                he(I, i[2]),
                I.beginPath(),
                I.lineCap = "round",
                I.lineJoin = "round",
                I.moveTo(172 * e, 111 * e),
                I.bezierCurveTo(172 * e, 106 * e, 174 * e, 105 * e, 185 * e, 109 * e),
                I.bezierCurveTo(190 * e, 109 * e, 189 * e, 114 * e, 185 * e, 120 * e),
                I.bezierCurveTo(181 * e, 125 * e, 180 * e, 126 * e, 176 * e, 122 * e),
                I.bezierCurveTo(182 * e, 119 * e, 187 * e, 110 * e, 182 * e, 112 * e),
                I.closePath(),
                he(I, i[2]),
                I.beginPath(),
                I.lineCap = "round",
                I.lineJoin = "round",
                I.moveTo(202 * e, 125 * e),
                I.bezierCurveTo(197 * e, 117 * e, 193 * e, 116 * e, 193 * e, 120 * e),
                I.bezierCurveTo(192.5 * e, 124.5 * e, 192.5 * e, 124.5 * e, 192 * e, 129 * e),
                I.bezierCurveTo(188 * e, 129 * e, 187 * e, 124 * e, 189 * e, 120 * e),
                I.bezierCurveTo(191 * e, 110 * e, 192 * e, 110 * e, 200 * e, 116 * e),
                I.bezierCurveTo(208 * e, 120 * e, 207 * e, 123 * e, 202 * e, 125 * e),
                I.closePath(),
                he(I, i[2])),
                a
            }
            function ht(e, t) {
                var i = window.document.createElement("canvas")
                  , n = i.getContext("2d");
                return i.width = 283 * e,
                i.height = 224 * e,
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(100 * e, 33 * e),
                n.bezierCurveTo(85 * e, 62 * e, 102 * e, 66 * e, 110 * e, 83 * e),
                he(n, void 0, t[0], 40 * e),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(181 * e, 32 * e),
                n.bezierCurveTo(196 * e, 62 * e, 181 * e, 68 * e, 178 * e, 69 * e),
                he(n, void 0, t[0], 40 * e),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(225 * e, 52 * e),
                n.bezierCurveTo(228 * e, 78 * e, 207 * e, 77 * e, 192 * e, 88 * e),
                he(n, void 0, t[0], 40 * e),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(34 * e, 134 * e),
                n.bezierCurveTo(46 * e, 111 * e, 57 * e, 111 * e, 79 * e, 109 * e),
                he(n, void 0, t[0], 40 * e),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(249 * e, 135 * e),
                n.bezierCurveTo(233 * e, 107 * e, 212 * e, 112 * e, 202 * e, 115 * e),
                he(n, void 0, t[0], 40 * e),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(56 * e, 50 * e),
                n.bezierCurveTo(56 * e, 82 * e, 73 * e, 82 * e, 93 * e, 89 * e),
                he(n, void 0, t[0], 40 * e),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(93 * e, 55 * e),
                n.bezierCurveTo(124 * e, 29 * e, 179 * e, 44 * e, 188 * e, 52 * e),
                n.bezierCurveTo(207 * e, 64 * e, 226 * e, 94 * e, 231 * e, 118 * e),
                n.bezierCurveTo(236 * e, 145 * e, 222 * e, 184 * e, 193 * e, 192 * e),
                n.bezierCurveTo(147 * e, 201 * e, 116 * e, 200 * e, 93 * e, 193 * e),
                n.bezierCurveTo(61 * e, 180 * e, 48 * e, 147 * e, 50 * e, 123 * e),
                n.bezierCurveTo(50 * e, 93 * e, 76 * e, 66 * e, 92 * e, 56 * e),
                n.closePath(),
                he(n, t[0]),
                i
            }
            function yt(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                return n.width = 131 * e,
                n.height = 121 * e,
                a.translate(0, 20 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(110 * e, 59 * e),
                a.bezierCurveTo(93 * e, 61.5 * e, 93 * e, 61.5 * e, 76 * e, 64 * e),
                a.bezierCurveTo(84.5 * e, 78.5 * e, 84.5 * e, 78.5 * e, 93 * e, 93 * e),
                a.bezierCurveTo(70 * e, 111 * e, 43 * e, 103 * e, 30 * e, 82 * e),
                a.bezierCurveTo(17 * e, 61 * e, 25 * e, 30 * e, 51 * e, 21 * e),
                a.bezierCurveTo(66 * e, 15 * e, 83 * e, 18 * e, 96 * e, 29 * e),
                a.bezierCurveTo(104 * e, 35 * e, 109 * e, 47 * e, 110 * e, 58 * e),
                a.closePath(),
                he(a, i[0]),
                a.globalAlpha = 1,
                a.translate(0, -20 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(110 * e, 59 * e),
                a.bezierCurveTo(93 * e, 61.5 * e, 93 * e, 61.5 * e, 76 * e, 64 * e),
                a.bezierCurveTo(84.5 * e, 78.5 * e, 84.5 * e, 78.5 * e, 93 * e, 93 * e),
                a.bezierCurveTo(70 * e, 111 * e, 43 * e, 103 * e, 30 * e, 82 * e),
                a.bezierCurveTo(17 * e, 61 * e, 25 * e, 30 * e, 51 * e, 21 * e),
                a.bezierCurveTo(66 * e, 15 * e, 83 * e, 18 * e, 96 * e, 29 * e),
                a.bezierCurveTo(104 * e, 35 * e, 109 * e, 47 * e, 110 * e, 58 * e),
                a.closePath(),
                he(a, i[1], i[2], 10 * e),
                n
            }
            function Rt(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                return n.width = 104 * e,
                n.height = 112 * e,
                a.translate(0, 15 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(16 * e, 44 * e),
                a.bezierCurveTo(30.5 * e, 48 * e, 30.5 * e, 48 * e, 45 * e, 52 * e),
                a.bezierCurveTo(36.5 * e, 63 * e, 36.5 * e, 63 * e, 28 * e, 74 * e),
                a.bezierCurveTo(32 * e, 86 * e, 61 * e, 92 * e, 78 * e, 76 * e),
                a.bezierCurveTo(93 * e, 62 * e, 92 * e, 40 * e, 80 * e, 26 * e),
                a.bezierCurveTo(65 * e, 11 * e, 42 * e, 16 * e, 34 * e, 21 * e),
                a.bezierCurveTo(22 * e, 27 * e, 16 * e, 39 * e, 16 * e, 44 * e),
                a.closePath(),
                he(a, i[0]),
                a.globalAlpha = 1,
                a.translate(0, -15 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(16 * e, 44 * e),
                a.bezierCurveTo(30.5 * e, 48 * e, 30.5 * e, 48 * e, 45 * e, 52 * e),
                a.bezierCurveTo(36.5 * e, 63 * e, 36.5 * e, 63 * e, 28 * e, 74 * e),
                a.bezierCurveTo(32 * e, 86 * e, 61 * e, 92 * e, 78 * e, 76 * e),
                a.bezierCurveTo(93 * e, 62 * e, 92 * e, 40 * e, 80 * e, 26 * e),
                a.bezierCurveTo(65 * e, 11 * e, 42 * e, 16 * e, 34 * e, 21 * e),
                a.bezierCurveTo(22 * e, 27 * e, 16 * e, 39 * e, 16 * e, 44 * e),
                a.closePath(),
                he(a, i[1], i[2], 8 * e),
                n
            }
            function Et(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                return n.width = 321 * e,
                n.height = 284 * e,
                a.translate(100 * e, 30 * e),
                a.translate(5 * e, 10 * e),
                a.globalAlpha = t ? .5 : 1,
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(58 * e, 33 * e),
                a.bezierCurveTo(81 * e, 22 * e, 93 * e, 26 * e, 123 * e, 47 * e),
                a.bezierCurveTo(160 * e, 73 * e, 169 * e, 80 * e, 191 * e, 99 * e),
                a.bezierCurveTo(202 * e, 107 * e, 211 * e, 118 * e, 195 * e, 151 * e),
                a.bezierCurveTo(181 * e, 183 * e, 157 * e, 192 * e, 129 * e, 174 * e),
                a.bezierCurveTo(78 * e, 140 * e, 68 * e, 129 * e, 37 * e, 94 * e),
                a.bezierCurveTo(15 * e, 68 * e, 25 * e, 52 * e, 56 * e, 34 * e),
                a.closePath(),
                he(a, i[0]),
                a.globalAlpha = 1,
                a.translate(-5 * e, -10 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(58 * e, 33 * e),
                a.bezierCurveTo(81 * e, 22 * e, 93 * e, 26 * e, 123 * e, 47 * e),
                a.bezierCurveTo(160 * e, 73 * e, 169 * e, 80 * e, 191 * e, 99 * e),
                a.bezierCurveTo(202 * e, 107 * e, 211 * e, 118 * e, 195 * e, 151 * e),
                a.bezierCurveTo(181 * e, 183 * e, 157 * e, 192 * e, 129 * e, 174 * e),
                a.bezierCurveTo(78 * e, 140 * e, 68 * e, 129 * e, 37 * e, 94 * e),
                a.bezierCurveTo(15 * e, 68 * e, 25 * e, 52 * e, 56 * e, 34 * e),
                a.closePath(),
                he(a, i[1], i[2], 10 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(167 * e, 120 * e),
                a.bezierCurveTo(196 * e, 106 * e, 207 * e, 111 * e, 199 * e, 135 * e),
                a.bezierCurveTo(185 * e, 172 * e, 166 * e, 187 * e, 145 * e, 179 * e),
                a.bezierCurveTo(118 * e, 166 * e, 127 * e, 139 * e, 166 * e, 121 * e),
                a.closePath(),
                he(a, i[3]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(25 * e, 64 * e),
                a.bezierCurveTo(59 * e, 96 * e, 97 * e, 128 * e, 129 * e, 151 * e),
                a.bezierCurveTo(126 * e, 163 * e, 134 * e, 174 * e, 142 * e, 180 * e),
                a.bezierCurveTo(114 * e, 170 * e, 68 * e, 134 * e, 31 * e, 85 * e),
                a.bezierCurveTo(24 * e, 71 * e, 24 * e, 70 * e, 25 * e, 65 * e),
                a.closePath(),
                he(a, i[2]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(161 * e, 141 * e),
                a.bezierCurveTo(181 * e, 131 * e, 186 * e, 135 * e, 173 * e, 152 * e),
                a.bezierCurveTo(163 * e, 163 * e, 155 * e, 161 * e, 151 * e, 150 * e),
                a.bezierCurveTo(147 * e, 140 * e, 155 * e, 131 * e, 175 * e, 125 * e),
                a.bezierCurveTo(190 * e, 120 * e, 196 * e, 121 * e, 189 * e, 143 * e),
                a.bezierCurveTo(182 * e, 167 * e, 169 * e, 174 * e, 157 * e, 174 * e),
                a.bezierCurveTo(138 * e, 172 * e, 139 * e, 162 * e, 140 * e, 156 * e),
                he(a, void 0, i[4], 4 * e),
                a.translate(-100 * e, -30 * e),
                a.translate(10 * e, 70 * e),
                a.translate(5 * e, 10 * e),
                a.globalAlpha = t ? .5 : 1,
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(58 * e, 33 * e),
                a.bezierCurveTo(81 * e, 22 * e, 93 * e, 26 * e, 123 * e, 47 * e),
                a.bezierCurveTo(160 * e, 73 * e, 169 * e, 80 * e, 191 * e, 99 * e),
                a.bezierCurveTo(202 * e, 107 * e, 211 * e, 118 * e, 195 * e, 151 * e),
                a.bezierCurveTo(181 * e, 183 * e, 157 * e, 192 * e, 129 * e, 174 * e),
                a.bezierCurveTo(78 * e, 140 * e, 68 * e, 129 * e, 37 * e, 94 * e),
                a.bezierCurveTo(15 * e, 68 * e, 25 * e, 52 * e, 56 * e, 34 * e),
                a.closePath(),
                he(a, i[0]),
                a.globalAlpha = 1,
                a.translate(-5 * e, -10 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(58 * e, 33 * e),
                a.bezierCurveTo(81 * e, 22 * e, 93 * e, 26 * e, 123 * e, 47 * e),
                a.bezierCurveTo(160 * e, 73 * e, 169 * e, 80 * e, 191 * e, 99 * e),
                a.bezierCurveTo(202 * e, 107 * e, 211 * e, 118 * e, 195 * e, 151 * e),
                a.bezierCurveTo(181 * e, 183 * e, 157 * e, 192 * e, 129 * e, 174 * e),
                a.bezierCurveTo(78 * e, 140 * e, 68 * e, 129 * e, 37 * e, 94 * e),
                a.bezierCurveTo(15 * e, 68 * e, 25 * e, 52 * e, 56 * e, 34 * e),
                a.closePath(),
                he(a, i[1], i[2], 10 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(167 * e, 120 * e),
                a.bezierCurveTo(196 * e, 106 * e, 207 * e, 111 * e, 199 * e, 135 * e),
                a.bezierCurveTo(185 * e, 172 * e, 166 * e, 187 * e, 145 * e, 179 * e),
                a.bezierCurveTo(118 * e, 166 * e, 127 * e, 139 * e, 166 * e, 121 * e),
                a.closePath(),
                he(a, i[3]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(25 * e, 64 * e),
                a.bezierCurveTo(59 * e, 96 * e, 97 * e, 128 * e, 129 * e, 151 * e),
                a.bezierCurveTo(126 * e, 163 * e, 134 * e, 174 * e, 142 * e, 180 * e),
                a.bezierCurveTo(114 * e, 170 * e, 68 * e, 134 * e, 31 * e, 85 * e),
                a.bezierCurveTo(24 * e, 71 * e, 24 * e, 70 * e, 25 * e, 65 * e),
                a.closePath(),
                he(a, i[2]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(161 * e, 141 * e),
                a.bezierCurveTo(181 * e, 131 * e, 186 * e, 135 * e, 173 * e, 152 * e),
                a.bezierCurveTo(163 * e, 163 * e, 155 * e, 161 * e, 151 * e, 150 * e),
                a.bezierCurveTo(147 * e, 140 * e, 155 * e, 131 * e, 175 * e, 125 * e),
                a.bezierCurveTo(190 * e, 120 * e, 196 * e, 121 * e, 189 * e, 143 * e),
                a.bezierCurveTo(182 * e, 167 * e, 169 * e, 174 * e, 157 * e, 174 * e),
                a.bezierCurveTo(138 * e, 172 * e, 139 * e, 162 * e, 140 * e, 156 * e),
                he(a, void 0, i[4], 4 * e),
                a.translate(20 * e, -80 * e),
                a.translate(5 * e, 10 * e),
                a.globalAlpha = t ? .5 : 1,
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(58 * e, 33 * e),
                a.bezierCurveTo(81 * e, 22 * e, 93 * e, 26 * e, 123 * e, 47 * e),
                a.bezierCurveTo(160 * e, 73 * e, 169 * e, 80 * e, 191 * e, 99 * e),
                a.bezierCurveTo(202 * e, 107 * e, 211 * e, 118 * e, 195 * e, 151 * e),
                a.bezierCurveTo(181 * e, 183 * e, 157 * e, 192 * e, 129 * e, 174 * e),
                a.bezierCurveTo(78 * e, 140 * e, 68 * e, 129 * e, 37 * e, 94 * e),
                a.bezierCurveTo(15 * e, 68 * e, 25 * e, 52 * e, 56 * e, 34 * e),
                a.closePath(),
                he(a, i[0]),
                a.globalAlpha = 1,
                a.translate(-5 * e, -10 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(58 * e, 33 * e),
                a.bezierCurveTo(81 * e, 22 * e, 93 * e, 26 * e, 123 * e, 47 * e),
                a.bezierCurveTo(160 * e, 73 * e, 169 * e, 80 * e, 191 * e, 99 * e),
                a.bezierCurveTo(202 * e, 107 * e, 211 * e, 118 * e, 195 * e, 151 * e),
                a.bezierCurveTo(181 * e, 183 * e, 157 * e, 192 * e, 129 * e, 174 * e),
                a.bezierCurveTo(78 * e, 140 * e, 68 * e, 129 * e, 37 * e, 94 * e),
                a.bezierCurveTo(15 * e, 68 * e, 25 * e, 52 * e, 56 * e, 34 * e),
                a.closePath(),
                he(a, i[1], i[2], 10 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(167 * e, 120 * e),
                a.bezierCurveTo(196 * e, 106 * e, 207 * e, 111 * e, 199 * e, 135 * e),
                a.bezierCurveTo(185 * e, 172 * e, 166 * e, 187 * e, 145 * e, 179 * e),
                a.bezierCurveTo(118 * e, 166 * e, 127 * e, 139 * e, 166 * e, 121 * e),
                a.closePath(),
                he(a, i[3]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(25 * e, 64 * e),
                a.bezierCurveTo(59 * e, 96 * e, 97 * e, 128 * e, 129 * e, 151 * e),
                a.bezierCurveTo(126 * e, 163 * e, 134 * e, 174 * e, 142 * e, 180 * e),
                a.bezierCurveTo(114 * e, 170 * e, 68 * e, 134 * e, 31 * e, 85 * e),
                a.bezierCurveTo(24 * e, 71 * e, 24 * e, 70 * e, 25 * e, 65 * e),
                a.closePath(),
                he(a, i[2]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(161 * e, 141 * e),
                a.bezierCurveTo(181 * e, 131 * e, 186 * e, 135 * e, 173 * e, 152 * e),
                a.bezierCurveTo(163 * e, 163 * e, 155 * e, 161 * e, 151 * e, 150 * e),
                a.bezierCurveTo(147 * e, 140 * e, 155 * e, 131 * e, 175 * e, 125 * e),
                a.bezierCurveTo(190 * e, 120 * e, 196 * e, 121 * e, 189 * e, 143 * e),
                a.bezierCurveTo(182 * e, 167 * e, 169 * e, 174 * e, 157 * e, 174 * e),
                a.bezierCurveTo(138 * e, 172 * e, 139 * e, 162 * e, 140 * e, 156 * e),
                he(a, void 0, i[4], 4 * e),
                n
            }
            function mt(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                return n.width = 290 * e,
                n.height = 525 * e,
                a.globalAlpha = t ? .5 : 1,
                a.translate(20 * e, 20 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(111 * e, 351 * e),
                a.bezierCurveTo(128.5 * e, 218.5 * e, 128.5 * e, 218.5 * e, 146 * e, 86 * e),
                a.bezierCurveTo(166.5 * e, 66.5 * e, 166.5 * e, 66.5 * e, 187 * e, 47 * e),
                a.bezierCurveTo(201 * e, 71.5 * e, 201 * e, 71.5 * e, 215 * e, 96 * e),
                a.bezierCurveTo(193 * e, 228.5 * e, 193 * e, 228.5 * e, 171 * e, 361 * e),
                a.closePath(),
                he(a, i[0]),
                a.save(),
                a.translate(129.5 * e, 424 * e),
                a.rotate(.16),
                ye(a, -15.5 * e, -63 * e, 31 * e, 126 * e, 10 * e),
                a.restore(),
                he(a, i[0]),
                Re(a, 121 * e, 480 * e, 20.396078054371138 * e),
                he(a, i[0]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(90 * e, 311 * e),
                a.bezierCurveTo(95 * e, 324 * e, 95 * e, 324 * e, 100 * e, 337 * e),
                a.bezierCurveTo(141.5 * e, 345.5 * e, 141.5 * e, 345.5 * e, 183 * e, 354 * e),
                a.bezierCurveTo(193.5 * e, 342.5 * e, 193.5 * e, 342.5 * e, 204 * e, 331 * e),
                a.bezierCurveTo(202 * e, 354 * e, 202 * e, 354 * e, 200 * e, 377 * e),
                a.bezierCurveTo(147 * e, 388 * e, 106 * e, 371 * e, 79 * e, 356 * e),
                a.closePath(),
                he(a, i[0]),
                a.globalAlpha = 1,
                a.translate(-20 * e, -20 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(111 * e, 351 * e),
                a.bezierCurveTo(128.5 * e, 218.5 * e, 128.5 * e, 218.5 * e, 146 * e, 86 * e),
                a.bezierCurveTo(166.5 * e, 66.5 * e, 166.5 * e, 66.5 * e, 187 * e, 47 * e),
                a.bezierCurveTo(201 * e, 71.5 * e, 201 * e, 71.5 * e, 215 * e, 96 * e),
                a.bezierCurveTo(193 * e, 228.5 * e, 193 * e, 228.5 * e, 171 * e, 361 * e),
                a.closePath(),
                he(a, i[1], i[2], 12.5 * e),
                a.save(),
                a.translate(129.5 * e, 424 * e),
                a.rotate(.16),
                ye(a, -15.5 * e, -63 * e, 31 * e, 126 * e, 10 * e),
                a.restore(),
                he(a, i[4], i[5], 12.5 * e),
                Re(a, 121 * e, 480 * e, 20.396078054371138 * e),
                he(a, i[4], i[5], 12.5 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(90 * e, 311 * e),
                a.bezierCurveTo(95 * e, 324 * e, 95 * e, 324 * e, 100 * e, 337 * e),
                a.bezierCurveTo(141.5 * e, 345.5 * e, 141.5 * e, 345.5 * e, 183 * e, 354 * e),
                a.bezierCurveTo(193.5 * e, 342.5 * e, 193.5 * e, 342.5 * e, 204 * e, 331 * e),
                a.bezierCurveTo(202 * e, 354 * e, 202 * e, 354 * e, 200 * e, 377 * e),
                a.bezierCurveTo(147 * e, 388 * e, 106 * e, 371 * e, 79 * e, 356 * e),
                a.closePath(),
                he(a, i[1], i[2], 12.5 * e),
                n
            }
            function St(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                return n.width = 290 * e,
                n.height = 525 * e,
                a.globalAlpha = t ? .5 : 1,
                a.translate(20 * e, 20 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(112 * e, 356 * e),
                a.bezierCurveTo(124 * e, 220.5 * e, 124 * e, 220.5 * e, 136 * e, 85 * e),
                a.bezierCurveTo(162.5 * e, 65.5 * e, 162.5 * e, 65.5 * e, 189 * e, 46 * e),
                a.bezierCurveTo(208.5 * e, 72.5 * e, 208.5 * e, 72.5 * e, 228 * e, 99 * e),
                a.bezierCurveTo(200 * e, 232 * e, 200 * e, 232 * e, 172 * e, 365 * e),
                a.closePath(),
                he(a, i[0]),
                a.save(),
                a.translate(131 * e, 423 * e),
                a.rotate(.16),
                ye(a, -14 * e, -53 * e, 28 * e, 106 * e, 10 * e),
                a.restore(),
                he(a, i[0]),
                a.save(),
                a.translate(122 * e, 480 * e),
                a.rotate(1.72),
                me(a, 4, 26.476404589747453 * e, 10 * e),
                a.restore(),
                he(a, i[0]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(210 * e, 387 * e),
                a.bezierCurveTo(138 * e, 376 * e, 138 * e, 376 * e, 66 * e, 365 * e),
                a.bezierCurveTo(76 * e, 355 * e, 76 * e, 355 * e, 86 * e, 345 * e),
                a.bezierCurveTo(99 * e, 346.5 * e, 99 * e, 346.5 * e, 112 * e, 348 * e),
                a.bezierCurveTo(128.5 * e, 344 * e, 128.5 * e, 344 * e, 145 * e, 340 * e),
                a.bezierCurveTo(158 * e, 348 * e, 158 * e, 348 * e, 171 * e, 356 * e),
                a.bezierCurveTo(184 * e, 358 * e, 184 * e, 358 * e, 197 * e, 360 * e),
                a.closePath(),
                he(a, i[0]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(129 * e, 338 * e),
                a.bezierCurveTo(137 * e, 336 * e, 137 * e, 336 * e, 145 * e, 334 * e),
                a.bezierCurveTo(152.5 * e, 338 * e, 152.5 * e, 338 * e, 160 * e, 342 * e),
                a.bezierCurveTo(184 * e, 224 * e, 184 * e, 224 * e, 208 * e, 106 * e),
                a.bezierCurveTo(197 * e, 88 * e, 187 * e, 70 * e, 186 * e, 70 * e),
                a.bezierCurveTo(169.5 * e, 83 * e, 169.5 * e, 83 * e, 153 * e, 96 * e),
                a.closePath(),
                he(a, i[0]),
                a.globalAlpha = 1,
                a.translate(-20 * e, -20 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(112 * e, 356 * e),
                a.bezierCurveTo(124 * e, 220.5 * e, 124 * e, 220.5 * e, 136 * e, 85 * e),
                a.bezierCurveTo(162.5 * e, 65.5 * e, 162.5 * e, 65.5 * e, 189 * e, 46 * e),
                a.bezierCurveTo(208.5 * e, 72.5 * e, 208.5 * e, 72.5 * e, 228 * e, 99 * e),
                a.bezierCurveTo(200 * e, 232 * e, 200 * e, 232 * e, 172 * e, 365 * e),
                a.closePath(),
                he(a, i[1], i[2], 12.5 * e),
                a.save(),
                a.translate(131 * e, 423 * e),
                a.rotate(.16),
                ye(a, -14 * e, -53 * e, 28 * e, 106 * e, 10 * e),
                a.restore(),
                he(a, i[4], i[5], 12.5 * e),
                a.save(),
                a.translate(122 * e, 480 * e),
                a.rotate(1.72),
                me(a, 4, 26.476404589747453 * e, 10 * e),
                a.restore(),
                he(a, i[1], i[2], 12.5 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(210 * e, 387 * e),
                a.bezierCurveTo(138 * e, 376 * e, 138 * e, 376 * e, 66 * e, 365 * e),
                a.bezierCurveTo(76 * e, 355 * e, 76 * e, 355 * e, 86 * e, 345 * e),
                a.bezierCurveTo(99 * e, 346.5 * e, 99 * e, 346.5 * e, 112 * e, 348 * e),
                a.bezierCurveTo(128.5 * e, 344 * e, 128.5 * e, 344 * e, 145 * e, 340 * e),
                a.bezierCurveTo(158 * e, 348 * e, 158 * e, 348 * e, 171 * e, 356 * e),
                a.bezierCurveTo(184 * e, 358 * e, 184 * e, 358 * e, 197 * e, 360 * e),
                a.closePath(),
                he(a, i[1], i[2], 12.5 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(129 * e, 338 * e),
                a.bezierCurveTo(137 * e, 336 * e, 137 * e, 336 * e, 145 * e, 334 * e),
                a.bezierCurveTo(152.5 * e, 338 * e, 152.5 * e, 338 * e, 160 * e, 342 * e),
                a.bezierCurveTo(184 * e, 224 * e, 184 * e, 224 * e, 208 * e, 106 * e),
                a.bezierCurveTo(197 * e, 88 * e, 187 * e, 70 * e, 186 * e, 70 * e),
                a.bezierCurveTo(169.5 * e, 83 * e, 169.5 * e, 83 * e, 153 * e, 96 * e),
                a.closePath(),
                he(a, i[3]),
                a.globalAlpha = .3,
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(134 * e, 178 * e),
                a.bezierCurveTo(174 * e, 157 * e, 174 * e, 157 * e, 214 * e, 136 * e),
                a.bezierCurveTo(211.5 * e, 147.5 * e, 211.5 * e, 147.5 * e, 209 * e, 159 * e),
                a.bezierCurveTo(170.5 * e, 181 * e, 170.5 * e, 181 * e, 132 * e, 203 * e),
                a.closePath(),
                he(a, i[6]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(130 * e, 215 * e),
                a.bezierCurveTo(192 * e, 183 * e, 168 * e, 195 * e, 206 * e, 175 * e),
                a.bezierCurveTo(200 * e, 205 * e, 200 * e, 205 * e, 194 * e, 235 * e),
                a.bezierCurveTo(159.5 * e, 251 * e, 159.5 * e, 251 * e, 125 * e, 267 * e),
                a.closePath(),
                he(a, i[6]),
                n
            }
            function ct(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                return n.width = 290 * e,
                n.height = 525 * e,
                a.globalAlpha = t ? .5 : 1,
                a.translate(20 * e, 20 * e),
                a.translate(-20 * e, -20 * e),
                a.save(),
                a.translate(132 * e, 423 * e),
                a.rotate(.16),
                ye(a, -14 * e, -61 * e, 28 * e, 122 * e, 10 * e),
                a.restore(),
                he(a, i[0]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(100 * e, 344 * e),
                a.bezierCurveTo(123 * e, 214 * e, 123 * e, 214 * e, 146 * e, 84 * e),
                a.bezierCurveTo(166.5 * e, 65 * e, 166.5 * e, 65 * e, 187 * e, 46 * e),
                a.bezierCurveTo(201 * e, 71 * e, 201 * e, 71 * e, 215 * e, 96 * e),
                a.bezierCurveTo(199.5 * e, 226.5 * e, 199.5 * e, 226.5 * e, 184 * e, 357 * e),
                a.bezierCurveTo(162.5 * e, 362.5 * e, 162.5 * e, 362.5 * e, 141 * e, 368 * e),
                a.closePath(),
                he(a, i[0]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(75 * e, 328 * e),
                a.bezierCurveTo(88 * e, 336.5 * e, 88 * e, 336.5 * e, 101 * e, 345 * e),
                a.bezierCurveTo(123.5 * e, 337.5 * e, 123.5 * e, 337.5 * e, 146 * e, 330 * e),
                a.bezierCurveTo(165 * e, 343.5 * e, 165 * e, 343.5 * e, 184 * e, 357 * e),
                a.bezierCurveTo(198.5 * e, 353 * e, 198.5 * e, 353 * e, 213 * e, 349 * e),
                a.bezierCurveTo(200.5 * e, 364.5 * e, 200.5 * e, 364.5 * e, 188 * e, 380 * e),
                a.bezierCurveTo(163 * e, 380.5 * e, 163 * e, 380.5 * e, 138 * e, 381 * e),
                a.bezierCurveTo(112 * e, 373.5 * e, 112 * e, 373.5 * e, 86 * e, 366 * e),
                a.closePath(),
                he(a, i[0]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(121 * e, 332 * e),
                a.bezierCurveTo(133.5 * e, 327.5 * e, 133.5 * e, 327.5 * e, 146 * e, 323 * e),
                a.bezierCurveTo(157 * e, 330.5 * e, 157 * e, 330.5 * e, 168 * e, 338 * e),
                a.bezierCurveTo(182.5 * e, 219.5 * e, 182.5 * e, 219.5 * e, 197 * e, 101 * e),
                a.bezierCurveTo(190 * e, 84.5 * e, 190 * e, 84.5 * e, 183 * e, 68 * e),
                a.bezierCurveTo(172.5 * e, 81 * e, 172.5 * e, 81 * e, 162 * e, 94 * e),
                a.closePath(),
                he(a, i[0]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(105 * e, 463 * e),
                a.bezierCurveTo(124.5 * e, 466 * e, 124.5 * e, 466 * e, 144 * e, 469 * e),
                a.bezierCurveTo(145.5 * e, 478.5 * e, 145.5 * e, 478.5 * e, 147 * e, 488 * e),
                a.bezierCurveTo(133.5 * e, 495.5 * e, 133.5 * e, 495.5 * e, 120 * e, 503 * e),
                a.bezierCurveTo(108.5 * e, 492 * e, 108.5 * e, 492 * e, 97 * e, 481 * e),
                a.closePath(),
                he(a, i[0]),
                a.globalAlpha = 1,
                a.translate(-20 * e, -20 * e),
                a.save(),
                a.translate(132 * e, 423 * e),
                a.rotate(.16),
                ye(a, -14 * e, -61 * e, 28 * e, 122 * e, 10 * e),
                a.restore(),
                he(a, i[4], i[5], 12.5 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(100 * e, 344 * e),
                a.bezierCurveTo(123 * e, 214 * e, 123 * e, 214 * e, 146 * e, 84 * e),
                a.bezierCurveTo(166.5 * e, 65 * e, 166.5 * e, 65 * e, 187 * e, 46 * e),
                a.bezierCurveTo(201 * e, 71 * e, 201 * e, 71 * e, 215 * e, 96 * e),
                a.bezierCurveTo(199.5 * e, 226.5 * e, 199.5 * e, 226.5 * e, 184 * e, 357 * e),
                a.bezierCurveTo(162.5 * e, 362.5 * e, 162.5 * e, 362.5 * e, 141 * e, 368 * e),
                a.closePath(),
                he(a, i[1], i[2], 12.5 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(75 * e, 328 * e),
                a.bezierCurveTo(88 * e, 336.5 * e, 88 * e, 336.5 * e, 101 * e, 345 * e),
                a.bezierCurveTo(123.5 * e, 337.5 * e, 123.5 * e, 337.5 * e, 146 * e, 330 * e),
                a.bezierCurveTo(165 * e, 343.5 * e, 165 * e, 343.5 * e, 184 * e, 357 * e),
                a.bezierCurveTo(198.5 * e, 353 * e, 198.5 * e, 353 * e, 213 * e, 349 * e),
                a.bezierCurveTo(200.5 * e, 364.5 * e, 200.5 * e, 364.5 * e, 188 * e, 380 * e),
                a.bezierCurveTo(163 * e, 380.5 * e, 163 * e, 380.5 * e, 138 * e, 381 * e),
                a.bezierCurveTo(112 * e, 373.5 * e, 112 * e, 373.5 * e, 86 * e, 366 * e),
                a.closePath(),
                he(a, i[1], i[2], 12.5 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(121 * e, 332 * e),
                a.bezierCurveTo(133.5 * e, 327.5 * e, 133.5 * e, 327.5 * e, 146 * e, 323 * e),
                a.bezierCurveTo(157 * e, 330.5 * e, 157 * e, 330.5 * e, 168 * e, 338 * e),
                a.bezierCurveTo(182.5 * e, 219.5 * e, 182.5 * e, 219.5 * e, 197 * e, 101 * e),
                a.bezierCurveTo(190 * e, 84.5 * e, 190 * e, 84.5 * e, 183 * e, 68 * e),
                a.bezierCurveTo(172.5 * e, 81 * e, 172.5 * e, 81 * e, 162 * e, 94 * e),
                a.closePath(),
                he(a, i[3]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(105 * e, 463 * e),
                a.bezierCurveTo(124.5 * e, 466 * e, 124.5 * e, 466 * e, 144 * e, 469 * e),
                a.bezierCurveTo(145.5 * e, 478.5 * e, 145.5 * e, 478.5 * e, 147 * e, 488 * e),
                a.bezierCurveTo(133.5 * e, 495.5 * e, 133.5 * e, 495.5 * e, 120 * e, 503 * e),
                a.bezierCurveTo(108.5 * e, 492 * e, 108.5 * e, 492 * e, 97 * e, 481 * e),
                a.closePath(),
                he(a, i[1], i[2], 12.5 * e),
                a.globalAlpha = .2,
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(139 * e, 157 * e),
                a.bezierCurveTo(171.5 * e, 145 * e, 171.5 * e, 145 * e, 204 * e, 133 * e),
                a.bezierCurveTo(203 * e, 144.5 * e, 203 * e, 144.5 * e, 202 * e, 156 * e),
                a.bezierCurveTo(168.5 * e, 168 * e, 168.5 * e, 168 * e, 135 * e, 180 * e),
                a.closePath(),
                he(a, i[6]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(133 * e, 192 * e),
                a.bezierCurveTo(166.5 * e, 181.5 * e, 166.5 * e, 181.5 * e, 200 * e, 171 * e),
                a.bezierCurveTo(195.5 * e, 205 * e, 195.5 * e, 205 * e, 191 * e, 239 * e),
                a.bezierCurveTo(156 * e, 249 * e, 156 * e, 249 * e, 121 * e, 259 * e),
                a.closePath(),
                he(a, i[6]),
                a.globalAlpha = 1,
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(143 * e, 346 * e),
                a.bezierCurveTo(125 * e, 352 * e, 125 * e, 352 * e, 107 * e, 358 * e),
                a.bezierCurveTo(124 * e, 363 * e, 140 * e, 368 * e, 141 * e, 368 * e),
                a.bezierCurveTo(156.5 * e, 367 * e, 156.5 * e, 367 * e, 172 * e, 366 * e),
                a.closePath(),
                he(a, i[3]),
                n
            }
            function ut(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                return n.width = 154 * e,
                n.height = 261 * e,
                a.globalAlpha = t ? .5 : 1,
                a.translate(0, 10 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(125 * e, 69 * e),
                a.bezierCurveTo(123.5 * e, 141.5 * e, 123.5 * e, 141.5 * e, 122 * e, 214 * e),
                a.bezierCurveTo(123 * e, 228 * e, 119 * e, 239 * e, 102 * e, 239 * e),
                a.bezierCurveTo(90 * e, 238 * e, 86 * e, 225 * e, 89 * e, 197 * e),
                a.bezierCurveTo(92 * e, 159 * e, 92 * e, 141 * e, 94 * e, 84 * e),
                a.bezierCurveTo(94 * e, 58 * e, 87 * e, 50 * e, 73 * e, 52 * e),
                a.bezierCurveTo(53 * e, 54 * e, 54 * e, 92 * e, 34 * e, 87 * e),
                a.bezierCurveTo(13 * e, 85 * e, 22 * e, 58 * e, 34 * e, 40 * e),
                a.bezierCurveTo(44 * e, 24 * e, 68 * e, 17 * e, 86 * e, 21 * e),
                a.bezierCurveTo(111 * e, 23 * e, 123 * e, 39 * e, 125 * e, 67 * e),
                a.closePath(),
                he(a, i[0]),
                a.globalAlpha = 1,
                a.translate(0, -10 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(125 * e, 69 * e),
                a.bezierCurveTo(123.5 * e, 141.5 * e, 123.5 * e, 141.5 * e, 122 * e, 214 * e),
                a.bezierCurveTo(123 * e, 228 * e, 119 * e, 239 * e, 102 * e, 239 * e),
                a.bezierCurveTo(90 * e, 238 * e, 86 * e, 225 * e, 89 * e, 197 * e),
                a.bezierCurveTo(92 * e, 159 * e, 92 * e, 141 * e, 94 * e, 84 * e),
                a.bezierCurveTo(94 * e, 58 * e, 87 * e, 50 * e, 73 * e, 52 * e),
                a.bezierCurveTo(53 * e, 54 * e, 54 * e, 92 * e, 34 * e, 87 * e),
                a.bezierCurveTo(13 * e, 85 * e, 22 * e, 58 * e, 34 * e, 40 * e),
                a.bezierCurveTo(44 * e, 24 * e, 68 * e, 17 * e, 86 * e, 21 * e),
                a.bezierCurveTo(111 * e, 23 * e, 123 * e, 39 * e, 125 * e, 67 * e),
                a.closePath(),
                he(a, i[1], i[2], 4 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(31 * e, 43 * e),
                a.bezierCurveTo(31 * e, 61 * e, 43 * e, 70 * e, 51 * e, 75 * e),
                a.bezierCurveTo(48 * e, 84 * e, 41 * e, 89 * e, 33 * e, 86 * e),
                a.bezierCurveTo(23 * e, 88 * e, 20 * e, 76 * e, 23 * e, 62 * e),
                a.closePath(),
                he(a, i[3]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(45 * e, 29 * e),
                a.bezierCurveTo(49 * e, 45 * e, 61 * e, 54 * e, 64 * e, 55 * e),
                a.bezierCurveTo(67.5 * e, 53 * e, 67.5 * e, 53 * e, 71 * e, 51 * e),
                a.bezierCurveTo(80 * e, 44 * e, 83 * e, 33 * e, 82 * e, 20 * e),
                a.bezierCurveTo(59 * e, 17 * e, 51 * e, 23 * e, 45 * e, 30 * e),
                a.closePath(),
                he(a, i[3]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(86 * e, 56 * e),
                a.bezierCurveTo(90 * e, 33 * e, 103 * e, 25 * e, 105 * e, 27 * e),
                a.bezierCurveTo(116 * e, 31 * e, 121 * e, 45 * e, 122 * e, 50 * e),
                a.bezierCurveTo(112 * e, 62 * e, 103 * e, 63 * e, 91 * e, 62 * e),
                a.bezierCurveTo(89 * e, 59.5 * e, 89 * e, 59.5 * e, 87 * e, 57 * e),
                a.closePath(),
                he(a, i[3]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(93 * e, 81 * e),
                a.bezierCurveTo(109 * e, 82 * e, 123 * e, 70 * e, 124 * e, 63 * e),
                a.bezierCurveTo(124 * e, 75.5 * e, 124 * e, 75.5 * e, 124 * e, 88 * e),
                a.bezierCurveTo(119 * e, 99 * e, 103 * e, 103 * e, 94 * e, 103 * e),
                a.closePath(),
                he(a, i[3]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(93 * e, 124 * e),
                a.bezierCurveTo(108 * e, 125 * e, 122 * e, 113 * e, 124 * e, 106 * e),
                a.bezierCurveTo(124 * e, 119 * e, 124 * e, 129 * e, 124 * e, 132 * e),
                a.bezierCurveTo(110 * e, 147 * e, 94 * e, 148 * e, 90 * e, 147 * e),
                a.closePath(),
                he(a, i[3]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(90 * e, 170 * e),
                a.bezierCurveTo(104 * e, 166 * e, 122 * e, 158 * e, 122 * e, 151 * e),
                a.bezierCurveTo(122 * e, 162.5 * e, 122 * e, 162.5 * e, 122 * e, 174 * e),
                a.bezierCurveTo(111 * e, 191 * e, 97 * e, 191 * e, 89 * e, 191 * e),
                a.closePath(),
                he(a, i[3]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(88 * e, 208 * e),
                a.bezierCurveTo(100 * e, 209 * e, 115 * e, 205 * e, 122 * e, 193 * e),
                a.bezierCurveTo(122 * e, 205.5 * e, 122 * e, 205.5 * e, 122 * e, 218 * e),
                a.bezierCurveTo(115 * e, 229 * e, 103 * e, 235 * e, 90 * e, 228 * e),
                a.bezierCurveTo(88 * e, 224 * e, 88 * e, 217 * e, 88 * e, 211 * e),
                a.closePath(),
                he(a, i[3]),
                a.globalAlpha = .4,
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(22 * e, 81 * e),
                a.bezierCurveTo(32 * e, 84 * e, 41 * e, 81 * e, 45 * e, 68 * e),
                a.bezierCurveTo(50 * e, 50 * e, 62 * e, 40 * e, 79 * e, 43 * e),
                a.bezierCurveTo(95 * e, 45 * e, 102 * e, 58 * e, 101 * e, 81 * e),
                a.bezierCurveTo(99.5 * e, 120.5 * e, 99.5 * e, 120.5 * e, 98 * e, 160 * e),
                a.bezierCurveTo(96.5 * e, 191.5 * e, 96.5 * e, 191.5 * e, 95 * e, 223 * e),
                a.bezierCurveTo(93 * e, 232 * e, 101 * e, 235 * e, 108 * e, 238 * e),
                a.bezierCurveTo(100 * e, 240 * e, 90 * e, 233 * e, 90 * e, 224 * e),
                a.bezierCurveTo(92 * e, 157 * e, 92 * e, 157 * e, 94 * e, 90 * e),
                a.bezierCurveTo(94 * e, 56 * e, 89 * e, 53 * e, 77 * e, 51 * e),
                a.bezierCurveTo(58 * e, 50 * e, 54 * e, 59 * e, 49 * e, 75 * e),
                a.bezierCurveTo(44 * e, 91 * e, 28 * e, 90 * e, 23 * e, 81 * e),
                a.closePath(),
                he(a, i[0]),
                a.globalAlpha = 1,
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(82 * e, 123 * e),
                a.bezierCurveTo(88 * e, 130 * e, 88 * e, 127 * e, 94 * e, 128 * e),
                a.bezierCurveTo(91 * e, 136 * e, 94 * e, 137 * e, 99 * e, 142 * e),
                a.bezierCurveTo(97 * e, 149 * e, 99 * e, 152 * e, 105 * e, 155 * e),
                a.bezierCurveTo(107 * e, 159 * e, 113 * e, 159 * e, 120 * e, 158 * e),
                a.bezierCurveTo(121 * e, 160 * e, 125 * e, 163 * e, 132 * e, 163 * e),
                a.bezierCurveTo(133 * e, 166 * e, 136 * e, 169 * e, 138 * e, 170 * e),
                a.bezierCurveTo(133 * e, 171 * e, 132 * e, 172 * e, 129 * e, 174 * e),
                a.bezierCurveTo(122 * e, 170 * e, 120 * e, 170 * e, 116 * e, 174 * e),
                a.bezierCurveTo(108 * e, 170.5 * e, 108 * e, 170.5 * e, 100 * e, 167 * e),
                a.bezierCurveTo(95 * e, 172 * e, 94 * e, 179 * e, 95 * e, 184 * e),
                a.bezierCurveTo(87 * e, 185 * e, 87 * e, 189 * e, 88 * e, 194 * e),
                a.bezierCurveTo(82 * e, 194 * e, 81 * e, 195 * e, 79 * e, 197 * e),
                a.bezierCurveTo(78 * e, 192 * e, 78 * e, 191 * e, 77 * e, 189 * e),
                a.bezierCurveTo(81 * e, 185 * e, 82 * e, 183 * e, 80 * e, 176 * e),
                a.bezierCurveTo(89 * e, 170 * e, 92 * e, 168 * e, 95 * e, 163 * e),
                a.bezierCurveTo(91 * e, 151 * e, 88 * e, 151 * e, 82 * e, 147 * e),
                a.bezierCurveTo(85 * e, 142 * e, 85 * e, 137 * e, 81 * e, 133 * e),
                a.bezierCurveTo(84 * e, 127 * e, 84 * e, 125 * e, 82 * e, 124 * e),
                a.closePath(),
                he(a, i[4], i[5], 4 * e),
                Re(a, 107 * e, 152 * e, 9 * e),
                he(a, i[6]),
                Re(a, 105 * e, 173 * e, 9 * e),
                he(a, i[6]),
                Re(a, 87 * e, 161 * e, 9 * e),
                he(a, i[6]),
                Re(a, 106 * e, 147 * e, 4 * e),
                he(a, i[7]),
                Re(a, 104 * e, 167 * e, 4 * e),
                he(a, i[7]),
                Re(a, 86 * e, 154 * e, 4 * e),
                he(a, i[7]),
                n
            }
            function pt(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                return n.width = 350 * e,
                n.height = 140 * e,
                a.translate(-50 * e, -150 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(184.5 * e, 222.0625 * e),
                a.bezierCurveTo(185.5 * e, 184.0625 * e, 302.5 * e, 171.0625 * e, 313.5 * e, 222.0625 * e),
                a.bezierCurveTo(330.5 * e, 263.0625 * e, 181.5 * e, 274.0625 * e, 184.5 * e, 223.0625 * e),
                a.closePath(),
                he(a, i[0], i[1], 8 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(131.5 * e, 241.0625 * e),
                a.bezierCurveTo(144.5 * e, 278.0625 * e, 270.5 * e, 209.0625 * e, 228.5 * e, 174.0625 * e),
                a.bezierCurveTo(196.5 * e, 147.0625 * e, 117.5 * e, 196.0625 * e, 131.5 * e, 240.0625 * e),
                a.closePath(),
                he(a, i[0], i[1], 8 * e),
                Re(a, 270.5 * e, 225.0625 * e, 15.811388300841896 * e),
                he(a, i[2]),
                Re(a, 243.5 * e, 225.0625 * e, 6.082762530298219 * e),
                he(a, i[2]),
                Re(a, 255.5 * e, 210.0625 * e, 10.816653826391969 * e),
                he(a, i[2]),
                Re(a, 167.5 * e, 215.0625 * e, 15.297058540778355 * e),
                he(a, i[2]),
                Re(a, 176.5 * e, 204.0625 * e, 7.280109889280518 * e),
                he(a, i[2]),
                Re(a, 206.5 * e, 189.0625 * e, 7.280109889280518 * e),
                he(a, i[2]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(151.5 * e, 212.0625 * e),
                a.bezierCurveTo(161.5 * e, 204.0625 * e, 173.5 * e, 214.0625 * e, 158.5 * e, 221.0625 * e),
                a.bezierCurveTo(145.5 * e, 228.0625 * e, 144.5 * e, 216.0625 * e, 151.5 * e, 212.0625 * e),
                a.closePath(),
                he(a, i[3], i[4], 4 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(194.5 * e, 209.0625 * e),
                a.bezierCurveTo(205.5 * e, 202.0625 * e, 215.5 * e, 207.0625 * e, 199.5 * e, 217.0625 * e),
                a.bezierCurveTo(187.5 * e, 224.0625 * e, 182.5 * e, 217.0625 * e, 194.5 * e, 209.0625 * e),
                a.closePath(),
                he(a, i[3], i[4], 4 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(188.5 * e, 183.0625 * e),
                a.bezierCurveTo(201.5 * e, 176.0625 * e, 213.5 * e, 187.0625 * e, 193.5 * e, 193.0625 * e),
                a.bezierCurveTo(185.5 * e, 194.0625 * e, 175.5 * e, 189.0625 * e, 188.5 * e, 183.0625 * e),
                a.closePath(),
                he(a, i[3], i[4], 4 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(261.5 * e, 202.0625 * e),
                a.bezierCurveTo(274.5 * e, 201.0625 * e, 282.5 * e, 214.0625 * e, 261.5 * e, 215.0625 * e),
                a.bezierCurveTo(246.5 * e, 214.0625 * e, 248.5 * e, 203.0625 * e, 261.5 * e, 202.0625 * e),
                a.closePath(),
                he(a, i[3], i[4], 4 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(240.5 * e, 231.0625 * e),
                a.bezierCurveTo(255.5 * e, 231.0625 * e, 254.5 * e, 243.0625 * e, 240.5 * e, 242.0625 * e),
                a.bezierCurveTo(225.5 * e, 239.0625 * e, 225.5 * e, 232.0625 * e, 240.5 * e, 231.0625 * e),
                a.closePath(),
                he(a, i[3], i[4], 4 * e),
                n
            }
            function Pt(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                return n.width = 217 * e,
                n.height = 215 * e,
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(79 * e, 113 * e),
                a.bezierCurveTo(135 * e, 98 * e, 136 * e, 96 * e, 142 * e, 97 * e),
                a.bezierCurveTo(167 * e, 106 * e, 167 * e, 106 * e, 171 * e, 109 * e),
                a.bezierCurveTo(173 * e, 120 * e, 173 * e, 134 * e, 169 * e, 141 * e),
                a.bezierCurveTo(140 * e, 149.5 * e, 140 * e, 149.5 * e, 111 * e, 158 * e),
                a.closePath(),
                he(a, i[1], i[2], 4 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(154 * e, 103 * e),
                a.bezierCurveTo(167 * e, 91 * e, 175 * e, 87 * e, 176 * e, 94 * e),
                a.bezierCurveTo(175 * e, 102 * e, 176 * e, 102 * e, 186 * e, 103 * e),
                a.bezierCurveTo(191 * e, 104 * e, 192 * e, 105 * e, 185 * e, 116 * e),
                a.bezierCurveTo(183 * e, 120 * e, 191 * e, 124 * e, 189 * e, 129 * e),
                a.bezierCurveTo(185 * e, 139 * e, 178 * e, 134 * e, 166 * e, 131 * e),
                a.closePath(),
                he(a, i[1], i[2], 4 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(60 * e, 46 * e),
                a.bezierCurveTo(60 * e, 34 * e, 60 * e, 29 * e, 56 * e, 19 * e),
                a.bezierCurveTo(52 * e, 12 * e, 52 * e, 16 * e, 49 * e, 24 * e),
                a.bezierCurveTo(48 * e, 27 * e, 46 * e, 28 * e, 39 * e, 27 * e),
                a.bezierCurveTo(33 * e, 26 * e, 34 * e, 31 * e, 35 * e, 37 * e),
                a.bezierCurveTo(36 * e, 41 * e, 27 * e, 46 * e, 29 * e, 52 * e),
                a.bezierCurveTo(36 * e, 55 * e, 35 * e, 56 * e, 31 * e, 59 * e),
                a.bezierCurveTo(27 * e, 65 * e, 32 * e, 64 * e, 35 * e, 62 * e),
                a.closePath(),
                he(a, i[4], i[5], 4 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(46 * e, 50 * e),
                a.bezierCurveTo(51 * e, 35 * e, 70 * e, 32 * e, 78 * e, 29 * e),
                a.bezierCurveTo(84 * e, 27 * e, 113 * e, 36 * e, 127 * e, 41 * e),
                a.bezierCurveTo(140 * e, 47 * e, 147 * e, 69 * e, 137 * e, 73 * e),
                a.bezierCurveTo(124 * e, 92 * e, 117 * e, 92 * e, 109 * e, 94 * e),
                a.bezierCurveTo(101 * e, 96 * e, 89 * e, 92 * e, 65 * e, 83 * e),
                a.bezierCurveTo(54 * e, 80 * e, 46 * e, 58 * e, 46 * e, 51 * e),
                a.closePath(),
                he(a, i[4], i[5], 4 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(51 * e, 40 * e),
                a.bezierCurveTo(49 * e, 34 * e, 49 * e, 34 * e, 47 * e, 28 * e),
                a.bezierCurveTo(38 * e, 28 * e, 34 * e, 27 * e, 37 * e, 37 * e),
                a.bezierCurveTo(43 * e, 40.5 * e, 43 * e, 40.5 * e, 49 * e, 44 * e),
                a.closePath(),
                he(a, i[7]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(29 * e, 48 * e),
                a.bezierCurveTo(38 * e, 49 * e, 38 * e, 49 * e, 47 * e, 50 * e),
                a.bezierCurveTo(46.5 * e, 51.5 * e, 46.5 * e, 51.5 * e, 46 * e, 53 * e),
                a.bezierCurveTo(40 * e, 53.5 * e, 40 * e, 53.5 * e, 34 * e, 54 * e),
                a.bezierCurveTo(29 * e, 51 * e, 32 * e, 51.5 * e, 30 * e, 49 * e),
                a.closePath(),
                he(a, i[7]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(89 * e, 61 * e),
                a.bezierCurveTo(101 * e, 70 * e, 109 * e, 90 * e, 102 * e, 90 * e),
                a.bezierCurveTo(97 * e, 91 * e, 87 * e, 91 * e, 60 * e, 80 * e),
                a.bezierCurveTo(48 * e, 65 * e, 46 * e, 56 * e, 48 * e, 53 * e),
                a.bezierCurveTo(50 * e, 52 * e, 66 * e, 56 * e, 89 * e, 61 * e),
                a.closePath(),
                he(a, i[7]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(99 * e, 59 * e),
                a.bezierCurveTo(115 * e, 45 * e, 125 * e, 42 * e, 129 * e, 47 * e),
                a.bezierCurveTo(138 * e, 56 * e, 140 * e, 63 * e, 138 * e, 67 * e),
                a.bezierCurveTo(131 * e, 80 * e, 122 * e, 87 * e, 114 * e, 90 * e),
                a.bezierCurveTo(105 * e, 80 * e, 95 * e, 62 * e, 98 * e, 61 * e),
                a.closePath(),
                he(a, i[7]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(118 * e, 62 * e),
                a.bezierCurveTo(139 * e, 45 * e, 153 * e, 40 * e, 150 * e, 48 * e),
                a.bezierCurveTo(145 * e, 57 * e, 157 * e, 63 * e, 157 * e, 70 * e),
                a.bezierCurveTo(157 * e, 74 * e, 142 * e, 77 * e, 142 * e, 85 * e),
                a.bezierCurveTo(143 * e, 91 * e, 141 * e, 92 * e, 135 * e, 90 * e),
                a.bezierCurveTo(132 * e, 90 * e, 132 * e, 96 * e, 124 * e, 99 * e),
                a.bezierCurveTo(118 * e, 93 * e, 116 * e, 77 * e, 116 * e, 64 * e),
                a.closePath(),
                he(a, i[4], i[5], 4 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(90 * e, 130 * e),
                a.bezierCurveTo(157 * e, 115 * e, 165 * e, 111 * e, 167 * e, 115 * e),
                a.bezierCurveTo(170 * e, 117 * e, 171 * e, 135 * e, 167 * e, 141 * e),
                a.bezierCurveTo(135.5 * e, 149.5 * e, 135.5 * e, 149.5 * e, 104 * e, 158 * e),
                a.closePath(),
                he(a, i[8]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(53 * e, 119 * e),
                a.bezierCurveTo(46 * e, 120 * e, 40 * e, 118 * e, 34 * e, 116 * e),
                a.bezierCurveTo(28 * e, 111 * e, 41 * e, 112 * e, 39 * e, 108 * e),
                a.bezierCurveTo(36 * e, 100 * e, 49 * e, 102 * e, 53 * e, 95 * e),
                a.bezierCurveTo(57 * e, 84 * e, 58 * e, 85 * e, 63 * e, 93 * e),
                a.bezierCurveTo(68 * e, 96 * e, 72 * e, 94 * e, 80 * e, 88 * e),
                a.bezierCurveTo(80 * e, 96 * e, 78 * e, 107 * e, 66 * e, 115 * e),
                a.closePath(),
                he(a, i[9], i[10], 4 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(118 * e, 64 * e),
                a.bezierCurveTo(133.5 * e, 57 * e, 133.5 * e, 57 * e, 149 * e, 50 * e),
                a.bezierCurveTo(145 * e, 54 * e, 154 * e, 65 * e, 157 * e, 68 * e),
                a.bezierCurveTo(138.5 * e, 66.5 * e, 138.5 * e, 66.5 * e, 120 * e, 65 * e),
                a.closePath(),
                he(a, i[8]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(118 * e, 65 * e),
                a.bezierCurveTo(129 * e, 77 * e, 129 * e, 77 * e, 140 * e, 89 * e),
                a.bezierCurveTo(131 * e, 89 * e, 130 * e, 92 * e, 128 * e, 96 * e),
                a.bezierCurveTo(123.5 * e, 82 * e, 123.5 * e, 82 * e, 119 * e, 68 * e),
                a.closePath(),
                he(a, i[8]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(51 * e, 112 * e),
                a.bezierCurveTo(63 * e, 108 * e, 78 * e, 111 * e, 88 * e, 112 * e),
                a.bezierCurveTo(98 * e, 122 * e, 117 * e, 136 * e, 125 * e, 157 * e),
                a.bezierCurveTo(123 * e, 180 * e, 123 * e, 185 * e, 118 * e, 186 * e),
                a.bezierCurveTo(101 * e, 190 * e, 89 * e, 191 * e, 79 * e, 187 * e),
                a.bezierCurveTo(53 * e, 165 * e, 50 * e, 153 * e, 47 * e, 144 * e),
                a.bezierCurveTo(46 * e, 128 * e, 46 * e, 124 * e, 50 * e, 112 * e),
                a.closePath(),
                he(a, i[9], i[10], 4 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(50 * e, 114 * e),
                a.bezierCurveTo(81 * e, 149 * e, 80 * e, 147 * e, 80 * e, 149 * e),
                a.bezierCurveTo(82 * e, 155 * e, 80 * e, 182 * e, 74 * e, 182 * e),
                a.bezierCurveTo(60 * e, 172 * e, 52 * e, 157 * e, 47 * e, 144 * e),
                a.closePath(),
                he(a, i[11], i[11], 4 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(85 * e, 152 * e),
                a.bezierCurveTo(99 * e, 150 * e, 109 * e, 152 * e, 119 * e, 156 * e),
                a.bezierCurveTo(122 * e, 163 * e, 122 * e, 174 * e, 117 * e, 182 * e),
                a.closePath(),
                a.bezierCurveTo(93 * e, 188 * e, 82 * e, 187 * e, 83 * e, 179 * e),
                he(a, i[11], i[11], 4 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(104 * e, 166 * e),
                a.bezierCurveTo(133 * e, 165 * e, 142 * e, 168 * e, 137 * e, 173 * e),
                a.bezierCurveTo(127 * e, 177 * e, 137 * e, 195 * e, 126 * e, 196 * e),
                a.bezierCurveTo(112 * e, 195 * e, 112 * e, 194 * e, 109 * e, 199 * e),
                a.bezierCurveTo(105 * e, 205 * e, 102 * e, 195 * e, 96 * e, 197 * e),
                a.bezierCurveTo(84 * e, 201 * e, 88 * e, 198 * e, 90 * e, 187 * e),
                a.bezierCurveTo(96 * e, 171 * e, 97 * e, 170 * e, 103 * e, 167 * e),
                a.closePath(),
                he(a, i[9], i[10], 4 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(105 * e, 168 * e),
                a.bezierCurveTo(118 * e, 172.5 * e, 118 * e, 172.5 * e, 131 * e, 177 * e),
                a.bezierCurveTo(133 * e, 190 * e, 132 * e, 199 * e, 116 * e, 194 * e),
                a.bezierCurveTo(110 * e, 182 * e, 110 * e, 182 * e, 104 * e, 170 * e),
                a.closePath(),
                he(a, i[10]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(102 * e, 169 * e),
                a.bezierCurveTo(100.5 * e, 182 * e, 100.5 * e, 182 * e, 99 * e, 195 * e),
                a.bezierCurveTo(93.5 * e, 196.5 * e, 93.5 * e, 196.5 * e, 88 * e, 198 * e),
                a.bezierCurveTo(94 * e, 176 * e, 96 * e, 174 * e, 101 * e, 168 * e),
                a.closePath(),
                he(a, i[9], i[9], 4 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(64 * e, 107 * e),
                a.bezierCurveTo(64 * e, 101 * e, 64 * e, 101 * e, 64 * e, 95 * e),
                a.bezierCurveTo(57 * e, 86 * e, 57 * e, 84 * e, 53 * e, 97 * e),
                a.bezierCurveTo(55 * e, 103.5 * e, 55 * e, 103.5 * e, 57 * e, 110 * e),
                a.closePath(),
                he(a, i[11], i[11], 4 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(40 * e, 108 * e),
                a.bezierCurveTo(46.5 * e, 111 * e, 46.5 * e, 111 * e, 53 * e, 114 * e),
                a.bezierCurveTo(50.5 * e, 117 * e, 50.5 * e, 117 * e, 48 * e, 120 * e),
                a.bezierCurveTo(40.5 * e, 117.5 * e, 40.5 * e, 117.5 * e, 33 * e, 115 * e),
                a.bezierCurveTo(36 * e, 112 * e, 36 * e, 112 * e, 39 * e, 109 * e),
                a.closePath(),
                he(a, i[11], i[11], 4 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(189 * e, 106 * e),
                a.bezierCurveTo(178.5 * e, 110.5 * e, 178.5 * e, 110.5 * e, 168 * e, 115 * e),
                a.bezierCurveTo(168.5 * e, 119 * e, 168.5 * e, 119 * e, 169 * e, 123 * e),
                a.bezierCurveTo(179 * e, 124.5 * e, 179 * e, 124.5 * e, 189 * e, 126 * e),
                a.bezierCurveTo(182 * e, 118 * e, 183 * e, 115 * e, 188 * e, 106 * e),
                a.closePath(),
                he(a, i[8]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(69 * e, 178 * e),
                a.bezierCurveTo(69 * e, 141 * e, 70 * e, 136 * e, 77 * e, 137 * e),
                a.bezierCurveTo(88 * e, 133 * e, 101 * e, 134 * e, 108 * e, 137 * e),
                he(a, void 0, i[3], 4 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(55 * e, 161 * e),
                a.bezierCurveTo(54 * e, 124 * e, 55 * e, 119 * e, 62 * e, 119 * e),
                a.bezierCurveTo(74 * e, 117 * e, 85 * e, 117 * e, 93 * e, 119 * e),
                he(a, void 0, i[3], 4 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(91 * e, 29 * e),
                a.bezierCurveTo(74 * e, 33 * e, 62 * e, 46 * e, 57 * e, 54 * e),
                a.bezierCurveTo(57 * e, 63 * e, 68 * e, 76 * e, 77 * e, 87 * e),
                he(a, void 0, i[6], 4 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(107 * e, 33 * e),
                a.bezierCurveTo(82 * e, 51 * e, 80 * e, 52 * e, 79 * e, 59 * e),
                a.bezierCurveTo(78 * e, 65 * e, 93 * e, 86 * e, 101 * e, 93 * e),
                he(a, void 0, i[6], 4 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(130 * e, 98 * e),
                a.bezierCurveTo(126.5 * e, 103 * e, 126.5 * e, 103 * e, 123 * e, 108 * e),
                a.bezierCurveTo(133.5 * e, 107 * e, 133.5 * e, 107 * e, 144 * e, 106 * e),
                a.bezierCurveTo(138.5 * e, 110 * e, 138.5 * e, 110 * e, 133 * e, 114 * e),
                a.bezierCurveTo(142 * e, 114 * e, 142 * e, 114 * e, 151 * e, 114 * e),
                a.bezierCurveTo(146.5 * e, 119.5 * e, 146.5 * e, 119.5 * e, 142 * e, 125 * e),
                a.bezierCurveTo(146.5 * e, 127 * e, 146.5 * e, 127 * e, 151 * e, 129 * e),
                a.bezierCurveTo(147.5 * e, 132 * e, 147.5 * e, 132 * e, 144 * e, 135 * e),
                a.bezierCurveTo(148 * e, 137 * e, 148 * e, 137 * e, 152 * e, 139 * e),
                a.bezierCurveTo(149 * e, 142.5 * e, 149 * e, 142.5 * e, 146 * e, 146 * e),
                he(a, void 0, i[3], 4 * e),
                n
            }
            function wt(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                return n.width = 118 * e,
                n.height = 114 * e,
                a.translate(0, 10 * e),
                Re(a, 42 * e, 43 * e, 24.758836806279895 * e),
                he(a, i[0]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(65 * e, 90 * e),
                a.bezierCurveTo(72 * e, 91 * e, 75 * e, 92 * e, 71 * e, 96 * e),
                a.bezierCurveTo(65 * e, 98 * e, 65 * e, 94 * e, 65 * e, 91 * e),
                a.closePath(),
                he(a, i[0]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(87 * e, 45 * e),
                a.bezierCurveTo(108 * e, 59 * e, 100 * e, 86 * e, 85 * e, 91 * e),
                a.bezierCurveTo(80 * e, 96 * e, 68 * e, 95 * e, 58 * e, 87 * e),
                a.bezierCurveTo(53 * e, 80 * e, 61 * e, 64 * e, 66 * e, 58 * e),
                a.bezierCurveTo(73 * e, 48 * e, 78 * e, 44 * e, 87 * e, 45 * e),
                a.closePath(),
                he(a, i[0]),
                a.translate(0, -10 * e),
                Re(a, 42 * e, 43 * e, 24.758836806279895 * e),
                he(a, i[1], i[2], 5 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(65 * e, 90 * e),
                a.bezierCurveTo(72 * e, 91 * e, 75 * e, 92 * e, 71 * e, 96 * e),
                a.bezierCurveTo(65 * e, 98 * e, 65 * e, 94 * e, 65 * e, 91 * e),
                a.closePath(),
                he(a, i[1], i[2], 5 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(87 * e, 45 * e),
                a.bezierCurveTo(108 * e, 59 * e, 100 * e, 86 * e, 85 * e, 91 * e),
                a.bezierCurveTo(80 * e, 96 * e, 68 * e, 95 * e, 58 * e, 87 * e),
                a.bezierCurveTo(53 * e, 80 * e, 61 * e, 64 * e, 66 * e, 58 * e),
                a.bezierCurveTo(73 * e, 48 * e, 78 * e, 44 * e, 87 * e, 45 * e),
                a.closePath(),
                he(a, i[1], i[2], 5 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(52 * e, 16 * e),
                a.bezierCurveTo(55 * e, 19 * e, 54 * e, 20 * e, 55 * e, 22 * e),
                a.bezierCurveTo(52 * e, 24.5 * e, 52 * e, 24.5 * e, 49 * e, 27 * e),
                a.bezierCurveTo(45 * e, 25 * e, 45 * e, 25 * e, 41 * e, 23 * e),
                a.bezierCurveTo(45 * e, 19 * e, 48 * e, 16 * e, 52 * e, 16 * e),
                a.closePath(),
                he(a, i[3], i[4], 5 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(62 * e, 30 * e),
                a.bezierCurveTo(66 * e, 29 * e, 64 * e, 30 * e, 66 * e, 30 * e),
                a.bezierCurveTo(67 * e, 31 * e, 67 * e, 31 * e, 68 * e, 32 * e),
                a.bezierCurveTo(66.5 * e, 33.5 * e, 66.5 * e, 33.5 * e, 65 * e, 35 * e),
                a.bezierCurveTo(63.5 * e, 32.5 * e, 63.5 * e, 32.5 * e, 62 * e, 30 * e),
                a.closePath(),
                he(a, i[3], i[4], 5 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(29 * e, 21 * e),
                a.bezierCurveTo(31 * e, 22 * e, 31 * e, 26 * e, 29 * e, 29 * e),
                a.bezierCurveTo(26 * e, 28.5 * e, 26 * e, 28.5 * e, 23 * e, 28 * e),
                a.bezierCurveTo(23 * e, 26.5 * e, 23 * e, 26.5 * e, 23 * e, 25 * e),
                a.bezierCurveTo(25 * e, 23 * e, 25 * e, 23 * e, 27 * e, 21 * e),
                a.closePath(),
                he(a, i[3], i[4], 5 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(18 * e, 36 * e),
                a.bezierCurveTo(23 * e, 36 * e, 24 * e, 42 * e, 19 * e, 46 * e),
                a.bezierCurveTo(12 * e, 39 * e, 15 * e, 38 * e, 18 * e, 37 * e),
                a.closePath(),
                he(a, i[3], i[4], 5 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(30 * e, 34 * e),
                a.bezierCurveTo(35 * e, 36 * e, 36 * e, 39 * e, 32 * e, 45 * e),
                a.bezierCurveTo(25 * e, 46 * e, 25 * e, 44 * e, 30 * e, 34 * e),
                a.closePath(),
                he(a, i[3], i[4], 5 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(59 * e, 35 * e),
                a.bezierCurveTo(58 * e, 27 * e, 57 * e, 27 * e, 52 * e, 31 * e),
                a.bezierCurveTo(50 * e, 36 * e, 53 * e, 38 * e, 58 * e, 36 * e),
                a.closePath(),
                he(a, i[3], i[4], 5 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(63 * e, 46 * e),
                a.bezierCurveTo(64.5 * e, 46.5 * e, 64.5 * e, 46.5 * e, 66 * e, 47 * e),
                a.bezierCurveTo(70 * e, 50 * e, 70 * e, 53 * e, 61 * e, 55 * e),
                a.bezierCurveTo(62 * e, 50.5 * e, 62 * e, 50.5 * e, 63 * e, 46 * e),
                a.closePath(),
                he(a, i[3], i[4], 5 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(41 * e, 42 * e),
                a.bezierCurveTo(47 * e, 41 * e, 53 * e, 47 * e, 46 * e, 51 * e),
                a.bezierCurveTo(38 * e, 49 * e, 39 * e, 46 * e, 41 * e, 43 * e),
                a.closePath(),
                he(a, i[3], i[4], 5 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(44 * e, 57 * e),
                a.bezierCurveTo(54 * e, 57 * e, 54 * e, 58 * e, 55 * e, 61 * e),
                a.bezierCurveTo(54 * e, 63 * e, 52 * e, 64 * e, 48 * e, 65 * e),
                a.closePath(),
                he(a, i[3], i[4], 5 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(20 * e, 52 * e),
                a.bezierCurveTo(25 * e, 51 * e, 27 * e, 50 * e, 28 * e, 54 * e),
                a.bezierCurveTo(27 * e, 58 * e, 24 * e, 58 * e, 22 * e, 58 * e),
                a.bezierCurveTo(21 * e, 55.5 * e, 21 * e, 55.5 * e, 20 * e, 53 * e),
                a.closePath(),
                he(a, i[3], i[4], 5 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(30 * e, 61 * e),
                a.bezierCurveTo(37 * e, 61 * e, 39 * e, 63 * e, 39 * e, 68 * e),
                a.bezierCurveTo(36 * e, 68.5 * e, 36 * e, 68.5 * e, 33 * e, 69 * e),
                a.bezierCurveTo(30.5 * e, 67.5 * e, 30.5 * e, 67.5 * e, 28 * e, 66 * e),
                a.closePath(),
                he(a, i[3], i[4], 5 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(88 * e, 45 * e),
                a.bezierCurveTo(90 * e, 46.5 * e, 90 * e, 46.5 * e, 92 * e, 48 * e),
                a.bezierCurveTo(92 * e, 50 * e, 92 * e, 50 * e, 92 * e, 52 * e),
                a.closePath(),
                he(a, i[3], i[4], 5 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(96 * e, 53 * e),
                a.bezierCurveTo(97.5 * e, 55 * e, 97.5 * e, 55 * e, 99 * e, 57 * e),
                a.bezierCurveTo(97.5 * e, 59.5 * e, 97.5 * e, 59.5 * e, 96 * e, 62 * e),
                a.bezierCurveTo(93.5 * e, 60.5 * e, 93.5 * e, 60.5 * e, 91 * e, 59 * e),
                a.bezierCurveTo(91.5 * e, 57 * e, 91.5 * e, 57 * e, 92 * e, 55 * e),
                a.closePath(),
                he(a, i[3], i[4], 5 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(92 * e, 71 * e),
                a.bezierCurveTo(94.5 * e, 70.5 * e, 94.5 * e, 70.5 * e, 97 * e, 70 * e),
                a.bezierCurveTo(98.5 * e, 72.5 * e, 98.5 * e, 72.5 * e, 100 * e, 75 * e),
                a.bezierCurveTo(97 * e, 76.5 * e, 97 * e, 76.5 * e, 94 * e, 78 * e),
                a.closePath(),
                he(a, i[3], i[4], 5 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(95 * e, 82 * e),
                a.bezierCurveTo(96 * e, 83 * e, 96 * e, 83 * e, 97 * e, 84 * e),
                a.bezierCurveTo(97 * e, 85.5 * e, 97 * e, 85.5 * e, 97 * e, 87 * e),
                a.bezierCurveTo(93.5 * e, 87.5 * e, 93.5 * e, 87.5 * e, 90 * e, 88 * e),
                a.closePath(),
                he(a, i[3], i[4], 5 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(86 * e, 72 * e),
                a.bezierCurveTo(89 * e, 76 * e, 88 * e, 81 * e, 85 * e, 82 * e),
                a.bezierCurveTo(80 * e, 80 * e, 82 * e, 78 * e, 85 * e, 72 * e),
                a.closePath(),
                he(a, i[3], i[4], 5 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(80 * e, 86 * e),
                a.bezierCurveTo(84 * e, 88 * e, 86 * e, 88 * e, 85 * e, 93 * e),
                a.bezierCurveTo(80 * e, 96 * e, 79 * e, 96 * e, 76 * e, 91 * e),
                a.closePath(),
                he(a, i[3], i[4], 5 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(84 * e, 46 * e),
                a.bezierCurveTo(93 * e, 51 * e, 91 * e, 62 * e, 80 * e, 78 * e),
                a.bezierCurveTo(74 * e, 86 * e, 66 * e, 90 * e, 60 * e, 86 * e),
                a.bezierCurveTo(55 * e, 79 * e, 57 * e, 73 * e, 67 * e, 57 * e),
                a.bezierCurveTo(71 * e, 51 * e, 79 * e, 44 * e, 84 * e, 46 * e),
                a.closePath(),
                he(a, i[5], i[6], 5 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(76 * e, 60 * e),
                a.bezierCurveTo(80 * e, 66 * e, 75 * e, 74 * e, 68 * e, 74 * e),
                a.bezierCurveTo(60 * e, 64 * e, 68 * e, 59 * e, 76 * e, 59 * e),
                a.closePath(),
                he(a, i[7], i[8], 5 * e),
                n
            }
            function _t(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d")
                  , I = 70 * e
                  , T = 90 * e
                  , o = 4 * e
                  , r = 5 * e;
                return n.width = I,
                n.height = T,
                a.save(),
                a.translate(-80 * e, -70 * e + r),
                a.globalAlpha = .5,
                a.beginPath(),
                a.bezierCurveTo(130 * e, 79 * e, 132 * e, 86 * e, 130 * e, 93 * e),
                a.bezierCurveTo(128 * e, 100 * e, 121 * e, 107 * e, 120 * e, 107 * e),
                a.bezierCurveTo(120 * e, 107 * e, 115 * e, 98 * e, 115 * e, 92 * e),
                a.bezierCurveTo(115 * e, 86 * e, 119 * e, 76 * e, 127 * e, 73 * e),
                a.closePath(),
                he(a, "#0d1b1c"),
                a.restore(),
                a.save(),
                a.translate(-80 * e, -70 * e + r),
                a.globalAlpha = .5,
                a.beginPath(),
                a.bezierCurveTo(112 * e, 109 * e, 111 * e, 100 * e, 106 * e, 93 * e),
                a.bezierCurveTo(104 * e, 90 * e, 91 * e, 87 * e, 91 * e, 87 * e),
                a.bezierCurveTo(91 * e, 88 * e, 91 * e, 96 * e, 94 * e, 102 * e),
                a.bezierCurveTo(97 * e, 108 * e, 106 * e, 112 * e, 113 * e, 112 * e),
                a.closePath(),
                he(a, "#0d1b1c"),
                a.restore(),
                a.save(),
                a.translate(-80 * e, -70 * e + r),
                a.globalAlpha = .5,
                a.beginPath(),
                a.bezierCurveTo(108 * e, 120 * e, 100 * e, 119 * e, 91 * e, 127 * e),
                a.bezierCurveTo(83 * e, 134 * e, 82 * e, 146 * e, 83 * e, 146 * e),
                a.bezierCurveTo(84 * e, 146 * e, 98 * e, 142 * e, 103 * e, 138 * e),
                a.bezierCurveTo(107 * e, 135 * e, 110 * e, 130 * e, 112 * e, 121 * e),
                a.closePath(),
                he(a, "#0d1b1c"),
                a.restore(),
                a.save(),
                a.translate(3 * e, -93 * e + r),
                a.rotate(window.Math.PI / 5),
                a.globalAlpha = .5,
                a.beginPath(),
                a.bezierCurveTo(130 * e, 79 * e, 132 * e, 86 * e, 130 * e, 93 * e),
                a.bezierCurveTo(128 * e, 100 * e, 121 * e, 107 * e, 120 * e, 107 * e),
                a.bezierCurveTo(120 * e, 107 * e, 115 * e, 98 * e, 115 * e, 92 * e),
                a.bezierCurveTo(115 * e, 86 * e, 119 * e, 76 * e, 127 * e, 73 * e),
                a.closePath(),
                he(a, "#0d1b1c"),
                a.restore(),
                a.save(),
                a.translate(-80 * e, -70 * e),
                a.globalAlpha = 1,
                a.beginPath(),
                a.bezierCurveTo(130 * e, 79 * e, 132 * e, 86 * e, 130 * e, 93 * e),
                a.bezierCurveTo(128 * e, 100 * e, 121 * e, 107 * e, 120 * e, 107 * e),
                a.bezierCurveTo(120 * e, 107 * e, 115 * e, 98 * e, 115 * e, 92 * e),
                a.bezierCurveTo(115 * e, 86 * e, 119 * e, 76 * e, 127 * e, 73 * e),
                a.closePath(),
                he(a, i[0], i[1], o),
                a.restore(),
                a.save(),
                a.translate(-80 * e, -70 * e),
                a.globalAlpha = 1,
                a.beginPath(),
                a.bezierCurveTo(112 * e, 109 * e, 111 * e, 100 * e, 106 * e, 93 * e),
                a.bezierCurveTo(104 * e, 90 * e, 91 * e, 87 * e, 91 * e, 87 * e),
                a.bezierCurveTo(91 * e, 88 * e, 91 * e, 96 * e, 94 * e, 102 * e),
                a.bezierCurveTo(97 * e, 108 * e, 106 * e, 112 * e, 113 * e, 112 * e),
                a.closePath(),
                he(a, i[0], i[1], o),
                a.restore(),
                a.save(),
                a.translate(-80 * e, -70 * e),
                a.globalAlpha = 1,
                a.beginPath(),
                a.bezierCurveTo(108 * e, 120 * e, 100 * e, 119 * e, 91 * e, 127 * e),
                a.bezierCurveTo(83 * e, 134 * e, 82 * e, 146 * e, 83 * e, 146 * e),
                a.bezierCurveTo(84 * e, 146 * e, 98 * e, 142 * e, 103 * e, 138 * e),
                a.bezierCurveTo(107 * e, 135 * e, 110 * e, 130 * e, 112 * e, 121 * e),
                a.closePath(),
                he(a, i[0], i[1], o),
                a.restore(),
                a.save(),
                a.translate(3 * e, -93 * e),
                a.rotate(window.Math.PI / 5),
                a.globalAlpha = 1,
                a.beginPath(),
                a.bezierCurveTo(130 * e, 79 * e, 132 * e, 86 * e, 130 * e, 93 * e),
                a.bezierCurveTo(128 * e, 100 * e, 121 * e, 107 * e, 120 * e, 107 * e),
                a.bezierCurveTo(120 * e, 107 * e, 115 * e, 98 * e, 115 * e, 92 * e),
                a.bezierCurveTo(115 * e, 86 * e, 119 * e, 76 * e, 127 * e, 73 * e),
                a.closePath(),
                he(a, i[0], i[1], o),
                a.restore(),
                n
            }
            function ft(e, t, i, n, a, I, T, o, r, d, s=0) {
                var h = window.document.createElement("canvas")
                  , y = h.getContext("2d");
                I = I ? I * e : 0;
                var R = window.Math.floor(e * i);
                y.font = R + "px Baloo Paaji",
                y.lineJoin = "round",
                o *= e;
                var E = T ? 2 * o : 0;
                if (r)
                    var m = window.Math.min(y.measureText(t).width + 2 * e + E, r);
                else
                    m = y.measureText(t).width + 2 * e + E + s * e * 2;
                R = (R + I + s) * e + E;
                return h.width = m,
                h.height = R,
                T && (y.fillStyle = T,
                ye(y, 0, 0, m, R, 2 * o),
                y.fill(),
                y.translate(o, o)),
                y.textBaseline = "middle",
                y.font = i + "px Baloo Paaji",
                y.lineJoin = "round",
                a && (y.beginPath(),
                y.fillStyle = a,
                y.fillText(t, 0, R / 2 + I - E / 2, m)),
                y.beginPath(),
                d && (y.strokeStyle = d,
                y.lineWidth = s,
                y.strokeText(t, s, (R - E) / 2, m)),
                y.fillStyle = n,
                y.fillText(t, s, (R - E) / 2, m),
                h
            }
            function gt(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d")
                  , I = 220 * e
                  , T = 230 * e
                  , o = 100 * e
                  , r = o / 4
                  , d = 20 * e;
                return n.width = I,
                n.height = T,
                a.translate(I / 2, T / 2 + d),
                a.globalAlpha = .5,
                me(a, 7, o, r),
                he(a, i[0]),
                a.globalAlpha = 1,
                a.translate(0, -d),
                me(a, 7, o, r),
                he(a, i[1]),
                me(a, 6, .65 * o, .65 * r),
                he(a, i[2]),
                n
            }
            function lt(e, t, i, n) {
                var a = window.document.createElement("canvas")
                  , I = a.getContext("2d")
                  , T = 220 * e
                  , o = 220 * e
                  , r = 100 * e
                  , d = r / 4;
                return a.width = T,
                a.height = o,
                I.translate(T / 2, o / 2),
                I.globalAlpha = t ? .5 : 1,
                t || I.translate(0 * e, -8 * e),
                me(I, 7, r, d),
                he(I, t ? i[0] : i[1]),
                I.globalAlpha = 1,
                0 == n ? (me(I, 6, .65 * r, .65 * d),
                he(I, i[2])) : 1 == n && (I.translate(20 * e, 20 * e),
                me(I, 6, .45 * r, .4 * d),
                he(I, i[2])),
                a
            }
            function At(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d")
                  , I = 120 * e
                  , T = 150 * e
                  , o = 60 * e
                  , r = o / 4
                  , d = 15 * e;
                return n.width = I,
                n.height = T,
                a.save(),
                a.translate(I / 2 + 0 * e, T / 2 + 0 * e + d),
                a.rotate(window.Math.PI / 3),
                a.globalAlpha = .5,
                me(a, 8, o, r),
                he(a, i[0]),
                a.restore(),
                a.save(),
                a.translate(I / 2 - 11 * e, T / 2 + 12 * e),
                a.globalAlpha = 1,
                a.rotate(window.Math.PI / 3),
                a.translate(0, -d),
                me(a, 8, o, r),
                he(a, i[1]),
                a.restore(),
                a.save(),
                a.translate(I / 2 - 9 * e, T / 2 - 12 * e),
                a.rotate(window.Math.PI / 2.8),
                me(a, 5, .5 * o, .4 * r),
                he(a, i[2]),
                a.restore(),
                a.save(),
                a.translate(I / 2 + 19 * e, T / 2 + 5 * e),
                a.rotate(window.Math.PI / 1),
                me(a, 5, .5 * o, .4 * r),
                he(a, i[2]),
                a.restore(),
                a.save(),
                a.translate(I / 2 - 8 * e, T / 2 + 20 * e),
                a.rotate(window.Math.PI / 2.25),
                me(a, 5, .5 * o, .4 * r),
                he(a, i[2]),
                a.restore(),
                n
            }
            function bt(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d")
                  , I = 180 * e
                  , T = 210 * e
                  , o = (d = 60 * e) / 4
                  , r = 20 * e;
                n.width = I,
                n.height = T,
                a.save(),
                a.translate(I / 2 - 0 * e, T / 2 - 35 * e + r),
                a.rotate(window.Math.PI / -1.8),
                a.globalAlpha = .5,
                a.translate(0 * e, -20 * e),
                me(a, 5, d, o),
                he(a, i[0]),
                a.restore(),
                a.save(),
                a.translate(I / 2 + 10 * e, T / 2 + 15 * e + r),
                a.rotate(window.Math.PI / 2),
                a.globalAlpha = .5,
                a.translate(0 * e, -20 * e),
                me(a, 5, d, o),
                he(a, i[0]),
                a.restore(),
                a.save(),
                a.translate(I / 2 - 50 * e, T / 2 + 40 * e + r),
                a.rotate(window.Math.PI / 3),
                a.globalAlpha = .5,
                a.translate(0, -20 * e),
                me(a, 5, d, o),
                he(a, i[0]),
                a.restore(),
                a.save(),
                a.translate(I / 2 - 0 * e, T / 2 - 35 * e),
                a.rotate(window.Math.PI / -1.8),
                a.globalAlpha = 1,
                a.translate(0 * e, -20 * e),
                me(a, 5, d, o),
                he(a, i[1]),
                a.restore(),
                a.save(),
                a.translate(I / 2 + 10 * e, T / 2 + 15 * e),
                a.rotate(window.Math.PI / 2),
                a.globalAlpha = 1,
                a.translate(0, -20 * e),
                me(a, 5, d, o),
                he(a, i[1]),
                a.restore(),
                a.save(),
                a.translate(I / 2 - 50 * e, T / 2 + 40 * e),
                a.rotate(window.Math.PI / 3),
                a.globalAlpha = 1,
                a.translate(0, -20 * e),
                me(a, 5, d, o),
                he(a, i[1]),
                a.restore();
                var d;
                o = (d = 30 * e) / 4;
                return a.save(),
                a.translate(I / 2 + 5 * e, T / 2 - 20 * e),
                a.rotate(window.Math.PI / -1.8),
                a.globalAlpha = 1,
                a.translate(0, -20 * e),
                me(a, 5, d, o),
                he(a, i[2]),
                a.restore(),
                a.save(),
                a.translate(I / 2 + 0 * e, T / 2 + 10 * e),
                a.rotate(window.Math.PI / 2),
                a.globalAlpha = 1,
                a.translate(0, -20 * e),
                me(a, 5, d, o),
                he(a, i[2]),
                a.restore(),
                a.save(),
                a.translate(I / 2 - 45 * e, T / 2 + 35 * e),
                a.rotate(window.Math.PI / 3),
                a.globalAlpha = 1,
                a.translate(0, -20 * e),
                me(a, 5, d, o),
                he(a, i[2]),
                a.restore(),
                Re(a, I / 2 - 7 * e, T / 2 + 7 * e, 5),
                he(a, i[2]),
                n
            }
            function Nt(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d")
                  , I = 140 * e
                  , T = 150 * e
                  , o = 10 * e
                  , r = 4 * e;
                return n.width = I,
                n.height = T,
                a.translate(-50 * e, -38 * e + o),
                a.globalAlpha = t ? .5 : 1,
                a.beginPath(),
                a.bezierCurveTo(160 * e, 65 * e, 160 * e, 85 * e, 152 * e, 95 * e),
                a.bezierCurveTo(152 * e, 95 * e, 173 * e, 94 * e, 187 * e, 102 * e),
                a.bezierCurveTo(187 * e, 102 * e, 180 * e, 120 * e, 155 * e, 126 * e),
                a.bezierCurveTo(154 * e, 126 * e, 166 * e, 138 * e, 169 * e, 148 * e),
                a.bezierCurveTo(169 * e, 148 * e, 148 * e, 152 * e, 133 * e, 140 * e),
                a.bezierCurveTo(133 * e, 140 * e, 134 * e, 160 * e, 122 * e, 175 * e),
                a.bezierCurveTo(122 * e, 175 * e, 107 * e, 162 * e, 107 * e, 144 * e),
                a.bezierCurveTo(107 * e, 144 * e, 98 * e, 164 * e, 73 * e, 167 * e),
                a.bezierCurveTo(73 * e, 167 * e, 72 * e, 134 * e, 90 * e, 127 * e),
                a.bezierCurveTo(90 * e, 127 * e, 70 * e, 134 * e, 55 * e, 123 * e),
                a.bezierCurveTo(55 * e, 123 * e, 58 * e, 115 * e, 75 * e, 104 * e),
                a.bezierCurveTo(75 * e, 104 * e, 66 * e, 96 * e, 61 * e, 77 * e),
                a.bezierCurveTo(61 * e, 77 * e, 83 * e, 74 * e, 102 * e, 89 * e),
                a.bezierCurveTo(102 * e, 89 * e, 92 * e, 66 * e, 110 * e, 41 * e),
                a.bezierCurveTo(111 * e, 40 * e, 130 * e, 54 * e, 130 * e, 82 * e),
                a.bezierCurveTo(130 * e, 82 * e, 143 * e, 67 * e, 159 * e, 65 * e),
                a.closePath(),
                he(a, i[0]),
                a.translate(0, 0 - o),
                a.globalAlpha = 1,
                a.beginPath(),
                a.bezierCurveTo(160 * e, 65 * e, 160 * e, 85 * e, 152 * e, 95 * e),
                a.bezierCurveTo(152 * e, 95 * e, 173 * e, 94 * e, 187 * e, 102 * e),
                a.bezierCurveTo(187 * e, 102 * e, 180 * e, 120 * e, 155 * e, 126 * e),
                a.bezierCurveTo(154 * e, 126 * e, 166 * e, 138 * e, 169 * e, 148 * e),
                a.bezierCurveTo(169 * e, 148 * e, 148 * e, 152 * e, 133 * e, 140 * e),
                a.bezierCurveTo(133 * e, 140 * e, 134 * e, 160 * e, 122 * e, 175 * e),
                a.bezierCurveTo(122 * e, 175 * e, 107 * e, 162 * e, 107 * e, 144 * e),
                a.bezierCurveTo(107 * e, 144 * e, 98 * e, 164 * e, 73 * e, 167 * e),
                a.bezierCurveTo(73 * e, 167 * e, 72 * e, 134 * e, 90 * e, 127 * e),
                a.bezierCurveTo(90 * e, 127 * e, 70 * e, 134 * e, 55 * e, 123 * e),
                a.bezierCurveTo(55 * e, 123 * e, 58 * e, 115 * e, 75 * e, 104 * e),
                a.bezierCurveTo(75 * e, 104 * e, 66 * e, 96 * e, 61 * e, 77 * e),
                a.bezierCurveTo(61 * e, 77 * e, 83 * e, 74 * e, 102 * e, 89 * e),
                a.bezierCurveTo(102 * e, 89 * e, 92 * e, 66 * e, 110 * e, 41 * e),
                a.bezierCurveTo(111 * e, 40 * e, 130 * e, 54 * e, 130 * e, 82 * e),
                a.bezierCurveTo(130 * e, 82 * e, 143 * e, 67 * e, 159 * e, 65 * e),
                a.closePath(),
                he(a, i[1], i[2], r),
                n
            }
            function vt(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d")
                  , I = 18 * e
                  , T = 18 * e;
                n.width = I,
                n.height = T;
                var o = 9 * e
                  , r = 9 * e
                  , d = 8 * e;
                a.save(),
                a.translate(o, r),
                a.globalAlpha = 1,
                Re(a, 0, 0, d),
                he(a, i[0]);
                d = 3 * e,
                o = 0,
                r = -3 * e;
                return a.translate(o, r),
                a.globalAlpha = 1,
                Re(a, 0, 0, d),
                he(a, i[1]),
                a.restore(),
                n
            }
            function Dt(e, t) {
                var i = window.document.createElement("canvas")
                  , n = i.getContext("2d");
                return i.width = 234 * e,
                i.height = 183 * e,
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(76 * e, 25 * e),
                n.bezierCurveTo(150 * e, 3 * e, 181 * e, 22 * e, 203 * e, 41 * e),
                n.bezierCurveTo(225 * e, 63 * e, 225 * e, 105 * e, 198 * e, 133 * e),
                n.bezierCurveTo(179 * e, 157 * e, 134 * e, 178 * e, 81 * e, 164 * e),
                n.bezierCurveTo(19 * e, 148 * e, 6 * e, 95 * e, 21 * e, 66 * e),
                n.bezierCurveTo(34 * e, 39 * e, 52 * e, 33 * e, 75 * e, 25 * e),
                n.closePath(),
                he(n, t[0], t[0], 4 * e),
                i
            }
            function Ot(e, t, i, n, a) {
                var I = window.document.createElement("canvas")
                  , T = I.getContext("2d");
                if (0 == n) {
                    var o = 270 * e
                      , r = 250 * e;
                    I.width = o,
                    I.height = r,
                    T.beginPath(),
                    T.moveTo(140 * e, 3 * e),
                    T.translate(-25 * e, -20 * e),
                    T.bezierCurveTo(218 * e, 31 * e, 251 * e, 61 * e, 265 * e, 85 * e),
                    T.bezierCurveTo(278 * e, 108 * e, 295 * e, 160 * e, 285 * e, 195 * e),
                    T.bezierCurveTo(271 * e, 242 * e, 213 * e, 268 * e, 188 * e, 266 * e),
                    T.bezierCurveTo(139 * e, 262 * e, 70 * e, 244 * e, 47 * e, 204 * e),
                    T.bezierCurveTo(20 * e, 158 * e, 35 * e, 78 * e, 59 * e, 56 * e),
                    T.bezierCurveTo(90 * e, 28 * e, 124 * e, 23 * e, 140 * e, 23 * e),
                    T.closePath(),
                    he(T, i[0])
                } else if (1 == n) {
                    o = 430 * e,
                    r = 350 * e;
                    I.width = o,
                    I.height = r,
                    T.beginPath(),
                    T.moveTo(180 * e, 5 * e),
                    T.translate(-30 * e, -60 * e),
                    T.bezierCurveTo(283 * e, 60 * e, 265 * e, 163 * e, 335 * e, 206 * e),
                    T.bezierCurveTo(376 * e, 231 * e, 492 * e, 299 * e, 434 * e, 357 * e),
                    T.bezierCurveTo(371 * e, 421 * e, 289 * e, 394 * e, 255 * e, 386 * e),
                    T.bezierCurveTo(218 * e, 377 * e, 91 * e, 359 * e, 50 * e, 272 * e),
                    T.bezierCurveTo(12 * e, 192 * e, 107 * e, 75 * e, 178 * e, 69 * e),
                    T.closePath(),
                    he(T, i[0])
                } else if (2 == n) {
                    o = 400 * e,
                    r = 300 * e;
                    I.width = o,
                    I.height = r,
                    T.beginPath(),
                    T.moveTo(80 * e, 52 * e),
                    T.translate(-40 * e, -30 * e),
                    T.bezierCurveTo(124 * e, 77 * e, 241 * e, 22 * e, 311 * e, 65 * e),
                    T.bezierCurveTo(352 * e, 90 * e, 404 * e, 176 * e, 346 * e, 234 * e),
                    T.bezierCurveTo(283 * e, 298 * e, 179 * e, 299 * e, 145 * e, 291 * e),
                    T.bezierCurveTo(108 * e, 282 * e, 100 * e, 239 * e, 63 * e, 205 * e),
                    T.bezierCurveTo(37 * e, 181 * e, 45 * e, 131 * e, 80 * e, 107 * e),
                    T.closePath(),
                    he(T, i[0])
                }
                return I
            }
            function kt(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d")
                  , I = e * t * 2
                  , T = e * t * 2
                  , o = I / 2
                  , r = T / 2;
                return n.width = I,
                n.height = T,
                a.translate(o, r),
                Re(a, 0, 0, t * e),
                he(a, i),
                n
            }
            function Ct(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                return n.width = 373 * e,
                n.height = 314 * e,
                a.globalAlpha = t ? .5 : 1,
                a.translate(5 * e, 5 * e),
                a.save(),
                a.translate(184.048583984375 * e, 69.1805419921875 * e),
                ye(a, -40 * e, -28.5 * e, 80 * e, 57 * e, 10 * e),
                a.restore(),
                he(a, i[1], i[2], 4 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(185.048583984375 * e, 61.6805419921875 * e),
                a.bezierCurveTo(145.048583984375 * e, 59.6805419921875 * e, 138.048583984375 * e, 41.6805419921875 * e, 148.048583984375 * e, 33.6805419921875 * e),
                a.bezierCurveTo(169.048583984375 * e, 17.6805419921875 * e, 194.048583984375 * e, 20.6805419921875 * e, 210.048583984375 * e, 27.6805419921875 * e),
                a.bezierCurveTo(234.048583984375 * e, 40.6805419921875 * e, 225.048583984375 * e, 57.6805419921875 * e, 186.048583984375 * e, 61.6805419921875 * e),
                a.closePath(),
                he(a, i[0], i[0], 6 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(224.048583984375 * e, 56.6805419921875 * e),
                a.bezierCurveTo(326.048583984375 * e, 69.6805419921875 * e, 363.048583984375 * e, 148.6805419921875 * e, 349.048583984375 * e, 206.6805419921875 * e),
                a.bezierCurveTo(329.048583984375 * e, 278.6805419921875 * e, 252.048583984375 * e, 283.6805419921875 * e, 206.048583984375 * e, 275.6805419921875 * e),
                a.bezierCurveTo(206.548583984375 * e, 266.6805419921875 * e, 206.548583984375 * e, 266.6805419921875 * e, 207.048583984375 * e, 257.6805419921875 * e),
                a.bezierCurveTo(276.048583984375 * e, 268.6805419921875 * e, 308.048583984375 * e, 239.6805419921875 * e, 323.048583984375 * e, 208.6805419921875 * e),
                a.bezierCurveTo(352.048583984375 * e, 145.6805419921875 * e, 292.048583984375 * e, 86.6805419921875 * e, 223.048583984375 * e, 74.6805419921875 * e),
                a.closePath(),
                he(a, i[0], i[0], 6 * e),
                a.save(),
                a.translate(183.548583984375 * e, 119.6805419921875 * e),
                ye(a, -121.5 * e, -45 * e, 243 * e, 90 * e, 40 * e),
                a.restore(),
                he(a, i[0], i[0], 6 * e),
                a.save(),
                a.translate(183.048583984375 * e, 155.6805419921875 * e),
                ye(a, -121 * e, -52 * e, 242 * e, 104 * e, 40 * e),
                a.restore(),
                he(a, i[0], i[0], 6 * e),
                a.save(),
                a.translate(183.048583984375 * e, 205.1805419921875 * e),
                ye(a, -121 * e, -50.5 * e, 242 * e, 101 * e, 40 * e),
                a.restore(),
                he(a, i[0], i[0], 6 * e),
                a.save(),
                a.translate(185.048583984375 * e, 204.1805419921875 * e),
                ye(a, -100 * e, -34.5 * e, 200 * e, 69 * e, 40 * e),
                a.restore(),
                he(a, i[0], i[0], 6 * e),
                Re(a, 185.048583984375 * e, 257.6805419921875 * e, 27.018512172212592 * e),
                he(a, i[0], i[0], 6 * e),
                a.globalAlpha = 1,
                a.translate(-5 * e, -5 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(224.048583984375 * e, 56.6805419921875 * e),
                a.bezierCurveTo(326.048583984375 * e, 69.6805419921875 * e, 363.048583984375 * e, 148.6805419921875 * e, 349.048583984375 * e, 206.6805419921875 * e),
                a.bezierCurveTo(329.048583984375 * e, 278.6805419921875 * e, 252.048583984375 * e, 283.6805419921875 * e, 206.048583984375 * e, 275.6805419921875 * e),
                a.bezierCurveTo(206.548583984375 * e, 266.6805419921875 * e, 206.548583984375 * e, 266.6805419921875 * e, 207.048583984375 * e, 257.6805419921875 * e),
                a.bezierCurveTo(276.048583984375 * e, 268.6805419921875 * e, 308.048583984375 * e, 239.6805419921875 * e, 323.048583984375 * e, 208.6805419921875 * e),
                a.bezierCurveTo(352.048583984375 * e, 145.6805419921875 * e, 292.048583984375 * e, 86.6805419921875 * e, 223.048583984375 * e, 74.6805419921875 * e),
                a.closePath(),
                he(a, i[3], i[4], 6 * e),
                a.save(),
                a.translate(184.048583984375 * e, 69.1805419921875 * e),
                ye(a, -40 * e, -28.5 * e, 80 * e, 57 * e, 10 * e),
                a.restore(),
                he(a, i[1], i[2], 4 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(185.048583984375 * e, 61.6805419921875 * e),
                a.bezierCurveTo(145.048583984375 * e, 59.6805419921875 * e, 138.048583984375 * e, 41.6805419921875 * e, 148.048583984375 * e, 33.6805419921875 * e),
                a.bezierCurveTo(169.048583984375 * e, 17.6805419921875 * e, 194.048583984375 * e, 20.6805419921875 * e, 210.048583984375 * e, 27.6805419921875 * e),
                a.bezierCurveTo(234.048583984375 * e, 40.6805419921875 * e, 225.048583984375 * e, 57.6805419921875 * e, 186.048583984375 * e, 61.6805419921875 * e),
                a.closePath(),
                he(a, i[1], i[2], 6 * e),
                a.save(),
                a.translate(183.548583984375 * e, 119.6805419921875 * e),
                ye(a, -121.5 * e, -45 * e, 243 * e, 90 * e, 40 * e),
                a.restore(),
                he(a, i[5], i[4], 6 * e),
                a.save(),
                a.translate(183.048583984375 * e, 155.6805419921875 * e),
                ye(a, -121 * e, -52 * e, 242 * e, 104 * e, 40 * e),
                a.restore(),
                he(a, i[3], i[4], 6 * e),
                a.save(),
                a.translate(183.048583984375 * e, 205.1805419921875 * e),
                ye(a, -121 * e, -50.5 * e, 242 * e, 101 * e, 40 * e),
                a.restore(),
                he(a, i[6], i[4], 6 * e),
                a.globalCompositeOperation = "destination-out",
                a.save(),
                a.translate(185.048583984375 * e, 204.1805419921875 * e),
                ye(a, -100 * e, -34.5 * e, 200 * e, 69 * e, 40 * e),
                a.restore(),
                he(a, i[7], i[8], 6 * e),
                a.globalCompositeOperation = "source-over",
                a.globalAlpha = .5,
                a.save(),
                a.translate(185.048583984375 * e, 204.1805419921875 * e),
                ye(a, -100 * e, -34.5 * e, 200 * e, 69 * e, 40 * e),
                a.restore(),
                he(a, i[7], i[8], 6 * e),
                a.globalAlpha = 1,
                a.save(),
                Re(a, 185.048583984375 * e, 257.6805419921875 * e, 27.018512172212592 * e),
                he(a, i[3], i[4], 6 * e),
                a.restore(),
                n
            }
            function Lt(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                return n.width = 220 * e,
                n.height = 180 * e,
                a.globalAlpha = t ? .5 : 1,
                a.translate(-90 * e, -150 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(104 * e, 237.8000030517578 * e),
                a.bezierCurveTo(110 * e, 237.8000030517578 * e, 110 * e, 237.8000030517578 * e, 116 * e, 237.8000030517578 * e),
                a.bezierCurveTo(116 * e, 241.8000030517578 * e, 116 * e, 241.8000030517578 * e, 116 * e, 245.8000030517578 * e),
                a.bezierCurveTo(115 * e, 245.3000030517578 * e, 115 * e, 245.3000030517578 * e, 114 * e, 244.8000030517578 * e),
                a.bezierCurveTo(109.5 * e, 244.8000030517578 * e, 109.5 * e, 244.8000030517578 * e, 105 * e, 244.8000030517578 * e),
                a.closePath(),
                he(a, i[5], i[5], 2 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(115 * e, 211.20000457763672 * e),
                a.bezierCurveTo(106 * e, 216.20000457763672 * e, 101 * e, 234.20000457763672 * e, 102 * e, 241.20000457763672 * e),
                a.bezierCurveTo(102 * e, 260.2000045776367 * e, 115 * e, 269.2000045776367 * e, 115 * e, 269.2000045776367 * e),
                a.bezierCurveTo(116 * e, 265.2000045776367 * e, 115.5 * e, 265.2000045776367 * e, 116 * e, 261.2000045776367 * e),
                a.bezierCurveTo(112 * e, 264 * e, 108 * e, 254 * e, 106 * e, 242 * e),
                a.bezierCurveTo(105 * e, 232 * e, 110 * e, 222 * e, 115 * e, 218 * e),
                a.bezierCurveTo(116 * e, 216.75 * e, 115.5 * e, 217.375 * e, 116 * e, 216.75 * e),
                a.closePath(),
                he(a, i[5], i[5], 2 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(120 * e, 207 * e),
                a.bezierCurveTo(115 * e, 206 * e, 114 * e, 209 * e, 114 * e, 211 * e),
                a.bezierCurveTo(114 * e, 268 * e, 114 * e, 241 * e, 114 * e, 271 * e),
                a.bezierCurveTo(115 * e, 276 * e, 118 * e, 276 * e, 120 * e, 276 * e),
                a.bezierCurveTo(122 * e, 273 * e, 120.5 * e, 274.5 * e, 121 * e, 273 * e),
                a.bezierCurveTo(121 * e, 241 * e, 121 * e, 241 * e, 121 * e, 209 * e),
                a.closePath(),
                he(a, i[4], i[4], 2 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(284 * e, 238 * e),
                a.bezierCurveTo(289.5 * e, 238 * e, 289.5 * e, 238 * e, 295 * e, 238 * e),
                a.bezierCurveTo(295 * e, 241.5 * e, 295 * e, 241.5 * e, 295 * e, 245 * e),
                a.bezierCurveTo(289.5 * e, 245 * e, 289.5 * e, 245 * e, 284 * e, 245 * e),
                a.closePath(),
                he(a, i[4], i[4], 2 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(283 * e, 211 * e),
                a.bezierCurveTo(293 * e, 216 * e, 297 * e, 231 * e, 297 * e, 241 * e),
                a.bezierCurveTo(298 * e, 254 * e, 290 * e, 265 * e, 284 * e, 269 * e),
                a.bezierCurveTo(283 * e, 266 * e, 283.5 * e, 266 * e, 283 * e, 263 * e),
                a.bezierCurveTo(290 * e, 260 * e, 292 * e, 251 * e, 293 * e, 242 * e),
                a.bezierCurveTo(292 * e, 223 * e, 289 * e, 224 * e, 284 * e, 218 * e),
                a.closePath(),
                he(a, i[4], i[4], 2 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(280 * e, 206 * e),
                a.bezierCurveTo(284 * e, 206 * e, 285 * e, 208 * e, 285 * e, 211 * e),
                a.bezierCurveTo(285 * e, 241.5 * e, 285 * e, 241.5 * e, 285 * e, 272 * e),
                a.bezierCurveTo(284 * e, 275 * e, 284 * e, 275 * e, 280 * e, 275 * e),
                a.bezierCurveTo(279 * e, 273.5 * e, 279 * e, 273.5 * e, 278 * e, 272 * e),
                a.bezierCurveTo(278 * e, 240.5 * e, 278 * e, 240.5 * e, 278 * e, 209 * e),
                a.closePath(),
                he(a, i[4], i[4], 2 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(138 * e, 298.40000915527344 * e),
                a.bezierCurveTo(141 * e, 311.40000915527344 * e, 151 * e, 314.40000915527344 * e, 162 * e, 316.40000915527344 * e),
                a.bezierCurveTo(224 * e, 316.40000915527344 * e, 200 * e, 315.90000915527344 * e, 238 * e, 315.40000915527344 * e),
                a.bezierCurveTo(254 * e, 316.40000915527344 * e, 261 * e, 306.40000915527344 * e, 264 * e, 298.40000915527344 * e),
                a.bezierCurveTo(255 * e, 304.40000915527344 * e, 250 * e, 306.40000915527344 * e, 244 * e, 306.40000915527344 * e),
                a.bezierCurveTo(201 * e, 306.90000915527344 * e, 201 * e, 306.90000915527344 * e, 158 * e, 307.40000915527344 * e),
                a.bezierCurveTo(150 * e, 306.40000915527344 * e, 148 * e, 306.40000915527344 * e, 139 * e, 300.40000915527344 * e),
                a.closePath(),
                he(a, i[4], i[4], 2 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(161 * e, 177.5999984741211 * e),
                a.bezierCurveTo(130 * e, 175.5999984741211 * e, 123 * e, 190.5999984741211 * e, 122 * e, 205.5999984741211 * e),
                a.bezierCurveTo(121 * e, 277.5999984741211 * e, 122 * e, 242.5999984741211 * e, 122 * e, 279.5999984741211 * e),
                a.bezierCurveTo(128 * e, 297.5999984741211 * e, 137 * e, 299.5999984741211 * e, 143 * e, 300.5999984741211 * e),
                a.bezierCurveTo(163 * e, 301.0999984741211 * e, 163 * e, 301.0999984741211 * e, 183 * e, 301.5999984741211 * e),
                a.bezierCurveTo(150 * e, 300.5999984741211 * e, 135 * e, 290.5999984741211 * e, 134 * e, 267.5999984741211 * e),
                a.bezierCurveTo(133 * e, 245.5999984741211 * e, 146 * e, 235.5999984741211 * e, 164 * e, 235.5999984741211 * e),
                a.bezierCurveTo(206 * e, 236.0999984741211 * e, 206 * e, 236.0999984741211 * e, 248 * e, 236.5999984741211 * e),
                a.bezierCurveTo(266 * e, 243.5999984741211 * e, 268 * e, 259.5999984741211 * e, 267 * e, 266.5999984741211 * e),
                a.bezierCurveTo(266 * e, 288.5999984741211 * e, 251 * e, 294.5999984741211 * e, 244 * e, 297.5999984741211 * e),
                a.bezierCurveTo(228.5 * e, 299.5999984741211 * e, 228.5 * e, 299.5999984741211 * e, 213 * e, 301.5999984741211 * e),
                a.bezierCurveTo(236 * e, 301.0999984741211 * e, 236 * e, 301.0999984741211 * e, 259 * e, 300.5999984741211 * e),
                a.bezierCurveTo(272 * e, 295.5999984741211 * e, 277 * e, 288.5999984741211 * e, 278 * e, 271.5999984741211 * e),
                a.bezierCurveTo(277.5 * e, 236.5999984741211 * e, 277.5 * e, 236.5999984741211 * e, 277 * e, 201.5999984741211 * e),
                a.bezierCurveTo(276 * e, 186.5999984741211 * e, 265 * e, 178.5999984741211 * e, 254 * e, 177.5999984741211 * e),
                a.bezierCurveTo(247.5 * e, 177.5999984741211 * e, 247.5 * e, 177.5999984741211 * e, 241 * e, 177.5999984741211 * e),
                a.bezierCurveTo(255 * e, 202.5999984741211 * e, 214 * e, 217.5999984741211 * e, 201 * e, 215.5999984741211 * e),
                a.bezierCurveTo(170 * e, 215.5999984741211 * e, 152 * e, 197.5999984741211 * e, 161 * e, 178.5999984741211 * e),
                a.closePath(),
                he(a, i[4], i[4], 2 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(162 * e, 175.5999984741211 * e),
                a.bezierCurveTo(153 * e, 176.0999984741211 * e, 153 * e, 176.0999984741211 * e, 144 * e, 176.5999984741211 * e),
                a.bezierCurveTo(125 * e, 178.5999984741211 * e, 121 * e, 196.5999984741211 * e, 121 * e, 207.5999984741211 * e),
                a.bezierCurveTo(121 * e, 243.20000076293945 * e, 121 * e, 243.20000076293945 * e, 121 * e, 278.8000030517578 * e),
                a.bezierCurveTo(126 * e, 298.8000030517578 * e, 137 * e, 300.8000030517578 * e, 146 * e, 302.8000030517578 * e),
                a.bezierCurveTo(200.5 * e, 302.8000030517578 * e, 200.5 * e, 302.8000030517578 * e, 255 * e, 302.8000030517578 * e),
                a.bezierCurveTo(271 * e, 301.8000030517578 * e, 279 * e, 288.8000030517578 * e, 279 * e, 273.8000030517578 * e),
                a.bezierCurveTo(279 * e, 236.8000030517578 * e, 279 * e, 236.8000030517578 * e, 279 * e, 199.8000030517578 * e),
                a.bezierCurveTo(274 * e, 178.8000030517578 * e, 263 * e, 177.8000030517578 * e, 255 * e, 175.8000030517578 * e),
                a.bezierCurveTo(248 * e, 175.8000030517578 * e, 248 * e, 175.8000030517578 * e, 241 * e, 175.8000030517578 * e),
                a.bezierCurveTo(240 * e, 175.8000030517578 * e, 240 * e, 175.8000030517578 * e, 239 * e, 175.8000030517578 * e),
                a.bezierCurveTo(254 * e, 200.8000030517578 * e, 222 * e, 211.8000030517578 * e, 202 * e, 212.8000030517578 * e),
                a.bezierCurveTo(168 * e, 213.8000030517578 * e, 151 * e, 190.8000030517578 * e, 163 * e, 176.8000030517578 * e),
                a.closePath(),
                he(a, void 0, i[4], 6 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(198 * e, 161.4000015258789 * e),
                a.bezierCurveTo(198 * e, 186.9000015258789 * e, 198 * e, 186.9000015258789 * e, 198 * e, 212.4000015258789 * e),
                a.bezierCurveTo(201 * e, 212.4000015258789 * e, 201 * e, 212.4000015258789 * e, 204 * e, 212.4000015258789 * e),
                a.bezierCurveTo(204 * e, 186.9000015258789 * e, 204 * e, 186.9000015258789 * e, 204 * e, 161.4000015258789 * e),
                a.closePath(),
                he(a, i[4], i[4], 2 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(161 * e, 194 * e),
                a.bezierCurveTo(188 * e, 169 * e, 231 * e, 179 * e, 241 * e, 194 * e),
                a.bezierCurveTo(239.5 * e, 196 * e, 239.5 * e, 196 * e, 238 * e, 198 * e),
                a.bezierCurveTo(221 * e, 179 * e, 182 * e, 182 * e, 165 * e, 198 * e),
                a.closePath(),
                he(a, i[4], i[4], 2 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(157 * e, 188.80000019073486 * e),
                a.bezierCurveTo(162 * e, 150.80000019073486 * e, 241 * e, 150.80000019073486 * e, 245 * e, 188.80000019073486 * e),
                a.bezierCurveTo(242 * e, 224.80000019073486 * e, 162 * e, 228.80000019073486 * e, 157 * e, 188.80000019073486 * e),
                a.bezierCurveTo(159 * e, 188.80000019073486 * e, 159 * e, 188.80000019073486 * e, 161 * e, 188.80000019073486 * e),
                a.bezierCurveTo(168 * e, 216.80000019073486 * e, 231 * e, 218.80000019073486 * e, 241 * e, 188.80000019073486 * e),
                a.bezierCurveTo(236 * e, 156.80000019073486 * e, 169 * e, 152.80000019073486 * e, 161 * e, 188.80000019073486 * e),
                a.closePath(),
                he(a, i[4], i[4], 2 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(156 * e, 188 * e),
                a.bezierCurveTo(160 * e, 164 * e, 183 * e, 159 * e, 201 * e, 158 * e),
                a.bezierCurveTo(232 * e, 159 * e, 244 * e, 174 * e, 246 * e, 188 * e),
                a.bezierCurveTo(245 * e, 212 * e, 213 * e, 219 * e, 201 * e, 218 * e),
                a.bezierCurveTo(181 * e, 221 * e, 158 * e, 207 * e, 156 * e, 190 * e),
                a.closePath(),
                he(a, void 0, i[4], 6 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(162 * e, 189 * e),
                a.bezierCurveTo(166 * e, 170 * e, 185 * e, 165 * e, 201 * e, 164 * e),
                a.bezierCurveTo(227 * e, 165 * e, 240 * e, 178 * e, 239 * e, 188 * e),
                a.bezierCurveTo(239 * e, 204 * e, 210 * e, 210 * e, 201 * e, 210 * e),
                a.bezierCurveTo(182 * e, 211 * e, 166 * e, 200 * e, 162 * e, 190 * e),
                a.closePath(),
                he(a, void 0, i[4], 6 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(131 * e, 262 * e),
                a.bezierCurveTo(136 * e, 241 * e, 144 * e, 236 * e, 158 * e, 233 * e),
                a.bezierCurveTo(200.5 * e, 233 * e, 229 * e, 232 * e, 243 * e, 233 * e),
                a.bezierCurveTo(259 * e, 235 * e, 267 * e, 248 * e, 269 * e, 260 * e),
                a.bezierCurveTo(269 * e, 266.5 * e, 269 * e, 266.5 * e, 269 * e, 273 * e),
                a.bezierCurveTo(265 * e, 290 * e, 251 * e, 297 * e, 242 * e, 298 * e),
                a.bezierCurveTo(202 * e, 298 * e, 202 * e, 298 * e, 162 * e, 298 * e),
                a.bezierCurveTo(148 * e, 298 * e, 136 * e, 289 * e, 132 * e, 273 * e),
                a.bezierCurveTo(131.5 * e, 268 * e, 131.5 * e, 268 * e, 131 * e, 263 * e),
                a.bezierCurveTo(135 * e, 263 * e, 135 * e, 263 * e, 139 * e, 263 * e),
                a.bezierCurveTo(139 * e, 281 * e, 151 * e, 287 * e, 160 * e, 290 * e),
                a.bezierCurveTo(200.5 * e, 290 * e, 200.5 * e, 290 * e, 241 * e, 290 * e),
                a.bezierCurveTo(252 * e, 290 * e, 257 * e, 281 * e, 262 * e, 271 * e),
                a.bezierCurveTo(261.5 * e, 267 * e, 261.5 * e, 267 * e, 261 * e, 263 * e),
                a.bezierCurveTo(260 * e, 249 * e, 251 * e, 242 * e, 241 * e, 241 * e),
                a.bezierCurveTo(240.5 * e, 240.5 * e, 240.5 * e, 240.5 * e, 240 * e, 240 * e),
                a.bezierCurveTo(200 * e, 240 * e, 200 * e, 240 * e, 160 * e, 240 * e),
                a.bezierCurveTo(145 * e, 244 * e, 142 * e, 250 * e, 139 * e, 264 * e),
                a.closePath(),
                he(a, i[4], i[4], 2 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(130 * e, 264 * e),
                a.bezierCurveTo(132 * e, 244 * e, 144 * e, 235 * e, 157 * e, 232 * e),
                a.bezierCurveTo(245 * e, 232 * e, 201 * e, 232 * e, 245 * e, 232 * e),
                a.bezierCurveTo(264 * e, 235 * e, 269 * e, 251 * e, 270 * e, 264 * e),
                a.bezierCurveTo(272 * e, 291 * e, 248 * e, 299 * e, 242 * e, 299 * e),
                a.bezierCurveTo(200 * e, 299 * e, 200 * e, 299 * e, 158 * e, 299 * e),
                a.bezierCurveTo(139 * e, 298 * e, 130 * e, 276 * e, 130 * e, 265 * e),
                a.closePath(),
                he(a, void 0, i[4], 6 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(140 * e, 265.33333587646484 * e),
                a.bezierCurveTo(141 * e, 250.33333587646484 * e, 148 * e, 244.33333587646484 * e, 160 * e, 241.33333587646484 * e),
                a.bezierCurveTo(200 * e, 241.33333587646484 * e, 200 * e, 241.33333587646484 * e, 240 * e, 241.33333587646484 * e),
                a.bezierCurveTo(256 * e, 243.33333587646484 * e, 260 * e, 255.33333587646484 * e, 260 * e, 265.33333587646484 * e),
                a.bezierCurveTo(261 * e, 281.33333587646484 * e, 247 * e, 289.33333587646484 * e, 240 * e, 289.33333587646484 * e),
                a.bezierCurveTo(161 * e, 289.33333587646484 * e, 200.5 * e, 289.33333587646484 * e, 161 * e, 289.33333587646484 * e),
                a.bezierCurveTo(149 * e, 288.33333587646484 * e, 142 * e, 278.33333587646484 * e, 140 * e, 266.33333587646484 * e),
                a.closePath(),
                he(a, void 0, i[4], 6 * e),
                a.globalAlpha = .5,
                a.scale(1, 1),
                a.translate(105 * e, 155 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(59.27557373046875 * e, 20.406280517578125 * e),
                a.bezierCurveTo(74.27557373046875 * e, 5.406280517578125 * e, 90.27557373046875 * e, 6.406280517578125 * e, 99.27557373046875 * e, 5.406280517578125 * e),
                a.bezierCurveTo(120.27557373046875 * e, 5.406280517578125 * e, 126.27557373046875 * e, 10.406280517578125 * e, 136.27557373046875 * e, 20.406280517578125 * e),
                a.bezierCurveTo(157.77557373046875 * e, 37.906280517578125 * e, 157.77557373046875 * e, 37.906280517578125 * e, 179.27557373046875 * e, 55.406280517578125 * e),
                a.bezierCurveTo(190.27557373046875 * e, 63.406280517578125 * e, 192.27557373046875 * e, 77.40628051757812 * e, 189.27557373046875 * e, 91.40628051757812 * e),
                a.bezierCurveTo(183.27557373046875 * e, 108.40628051757812 * e, 176.27557373046875 * e, 110.40628051757812 * e, 169.27557373046875 * e, 118.40628051757812 * e),
                a.bezierCurveTo(152.27557373046875 * e, 133.40628051757812 * e, 152.27557373046875 * e, 133.40628051757812 * e, 135.27557373046875 * e, 148.40628051757812 * e),
                a.bezierCurveTo(87.27557373046875 * e, 143.40628051757812 * e, 87.27557373046875 * e, 143.40628051757812 * e, 39.27557373046875 * e, 138.40628051757812 * e),
                a.bezierCurveTo(26.77557373046875 * e, 123.40628051757812 * e, 26.77557373046875 * e, 123.40628051757812 * e, 14.27557373046875 * e, 108.40628051757812 * e),
                a.bezierCurveTo(2.27557373046875 * e, 95.40628051757812 * e, 2.27557373046875 * e, 92.40628051757812 * e, 3.27557373046875 * e, 83.40628051757812 * e),
                a.bezierCurveTo(4.27557373046875 * e, 63.406280517578125 * e, 12.27557373046875 * e, 60.406280517578125 * e, 24.27557373046875 * e, 40.406280517578125 * e),
                a.closePath(),
                he(a, i[5], i[5], 4 * e),
                a.globalAlpha = 1,
                a.translate(-110 * e, -155 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(104 * e, 237.8000030517578 * e),
                a.bezierCurveTo(110 * e, 237.8000030517578 * e, 110 * e, 237.8000030517578 * e, 116 * e, 237.8000030517578 * e),
                a.bezierCurveTo(116 * e, 241.8000030517578 * e, 116 * e, 241.8000030517578 * e, 116 * e, 245.8000030517578 * e),
                a.bezierCurveTo(115 * e, 245.3000030517578 * e, 115 * e, 245.3000030517578 * e, 114 * e, 244.8000030517578 * e),
                a.bezierCurveTo(109.5 * e, 244.8000030517578 * e, 109.5 * e, 244.8000030517578 * e, 105 * e, 244.8000030517578 * e),
                a.closePath(),
                he(a, i[0], i[1], 2 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(115 * e, 211.20000457763672 * e),
                a.bezierCurveTo(106 * e, 216.20000457763672 * e, 101 * e, 234.20000457763672 * e, 102 * e, 241.20000457763672 * e),
                a.bezierCurveTo(102 * e, 260.2000045776367 * e, 115 * e, 269.2000045776367 * e, 115 * e, 269.2000045776367 * e),
                a.bezierCurveTo(116 * e, 265.2000045776367 * e, 115.5 * e, 265.2000045776367 * e, 116 * e, 261.2000045776367 * e),
                a.bezierCurveTo(112 * e, 264 * e, 108 * e, 254 * e, 106 * e, 242 * e),
                a.bezierCurveTo(105 * e, 232 * e, 110 * e, 222 * e, 115 * e, 218 * e),
                a.bezierCurveTo(116 * e, 216.75 * e, 115.5 * e, 217.375 * e, 116 * e, 216.75 * e),
                a.closePath(),
                he(a, i[0], i[1], 2 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(120 * e, 207 * e),
                a.bezierCurveTo(115 * e, 206 * e, 114 * e, 209 * e, 114 * e, 211 * e),
                a.bezierCurveTo(114 * e, 268 * e, 114 * e, 241 * e, 114 * e, 271 * e),
                a.bezierCurveTo(115 * e, 276 * e, 118 * e, 276 * e, 120 * e, 276 * e),
                a.bezierCurveTo(122 * e, 273 * e, 120.5 * e, 274.5 * e, 121 * e, 273 * e),
                a.bezierCurveTo(121 * e, 241 * e, 121 * e, 241 * e, 121 * e, 209 * e),
                a.closePath(),
                he(a, i[0], i[1], 2 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(284 * e, 238 * e),
                a.bezierCurveTo(289.5 * e, 238 * e, 289.5 * e, 238 * e, 295 * e, 238 * e),
                a.bezierCurveTo(295 * e, 241.5 * e, 295 * e, 241.5 * e, 295 * e, 245 * e),
                a.bezierCurveTo(289.5 * e, 245 * e, 289.5 * e, 245 * e, 284 * e, 245 * e),
                a.closePath(),
                he(a, i[0], i[1], 2 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(283 * e, 211 * e),
                a.bezierCurveTo(293 * e, 216 * e, 297 * e, 231 * e, 297 * e, 241 * e),
                a.bezierCurveTo(298 * e, 254 * e, 290 * e, 265 * e, 284 * e, 269 * e),
                a.bezierCurveTo(283 * e, 266 * e, 283.5 * e, 266 * e, 283 * e, 263 * e),
                a.bezierCurveTo(290 * e, 260 * e, 292 * e, 251 * e, 293 * e, 242 * e),
                a.bezierCurveTo(292 * e, 223 * e, 289 * e, 224 * e, 284 * e, 218 * e),
                a.closePath(),
                he(a, i[0], i[1], 2 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(280 * e, 206 * e),
                a.bezierCurveTo(284 * e, 206 * e, 285 * e, 208 * e, 285 * e, 211 * e),
                a.bezierCurveTo(285 * e, 241.5 * e, 285 * e, 241.5 * e, 285 * e, 272 * e),
                a.bezierCurveTo(284 * e, 275 * e, 284 * e, 275 * e, 280 * e, 275 * e),
                a.bezierCurveTo(279 * e, 273.5 * e, 279 * e, 273.5 * e, 278 * e, 272 * e),
                a.bezierCurveTo(278 * e, 240.5 * e, 278 * e, 240.5 * e, 278 * e, 209 * e),
                a.closePath(),
                he(a, i[0], i[1], 2 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(138 * e, 298.40000915527344 * e),
                a.bezierCurveTo(141 * e, 311.40000915527344 * e, 151 * e, 314.40000915527344 * e, 162 * e, 316.40000915527344 * e),
                a.bezierCurveTo(224 * e, 316.40000915527344 * e, 200 * e, 315.90000915527344 * e, 238 * e, 315.40000915527344 * e),
                a.bezierCurveTo(254 * e, 316.40000915527344 * e, 261 * e, 306.40000915527344 * e, 264 * e, 298.40000915527344 * e),
                a.bezierCurveTo(255 * e, 304.40000915527344 * e, 250 * e, 306.40000915527344 * e, 244 * e, 306.40000915527344 * e),
                a.bezierCurveTo(201 * e, 306.90000915527344 * e, 201 * e, 306.90000915527344 * e, 158 * e, 307.40000915527344 * e),
                a.bezierCurveTo(150 * e, 306.40000915527344 * e, 148 * e, 306.40000915527344 * e, 139 * e, 300.40000915527344 * e),
                a.closePath(),
                he(a, i[0], i[1], 2 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(161 * e, 177.5999984741211 * e),
                a.bezierCurveTo(130 * e, 175.5999984741211 * e, 123 * e, 190.5999984741211 * e, 122 * e, 205.5999984741211 * e),
                a.bezierCurveTo(121 * e, 277.5999984741211 * e, 122 * e, 242.5999984741211 * e, 122 * e, 279.5999984741211 * e),
                a.bezierCurveTo(128 * e, 297.5999984741211 * e, 137 * e, 299.5999984741211 * e, 143 * e, 300.5999984741211 * e),
                a.bezierCurveTo(163 * e, 301.0999984741211 * e, 163 * e, 301.0999984741211 * e, 183 * e, 301.5999984741211 * e),
                a.bezierCurveTo(150 * e, 300.5999984741211 * e, 135 * e, 290.5999984741211 * e, 134 * e, 267.5999984741211 * e),
                a.bezierCurveTo(133 * e, 245.5999984741211 * e, 146 * e, 235.5999984741211 * e, 164 * e, 235.5999984741211 * e),
                a.bezierCurveTo(206 * e, 236.0999984741211 * e, 206 * e, 236.0999984741211 * e, 248 * e, 236.5999984741211 * e),
                a.bezierCurveTo(266 * e, 243.5999984741211 * e, 268 * e, 259.5999984741211 * e, 267 * e, 266.5999984741211 * e),
                a.bezierCurveTo(266 * e, 288.5999984741211 * e, 251 * e, 294.5999984741211 * e, 244 * e, 297.5999984741211 * e),
                a.bezierCurveTo(228.5 * e, 299.5999984741211 * e, 228.5 * e, 299.5999984741211 * e, 213 * e, 301.5999984741211 * e),
                a.bezierCurveTo(236 * e, 301.0999984741211 * e, 236 * e, 301.0999984741211 * e, 259 * e, 300.5999984741211 * e),
                a.bezierCurveTo(272 * e, 295.5999984741211 * e, 277 * e, 288.5999984741211 * e, 278 * e, 271.5999984741211 * e),
                a.bezierCurveTo(277.5 * e, 236.5999984741211 * e, 277.5 * e, 236.5999984741211 * e, 277 * e, 201.5999984741211 * e),
                a.bezierCurveTo(276 * e, 186.5999984741211 * e, 265 * e, 178.5999984741211 * e, 254 * e, 177.5999984741211 * e),
                a.bezierCurveTo(247.5 * e, 177.5999984741211 * e, 247.5 * e, 177.5999984741211 * e, 241 * e, 177.5999984741211 * e),
                a.bezierCurveTo(255 * e, 202.5999984741211 * e, 214 * e, 217.5999984741211 * e, 201 * e, 215.5999984741211 * e),
                a.bezierCurveTo(170 * e, 215.5999984741211 * e, 152 * e, 197.5999984741211 * e, 161 * e, 178.5999984741211 * e),
                a.closePath(),
                he(a, i[2], i[2], 4 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(162 * e, 175.5999984741211 * e),
                a.bezierCurveTo(153 * e, 176.0999984741211 * e, 153 * e, 176.0999984741211 * e, 144 * e, 176.5999984741211 * e),
                a.bezierCurveTo(125 * e, 178.5999984741211 * e, 121 * e, 196.5999984741211 * e, 121 * e, 207.5999984741211 * e),
                a.bezierCurveTo(121 * e, 243.20000076293945 * e, 121 * e, 243.20000076293945 * e, 121 * e, 278.8000030517578 * e),
                a.bezierCurveTo(126 * e, 298.8000030517578 * e, 137 * e, 300.8000030517578 * e, 146 * e, 302.8000030517578 * e),
                a.bezierCurveTo(200.5 * e, 302.8000030517578 * e, 200.5 * e, 302.8000030517578 * e, 255 * e, 302.8000030517578 * e),
                a.bezierCurveTo(271 * e, 301.8000030517578 * e, 279 * e, 288.8000030517578 * e, 279 * e, 273.8000030517578 * e),
                a.bezierCurveTo(279 * e, 236.8000030517578 * e, 279 * e, 236.8000030517578 * e, 279 * e, 199.8000030517578 * e),
                a.bezierCurveTo(274 * e, 178.8000030517578 * e, 263 * e, 177.8000030517578 * e, 255 * e, 175.8000030517578 * e),
                a.bezierCurveTo(248 * e, 175.8000030517578 * e, 248 * e, 175.8000030517578 * e, 241 * e, 175.8000030517578 * e),
                a.bezierCurveTo(240 * e, 175.8000030517578 * e, 240 * e, 175.8000030517578 * e, 239 * e, 175.8000030517578 * e),
                a.bezierCurveTo(254 * e, 200.8000030517578 * e, 222 * e, 211.8000030517578 * e, 202 * e, 212.8000030517578 * e),
                a.bezierCurveTo(168 * e, 213.8000030517578 * e, 151 * e, 190.8000030517578 * e, 163 * e, 176.8000030517578 * e),
                a.closePath(),
                he(a, void 0, i[3], 6 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(198 * e, 161.4000015258789 * e),
                a.bezierCurveTo(198 * e, 186.9000015258789 * e, 198 * e, 186.9000015258789 * e, 198 * e, 212.4000015258789 * e),
                a.bezierCurveTo(201 * e, 212.4000015258789 * e, 201 * e, 212.4000015258789 * e, 204 * e, 212.4000015258789 * e),
                a.bezierCurveTo(204 * e, 186.9000015258789 * e, 204 * e, 186.9000015258789 * e, 204 * e, 161.4000015258789 * e),
                a.closePath(),
                he(a, i[0], i[1], 2 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(161 * e, 194 * e),
                a.bezierCurveTo(188 * e, 169 * e, 231 * e, 179 * e, 241 * e, 194 * e),
                a.bezierCurveTo(239.5 * e, 196 * e, 239.5 * e, 196 * e, 238 * e, 198 * e),
                a.bezierCurveTo(221 * e, 179 * e, 182 * e, 182 * e, 165 * e, 198 * e),
                a.closePath(),
                he(a, i[0], i[1], 2 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(157 * e, 188.80000019073486 * e),
                a.bezierCurveTo(162 * e, 150.80000019073486 * e, 241 * e, 150.80000019073486 * e, 245 * e, 188.80000019073486 * e),
                a.bezierCurveTo(242 * e, 224.80000019073486 * e, 162 * e, 228.80000019073486 * e, 157 * e, 188.80000019073486 * e),
                a.bezierCurveTo(159 * e, 188.80000019073486 * e, 159 * e, 188.80000019073486 * e, 161 * e, 188.80000019073486 * e),
                a.bezierCurveTo(168 * e, 216.80000019073486 * e, 231 * e, 218.80000019073486 * e, 241 * e, 188.80000019073486 * e),
                a.bezierCurveTo(236 * e, 156.80000019073486 * e, 169 * e, 152.80000019073486 * e, 161 * e, 188.80000019073486 * e),
                a.closePath(),
                he(a, i[0], i[1], 2 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(156 * e, 188 * e),
                a.bezierCurveTo(160 * e, 164 * e, 183 * e, 159 * e, 201 * e, 158 * e),
                a.bezierCurveTo(232 * e, 159 * e, 244 * e, 174 * e, 246 * e, 188 * e),
                a.bezierCurveTo(245 * e, 212 * e, 213 * e, 219 * e, 201 * e, 218 * e),
                a.bezierCurveTo(181 * e, 221 * e, 158 * e, 207 * e, 156 * e, 190 * e),
                a.closePath(),
                he(a, void 0, i[1], 2 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(162 * e, 189 * e),
                a.bezierCurveTo(166 * e, 170 * e, 185 * e, 165 * e, 201 * e, 164 * e),
                a.bezierCurveTo(227 * e, 165 * e, 240 * e, 178 * e, 239 * e, 188 * e),
                a.bezierCurveTo(239 * e, 204 * e, 210 * e, 210 * e, 201 * e, 210 * e),
                a.bezierCurveTo(182 * e, 211 * e, 166 * e, 200 * e, 162 * e, 190 * e),
                a.closePath(),
                he(a, void 0, i[1], 2 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(131 * e, 262 * e),
                a.bezierCurveTo(136 * e, 241 * e, 144 * e, 236 * e, 158 * e, 233 * e),
                a.bezierCurveTo(200.5 * e, 233 * e, 229 * e, 232 * e, 243 * e, 233 * e),
                a.bezierCurveTo(259 * e, 235 * e, 267 * e, 248 * e, 269 * e, 260 * e),
                a.bezierCurveTo(269 * e, 266.5 * e, 269 * e, 266.5 * e, 269 * e, 273 * e),
                a.bezierCurveTo(265 * e, 290 * e, 251 * e, 297 * e, 242 * e, 298 * e),
                a.bezierCurveTo(202 * e, 298 * e, 202 * e, 298 * e, 162 * e, 298 * e),
                a.bezierCurveTo(148 * e, 298 * e, 136 * e, 289 * e, 132 * e, 273 * e),
                a.bezierCurveTo(131.5 * e, 268 * e, 131.5 * e, 268 * e, 131 * e, 263 * e),
                a.bezierCurveTo(135 * e, 263 * e, 135 * e, 263 * e, 139 * e, 263 * e),
                a.bezierCurveTo(139 * e, 281 * e, 151 * e, 287 * e, 160 * e, 290 * e),
                a.bezierCurveTo(200.5 * e, 290 * e, 200.5 * e, 290 * e, 241 * e, 290 * e),
                a.bezierCurveTo(252 * e, 290 * e, 257 * e, 281 * e, 262 * e, 271 * e),
                a.bezierCurveTo(261.5 * e, 267 * e, 261.5 * e, 267 * e, 261 * e, 263 * e),
                a.bezierCurveTo(260 * e, 249 * e, 251 * e, 242 * e, 241 * e, 241 * e),
                a.bezierCurveTo(240.5 * e, 240.5 * e, 240.5 * e, 240.5 * e, 240 * e, 240 * e),
                a.bezierCurveTo(200 * e, 240 * e, 200 * e, 240 * e, 160 * e, 240 * e),
                a.bezierCurveTo(145 * e, 244 * e, 142 * e, 250 * e, 139 * e, 264 * e),
                a.closePath(),
                he(a, i[0], i[0], 2 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(130 * e, 264 * e),
                a.bezierCurveTo(132 * e, 244 * e, 144 * e, 235 * e, 157 * e, 232 * e),
                a.bezierCurveTo(245 * e, 232 * e, 201 * e, 232 * e, 245 * e, 232 * e),
                a.bezierCurveTo(264 * e, 235 * e, 269 * e, 251 * e, 270 * e, 264 * e),
                a.bezierCurveTo(272 * e, 291 * e, 248 * e, 299 * e, 242 * e, 299 * e),
                a.bezierCurveTo(200 * e, 299 * e, 200 * e, 299 * e, 158 * e, 299 * e),
                a.bezierCurveTo(139 * e, 298 * e, 130 * e, 276 * e, 130 * e, 265 * e),
                a.closePath(),
                he(a, void 0, i[1], 2 * e),
                n
            }
            function Bt(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                return n.width = 400 * e,
                n.height = 400 * e,
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(96.5 * e, 277.34375 * e),
                a.bezierCurveTo(197.5 * e, 259.84375 * e, 197.5 * e, 259.84375 * e, 298.5 * e, 242.34375 * e),
                a.bezierCurveTo(311.5 * e, 231.34375 * e, 307.5 * e, 168.34375 * e, 298.5 * e, 150.34375 * e),
                a.bezierCurveTo(198 * e, 170.34375 * e, 198 * e, 170.34375 * e, 97.5 * e, 190.34375 * e),
                a.closePath(),
                he(a, i[1], i[2], 12 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(98.5 * e, 214.34375 * e),
                a.bezierCurveTo(199 * e, 196.34375 * e, 199 * e, 196.34375 * e, 299.5 * e, 178.34375 * e),
                a.closePath(),
                he(a, void 0, i[2], 12 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(98.5 * e, 247.34375 * e),
                a.bezierCurveTo(201.5 * e, 229.34375 * e, 201.5 * e, 229.34375 * e, 304.5 * e, 211.34375 * e),
                a.closePath(),
                he(a, void 0, i[2], 12 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(97.5 * e, 189.34375 * e),
                a.bezierCurveTo(97 * e, 199.84375 * e, 97 * e, 199.84375 * e, 96.5 * e, 210.34375 * e),
                a.bezierCurveTo(110.5 * e, 204.34375 * e, 110.5 * e, 204.34375 * e, 124.5 * e, 198.34375 * e),
                a.bezierCurveTo(137.5 * e, 203.84375 * e, 137.5 * e, 203.84375 * e, 150.5 * e, 209.34375 * e),
                a.bezierCurveTo(172 * e, 197.84375 * e, 172 * e, 197.84375 * e, 193.5 * e, 186.34375 * e),
                a.bezierCurveTo(211.5 * e, 189.84375 * e, 211.5 * e, 189.84375 * e, 229.5 * e, 193.34375 * e),
                a.bezierCurveTo(240.5 * e, 193.34375 * e, 240.5 * e, 193.34375 * e, 251.5 * e, 193.34375 * e),
                a.bezierCurveTo(261 * e, 182.84375 * e, 261 * e, 182.84375 * e, 270.5 * e, 172.34375 * e),
                a.bezierCurveTo(287.5 * e, 169.34375 * e, 287.5 * e, 169.34375 * e, 304.5 * e, 166.34375 * e),
                a.bezierCurveTo(304.5 * e, 156.34375 * e, 300.5 * e, 145.34375 * e, 298.5 * e, 147.34375 * e),
                a.closePath(),
                he(a, i[3], i[4], 12 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(300.5 * e, 147.34375 * e),
                a.bezierCurveTo(293.5 * e, 121.34375 * e, 278.5 * e, 106.34375 * e, 256.5 * e, 101.34375 * e),
                a.bezierCurveTo(176.5 * e, 145.34375 * e, 176.5 * e, 145.34375 * e, 96.5 * e, 189.34375 * e),
                a.closePath(),
                he(a, i[5], i[6], 12 * e),
                Re(a, 252.5 * e, 129.34375 * e, 18.027756377319946 * e),
                he(a, i[7]),
                Re(a, 248.5 * e, 121.34375 * e, 8.246211251235321 * e),
                he(a, i[8]),
                n
            }
            function Mt(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                return n.width = 400 * e,
                n.height = 400 * e,
                a.globalAlpha = t ? .5 : 1,
                a.translate(10 * e, 5 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(100.5 * e, 126.34375 * e),
                a.bezierCurveTo(151.5 * e, 104.34375 * e, 279.5 * e, 188.34375 * e, 297.5 * e, 292.34375 * e),
                a.bezierCurveTo(222.5 * e, 307.34375 * e, 106.5 * e, 196.34375 * e, 100.5 * e, 127.34375 * e),
                a.closePath(),
                he(a, i[0], i[0], 12 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(106.5 * e, 131.34375 * e),
                a.bezierCurveTo(140.5 * e, 142.34375 * e, 225.5 * e, 184.34375 * e, 290.5 * e, 287.34375 * e),
                a.bezierCurveTo(270.5 * e, 188.34375 * e, 152.5 * e, 118.34375 * e, 107.5 * e, 131.34375 * e),
                a.closePath(),
                he(a, i[0]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(157.5 * e, 137.34375 * e),
                a.bezierCurveTo(161.5 * e, 138.34375 * e, 164.5 * e, 140.34375 * e, 168.5 * e, 142.34375 * e),
                a.bezierCurveTo(165.5 * e, 156.34375 * e, 141.5 * e, 176.34375 * e, 126.5 * e, 179.34375 * e),
                a.bezierCurveTo(123.5 * e, 173.34375 * e, 120.5 * e, 169.34375 * e, 120.5 * e, 169.34375 * e),
                a.bezierCurveTo(141.5 * e, 161.34375 * e, 156.5 * e, 145.34375 * e, 155.5 * e, 136.34375 * e),
                a.closePath(),
                he(a, i[0]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(196.5 * e, 151.34375 * e),
                a.bezierCurveTo(211.5 * e, 158.34375 * e, 224.5 * e, 171.34375 * e, 229.5 * e, 176.34375 * e),
                a.bezierCurveTo(246.5 * e, 163.34375 * e, 259.5 * e, 166.34375 * e, 272.5 * e, 168.34375 * e),
                a.bezierCurveTo(254.5 * e, 146.34375 * e, 214.5 * e, 145.34375 * e, 198.5 * e, 151.34375 * e),
                a.closePath(),
                he(a, i[0], i[0], 12 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(154.5 * e, 222.34375 * e),
                a.bezierCurveTo(164.5 * e, 234.34375 * e, 173.5 * e, 242.34375 * e, 178.5 * e, 245.34375 * e),
                a.bezierCurveTo(174.5 * e, 265.34375 * e, 180.5 * e, 274.34375 * e, 186.5 * e, 283.34375 * e),
                a.bezierCurveTo(165.5 * e, 277.34375 * e, 151.5 * e, 245.34375 * e, 155.5 * e, 224.34375 * e),
                a.closePath(),
                he(a, i[0], i[0], 12 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(279.5 * e, 294.34375 * e),
                a.bezierCurveTo(286.5 * e, 285.84375 * e, 286.5 * e, 285.84375 * e, 293.5 * e, 277.34375 * e),
                a.bezierCurveTo(315.5 * e, 280.34375 * e, 315.5 * e, 280.34375 * e, 337.5 * e, 283.34375 * e),
                a.bezierCurveTo(340.5 * e, 311.34375 * e, 317.5 * e, 326.34375 * e, 307.5 * e, 331.34375 * e),
                a.closePath(),
                he(a, i[0], i[0], 12 * e),
                a.globalAlpha = 1,
                a.translate(-10 * e, -5 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(100.5 * e, 126.34375 * e),
                a.bezierCurveTo(151.5 * e, 104.34375 * e, 279.5 * e, 188.34375 * e, 297.5 * e, 292.34375 * e),
                a.bezierCurveTo(222.5 * e, 307.34375 * e, 106.5 * e, 196.34375 * e, 100.5 * e, 127.34375 * e),
                a.closePath(),
                he(a, i[1], i[2], 12 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(106.5 * e, 131.34375 * e),
                a.bezierCurveTo(140.5 * e, 142.34375 * e, 225.5 * e, 184.34375 * e, 290.5 * e, 287.34375 * e),
                a.bezierCurveTo(270.5 * e, 188.34375 * e, 152.5 * e, 118.34375 * e, 107.5 * e, 131.34375 * e),
                a.closePath(),
                he(a, i[3]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(157.5 * e, 137.34375 * e),
                a.bezierCurveTo(161.5 * e, 138.34375 * e, 164.5 * e, 140.34375 * e, 168.5 * e, 142.34375 * e),
                a.bezierCurveTo(165.5 * e, 156.34375 * e, 141.5 * e, 176.34375 * e, 126.5 * e, 179.34375 * e),
                a.bezierCurveTo(123.5 * e, 173.34375 * e, 120.5 * e, 169.34375 * e, 120.5 * e, 169.34375 * e),
                a.bezierCurveTo(141.5 * e, 161.34375 * e, 156.5 * e, 145.34375 * e, 155.5 * e, 136.34375 * e),
                a.closePath(),
                he(a, i[4]),
                Re(a, 125.5 * e, 140.34375 * e, 11.180339887498949 * e),
                he(a, i[5]),
                Re(a, 122.5 * e, 135.34375 * e, 5.0990195135927845 * e),
                he(a, i[6]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(196.5 * e, 151.34375 * e),
                a.bezierCurveTo(211.5 * e, 158.34375 * e, 224.5 * e, 171.34375 * e, 229.5 * e, 176.34375 * e),
                a.bezierCurveTo(246.5 * e, 163.34375 * e, 259.5 * e, 166.34375 * e, 272.5 * e, 168.34375 * e),
                a.bezierCurveTo(254.5 * e, 146.34375 * e, 214.5 * e, 145.34375 * e, 198.5 * e, 151.34375 * e),
                a.closePath(),
                he(a, i[7], i[8], 12 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(154.5 * e, 222.34375 * e),
                a.bezierCurveTo(164.5 * e, 234.34375 * e, 173.5 * e, 242.34375 * e, 178.5 * e, 245.34375 * e),
                a.bezierCurveTo(174.5 * e, 265.34375 * e, 180.5 * e, 274.34375 * e, 186.5 * e, 283.34375 * e),
                a.bezierCurveTo(165.5 * e, 277.34375 * e, 151.5 * e, 245.34375 * e, 155.5 * e, 224.34375 * e),
                a.closePath(),
                he(a, i[7], i[8], 12 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(279.5 * e, 294.34375 * e),
                a.bezierCurveTo(286.5 * e, 285.84375 * e, 286.5 * e, 285.84375 * e, 293.5 * e, 277.34375 * e),
                a.bezierCurveTo(315.5 * e, 280.34375 * e, 315.5 * e, 280.34375 * e, 337.5 * e, 283.34375 * e),
                a.bezierCurveTo(340.5 * e, 311.34375 * e, 317.5 * e, 326.34375 * e, 307.5 * e, 331.34375 * e),
                a.closePath(),
                he(a, i[7], i[8], 12 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(296.5 * e, 287.34375 * e),
                a.bezierCurveTo(311.5 * e, 291.34375 * e, 311.5 * e, 291.34375 * e, 326.5 * e, 295.34375 * e),
                a.closePath(),
                he(a, void 0, i[9], 6 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(294.5 * e, 289.34375 * e),
                a.bezierCurveTo(308.5 * e, 297.34375 * e, 308.5 * e, 297.34375 * e, 322.5 * e, 305.34375 * e),
                a.closePath(),
                he(a, void 0, i[9], 6 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(294.5 * e, 291.34375 * e),
                a.bezierCurveTo(304 * e, 303.34375 * e, 304 * e, 303.34375 * e, 313.5 * e, 315.34375 * e),
                a.closePath(),
                he(a, void 0, i[9], 6 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(226.5 * e, 161.34375 * e),
                a.bezierCurveTo(230.5 * e, 160.34375 * e, 236.5 * e, 158.34375 * e, 238.5 * e, 161.34375 * e),
                a.bezierCurveTo(238.5 * e, 157.34375 * e, 228.5 * e, 159.34375 * e, 227.5 * e, 161.34375 * e),
                a.closePath(),
                he(a, void 0, i[9], 4 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(167.5 * e, 248.34375 * e),
                a.bezierCurveTo(165.5 * e, 251.34375 * e, 168.5 * e, 256.34375 * e, 168.5 * e, 253.34375 * e),
                a.bezierCurveTo(166.5 * e, 252.34375 * e, 168.5 * e, 246.34375 * e, 166.5 * e, 247.34375 * e),
                a.closePath(),
                he(a, void 0, i[9], 3 * e),
                n
            }
            function Yt(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                return n.width = 309 * e,
                n.height = 287 * e,
                a.globalAlpha = t ? .5 : 1,
                a.translate(10 * e, 5 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(34.5 * e, 38.53125 * e),
                a.bezierCurveTo(91.5 * e, 30.53125 * e, 138.5 * e, 68.53125 * e, 169.5 * e, 93.53125 * e),
                a.bezierCurveTo(208.5 * e, 128.53125 * e, 226.5 * e, 157.53125 * e, 233.5 * e, 209.53125 * e),
                a.bezierCurveTo(195.5 * e, 218.53125 * e, 138.5 * e, 191.53125 * e, 105.5 * e, 157.53125 * e),
                a.bezierCurveTo(54.5 * e, 112.53125 * e, 41.5 * e, 80.53125 * e, 33.5 * e, 38.53125 * e),
                a.closePath(),
                he(a, i[0], i[0], 10 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(143.5 * e, 74.53125 * e),
                a.bezierCurveTo(164.5 * e, 73.53125 * e, 159 * e, 74.53125 * e, 174.5 * e, 74.53125 * e),
                a.bezierCurveTo(186 * e, 86.53125 * e, 186 * e, 86.53125 * e, 197.5 * e, 98.53125 * e),
                a.bezierCurveTo(186 * e, 97.03125 * e, 186 * e, 97.03125 * e, 174.5 * e, 95.53125 * e),
                a.closePath(),
                he(a, i[0], i[0], 10 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(87.5 * e, 142.53125 * e),
                a.bezierCurveTo(92 * e, 160.03125 * e, 92 * e, 160.03125 * e, 96.5 * e, 177.53125 * e),
                a.bezierCurveTo(108 * e, 181.53125 * e, 108 * e, 181.53125 * e, 119.5 * e, 185.53125 * e),
                a.bezierCurveTo(116.5 * e, 175.53125 * e, 116.5 * e, 175.53125 * e, 113.5 * e, 165.53125 * e),
                a.closePath(),
                he(a, i[0], i[0], 10 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(236.5 * e, 189.53125 * e),
                a.bezierCurveTo(274.5 * e, 197.53125 * e, 255.5 * e, 194.03125 * e, 274.5 * e, 198.53125 * e),
                a.bezierCurveTo(272.5 * e, 236.53125 * e, 261.5 * e, 237.53125 * e, 242.5 * e, 248.53125 * e),
                a.bezierCurveTo(230.5 * e, 231.03125 * e, 230.5 * e, 231.03125 * e, 218.5 * e, 213.53125 * e),
                a.closePath(),
                he(a, i[0], i[0], 10 * e),
                a.globalAlpha = 1,
                a.translate(-10 * e, -5 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(34.5 * e, 38.53125 * e),
                a.bezierCurveTo(91.5 * e, 30.53125 * e, 138.5 * e, 68.53125 * e, 169.5 * e, 93.53125 * e),
                a.bezierCurveTo(208.5 * e, 128.53125 * e, 226.5 * e, 157.53125 * e, 233.5 * e, 209.53125 * e),
                a.bezierCurveTo(195.5 * e, 218.53125 * e, 138.5 * e, 191.53125 * e, 105.5 * e, 157.53125 * e),
                a.bezierCurveTo(54.5 * e, 112.53125 * e, 41.5 * e, 80.53125 * e, 33.5 * e, 38.53125 * e),
                a.closePath(),
                he(a, i[1], i[2], 10 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(143.5 * e, 74.53125 * e),
                a.bezierCurveTo(164.5 * e, 73.53125 * e, 159 * e, 74.53125 * e, 174.5 * e, 74.53125 * e),
                a.bezierCurveTo(186 * e, 86.53125 * e, 186 * e, 86.53125 * e, 197.5 * e, 98.53125 * e),
                a.bezierCurveTo(186 * e, 97.03125 * e, 186 * e, 97.03125 * e, 174.5 * e, 95.53125 * e),
                a.closePath(),
                he(a, i[1], i[2], 10 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(87.5 * e, 142.53125 * e),
                a.bezierCurveTo(92 * e, 160.03125 * e, 92 * e, 160.03125 * e, 96.5 * e, 177.53125 * e),
                a.bezierCurveTo(108 * e, 181.53125 * e, 108 * e, 181.53125 * e, 119.5 * e, 185.53125 * e),
                a.bezierCurveTo(116.5 * e, 175.53125 * e, 116.5 * e, 175.53125 * e, 113.5 * e, 165.53125 * e),
                a.closePath(),
                he(a, i[1], i[2], 10 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(236.5 * e, 189.53125 * e),
                a.bezierCurveTo(274.5 * e, 197.53125 * e, 255.5 * e, 194.03125 * e, 274.5 * e, 198.53125 * e),
                a.bezierCurveTo(272.5 * e, 236.53125 * e, 261.5 * e, 237.53125 * e, 242.5 * e, 248.53125 * e),
                a.bezierCurveTo(230.5 * e, 231.03125 * e, 230.5 * e, 231.03125 * e, 218.5 * e, 213.53125 * e),
                a.closePath(),
                he(a, i[1], i[2], 10 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(109.5 * e, 51.53125 * e),
                a.bezierCurveTo(107.5 * e, 92.53125 * e, 91.5 * e, 95.53125 * e, 59.5 * e, 101.53125 * e),
                he(a, i[1], i[2], 7 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(72.5 * e, 51.53125 * e),
                a.bezierCurveTo(71 * e, 64.53125 * e, 69.5 * e, 76.53125 * e, 69.5 * e, 77.53125 * e),
                a.closePath(),
                he(a, i[1], i[2], 7 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(84.5 * e, 63.53125 * e),
                a.bezierCurveTo(70.5 * e, 65.03125 * e, 70.5 * e, 65.03125 * e, 56.5 * e, 66.53125 * e),
                a.closePath(),
                he(a, i[1], i[2], 7 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(125.5 * e, 84.53125 * e),
                a.bezierCurveTo(125.5 * e, 110.03125 * e, 125.5 * e, 110.03125 * e, 125.5 * e, 135.53125 * e),
                a.closePath(),
                he(a, i[1], i[2], 7 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(149.5 * e, 108.53125 * e),
                a.bezierCurveTo(150 * e, 137.03125 * e, 150 * e, 137.03125 * e, 150.5 * e, 165.53125 * e),
                a.closePath(),
                he(a, i[1], i[2], 7 * e),
                n
            }
            function Ht(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d")
                  , I = 130 * e
                  , T = 142 * e
                  , o = I / 2
                  , r = T / 2;
                return n.width = I,
                n.height = T,
                a.translate(o, r + 7 * e),
                a.globalAlpha = t ? .5 : 1,
                Re(a, 0, 0, 60 * e),
                he(a, i[0]),
                a.translate(0, -7 * e),
                a.globalAlpha = 1,
                Re(a, 0, 0, 60 * e),
                he(a, i[1], i[2], 4 * e),
                Re(a, 0, 0, 40 * e),
                he(a, i[3]),
                Re(a, 0, 0, 25 * e),
                he(a, i[4], i[5], 8 * e),
                n
            }
            function Kt(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                return n.width = 130 * e,
                n.height = 142 * e,
                a.globalAlpha = t ? .5 : 1,
                a.save(),
                a.translate(65 * e, 80 * e),
                a.rotate(.2),
                me(a, 9, 60 * e, 10 * e),
                a.restore(),
                he(a, i[0]),
                a.globalAlpha = 1,
                a.save(),
                a.translate(65 * e, 71 * e),
                a.rotate(.2),
                me(a, 9, 60 * e, 10 * e),
                he(a, i[1], i[2], 4),
                a.rotate(-.32),
                me(a, 9, 38 * e, 10 * e),
                he(a, i[3], i[4], 4),
                a.rotate(.68),
                me(a, 9, 20 * e, 8 * e),
                he(a, i[5], i[6], 6),
                a.restore(),
                n
            }
            function Gt(e, t) {
                var i = window.document.createElement("canvas")
                  , n = i.getContext("2d");
                return i.width = 372 * e,
                i.height = 375 * e,
                n.globalAlpha = .5,
                n.translate(15 * e, 15 * e),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(313.0000305175781 * e, 76.58523559570312 * e),
                n.bezierCurveTo(308.0000305175781 * e, 130.58523559570312 * e, 279.0000305175781 * e, 158.58523559570312 * e, 254.00003051757812 * e, 175.58523559570312 * e),
                n.bezierCurveTo(287.0000305175781 * e, 182.58523559570312 * e, 274.0000305175781 * e, 181.08523559570312 * e, 294.0000305175781 * e, 186.58523559570312 * e),
                n.bezierCurveTo(293.5000305175781 * e, 196.08523559570312 * e, 293.5000305175781 * e, 196.08523559570312 * e, 293.0000305175781 * e, 205.58523559570312 * e),
                n.bezierCurveTo(304.0000305175781 * e, 201.08523559570312 * e, 304.0000305175781 * e, 201.08523559570312 * e, 315.0000305175781 * e, 196.58523559570312 * e),
                n.bezierCurveTo(350.0000305175781 * e, 219.58523559570312 * e, 343.0000305175781 * e, 221.58523559570312 * e, 351.0000305175781 * e, 230.58523559570312 * e),
                n.bezierCurveTo(296.0000305175781 * e, 260.5852355957031 * e, 264.0000305175781 * e, 256.5852355957031 * e, 220.00003051757812 * e, 236.58523559570312 * e),
                n.bezierCurveTo(233.00003051757812 * e, 266.5852355957031 * e, 232.00003051757812 * e, 279.5852355957031 * e, 231.00003051757812 * e, 295.5852355957031 * e),
                n.bezierCurveTo(222.00003051757812 * e, 297.5852355957031 * e, 222.00003051757812 * e, 297.5852355957031 * e, 213.00003051757812 * e, 299.5852355957031 * e),
                n.bezierCurveTo(219.50003051757812 * e, 308.0852355957031 * e, 219.50003051757812 * e, 308.0852355957031 * e, 226.00003051757812 * e, 316.5852355957031 * e),
                n.bezierCurveTo(223.00003051757812 * e, 344.5852355957031 * e, 216.00003051757812 * e, 350.5852355957031 * e, 209.00003051757812 * e, 363.5852355957031 * e),
                n.bezierCurveTo(154.00003051757812 * e, 318.5852355957031 * e, 156.00003051757812 * e, 268.5852355957031 * e, 160.00003051757812 * e, 238.58523559570312 * e),
                n.bezierCurveTo(135.00003051757812 * e, 268.5852355957031 * e, 125.00003051757812 * e, 267.5852355957031 * e, 112.00003051757812 * e, 272.5852355957031 * e),
                n.bezierCurveTo(104.50003051757812 * e, 266.5852355957031 * e, 104.50003051757812 * e, 266.5852355957031 * e, 97.00003051757812 * e, 260.5852355957031 * e),
                n.bezierCurveTo(93.00003051757812 * e, 271.0852355957031 * e, 93.00003051757812 * e, 271.0852355957031 * e, 89.00003051757812 * e, 281.5852355957031 * e),
                n.bezierCurveTo(66.00003051757812 * e, 288.5852355957031 * e, 59.000030517578125 * e, 288.5852355957031 * e, 39.000030517578125 * e, 285.5852355957031 * e),
                n.bezierCurveTo(56.000030517578125 * e, 216.58523559570312 * e, 91.00003051757812 * e, 204.58523559570312 * e, 129.00003051757812 * e, 189.58523559570312 * e),
                n.bezierCurveTo(90.00003051757812 * e, 176.58523559570312 * e, 89.00003051757812 * e, 173.58523559570312 * e, 79.00003051757812 * e, 166.58523559570312 * e),
                n.bezierCurveTo(82.00003051757812 * e, 155.08523559570312 * e, 82.00003051757812 * e, 155.08523559570312 * e, 85.00003051757812 * e, 143.58523559570312 * e),
                n.bezierCurveTo(75.50003051757812 * e, 147.58523559570312 * e, 75.50003051757812 * e, 147.58523559570312 * e, 66.00003051757812 * e, 151.58523559570312 * e),
                n.bezierCurveTo(44.000030517578125 * e, 133.58523559570312 * e, 41.000030517578125 * e, 124.58523559570312 * e, 34.000030517578125 * e, 102.58523559570312 * e),
                n.bezierCurveTo(100.00003051757812 * e, 81.58523559570312 * e, 134.00003051757812 * e, 118.58523559570312 * e, 150.00003051757812 * e, 128.58523559570312 * e),
                n.bezierCurveTo(144.00003051757812 * e, 102.58523559570312 * e, 147.00003051757812 * e, 90.58523559570312 * e, 150.00003051757812 * e, 80.58523559570312 * e),
                n.bezierCurveTo(159.50003051757812 * e, 79.08523559570312 * e, 159.50003051757812 * e, 79.08523559570312 * e, 169.00003051757812 * e, 77.58523559570312 * e),
                n.bezierCurveTo(163.00003051757812 * e, 72.58523559570312 * e, 163.00003051757812 * e, 72.58523559570312 * e, 157.00003051757812 * e, 67.58523559570312 * e),
                n.bezierCurveTo(162.00003051757812 * e, 42.585235595703125 * e, 169.00003051757812 * e, 29.585235595703125 * e, 182.00003051757812 * e, 14.585235595703125 * e),
                n.bezierCurveTo(219.00003051757812 * e, 48.585235595703125 * e, 222.00003051757812 * e, 92.58523559570312 * e, 218.00003051757812 * e, 112.58523559570312 * e),
                n.bezierCurveTo(239.00003051757812 * e, 95.58523559570312 * e, 242.00003051757812 * e, 97.58523559570312 * e, 249.00003051757812 * e, 94.58523559570312 * e),
                n.bezierCurveTo(255.00003051757812 * e, 103.08523559570312 * e, 255.00003051757812 * e, 103.08523559570312 * e, 261.0000305175781 * e, 111.58523559570312 * e),
                n.bezierCurveTo(261.5000305175781 * e, 99.58523559570312 * e, 261.5000305175781 * e, 99.58523559570312 * e, 262.0000305175781 * e, 87.58523559570312 * e),
                n.bezierCurveTo(282.0000305175781 * e, 77.58523559570312 * e, 301.0000305175781 * e, 74.58523559570312 * e, 314.0000305175781 * e, 76.58523559570312 * e),
                n.closePath(),
                he(n, t[0]),
                n.globalAlpha = 1,
                n.translate(-15 * e, -15 * e),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(313.0000305175781 * e, 76.58523559570312 * e),
                n.bezierCurveTo(308.0000305175781 * e, 130.58523559570312 * e, 279.0000305175781 * e, 158.58523559570312 * e, 254.00003051757812 * e, 175.58523559570312 * e),
                n.bezierCurveTo(287.0000305175781 * e, 182.58523559570312 * e, 274.0000305175781 * e, 181.08523559570312 * e, 294.0000305175781 * e, 186.58523559570312 * e),
                n.bezierCurveTo(293.5000305175781 * e, 196.08523559570312 * e, 293.5000305175781 * e, 196.08523559570312 * e, 293.0000305175781 * e, 205.58523559570312 * e),
                n.bezierCurveTo(304.0000305175781 * e, 201.08523559570312 * e, 304.0000305175781 * e, 201.08523559570312 * e, 315.0000305175781 * e, 196.58523559570312 * e),
                n.bezierCurveTo(350.0000305175781 * e, 219.58523559570312 * e, 343.0000305175781 * e, 221.58523559570312 * e, 351.0000305175781 * e, 230.58523559570312 * e),
                n.bezierCurveTo(296.0000305175781 * e, 260.5852355957031 * e, 264.0000305175781 * e, 256.5852355957031 * e, 220.00003051757812 * e, 236.58523559570312 * e),
                n.bezierCurveTo(233.00003051757812 * e, 266.5852355957031 * e, 232.00003051757812 * e, 279.5852355957031 * e, 231.00003051757812 * e, 295.5852355957031 * e),
                n.bezierCurveTo(222.00003051757812 * e, 297.5852355957031 * e, 222.00003051757812 * e, 297.5852355957031 * e, 213.00003051757812 * e, 299.5852355957031 * e),
                n.bezierCurveTo(219.50003051757812 * e, 308.0852355957031 * e, 219.50003051757812 * e, 308.0852355957031 * e, 226.00003051757812 * e, 316.5852355957031 * e),
                n.bezierCurveTo(223.00003051757812 * e, 344.5852355957031 * e, 216.00003051757812 * e, 350.5852355957031 * e, 209.00003051757812 * e, 363.5852355957031 * e),
                n.bezierCurveTo(154.00003051757812 * e, 318.5852355957031 * e, 156.00003051757812 * e, 268.5852355957031 * e, 160.00003051757812 * e, 238.58523559570312 * e),
                n.bezierCurveTo(135.00003051757812 * e, 268.5852355957031 * e, 125.00003051757812 * e, 267.5852355957031 * e, 112.00003051757812 * e, 272.5852355957031 * e),
                n.bezierCurveTo(104.50003051757812 * e, 266.5852355957031 * e, 104.50003051757812 * e, 266.5852355957031 * e, 97.00003051757812 * e, 260.5852355957031 * e),
                n.bezierCurveTo(93.00003051757812 * e, 271.0852355957031 * e, 93.00003051757812 * e, 271.0852355957031 * e, 89.00003051757812 * e, 281.5852355957031 * e),
                n.bezierCurveTo(66.00003051757812 * e, 288.5852355957031 * e, 59.000030517578125 * e, 288.5852355957031 * e, 39.000030517578125 * e, 285.5852355957031 * e),
                n.bezierCurveTo(56.000030517578125 * e, 216.58523559570312 * e, 91.00003051757812 * e, 204.58523559570312 * e, 129.00003051757812 * e, 189.58523559570312 * e),
                n.bezierCurveTo(90.00003051757812 * e, 176.58523559570312 * e, 89.00003051757812 * e, 173.58523559570312 * e, 79.00003051757812 * e, 166.58523559570312 * e),
                n.bezierCurveTo(82.00003051757812 * e, 155.08523559570312 * e, 82.00003051757812 * e, 155.08523559570312 * e, 85.00003051757812 * e, 143.58523559570312 * e),
                n.bezierCurveTo(75.50003051757812 * e, 147.58523559570312 * e, 75.50003051757812 * e, 147.58523559570312 * e, 66.00003051757812 * e, 151.58523559570312 * e),
                n.bezierCurveTo(44.000030517578125 * e, 133.58523559570312 * e, 41.000030517578125 * e, 124.58523559570312 * e, 34.000030517578125 * e, 102.58523559570312 * e),
                n.bezierCurveTo(100.00003051757812 * e, 81.58523559570312 * e, 134.00003051757812 * e, 118.58523559570312 * e, 150.00003051757812 * e, 128.58523559570312 * e),
                n.bezierCurveTo(144.00003051757812 * e, 102.58523559570312 * e, 147.00003051757812 * e, 90.58523559570312 * e, 150.00003051757812 * e, 80.58523559570312 * e),
                n.bezierCurveTo(159.50003051757812 * e, 79.08523559570312 * e, 159.50003051757812 * e, 79.08523559570312 * e, 169.00003051757812 * e, 77.58523559570312 * e),
                n.bezierCurveTo(163.00003051757812 * e, 72.58523559570312 * e, 163.00003051757812 * e, 72.58523559570312 * e, 157.00003051757812 * e, 67.58523559570312 * e),
                n.bezierCurveTo(162.00003051757812 * e, 42.585235595703125 * e, 169.00003051757812 * e, 29.585235595703125 * e, 182.00003051757812 * e, 14.585235595703125 * e),
                n.bezierCurveTo(219.00003051757812 * e, 48.585235595703125 * e, 222.00003051757812 * e, 92.58523559570312 * e, 218.00003051757812 * e, 112.58523559570312 * e),
                n.bezierCurveTo(239.00003051757812 * e, 95.58523559570312 * e, 242.00003051757812 * e, 97.58523559570312 * e, 249.00003051757812 * e, 94.58523559570312 * e),
                n.bezierCurveTo(255.00003051757812 * e, 103.08523559570312 * e, 255.00003051757812 * e, 103.08523559570312 * e, 261.0000305175781 * e, 111.58523559570312 * e),
                n.bezierCurveTo(261.5000305175781 * e, 99.58523559570312 * e, 261.5000305175781 * e, 99.58523559570312 * e, 262.0000305175781 * e, 87.58523559570312 * e),
                n.bezierCurveTo(282.0000305175781 * e, 77.58523559570312 * e, 301.0000305175781 * e, 74.58523559570312 * e, 314.0000305175781 * e, 76.58523559570312 * e),
                n.closePath(),
                he(n, t[1], t[2], 4 * e),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(186.00003051757812 * e, 192.94886779785156 * e),
                n.bezierCurveTo(185.00003051757812 * e, 66.94886779785156 * e, 184.50003051757812 * e, 104.94886779785156 * e, 183.00003051757812 * e, 16.948867797851562 * e),
                n.bezierCurveTo(216.00003051757812 * e, 47.94886779785156 * e, 219.00003051757812 * e, 80.94886779785156 * e, 218.00003051757812 * e, 113.94886779785156 * e),
                n.bezierCurveTo(209.00003051757812 * e, 165.94886779785156 * e, 200.00003051757812 * e, 176.94886779785156 * e, 189.00003051757812 * e, 192.94886779785156 * e),
                n.closePath(),
                he(n, t[3], t[3], 2 * e),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(190.00003051757812 * e, 191.94886779785156 * e),
                n.bezierCurveTo(207.00003051757812 * e, 348.94886779785156 * e, 205.00003051757812 * e, 323.94886779785156 * e, 209.00003051757812 * e, 358.94886779785156 * e),
                n.bezierCurveTo(171.00003051757812 * e, 334.94886779785156 * e, 167.00003051757812 * e, 302.94886779785156 * e, 161.00003051757812 * e, 268.94886779785156 * e),
                n.bezierCurveTo(160.00003051757812 * e, 218.94886779785156 * e, 181.00003051757812 * e, 191.94886779785156 * e, 189.00003051757812 * e, 186.94886779785156 * e),
                n.closePath(),
                he(n, t[3], t[3], 2 * e),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(194.00003051757812 * e, 195.94886779785156 * e),
                n.bezierCurveTo(116.00003051757812 * e, 150.94886779785156 * e, 116.00003051757812 * e, 150.94886779785156 * e, 38.000030517578125 * e, 105.94886779785156 * e),
                n.bezierCurveTo(67.00003051757812 * e, 90.94886779785156 * e, 96.00003051757812 * e, 99.94886779785156 * e, 123.00003051757812 * e, 111.94886779785156 * e),
                n.bezierCurveTo(183.00003051757812 * e, 152.94886779785156 * e, 179.00003051757812 * e, 180.94886779785156 * e, 193.00003051757812 * e, 194.94886779785156 * e),
                n.closePath(),
                he(n, t[3], t[3], 2 * e),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(189.00003051757812 * e, 190.94886779785156 * e),
                n.bezierCurveTo(250.00003051757812 * e, 133.94886779785156 * e, 311.0000305175781 * e, 78.94886779785156 * e, 311.0000305175781 * e, 76.94886779785156 * e),
                n.bezierCurveTo(306.0000305175781 * e, 127.94886779785156 * e, 283.0000305175781 * e, 148.94886779785156 * e, 261.0000305175781 * e, 166.94886779785156 * e),
                n.bezierCurveTo(220.00003051757812 * e, 197.94886779785156 * e, 191.00003051757812 * e, 194.94886779785156 * e, 189.00003051757812 * e, 195.94886779785156 * e),
                n.closePath(),
                he(n, t[3], t[3], 2 * e),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(189.00003051757812 * e, 194.94886779785156 * e),
                n.bezierCurveTo(268.5000305175781 * e, 211.94886779785156 * e, 268.5000305175781 * e, 211.94886779785156 * e, 348.0000305175781 * e, 228.94886779785156 * e),
                n.bezierCurveTo(316.0000305175781 * e, 247.94886779785156 * e, 298.0000305175781 * e, 256.94886779785156 * e, 250.00003051757812 * e, 246.94886779785156 * e),
                n.bezierCurveTo(197.00003051757812 * e, 229.94886779785156 * e, 189.00003051757812 * e, 202.94886779785156 * e, 188.00003051757812 * e, 199.94886779785156 * e),
                n.closePath(),
                he(n, t[3], t[3], 2 * e),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(192.00003051757812 * e, 191.94886779785156 * e),
                n.bezierCurveTo(116.50003051757812 * e, 238.44886779785156 * e, 116.50003051757812 * e, 238.44886779785156 * e, 41.000030517578125 * e, 284.94886779785156 * e),
                n.bezierCurveTo(49.000030517578125 * e, 252.94886779785156 * e, 56.000030517578125 * e, 242.94886779785156 * e, 80.00003051757812 * e, 215.94886779785156 * e),
                n.bezierCurveTo(125.00003051757812 * e, 181.94886779785156 * e, 174.00003051757812 * e, 183.94886779785156 * e, 192.00003051757812 * e, 191.94886779785156 * e),
                n.closePath(),
                he(n, t[3], t[3], 2 * e),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(313.0000305175781 * e, 76.58523559570312 * e),
                n.bezierCurveTo(308.0000305175781 * e, 130.58523559570312 * e, 279.0000305175781 * e, 158.58523559570312 * e, 254.00003051757812 * e, 175.58523559570312 * e),
                n.bezierCurveTo(287.0000305175781 * e, 182.58523559570312 * e, 274.0000305175781 * e, 181.08523559570312 * e, 294.0000305175781 * e, 186.58523559570312 * e),
                n.bezierCurveTo(293.5000305175781 * e, 196.08523559570312 * e, 293.5000305175781 * e, 196.08523559570312 * e, 293.0000305175781 * e, 205.58523559570312 * e),
                n.bezierCurveTo(304.0000305175781 * e, 201.08523559570312 * e, 304.0000305175781 * e, 201.08523559570312 * e, 315.0000305175781 * e, 196.58523559570312 * e),
                n.bezierCurveTo(350.0000305175781 * e, 219.58523559570312 * e, 343.0000305175781 * e, 221.58523559570312 * e, 351.0000305175781 * e, 230.58523559570312 * e),
                n.bezierCurveTo(296.0000305175781 * e, 260.5852355957031 * e, 264.0000305175781 * e, 256.5852355957031 * e, 220.00003051757812 * e, 236.58523559570312 * e),
                n.bezierCurveTo(233.00003051757812 * e, 266.5852355957031 * e, 232.00003051757812 * e, 279.5852355957031 * e, 231.00003051757812 * e, 295.5852355957031 * e),
                n.bezierCurveTo(222.00003051757812 * e, 297.5852355957031 * e, 222.00003051757812 * e, 297.5852355957031 * e, 213.00003051757812 * e, 299.5852355957031 * e),
                n.bezierCurveTo(219.50003051757812 * e, 308.0852355957031 * e, 219.50003051757812 * e, 308.0852355957031 * e, 226.00003051757812 * e, 316.5852355957031 * e),
                n.bezierCurveTo(223.00003051757812 * e, 344.5852355957031 * e, 216.00003051757812 * e, 350.5852355957031 * e, 209.00003051757812 * e, 363.5852355957031 * e),
                n.bezierCurveTo(154.00003051757812 * e, 318.5852355957031 * e, 156.00003051757812 * e, 268.5852355957031 * e, 160.00003051757812 * e, 238.58523559570312 * e),
                n.bezierCurveTo(135.00003051757812 * e, 268.5852355957031 * e, 125.00003051757812 * e, 267.5852355957031 * e, 112.00003051757812 * e, 272.5852355957031 * e),
                n.bezierCurveTo(104.50003051757812 * e, 266.5852355957031 * e, 104.50003051757812 * e, 266.5852355957031 * e, 97.00003051757812 * e, 260.5852355957031 * e),
                n.bezierCurveTo(93.00003051757812 * e, 271.0852355957031 * e, 93.00003051757812 * e, 271.0852355957031 * e, 89.00003051757812 * e, 281.5852355957031 * e),
                n.bezierCurveTo(66.00003051757812 * e, 288.5852355957031 * e, 59.000030517578125 * e, 288.5852355957031 * e, 39.000030517578125 * e, 285.5852355957031 * e),
                n.bezierCurveTo(56.000030517578125 * e, 216.58523559570312 * e, 91.00003051757812 * e, 204.58523559570312 * e, 129.00003051757812 * e, 189.58523559570312 * e),
                n.bezierCurveTo(90.00003051757812 * e, 176.58523559570312 * e, 89.00003051757812 * e, 173.58523559570312 * e, 79.00003051757812 * e, 166.58523559570312 * e),
                n.bezierCurveTo(82.00003051757812 * e, 155.08523559570312 * e, 82.00003051757812 * e, 155.08523559570312 * e, 85.00003051757812 * e, 143.58523559570312 * e),
                n.bezierCurveTo(75.50003051757812 * e, 147.58523559570312 * e, 75.50003051757812 * e, 147.58523559570312 * e, 66.00003051757812 * e, 151.58523559570312 * e),
                n.bezierCurveTo(44.000030517578125 * e, 133.58523559570312 * e, 41.000030517578125 * e, 124.58523559570312 * e, 34.000030517578125 * e, 102.58523559570312 * e),
                n.bezierCurveTo(100.00003051757812 * e, 81.58523559570312 * e, 134.00003051757812 * e, 118.58523559570312 * e, 150.00003051757812 * e, 128.58523559570312 * e),
                n.bezierCurveTo(144.00003051757812 * e, 102.58523559570312 * e, 147.00003051757812 * e, 90.58523559570312 * e, 150.00003051757812 * e, 80.58523559570312 * e),
                n.bezierCurveTo(159.50003051757812 * e, 79.08523559570312 * e, 159.50003051757812 * e, 79.08523559570312 * e, 169.00003051757812 * e, 77.58523559570312 * e),
                n.bezierCurveTo(163.00003051757812 * e, 72.58523559570312 * e, 163.00003051757812 * e, 72.58523559570312 * e, 157.00003051757812 * e, 67.58523559570312 * e),
                n.bezierCurveTo(162.00003051757812 * e, 42.585235595703125 * e, 169.00003051757812 * e, 29.585235595703125 * e, 182.00003051757812 * e, 14.585235595703125 * e),
                n.bezierCurveTo(219.00003051757812 * e, 48.585235595703125 * e, 222.00003051757812 * e, 92.58523559570312 * e, 218.00003051757812 * e, 112.58523559570312 * e),
                n.bezierCurveTo(239.00003051757812 * e, 95.58523559570312 * e, 242.00003051757812 * e, 97.58523559570312 * e, 249.00003051757812 * e, 94.58523559570312 * e),
                n.bezierCurveTo(255.00003051757812 * e, 103.08523559570312 * e, 255.00003051757812 * e, 103.08523559570312 * e, 261.0000305175781 * e, 111.58523559570312 * e),
                n.bezierCurveTo(261.5000305175781 * e, 99.58523559570312 * e, 261.5000305175781 * e, 99.58523559570312 * e, 262.0000305175781 * e, 87.58523559570312 * e),
                n.bezierCurveTo(282.0000305175781 * e, 77.58523559570312 * e, 301.0000305175781 * e, 74.58523559570312 * e, 314.0000305175781 * e, 76.58523559570312 * e),
                n.closePath(),
                he(n, void 0, t[2], 4 * e),
                i
            }
            function Wt(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                return n.width = 248 * e,
                n.height = 128 * e,
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(137 * e, 7 * e),
                a.bezierCurveTo(169 * e, 14 * e, 212 * e, 9 * e, 241 * e, 5 * e),
                a.bezierCurveTo(211 * e, 63 * e, 158 * e, 92 * e, 103 * e, 109 * e),
                a.bezierCurveTo(73 * e, 126 * e, 54 * e, 124 * e, 6 * e, 99 * e),
                a.bezierCurveTo(82 * e, 63 * e, 113 * e, 35 * e, 137 * e, 8 * e),
                a.closePath(),
                he(a, i[0], i[1], 14 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(73 * e, 124 * e),
                a.bezierCurveTo(111 * e, 126 * e, 162 * e, 97 * e, 203 * e, 61 * e),
                a.bezierCurveTo(156 * e, 98 * e, 131 * e, 106 * e, 105 * e, 109 * e),
                a.bezierCurveTo(99 * e, 121 * e, 87 * e, 124 * e, 72 * e, 124 * e),
                a.closePath(),
                he(a, i[2], i[3], 1 * e),
                n
            }
            function Ft(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                return n.width = 130 * e,
                n.height = 148 * e,
                a.globalAlpha = t ? .5 : 1,
                a.save(),
                a.translate(65 * e, 85 * e),
                a.rotate(1.4),
                me(a, 7, 60 * e, 10 * e),
                a.restore(),
                he(a, i[0]),
                a.globalAlpha = 1,
                a.save(),
                a.translate(65 * e, 74 * e),
                a.rotate(1.4),
                me(a, 7, 60 * e, 10 * e),
                he(a, i[1], i[2], 4),
                a.rotate(.64),
                me(a, 7, 40 * e, 10 * e),
                he(a, i[3], i[4], 4),
                a.rotate(.12),
                me(a, 7, 23 * e, 5 * e),
                a.restore(),
                he(a, i[5]),
                n
            }
            function xt(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                return n.width = 125 * e,
                n.height = 139 * e,
                a.globalAlpha = t ? .5 : 1,
                a.save(),
                a.translate(63 * e, 79 * e),
                a.rotate(1),
                me(a, 8, 60 * e, 10 * e),
                he(a, i[0]),
                a.restore(),
                a.globalAlpha = 1,
                a.save(),
                a.translate(63 * e, 69 * e),
                a.rotate(1),
                me(a, 8, 60 * e, 10 * e),
                he(a, i[1], i[2], 4),
                a.rotate(.56),
                me(a, 8, 40 * e, 10 * e),
                he(a, i[3], i[4], 4),
                a.rotate(.28),
                me(a, 8, 28 * e, 8 * e),
                he(a, i[5]),
                a.restore(),
                n
            }
            function Vt(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                return n.width = 90 * e,
                n.height = 101 * e,
                a.translate(0 * e, 5 * e),
                a.globalAlpha = 1,
                Re(a, 44 * e, 45 * e, 41 * e),
                he(a, i[1], i[2], 4 * e),
                Re(a, 44 * e, 45 * e, 31 * e),
                he(a, i[3]),
                a.save(),
                a.translate(45 * e, 45 * e),
                ye(a, -9 * e, -25.5 * e, 18 * e, 51 * e, 30 * e),
                a.restore(),
                he(a, i[4], i[4], 2 * e),
                a.save(),
                a.translate(45 * e, 45 * e),
                ye(a, -26 * e, -9 * e, 52 * e, 18 * e, 30 * e),
                a.restore(),
                he(a, i[4], i[4], 2 * e),
                Re(a, 45 * e, 29 * e, 7 * e),
                he(a, i[5]),
                Re(a, 45 * e, 61 * e, 7 * e),
                he(a, i[5]),
                Re(a, 28 * e, 45 * e, 7 * e),
                he(a, i[5]),
                Re(a, 62 * e, 45 * e, 7 * e),
                he(a, i[5]),
                n
            }
            function Ut(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                return n.width = 90 * e,
                n.height = 98 * e,
                a.translate(0, 4 * e),
                a.globalAlpha = 1,
                a.save(),
                a.translate(44 * e, 44 * e),
                a.rotate(1.4),
                me(a, 7, 41 * e, 10 * e),
                he(a, i[1], i[2], 4 * e),
                me(a, 7, 35 * e, 10 * e),
                he(a, i[3], i[4], 4 * e),
                me(a, 7, 23 * e, 5 * e),
                a.restore(),
                he(a, i[5]),
                a.save(),
                a.translate(45 * e, 45 * e),
                a.rotate(0),
                ye(a, -9 * e, -25.5 * e, 18 * e, 51 * e, 30 * e),
                a.restore(),
                he(a, i[4], i[4], 2 * e),
                a.save(),
                a.translate(45 * e, 45 * e),
                a.rotate(0),
                ye(a, -26 * e, -9 * e, 52 * e, 18 * e, 30 * e),
                a.restore(),
                he(a, i[4], i[4], 2 * e),
                Re(a, 45 * e, 29 * e, 7 * e),
                he(a, i[5]),
                Re(a, 45 * e, 61 * e, 7 * e),
                he(a, i[5]),
                Re(a, 28 * e, 45 * e, 7 * e),
                he(a, i[5]),
                Re(a, 62 * e, 45 * e, 7 * e),
                he(a, i[5]),
                n
            }
            function Xt(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                return n.width = 90 * e,
                n.height = 98 * e,
                a.translate(0, 4 * e),
                a.globalAlpha = t ? .5 : 1,
                a.save(),
                a.translate(44 * e, 50 * e),
                a.rotate(1),
                me(a, 8, 41 * e, 10 * e),
                he(a, i[0]),
                a.restore(),
                a.globalAlpha = 1,
                a.save(),
                a.translate(44 * e, 44 * e),
                a.rotate(1),
                me(a, 8, 41 * e, 10 * e),
                he(a, i[1], i[2], 4 * e),
                a.rotate(.56),
                me(a, 8, 33 * e, 10 * e),
                he(a, i[3], i[4], 4 * e),
                a.rotate(.28),
                me(a, 8, 24 * e, 8 * e),
                he(a, i[5]),
                a.restore(),
                a.save(),
                a.translate(45 * e, 45 * e),
                a.rotate(0),
                ye(a, -9 * e, -25.5 * e, 18 * e, 51 * e, 30 * e),
                a.restore(),
                he(a, i[4], i[4], 2 * e),
                a.save(),
                a.translate(45 * e, 45 * e),
                a.rotate(0),
                ye(a, -26 * e, -9 * e, 52 * e, 18 * e, 30 * e),
                a.restore(),
                he(a, i[4], i[4], 2 * e),
                Re(a, 45 * e, 29 * e, 7 * e),
                he(a, i[5]),
                Re(a, 45 * e, 61 * e, 7 * e),
                he(a, i[5]),
                Re(a, 28 * e, 45 * e, 7 * e),
                he(a, i[5]),
                Re(a, 62 * e, 45 * e, 7 * e),
                he(a, i[5]),
                n
            }
            function qt(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                return n.width = 300 * e,
                n.height = 300 * e,
                a.globalAlpha = t ? .5 : 1,
                a.save(),
                a.translate(150 * e, 160 * e),
                a.rotate(6.28),
                me(a, 6, 146 * e, 30 * e),
                a.restore(),
                he(a, i[0]),
                a.globalAlpha = 1,
                a.save(),
                a.translate(150 * e, 150 * e),
                a.rotate(6.28),
                me(a, 6, 146 * e, 30 * e),
                a.restore(),
                he(a, i[1], i[2], 8 * e),
                a.save(),
                a.translate(150 * e, 150 * e),
                a.rotate(0),
                me(a, 6, 105 * e, 30 * e),
                a.restore(),
                he(a, i[3], i[3], 8 * e),
                a.save(),
                a.translate(150 * e, 150 * e),
                a.rotate(0),
                me(a, 6, 66 * e, 30 * e),
                a.restore(),
                he(a, i[4], i[2], 8 * e),
                a.save(),
                a.translate(150 * e, 150 * e),
                a.rotate(0),
                me(a, 6, 31 * e, 30 * e),
                a.restore(),
                he(a, i[5], i[6], 8 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(150 * e, 207 * e),
                a.bezierCurveTo(150 * e, 151 * e, 150 * e, 101 * e, 150 * e, 94 * e),
                a.closePath(),
                he(a, void 0, i[2], 8 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(118 * e, 100 * e),
                a.bezierCurveTo(118 * e, 205 * e, 118 * e, 207 * e, 118 * e, 200 * e),
                a.closePath(),
                he(a, void 0, i[2], 8 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(183 * e, 100 * e),
                a.bezierCurveTo(183 * e, 203 * e, 183 * e, 203 * e, 183 * e, 200 * e),
                a.closePath(),
                he(a, void 0, i[2], 8 * e),
                n
            }
            function zt(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                return n.width = 300 * e,
                n.height = 300 * e,
                a.globalAlpha = t ? .5 : 1,
                a.save(),
                a.translate(150 * e, 160 * e),
                a.rotate(6.28),
                me(a, 6, 146 * e, 30 * e),
                a.restore(),
                he(a, i[0]),
                a.globalAlpha = 1,
                a.save(),
                a.translate(150 * e, 150 * e),
                a.rotate(6.28),
                me(a, 6, 146 * e, 30 * e),
                a.restore(),
                he(a, i[1], i[2], 8 * e),
                a.save(),
                a.translate(150 * e, 150 * e),
                a.rotate(0),
                me(a, 6, 105 * e, 30 * e),
                a.restore(),
                he(a, i[3], i[3], 8 * e),
                a.save(),
                a.translate(150 * e, 150 * e),
                a.rotate(0),
                me(a, 6, 66 * e, 30 * e),
                a.restore(),
                he(a, i[4], i[2], 8 * e),
                a.save(),
                a.translate(131 * e, 116 * e),
                me(a, 7, 17 * e, 8 * e),
                a.restore(),
                he(a, i[6]),
                a.save(),
                a.translate(163 * e, 168 * e),
                me(a, 7, 25 * e, 8 * e),
                a.restore(),
                he(a, i[6]),
                a.save(),
                a.translate(117 * e, 151 * e),
                me(a, 7, 11 * e, 8 * e),
                a.restore(),
                he(a, i[6]),
                a.save(),
                a.translate(167 * e, 122 * e),
                me(a, 7, 12 * e, 8 * e),
                a.restore(),
                he(a, i[6]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(150 * e, 207 * e),
                a.bezierCurveTo(150 * e, 151 * e, 150 * e, 101 * e, 150 * e, 94 * e),
                a.closePath(),
                he(a, void 0, i[2], 8 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(118 * e, 100 * e),
                a.bezierCurveTo(118 * e, 205 * e, 118 * e, 207 * e, 118 * e, 200 * e),
                a.closePath(),
                he(a, void 0, i[2], 8 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(183 * e, 100 * e),
                a.bezierCurveTo(183 * e, 203 * e, 183 * e, 203 * e, 183 * e, 200 * e),
                a.closePath(),
                he(a, void 0, i[2], 8 * e),
                n
            }
            function jt(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                return n.width = 90 * e,
                n.height = 98 * e,
                a.translate(0, 4 * e),
                a.globalAlpha = 1,
                a.save(),
                a.translate(44 * e, 44 * e),
                a.rotate(.2),
                me(a, 9, 41 * e, 10 * e),
                he(a, i[1], i[2], 4 * e),
                a.rotate(-.32),
                me(a, 9, 32 * e, 10 * e),
                he(a, i[3], i[4], 4 * e),
                a.rotate(.68),
                me(a, 9, 23 * e, 8 * e),
                he(a, i[5], i[6], 6 * e),
                a.restore(),
                a.save(),
                a.translate(45 * e, 45 * e),
                a.rotate(0),
                ye(a, -9 * e, -25.5 * e, 18 * e, 51 * e, 30 * e),
                a.restore(),
                he(a, i[4], i[4], 2 * e),
                a.save(),
                a.translate(45 * e, 45 * e),
                a.rotate(0),
                ye(a, -26 * e, -9 * e, 52 * e, 18 * e, 30 * e),
                a.restore(),
                he(a, i[4], i[4], 2 * e),
                Re(a, 45 * e, 29 * e, 7 * e),
                he(a, i[5]),
                Re(a, 45 * e, 61 * e, 7 * e),
                he(a, i[5]),
                Re(a, 28 * e, 45 * e, 7 * e),
                he(a, i[5]),
                Re(a, 62 * e, 45 * e, 7 * e),
                he(a, i[5]),
                n
            }
            function $t(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                return n.width = 135 * e,
                n.height = 120 * e,
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(3.5 * e, 55.25 * e),
                a.bezierCurveTo(3.5 * e, 114.25 * e, 2.5 * e, 109.25 * e, 3.5 * e, 112.25 * e),
                a.bezierCurveTo(5.5 * e, 119.25 * e, 8.5 * e, 119.25 * e, 11.5 * e, 119.25 * e),
                a.bezierCurveTo(15.5 * e, 114.25 * e, 13.5 * e, 95.25 * e, 14.5 * e, 82.25 * e),
                a.closePath(),
                he(a, i[0], i[1], 7 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(6.5 * e, 43.25 * e),
                a.bezierCurveTo(3.5 * e, 27.25 * e, 7.5 * e, 20.25 * e, 25.5 * e, 11.25 * e),
                a.bezierCurveTo(45.5 * e, -.75 * e, 73.5 * e, 1.25 * e, 107.5 * e, 10.25 * e),
                a.bezierCurveTo(131.5 * e, 21.25 * e, 125.5 * e, 34.25 * e, 125.5 * e, 36.25 * e),
                a.closePath(),
                he(a, i[0], i[1], 7 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(120.5 * e, 62.25 * e),
                a.bezierCurveTo(121.5 * e, 95.25 * e, 120.5 * e, 80.25 * e, 120.5 * e, 100.25 * e),
                a.bezierCurveTo(118.5 * e, 119.25 * e, 123.5 * e, 118.25 * e, 129.5 * e, 113.25 * e),
                a.bezierCurveTo(133.5 * e, 107.25 * e, 130.5 * e, 97.25 * e, 130.5 * e, 87.25 * e),
                a.bezierCurveTo(129.5 * e, 56.25 * e, 130 * e, 70.75 * e, 129.5 * e, 54.25 * e),
                a.closePath(),
                he(a, i[0], i[1], 7 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(17.5 * e, 27 * e),
                a.bezierCurveTo(48.5 * e, 5 * e, 93.5 * e, 14 * e, 118.5 * e, 26 * e),
                a.bezierCurveTo(132.5 * e, 35 * e, 133.5 * e, 52 * e, 132.5 * e, 68 * e),
                a.bezierCurveTo(125.5 * e, 87 * e, 116.5 * e, 84 * e, 96.5 * e, 75 * e),
                a.bezierCurveTo(60.5 * e, 66 * e, 52.5 * e, 74 * e, 37.5 * e, 78 * e),
                a.bezierCurveTo(2.5 * e, 86 * e, 3.5 * e, 78 * e, 1.5 * e, 61 * e),
                a.bezierCurveTo(1.5 * e, 37 * e, 9.5 * e, 32 * e, 15.5 * e, 28 * e),
                a.closePath(),
                he(a, i[2], i[3], 7 * e),
                n
            }
            function Zt(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                return n.width = 501 * e,
                n.height = 309 * e,
                a.translate(0, 6 * e),
                a.globalAlpha = t ? .5 : 1,
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(126 * e, 184 * e),
                a.bezierCurveTo(169 * e, 196 * e, 194 * e, 198 * e, 227 * e, 198 * e),
                a.bezierCurveTo(235 * e, 222 * e, 236 * e, 223 * e, 241 * e, 226 * e),
                a.bezierCurveTo(245 * e, 228 * e, 257 * e, 228 * e, 263 * e, 226 * e),
                a.bezierCurveTo(267 * e, 225 * e, 270 * e, 211 * e, 275 * e, 198 * e),
                a.bezierCurveTo(332 * e, 194 * e, 347 * e, 192 * e, 372 * e, 188 * e),
                a.bezierCurveTo(366 * e, 174.5 * e, 366 * e, 174.5 * e, 360 * e, 161 * e),
                a.bezierCurveTo(253.5 * e, 162 * e, 253.5 * e, 162 * e, 147 * e, 163 * e),
                a.closePath(),
                he(a, i[0]),
                a.globalAlpha = 1,
                a.translate(0, -6 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(100 * e, 116 * e),
                a.bezierCurveTo(90 * e, 101 * e, 96 * e, 89 * e, 106 * e, 83 * e),
                a.bezierCurveTo(86 * e, 79 * e, 86 * e, 52 * e, 93 * e, 38 * e),
                a.bezierCurveTo(99 * e, 51 * e, 107 * e, 57 * e, 122 * e, 63 * e),
                a.bezierCurveTo(130 * e, 53 * e, 141 * e, 46 * e, 161 * e, 46 * e),
                a.bezierCurveTo(157 * e, 31 * e, 158 * e, 20 * e, 169 * e, 6 * e),
                a.bezierCurveTo(171 * e, 24 * e, 186 * e, 33 * e, 198 * e, 45 * e),
                a.bezierCurveTo(252 * e, 45 * e, 252 * e, 45 * e, 306 * e, 45 * e),
                a.bezierCurveTo(323 * e, 33 * e, 332 * e, 21 * e, 335 * e, 7 * e),
                a.bezierCurveTo(349 * e, 21 * e, 347 * e, 36 * e, 345 * e, 46 * e),
                a.bezierCurveTo(364 * e, 46 * e, 369 * e, 48 * e, 377 * e, 63 * e),
                a.bezierCurveTo(398 * e, 58 * e, 403 * e, 49 * e, 409 * e, 40 * e),
                a.bezierCurveTo(419 * e, 57 * e, 411 * e, 79 * e, 398 * e, 85 * e),
                a.bezierCurveTo(405 * e, 100 * e, 405 * e, 106 * e, 401 * e, 118 * e),
                a.bezierCurveTo(332.5 * e, 128.5 * e, 332.5 * e, 128.5 * e, 264 * e, 139 * e),
                a.closePath(),
                he(a, i[1], i[2], 10 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(122 * e, 191 * e),
                a.bezierCurveTo(123 * e, 237 * e, 135 * e, 245 * e, 153 * e, 259 * e),
                a.bezierCurveTo(167 * e, 269 * e, 158 * e, 281 * e, 118 * e, 276 * e),
                a.bezierCurveTo(104 * e, 273 * e, 98 * e, 268 * e, 93 * e, 242 * e),
                a.bezierCurveTo(89 * e, 220 * e, 92 * e, 201 * e, 102 * e, 179 * e),
                a.closePath(),
                he(a, i[3], i[2], 10 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(403 * e, 182 * e),
                a.bezierCurveTo(414 * e, 215 * e, 412 * e, 232 * e, 403 * e, 260 * e),
                a.bezierCurveTo(395 * e, 274 * e, 375 * e, 272 * e, 356 * e, 270 * e),
                a.bezierCurveTo(345 * e, 268 * e, 339 * e, 262 * e, 354 * e, 252 * e),
                a.bezierCurveTo(370 * e, 242 * e, 380 * e, 225 * e, 384 * e, 184 * e),
                a.closePath(),
                he(a, i[3], i[2], 10 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(155 * e, 157 * e),
                a.bezierCurveTo(146 * e, 189 * e, 137 * e, 198 * e, 114 * e, 219 * e),
                a.bezierCurveTo(104 * e, 212 * e, 98 * e, 203 * e, 89 * e, 189 * e),
                a.bezierCurveTo(82 * e, 178 * e, 91 * e, 164 * e, 93 * e, 136 * e),
                a.closePath(),
                he(a, i[4], i[2], 10 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(347 * e, 162 * e),
                a.bezierCurveTo(357 * e, 195 * e, 376 * e, 209 * e, 387 * e, 217 * e),
                a.bezierCurveTo(409 * e, 201 * e, 420 * e, 181 * e, 416 * e, 166 * e),
                a.bezierCurveTo(410 * e, 150 * e, 412 * e, 149 * e, 408 * e, 130 * e),
                a.closePath(),
                he(a, i[4], i[2], 10 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(86 * e, 134 * e),
                a.bezierCurveTo(79 * e, 102 * e, 92 * e, 84 * e, 108 * e, 92 * e),
                a.bezierCurveTo(149 * e, 108 * e, 184 * e, 111 * e, 242 * e, 111 * e),
                a.bezierCurveTo(294 * e, 108 * e, 341 * e, 105 * e, 386 * e, 98 * e),
                a.bezierCurveTo(412 * e, 91 * e, 417 * e, 86 * e, 415 * e, 133 * e),
                a.bezierCurveTo(413 * e, 160 * e, 413 * e, 160 * e, 368 * e, 174 * e),
                a.bezierCurveTo(308 * e, 184 * e, 291 * e, 185 * e, 270 * e, 186 * e),
                a.bezierCurveTo(264 * e, 206 * e, 262 * e, 215 * e, 253 * e, 215 * e),
                a.bezierCurveTo(239 * e, 217 * e, 239 * e, 211 * e, 231 * e, 186 * e),
                a.bezierCurveTo(178 * e, 184 * e, 156 * e, 179 * e, 112 * e, 162 * e),
                a.bezierCurveTo(87 * e, 151 * e, 90 * e, 144 * e, 87 * e, 137 * e),
                a.closePath(),
                he(a, i[4], i[2], 10 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(63 * e, 98 * e),
                a.bezierCurveTo(84 * e, 121 * e, 109 * e, 102 * e, 124 * e, 117 * e),
                a.bezierCurveTo(138 * e, 136 * e, 123 * e, 165 * e, 94 * e, 150 * e),
                a.bezierCurveTo(66 * e, 131 * e, 64 * e, 115 * e, 63 * e, 99 * e),
                a.closePath(),
                he(a, i[3], i[2], 10 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(449 * e, 97 * e),
                a.bezierCurveTo(446 * e, 143 * e, 415 * e, 151 * e, 402 * e, 155 * e),
                a.bezierCurveTo(386 * e, 157 * e, 373 * e, 133 * e, 391 * e, 116 * e),
                a.bezierCurveTo(402 * e, 106 * e, 432 * e, 124 * e, 449 * e, 97 * e),
                a.closePath(),
                he(a, i[3], i[2], 10 * e),
                n
            }
            function Jt(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                return n.width = 304 * e,
                n.height = 278 * e,
                a.translate(10 * e, 25 * e),
                a.globalAlpha = t ? .5 : 1,
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(128 * e, 137 * e),
                a.bezierCurveTo(155 * e, 144 * e, 223 * e, 143 * e, 256 * e, 122 * e),
                a.bezierCurveTo(249 * e, 180 * e, 210 * e, 227 * e, 164 * e, 242 * e),
                a.bezierCurveTo(74 * e, 213 * e, 99 * e, 166 * e, 127 * e, 138 * e),
                a.closePath(),
                he(a, i[0]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(284 * e, 52 * e),
                a.bezierCurveTo(126 * e, 112 * e, 89 * e, 177 * e, 170 * e, 241 * e),
                a.bezierCurveTo(103 * e, 275 * e, 20 * e, 239 * e, 12 * e, 159 * e),
                a.bezierCurveTo(5 * e, 76 * e, 75 * e, 4 * e, 165 * e, 13 * e),
                a.bezierCurveTo(233 * e, 15 * e, 260 * e, 33 * e, 284 * e, 52 * e),
                a.closePath(),
                he(a, i[0]),
                a.translate(-10 * e, -25 * e),
                a.globalAlpha = 1,
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(128 * e, 137 * e),
                a.bezierCurveTo(155 * e, 144 * e, 223 * e, 143 * e, 256 * e, 122 * e),
                a.bezierCurveTo(249 * e, 180 * e, 210 * e, 227 * e, 164 * e, 242 * e),
                a.bezierCurveTo(74 * e, 213 * e, 99 * e, 166 * e, 127 * e, 138 * e),
                a.closePath(),
                he(a, i[1], i[2], 15 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(284 * e, 52 * e),
                a.bezierCurveTo(126 * e, 112 * e, 89 * e, 177 * e, 170 * e, 241 * e),
                a.bezierCurveTo(103 * e, 275 * e, 20 * e, 239 * e, 12 * e, 159 * e),
                a.bezierCurveTo(5 * e, 76 * e, 75 * e, 4 * e, 165 * e, 13 * e),
                a.bezierCurveTo(233 * e, 15 * e, 260 * e, 33 * e, 284 * e, 52 * e),
                a.closePath(),
                he(a, i[3], i[4], 15 * e),
                n
            }
            function Qt(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                return n.width = 175 * e,
                n.height = 169 * e,
                a.globalAlpha = .5,
                a.translate(0, 3 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(19 * e, 139 * e),
                a.bezierCurveTo(18 * e, 163 * e, 22 * e, 156 * e, 53 * e, 157 * e),
                a.bezierCurveTo(97.5 * e, 157 * e, 97.5 * e, 157 * e, 142 * e, 157 * e),
                a.bezierCurveTo(150 * e, 157 * e, 153 * e, 156 * e, 154 * e, 142 * e),
                a.closePath(),
                he(a, i[0]),
                a.globalAlpha = 1,
                a.translate(0, -3 * e),
                a.save(),
                a.translate(86.5 * e, 81.5 * e),
                ye(a, -66.5 * e, -65.5 * e, 133 * e, 131 * e, 10 * e),
                a.restore(),
                he(a, i[1], i[2], 5 * e),
                a.save(),
                a.translate(84.5 * e, 79 * e),
                ye(a, -50.5 * e, -49 * e, 101 * e, 98 * e, 10 * e),
                a.restore(),
                he(a, i[3], i[2], 5 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(42 * e, 54 * e),
                a.bezierCurveTo(37 * e, 48 * e, 39 * e, 44 * e, 38 * e, 41 * e),
                a.bezierCurveTo(42 * e, 40 * e, 45 * e, 40 * e, 50 * e, 41 * e),
                a.bezierCurveTo(85 * e, 36 * e, 98 * e, 37 * e, 116 * e, 42 * e),
                a.bezierCurveTo(132 * e, 39 * e, 132 * e, 39 * e, 133 * e, 56 * e),
                a.bezierCurveTo(136 * e, 73 * e, 136 * e, 84 * e, 132 * e, 106 * e),
                a.bezierCurveTo(47 * e, 113 * e, 85.5 * e, 106 * e, 39 * e, 106 * e),
                a.bezierCurveTo(32 * e, 81 * e, 38 * e, 60 * e, 42 * e, 55 * e),
                a.closePath(),
                he(a, i[4], i[5], 5 * e),
                a.save(),
                a.translate(28 * e, 24 * e),
                a.rotate(0),
                ye(a, -14 * e, -14 * e, 28 * e, 28 * e, 4 * e),
                a.restore(),
                he(a, i[1], i[2], 5 * e),
                a.save(),
                a.translate(143 * e, 23 * e),
                a.rotate(0),
                ye(a, -14 * e, -14 * e, 28 * e, 28 * e, 4 * e),
                a.restore(),
                he(a, i[1], i[2], 5 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(55 * e, 80 * e),
                a.bezierCurveTo(73 * e, 78 * e, 84 * e, 74 * e, 100 * e, 64 * e),
                a.bezierCurveTo(111 * e, 57 * e, 125 * e, 67 * e, 108 * e, 84 * e),
                a.bezierCurveTo(96 * e, 95 * e, 86 * e, 96 * e, 70 * e, 88 * e),
                a.bezierCurveTo(62.5 * e, 84 * e, 62.5 * e, 84 * e, 55 * e, 80 * e),
                a.closePath(),
                he(a, i[5]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(17 * e, 112 * e),
                a.bezierCurveTo(14 * e, 146 * e, 27 * e, 152 * e, 37 * e, 149 * e),
                a.bezierCurveTo(78 * e, 155 * e, 128 * e, 150 * e, 146 * e, 150 * e),
                a.bezierCurveTo(158 * e, 144 * e, 158 * e, 121 * e, 153 * e, 114 * e),
                a.closePath(),
                he(a, i[8], i[9], 5 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(127 * e, 111 * e),
                a.bezierCurveTo(133 * e, 136 * e, 115 * e, 149 * e, 88 * e, 150 * e),
                a.bezierCurveTo(119.5 * e, 151 * e, 119.5 * e, 151 * e, 151 * e, 152 * e),
                a.bezierCurveTo(159 * e, 136 * e, 155 * e, 126 * e, 154 * e, 113 * e),
                a.closePath(),
                he(a, i[9]),
                a.globalAlpha = .5,
                a.translate(0, 3 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(15 * e, 117 * e),
                a.bezierCurveTo(34 * e, 109 * e, 61 * e, 106 * e, 94 * e, 109 * e),
                a.bezierCurveTo(126 * e, 110 * e, 142 * e, 113 * e, 154 * e, 119 * e),
                a.bezierCurveTo(154 * e, 123 * e, 154 * e, 123 * e, 154 * e, 127 * e),
                a.bezierCurveTo(127 * e, 118 * e, 15 * e, 122 * e, 18 * e, 129 * e),
                a.closePath(),
                he(a, i[0]),
                a.globalAlpha = 1,
                a.translate(0, -3 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(14 * e, 127 * e),
                a.bezierCurveTo(13 * e, 117 * e, 12 * e, 109 * e, 15 * e, 103 * e),
                a.bezierCurveTo(16 * e, 95 * e, 21 * e, 92 * e, 60 * e, 93 * e),
                a.bezierCurveTo(91 * e, 93 * e, 118 * e, 93 * e, 143 * e, 96 * e),
                a.bezierCurveTo(151 * e, 96 * e, 155 * e, 99 * e, 156 * e, 112 * e),
                a.bezierCurveTo(157 * e, 124 * e, 157 * e, 127 * e, 156 * e, 128 * e),
                a.bezierCurveTo(138 * e, 112 * e, 100 * e, 118 * e, 84 * e, 118 * e),
                a.bezierCurveTo(28 * e, 118 * e, 20 * e, 120 * e, 16 * e, 127 * e),
                a.closePath(),
                he(a, i[4], i[5], 5 * e),
                a.save(),
                a.translate(27.5 * e, 138.5 * e),
                ye(a, -13.5 * e, -14.5 * e, 27 * e, 29 * e, 4 * e),
                a.restore(),
                he(a, i[1], i[2], 5 * e),
                a.save(),
                a.translate(143.5 * e, 137 * e),
                ye(a, -13.5 * e, -14 * e, 27 * e, 28 * e, 4 * e),
                a.restore(),
                he(a, i[1], i[2], 5 * e),
                n
            }
            function ei(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                return n.width = 175 * e,
                n.height = 169 * e,
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(17 * e, 112 * e),
                a.bezierCurveTo(14 * e, 146 * e, 27 * e, 152 * e, 37 * e, 149 * e),
                a.bezierCurveTo(78 * e, 155 * e, 128 * e, 150 * e, 146 * e, 150 * e),
                a.bezierCurveTo(158 * e, 144 * e, 158 * e, 121 * e, 153 * e, 114 * e),
                a.closePath(),
                he(a, i[8], i[9], 5 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(127 * e, 111 * e),
                a.bezierCurveTo(133 * e, 136 * e, 115 * e, 149 * e, 88 * e, 150 * e),
                a.bezierCurveTo(119.5 * e, 151 * e, 119.5 * e, 151 * e, 151 * e, 152 * e),
                a.bezierCurveTo(159 * e, 136 * e, 155 * e, 126 * e, 154 * e, 113 * e),
                a.closePath(),
                he(a, i[9]),
                a.globalAlpha = .5,
                a.translate(0, 3 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(15 * e, 117 * e),
                a.bezierCurveTo(34 * e, 109 * e, 61 * e, 106 * e, 94 * e, 109 * e),
                a.bezierCurveTo(126 * e, 110 * e, 142 * e, 113 * e, 154 * e, 119 * e),
                a.bezierCurveTo(154 * e, 123 * e, 154 * e, 123 * e, 154 * e, 127 * e),
                a.bezierCurveTo(127 * e, 118 * e, 15 * e, 122 * e, 18 * e, 129 * e),
                a.closePath(),
                he(a, i[0]),
                a.globalAlpha = 1,
                a.translate(0, -3 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(14 * e, 127 * e),
                a.bezierCurveTo(13 * e, 117 * e, 12 * e, 109 * e, 15 * e, 103 * e),
                a.bezierCurveTo(16 * e, 95 * e, 21 * e, 92 * e, 60 * e, 93 * e),
                a.bezierCurveTo(91 * e, 93 * e, 118 * e, 93 * e, 143 * e, 96 * e),
                a.bezierCurveTo(151 * e, 96 * e, 155 * e, 99 * e, 156 * e, 112 * e),
                a.bezierCurveTo(157 * e, 124 * e, 157 * e, 127 * e, 156 * e, 128 * e),
                a.bezierCurveTo(138 * e, 112 * e, 100 * e, 118 * e, 84 * e, 118 * e),
                a.bezierCurveTo(28 * e, 118 * e, 20 * e, 120 * e, 16 * e, 127 * e),
                a.closePath(),
                he(a, i[4], i[5], 5 * e),
                a.save(),
                a.translate(27.5 * e, 138.5 * e),
                ye(a, -13.5 * e, -14.5 * e, 27 * e, 29 * e, 4 * e),
                a.restore(),
                he(a, i[1], i[2], 5 * e),
                a.save(),
                a.translate(143.5 * e, 137 * e),
                ye(a, -13.5 * e, -14 * e, 27 * e, 28 * e, 4 * e),
                a.restore(),
                he(a, i[1], i[2], 5 * e),
                n
            }
            function ti(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                return n.width = 115 * e,
                n.height = 585 * e,
                a.scale(-1, 1),
                a.translate(-110 * e, 0),
                a.translate(10 * e, 10 * e),
                a.globalAlpha = t ? .5 : 1,
                a.save(),
                a.translate(51.5 * e, 342 * e),
                ye(a, -14.5 * e, -225 * e, 29 * e, 450 * e, 20 * e),
                a.restore(),
                he(a, i[0]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(54 * e, 83 * e),
                a.bezierCurveTo(70 * e, 69 * e, 78 * e, 62 * e, 82 * e, 40 * e),
                a.bezierCurveTo(93 * e, 48 * e, 103 * e, 64 * e, 95 * e, 102 * e),
                a.bezierCurveTo(60 * e, 114 * e, 53 * e, 103 * e, 54 * e, 85 * e),
                a.closePath(),
                he(a, i[0]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(95 * e, 97 * e),
                a.bezierCurveTo(56 * e, 102 * e, 43 * e, 77 * e, 71 * e, 6 * e),
                a.bezierCurveTo(34 * e, 10 * e, 6 * e, 43 * e, 5 * e, 76 * e),
                a.bezierCurveTo(4 * e, 98 * e, 15 * e, 130 * e, 64 * e, 130 * e),
                a.bezierCurveTo(76 * e, 129 * e, 95 * e, 113 * e, 97 * e, 97 * e),
                a.closePath(),
                he(a, i[0]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(55 * e, 176 * e),
                a.bezierCurveTo(74 * e, 175 * e, 82 * e, 169 * e, 96 * e, 155 * e),
                a.bezierCurveTo(103 * e, 183 * e, 95 * e, 214 * e, 54 * e, 219 * e),
                a.closePath(),
                he(a, i[0]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(50 * e, 176 * e),
                a.bezierCurveTo(25 * e, 177 * e, 16 * e, 164 * e, 7 * e, 156 * e),
                a.bezierCurveTo(0 * e, 186 * e, 10 * e, 201 * e, 43 * e, 220 * e),
                a.closePath(),
                he(a, i[0]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(35 * e, 403 * e),
                a.bezierCurveTo(47 * e, 412 * e, 58 * e, 412 * e, 67 * e, 403 * e),
                a.bezierCurveTo(66.5 * e, 434 * e, 66.5 * e, 434 * e, 66 * e, 465 * e),
                a.bezierCurveTo(56 * e, 480 * e, 40 * e, 472 * e, 36 * e, 465 * e),
                a.closePath(),
                he(a, i[0]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(59 * e, 67 * e),
                a.bezierCurveTo(47 * e, 97 * e, 18 * e, 117 * e, 11 * e, 110 * e),
                a.bezierCurveTo(11 * e, 115 * e, 15 * e, 122 * e, 23 * e, 124 * e),
                a.bezierCurveTo(46 * e, 118 * e, 52 * e, 113 * e, 62 * e, 86 * e),
                a.closePath(),
                he(a, i[0]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(30 * e, 125 * e),
                a.bezierCurveTo(47 * e, 136 * e, 57 * e, 134 * e, 77 * e, 127 * e),
                a.bezierCurveTo(71 * e, 158 * e, 71 * e, 159 * e, 66 * e, 159 * e),
                a.bezierCurveTo(50.5 * e, 156.5 * e, 50.5 * e, 156.5 * e, 35 * e, 154 * e),
                a.bezierCurveTo(31 * e, 145 * e, 31 * e, 136 * e, 31 * e, 125 * e),
                a.closePath(),
                he(a, i[0]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(35 * e, 171 * e),
                a.bezierCurveTo(32 * e, 221 * e, 43 * e, 233 * e, 70 * e, 247 * e),
                a.bezierCurveTo(75 * e, 234 * e, 75 * e, 230 * e, 72 * e, 221 * e),
                a.bezierCurveTo(48 * e, 206 * e, 54 * e, 188 * e, 50 * e, 176 * e),
                a.closePath(),
                he(a, i[0]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(60 * e, 68 * e),
                a.bezierCurveTo(63 * e, 69 * e, 65 * e, 71 * e, 67 * e, 77 * e),
                a.bezierCurveTo(61 * e, 123 * e, 52 * e, 137 * e, 42 * e, 150 * e),
                a.bezierCurveTo(38 * e, 151 * e, 38 * e, 151 * e, 34 * e, 152 * e),
                a.bezierCurveTo(33 * e, 146.5 * e, 33 * e, 146.5 * e, 32 * e, 141 * e),
                a.bezierCurveTo(49 * e, 118 * e, 63 * e, 87 * e, 59 * e, 68 * e),
                a.closePath(),
                he(a, i[0]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(71 * e, 172 * e),
                a.bezierCurveTo(56 * e, 222 * e, 49 * e, 234 * e, 35 * e, 248 * e),
                a.bezierCurveTo(30 * e, 236 * e, 30 * e, 230 * e, 31 * e, 217 * e),
                a.bezierCurveTo(44 * e, 202 * e, 49 * e, 191 * e, 52 * e, 172 * e),
                a.closePath(),
                he(a, i[0]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(35 * e, 151 * e),
                a.bezierCurveTo(27 * e, 165 * e, 31 * e, 173 * e, 36 * e, 178 * e),
                a.bezierCurveTo(56 * e, 185 * e, 73 * e, 184 * e, 71 * e, 170 * e),
                a.bezierCurveTo(72 * e, 154 * e, 71 * e, 154 * e, 63 * e, 155 * e),
                a.closePath(),
                he(a, i[0]),
                a.translate(-10 * e, -10 * e),
                a.globalAlpha = 1,
                a.save(),
                a.translate(51.5 * e, 342 * e),
                ye(a, -14.5 * e, -225 * e, 29 * e, 450 * e, 20 * e),
                a.restore(),
                he(a, i[1], i[2], 5 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(54 * e, 83 * e),
                a.bezierCurveTo(70 * e, 69 * e, 78 * e, 62 * e, 82 * e, 40 * e),
                a.bezierCurveTo(93 * e, 48 * e, 103 * e, 64 * e, 95 * e, 102 * e),
                a.bezierCurveTo(60 * e, 114 * e, 53 * e, 103 * e, 54 * e, 85 * e),
                a.closePath(),
                he(a, i[3], i[4], 6 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(95 * e, 97 * e),
                a.bezierCurveTo(56 * e, 102 * e, 43 * e, 77 * e, 71 * e, 6 * e),
                a.bezierCurveTo(34 * e, 10 * e, 6 * e, 43 * e, 5 * e, 76 * e),
                a.bezierCurveTo(4 * e, 98 * e, 15 * e, 130 * e, 64 * e, 130 * e),
                a.bezierCurveTo(76 * e, 129 * e, 95 * e, 113 * e, 97 * e, 97 * e),
                a.closePath(),
                he(a, i[5], i[6], 6 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(35 * e, 403 * e),
                a.bezierCurveTo(47 * e, 412 * e, 58 * e, 412 * e, 67 * e, 403 * e),
                a.bezierCurveTo(66.5 * e, 434 * e, 66.5 * e, 434 * e, 66 * e, 465 * e),
                a.bezierCurveTo(56 * e, 480 * e, 40 * e, 472 * e, 36 * e, 465 * e),
                a.closePath(),
                he(a, i[7], i[8], 6 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(37 * e, 427 * e),
                a.bezierCurveTo(47 * e, 435 * e, 55 * e, 435 * e, 67 * e, 427 * e),
                he(a, void 0, i[8], 6 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(36 * e, 448 * e),
                a.bezierCurveTo(46 * e, 454 * e, 54 * e, 457 * e, 65 * e, 449 * e),
                he(a, void 0, i[8], 6 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(55 * e, 176 * e),
                a.bezierCurveTo(74 * e, 175 * e, 82 * e, 169 * e, 96 * e, 155 * e),
                a.bezierCurveTo(103 * e, 183 * e, 95 * e, 214 * e, 54 * e, 219 * e),
                a.closePath(),
                he(a, i[3], i[4], 6 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(50 * e, 176 * e),
                a.bezierCurveTo(25 * e, 177 * e, 16 * e, 164 * e, 7 * e, 156 * e),
                a.bezierCurveTo(0 * e, 186 * e, 10 * e, 201 * e, 43 * e, 220 * e),
                a.closePath(),
                he(a, i[3], i[4], 6 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(59 * e, 67 * e),
                a.bezierCurveTo(47 * e, 97 * e, 18 * e, 117 * e, 11 * e, 110 * e),
                a.bezierCurveTo(11 * e, 115 * e, 15 * e, 122 * e, 23 * e, 124 * e),
                a.bezierCurveTo(46 * e, 118 * e, 52 * e, 113 * e, 62 * e, 86 * e),
                a.closePath(),
                he(a, i[7], i[8], 6 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(30 * e, 125 * e),
                a.bezierCurveTo(47 * e, 136 * e, 57 * e, 134 * e, 77 * e, 127 * e),
                a.bezierCurveTo(71 * e, 158 * e, 71 * e, 159 * e, 66 * e, 159 * e),
                a.bezierCurveTo(50.5 * e, 156.5 * e, 50.5 * e, 156.5 * e, 35 * e, 154 * e),
                a.bezierCurveTo(31 * e, 145 * e, 31 * e, 136 * e, 31 * e, 125 * e),
                a.closePath(),
                he(a, i[7], i[8], 6 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(35 * e, 171 * e),
                a.bezierCurveTo(32 * e, 221 * e, 43 * e, 233 * e, 70 * e, 247 * e),
                a.bezierCurveTo(75 * e, 234 * e, 75 * e, 230 * e, 72 * e, 221 * e),
                a.bezierCurveTo(48 * e, 206 * e, 54 * e, 188 * e, 50 * e, 176 * e),
                a.closePath(),
                he(a, i[7], i[8], 6 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(60 * e, 68 * e),
                a.bezierCurveTo(63 * e, 69 * e, 65 * e, 71 * e, 67 * e, 77 * e),
                a.bezierCurveTo(61 * e, 123 * e, 52 * e, 137 * e, 42 * e, 150 * e),
                a.bezierCurveTo(38 * e, 151 * e, 38 * e, 151 * e, 34 * e, 152 * e),
                a.bezierCurveTo(33 * e, 146.5 * e, 33 * e, 146.5 * e, 32 * e, 141 * e),
                a.bezierCurveTo(49 * e, 118 * e, 63 * e, 87 * e, 59 * e, 68 * e),
                a.closePath(),
                he(a, i[7], i[8], 6 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(71 * e, 172 * e),
                a.bezierCurveTo(56 * e, 222 * e, 49 * e, 234 * e, 35 * e, 248 * e),
                a.bezierCurveTo(30 * e, 236 * e, 30 * e, 230 * e, 31 * e, 217 * e),
                a.bezierCurveTo(44 * e, 202 * e, 49 * e, 191 * e, 52 * e, 172 * e),
                a.closePath(),
                he(a, i[7], i[8], 6 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(35 * e, 151 * e),
                a.bezierCurveTo(27 * e, 165 * e, 31 * e, 173 * e, 36 * e, 178 * e),
                a.bezierCurveTo(56 * e, 185 * e, 73 * e, 184 * e, 71 * e, 170 * e),
                a.bezierCurveTo(72 * e, 154 * e, 71 * e, 154 * e, 63 * e, 155 * e),
                a.closePath(),
                he(a, i[7], i[8], 6 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(53 * e, 113 * e),
                a.bezierCurveTo(65 * e, 140 * e, 75 * e, 166 * e, 52 * e, 169 * e),
                a.bezierCurveTo(29 * e, 168 * e, 41 * e, 143 * e, 53 * e, 112 * e),
                a.closePath(),
                he(a, i[3], i[4], 6 * e),
                n
            }
            function ii(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                return n.width = 81 * e,
                n.height = 626 * e,
                a.translate(20 * e, 20 * e),
                a.globalAlpha = t ? .5 : 1,
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(55 * e, 565 * e),
                a.bezierCurveTo(56 * e, 586 * e, 53 * e, 591 * e, 40 * e, 592 * e),
                a.bezierCurveTo(28 * e, 591 * e, 27 * e, 583 * e, 28 * e, 557 * e),
                a.bezierCurveTo(27.5 * e, 346 * e, 27.5 * e, 346 * e, 27 * e, 135 * e),
                a.bezierCurveTo(26 * e, 74 * e, 36 * e, 26 * e, 41 * e, 15 * e),
                a.bezierCurveTo(54 * e, 51 * e, 54 * e, 81 * e, 55 * e, 128 * e),
                a.closePath(),
                he(a, i[0]),
                a.translate(-20 * e, -20 * e),
                a.globalAlpha = 1,
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(55 * e, 565 * e),
                a.bezierCurveTo(56 * e, 586 * e, 53 * e, 591 * e, 40 * e, 592 * e),
                a.bezierCurveTo(28 * e, 591 * e, 27 * e, 583 * e, 28 * e, 557 * e),
                a.bezierCurveTo(27.5 * e, 346 * e, 27.5 * e, 346 * e, 27 * e, 135 * e),
                a.bezierCurveTo(26 * e, 74 * e, 36 * e, 26 * e, 41 * e, 15 * e),
                a.bezierCurveTo(54 * e, 51 * e, 54 * e, 81 * e, 55 * e, 128 * e),
                a.closePath(),
                he(a, i[1], i[2], 8 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(27 * e, 129 * e),
                a.bezierCurveTo(32 * e, 135 * e, 48 * e, 136 * e, 53 * e, 129 * e),
                a.bezierCurveTo(56 * e, 97 * e, 53 * e, 82 * e, 52 * e, 64 * e),
                a.bezierCurveTo(49 * e, 33 * e, 44 * e, 27 * e, 41 * e, 21 * e),
                a.bezierCurveTo(31 * e, 40 * e, 28 * e, 84 * e, 27 * e, 127 * e),
                a.closePath(),
                he(a, i[3]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(55 * e, 565 * e),
                a.bezierCurveTo(56 * e, 586 * e, 53 * e, 591 * e, 40 * e, 592 * e),
                a.bezierCurveTo(28 * e, 591 * e, 27 * e, 583 * e, 28 * e, 557 * e),
                a.bezierCurveTo(27.5 * e, 346 * e, 27.5 * e, 346 * e, 27 * e, 135 * e),
                a.bezierCurveTo(26 * e, 74 * e, 36 * e, 26 * e, 41 * e, 15 * e),
                a.bezierCurveTo(54 * e, 51 * e, 54 * e, 81 * e, 55 * e, 128 * e),
                a.closePath(),
                he(a, void 0, i[2], 8 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(28 * e, 475 * e),
                a.bezierCurveTo(38 * e, 482 * e, 48 * e, 480 * e, 54 * e, 474 * e),
                a.bezierCurveTo(54 * e, 509.5 * e, 54 * e, 509.5 * e, 54 * e, 545 * e),
                a.bezierCurveTo(46 * e, 554 * e, 36 * e, 552 * e, 28 * e, 545 * e),
                a.closePath(),
                he(a, i[4], i[5], 8 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(28 * e, 496 * e),
                a.bezierCurveTo(39 * e, 506 * e, 49 * e, 503 * e, 54 * e, 496 * e),
                he(a, void 0, i[5], 8 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(28 * e, 521 * e),
                a.bezierCurveTo(41 * e, 529 * e, 49 * e, 524 * e, 54 * e, 520 * e),
                he(a, void 0, i[5], 8 * e),
                n
            }
            function ni(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                return n.width = 100 * e,
                n.height = 648 * e,
                a.translate(20 * e, 20 * e),
                a.globalAlpha = t ? .5 : 1,
                a.save(),
                a.translate(50.5 * e, 349.5 * e),
                ye(a, -13.5 * e, -249.5 * e, 27 * e, 499 * e, 10 * e),
                a.restore(),
                he(a, i[0]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(36 * e, 538 * e),
                a.bezierCurveTo(49.5 * e, 538 * e, 49.5 * e, 538 * e, 63 * e, 538 * e),
                a.bezierCurveTo(63.5 * e, 568 * e, 63.5 * e, 568 * e, 64 * e, 598 * e),
                a.bezierCurveTo(50 * e, 598 * e, 50 * e, 598 * e, 36 * e, 598 * e),
                a.bezierCurveTo(36 * e, 568.5 * e, 36 * e, 568.5 * e, 36 * e, 539 * e),
                a.closePath(),
                he(a, i[0]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(36 * e, 554 * e),
                a.bezierCurveTo(45 * e, 561 * e, 56 * e, 558 * e, 63 * e, 554 * e),
                a.closePath(),
                he(a, i[0]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(32 * e, 569 * e),
                a.bezierCurveTo(44 * e, 576 * e, 58 * e, 574 * e, 68 * e, 569 * e),
                a.bezierCurveTo(68 * e, 584 * e, 68 * e, 584 * e, 68 * e, 599 * e),
                a.bezierCurveTo(68 * e, 608 * e, 65 * e, 618 * e, 49 * e, 617 * e),
                a.bezierCurveTo(34 * e, 617 * e, 32 * e, 610 * e, 32 * e, 598 * e),
                a.closePath(),
                he(a, i[0]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(41 * e, 581 * e),
                a.bezierCurveTo(48 * e, 584 * e, 55 * e, 583 * e, 60 * e, 581 * e),
                a.bezierCurveTo(60 * e, 589.5 * e, 60 * e, 589.5 * e, 60 * e, 598 * e),
                a.bezierCurveTo(60 * e, 604 * e, 59 * e, 609 * e, 48 * e, 608 * e),
                a.bezierCurveTo(40 * e, 607 * e, 40 * e, 606 * e, 41 * e, 581 * e),
                a.closePath(),
                he(a, i[0]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(31 * e, 106 * e),
                a.bezierCurveTo(31 * e, 124.5 * e, 31 * e, 124.5 * e, 31 * e, 143 * e),
                a.bezierCurveTo(31 * e, 163 * e, 38 * e, 169 * e, 48 * e, 168 * e),
                a.bezierCurveTo(57 * e, 168 * e, 67 * e, 165 * e, 67 * e, 148 * e),
                a.bezierCurveTo(67 * e, 123.5 * e, 67 * e, 123.5 * e, 67 * e, 99 * e),
                a.closePath(),
                he(a, i[0]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(49 * e, 27 * e),
                a.bezierCurveTo(64 * e, 62.5 * e, 64 * e, 62.5 * e, 79 * e, 98 * e),
                a.bezierCurveTo(74 * e, 113 * e, 63 * e, 121 * e, 50 * e, 122 * e),
                a.bezierCurveTo(35 * e, 123 * e, 22 * e, 109 * e, 20 * e, 98 * e),
                a.closePath(),
                he(a, i[0]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(49 * e, 43 * e),
                a.bezierCurveTo(61 * e, 70 * e, 61 * e, 70 * e, 73 * e, 97 * e),
                a.bezierCurveTo(66 * e, 116 * e, 43 * e, 122 * e, 26 * e, 99 * e),
                a.closePath(),
                he(a, i[0]),
                a.translate(-20 * e, -20 * e),
                a.globalAlpha = 1,
                a.save(),
                a.translate(50.5 * e, 349.5 * e),
                ye(a, -13.5 * e, -249.5 * e, 27 * e, 499 * e, 10 * e),
                a.restore(),
                he(a, i[1], i[2], 8 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(36 * e, 538 * e),
                a.bezierCurveTo(49.5 * e, 538 * e, 49.5 * e, 538 * e, 63 * e, 538 * e),
                a.bezierCurveTo(63.5 * e, 568 * e, 63.5 * e, 568 * e, 64 * e, 598 * e),
                a.bezierCurveTo(50 * e, 598 * e, 50 * e, 598 * e, 36 * e, 598 * e),
                a.bezierCurveTo(36 * e, 568.5 * e, 36 * e, 568.5 * e, 36 * e, 539 * e),
                a.closePath(),
                he(a, i[3], i[4], 8 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(36 * e, 554 * e),
                a.bezierCurveTo(45 * e, 561 * e, 56 * e, 558 * e, 63 * e, 554 * e),
                a.closePath(),
                he(a, void 0, i[4], 8 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(32 * e, 569 * e),
                a.bezierCurveTo(44 * e, 576 * e, 58 * e, 574 * e, 68 * e, 569 * e),
                a.bezierCurveTo(68 * e, 584 * e, 68 * e, 584 * e, 68 * e, 599 * e),
                a.bezierCurveTo(68 * e, 608 * e, 65 * e, 618 * e, 49 * e, 617 * e),
                a.bezierCurveTo(34 * e, 617 * e, 32 * e, 610 * e, 32 * e, 598 * e),
                a.closePath(),
                he(a, i[5], i[6], 8 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(41 * e, 581 * e),
                a.bezierCurveTo(48 * e, 584 * e, 55 * e, 583 * e, 60 * e, 581 * e),
                a.bezierCurveTo(60 * e, 589.5 * e, 60 * e, 589.5 * e, 60 * e, 598 * e),
                a.bezierCurveTo(60 * e, 604 * e, 59 * e, 609 * e, 48 * e, 608 * e),
                a.bezierCurveTo(40 * e, 607 * e, 40 * e, 606 * e, 41 * e, 581 * e),
                a.closePath(),
                he(a, i[7]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(31 * e, 106 * e),
                a.bezierCurveTo(31 * e, 124.5 * e, 31 * e, 124.5 * e, 31 * e, 143 * e),
                a.bezierCurveTo(31 * e, 163 * e, 38 * e, 169 * e, 48 * e, 168 * e),
                a.bezierCurveTo(57 * e, 168 * e, 67 * e, 165 * e, 67 * e, 148 * e),
                a.bezierCurveTo(67 * e, 123.5 * e, 67 * e, 123.5 * e, 67 * e, 99 * e),
                a.closePath(),
                he(a, i[5], i[6], 8 * e),
                a.save(),
                a.translate(-46 * e, -50 * e),
                a.scale(2, 2),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(51 * e, 80 * e),
                a.bezierCurveTo(51 * e, 89.5 * e, 51 * e, 89.5 * e, 51 * e, 99 * e),
                a.bezierCurveTo(49 * e, 103 * e, 46 * e, 105 * e, 44 * e, 99 * e),
                a.bezierCurveTo(44 * e, 88.5 * e, 44 * e, 88.5 * e, 44 * e, 78 * e),
                a.closePath(),
                he(a, i[8]),
                a.restore(),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(49 * e, 27 * e),
                a.bezierCurveTo(64 * e, 62.5 * e, 64 * e, 62.5 * e, 79 * e, 98 * e),
                a.bezierCurveTo(74 * e, 113 * e, 63 * e, 121 * e, 50 * e, 122 * e),
                a.bezierCurveTo(35 * e, 123 * e, 22 * e, 109 * e, 20 * e, 98 * e),
                a.closePath(),
                he(a, i[8], i[9], 8 * e),
                a.scale(2, 2),
                a.translate(-23 * e, -20 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(57 * e, 69 * e),
                a.bezierCurveTo(50 * e, 76 * e, 43 * e, 75 * e, 38 * e, 69 * e),
                a.bezierCurveTo(43 * e, 57 * e, 43 * e, 57 * e, 48 * e, 45 * e),
                a.closePath(),
                he(a, i[10]),
                n
            }
            function ai(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                return n.width = 88 * e,
                n.height = 647 * e,
                a.translate(20 * e, 20 * e),
                a.globalAlpha = t ? .5 : 1,
                a.save(),
                a.translate(45 * e, 384.5 * e),
                ye(a, -15 * e, -216.5 * e, 30 * e, 433 * e, 10 * e),
                a.restore(),
                he(a, i[0]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(27 * e, 572 * e),
                a.bezierCurveTo(44 * e, 580 * e, 55 * e, 576 * e, 62 * e, 572 * e),
                a.bezierCurveTo(65 * e, 585.5 * e, 65 * e, 585.5 * e, 68 * e, 599 * e),
                a.bezierCurveTo(71 * e, 612 * e, 68 * e, 618 * e, 34 * e, 616 * e),
                a.bezierCurveTo(14 * e, 615 * e, 19 * e, 607 * e, 27 * e, 573 * e),
                a.closePath(),
                he(a, i[0]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(32 * e, 587 * e),
                a.bezierCurveTo(39 * e, 590 * e, 48 * e, 588 * e, 54 * e, 587 * e),
                a.bezierCurveTo(57 * e, 604 * e, 59 * e, 609 * e, 46 * e, 609 * e),
                a.bezierCurveTo(27 * e, 609 * e, 28 * e, 605 * e, 33 * e, 588 * e),
                a.closePath(),
                he(a, i[0]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(31 * e, 113 * e),
                a.bezierCurveTo(27 * e, 139 * e, 27 * e, 139 * e, 23 * e, 165 * e),
                a.bezierCurveTo(18 * e, 187 * e, 39 * e, 195 * e, 57 * e, 186 * e),
                a.bezierCurveTo(68 * e, 180 * e, 65 * e, 171 * e, 62 * e, 153 * e),
                a.bezierCurveTo(58.5 * e, 131 * e, 58.5 * e, 131 * e, 55 * e, 109 * e),
                a.closePath(),
                he(a, i[0]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(39 * e, 139 * e),
                a.bezierCurveTo(43 * e, 139 * e, 43 * e, 139 * e, 47 * e, 139 * e),
                a.bezierCurveTo(51 * e, 158 * e, 56 * e, 176 * e, 44 * e, 175 * e),
                a.bezierCurveTo(33 * e, 177 * e, 34 * e, 167 * e, 39 * e, 140 * e),
                a.closePath(),
                he(a, i[0]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(44 * e, 29 * e),
                a.bezierCurveTo(57 * e, 63 * e, 57 * e, 63 * e, 70 * e, 97 * e),
                a.bezierCurveTo(60 * e, 111 * e, 60 * e, 111 * e, 50 * e, 125 * e),
                a.bezierCurveTo(45 * e, 128 * e, 41 * e, 128 * e, 35 * e, 124 * e),
                a.bezierCurveTo(26.5 * e, 110 * e, 26.5 * e, 110 * e, 18 * e, 96 * e),
                a.closePath(),
                he(a, i[0]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(44 * e, 54 * e),
                a.bezierCurveTo(50 * e, 72 * e, 50 * e, 72 * e, 56 * e, 90 * e),
                a.bezierCurveTo(58 * e, 94 * e, 59 * e, 98 * e, 53 * e, 105 * e),
                a.bezierCurveTo(47 * e, 113 * e, 43 * e, 113 * e, 36 * e, 103 * e),
                a.bezierCurveTo(29 * e, 96 * e, 31 * e, 94 * e, 35 * e, 83 * e),
                a.closePath(),
                he(a, i[0]),
                a.translate(-20 * e, -20 * e),
                a.globalAlpha = 1,
                a.save(),
                a.translate(45 * e, 384.5 * e),
                ye(a, -15 * e, -216.5 * e, 30 * e, 433 * e, 10 * e),
                a.restore(),
                he(a, i[1], i[2], 8 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(27 * e, 572 * e),
                a.bezierCurveTo(44 * e, 580 * e, 55 * e, 576 * e, 62 * e, 572 * e),
                a.bezierCurveTo(65 * e, 585.5 * e, 65 * e, 585.5 * e, 68 * e, 599 * e),
                a.bezierCurveTo(71 * e, 612 * e, 68 * e, 618 * e, 34 * e, 616 * e),
                a.bezierCurveTo(14 * e, 615 * e, 19 * e, 607 * e, 27 * e, 573 * e),
                a.closePath(),
                he(a, i[3], i[4], 8 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(32 * e, 587 * e),
                a.bezierCurveTo(39 * e, 590 * e, 48 * e, 588 * e, 54 * e, 587 * e),
                a.bezierCurveTo(57 * e, 604 * e, 59 * e, 609 * e, 46 * e, 609 * e),
                a.bezierCurveTo(27 * e, 609 * e, 28 * e, 605 * e, 33 * e, 588 * e),
                a.closePath(),
                he(a, i[5]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(31 * e, 113 * e),
                a.bezierCurveTo(27 * e, 139 * e, 27 * e, 139 * e, 23 * e, 165 * e),
                a.bezierCurveTo(18 * e, 187 * e, 39 * e, 195 * e, 57 * e, 186 * e),
                a.bezierCurveTo(68 * e, 180 * e, 65 * e, 171 * e, 62 * e, 153 * e),
                a.bezierCurveTo(58.5 * e, 131 * e, 58.5 * e, 131 * e, 55 * e, 109 * e),
                a.closePath(),
                he(a, i[3], i[4], 8 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(39 * e, 139 * e),
                a.bezierCurveTo(43 * e, 139 * e, 43 * e, 139 * e, 47 * e, 139 * e),
                a.bezierCurveTo(51 * e, 158 * e, 56 * e, 176 * e, 44 * e, 175 * e),
                a.bezierCurveTo(33 * e, 177 * e, 34 * e, 167 * e, 39 * e, 140 * e),
                a.closePath(),
                he(a, i[5]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(44 * e, 29 * e),
                a.bezierCurveTo(57 * e, 63 * e, 57 * e, 63 * e, 70 * e, 97 * e),
                a.bezierCurveTo(60 * e, 111 * e, 60 * e, 111 * e, 50 * e, 125 * e),
                a.bezierCurveTo(45 * e, 128 * e, 41 * e, 128 * e, 35 * e, 124 * e),
                a.bezierCurveTo(26.5 * e, 110 * e, 26.5 * e, 110 * e, 18 * e, 96 * e),
                a.closePath(),
                he(a, i[6], i[7], 8 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(44 * e, 54 * e),
                a.bezierCurveTo(50 * e, 72 * e, 50 * e, 72 * e, 56 * e, 90 * e),
                a.bezierCurveTo(58 * e, 94 * e, 59 * e, 98 * e, 53 * e, 105 * e),
                a.bezierCurveTo(47 * e, 113 * e, 43 * e, 113 * e, 36 * e, 103 * e),
                a.bezierCurveTo(29 * e, 96 * e, 31 * e, 94 * e, 35 * e, 83 * e),
                a.closePath(),
                he(a, i[8]),
                n
            }
            function Ii(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                return n.width = 106 * e,
                n.height = 681 * e,
                a.translate(20 * e, 20 * e),
                a.globalAlpha = t ? .5 : 1,
                a.save(),
                a.translate(52.5 * e, 395 * e),
                a.rotate(0),
                ye(a, -11.5 * e, -226 * e, 23 * e, 452 * e, 10 * e),
                a.restore(),
                he(a, i[0]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(35 * e, 588 * e),
                a.bezierCurveTo(47 * e, 596 * e, 61 * e, 594 * e, 69 * e, 588 * e),
                a.bezierCurveTo(79 * e, 615 * e, 78 * e, 632 * e, 59 * e, 643 * e),
                a.bezierCurveTo(41 * e, 650 * e, 27 * e, 632 * e, 30 * e, 610 * e),
                a.closePath(),
                he(a, i[0]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(52 * e, 135 * e),
                a.bezierCurveTo(61.5 * e, 142 * e, 61.5 * e, 142 * e, 71 * e, 149 * e),
                a.bezierCurveTo(69.5 * e, 166 * e, 69.5 * e, 166 * e, 68 * e, 183 * e),
                a.bezierCurveTo(60.5 * e, 187.5 * e, 60.5 * e, 187.5 * e, 53 * e, 192 * e),
                a.bezierCurveTo(45 * e, 187.5 * e, 45 * e, 187.5 * e, 37 * e, 183 * e),
                a.bezierCurveTo(35.5 * e, 167 * e, 35.5 * e, 167 * e, 34 * e, 151 * e),
                a.closePath(),
                he(a, i[0]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(64 * e, 150 * e),
                a.bezierCurveTo(63 * e, 164 * e, 63 * e, 164 * e, 62 * e, 178 * e),
                a.bezierCurveTo(58 * e, 181 * e, 58 * e, 181 * e, 54 * e, 184 * e),
                a.bezierCurveTo(48.5 * e, 181.5 * e, 48.5 * e, 181.5 * e, 43 * e, 179 * e),
                a.bezierCurveTo(42 * e, 164.5 * e, 42 * e, 164.5 * e, 41 * e, 150 * e),
                a.bezierCurveTo(46 * e, 152.5 * e, 46 * e, 152.5 * e, 51 * e, 155 * e),
                a.closePath(),
                he(a, i[0]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(52 * e, 39 * e),
                a.bezierCurveTo(65.5 * e, 82 * e, 65.5 * e, 82 * e, 79 * e, 125 * e),
                a.bezierCurveTo(66 * e, 137.5 * e, 66 * e, 137.5 * e, 53 * e, 150 * e),
                a.bezierCurveTo(39 * e, 138 * e, 39 * e, 138 * e, 25 * e, 126 * e),
                a.closePath(),
                he(a, i[0]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(52 * e, 64 * e),
                a.bezierCurveTo(60 * e, 92.5 * e, 60 * e, 92.5 * e, 68 * e, 121 * e),
                a.bezierCurveTo(61 * e, 127.5 * e, 61 * e, 127.5 * e, 54 * e, 134 * e),
                a.bezierCurveTo(46.5 * e, 127.5 * e, 46.5 * e, 127.5 * e, 39 * e, 121 * e),
                a.closePath(),
                he(a, i[0]),
                a.translate(-20 * e, -20 * e),
                a.globalAlpha = 1,
                a.save(),
                a.translate(52.5 * e, 395 * e),
                a.rotate(0),
                ye(a, -11.5 * e, -226 * e, 23 * e, 452 * e, 10 * e),
                a.restore(),
                he(a, i[1], i[2], 8 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(35 * e, 588 * e),
                a.bezierCurveTo(47 * e, 596 * e, 61 * e, 594 * e, 69 * e, 588 * e),
                a.bezierCurveTo(79 * e, 615 * e, 78 * e, 632 * e, 59 * e, 643 * e),
                a.bezierCurveTo(41 * e, 650 * e, 27 * e, 632 * e, 30 * e, 610 * e),
                a.closePath(),
                he(a, i[3], i[4], 8 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(52 * e, 135 * e),
                a.bezierCurveTo(61.5 * e, 142 * e, 61.5 * e, 142 * e, 71 * e, 149 * e),
                a.bezierCurveTo(69.5 * e, 166 * e, 69.5 * e, 166 * e, 68 * e, 183 * e),
                a.bezierCurveTo(60.5 * e, 187.5 * e, 60.5 * e, 187.5 * e, 53 * e, 192 * e),
                a.bezierCurveTo(45 * e, 187.5 * e, 45 * e, 187.5 * e, 37 * e, 183 * e),
                a.bezierCurveTo(35.5 * e, 167 * e, 35.5 * e, 167 * e, 34 * e, 151 * e),
                a.closePath(),
                he(a, i[3], i[4], 8 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(64 * e, 150 * e),
                a.bezierCurveTo(63 * e, 164 * e, 63 * e, 164 * e, 62 * e, 178 * e),
                a.bezierCurveTo(58 * e, 181 * e, 58 * e, 181 * e, 54 * e, 184 * e),
                a.bezierCurveTo(48.5 * e, 181.5 * e, 48.5 * e, 181.5 * e, 43 * e, 179 * e),
                a.bezierCurveTo(42 * e, 164.5 * e, 42 * e, 164.5 * e, 41 * e, 150 * e),
                a.bezierCurveTo(46 * e, 152.5 * e, 46 * e, 152.5 * e, 51 * e, 155 * e),
                a.closePath(),
                he(a, i[5]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(52 * e, 39 * e),
                a.bezierCurveTo(65.5 * e, 82 * e, 65.5 * e, 82 * e, 79 * e, 125 * e),
                a.bezierCurveTo(66 * e, 137.5 * e, 66 * e, 137.5 * e, 53 * e, 150 * e),
                a.bezierCurveTo(39 * e, 138 * e, 39 * e, 138 * e, 25 * e, 126 * e),
                a.closePath(),
                he(a, i[6], i[7], 8 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(52 * e, 64 * e),
                a.bezierCurveTo(60 * e, 92.5 * e, 60 * e, 92.5 * e, 68 * e, 121 * e),
                a.bezierCurveTo(61 * e, 127.5 * e, 61 * e, 127.5 * e, 54 * e, 134 * e),
                a.bezierCurveTo(46.5 * e, 127.5 * e, 46.5 * e, 127.5 * e, 39 * e, 121 * e),
                a.closePath(),
                he(a, i[8]),
                n
            }
            function Ti(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                return n.width = 108 * e,
                n.height = 669 * e,
                a.translate(20 * e, 20 * e),
                a.globalAlpha = t ? .5 : 1,
                a.save(),
                a.translate(54 * e, 389.5 * e),
                ye(a, -15 * e, -228.5 * e, 30 * e, 457 * e, 10 * e),
                a.restore(),
                he(a, i[0]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(35 * e, 579 * e),
                a.bezierCurveTo(47 * e, 587 * e, 61 * e, 584 * e, 71 * e, 579 * e),
                a.bezierCurveTo(75 * e, 597.5 * e, 75 * e, 597.5 * e, 79 * e, 616 * e),
                a.bezierCurveTo(66.5 * e, 628 * e, 66.5 * e, 628 * e, 54 * e, 640 * e),
                a.bezierCurveTo(41 * e, 628.5 * e, 41 * e, 628.5 * e, 28 * e, 617 * e),
                a.closePath(),
                he(a, i[0]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(30 * e, 141 * e),
                a.bezierCurveTo(40 * e, 136 * e, 40 * e, 136 * e, 50 * e, 131 * e),
                a.bezierCurveTo(63 * e, 136 * e, 63 * e, 136 * e, 76 * e, 141 * e),
                a.bezierCurveTo(72.5 * e, 161.5 * e, 72.5 * e, 161.5 * e, 69 * e, 182 * e),
                a.bezierCurveTo(61.5 * e, 186.5 * e, 61.5 * e, 186.5 * e, 54 * e, 191 * e),
                a.bezierCurveTo(45 * e, 186.5 * e, 45 * e, 186.5 * e, 36 * e, 182 * e),
                a.closePath(),
                he(a, i[0]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(42 * e, 152 * e),
                a.bezierCurveTo(53 * e, 152 * e, 53 * e, 152 * e, 64 * e, 152 * e),
                a.bezierCurveTo(62 * e, 171 * e, 62 * e, 176 * e, 55 * e, 177 * e),
                a.bezierCurveTo(42 * e, 176 * e, 45 * e, 174 * e, 42 * e, 152 * e),
                a.closePath(),
                he(a, i[0]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(52 * e, 28 * e),
                a.bezierCurveTo(67.5 * e, 55 * e, 67.5 * e, 55 * e, 83 * e, 82 * e),
                a.bezierCurveTo(80 * e, 106.5 * e, 80 * e, 106.5 * e, 77 * e, 131 * e),
                a.bezierCurveTo(58 * e, 147 * e, 44 * e, 141 * e, 29 * e, 131 * e),
                a.bezierCurveTo(26.5 * e, 106.5 * e, 26.5 * e, 106.5 * e, 24 * e, 82 * e),
                a.closePath(),
                he(a, i[0]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(53 * e, 53 * e),
                a.bezierCurveTo(61 * e, 70 * e, 61 * e, 70 * e, 69 * e, 87 * e),
                a.bezierCurveTo(67 * e, 106 * e, 67 * e, 106 * e, 65 * e, 125 * e),
                a.bezierCurveTo(54 * e, 130 * e, 51 * e, 130 * e, 41 * e, 125 * e),
                a.bezierCurveTo(39 * e, 105 * e, 39 * e, 105 * e, 37 * e, 85 * e),
                a.closePath(),
                he(a, i[0]),
                a.translate(-20 * e, -20 * e),
                a.globalAlpha = 1,
                a.save(),
                a.translate(54 * e, 389.5 * e),
                a.rotate(0),
                ye(a, -15 * e, -228.5 * e, 30 * e, 457 * e, 10 * e),
                a.restore(),
                he(a, i[1], i[2], 8 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(35 * e, 579 * e),
                a.bezierCurveTo(47 * e, 587 * e, 61 * e, 584 * e, 71 * e, 579 * e),
                a.bezierCurveTo(75 * e, 597.5 * e, 75 * e, 597.5 * e, 79 * e, 616 * e),
                a.bezierCurveTo(66.5 * e, 628 * e, 66.5 * e, 628 * e, 54 * e, 640 * e),
                a.bezierCurveTo(41 * e, 628.5 * e, 41 * e, 628.5 * e, 28 * e, 617 * e),
                a.closePath(),
                he(a, i[3], i[4], 8 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(30 * e, 141 * e),
                a.bezierCurveTo(40 * e, 136 * e, 40 * e, 136 * e, 50 * e, 131 * e),
                a.bezierCurveTo(63 * e, 136 * e, 63 * e, 136 * e, 76 * e, 141 * e),
                a.bezierCurveTo(72.5 * e, 161.5 * e, 72.5 * e, 161.5 * e, 69 * e, 182 * e),
                a.bezierCurveTo(61.5 * e, 186.5 * e, 61.5 * e, 186.5 * e, 54 * e, 191 * e),
                a.bezierCurveTo(45 * e, 186.5 * e, 45 * e, 186.5 * e, 36 * e, 182 * e),
                a.closePath(),
                he(a, i[3], i[4], 8 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(42 * e, 152 * e),
                a.bezierCurveTo(53 * e, 152 * e, 53 * e, 152 * e, 64 * e, 152 * e),
                a.bezierCurveTo(62 * e, 171 * e, 62 * e, 176 * e, 55 * e, 177 * e),
                a.bezierCurveTo(42 * e, 176 * e, 45 * e, 174 * e, 42 * e, 152 * e),
                a.closePath(),
                he(a, i[5]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(52 * e, 28 * e),
                a.bezierCurveTo(67.5 * e, 55 * e, 67.5 * e, 55 * e, 83 * e, 82 * e),
                a.bezierCurveTo(80 * e, 106.5 * e, 80 * e, 106.5 * e, 77 * e, 131 * e),
                a.bezierCurveTo(58 * e, 147 * e, 44 * e, 141 * e, 29 * e, 131 * e),
                a.bezierCurveTo(26.5 * e, 106.5 * e, 26.5 * e, 106.5 * e, 24 * e, 82 * e),
                a.closePath(),
                he(a, i[6], i[7], 8 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(53 * e, 53 * e),
                a.bezierCurveTo(61 * e, 70 * e, 61 * e, 70 * e, 69 * e, 87 * e),
                a.bezierCurveTo(67 * e, 106 * e, 67 * e, 106 * e, 65 * e, 125 * e),
                a.bezierCurveTo(54 * e, 130 * e, 51 * e, 130 * e, 41 * e, 125 * e),
                a.bezierCurveTo(39 * e, 105 * e, 39 * e, 105 * e, 37 * e, 85 * e),
                a.closePath(),
                he(a, i[8]),
                n
            }
            function oi(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                return n.width = 43 * e,
                n.height = 209 * e,
                a.globalAlpha = t ? .5 : 1,
                a.translate(0, 10 * e),
                a.translate(5 * e, 5 * e),
                a.save(),
                a.translate(21 * e, 102.5 * e),
                ye(a, -4 * e, -76.5 * e, 8 * e, 163 * e, 10 * e),
                a.restore(),
                he(a, i[0]),
                a.translate(0, 10 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(20 * e, 10 * e),
                a.bezierCurveTo(25 * e, 25.5 * e, 25 * e, 25.5 * e, 30 * e, 41 * e),
                a.bezierCurveTo(25.5 * e, 38.5 * e, 25.5 * e, 38.5 * e, 21 * e, 36 * e),
                a.bezierCurveTo(16 * e, 38.5 * e, 16 * e, 38.5 * e, 11 * e, 41 * e),
                a.closePath(),
                he(a, i[0]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(21 * e, 1 * e),
                a.bezierCurveTo(28 * e, 18 * e, 28 * e, 18 * e, 35 * e, 35 * e),
                a.bezierCurveTo(28.5 * e, 32 * e, 28.5 * e, 32 * e, 22 * e, 29 * e),
                a.bezierCurveTo(14.5 * e, 32.5 * e, 14.5 * e, 32.5 * e, 7 * e, 36 * e),
                a.closePath(),
                he(a, i[0]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(14 * e, 146 * e),
                a.bezierCurveTo(21 * e, 146 * e, 21 * e, 146 * e, 28 * e, 146 * e),
                a.bezierCurveTo(27.5 * e, 147.5 * e, 27.5 * e, 147.5 * e, 27 * e, 149 * e),
                a.bezierCurveTo(27 * e, 160 * e, 27 * e, 160 * e, 27 * e, 171 * e),
                a.bezierCurveTo(27.5 * e, 171.5 * e, 27.5 * e, 171.5 * e, 28 * e, 172 * e),
                a.bezierCurveTo(21 * e, 172 * e, 21 * e, 172 * e, 14 * e, 172 * e),
                a.bezierCurveTo(14 * e, 171.5 * e, 14 * e, 171.5 * e, 14 * e, 171 * e),
                a.bezierCurveTo(14.5 * e, 171.5 * e, 14.5 * e, 171.5 * e, 15 * e, 172 * e),
                a.bezierCurveTo(15 * e, 160.5 * e, 15 * e, 160.5 * e, 15 * e, 149 * e),
                a.closePath(),
                he(a, i[0]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(21 * e, 6 * e),
                a.bezierCurveTo(26.5 * e, 18.5 * e, 26.5 * e, 18.5 * e, 32 * e, 31 * e),
                a.bezierCurveTo(27 * e, 29 * e, 27 * e, 29 * e, 22 * e, 27 * e),
                a.closePath(),
                he(a, i[0]),
                a.translate(0, -20 * e),
                a.globalAlpha = 1,
                a.translate(0, 10 * e),
                a.translate(-5 * e, -5 * e),
                a.save(),
                a.translate(21 * e, 102.5 * e),
                ye(a, -4 * e, -76.5 * e, 8 * e, 163 * e, 10 * e),
                a.restore(),
                he(a, i[1], i[2], 4 * e),
                a.translate(0, 10 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(20 * e, 10 * e),
                a.bezierCurveTo(25 * e, 25.5 * e, 25 * e, 25.5 * e, 30 * e, 41 * e),
                a.bezierCurveTo(25.5 * e, 38.5 * e, 25.5 * e, 38.5 * e, 21 * e, 36 * e),
                a.bezierCurveTo(16 * e, 38.5 * e, 16 * e, 38.5 * e, 11 * e, 41 * e),
                a.closePath(),
                he(a, i[3], i[4], 4 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(21 * e, 1 * e),
                a.bezierCurveTo(28 * e, 18 * e, 28 * e, 18 * e, 35 * e, 35 * e),
                a.bezierCurveTo(28.5 * e, 32 * e, 28.5 * e, 32 * e, 22 * e, 29 * e),
                a.bezierCurveTo(14.5 * e, 32.5 * e, 14.5 * e, 32.5 * e, 7 * e, 36 * e),
                a.closePath(),
                he(a, i[5], i[6], 4 * e),
                a.translate(0, 0 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(14 * e, 146 * e),
                a.bezierCurveTo(21 * e, 146 * e, 21 * e, 146 * e, 28 * e, 146 * e),
                a.bezierCurveTo(27.5 * e, 147.5 * e, 27.5 * e, 147.5 * e, 27 * e, 149 * e),
                a.bezierCurveTo(27 * e, 160 * e, 27 * e, 160 * e, 27 * e, 171 * e),
                a.bezierCurveTo(27.5 * e, 171.5 * e, 27.5 * e, 171.5 * e, 28 * e, 172 * e),
                a.bezierCurveTo(21 * e, 172 * e, 21 * e, 172 * e, 14 * e, 172 * e),
                a.bezierCurveTo(14 * e, 171.5 * e, 14 * e, 171.5 * e, 14 * e, 171 * e),
                a.bezierCurveTo(14.5 * e, 171.5 * e, 14.5 * e, 171.5 * e, 15 * e, 172 * e),
                a.bezierCurveTo(15 * e, 160.5 * e, 15 * e, 160.5 * e, 15 * e, 149 * e),
                a.closePath(),
                he(a, i[1], i[2], 4 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(21 * e, 6 * e),
                a.bezierCurveTo(26.5 * e, 18.5 * e, 26.5 * e, 18.5 * e, 32 * e, 31 * e),
                a.bezierCurveTo(27 * e, 29 * e, 27 * e, 29 * e, 22 * e, 27 * e),
                a.closePath(),
                he(a, i[8]),
                n
            }
            function ri(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                return n.width = 200 * e,
                n.height = 200 * e,
                a.save(),
                a.translate(112 * e, 158 * e),
                ye(a, -86.5 * e, -86 * e, 150 * e, 35 * e, 20 * e),
                a.restore(),
                he(a, i[0]),
                a.save(),
                a.translate(170 * e, 100 * e),
                ye(a, -86.5 * e, -86 * e, 35 * e, 150 * e, 20 * e),
                a.restore(),
                he(a, i[0]),
                n
            }
            function di(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                return n.width = 165 * e,
                n.height = 123 * e,
                a.save(),
                a.translate(81 * e, 65 * e),
                ye(a, -78 * e, -54.5 * e, 156 * e, 109 * e, 20 * e),
                a.restore(),
                he(a, i[0]),
                a.save(),
                a.translate(81 * e, 58 * e),
                ye(a, -78 * e, -54.5 * e, 156 * e, 109 * e, 20 * e),
                a.restore(),
                he(a, i[1], i[2], 4),
                a.save(),
                a.translate(81 * e, 58 * e),
                ye(a, -69 * e, -47 * e, 138 * e, 93 * e, 15 * e),
                a.restore(),
                he(a, i[3], i[4], 4),
                a.save(),
                a.translate(79 * e, 54 * e),
                ye(a, -34 * e, -40 * e, 68 * e, 88 * e, 13 * e),
                a.restore(),
                he(a, void 0, i[5], 4),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(44 * e, 13 * e),
                a.bezierCurveTo(43.5 * e, 55 * e, 43.5 * e, 55 * e, 43 * e, 101 * e),
                a.closePath(),
                he(a, void 0, i[6], 4),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(115 * e, 13 * e),
                a.bezierCurveTo(115 * e, 56 * e, 115 * e, 56 * e, 115 * e, 101 * e),
                a.closePath(),
                he(a, void 0, i[6], 4),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(35 * e, 6 * e),
                a.bezierCurveTo(35 * e, 56 * e, 36 * e, 109 * e, 35 * e, 110 * e),
                a.closePath(),
                he(a, void 0, i[7], 4),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(123 * e, 6 * e),
                a.bezierCurveTo(123 * e, 56 * e, 123 * e, 56 * e, 123 * e, 110 * e),
                a.closePath(),
                he(a, void 0, i[7], 4),
                a.save(),
                a.translate(79 * e, 113 * e),
                ye(a, -18 * e, -2 * e, 36 * e, 4 * e, 20 * e),
                a.restore(),
                he(a, void 0, i[8], 4),
                a.save(),
                a.translate(75 * e, 118 * e),
                ye(a, -6 * e, -2.5 * e, 20 * e, 5 * e, 20 * e),
                a.restore(),
                he(a, i[8]),
                n
            }
            function si(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                return n.width = 92 * e,
                n.height = 108 * e,
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(31 * e, 10 * e),
                a.bezierCurveTo(37 * e, 2 * e, 49 * e, 0 * e, 61 * e, 15 * e),
                a.bezierCurveTo(81 * e, 31 * e, 78 * e, 25 * e, 79 * e, 37 * e),
                a.bezierCurveTo(76 * e, 44 * e, 81 * e, 56 * e, 85 * e, 63 * e),
                a.bezierCurveTo(91 * e, 71 * e, 90 * e, 78 * e, 83 * e, 84 * e),
                a.bezierCurveTo(60 * e, 98 * e, 67 * e, 95 * e, 57 * e, 102 * e),
                a.bezierCurveTo(47 * e, 106 * e, 43 * e, 106 * e, 31 * e, 98 * e),
                a.bezierCurveTo(22 * e, 91 * e, 17 * e, 89 * e, 7 * e, 84 * e),
                a.bezierCurveTo(1 * e, 77 * e, 4 * e, 73 * e, 7 * e, 60 * e),
                a.bezierCurveTo(11 * e, 50 * e, 5 * e, 32 * e, 15 * e, 27 * e),
                a.bezierCurveTo(26 * e, 18 * e, 26 * e, 24 * e, 31 * e, 10 * e),
                a.closePath(),
                he(a, i[0], i[1], 4),
                n
            }
            function hi(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                return n.width = 151 * e,
                n.height = 80 * e,
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(133 * e, 54 * e),
                a.bezierCurveTo(136 * e, 18 * e, 129 * e, 18 * e, 114 * e, 13 * e),
                a.bezierCurveTo(51 * e, 0 * e, 36 * e, 16 * e, 34 * e, 16 * e),
                a.bezierCurveTo(8 * e, 28 * e, 22 * e, 56 * e, 21 * e, 57 * e),
                a.closePath(),
                he(a, i[2], i[3], 4),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(130 * e, 40 * e),
                a.bezierCurveTo(132 * e, 35 * e, 132 * e, 30 * e, 132 * e, 29 * e),
                a.bezierCurveTo(145 * e, 38 * e, 144 * e, 43 * e, 137 * e, 54 * e),
                a.closePath(),
                he(a, i[0], i[1], 4),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(20 * e, 33 * e),
                a.bezierCurveTo(24 * e, 44 * e, 215 * e, 39 * e, 23 * e, 44 * e),
                a.bezierCurveTo(19 * e, 49 * e, 19 * e, 49 * e, 15 * e, 54 * e),
                a.bezierCurveTo(4 * e, 43 * e, 10 * e, 35 * e, 20 * e, 32 * e),
                a.closePath(),
                he(a, i[0], i[1], 4),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(18 * e, 52 * e),
                a.bezierCurveTo(24 * e, 31 * e, 34 * e, 25 * e, 75 * e, 23 * e),
                a.bezierCurveTo(130 * e, 24 * e, 129 * e, 32 * e, 134 * e, 51 * e),
                a.bezierCurveTo(138 * e, 70 * e, 126 * e, 72 * e, 90 * e, 73 * e),
                a.bezierCurveTo(18 * e, 72 * e, 15 * e, 68 * e, 18 * e, 54 * e),
                a.closePath(),
                he(a, i[0], i[1], 4),
                n
            }
            function yi(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                return n.width = 138 * e,
                n.height = 133 * e,
                a.globalAlpha = t ? .3 : 1,
                a.translate(0, 5 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(26 * e, 79.640625 * e),
                a.bezierCurveTo(13 * e, 84.640625 * e, 9 * e, 86.640625 * e, 7 * e, 78.640625 * e),
                a.bezierCurveTo(6 * e, 69.640625 * e, 15 * e, 67.640625 * e, 31 * e, 62.640625 * e),
                a.bezierCurveTo(63 * e, 55.640625 * e, 85 * e, 57.640625 * e, 104 * e, 63.640625 * e),
                a.bezierCurveTo(131 * e, 69.640625 * e, 132 * e, 71.640625 * e, 131 * e, 78.640625 * e),
                a.bezierCurveTo(131 * e, 91.640625 * e, 112 * e, 80.640625 * e, 91 * e, 75.640625 * e),
                a.bezierCurveTo(51 * e, 70.640625 * e, 45 * e, 74.640625 * e, 28 * e, 78.640625 * e),
                a.closePath(),
                he(a, i[0]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(8 * e, 82.640625 * e),
                a.bezierCurveTo(40 * e, 107.640625 * e, 53 * e, 104.640625 * e, 67 * e, 106.640625 * e),
                a.bezierCurveTo(101 * e, 103.640625 * e, 117 * e, 93.640625 * e, 127 * e, 84.640625 * e),
                a.bezierCurveTo(135 * e, 95.640625 * e, 131 * e, 107.640625 * e, 110 * e, 118.640625 * e),
                a.bezierCurveTo(78 * e, 129.640625 * e, 67 * e, 130.640625 * e, 27 * e, 119.640625 * e),
                a.bezierCurveTo(0 * e, 105.640625 * e, 8 * e, 83.640625 * e, 10 * e, 84.640625 * e),
                a.closePath(),
                he(a, i[0]),
                a.globalAlpha = 1,
                a.translate(0, -5 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(8 * e, 73.640625 * e),
                a.bezierCurveTo(7 * e, 23.640625 * e, 33 * e, 19.640625 * e, 71 * e, 17.640625 * e),
                a.bezierCurveTo(129 * e, 19.640625 * e, 130 * e, 45.640625 * e, 130 * e, 76.640625 * e),
                a.bezierCurveTo(90 * e, 63.640625 * e, 85 * e, 63.640625 * e, 73 * e, 63.640625 * e),
                a.bezierCurveTo(38 * e, 63.640625 * e, 33 * e, 66.640625 * e, 8 * e, 73.640625 * e),
                a.closePath(),
                he(a, i[1], i[2], 4 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(72 * e, 28.640625 * e),
                a.bezierCurveTo(51 * e, 25.640625 * e, 56 * e, 7.640625 * e, 70 * e, 5.640625 * e),
                a.bezierCurveTo(94 * e, 7.640625 * e, 87 * e, 29.640625 * e, 72 * e, 28.640625 * e),
                a.closePath(),
                he(a, i[3], i[2], 4 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(51 * e, 26.640625 * e),
                a.bezierCurveTo(42 * e, 29.640625 * e, 43 * e, 31.640625 * e, 42 * e, 37.640625 * e),
                he(a, void 0, i[2], 4 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(90 * e, 26.640625 * e),
                a.bezierCurveTo(100 * e, 28.640625 * e, 98 * e, 34.640625 * e, 99 * e, 38.640625 * e),
                he(a, void 0, i[2], 4 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(26 * e, 79.640625 * e),
                a.bezierCurveTo(13 * e, 84.640625 * e, 9 * e, 86.640625 * e, 7 * e, 78.640625 * e),
                a.bezierCurveTo(6 * e, 69.640625 * e, 15 * e, 67.640625 * e, 31 * e, 62.640625 * e),
                a.bezierCurveTo(63 * e, 55.640625 * e, 85 * e, 57.640625 * e, 104 * e, 63.640625 * e),
                a.bezierCurveTo(131 * e, 69.640625 * e, 132 * e, 71.640625 * e, 131 * e, 78.640625 * e),
                a.bezierCurveTo(131 * e, 91.640625 * e, 112 * e, 80.640625 * e, 91 * e, 75.640625 * e),
                a.bezierCurveTo(51 * e, 70.640625 * e, 45 * e, 74.640625 * e, 28 * e, 78.640625 * e),
                a.closePath(),
                he(a, i[3], i[4], 4 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(8 * e, 82.640625 * e),
                a.bezierCurveTo(40 * e, 107.640625 * e, 53 * e, 104.640625 * e, 67 * e, 106.640625 * e),
                a.bezierCurveTo(101 * e, 103.640625 * e, 117 * e, 93.640625 * e, 127 * e, 84.640625 * e),
                a.bezierCurveTo(135 * e, 95.640625 * e, 131 * e, 107.640625 * e, 110 * e, 118.640625 * e),
                a.bezierCurveTo(78 * e, 129.640625 * e, 67 * e, 130.640625 * e, 27 * e, 119.640625 * e),
                a.bezierCurveTo(0 * e, 105.640625 * e, 8 * e, 83.640625 * e, 10 * e, 84.640625 * e),
                a.closePath(),
                he(a, i[3], i[4], 4 * e),
                n
            }
            function Ri(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d")
                  , I = 170 * e
                  , T = 172 * e
                  , o = I / 2
                  , r = T / 2;
                n.width = I,
                n.height = T,
                a.translate(o, r + 7 * e),
                a.globalAlpha = t ? .5 : 0,
                Re(a, 0, 0, 60 * e),
                he(a, i[0]),
                a.globalAlpha = 1,
                a.translate(0, -7 * e),
                a.save();
                for (var d = 0; d < 10; d++)
                    a.rotate(window.Math.PI / 5),
                    a.save(),
                    a.translate(65 * e, 0),
                    me(a, 3, 20 * e, 4 * e),
                    he(a, i[1], i[2], 4 * e),
                    a.restore();
                return a.restore(),
                Re(a, 0, 0, 60 * e),
                he(a, i[3], i[4], 4 * e),
                Re(a, 0, 0, 40 * e),
                he(a, i[5]),
                Re(a, 0, 0, 25 * e),
                he(a, i[6], i[7], 8 * e),
                n
            }
            function Ei(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                n.width = 170 * e,
                n.height = 170 * e,
                a.globalAlpha = t ? .5 : 1,
                a.translate(0, 5 * e),
                a.save(),
                a.translate(85 * e, 88 * e),
                a.rotate(1.4),
                me(a, 7, 60 * e, 10 * e),
                a.restore(),
                he(a, i[0]),
                a.globalAlpha = 1,
                a.translate(85 * e, 80 * e);
                for (var I = 0; I < 10; I++)
                    a.rotate(window.Math.PI / 5),
                    a.save(),
                    a.translate(65 * e, 0),
                    me(a, 3, 21 * e, 4 * e),
                    he(a, i[1], i[2], 4 * e),
                    a.restore();
                return a.save(),
                a.translate(0 * e, 0 * e),
                a.rotate(1.4),
                me(a, 7, 60 * e, 10 * e),
                he(a, i[3], i[4], 4 * e),
                a.rotate(.64),
                me(a, 7, 40 * e, 10 * e),
                he(a, i[5], i[6], 4 * e),
                a.rotate(.12),
                me(a, 7, 23 * e, 5 * e),
                a.restore(),
                he(a, i[7]),
                n
            }
            function mi(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                n.width = 170 * e,
                n.height = 170 * e,
                a.globalAlpha = t ? .5 : 1,
                a.translate(0, 3 * e),
                a.save(),
                a.translate(85 * e, 95 * e),
                a.rotate(1.4),
                me(a, 7, 60 * e, 10 * e),
                a.restore(),
                he(a, i[0]),
                a.globalAlpha = 1,
                a.translate(85 * e, 82 * e);
                for (var I = 0; I < 10; I++)
                    a.rotate(window.Math.PI / 5),
                    a.save(),
                    a.translate(65 * e, 0),
                    me(a, 3, 21 * e, 4 * e),
                    he(a, i[1], i[2], 4 * e),
                    a.restore();
                return a.save(),
                a.translate(0 * e, 0 * e),
                a.rotate(1),
                me(a, 8, 60 * e, 10 * e),
                he(a, i[3], i[4], 4 * e),
                a.rotate(.56),
                me(a, 8, 40 * e, 10 * e),
                he(a, i[5], i[6], 4 * e),
                a.rotate(.28),
                me(a, 8, 28 * e, 8 * e),
                he(a, i[7]),
                a.restore(),
                n
            }
            function Si(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                n.width = 170 * e,
                n.height = 170 * e,
                a.translate(0, 3 * e),
                a.globalAlpha = t ? .5 : 1,
                a.save(),
                a.translate(85 * e, 95 * e),
                a.rotate(1.4),
                me(a, 7, 60 * e, 10 * e),
                a.restore(),
                he(a, i[0]),
                a.globalAlpha = 1,
                a.translate(85 * e, 82 * e);
                for (var I = 0; I < 10; I++)
                    a.rotate(window.Math.PI / 5),
                    a.save(),
                    a.translate(65 * e, 0),
                    me(a, 3, 21 * e, 4 * e),
                    he(a, i[1], i[2], 4 * e),
                    a.restore();
                return a.save(),
                a.translate(0 * e, 0 * e),
                a.rotate(.2),
                me(a, 9, 60 * e, 10 * e),
                he(a, i[3], i[4], 4 * e),
                a.rotate(-.32),
                me(a, 9, 38 * e, 10 * e),
                he(a, i[5], i[6], 4 * e),
                a.rotate(.68),
                me(a, 9, 20 * e, 8 * e),
                he(a, i[7], i[8], 6 * e),
                a.restore(),
                n
            }
            function ci(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                return n.width = 69 * e,
                n.height = 120 * e,
                a.globalAlpha = t ? .5 : 1,
                a.save(),
                a.translate(30 * e, 84 * e),
                ye(a, -6 * e, -66.5 * e, 8 * e, 100 * e, 10 * e),
                a.restore(),
                he(a, i[0]),
                a.save(),
                a.translate(30 * e, 45 * e),
                ye(a, -9.5 * e, -6.5 * e, 16 * e, 13 * e, 10 * e),
                a.restore(),
                he(a, i[0]),
                a.save(),
                a.translate(30 * e, 17 * e),
                ye(a, -7.5 * e, -5.5 * e, 12 * e, 11 * e, 10 * e),
                a.restore(),
                he(a, i[0]),
                a.save(),
                a.translate(30 * e, 31 * e),
                ye(a, -26 * e, -14.5 * e, 52 * e, 29 * e, 5 * e),
                a.restore(),
                he(a, i[0]),
                a.globalAlpha = 1,
                a.save(),
                a.translate(36 * e, 79.140625 * e),
                ye(a, -6 * e, -66.5 * e, 8 * e, 100 * e, 10 * e),
                a.restore(),
                he(a, i[1], i[2], 3 * e),
                a.save(),
                a.translate(35 * e, 40.140625 * e),
                ye(a, -9.5 * e, -6.5 * e, 16 * e, 13 * e, 10 * e),
                a.restore(),
                he(a, i[3], i[4], 3 * e),
                a.save(),
                a.translate(35 * e, 12.140625 * e),
                ye(a, -7.5 * e, -5.5 * e, 12 * e, 11 * e, 10 * e),
                a.restore(),
                he(a, i[3], i[4], 3 * e),
                a.save(),
                a.translate(34.5 * e, 26.140625 * e),
                ye(a, -26 * e, -14.5 * e, 52 * e, 29 * e, 5 * e),
                a.restore(),
                he(a, i[3], i[4], 3 * e),
                n
            }
            function ui(e, t, i) {
                var n = (a = window.document.createElement("canvas")).getContext("2d");
                if (0 == i)
                    a.width = 566 * e,
                    a.height = 429 * e,
                    n.beginPath(),
                    n.lineCap = "round",
                    n.lineJoin = "round",
                    n.moveTo(312.625 * e, 39.046875 * e),
                    n.bezierCurveTo(456.625 * e, 60.046875 * e, 521.625 * e, 134.046875 * e, 528.625 * e, 199.046875 * e),
                    n.bezierCurveTo(540.625 * e, 298.046875 * e, 491.625 * e, 364.046875 * e, 405.625 * e, 394.046875 * e),
                    n.bezierCurveTo(270.625 * e, 429.046875 * e, 182.625 * e, 395.046875 * e, 100.625 * e, 344.046875 * e),
                    n.bezierCurveTo(15.625 * e, 283.046875 * e, 20.625 * e, 195.046875 * e, 33.625 * e, 158.046875 * e),
                    n.bezierCurveTo(56.625 * e, 80.046875 * e, 102.625 * e, 46.046875 * e, 183.625 * e, 33.046875 * e),
                    n.bezierCurveTo(225.625 * e, 25.046875 * e, 270.625 * e, 30.046875 * e, 312.625 * e, 39.046875 * e),
                    n.closePath(),
                    he(n, t[0]);
                else if (1 == i) {
                    n = (a = window.document.createElement("canvas")).getContext("2d");
                    a.width = 511 * e,
                    a.height = 408 * e,
                    n.beginPath(),
                    n.lineCap = "round",
                    n.lineJoin = "round",
                    n.moveTo(141.625 * e, 49.296875 * e),
                    n.bezierCurveTo(225.625 * e, 10.296875 * e, 320.625 * e, 16.296875 * e, 390.625 * e, 39.296875 * e),
                    n.bezierCurveTo(476.625 * e, 71.296875 * e, 483.625 * e, 142.296875 * e, 486.625 * e, 197.296875 * e),
                    n.bezierCurveTo(491.625 * e, 289.296875 * e, 462.625 * e, 317.296875 * e, 417.625 * e, 351.296875 * e),
                    n.bezierCurveTo(367.625 * e, 385.296875 * e, 313.625 * e, 404.296875 * e, 218.625 * e, 395.296875 * e),
                    n.bezierCurveTo(108.625 * e, 381.296875 * e, 81.625 * e, 350.296875 * e, 52.625 * e, 305.296875 * e),
                    n.bezierCurveTo(16.625 * e, 244.296875 * e, 23.625 * e, 171.296875 * e, 37.625 * e, 145.296875 * e),
                    n.bezierCurveTo(65.625 * e, 84.296875 * e, 97.625 * e, 74.296875 * e, 141.625 * e, 49.296875 * e),
                    n.closePath(),
                    he(n, t[0])
                } else if (2 == i) {
                    var a;
                    n = (a = window.document.createElement("canvas")).getContext("2d");
                    a.width = 504 * e,
                    a.height = 408 * e,
                    n.beginPath(),
                    n.lineCap = "round",
                    n.lineJoin = "round",
                    n.moveTo(153.625 * e, 46.296875 * e),
                    n.bezierCurveTo(271.625 * e, 17.296875 * e, 345.625 * e, 35.296875 * e, 410.625 * e, 71.296875 * e),
                    n.bezierCurveTo(473.625 * e, 109.296875 * e, 478.625 * e, 167.296875 * e, 473.625 * e, 205.296875 * e),
                    n.bezierCurveTo(462.625 * e, 295.296875 * e, 438.625 * e, 316.296875 * e, 388.625 * e, 345.296875 * e),
                    n.bezierCurveTo(331.625 * e, 374.296875 * e, 273.625 * e, 392.296875 * e, 180.625 * e, 387.296875 * e),
                    n.bezierCurveTo(111.625 * e, 380.296875 * e, 86.625 * e, 360.296875 * e, 51.625 * e, 309.296875 * e),
                    n.bezierCurveTo(23.625 * e, 267.296875 * e, 25.625 * e, 226.296875 * e, 27.625 * e, 175.296875 * e),
                    n.bezierCurveTo(37.625 * e, 99.296875 * e, 88.625 * e, 57.296875 * e, 153.625 * e, 46.296875 * e),
                    n.closePath(),
                    he(n, t[0])
                }
                return a
            }
            function pi(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                return n.width = 345 * e,
                n.height = 250 * e,
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(105 * e, 58 * e),
                a.bezierCurveTo(100.5 * e, 43 * e, 100.5 * e, 43 * e, 96 * e, 28 * e),
                a.bezierCurveTo(119.5 * e, 33.5 * e, 119.5 * e, 33.5 * e, 143 * e, 39 * e),
                a.bezierCurveTo(170 * e, 37 * e, 177 * e, 37 * e, 188 * e, 40 * e),
                a.bezierCurveTo(213 * e, 33.5 * e, 213 * e, 33.5 * e, 238 * e, 27 * e),
                a.bezierCurveTo(231 * e, 52 * e, 234 * e, 42.5 * e, 230 * e, 58 * e),
                a.closePath(),
                he(a, i[1], i[2], 8 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(108 * e, 51 * e),
                a.bezierCurveTo(91 * e, 55 * e, 85 * e, 44 * e, 86 * e, 29 * e),
                a.bezierCurveTo(62 * e, 50 * e, 78 * e, 69 * e, 92 * e, 75 * e),
                a.closePath(),
                he(a, i[3], i[4], 8 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(249 * e, 27 * e),
                a.bezierCurveTo(273 * e, 49 * e, 262 * e, 68 * e, 246 * e, 77 * e),
                a.bezierCurveTo(231 * e, 59 * e, 236 * e, 66.5 * e, 226 * e, 56 * e),
                a.bezierCurveTo(243 * e, 53 * e, 252 * e, 43 * e, 249 * e, 28 * e),
                a.closePath(),
                he(a, i[3], i[4], 8 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(87 * e, 78 * e),
                a.bezierCurveTo(87 * e, 59 * e, 98 * e, 46 * e, 127 * e, 48 * e),
                a.bezierCurveTo(176 * e, 48.5 * e, 176 * e, 48.5 * e, 225 * e, 49 * e),
                a.bezierCurveTo(243 * e, 49 * e, 253 * e, 59 * e, 253 * e, 76 * e),
                a.bezierCurveTo(211 * e, 85.5 * e, 211 * e, 85.5 * e, 169 * e, 95 * e),
                a.closePath(),
                he(a, i[5], i[6], 8 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(56 * e, 105 * e),
                a.bezierCurveTo(56 * e, 92 * e, 59 * e, 86 * e, 65 * e, 73 * e),
                a.bezierCurveTo(62.5 * e, 61.5 * e, 62.5 * e, 61.5 * e, 60 * e, 50 * e),
                a.bezierCurveTo(99.5 * e, 64.5 * e, 99.5 * e, 64.5 * e, 139 * e, 79 * e),
                a.bezierCurveTo(164 * e, 77 * e, 177 * e, 76 * e, 203 * e, 78 * e),
                a.bezierCurveTo(242 * e, 63.5 * e, 242 * e, 63.5 * e, 281 * e, 49 * e),
                a.bezierCurveTo(279 * e, 60.5 * e, 279 * e, 60.5 * e, 277 * e, 72 * e),
                a.bezierCurveTo(286 * e, 88 * e, 286 * e, 96 * e, 287 * e, 104 * e),
                a.bezierCurveTo(228.5 * e, 127 * e, 228.5 * e, 127 * e, 170 * e, 150 * e),
                a.closePath(),
                he(a, i[1], i[2], 8 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(48 * e, 130 * e),
                a.bezierCurveTo(61 * e, 155 * e, 63 * e, 165 * e, 56 * e, 171 * e),
                a.bezierCurveTo(48 * e, 177 * e, 40 * e, 171 * e, 38 * e, 178 * e),
                a.bezierCurveTo(33 * e, 180 * e, 37 * e, 188 * e, 47 * e, 208 * e),
                a.bezierCurveTo(52 * e, 221 * e, 55 * e, 222 * e, 75 * e, 229 * e),
                a.bezierCurveTo(91 * e, 213 * e, 98 * e, 212 * e, 112 * e, 219 * e),
                a.bezierCurveTo(167 * e, 225 * e, 187 * e, 224 * e, 222 * e, 220 * e),
                a.bezierCurveTo(244 * e, 214 * e, 247 * e, 213 * e, 263 * e, 229 * e),
                a.bezierCurveTo(295 * e, 220 * e, 291 * e, 215 * e, 301 * e, 194 * e),
                a.bezierCurveTo(308 * e, 178 * e, 309 * e, 176 * e, 302 * e, 173 * e),
                a.bezierCurveTo(290 * e, 177 * e, 289 * e, 177 * e, 283 * e, 169 * e),
                a.bezierCurveTo(279 * e, 163 * e, 279 * e, 161 * e, 290 * e, 130 * e),
                a.bezierCurveTo(270 * e, 127 * e, 270 * e, 127 * e, 250 * e, 124 * e),
                a.bezierCurveTo(209 * e, 137.5 * e, 209 * e, 137.5 * e, 168 * e, 151 * e),
                a.bezierCurveTo(121 * e, 135 * e, 121 * e, 135 * e, 74 * e, 119 * e),
                a.closePath(),
                he(a, i[1], i[2], 8 * e),
                a.globalCompositeOperation = "destination-out",
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(133 * e, 158 * e),
                a.bezierCurveTo(152 * e, 193 * e, 158 * e, 205 * e, 140 * e, 203 * e),
                a.bezierCurveTo(99 * e, 195 * e, 96 * e, 189 * e, 86 * e, 173 * e),
                a.bezierCurveTo(80 * e, 159 * e, 88 * e, 145 * e, 104 * e, 141 * e),
                a.closePath(),
                he(a, i[7], i[8], 8 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(215 * e, 146 * e),
                a.bezierCurveTo(204 * e, 167 * e, 204 * e, 167 * e, 193 * e, 188 * e),
                a.bezierCurveTo(187 * e, 201 * e, 191 * e, 209 * e, 213 * e, 201 * e),
                a.bezierCurveTo(247 * e, 192 * e, 253 * e, 181 * e, 257 * e, 169 * e),
                a.bezierCurveTo(260 * e, 157 * e, 254 * e, 149 * e, 243 * e, 141 * e),
                a.closePath(),
                he(a, i[7], i[8], 8 * e),
                a.globalCompositeOperation = "source-over",
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(133 * e, 158 * e),
                a.bezierCurveTo(152 * e, 193 * e, 158 * e, 205 * e, 140 * e, 203 * e),
                a.bezierCurveTo(99 * e, 195 * e, 96 * e, 189 * e, 86 * e, 173 * e),
                a.bezierCurveTo(80 * e, 159 * e, 88 * e, 145 * e, 104 * e, 141 * e),
                a.closePath(),
                he(a, void 0, i[8], 8 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(215 * e, 146 * e),
                a.bezierCurveTo(204 * e, 167 * e, 204 * e, 167 * e, 193 * e, 188 * e),
                a.bezierCurveTo(187 * e, 201 * e, 191 * e, 209 * e, 213 * e, 201 * e),
                a.bezierCurveTo(247 * e, 192 * e, 253 * e, 181 * e, 257 * e, 169 * e),
                a.bezierCurveTo(260 * e, 157 * e, 254 * e, 149 * e, 243 * e, 141 * e),
                a.closePath(),
                he(a, void 0, i[8], 8 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(39 * e, 66 * e),
                a.bezierCurveTo(57 * e, 107 * e, 63 * e, 96 * e, 120 * e, 106 * e),
                a.bezierCurveTo(154 * e, 112 * e, 163 * e, 116 * e, 174 * e, 135 * e),
                a.bezierCurveTo(180 * e, 109 * e, 191 * e, 113 * e, 237 * e, 103 * e),
                a.bezierCurveTo(276 * e, 100 * e, 289 * e, 94 * e, 301 * e, 67 * e),
                a.bezierCurveTo(317 * e, 112 * e, 301 * e, 141 * e, 274 * e, 139 * e),
                a.bezierCurveTo(204 * e, 166 * e, 197 * e, 169 * e, 173 * e, 183 * e),
                a.bezierCurveTo(170 * e, 183 * e, 170 * e, 183 * e, 167 * e, 183 * e),
                a.bezierCurveTo(132 * e, 160 * e, 112 * e, 156 * e, 73 * e, 141 * e),
                a.bezierCurveTo(43 * e, 146 * e, 27 * e, 120 * e, 39 * e, 66 * e),
                a.closePath(),
                he(a, i[7], i[8], 8 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(115 * e, 185 * e),
                a.bezierCurveTo(115 * e, 200 * e, 118 * e, 206 * e, 124 * e, 212 * e),
                a.bezierCurveTo(133 * e, 223 * e, 132 * e, 231 * e, 121 * e, 230 * e),
                a.bezierCurveTo(108 * e, 226 * e, 108 * e, 215 * e, 107 * e, 209 * e),
                a.bezierCurveTo(106 * e, 201 * e, 110 * e, 196 * e, 114 * e, 185 * e),
                a.closePath(),
                he(a, i[3], i[4], 8 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(226 * e, 186 * e),
                a.bezierCurveTo(234 * e, 201 * e, 238 * e, 209 * e, 228 * e, 225 * e),
                a.bezierCurveTo(223 * e, 233 * e, 213 * e, 233 * e, 211 * e, 226 * e),
                a.bezierCurveTo(206 * e, 219 * e, 217 * e, 216 * e, 221 * e, 207 * e),
                a.bezierCurveTo(225 * e, 196 * e, 225 * e, 191 * e, 226 * e, 186 * e),
                a.closePath(),
                he(a, i[3], i[4], 8 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(172 * e, 110 * e),
                a.bezierCurveTo(189 * e, 153 * e, 192 * e, 160 * e, 188 * e, 175 * e),
                a.bezierCurveTo(183 * e, 190 * e, 176 * e, 197 * e, 165 * e, 191 * e),
                a.bezierCurveTo(153 * e, 181 * e, 152 * e, 166 * e, 157 * e, 151 * e),
                a.bezierCurveTo(164.5 * e, 131 * e, 164.5 * e, 131 * e, 172 * e, 111 * e),
                a.closePath(),
                he(a, i[3], i[4], 8 * e),
                n
            }
            function Pi(e, t) {
                var i = window.document.createElement("canvas")
                  , n = i.getContext("2d");
                return i.width = 149 * e,
                i.height = 153 * e,
                n.globalAlpha = .5,
                Re(n, 74.5 * e, 85 * e, 66 * e),
                he(n, t[0]),
                n.globalAlpha = 1,
                Re(n, 75.5 * e, 72.5 * e, 67 * e),
                he(n, t[1], t[2], 4 * e),
                Re(n, 75.5 * e, 73.5 * e, 54 * e),
                he(n, t[3]),
                n.globalAlpha = .5,
                Re(n, 74.5 * e, 80.5 * e, 39 * e),
                he(n, t[4]),
                n.globalAlpha = 1,
                Re(n, 74.5 * e, 74.5 * e, 37 * e),
                he(n, t[5]),
                i
            }
            function wi(e, t) {
                var i = window.document.createElement("canvas")
                  , n = i.getContext("2d");
                return i.width = 173 * e,
                i.height = 178 * e,
                n.globalAlpha = .5,
                Re(n, 86.5 * e, 98 * e, 80 * e),
                he(n, t[0]),
                n.globalAlpha = 1,
                Re(n, 86.5 * e, 89 * e, 81 * e),
                he(n, t[1], t[2], 4 * e),
                Re(n, 86.5 * e, 86 * e, 59 * e),
                he(n, t[3], t[4], 4 * e),
                n.globalAlpha = .5,
                Re(n, 86.5 * e, 95 * e, 34 * e),
                he(n, t[0]),
                n.globalAlpha = 1,
                Re(n, 86.5 * e, 89 * e, 34 * e),
                he(n, t[5]),
                i
            }
            function _i(e, t) {
                var i = window.document.createElement("canvas")
                  , n = i.getContext("2d");
                return i.width = 253 * e,
                i.height = 260 * e,
                n.globalAlpha = .5,
                Re(n, 126.5 * e, 134 * e, 119 * e),
                he(n, t[0]),
                n.globalAlpha = 1,
                Re(n, 126.5 * e, 124 * e, 119 * e),
                he(n, t[1], t[2], 4 * e),
                Re(n, 126.5 * e, 127 * e, 100 * e),
                he(n, t[3]),
                n.globalAlpha = .5,
                Re(n, 126.5 * e, 135 * e, 81 * e),
                he(n, t[0]),
                n.globalAlpha = 1,
                Re(n, 126.5 * e, 125 * e, 84 * e),
                he(n, t[4], t[5], 4 * e),
                Re(n, 126.5 * e, 125 * e, 61 * e),
                he(n, t[6], t[7], 4 * e),
                n.globalAlpha = .5,
                Re(n, 126.5 * e, 134 * e, 40 * e),
                he(n, t[8]),
                n.globalAlpha = 1,
                Re(n, 126.5 * e, 125 * e, 40 * e),
                he(n, t[9]),
                i
            }
            function fi(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                return n.width = 139 * e,
                n.height = 135 * e,
                a.translate(0, 10 * e),
                a.globalAlpha = t ? .5 : 1,
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(32 * e, 77 * e),
                a.bezierCurveTo(6 * e, 41 * e, 6 * e, 33 * e, 12 * e, 27 * e),
                a.bezierCurveTo(27 * e, 6 * e, 28 * e, 6 * e, 37 * e, 6 * e),
                a.bezierCurveTo(62 * e, 3 * e, 64 * e, 5 * e, 67 * e, 13 * e),
                a.bezierCurveTo(80 * e, 36 * e, 73.5 * e, 25 * e, 80 * e, 37 * e),
                a.bezierCurveTo(73.5 * e, 54 * e, 65 * e, 74 * e, 67 * e, 71 * e),
                a.closePath(),
                he(a, i[0]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(65 * e, 37 * e),
                a.bezierCurveTo(105 * e, 40 * e, 113 * e, 39 * e, 117 * e, 48 * e),
                a.bezierCurveTo(126 * e, 70 * e, 128 * e, 72 * e, 124 * e, 80 * e),
                a.bezierCurveTo(112 * e, 101 * e, 110 * e, 104 * e, 99 * e, 104 * e),
                a.bezierCurveTo(59 * e, 100 * e, 55 * e, 99 * e, 56 * e, 99 * e),
                a.bezierCurveTo(47.5 * e, 79 * e, 45 * e, 66 * e, 39 * e, 59 * e),
                a.closePath(),
                he(a, i[0]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(30 * e, 63 * e),
                a.bezierCurveTo(5 * e, 99 * e, 5 * e, 101 * e, 8 * e, 103 * e),
                a.bezierCurveTo(19 * e, 123 * e, 22 * e, 125 * e, 28 * e, 126 * e),
                a.bezierCurveTo(57 * e, 127 * e, 55 * e, 127 * e, 58 * e, 120 * e),
                a.bezierCurveTo(82 * e, 86 * e, 83 * e, 78 * e, 82 * e, 87 * e),
                a.closePath(),
                he(a, i[0]),
                a.translate(0, -10 * e),
                a.globalAlpha = 1,
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(32 * e, 77 * e),
                a.bezierCurveTo(6 * e, 41 * e, 6 * e, 33 * e, 12 * e, 27 * e),
                a.bezierCurveTo(27 * e, 6 * e, 28 * e, 6 * e, 37 * e, 6 * e),
                a.bezierCurveTo(62 * e, 3 * e, 64 * e, 5 * e, 67 * e, 13 * e),
                a.bezierCurveTo(80 * e, 36 * e, 73.5 * e, 25 * e, 80 * e, 37 * e),
                a.bezierCurveTo(73.5 * e, 54 * e, 65 * e, 74 * e, 67 * e, 71 * e),
                a.closePath(),
                he(a, i[1]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(65 * e, 37 * e),
                a.bezierCurveTo(105 * e, 40 * e, 113 * e, 39 * e, 117 * e, 48 * e),
                a.bezierCurveTo(126 * e, 70 * e, 128 * e, 72 * e, 124 * e, 80 * e),
                a.bezierCurveTo(112 * e, 101 * e, 110 * e, 104 * e, 99 * e, 104 * e),
                a.bezierCurveTo(59 * e, 100 * e, 55 * e, 99 * e, 56 * e, 99 * e),
                a.bezierCurveTo(47.5 * e, 79 * e, 45 * e, 66 * e, 39 * e, 59 * e),
                a.closePath(),
                he(a, i[1]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(30 * e, 63 * e),
                a.bezierCurveTo(5 * e, 99 * e, 5 * e, 101 * e, 8 * e, 103 * e),
                a.bezierCurveTo(19 * e, 123 * e, 22 * e, 125 * e, 28 * e, 126 * e),
                a.bezierCurveTo(57 * e, 127 * e, 55 * e, 127 * e, 58 * e, 120 * e),
                a.bezierCurveTo(82 * e, 86 * e, 83 * e, 78 * e, 82 * e, 87 * e),
                a.closePath(),
                he(a, i[1]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(80 * e, 38 * e),
                a.bezierCurveTo(72.5 * e, 52 * e, 72.5 * e, 52 * e, 65 * e, 66 * e),
                a.bezierCurveTo(47.5 * e, 37 * e, 47.5 * e, 37 * e, 30 * e, 7 * e),
                a.bezierCurveTo(48 * e, 4 * e, 57 * e, 4 * e, 64 * e, 10 * e),
                a.closePath(),
                he(a, i[2]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(65 * e, 65 * e),
                a.bezierCurveTo(125 * e, 73 * e, 95.5 * e, 69 * e, 126 * e, 73 * e),
                a.bezierCurveTo(119 * e, 98 * e, 106 * e, 104 * e, 98 * e, 103 * e),
                a.bezierCurveTo(84.5 * e, 102 * e, 84.5 * e, 102 * e, 71 * e, 101 * e),
                a.bezierCurveTo(64 * e, 86 * e, 64 * e, 86 * e, 57 * e, 70 * e),
                a.closePath(),
                he(a, i[2]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(27 * e, 69 * e),
                a.bezierCurveTo(64 * e, 65 * e, 46 * e, 67 * e, 65 * e, 65 * e),
                a.bezierCurveTo(43.5 * e, 94 * e, 43.5 * e, 94 * e, 22 * e, 123 * e),
                a.bezierCurveTo(8 * e, 103 * e, 8 * e, 103 * e, 9 * e, 103 * e),
                a.bezierCurveTo(5 * e, 98 * e, 11 * e, 89 * e, 26 * e, 70 * e),
                a.closePath(),
                he(a, i[2]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(26 * e, 69 * e),
                a.bezierCurveTo(65 * e, 60 * e, 45 * e, 65 * e, 64 * e, 60 * e),
                a.bezierCurveTo(63 * e, 65 * e, 63 * e, 65 * e, 62 * e, 70 * e),
                a.closePath(),
                he(a, i[2]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(80 * e, 38 * e),
                a.bezierCurveTo(68 * e, 70 * e, 75 * e, 53 * e, 70 * e, 68 * e),
                a.bezierCurveTo(65 * e, 67 * e, 65 * e, 67 * e, 60 * e, 65 * e),
                a.closePath(),
                he(a, i[2]),
                n
            }
            function gi(e, t) {
                var i = window.document.createElement("canvas")
                  , n = i.getContext("2d");
                return i.width = 100 * e,
                i.height = 100 * e,
                n.globalAlpha = .5,
                n.fillStyle = t[0],
                n.fillRect(0, 0, i.width, i.height),
                i
            }
            function li(e, t) {
                var i = window.document.createElement("canvas")
                  , n = i.getContext("2d");
                return i.width = 120 * e,
                i.height = 300 * e,
                n.translate(-80 * e, -20),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(200.5 * e, 14.953125 * e),
                n.bezierCurveTo(203 * e, 171.953125 * e, 203 * e, 171.953125 * e, 205.5 * e, 328.953125 * e),
                n.bezierCurveTo(188.5 * e, 257.953125 * e, 164.5 * e, 216.953125 * e, 166.5 * e, 176.953125 * e),
                n.bezierCurveTo(168.5 * e, 133.953125 * e, 198.5 * e, 98.953125 * e, 200.5 * e, 14.953125 * e),
                n.closePath(),
                he(n, t[0]),
                i
            }
            function Ai(e, t) {
                var i = window.document.createElement("canvas")
                  , n = i.getContext("2d");
                return i.width = 120 * e,
                i.height = 300 * e,
                n.translate(-200 * e, -40 * e),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(344 * e, 18.40625 * e),
                n.bezierCurveTo(345 * e, 361.40625 * e, 344 * e, 191.40625 * e, 344 * e, 364.40625 * e),
                n.bezierCurveTo(261 * e, 275.40625 * e, 274 * e, 259.40625 * e, 229 * e, 213.40625 * e),
                n.bezierCurveTo(199 * e, 187.40625 * e, 222 * e, 133.40625 * e, 273 * e, 100.40625 * e),
                n.bezierCurveTo(321 * e, 71.40625 * e, 327 * e, 34.40625 * e, 344 * e, 18.40625 * e),
                n.closePath(),
                he(n, t[0]),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(335 * e, 38.072906494140625 * e),
                n.bezierCurveTo(307 * e, 62.072906494140625 * e, 291 * e, 60.072906494140625 * e, 262 * e, 68.07290649414062 * e),
                n.bezierCurveTo(223 * e, 80.07290649414062 * e, 225 * e, 111.07290649414062 * e, 264 * e, 139.07290649414062 * e),
                n.closePath(),
                he(n, t[0]),
                i
            }
            function bi(e, t) {
                var i = window.document.createElement("canvas")
                  , n = i.getContext("2d");
                return i.width = 120 * e,
                i.height = 320 * e,
                n.translate(-60 * e, -15 * e),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(188.5 * e, 3.953125 * e),
                n.bezierCurveTo(188.5 * e, 171.453125 * e, 188.5 * e, 171.453125 * e, 188.5 * e, 338.953125 * e),
                n.bezierCurveTo(162.5 * e, 268.953125 * e, 145.5 * e, 265.953125 * e, 116.5 * e, 244.953125 * e),
                n.bezierCurveTo(67.5 * e, 204.953125 * e, 87.5 * e, 160.953125 * e, 113.5 * e, 125.953125 * e),
                n.bezierCurveTo(141.5 * e, 90.953125 * e, 176.5 * e, 56.953125 * e, 188.5 * e, 3.953125 * e),
                n.closePath(),
                he(n, t[0]),
                i
            }
            function Ni(e, t) {
                var i = window.document.createElement("canvas")
                  , n = i.getContext("2d");
                return i.width = 120 * e,
                i.height = 330 * e,
                n.translate(-60 * e, -10 * e),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(188.5 * e, 7.953125 * e),
                n.bezierCurveTo(188.5 * e, 334.953125 * e, 188.5 * e, 332.953125 * e, 188.5 * e, 339.953125 * e),
                n.bezierCurveTo(166.5 * e, 295.953125 * e, 145.5 * e, 295.953125 * e, 139.5 * e, 282.953125 * e),
                n.bezierCurveTo(124.5 * e, 244.953125 * e, 139.5 * e, 243.953125 * e, 131.5 * e, 212.953125 * e),
                n.bezierCurveTo(118.5 * e, 161.953125 * e, 69.5 * e, 156.953125 * e, 74.5 * e, 92.953125 * e),
                n.bezierCurveTo(85.5 * e, 41.953125 * e, 158.5 * e, 49.953125 * e, 188.5 * e, 7.953125 * e),
                n.closePath(),
                he(n, t[0]),
                i
            }
            function vi(e, t) {
                var i = window.document.createElement("canvas")
                  , n = i.getContext("2d");
                return i.width = 48 * e,
                i.height = 47 * e,
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(7.1875 * e, 25.434661865234375 * e),
                n.bezierCurveTo(11.1875 * e, 13.434661865234375 * e, 18.1875 * e, 8.434661865234375 * e, 32.1875 * e, 10.434661865234375 * e),
                n.bezierCurveTo(45.1875 * e, 14.434661865234375 * e, 41.1875 * e, 24.434661865234375 * e, 36.1875 * e, 30.434661865234375 * e),
                n.bezierCurveTo(22.1875 * e, 42.434661865234375 * e, 2.1875 * e, 41.434661865234375 * e, 7.1875 * e, 25.434661865234375 * e),
                n.closePath(),
                he(n, t[0]),
                i
            }
            function Di(e, t) {
                var i = window.document.createElement("canvas")
                  , n = i.getContext("2d");
                return i.width = 120 * e,
                i.height = 280 * e,
                n.translate(-100 * e, -20 * e),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(228.5 * e, 331.953125 * e),
                n.bezierCurveTo(228.5 * e, 12.953125 * e, 228.5 * e, 171.453125 * e, 228.5 * e, 10.953125 * e),
                n.bezierCurveTo(196.5 * e, 76.953125 * e, 206.5 * e, 78.953125 * e, 191.5 * e, 114.953125 * e),
                n.bezierCurveTo(162.5 * e, 170.953125 * e, 206.5 * e, 220.953125 * e, 210.5 * e, 251.953125 * e),
                n.bezierCurveTo(218.5 * e, 287.953125 * e, 220.5 * e, 291.953125 * e, 228.5 * e, 331.953125 * e),
                n.closePath(),
                he(n, t[0]),
                i
            }
            function Oi(e, t) {
                var i = window.document.createElement("canvas")
                  , n = i.getContext("2d");
                return i.width = 33 * e,
                i.height = 35 * e,
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(12.75 * e, 7.1328125 * e),
                n.bezierCurveTo(26.75 * e, 8.1328125 * e, 27.75 * e, 14.1328125 * e, 24.75 * e, 23.1328125 * e),
                n.bezierCurveTo(19.75 * e, 31.1328125 * e, 15.75 * e, 33.1328125 * e, 6.75 * e, 26.1328125 * e),
                n.bezierCurveTo(.75 * e, 19.1328125 * e, 4.75 * e, 8.1328125 * e, 12.75 * e, 7.1328125 * e),
                n.closePath(),
                he(n, t[0]),
                i
            }
            function ki(e, t) {
                var i = window.document.createElement("canvas")
                  , n = i.getContext("2d");
                return i.width = 20 * e,
                i.height = 35 * e,
                ye(n, 0, 0, 20, 35, 7),
                he(n, t[0]),
                i
            }
            function Ci(e, t) {
                var i = window.document.createElement("canvas")
                  , n = i.getContext("2d");
                return i.width = 161 * e,
                i.height = 190 * e,
                n.globalAlpha = .5,
                n.translate(0, 8),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(9 * e, 93 * e),
                n.bezierCurveTo(17 * e, 95 * e, 19 * e, 95 * e, 21 * e, 95 * e),
                n.bezierCurveTo(9 * e, 83 * e, 17 * e, 93 * e, 4 * e, 76 * e),
                n.bezierCurveTo(11 * e, 75 * e, 11 * e, 75 * e, 18 * e, 75 * e),
                n.bezierCurveTo(13 * e, 67 * e, 13 * e, 67 * e, 7 * e, 59 * e),
                n.bezierCurveTo(14 * e, 59 * e, 14 * e, 59 * e, 21 * e, 59 * e),
                n.bezierCurveTo(46 * e, 35 * e, 35 * e, 45 * e, 49 * e, 31 * e),
                n.bezierCurveTo(53 * e, 24 * e, 51 * e, 21 * e, 51 * e, 16 * e),
                n.bezierCurveTo(63 * e, 23 * e, 63 * e, 24 * e, 69 * e, 29 * e),
                n.bezierCurveTo(76 * e, 7 * e, 75 * e, 11 * e, 76 * e, 6 * e),
                n.bezierCurveTo(81 * e, 12 * e, 84 * e, 18 * e, 89 * e, 27 * e),
                n.bezierCurveTo(95 * e, 25 * e, 100 * e, 16 * e, 105 * e, 14 * e),
                n.bezierCurveTo(103 * e, 25 * e, 111 * e, 33 * e, 110 * e, 34 * e),
                n.bezierCurveTo(123 * e, 48 * e, 123 * e, 48 * e, 136 * e, 62 * e),
                n.bezierCurveTo(142 * e, 60 * e, 147 * e, 59 * e, 155 * e, 58 * e),
                n.bezierCurveTo(147 * e, 65 * e, 147 * e, 65 * e, 139 * e, 73 * e),
                n.bezierCurveTo(145 * e, 73 * e, 145 * e, 73 * e, 151 * e, 73 * e),
                n.bezierCurveTo(145 * e, 80 * e, 145 * e, 80 * e, 138 * e, 87 * e),
                n.bezierCurveTo(144 * e, 88 * e, 144 * e, 88 * e, 150 * e, 89 * e),
                n.bezierCurveTo(125 * e, 103 * e, 125 * e, 125 * e, 113 * e, 141 * e),
                n.bezierCurveTo(92 * e, 178 * e, 85 * e, 177 * e, 76 * e, 178 * e),
                n.bezierCurveTo(64 * e, 179 * e, 51 * e, 164 * e, 35 * e, 131 * e),
                n.bezierCurveTo(18 * e, 95 * e, 13 * e, 99 * e, 8 * e, 93 * e),
                n.closePath(),
                he(n, t[0]),
                n.globalAlpha = 1,
                n.translate(0, -8),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(9 * e, 93 * e),
                n.bezierCurveTo(17 * e, 95 * e, 19 * e, 95 * e, 21 * e, 95 * e),
                n.bezierCurveTo(9 * e, 83 * e, 17 * e, 93 * e, 4 * e, 76 * e),
                n.bezierCurveTo(11 * e, 75 * e, 11 * e, 75 * e, 18 * e, 75 * e),
                n.bezierCurveTo(13 * e, 67 * e, 13 * e, 67 * e, 7 * e, 59 * e),
                n.bezierCurveTo(14 * e, 59 * e, 14 * e, 59 * e, 21 * e, 59 * e),
                n.bezierCurveTo(46 * e, 35 * e, 35 * e, 45 * e, 49 * e, 31 * e),
                n.bezierCurveTo(53 * e, 24 * e, 51 * e, 21 * e, 51 * e, 16 * e),
                n.bezierCurveTo(63 * e, 23 * e, 63 * e, 24 * e, 69 * e, 29 * e),
                n.bezierCurveTo(76 * e, 7 * e, 75 * e, 11 * e, 76 * e, 6 * e),
                n.bezierCurveTo(81 * e, 12 * e, 84 * e, 18 * e, 89 * e, 27 * e),
                n.bezierCurveTo(95 * e, 25 * e, 100 * e, 16 * e, 105 * e, 14 * e),
                n.bezierCurveTo(103 * e, 25 * e, 111 * e, 33 * e, 110 * e, 34 * e),
                n.bezierCurveTo(123 * e, 48 * e, 123 * e, 48 * e, 136 * e, 62 * e),
                n.bezierCurveTo(142 * e, 60 * e, 147 * e, 59 * e, 155 * e, 58 * e),
                n.bezierCurveTo(147 * e, 65 * e, 147 * e, 65 * e, 139 * e, 73 * e),
                n.bezierCurveTo(145 * e, 73 * e, 145 * e, 73 * e, 151 * e, 73 * e),
                n.bezierCurveTo(145 * e, 80 * e, 145 * e, 80 * e, 138 * e, 87 * e),
                n.bezierCurveTo(144 * e, 88 * e, 144 * e, 88 * e, 150 * e, 89 * e),
                n.bezierCurveTo(125 * e, 103 * e, 125 * e, 125 * e, 113 * e, 141 * e),
                n.bezierCurveTo(92 * e, 178 * e, 85 * e, 177 * e, 76 * e, 178 * e),
                n.bezierCurveTo(64 * e, 179 * e, 51 * e, 164 * e, 35 * e, 131 * e),
                n.bezierCurveTo(18 * e, 95 * e, 13 * e, 99 * e, 8 * e, 93 * e),
                n.closePath(),
                he(n, t[1]),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(28 * e, 63 * e),
                n.bezierCurveTo(23 * e, 54 * e, 24 * e, 47 * e, 26 * e, 37 * e),
                n.bezierCurveTo(28 * e, 29 * e, 31 * e, 31 * e, 41 * e, 35 * e),
                n.bezierCurveTo(52 * e, 45 * e, 55 * e, 51 * e, 57 * e, 53 * e),
                n.bezierCurveTo(50 * e, 50 * e, 44 * e, 47 * e, 43 * e, 48 * e),
                n.bezierCurveTo(43 * e, 52 * e, 43 * e, 52 * e, 42 * e, 57 * e),
                n.bezierCurveTo(38 * e, 54 * e, 38 * e, 54 * e, 33 * e, 51 * e),
                n.bezierCurveTo(34 * e, 56 * e, 34 * e, 56 * e, 34 * e, 61 * e),
                n.closePath(),
                he(n, t[3]),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(99 * e, 55 * e),
                n.bezierCurveTo(107 * e, 43 * e, 113 * e, 39 * e, 121 * e, 34 * e),
                n.bezierCurveTo(130 * e, 29 * e, 130 * e, 34 * e, 130 * e, 42 * e),
                n.bezierCurveTo(131 * e, 57 * e, 128 * e, 61 * e, 129 * e, 63 * e),
                n.bezierCurveTo(124 * e, 62 * e, 124 * e, 62 * e, 119 * e, 61 * e),
                n.bezierCurveTo(119 * e, 56 * e, 120 * e, 61 * e, 118 * e, 52 * e),
                n.bezierCurveTo(115 * e, 55 * e, 111 * e, 59 * e, 111 * e, 58 * e),
                n.bezierCurveTo(110 * e, 54 * e, 109 * e, 57 * e, 109 * e, 51 * e),
                n.closePath(),
                he(n, t[3]),
                Re(n, 103 * e, 110 * e, 11 * e),
                he(n, t[4]),
                Re(n, 55 * e, 111 * e, 11 * e),
                he(n, t[4]),
                Re(n, 99 * e, 107 * e, 5 * e),
                he(n, t[1]),
                Re(n, 51 * e, 108 * e, 5 * e),
                he(n, t[1]),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(31 * e, 121 * e),
                n.bezierCurveTo(45 * e, 128 * e, 51 * e, 133 * e, 53 * e, 141 * e),
                n.bezierCurveTo(59 * e, 161 * e, 70 * e, 173 * e, 80 * e, 169 * e),
                n.bezierCurveTo(89 * e, 172 * e, 99 * e, 149 * e, 107 * e, 133 * e),
                n.bezierCurveTo(114 * e, 122 * e, 119 * e, 123 * e, 124 * e, 119 * e),
                n.bezierCurveTo(109 * e, 148 * e, 117 * e, 133 * e, 109 * e, 147 * e),
                n.bezierCurveTo(87 * e, 180 * e, 84 * e, 179 * e, 76 * e, 178 * e),
                n.bezierCurveTo(49 * e, 173 * e, 44 * e, 149 * e, 31 * e, 121 * e),
                n.closePath(),
                he(n, t[5]),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.translate(-2, 0),
                n.moveTo(71 * e, 162 * e),
                n.bezierCurveTo(80 * e, 155 * e, 85 * e, 159 * e, 89 * e, 164 * e),
                n.bezierCurveTo(90 * e, 171 * e, 86 * e, 173 * e, 79 * e, 173 * e),
                n.bezierCurveTo(67 * e, 172 * e, 67 * e, 168 * e, 71 * e, 162 * e),
                n.closePath(),
                he(n, t[3]),
                n.translate(2, 0),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(9 * e, 93 * e),
                n.bezierCurveTo(17 * e, 95 * e, 19 * e, 95 * e, 21 * e, 95 * e),
                n.bezierCurveTo(9 * e, 83 * e, 17 * e, 93 * e, 4 * e, 76 * e),
                n.bezierCurveTo(11 * e, 75 * e, 11 * e, 75 * e, 18 * e, 75 * e),
                n.bezierCurveTo(13 * e, 67 * e, 13 * e, 67 * e, 7 * e, 59 * e),
                n.bezierCurveTo(14 * e, 59 * e, 14 * e, 59 * e, 21 * e, 59 * e),
                n.bezierCurveTo(46 * e, 35 * e, 35 * e, 45 * e, 49 * e, 31 * e),
                n.bezierCurveTo(53 * e, 24 * e, 51 * e, 21 * e, 51 * e, 16 * e),
                n.bezierCurveTo(63 * e, 23 * e, 63 * e, 24 * e, 69 * e, 29 * e),
                n.bezierCurveTo(76 * e, 7 * e, 75 * e, 11 * e, 76 * e, 6 * e),
                n.bezierCurveTo(81 * e, 12 * e, 84 * e, 18 * e, 89 * e, 27 * e),
                n.bezierCurveTo(95 * e, 25 * e, 100 * e, 16 * e, 105 * e, 14 * e),
                n.bezierCurveTo(103 * e, 25 * e, 111 * e, 33 * e, 110 * e, 34 * e),
                n.bezierCurveTo(123 * e, 48 * e, 123 * e, 48 * e, 136 * e, 62 * e),
                n.bezierCurveTo(142 * e, 60 * e, 147 * e, 59 * e, 155 * e, 58 * e),
                n.bezierCurveTo(147 * e, 65 * e, 147 * e, 65 * e, 139 * e, 73 * e),
                n.bezierCurveTo(145 * e, 73 * e, 145 * e, 73 * e, 151 * e, 73 * e),
                n.bezierCurveTo(145 * e, 80 * e, 145 * e, 80 * e, 138 * e, 87 * e),
                n.bezierCurveTo(144 * e, 88 * e, 144 * e, 88 * e, 150 * e, 89 * e),
                n.bezierCurveTo(125 * e, 103 * e, 125 * e, 125 * e, 113 * e, 141 * e),
                n.bezierCurveTo(92 * e, 178 * e, 85 * e, 177 * e, 76 * e, 178 * e),
                n.bezierCurveTo(64 * e, 179 * e, 51 * e, 164 * e, 35 * e, 131 * e),
                n.bezierCurveTo(18 * e, 95 * e, 13 * e, 99 * e, 8 * e, 93 * e),
                n.closePath(),
                he(n, void 0, t[2], 4 * e),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(25 * e, 63 * e),
                n.bezierCurveTo(16 * e, 58 * e, 17 * e, 51 * e, 17 * e, 33 * e),
                n.bezierCurveTo(19 * e, 12 * e, 21 * e, 12 * e, 32 * e, 17 * e),
                n.bezierCurveTo(63 * e, 31 * e, 66 * e, 45 * e, 66 * e, 54 * e),
                he(n, t[1], t[2], 4 * e),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(91 * e, 53 * e),
                n.bezierCurveTo(91 * e, 40 * e, 98 * e, 33 * e, 121 * e, 20 * e),
                n.bezierCurveTo(137 * e, 12 * e, 137 * e, 16 * e, 139 * e, 27 * e),
                n.bezierCurveTo(141 * e, 49 * e, 140 * e, 57 * e, 134 * e, 64 * e),
                he(n, t[1], t[2], 4 * e),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(31 * e, 63 * e),
                n.bezierCurveTo(23 * e, 54 * e, 24 * e, 47 * e, 26 * e, 37 * e),
                n.bezierCurveTo(28 * e, 29 * e, 31 * e, 31 * e, 41 * e, 35 * e),
                n.bezierCurveTo(52 * e, 45 * e, 55 * e, 51 * e, 57 * e, 53 * e),
                n.bezierCurveTo(50 * e, 50 * e, 44 * e, 47 * e, 43 * e, 48 * e),
                n.bezierCurveTo(43 * e, 52 * e, 43 * e, 52 * e, 42 * e, 57 * e),
                n.bezierCurveTo(38 * e, 54 * e, 38 * e, 54 * e, 33 * e, 51 * e),
                n.bezierCurveTo(34 * e, 56 * e, 34 * e, 56 * e, 34 * e, 61 * e),
                n.closePath(),
                he(n, t[3]),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(99 * e, 55 * e),
                n.bezierCurveTo(107 * e, 43 * e, 113 * e, 39 * e, 121 * e, 34 * e),
                n.bezierCurveTo(130 * e, 29 * e, 130 * e, 34 * e, 130 * e, 42 * e),
                n.bezierCurveTo(131 * e, 57 * e, 128 * e, 61 * e, 129 * e, 63 * e),
                n.bezierCurveTo(124 * e, 62 * e, 124 * e, 62 * e, 119 * e, 61 * e),
                n.bezierCurveTo(119 * e, 56 * e, 120 * e, 61 * e, 118 * e, 52 * e),
                n.bezierCurveTo(115 * e, 55 * e, 111 * e, 59 * e, 111 * e, 58 * e),
                n.bezierCurveTo(110 * e, 54 * e, 109 * e, 57 * e, 109 * e, 51 * e),
                n.closePath(),
                he(n, t[3]),
                i
            }
            function Li(e, t) {
                var i = window.document.createElement("canvas")
                  , n = i.getContext("2d");
                return i.width = 147 * e,
                i.height = 172 * e,
                n.globalAlpha = .5,
                n.translate(0, 8 * e),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(8 * e, 50 * e),
                n.bezierCurveTo(15 * e, 16 * e, 49 * e, 6 * e, 67 * e, 6 * e),
                n.bezierCurveTo(121 * e, 3 * e, 128 * e, 32 * e, 135 * e, 48 * e),
                n.bezierCurveTo(146 * e, 96 * e, 124 * e, 131 * e, 96 * e, 135 * e),
                n.bezierCurveTo(96 * e, 158 * e, 79 * e, 156 * e, 75 * e, 156 * e),
                n.bezierCurveTo(50 * e, 154 * e, 53 * e, 150 * e, 52 * e, 135 * e),
                n.bezierCurveTo(2 * e, 127 * e, 3 * e, 87 * e, 8 * e, 50 * e),
                n.closePath(),
                he(n, t[0]),
                n.translate(0, -8 * e),
                n.globalAlpha = 1,
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(8 * e, 50 * e),
                n.bezierCurveTo(15 * e, 16 * e, 49 * e, 6 * e, 67 * e, 6 * e),
                n.bezierCurveTo(121 * e, 3 * e, 128 * e, 32 * e, 135 * e, 48 * e),
                n.bezierCurveTo(146 * e, 96 * e, 124 * e, 131 * e, 96 * e, 135 * e),
                n.bezierCurveTo(96 * e, 158 * e, 79 * e, 156 * e, 75 * e, 156 * e),
                n.bezierCurveTo(50 * e, 154 * e, 53 * e, 150 * e, 52 * e, 135 * e),
                n.bezierCurveTo(2 * e, 127 * e, 3 * e, 87 * e, 8 * e, 50 * e),
                n.closePath(),
                he(n, t[1], t[2], 4 * e),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(14 * e, 57 * e),
                n.bezierCurveTo(2 * e, 50 * e, 5 * e, 22 * e, 24 * e, 22 * e),
                n.bezierCurveTo(41 * e, 21 * e, 54 * e, 32 * e, 55 * e, 48 * e),
                he(n, t[1], t[2], 4 * e),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(93 * e, 47 * e),
                n.bezierCurveTo(94 * e, 24 * e, 116 * e, 21 * e, 120 * e, 20 * e),
                n.bezierCurveTo(144 * e, 17 * e, 146 * e, 52 * e, 133 * e, 58 * e),
                he(n, t[1], t[2], 4 * e),
                Re(n, 51 * e, 91 * e, 9 * e),
                he(n, t[3]),
                Re(n, 95 * e, 91 * e, 9 * e),
                he(n, t[3]),
                Re(n, 91 * e, 89 * e, 4 * e),
                he(n, t[4]),
                Re(n, 47 * e, 89 * e, 4 * e),
                he(n, t[4]),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(54 * e, 133 * e),
                n.bezierCurveTo(56 * e, 108 * e, 64 * e, 99 * e, 73 * e, 98 * e),
                n.bezierCurveTo(86 * e, 97 * e, 91 * e, 119 * e, 93 * e, 133 * e),
                n.bezierCurveTo(94 * e, 155 * e, 90 * e, 150 * e, 74 * e, 155 * e),
                n.bezierCurveTo(50 * e, 152 * e, 55 * e, 145 * e, 54 * e, 134 * e),
                n.closePath(),
                he(n, t[5]),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(65.25 * e, 135 * e),
                n.bezierCurveTo(75.25 * e, 128 * e, 83.25 * e, 133 * e, 83.25 * e, 138 * e),
                n.bezierCurveTo(88.25 * e, 148 * e, 61.25 * e, 149 * e, 64.25 * e, 137 * e),
                n.closePath(),
                he(n, t[6]),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(74 * e, 145 * e),
                n.bezierCurveTo(74 * e, 148 * e, 74 * e, 148 * e, 74 * e, 151 * e),
                n.closePath(),
                he(n, void 0, t[6], 2 * e),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(19 * e, 58 * e),
                n.bezierCurveTo(10 * e, 38 * e, 18 * e, 33 * e, 28 * e, 34 * e),
                n.bezierCurveTo(41 * e, 39 * e, 45 * e, 45 * e, 50 * e, 51 * e),
                n.closePath(),
                he(n, t[6]),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(100 * e, 51 * e),
                n.bezierCurveTo(106 * e, 36 * e, 119 * e, 31 * e, 128 * e, 36 * e),
                n.bezierCurveTo(137 * e, 49 * e, 128 * e, 58 * e, 128 * e, 60 * e),
                n.closePath(),
                he(n, t[6]),
                i
            }
            function Bi(e, t) {
                var i = window.document.createElement("canvas")
                  , n = i.getContext("2d");
                return i.width = 271 * e,
                i.height = 366 * e,
                n.globalAlpha = .5,
                n.translate(0, 10 * e),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(133 * e, 99 * e),
                n.bezierCurveTo(186 * e, 123 * e, 199 * e, 152 * e, 209 * e, 169 * e),
                n.bezierCurveTo(228 * e, 205 * e, 224 * e, 245 * e, 190 * e, 276 * e),
                n.bezierCurveTo(161 * e, 296 * e, 99 * e, 292 * e, 79 * e, 274 * e),
                n.bezierCurveTo(49 * e, 253 * e, 47 * e, 214 * e, 50 * e, 197 * e),
                n.bezierCurveTo(61 * e, 143 * e, 102 * e, 113 * e, 131 * e, 99 * e),
                n.closePath(),
                he(n, t[0]),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(73 * e, 270 * e),
                n.bezierCurveTo(79 * e, 280 * e, 77 * e, 280 * e, 78 * e, 287 * e),
                n.bezierCurveTo(78 * e, 290 * e, 83 * e, 291 * e, 82 * e, 299 * e),
                n.bezierCurveTo(81 * e, 301 * e, 87 * e, 301 * e, 92 * e, 314 * e),
                n.bezierCurveTo(94 * e, 319 * e, 100 * e, 321 * e, 107 * e, 320 * e),
                n.bezierCurveTo(111 * e, 323 * e, 114 * e, 324 * e, 119 * e, 320 * e),
                n.bezierCurveTo(137 * e, 321 * e, 146 * e, 323 * e, 139 * e, 320 * e),
                n.bezierCurveTo(141 * e, 324 * e, 150 * e, 324 * e, 153 * e, 320 * e),
                n.bezierCurveTo(168 * e, 319 * e, 171 * e, 316 * e, 173 * e, 307 * e),
                n.bezierCurveTo(180 * e, 305 * e, 180 * e, 301 * e, 178 * e, 296 * e),
                n.bezierCurveTo(183 * e, 296 * e, 185 * e, 289 * e, 188 * e, 279 * e),
                n.bezierCurveTo(171 * e, 286 * e, 149 * e, 290 * e, 132 * e, 289 * e),
                n.bezierCurveTo(101 * e, 290 * e, 86 * e, 280 * e, 74 * e, 271 * e),
                n.closePath(),
                he(n, t[0]),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(76 * e, 252 * e),
                n.bezierCurveTo(85 * e, 294 * e, 96 * e, 314 * e, 103 * e, 314 * e),
                n.bezierCurveTo(106 * e, 316 * e, 151 * e, 314 * e, 156 * e, 314 * e),
                n.bezierCurveTo(169 * e, 317 * e, 182 * e, 285 * e, 191 * e, 256 * e),
                n.bezierCurveTo(134.5 * e, 254 * e, 134.5 * e, 254 * e, 78 * e, 252 * e),
                n.closePath(),
                he(n, t[0]),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(84 * e, 257 * e),
                n.bezierCurveTo(122 * e, 273 * e, 146 * e, 268 * e, 179 * e, 261 * e),
                n.bezierCurveTo(190 * e, 258 * e, 187 * e, 266 * e, 178 * e, 272 * e),
                n.bezierCurveTo(160 * e, 284 * e, 123 * e, 282 * e, 100 * e, 277 * e),
                n.bezierCurveTo(73 * e, 260 * e, 79 * e, 257 * e, 84 * e, 257 * e),
                n.closePath(),
                he(n, t[0]),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(125 * e, 65 * e),
                n.bezierCurveTo(133 * e, 45 * e, 136 * e, 42 * e, 141 * e, 55 * e),
                n.bezierCurveTo(151 * e, 96 * e, 164 * e, 117 * e, 175 * e, 134 * e),
                n.bezierCurveTo(203 * e, 181 * e, 207 * e, 182 * e, 208 * e, 215 * e),
                n.bezierCurveTo(206 * e, 240 * e, 205 * e, 246 * e, 184 * e, 258 * e),
                n.bezierCurveTo(161 * e, 267 * e, 131 * e, 272 * e, 86 * e, 258 * e),
                n.bezierCurveTo(67 * e, 252 * e, 68 * e, 239 * e, 64 * e, 216 * e),
                n.bezierCurveTo(62 * e, 194 * e, 72 * e, 169 * e, 92 * e, 142 * e),
                n.bezierCurveTo(106 * e, 121 * e, 114 * e, 101 * e, 125 * e, 65 * e),
                n.closePath(),
                he(n, t[0]),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(115 * e, 37 * e),
                n.bezierCurveTo(116 * e, 28 * e, 119 * e, 27 * e, 126 * e, 37 * e),
                n.bezierCurveTo(134 * e, 48 * e, 134 * e, 49 * e, 132 * e, 59 * e),
                n.bezierCurveTo(131 * e, 67 * e, 127 * e, 65 * e, 120 * e, 56 * e),
                n.bezierCurveTo(114 * e, 49 * e, 113 * e, 43 * e, 115 * e, 38 * e),
                n.closePath(),
                he(n, t[0]),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(146 * e, 34 * e),
                n.bezierCurveTo(152 * e, 28 * e, 155 * e, 27 * e, 157 * e, 39 * e),
                n.bezierCurveTo(157 * e, 45 * e, 157 * e, 49 * e, 150 * e, 56 * e),
                n.bezierCurveTo(141 * e, 66 * e, 138 * e, 66 * e, 138 * e, 57 * e),
                n.bezierCurveTo(137 * e, 50 * e, 137 * e, 47 * e, 141 * e, 42 * e),
                n.closePath(),
                he(n, t[0]),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(143 * e, 69 * e),
                n.bezierCurveTo(148 * e, 56 * e, 156 * e, 50 * e, 158 * e, 58 * e),
                n.bezierCurveTo(159 * e, 64 * e, 160 * e, 67 * e, 153 * e, 77 * e),
                n.bezierCurveTo(148 * e, 83 * e, 145 * e, 84 * e, 143 * e, 77 * e),
                n.closePath(),
                he(n, t[0]),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(149 * e, 92 * e),
                n.bezierCurveTo(149 * e, 89 * e, 151 * e, 84 * e, 156 * e, 79 * e),
                n.bezierCurveTo(161 * e, 73 * e, 163 * e, 78 * e, 162 * e, 86 * e),
                n.bezierCurveTo(161 * e, 91 * e, 155 * e, 99 * e, 152 * e, 98 * e),
                n.closePath(),
                he(n, t[0]),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(111 * e, 61 * e),
                n.bezierCurveTo(114 * e, 51 * e, 117 * e, 51 * e, 124 * e, 64 * e),
                n.bezierCurveTo(128 * e, 68 * e, 128 * e, 76 * e, 126 * e, 79 * e),
                n.bezierCurveTo(123 * e, 84 * e, 122 * e, 82 * e, 115 * e, 74 * e),
                n.bezierCurveTo(112 * e, 67 * e, 115 * e, 74 * e, 115 * e, 74 * e),
                n.bezierCurveTo(111 * e, 68 * e, 111 * e, 66 * e, 111 * e, 62 * e),
                n.closePath(),
                he(n, t[0]),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(107 * e, 81 * e),
                n.bezierCurveTo(108 * e, 74 * e, 112 * e, 73 * e, 118 * e, 84 * e),
                n.bezierCurveTo(122 * e, 88 * e, 122 * e, 93 * e, 121 * e, 98 * e),
                n.bezierCurveTo(114 * e, 98 * e, 113 * e, 98 * e, 109 * e, 90 * e),
                n.bezierCurveTo(107 * e, 87 * e, 106 * e, 85 * e, 107 * e, 82 * e),
                n.closePath(),
                he(n, t[0]),
                n.globalAlpha = 1,
                n.translate(0, -10 * e),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(133 * e, 99 * e),
                n.bezierCurveTo(186 * e, 123 * e, 199 * e, 152 * e, 209 * e, 169 * e),
                n.bezierCurveTo(228 * e, 205 * e, 224 * e, 245 * e, 190 * e, 276 * e),
                n.bezierCurveTo(161 * e, 296 * e, 99 * e, 292 * e, 79 * e, 274 * e),
                n.bezierCurveTo(49 * e, 253 * e, 47 * e, 214 * e, 50 * e, 197 * e),
                n.bezierCurveTo(61 * e, 143 * e, 102 * e, 113 * e, 131 * e, 99 * e),
                n.closePath(),
                he(n, t[3], t[3], 8 * e),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(73 * e, 270 * e),
                n.bezierCurveTo(79 * e, 280 * e, 77 * e, 280 * e, 78 * e, 287 * e),
                n.bezierCurveTo(78 * e, 290 * e, 83 * e, 291 * e, 82 * e, 299 * e),
                n.bezierCurveTo(81 * e, 301 * e, 87 * e, 301 * e, 92 * e, 314 * e),
                n.bezierCurveTo(94 * e, 319 * e, 100 * e, 321 * e, 107 * e, 320 * e),
                n.bezierCurveTo(111 * e, 323 * e, 114 * e, 324 * e, 119 * e, 320 * e),
                n.bezierCurveTo(137 * e, 321 * e, 146 * e, 323 * e, 139 * e, 320 * e),
                n.bezierCurveTo(141 * e, 324 * e, 150 * e, 324 * e, 153 * e, 320 * e),
                n.bezierCurveTo(168 * e, 319 * e, 171 * e, 316 * e, 173 * e, 307 * e),
                n.bezierCurveTo(180 * e, 305 * e, 180 * e, 301 * e, 178 * e, 296 * e),
                n.bezierCurveTo(183 * e, 296 * e, 185 * e, 289 * e, 188 * e, 279 * e),
                n.bezierCurveTo(171 * e, 286 * e, 149 * e, 290 * e, 132 * e, 289 * e),
                n.bezierCurveTo(101 * e, 290 * e, 86 * e, 280 * e, 74 * e, 271 * e),
                n.closePath(),
                he(n, t[3], t[3], 8 * e),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(76 * e, 252 * e),
                n.bezierCurveTo(85 * e, 294 * e, 96 * e, 314 * e, 103 * e, 314 * e),
                n.bezierCurveTo(106 * e, 316 * e, 151 * e, 314 * e, 156 * e, 314 * e),
                n.bezierCurveTo(169 * e, 317 * e, 182 * e, 285 * e, 191 * e, 256 * e),
                n.bezierCurveTo(134.5 * e, 254 * e, 134.5 * e, 254 * e, 78 * e, 252 * e),
                n.closePath(),
                he(n, t[3], t[3], 8 * e),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(84 * e, 257 * e),
                n.bezierCurveTo(122 * e, 273 * e, 146 * e, 268 * e, 179 * e, 261 * e),
                n.bezierCurveTo(190 * e, 258 * e, 187 * e, 266 * e, 178 * e, 272 * e),
                n.bezierCurveTo(160 * e, 284 * e, 123 * e, 282 * e, 100 * e, 277 * e),
                n.bezierCurveTo(73 * e, 260 * e, 79 * e, 257 * e, 84 * e, 257 * e),
                n.closePath(),
                he(n, t[3], t[3], 8 * e),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(125 * e, 65 * e),
                n.bezierCurveTo(133 * e, 45 * e, 136 * e, 42 * e, 141 * e, 55 * e),
                n.bezierCurveTo(151 * e, 96 * e, 164 * e, 117 * e, 175 * e, 134 * e),
                n.bezierCurveTo(203 * e, 181 * e, 207 * e, 182 * e, 208 * e, 215 * e),
                n.bezierCurveTo(206 * e, 240 * e, 205 * e, 246 * e, 184 * e, 258 * e),
                n.bezierCurveTo(161 * e, 267 * e, 131 * e, 272 * e, 86 * e, 258 * e),
                n.bezierCurveTo(67 * e, 252 * e, 68 * e, 239 * e, 64 * e, 216 * e),
                n.bezierCurveTo(62 * e, 194 * e, 72 * e, 169 * e, 92 * e, 142 * e),
                n.bezierCurveTo(106 * e, 121 * e, 114 * e, 101 * e, 125 * e, 65 * e),
                n.closePath(),
                he(n, t[3], t[3], 8 * e),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(115 * e, 37 * e),
                n.bezierCurveTo(116 * e, 28 * e, 119 * e, 27 * e, 126 * e, 37 * e),
                n.bezierCurveTo(134 * e, 48 * e, 134 * e, 49 * e, 132 * e, 59 * e),
                n.bezierCurveTo(131 * e, 67 * e, 127 * e, 65 * e, 120 * e, 56 * e),
                n.bezierCurveTo(114 * e, 49 * e, 113 * e, 43 * e, 115 * e, 38 * e),
                n.closePath(),
                he(n, t[3], t[3], 8 * e),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(146 * e, 34 * e),
                n.bezierCurveTo(152 * e, 28 * e, 155 * e, 27 * e, 157 * e, 39 * e),
                n.bezierCurveTo(157 * e, 45 * e, 157 * e, 49 * e, 150 * e, 56 * e),
                n.bezierCurveTo(141 * e, 66 * e, 138 * e, 66 * e, 138 * e, 57 * e),
                n.bezierCurveTo(137 * e, 50 * e, 137 * e, 47 * e, 141 * e, 42 * e),
                n.closePath(),
                he(n, t[3], t[3], 8 * e),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(143 * e, 69 * e),
                n.bezierCurveTo(148 * e, 56 * e, 156 * e, 50 * e, 158 * e, 58 * e),
                n.bezierCurveTo(159 * e, 64 * e, 160 * e, 67 * e, 153 * e, 77 * e),
                n.bezierCurveTo(148 * e, 83 * e, 145 * e, 84 * e, 143 * e, 77 * e),
                n.closePath(),
                he(n, t[3], t[3], 8 * e),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(149 * e, 92 * e),
                n.bezierCurveTo(149 * e, 89 * e, 151 * e, 84 * e, 156 * e, 79 * e),
                n.bezierCurveTo(161 * e, 73 * e, 163 * e, 78 * e, 162 * e, 86 * e),
                n.bezierCurveTo(161 * e, 91 * e, 155 * e, 99 * e, 152 * e, 98 * e),
                n.closePath(),
                he(n, t[3], t[3], 8 * e),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(111 * e, 61 * e),
                n.bezierCurveTo(114 * e, 51 * e, 117 * e, 51 * e, 124 * e, 64 * e),
                n.bezierCurveTo(128 * e, 68 * e, 128 * e, 76 * e, 126 * e, 79 * e),
                n.bezierCurveTo(123 * e, 84 * e, 122 * e, 82 * e, 115 * e, 74 * e),
                n.bezierCurveTo(112 * e, 67 * e, 115 * e, 74 * e, 115 * e, 74 * e),
                n.bezierCurveTo(111 * e, 68 * e, 111 * e, 66 * e, 111 * e, 62 * e),
                n.closePath(),
                he(n, t[3], t[3], 8 * e),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(107 * e, 81 * e),
                n.bezierCurveTo(108 * e, 74 * e, 112 * e, 73 * e, 118 * e, 84 * e),
                n.bezierCurveTo(122 * e, 88 * e, 122 * e, 93 * e, 121 * e, 98 * e),
                n.bezierCurveTo(114 * e, 98 * e, 113 * e, 98 * e, 109 * e, 90 * e),
                n.bezierCurveTo(107 * e, 87 * e, 106 * e, 85 * e, 107 * e, 82 * e),
                n.closePath(),
                he(n, t[3], t[3], 8 * e),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(133 * e, 99 * e),
                n.bezierCurveTo(186 * e, 123 * e, 199 * e, 152 * e, 209 * e, 169 * e),
                n.bezierCurveTo(228 * e, 205 * e, 224 * e, 245 * e, 190 * e, 276 * e),
                n.bezierCurveTo(161 * e, 296 * e, 99 * e, 292 * e, 79 * e, 274 * e),
                n.bezierCurveTo(49 * e, 253 * e, 47 * e, 214 * e, 50 * e, 197 * e),
                n.bezierCurveTo(61 * e, 143 * e, 102 * e, 113 * e, 131 * e, 99 * e),
                n.closePath(),
                he(n, t[1]),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(73 * e, 270 * e),
                n.bezierCurveTo(79 * e, 280 * e, 77 * e, 280 * e, 78 * e, 287 * e),
                n.bezierCurveTo(78 * e, 290 * e, 83 * e, 291 * e, 82 * e, 299 * e),
                n.bezierCurveTo(81 * e, 301 * e, 87 * e, 301 * e, 92 * e, 314 * e),
                n.bezierCurveTo(94 * e, 319 * e, 100 * e, 321 * e, 107 * e, 320 * e),
                n.bezierCurveTo(111 * e, 323 * e, 114 * e, 324 * e, 119 * e, 320 * e),
                n.bezierCurveTo(137 * e, 321 * e, 146 * e, 323 * e, 139 * e, 320 * e),
                n.bezierCurveTo(141 * e, 324 * e, 150 * e, 324 * e, 153 * e, 320 * e),
                n.bezierCurveTo(168 * e, 319 * e, 171 * e, 316 * e, 173 * e, 307 * e),
                n.bezierCurveTo(180 * e, 305 * e, 180 * e, 301 * e, 178 * e, 296 * e),
                n.bezierCurveTo(183 * e, 296 * e, 185 * e, 289 * e, 188 * e, 279 * e),
                n.bezierCurveTo(171 * e, 286 * e, 149 * e, 290 * e, 132 * e, 289 * e),
                n.bezierCurveTo(101 * e, 290 * e, 86 * e, 280 * e, 74 * e, 271 * e),
                n.closePath(),
                he(n, t[5]),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(76 * e, 252 * e),
                n.bezierCurveTo(85 * e, 294 * e, 96 * e, 314 * e, 103 * e, 314 * e),
                n.bezierCurveTo(106 * e, 316 * e, 151 * e, 314 * e, 156 * e, 314 * e),
                n.bezierCurveTo(169 * e, 317 * e, 182 * e, 285 * e, 191 * e, 256 * e),
                n.bezierCurveTo(134.5 * e, 254 * e, 134.5 * e, 254 * e, 78 * e, 252 * e),
                n.closePath(),
                he(n, t[2]),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(84 * e, 257 * e),
                n.bezierCurveTo(122 * e, 273 * e, 146 * e, 268 * e, 179 * e, 261 * e),
                n.bezierCurveTo(190 * e, 258 * e, 187 * e, 266 * e, 178 * e, 272 * e),
                n.bezierCurveTo(160 * e, 284 * e, 123 * e, 282 * e, 100 * e, 277 * e),
                n.bezierCurveTo(73 * e, 260 * e, 79 * e, 257 * e, 84 * e, 257 * e),
                n.closePath(),
                he(n, t[1]),
                Re(n, 102 * e, 269 * e, 11 * e),
                he(n, t[3]),
                Re(n, 98 * e, 266 * e, 5 * e),
                he(n, t[6]),
                Re(n, 168 * e, 269 * e, 11 * e),
                he(n, t[3]),
                Re(n, 164 * e, 266 * e, 5 * e),
                he(n, t[6]),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(125 * e, 65 * e),
                n.bezierCurveTo(133 * e, 45 * e, 136 * e, 42 * e, 141 * e, 55 * e),
                n.bezierCurveTo(151 * e, 96 * e, 164 * e, 117 * e, 175 * e, 134 * e),
                n.bezierCurveTo(203 * e, 181 * e, 207 * e, 182 * e, 208 * e, 215 * e),
                n.bezierCurveTo(206 * e, 240 * e, 205 * e, 246 * e, 184 * e, 258 * e),
                n.bezierCurveTo(161 * e, 267 * e, 131 * e, 272 * e, 86 * e, 258 * e),
                n.bezierCurveTo(67 * e, 252 * e, 68 * e, 239 * e, 64 * e, 216 * e),
                n.bezierCurveTo(62 * e, 194 * e, 72 * e, 169 * e, 92 * e, 142 * e),
                n.bezierCurveTo(106 * e, 121 * e, 114 * e, 101 * e, 125 * e, 65 * e),
                n.closePath(),
                he(n, t[2]),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(115 * e, 235 * e),
                n.bezierCurveTo(118 * e, 258 * e, 137 * e, 268 * e, 148 * e, 246 * e),
                n.bezierCurveTo(156 * e, 228 * e, 152 * e, 169 * e, 150 * e, 140 * e),
                n.bezierCurveTo(147 * e, 87 * e, 143 * e, 69 * e, 142 * e, 60 * e),
                n.bezierCurveTo(136 * e, 44 * e, 132 * e, 43 * e, 127 * e, 62 * e),
                n.bezierCurveTo(119 * e, 116 * e, 119 * e, 140 * e, 116 * e, 166 * e),
                n.bezierCurveTo(113 * e, 202 * e, 113 * e, 223 * e, 115 * e, 233 * e),
                n.closePath(),
                he(n, t[4]),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(132 * e, 219 * e),
                n.bezierCurveTo(140 * e, 229 * e, 142 * e, 231 * e, 145 * e, 237 * e),
                n.bezierCurveTo(145 * e, 245 * e, 139 * e, 249 * e, 133 * e, 249 * e),
                n.bezierCurveTo(123 * e, 248 * e, 123 * e, 243 * e, 121 * e, 239 * e),
                n.bezierCurveTo(126 * e, 227 * e, 129 * e, 223 * e, 132 * e, 219 * e),
                n.closePath(),
                he(n, t[8]),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(133 * e, 179 * e),
                n.bezierCurveTo(140 * e, 188.5 * e, 140 * e, 188.5 * e, 147 * e, 198 * e),
                n.bezierCurveTo(148 * e, 209 * e, 142 * e, 214 * e, 133 * e, 214 * e),
                n.bezierCurveTo(121 * e, 211 * e, 121 * e, 207 * e, 120 * e, 200 * e),
                n.bezierCurveTo(126.5 * e, 189.5 * e, 126.5 * e, 189.5 * e, 133 * e, 179 * e),
                n.closePath(),
                he(n, t[8]),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(133 * e, 143 * e),
                n.bezierCurveTo(139 * e, 151.5 * e, 139 * e, 151.5 * e, 145 * e, 160 * e),
                n.bezierCurveTo(143 * e, 167 * e, 140 * e, 170 * e, 134 * e, 170 * e),
                n.bezierCurveTo(128 * e, 169 * e, 124 * e, 167 * e, 123 * e, 161 * e),
                n.bezierCurveTo(128 * e, 152 * e, 128 * e, 152 * e, 133 * e, 143 * e),
                n.closePath(),
                he(n, t[8]),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(133 * e, 115 * e),
                n.bezierCurveTo(137.5 * e, 121.5 * e, 137.5 * e, 121.5 * e, 142 * e, 128 * e),
                n.bezierCurveTo(141 * e, 133 * e, 138 * e, 135 * e, 133 * e, 135 * e),
                n.bezierCurveTo(129 * e, 135 * e, 125 * e, 132 * e, 125 * e, 129 * e),
                n.bezierCurveTo(129 * e, 122 * e, 129 * e, 122 * e, 133 * e, 115 * e),
                n.closePath(),
                he(n, t[8]),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(133 * e, 94 * e),
                n.bezierCurveTo(136.5 * e, 98.5 * e, 136.5 * e, 98.5 * e, 140 * e, 103 * e),
                n.bezierCurveTo(139 * e, 109 * e, 137 * e, 109 * e, 133 * e, 110 * e),
                n.bezierCurveTo(127 * e, 108 * e, 129 * e, 107 * e, 127 * e, 105 * e),
                n.bezierCurveTo(130 * e, 99.5 * e, 130 * e, 99.5 * e, 133 * e, 94 * e),
                n.closePath(),
                he(n, t[8]),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(130 * e, 279 * e),
                n.bezierCurveTo(136.5 * e, 287.5 * e, 136.5 * e, 287.5 * e, 143 * e, 296 * e),
                n.bezierCurveTo(143 * e, 302 * e, 139 * e, 309 * e, 131 * e, 308 * e),
                n.bezierCurveTo(123 * e, 306 * e, 121 * e, 303 * e, 120 * e, 297 * e),
                n.bezierCurveTo(125.5 * e, 288.5 * e, 125.5 * e, 288.5 * e, 131 * e, 280 * e),
                n.closePath(),
                he(n, t[8]),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(147 * e, 303 * e),
                n.bezierCurveTo(151 * e, 311 * e, 151 * e, 319 * e, 147 * e, 321 * e),
                n.bezierCurveTo(138 * e, 320 * e, 145 * e, 308 * e, 147 * e, 303 * e),
                n.closePath(),
                he(n, t[8]),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(115 * e, 303 * e),
                n.bezierCurveTo(115 * e, 312 * e, 118 * e, 319 * e, 115 * e, 319 * e),
                n.bezierCurveTo(112 * e, 324 * e, 109 * e, 318 * e, 109 * e, 314 * e),
                n.bezierCurveTo(109 * e, 308 * e, 112 * e, 303 * e, 115 * e, 303 * e),
                n.closePath(),
                he(n, t[8]),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(89 * e, 280 * e),
                n.bezierCurveTo(83 * e, 279 * e, 80 * e, 281 * e, 81 * e, 286 * e),
                n.bezierCurveTo(83 * e, 290 * e, 84 * e, 290 * e, 87 * e, 286 * e),
                n.closePath(),
                he(n, t[8]),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(94 * e, 290 * e),
                n.bezierCurveTo(93 * e, 294 * e, 90 * e, 303 * e, 86 * e, 298 * e),
                n.bezierCurveTo(84 * e, 295 * e, 84 * e, 291 * e, 89 * e, 291 * e),
                n.closePath(),
                he(n, t[8]),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(163 * e, 295 * e),
                n.bezierCurveTo(175 * e, 294 * e, 176 * e, 296 * e, 175 * e, 301 * e),
                n.bezierCurveTo(174 * e, 305 * e, 171 * e, 305 * e, 166 * e, 300 * e),
                n.closePath(),
                he(n, t[8]),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(172 * e, 286 * e),
                n.bezierCurveTo(180 * e, 285 * e, 181 * e, 285 * e, 180 * e, 291 * e),
                n.bezierCurveTo(176 * e, 295 * e, 174 * e, 294 * e, 172 * e, 286 * e),
                n.closePath(),
                he(n, t[8]),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(115 * e, 37 * e),
                n.bezierCurveTo(116 * e, 28 * e, 119 * e, 27 * e, 126 * e, 37 * e),
                n.bezierCurveTo(134 * e, 48 * e, 134 * e, 49 * e, 132 * e, 59 * e),
                n.bezierCurveTo(131 * e, 67 * e, 127 * e, 65 * e, 120 * e, 56 * e),
                n.bezierCurveTo(114 * e, 49 * e, 113 * e, 43 * e, 115 * e, 38 * e),
                n.closePath(),
                he(n, t[7]),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(146 * e, 34 * e),
                n.bezierCurveTo(152 * e, 28 * e, 155 * e, 27 * e, 157 * e, 39 * e),
                n.bezierCurveTo(157 * e, 45 * e, 157 * e, 49 * e, 150 * e, 56 * e),
                n.bezierCurveTo(141 * e, 66 * e, 138 * e, 66 * e, 138 * e, 57 * e),
                n.bezierCurveTo(137 * e, 50 * e, 137 * e, 47 * e, 141 * e, 42 * e),
                n.closePath(),
                he(n, t[7]),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(143 * e, 69 * e),
                n.bezierCurveTo(148 * e, 56 * e, 156 * e, 50 * e, 158 * e, 58 * e),
                n.bezierCurveTo(159 * e, 64 * e, 160 * e, 67 * e, 153 * e, 77 * e),
                n.bezierCurveTo(148 * e, 83 * e, 145 * e, 84 * e, 143 * e, 77 * e),
                n.closePath(),
                he(n, t[7]),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(149 * e, 92 * e),
                n.bezierCurveTo(149 * e, 89 * e, 151 * e, 84 * e, 156 * e, 79 * e),
                n.bezierCurveTo(161 * e, 73 * e, 163 * e, 78 * e, 162 * e, 86 * e),
                n.bezierCurveTo(161 * e, 91 * e, 155 * e, 99 * e, 152 * e, 98 * e),
                n.closePath(),
                he(n, t[7]),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(111 * e, 61 * e),
                n.bezierCurveTo(114 * e, 51 * e, 117 * e, 51 * e, 124 * e, 64 * e),
                n.bezierCurveTo(128 * e, 68 * e, 128 * e, 76 * e, 126 * e, 79 * e),
                n.bezierCurveTo(123 * e, 84 * e, 122 * e, 82 * e, 115 * e, 74 * e),
                n.bezierCurveTo(112 * e, 67 * e, 115 * e, 74 * e, 115 * e, 74 * e),
                n.bezierCurveTo(111 * e, 68 * e, 111 * e, 66 * e, 111 * e, 62 * e),
                n.closePath(),
                he(n, t[7]),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(107 * e, 81 * e),
                n.bezierCurveTo(108 * e, 74 * e, 112 * e, 73 * e, 118 * e, 84 * e),
                n.bezierCurveTo(122 * e, 88 * e, 122 * e, 93 * e, 121 * e, 98 * e),
                n.bezierCurveTo(114 * e, 98 * e, 113 * e, 98 * e, 109 * e, 90 * e),
                n.bezierCurveTo(107 * e, 87 * e, 106 * e, 85 * e, 107 * e, 82 * e),
                n.closePath(),
                he(n, t[7]),
                i
            }
            function Mi(e, t) {
                var i = window.document.createElement("canvas")
                  , n = i.getContext("2d");
                return i.width = 85 * e,
                i.height = 145 * e,
                n.translate(-20 * e, -95 * e),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(50 * e, 105 * e),
                n.bezierCurveTo(52 * e, 119 * e, 64 * e, 137 * e, 71 * e, 146 * e),
                n.bezierCurveTo(71 * e, 161 * e, 74 * e, 169 * e, 79 * e, 179 * e),
                n.bezierCurveTo(68 * e, 192 * e, 70 * e, 204 * e, 69 * e, 216 * e),
                n.bezierCurveTo(50 * e, 189.5 * e, 50 * e, 189.5 * e, 31 * e, 163 * e),
                n.closePath(),
                he(n, t[1]),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(44 * e, 106 * e),
                n.bezierCurveTo(49 * e, 90 * e, 58 * e, 104 * e, 51 * e, 121 * e),
                n.bezierCurveTo(45 * e, 143 * e, 41 * e, 151 * e, 37 * e, 162 * e),
                n.bezierCurveTo(48 * e, 180 * e, 58 * e, 188 * e, 76 * e, 205 * e),
                n.bezierCurveTo(104 * e, 209 * e, 105 * e, 229 * e, 92 * e, 235 * e),
                n.bezierCurveTo(76 * e, 239 * e, 75 * e, 232 * e, 56 * e, 213 * e),
                n.bezierCurveTo(31 * e, 187 * e, 28 * e, 176 * e, 23 * e, 162 * e),
                n.bezierCurveTo(38 * e, 131 * e, 40 * e, 120 * e, 44 * e, 106 * e),
                n.closePath(),
                he(n, t[2], t[3], 4 * e),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(30 * e, 159 * e),
                n.bezierCurveTo(46 * e, 157 * e, 59 * e, 152 * e, 68 * e, 148 * e),
                n.bezierCurveTo(63 * e, 155 * e, 52 * e, 160 * e, 44 * e, 164 * e),
                n.bezierCurveTo(59 * e, 169 * e, 66 * e, 174 * e, 75 * e, 178 * e),
                n.bezierCurveTo(58 * e, 178 * e, 49 * e, 175 * e, 37 * e, 174 * e),
                n.closePath(),
                he(n, t[2]),
                i
            }
            function Yi(e, t) {
                var i = window.document.createElement("canvas")
                  , n = i.getContext("2d");
                return i.width = 85 * e,
                i.height = 145 * e,
                n.translate(-165 * e, -95 * e),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(217 * e, 103 * e),
                n.bezierCurveTo(209 * e, 129 * e, 203 * e, 137 * e, 195 * e, 146 * e),
                n.bezierCurveTo(195 * e, 159 * e, 194 * e, 167 * e, 189 * e, 178 * e),
                n.bezierCurveTo(193 * e, 186 * e, 196 * e, 195 * e, 198 * e, 216 * e),
                n.bezierCurveTo(217.5 * e, 189.5 * e, 217.5 * e, 189.5 * e, 237 * e, 163 * e),
                n.closePath(),
                he(n, t[1]),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(231 * e, 163 * e),
                n.bezierCurveTo(221 * e, 139 * e, 218 * e, 128 * e, 215 * e, 114 * e),
                n.bezierCurveTo(213 * e, 102 * e, 220 * e, 92 * e, 222 * e, 107 * e),
                n.bezierCurveTo(224 * e, 118 * e, 233 * e, 138 * e, 244 * e, 161 * e),
                n.bezierCurveTo(235 * e, 188 * e, 224 * e, 198 * e, 204 * e, 221 * e),
                n.bezierCurveTo(190 * e, 233 * e, 190 * e, 235 * e, 180 * e, 235 * e),
                n.bezierCurveTo(167 * e, 235 * e, 164 * e, 216 * e, 175 * e, 211 * e),
                n.bezierCurveTo(176 * e, 208 * e, 181 * e, 207 * e, 191 * e, 205 * e),
                n.bezierCurveTo(213 * e, 186 * e, 218 * e, 180 * e, 230 * e, 163 * e),
                n.closePath(),
                he(n, t[2], t[3], 4 * e),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(234 * e, 154 * e),
                n.bezierCurveTo(227 * e, 156 * e, 222 * e, 156 * e, 199 * e, 148 * e),
                n.bezierCurveTo(201 * e, 151 * e, 216 * e, 159 * e, 224 * e, 162 * e),
                n.bezierCurveTo(209 * e, 169.5 * e, 209 * e, 169.5 * e, 194 * e, 177 * e),
                n.bezierCurveTo(213.5 * e, 175 * e, 213.5 * e, 175 * e, 233 * e, 173 * e),
                n.closePath(),
                he(n, t[2]),
                i
            }
            function Hi(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                return n.width = 187 * e,
                n.height = 119 * e,
                a.globalAlpha = t ? .5 : 1,
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.translate(0, 3),
                a.moveTo(53 * e, 45 * e),
                a.bezierCurveTo(3 * e, 60 * e, 11 * e, 72 * e, 19 * e, 81 * e),
                a.bezierCurveTo(28 * e, 82 * e, 24 * e, 81 * e, 29 * e, 82 * e),
                a.bezierCurveTo(26 * e, 87 * e, 28 * e, 84 * e, 28 * e, 87 * e),
                a.bezierCurveTo(63 * e, 101 * e, 92 * e, 100 * e, 138 * e, 93 * e),
                a.bezierCurveTo(172 * e, 87 * e, 180 * e, 72 * e, 168 * e, 62 * e),
                a.bezierCurveTo(154 * e, 51 * e, 150 * e, 50 * e, 148 * e, 49 * e),
                a.bezierCurveTo(132 * e, 42 * e, 90 * e, 40 * e, 55 * e, 45 * e),
                a.closePath(),
                he(a, i[5]),
                a.globalAlpha = 1,
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.translate(0, -3),
                a.moveTo(53 * e, 45 * e),
                a.bezierCurveTo(3 * e, 60 * e, 11 * e, 72 * e, 19 * e, 81 * e),
                a.bezierCurveTo(28 * e, 82 * e, 24 * e, 81 * e, 29 * e, 82 * e),
                a.bezierCurveTo(26 * e, 87 * e, 28 * e, 84 * e, 28 * e, 87 * e),
                a.bezierCurveTo(63 * e, 101 * e, 92 * e, 100 * e, 138 * e, 93 * e),
                a.bezierCurveTo(172 * e, 87 * e, 180 * e, 72 * e, 168 * e, 62 * e),
                a.bezierCurveTo(154 * e, 51 * e, 150 * e, 50 * e, 148 * e, 49 * e),
                a.bezierCurveTo(132 * e, 42 * e, 90 * e, 40 * e, 55 * e, 45 * e),
                a.closePath(),
                he(a, i[0], i[1], 4 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(151 * e, 60 * e),
                a.bezierCurveTo(140 * e, 36 * e, 137 * e, 32 * e, 124 * e, 29 * e),
                a.bezierCurveTo(98 * e, 22 * e, 80 * e, 24 * e, 62 * e, 28 * e),
                a.bezierCurveTo(42 * e, 35 * e, 38 * e, 46 * e, 34 * e, 58 * e),
                a.bezierCurveTo(53 * e, 74 * e, 76 * e, 76 * e, 91 * e, 78 * e),
                a.closePath(),
                he(a, i[0], i[1], 4 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(37 * e, 53 * e),
                a.bezierCurveTo(30 * e, 56 * e, 29 * e, 67 * e, 30 * e, 68 * e),
                a.bezierCurveTo(94 * e, 108 * e, 150 * e, 76 * e, 155 * e, 70 * e),
                a.bezierCurveTo(154 * e, 60 * e, 151 * e, 54 * e, 149 * e, 53 * e),
                a.bezierCurveTo(101 * e, 74 * e, 66 * e, 66 * e, 37 * e, 53 * e),
                a.closePath(),
                he(a, i[2], i[3], 4 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(100 * e, 36 * e),
                a.bezierCurveTo(92 * e, 25 * e, 86 * e, 28 * e, 82 * e, 34 * e),
                a.bezierCurveTo(88 * e, 40 * e, 93 * e, 40 * e, 98 * e, 36 * e),
                a.closePath(),
                he(a, i[0], i[1], 4 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(80 * e, 43 * e),
                a.bezierCurveTo(69 * e, 46 * e, 67 * e, 52 * e, 69 * e, 58 * e),
                he(a, void 0, i[1], 4 * e),
                Re(a, 58 * e, 50 * e, 5 * e),
                he(a, i[4]),
                Re(a, 43 * e, 65 * e, 5 * e),
                he(a, i[4]),
                Re(a, 58 * e, 73 * e, 5 * e),
                he(a, i[4]),
                Re(a, 58 * e, 50 * e, 2 * e),
                he(a, i[5]),
                Re(a, 43 * e, 65 * e, 2 * e),
                he(a, i[5]),
                Re(a, 58 * e, 73 * e, 2 * e),
                he(a, i[5]),
                n
            }
            function Ki(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                return n.width = 180 * e,
                n.height = 120 * e,
                a.translate(-65 * e, -35 * e),
                a.globalAlpha = t ? .5 : 1,
                a.translate(0, 10 * e),
                a.save(),
                a.translate(150.5 * e, 63.84375 * e),
                ye(a, -67 * e, -16.5 * e, 134 * e, 33 * e, 5 * e),
                a.restore(),
                he(a, i[0]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(80.5 * e, 75.34375 * e),
                a.bezierCurveTo(83 * e, 106.34375 * e, 83 * e, 106.34375 * e, 85.5 * e, 137.34375 * e),
                a.bezierCurveTo(93 * e, 135.84375 * e, 93 * e, 135.84375 * e, 100.5 * e, 134.34375 * e),
                a.bezierCurveTo(99.5 * e, 100.84375 * e, 99.5 * e, 100.84375 * e, 98.5 * e, 67.34375 * e),
                a.closePath(),
                he(a, i[0]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(206.5 * e, 71.34375 * e),
                a.bezierCurveTo(203.5 * e, 104.34375 * e, 203.5 * e, 104.34375 * e, 200.5 * e, 137.34375 * e),
                a.bezierCurveTo(208.5 * e, 137.34375 * e, 208.5 * e, 137.34375 * e, 216.5 * e, 137.34375 * e),
                a.bezierCurveTo(219 * e, 102.84375 * e, 219 * e, 102.84375 * e, 221.5 * e, 68.34375 * e),
                a.closePath(),
                he(a, i[0]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(136.5 * e, 75.34375 * e),
                a.bezierCurveTo(139 * e, 94.34375 * e, 139 * e, 94.34375 * e, 141.5 * e, 113.34375 * e),
                a.bezierCurveTo(149.5 * e, 115.34375 * e, 149.5 * e, 115.34375 * e, 157.5 * e, 117.34375 * e),
                a.bezierCurveTo(162 * e, 97.34375 * e, 162 * e, 97.34375 * e, 166.5 * e, 77.34375 * e),
                a.closePath(),
                he(a, i[0]),
                a.save(),
                a.translate(152.5 * e, 80.84375 * e),
                a.rotate(3.12),
                ye(a, -73 * e, -20.5 * e, 146 * e, 41 * e, 5 * e),
                a.restore(),
                he(a, i[0]),
                a.globalAlpha = 1,
                a.translate(0, -10 * e),
                a.save(),
                a.translate(150.5 * e, 63.84375 * e),
                ye(a, -67 * e, -16.5 * e, 134 * e, 33 * e, 5 * e),
                a.restore(),
                he(a, i[1], i[2], 4 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(80.5 * e, 75.34375 * e),
                a.bezierCurveTo(83 * e, 106.34375 * e, 83 * e, 106.34375 * e, 85.5 * e, 137.34375 * e),
                a.bezierCurveTo(93 * e, 135.84375 * e, 93 * e, 135.84375 * e, 100.5 * e, 134.34375 * e),
                a.bezierCurveTo(99.5 * e, 100.84375 * e, 99.5 * e, 100.84375 * e, 98.5 * e, 67.34375 * e),
                a.closePath(),
                he(a, i[1], i[2], 4 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(206.5 * e, 71.34375 * e),
                a.bezierCurveTo(203.5 * e, 104.34375 * e, 203.5 * e, 104.34375 * e, 200.5 * e, 137.34375 * e),
                a.bezierCurveTo(208.5 * e, 137.34375 * e, 208.5 * e, 137.34375 * e, 216.5 * e, 137.34375 * e),
                a.bezierCurveTo(219 * e, 102.84375 * e, 219 * e, 102.84375 * e, 221.5 * e, 68.34375 * e),
                a.closePath(),
                he(a, i[1], i[2], 4 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(136.5 * e, 75.34375 * e),
                a.bezierCurveTo(139 * e, 94.34375 * e, 139 * e, 94.34375 * e, 141.5 * e, 113.34375 * e),
                a.bezierCurveTo(149.5 * e, 115.34375 * e, 149.5 * e, 115.34375 * e, 157.5 * e, 117.34375 * e),
                a.bezierCurveTo(162 * e, 97.34375 * e, 162 * e, 97.34375 * e, 166.5 * e, 77.34375 * e),
                a.closePath(),
                he(a, i[1], i[2], 4 * e),
                a.save(),
                a.translate(152.5 * e, 80.84375 * e),
                a.rotate(3.12),
                ye(a, -73 * e, -20.5 * e, 146 * e, 41 * e, 5 * e),
                a.restore(),
                he(a, i[1], i[2], 4 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(83.5 * e, 73.34375 * e),
                a.bezierCurveTo(93.5 * e, 70.34375 * e, 105.5 * e, 70.34375 * e, 124.5 * e, 72.34375 * e),
                a.bezierCurveTo(132.5 * e, 78.34375 * e, 162.5 * e, 80.34375 * e, 176.5 * e, 76.34375 * e),
                a.bezierCurveTo(194.5 * e, 69.34375 * e, 192.5 * e, 68.34375 * e, 199.5 * e, 63.34375 * e),
                a.bezierCurveTo(204.5 * e, 63.34375 * e, 204.5 * e, 63.34375 * e, 209.5 * e, 63.34375 * e),
                a.bezierCurveTo(153.5 * e, 82.34375 * e, 157.5 * e, 85.34375 * e, 209.5 * e, 63.34375 * e),
                a.bezierCurveTo(194.5 * e, 88.34375 * e, 162.5 * e, 87.34375 * e, 149.5 * e, 88.34375 * e),
                a.bezierCurveTo(129.5 * e, 81.34375 * e, 103.5 * e, 75.34375 * e, 83.5 * e, 82.34375 * e),
                a.closePath(),
                he(a, i[3]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(137.5 * e, 65.34375 * e),
                a.bezierCurveTo(150.5 * e, 76.34375 * e, 170.5 * e, 71.34375 * e, 174.5 * e, 65.34375 * e),
                a.closePath(),
                he(a, i[3]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(221.5 * e, 85.34375 * e),
                a.bezierCurveTo(211.5 * e, 79.34375 * e, 191.5 * e, 88.34375 * e, 181.5 * e, 96.34375 * e),
                a.bezierCurveTo(201.5 * e, 96.34375 * e, 201.5 * e, 96.34375 * e, 221.5 * e, 96.34375 * e),
                a.closePath(),
                he(a, i[3]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(84.5 * e, 89.34375 * e),
                a.bezierCurveTo(102.5 * e, 87.34375 * e, 112.5 * e, 88.34375 * e, 119.5 * e, 97.34375 * e),
                a.bezierCurveTo(102 * e, 98.34375 * e, 102 * e, 98.34375 * e, 84.5 * e, 99.34375 * e),
                a.closePath(),
                he(a, i[3]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(208.5 * e, 104.34375 * e),
                a.bezierCurveTo(208.5 * e, 110.34375 * e, 208.5 * e, 110.34375 * e, 208.5 * e, 116.34375 * e),
                a.bezierCurveTo(211.5 * e, 110.34375 * e, 211.5 * e, 110.34375 * e, 214.5 * e, 104.34375 * e),
                a.closePath(),
                he(a, i[3]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(87.5 * e, 117.34375 * e),
                a.bezierCurveTo(92 * e, 118.84375 * e, 92 * e, 118.84375 * e, 96.5 * e, 120.34375 * e),
                a.bezierCurveTo(93 * e, 123.84375 * e, 93 * e, 123.84375 * e, 89.5 * e, 127.34375 * e),
                a.closePath(),
                he(a, i[3]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(107.5 * e, 51.34375 * e),
                a.bezierCurveTo(122.5 * e, 54.34375 * e, 122.5 * e, 54.34375 * e, 137.5 * e, 57.34375 * e),
                a.bezierCurveTo(118 * e, 57.34375 * e, 118 * e, 57.34375 * e, 98.5 * e, 57.34375 * e),
                a.bezierCurveTo(94.5 * e, 54.84375 * e, 94.5 * e, 54.84375 * e, 90.5 * e, 52.34375 * e),
                a.closePath(),
                he(a, i[3]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(170.5 * e, 52.34375 * e),
                a.bezierCurveTo(179.5 * e, 51.84375 * e, 179.5 * e, 51.84375 * e, 188.5 * e, 51.34375 * e),
                a.bezierCurveTo(187.5 * e, 53.84375 * e, 187.5 * e, 53.84375 * e, 186.5 * e, 56.34375 * e),
                a.bezierCurveTo(177 * e, 56.34375 * e, 177 * e, 56.34375 * e, 167.5 * e, 56.34375 * e),
                a.closePath(),
                he(a, i[3]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(80.5 * e, 69.34375 * e),
                a.bezierCurveTo(86.5 * e, 70.34375 * e, 86.5 * e, 70.34375 * e, 92.5 * e, 71.34375 * e),
                a.bezierCurveTo(86 * e, 73.34375 * e, 86 * e, 73.34375 * e, 79.5 * e, 75.34375 * e),
                a.closePath(),
                he(a, i[2]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(222.5 * e, 75.34375 * e),
                a.bezierCurveTo(214.5 * e, 76.34375 * e, 214.5 * e, 76.34375 * e, 206.5 * e, 77.34375 * e),
                a.bezierCurveTo(216.5 * e, 79.34375 * e, 216.5 * e, 79.34375 * e, 226.5 * e, 81.34375 * e),
                a.closePath(),
                he(a, i[2]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(116.5 * e, 100.34375 * e),
                a.bezierCurveTo(128 * e, 97.34375 * e, 128 * e, 97.34375 * e, 139.5 * e, 94.34375 * e),
                a.bezierCurveTo(140 * e, 96.84375 * e, 140 * e, 96.84375 * e, 140.5 * e, 99.34375 * e),
                a.closePath(),
                he(a, i[2]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(112.5 * e, 48.34375 * e),
                a.bezierCurveTo(115.5 * e, 50.84375 * e, 115.5 * e, 50.84375 * e, 118.5 * e, 53.34375 * e),
                a.bezierCurveTo(131 * e, 50.84375 * e, 131 * e, 50.84375 * e, 143.5 * e, 48.34375 * e),
                a.closePath(),
                he(a, i[2]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(216.5 * e, 109.34375 * e),
                a.bezierCurveTo(213 * e, 114.84375 * e, 213 * e, 114.84375 * e, 209.5 * e, 120.34375 * e),
                a.bezierCurveTo(212 * e, 118.84375 * e, 212 * e, 118.84375 * e, 214.5 * e, 117.34375 * e),
                a.closePath(),
                he(a, i[2]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(86.5 * e, 133.34375 * e),
                a.bezierCurveTo(89 * e, 127.34375 * e, 89 * e, 127.34375 * e, 91.5 * e, 121.34375 * e),
                a.bezierCurveTo(92.5 * e, 127.34375 * e, 92.5 * e, 127.34375 * e, 93.5 * e, 133.34375 * e),
                a.closePath(),
                he(a, i[2]),
                n
            }
            function Gi(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                return n.width = 175 * e,
                n.height = 106 * e,
                a.globalAlpha = t ? .5 : 1,
                a.translate(0, 8 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(28 * e, 67 * e),
                a.bezierCurveTo(55 * e, 80 * e, 126 * e, 74 * e, 144 * e, 68 * e),
                a.bezierCurveTo(144.5 * e, 75 * e, 144.5 * e, 75 * e, 145 * e, 82 * e),
                a.bezierCurveTo(114 * e, 94 * e, 47 * e, 91 * e, 28 * e, 82 * e),
                a.closePath(),
                he(a, i[0]),
                a.globalAlpha = 1,
                a.translate(0, -8 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(145 * e, 75 * e),
                a.bezierCurveTo(143 * e, 51 * e, 133 * e, 29 * e, 100 * e, 27 * e),
                a.bezierCurveTo(52 * e, 21 * e, 37 * e, 37 * e, 31 * e, 54 * e),
                a.bezierCurveTo(23 * e, 78 * e, 28 * e, 77 * e, 36 * e, 79 * e),
                a.bezierCurveTo(80 * e, 87 * e, 120 * e, 81 * e, 145 * e, 76 * e),
                a.closePath(),
                he(a, i[1]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(38 * e, 46 * e),
                a.bezierCurveTo(52 * e, 37 * e, 69 * e, 36 * e, 85 * e, 36 * e),
                a.bezierCurveTo(118 * e, 38 * e, 129 * e, 42 * e, 137 * e, 48 * e),
                a.bezierCurveTo(135 * e, 45 * e, 135 * e, 45 * e, 133 * e, 42 * e),
                a.bezierCurveTo(124 * e, 32 * e, 116 * e, 28 * e, 88 * e, 25 * e),
                a.bezierCurveTo(47 * e, 28 * e, 40 * e, 32 * e, 36 * e, 44 * e),
                a.closePath(),
                he(a, i[5]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(145 * e, 75 * e),
                a.bezierCurveTo(143 * e, 51 * e, 133 * e, 29 * e, 100 * e, 27 * e),
                a.bezierCurveTo(52 * e, 21 * e, 37 * e, 37 * e, 31 * e, 54 * e),
                a.bezierCurveTo(23 * e, 78 * e, 28 * e, 77 * e, 36 * e, 79 * e),
                a.bezierCurveTo(80 * e, 87 * e, 120 * e, 81 * e, 145 * e, 76 * e),
                a.closePath(),
                he(a, void 0, i[2], 4 * e),
                a.translate(0, -3 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(28 * e, 67 * e),
                a.bezierCurveTo(55 * e, 80 * e, 126 * e, 74 * e, 144 * e, 68 * e),
                a.bezierCurveTo(144.5 * e, 75 * e, 144.5 * e, 75 * e, 145 * e, 82 * e),
                a.bezierCurveTo(114 * e, 94 * e, 47 * e, 91 * e, 28 * e, 82 * e),
                a.closePath(),
                he(a, i[10], i[10], 4 * e),
                a.translate(0, 3 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(131 * e, 43 * e),
                a.bezierCurveTo(145 * e, 40 * e, 148 * e, 32 * e, 147 * e, 17 * e),
                a.bezierCurveTo(166 * e, 39 * e, 155 * e, 62 * e, 140 * e, 67 * e),
                a.bezierCurveTo(128 * e, 65 * e, 128 * e, 52 * e, 131 * e, 45 * e),
                a.closePath(),
                he(a, i[3]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(41 * e, 43 * e),
                a.bezierCurveTo(30 * e, 42 * e, 24 * e, 33 * e, 25 * e, 17 * e),
                a.bezierCurveTo(7 * e, 34 * e, 17 * e, 63 * e, 33 * e, 66 * e),
                a.bezierCurveTo(45 * e, 59 * e, 44 * e, 53 * e, 42 * e, 44 * e),
                a.closePath(),
                he(a, i[3]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(24 * e, 19 * e),
                a.bezierCurveTo(24 * e, 35 * e, 35 * e, 42 * e, 42 * e, 44 * e),
                a.bezierCurveTo(43 * e, 51 * e, 43 * e, 48 * e, 43 * e, 56 * e),
                a.bezierCurveTo(25 * e, 47 * e, 17 * e, 36 * e, 23 * e, 20 * e),
                a.closePath(),
                he(a, i[6]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(148 * e, 18 * e),
                a.bezierCurveTo(159 * e, 44 * e, 139 * e, 52 * e, 130 * e, 55 * e),
                a.bezierCurveTo(129 * e, 48 * e, 129 * e, 46 * e, 131 * e, 43 * e),
                a.bezierCurveTo(144 * e, 37 * e, 148 * e, 35 * e, 147 * e, 18 * e),
                a.closePath(),
                he(a, i[6]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(131 * e, 43 * e),
                a.bezierCurveTo(145 * e, 40 * e, 148 * e, 32 * e, 147 * e, 17 * e),
                a.bezierCurveTo(166 * e, 39 * e, 155 * e, 62 * e, 140 * e, 67 * e),
                a.bezierCurveTo(128 * e, 65 * e, 128 * e, 52 * e, 131 * e, 45 * e),
                a.closePath(),
                he(a, void 0, i[4], 4 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(41 * e, 43 * e),
                a.bezierCurveTo(30 * e, 42 * e, 24 * e, 33 * e, 25 * e, 17 * e),
                a.bezierCurveTo(7 * e, 34 * e, 17 * e, 63 * e, 33 * e, 66 * e),
                a.bezierCurveTo(45 * e, 59 * e, 44 * e, 53 * e, 42 * e, 44 * e),
                a.closePath(),
                he(a, void 0, i[4], 4 * e),
                a.save(),
                a.translate(87 * e, 34.5 * e),
                a.rotate(0),
                ye(a, -8 * e, -10.5 * e, 16 * e, 21 * e, 10 * e),
                a.restore(),
                he(a, i[7], i[2], 4 * e),
                a.save(),
                a.translate(87 * e, 57 * e),
                a.rotate(0),
                ye(a, -8 * e, -23 * e, 16 * e, 46 * e, 10 * e),
                a.restore(),
                he(a, i[8], i[2], 4 * e),
                Re(a, 87 * e, 39 * e, 4.123105625617661 * e),
                he(a, i[9], i[2], 4 * e),
                Re(a, 87 * e, 60 * e, 4.242640687119285 * e),
                he(a, i[9], i[2], 4 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(28 * e, 67 * e),
                a.bezierCurveTo(55 * e, 80 * e, 126 * e, 74 * e, 144 * e, 68 * e),
                a.bezierCurveTo(144.5 * e, 75 * e, 144.5 * e, 75 * e, 145 * e, 82 * e),
                a.bezierCurveTo(114 * e, 94 * e, 47 * e, 91 * e, 28 * e, 82 * e),
                a.closePath(),
                he(a, i[8], i[2], 4 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(27 * e, 69 * e),
                a.bezierCurveTo(13 * e, 77 * e, 16 * e, 74 * e, 27 * e, 80 * e),
                a.closePath(),
                he(a, i[9], i[2], 4 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(145 * e, 70 * e),
                a.bezierCurveTo(149.5 * e, 72 * e, 149.5 * e, 72 * e, 154 * e, 74 * e),
                a.bezierCurveTo(150 * e, 77 * e, 150 * e, 77 * e, 146 * e, 80 * e),
                a.closePath(),
                he(a, i[9], i[2], 4 * e),
                Re(a, 50 * e, 80 * e, 5 * e),
                he(a, i[9], i[2], 4 * e),
                Re(a, 86.01141357421875 * e, 81.76705932617188 * e, 5 * e),
                he(a, i[9], i[2], 4 * e),
                Re(a, 119.01141357421875 * e, 80.13069152832031 * e, 5 * e),
                he(a, i[9], i[2], 4 * e),
                n
            }
            function Wi(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                return n.width = 142 * e,
                n.height = 118 * e,
                a.save(),
                a.translate(70.16665649414062 * e, 38.20831298828125 * e),
                ye(a, -58.5 * e, -27.5 * e, 117 * e, 55 * e, 20 * e),
                a.restore(),
                he(a, i[0], i[1], 4 * e),
                a.save(),
                a.translate(70 * e, 42.70831298828125 * e),
                ye(a, -61 * e, -20 * e, 122 * e, 40 * e, 20 * e),
                a.restore(),
                he(a, i[2], i[1], 4 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(123 * e, 70.375 * e),
                a.bezierCurveTo(115 * e, 99.375 * e, 119 * e, 85.375 * e, 115 * e, 100.375 * e),
                a.bezierCurveTo(112 * e, 116.375 * e, 117 * e, 109.375 * e, 131 * e, 100.375 * e),
                a.bezierCurveTo(131 * e, 83.375 * e, 131 * e, 83.375 * e, 131 * e, 66.375 * e),
                a.closePath(),
                he(a, i[2], i[1], 4 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(11 * e, 68.375 * e),
                a.bezierCurveTo(11.166656494140625 * e, 84.375 * e, 9 * e, 99.375 * e, 10 * e, 100.375 * e),
                a.bezierCurveTo(35 * e, 113.375 * e, 27 * e, 110.375 * e, 25 * e, 95.375 * e),
                a.bezierCurveTo(16 * e, 68.375 * e, 17 * e, 69.375 * e, 17 * e, 68.375 * e),
                a.closePath(),
                he(a, i[2], i[1], 4 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(46 * e, 32.375 * e),
                a.bezierCurveTo(43 * e, 8.375 * e, 45 * e, 7.375 * e, 56 * e, 6.375 * e),
                a.bezierCurveTo(105 * e, 4.375 * e, 102 * e, 6.375 * e, 97 * e, 32.375 * e),
                a.bezierCurveTo(138 * e, 43.375 * e, 133 * e, 45.375 * e, 133 * e, 58.375 * e),
                a.bezierCurveTo(133 * e, 85.375 * e, 125 * e, 74.375 * e, 111 * e, 70.375 * e),
                a.bezierCurveTo(70 * e, 69.875 * e, 29 * e, 69.375 * e, 29 * e, 69.375 * e),
                a.bezierCurveTo(7 * e, 84.375 * e, 7 * e, 70.375 * e, 7 * e, 59.375 * e),
                a.bezierCurveTo(6 * e, 28.375 * e, 32 * e, 39.375 * e, 44 * e, 32.375 * e),
                a.closePath(),
                he(a, i[2], i[1], 4 * e),
                Re(a, 71 * e, 44.375 * e, 16.55294535724685 * e),
                he(a, i[2], i[1], 4 * e),
                Re(a, 71 * e, 43.70831298828125 * e, 8.94427190999916 * e),
                he(a, i[2], i[1], 4 * e),
                n
            }
            function Fi(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                return n.width = 142 * e,
                n.height = 118 * e,
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(111 * e, 27.3671875 * e),
                a.bezierCurveTo(128 * e, 9.3671875 * e, 125 * e, 13.3671875 * e, 126 * e, 21.3671875 * e),
                a.bezierCurveTo(126 * e, 33.3671875 * e, 119 * e, 43.3671875 * e, 118 * e, 42.3671875 * e),
                a.closePath(),
                he(a, i[3], i[4], 4 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(31 * e, 23.3671875 * e),
                a.bezierCurveTo(17 * e, 15.3671875 * e, 16 * e, 14.3671875 * e, 17 * e, 20.3671875 * e),
                a.bezierCurveTo(22 * e, 33.3671875 * e, 20 * e, 27.3671875 * e, 24 * e, 34.3671875 * e),
                a.closePath(),
                he(a, i[3], i[4], 4 * e),
                a.save(),
                a.translate(70.5 * e, 34.8671875 * e),
                a.rotate(0),
                ye(a, -49.5 * e, -21.5 * e, 99 * e, 43 * e, 15 * e),
                a.restore(),
                he(a, i[0], i[1], 4 * e),
                a.save(),
                a.translate(71 * e, 40.8671875 * e),
                a.rotate(0),
                ye(a, -49 * e, -12.5 * e, 98 * e, 25 * e, 15 * e),
                a.restore(),
                he(a, i[2], i[1], 4 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(19.800003051757812 * e, 75.95625305175781 * e),
                a.bezierCurveTo(19.300003051757812 * e, 82.95625305175781 * e, 19.300003051757812 * e, 82.95625305175781 * e, 18.800003051757812 * e, 89.95625305175781 * e),
                a.bezierCurveTo(38.80000305175781 * e, 115.95625305175781 * e, 37.80000305175781 * e, 104.95625305175781 * e, 31.800003051757812 * e, 91.95625305175781 * e),
                a.closePath(),
                he(a, i[2], i[1], 4 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(119.80000305175781 * e, 75.95625305175781 * e),
                a.bezierCurveTo(120.80000305175781 * e, 82.95625305175781 * e, 120.80000305175781 * e, 82.95625305175781 * e, 121.80000305175781 * e, 89.95625305175781 * e),
                a.bezierCurveTo(101.80000305175781 * e, 111.95625305175781 * e, 99.80000305175781 * e, 111.95625305175781 * e, 112.80000305175781 * e, 81.95625305175781 * e),
                a.closePath(),
                he(a, i[2], i[1], 4 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(17.800003051757812 * e, 49.15625 * e),
                a.bezierCurveTo(17.800003051757812 * e, 64.15625 * e, 17.800003051757812 * e, 64.15625 * e, 17.800003051757812 * e, 79.15625 * e),
                a.bezierCurveTo(23.300003051757812 * e, 85.15625 * e, 23.300003051757812 * e, 85.15625 * e, 28.800003051757812 * e, 91.15625 * e),
                a.bezierCurveTo(36.80000305175781 * e, 96.15625 * e, 32.80000305175781 * e, 91.15625 * e, 28.800003051757812 * e, 77.15625 * e),
                a.bezierCurveTo(33.80000305175781 * e, 65.15625 * e, 33.80000305175781 * e, 65.15625 * e, 38.80000305175781 * e, 53.15625 * e),
                a.closePath(),
                he(a, i[3], i[4], 4 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(123.80000305175781 * e, 53.95625305175781 * e),
                a.bezierCurveTo(121.80000305175781 * e, 77.95625305175781 * e, 121.80000305175781 * e, 74.95625305175781 * e, 121.80000305175781 * e, 78.95625305175781 * e),
                a.bezierCurveTo(115.80000305175781 * e, 84.95625305175781 * e, 115.80000305175781 * e, 84.95625305175781 * e, 109.80000305175781 * e, 90.95625305175781 * e),
                a.bezierCurveTo(102.80000305175781 * e, 93.95625305175781 * e, 105.80000305175781 * e, 86.95625305175781 * e, 110.80000305175781 * e, 76.95625305175781 * e),
                a.bezierCurveTo(107.30000305175781 * e, 65.45625305175781 * e, 103.80000305175781 * e, 53.95625305175781 * e, 103.80000305175781 * e, 53.95625305175781 * e),
                a.closePath(),
                he(a, i[3], i[4], 4 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(18 * e, 56.3671875 * e),
                a.bezierCurveTo(70 * e, 56.8671875 * e, 70 * e, 56.8671875 * e, 122 * e, 57.3671875 * e),
                a.bezierCurveTo(137 * e, 20.3671875 * e, 137 * e, 16.3671875 * e, 126 * e, 22.3671875 * e),
                a.bezierCurveTo(115.5 * e, 34.3671875 * e, 115.5 * e, 34.3671875 * e, 105 * e, 46.3671875 * e),
                a.bezierCurveTo(70.5 * e, 46.3671875 * e, 70.5 * e, 46.3671875 * e, 36 * e, 46.3671875 * e),
                a.bezierCurveTo(4 * e, 14.3671875 * e, 7 * e, 18.3671875 * e, 8 * e, 27.3671875 * e),
                a.bezierCurveTo(12.5 * e, 41.8671875 * e, 12.5 * e, 41.8671875 * e, 17 * e, 56.3671875 * e),
                a.closePath(),
                he(a, i[3], i[4], 4 * e),
                a.save(),
                a.translate(68.30000305175781 * e, 41.45625305175781 * e),
                a.rotate(.76),
                ye(a, -20.5 * e, -20.5 * e, 41 * e, 41 * e, 10 * e),
                a.restore(),
                he(a, void 0, i[5], 4 * e),
                a.save(),
                a.translate(68.80000305175781 * e, 44.45625305175781 * e),
                a.rotate(.76),
                ye(a, -21 * e, -20.5 * e, 42 * e, 41 * e, 10 * e),
                a.restore(),
                he(a, i[3], i[4], 4 * e),
                a.save(),
                a.translate(69.80000305175781 * e, 44.556243896484375 * e),
                a.rotate(.76),
                ye(a, -10 * e, -10 * e, 20 * e, 20 * e, 5 * e),
                a.restore(),
                he(a, i[6], i[7], 4 * e),
                n
            }
            function xi(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                return n.width = 145 * e,
                n.height = 120 * e,
                a.beginPath(),
                a.scale(.6, .6),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.translate(18 * e, -8 * e),
                a.moveTo(101 * e, 72 * e),
                a.bezierCurveTo(144 * e, 69 * e, 149 * e, 58 * e, 162 * e, 49 * e),
                a.bezierCurveTo(174 * e, 31 * e, 173 * e, 38 * e, 172 * e, 45 * e),
                a.bezierCurveTo(168 * e, 73 * e, 158 * e, 75 * e, 152 * e, 78 * e),
                a.bezierCurveTo(106 * e, 89 * e, 107 * e, 91 * e, 107 * e, 94 * e),
                a.bezierCurveTo(107 * e, 100 * e, 107 * e, 107 * e, 107 * e, 107 * e),
                a.bezierCurveTo(99 * e, 112 * e, 98 * e, 110 * e, 93 * e, 107 * e),
                a.bezierCurveTo(94 * e, 107 * e, 93 * e, 107 * e, 93 * e, 107 * e),
                a.bezierCurveTo(93 * e, 100 * e, 93 * e, 100 * e, 92 * e, 94 * e),
                a.bezierCurveTo(92 * e, 89 * e, 90 * e, 90 * e, 73 * e, 86 * e),
                a.bezierCurveTo(45 * e, 81 * e, 40 * e, 77 * e, 35 * e, 68 * e),
                a.bezierCurveTo(23 * e, 36 * e, 28 * e, 34 * e, 36 * e, 46 * e),
                a.bezierCurveTo(45 * e, 58 * e, 83 * e, 72 * e, 98 * e, 72 * e),
                a.closePath(),
                he(a, i[4], i[5], 4 * e),
                a.beginPath(),
                a.scale(1.1, 1.1),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.translate(-9 * e, 4 * e),
                a.moveTo(101 * e, 72 * e),
                a.bezierCurveTo(144 * e, 69 * e, 149 * e, 58 * e, 162 * e, 49 * e),
                a.bezierCurveTo(174 * e, 31 * e, 173 * e, 38 * e, 172 * e, 45 * e),
                a.bezierCurveTo(168 * e, 73 * e, 158 * e, 75 * e, 152 * e, 78 * e),
                a.bezierCurveTo(106 * e, 89 * e, 107 * e, 91 * e, 107 * e, 94 * e),
                a.bezierCurveTo(107 * e, 100 * e, 107 * e, 107 * e, 107 * e, 107 * e),
                a.bezierCurveTo(99 * e, 112 * e, 98 * e, 110 * e, 93 * e, 107 * e),
                a.bezierCurveTo(94 * e, 107 * e, 93 * e, 107 * e, 93 * e, 107 * e),
                a.bezierCurveTo(93 * e, 100 * e, 93 * e, 100 * e, 92 * e, 94 * e),
                a.bezierCurveTo(92 * e, 89 * e, 90 * e, 90 * e, 73 * e, 86 * e),
                a.bezierCurveTo(45 * e, 81 * e, 40 * e, 77 * e, 35 * e, 68 * e),
                a.bezierCurveTo(23 * e, 36 * e, 28 * e, 34 * e, 36 * e, 46 * e),
                a.bezierCurveTo(45 * e, 58 * e, 83 * e, 72 * e, 98 * e, 72 * e),
                a.closePath(),
                he(a, i[4], i[5], 4 * e),
                a.scale(1.1, 1.1),
                a.translate(-9 * e, 4 * e),
                a.save(),
                a.translate(100 * e, 73.06874084472656 * e),
                a.rotate(0),
                ye(a, -61 * e, -38.5 * e, 122 * e, 40 * e, 20 * e),
                a.restore(),
                he(a, i[1], i[2], 4 * e),
                a.save(),
                a.translate(100 * e, 71.36874389648438 * e),
                a.rotate(0),
                ye(a, -60.5 * e, -18 * e, 121 * e, 30 * e, 20 * e),
                a.restore(),
                he(a, i[3], i[2], 4 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(144 * e, 80 * e),
                a.bezierCurveTo(152 * e, 100 * e, 152 * e, 101 * e, 153 * e, 102 * e),
                a.bezierCurveTo(159 * e, 100 * e, 159 * e, 100 * e, 160 * e, 100 * e),
                a.bezierCurveTo(161 * e, 84 * e, 161 * e, 84 * e, 162 * e, 68 * e),
                a.closePath(),
                he(a, i[2]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(57 * e, 75 * e),
                a.bezierCurveTo(48 * e, 101 * e, 53 * e, 89 * e, 48 * e, 102 * e),
                a.bezierCurveTo(44 * e, 100 * e, 44 * e, 100 * e, 39 * e, 97 * e),
                a.bezierCurveTo(39 * e, 83 * e, 39 * e, 83 * e, 39 * e, 69 * e),
                a.closePath(),
                he(a, i[2]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(101 * e, 72 * e),
                a.bezierCurveTo(144 * e, 69 * e, 149 * e, 58 * e, 162 * e, 49 * e),
                a.bezierCurveTo(174 * e, 31 * e, 173 * e, 38 * e, 172 * e, 45 * e),
                a.bezierCurveTo(168 * e, 73 * e, 158 * e, 75 * e, 152 * e, 78 * e),
                a.bezierCurveTo(106 * e, 89 * e, 107 * e, 91 * e, 107 * e, 94 * e),
                a.bezierCurveTo(107 * e, 100 * e, 107 * e, 107 * e, 107 * e, 107 * e),
                a.bezierCurveTo(99 * e, 112 * e, 98 * e, 110 * e, 93 * e, 107 * e),
                a.bezierCurveTo(94 * e, 107 * e, 93 * e, 107 * e, 93 * e, 107 * e),
                a.bezierCurveTo(93 * e, 100 * e, 93 * e, 100 * e, 92 * e, 94 * e),
                a.bezierCurveTo(92 * e, 89 * e, 90 * e, 90 * e, 73 * e, 86 * e),
                a.bezierCurveTo(45 * e, 81 * e, 40 * e, 77 * e, 35 * e, 68 * e),
                a.bezierCurveTo(23 * e, 36 * e, 28 * e, 34 * e, 36 * e, 46 * e),
                a.bezierCurveTo(45 * e, 58 * e, 83 * e, 72 * e, 98 * e, 72 * e),
                a.closePath(),
                he(a, i[4], i[5], 4 * e),
                a.translate(0, 0),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(115.5 * e, 116.07290649414062 * e),
                a.bezierCurveTo(159.5 * e, 99.07290649414062 * e, 159.5 * e, 98.07290649414062 * e, 159.5 * e, 98.07290649414062 * e),
                a.bezierCurveTo(155.5 * e, 116.07290649414062 * e, 159.5 * e, 116.07290649414062 * e, 159.5 * e, 118.07290649414062 * e),
                a.bezierCurveTo(147.5 * e, 130.07290649414062 * e, 136.5 * e, 132.07290649414062 * e, 115.5 * e, 138.07290649414062 * e),
                a.closePath(),
                he(a, i[3], i[2], 4 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(39.5 * e, 96.07290649414062 * e),
                a.bezierCurveTo(85.5 * e, 114.07290649414062 * e, 62.5 * e, 105.57290649414062 * e, 85.5 * e, 115.07290649414062 * e),
                a.bezierCurveTo(85.5 * e, 125.57290649414062 * e, 85.5 * e, 125.57290649414062 * e, 85.5 * e, 136.07290649414062 * e),
                a.bezierCurveTo(51.5 * e, 129.07290649414062 * e, 51.5 * e, 125.07290649414062 * e, 41.5 * e, 118.07290649414062 * e),
                a.bezierCurveTo(44.5 * e, 106.07290649414062 * e, 42.5 * e, 103.07290649414062 * e, 40.5 * e, 96.07290649414062 * e),
                a.closePath(),
                he(a, i[3], i[2], 4 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(86 * e, 80 * e),
                a.bezierCurveTo(97 * e, 88 * e, 106 * e, 84 * e, 112 * e, 80 * e),
                a.bezierCurveTo(112 * e, 62 * e, 106 * e, 59 * e, 99 * e, 54 * e),
                a.bezierCurveTo(86 * e, 62 * e, 86 * e, 73 * e, 86 * e, 80 * e),
                a.closePath(),
                he(a, i[3], i[2], 4 * e),
                a.scale(.5, .5),
                a.translate(100 * e, 71 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(86 * e, 80 * e),
                a.bezierCurveTo(97 * e, 88 * e, 106 * e, 84 * e, 112 * e, 80 * e),
                a.bezierCurveTo(112 * e, 62 * e, 106 * e, 59 * e, 99 * e, 54 * e),
                a.bezierCurveTo(86 * e, 62 * e, 86 * e, 73 * e, 86 * e, 80 * e),
                a.closePath(),
                he(a, i[6], i[2], 4 * e),
                n
            }
            function Vi(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                return n.width = 400 * e,
                n.height = 400 * e,
                a.save(),
                a.translate(204 * e, 195.0833282470703 * e),
                a.rotate(10.16),
                ye(a, -97.5 * e, -134.5 * e, 195 * e, 269 * e, 10 * e),
                a.restore(),
                he(a, i[0], i[1], 8 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(58.5 * e, 226.5833282470703 * e),
                a.bezierCurveTo(120.5 * e, 281.5833282470703 * e, 120.5 * e, 281.5833282470703 * e, 182.5 * e, 336.5833282470703 * e),
                a.bezierCurveTo(263 * e, 248.5833282470703 * e, 263 * e, 248.5833282470703 * e, 343.5 * e, 160.5833282470703 * e),
                a.bezierCurveTo(280.5 * e, 104.58332824707031 * e, 280.5 * e, 104.58332824707031 * e, 217.5 * e, 48.58332824707031 * e),
                a.closePath(),
                he(a, i[2], i[3], 4 * e),
                a.save(),
                a.translate(197 * e, 169.0833282470703 * e),
                a.rotate(10.16),
                ye(a, -93.5 * e, -126.5 * e, 187 * e, 253 * e, 10 * e),
                a.restore(),
                he(a, i[4], i[1], 8 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(226.5 * e, 24.583328247070312 * e),
                a.bezierCurveTo(58.5 * e, 207.5833282470703 * e, 143 * e, 116.58332824707031 * e, 59.5 * e, 208.5833282470703 * e),
                a.closePath(),
                he(a, void 0, i[1], 8 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(46.133331298828125 * e, 202.64999389648438 * e),
                a.bezierCurveTo(46.133331298828125 * e, 215.64999389648438 * e, 46.133331298828125 * e, 215.64999389648438 * e, 46.133331298828125 * e, 228.64999389648438 * e),
                a.closePath(),
                he(a, i[4], i[1], 8 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(55.133331298828125 * e, 211.64999389648438 * e),
                a.bezierCurveTo(55.133331298828125 * e, 225.14999389648438 * e, 55.133331298828125 * e, 225.14999389648438 * e, 55.133331298828125 * e, 238.64999389648438 * e),
                a.bezierCurveTo(50.133331298828125 * e, 235.64999389648438 * e, 50.133331298828125 * e, 235.64999389648438 * e, 45.133331298828125 * e, 232.64999389648438 * e),
                a.bezierCurveTo(45.133331298828125 * e, 216.64999389648438 * e, 45.133331298828125 * e, 216.64999389648438 * e, 45.133331298828125 * e, 200.64999389648438 * e),
                a.closePath(),
                he(a, i[4], i[1], 8 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(46.133331298828125 * e, 198.39999389648438 * e),
                a.bezierCurveTo(46.133331298828125 * e, 199.89999389648438 * e, 46.133331298828125 * e, 199.89999389648438 * e, 46.133331298828125 * e, 201.39999389648438 * e),
                a.closePath(),
                he(a, i[4], i[1], 8 * e),
                a.save(),
                a.translate(249.63333129882812 * e, 120.89999389648438 * e),
                a.rotate(7.04),
                ye(a, -58.5 * e, -32 * e, 117 * e, 64 * e, 10 * e),
                a.restore(),
                he(a, i[5]),
                n
            }
            function Ui(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                return n.width = 170 * e,
                n.height = 170 * e,
                a.globalAlpha = t ? .5 : 1,
                a.translate(-10 * e, 10 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(72.5 * e, 4.109375 * e),
                a.bezierCurveTo(117 * e, 9.609375 * e, 117 * e, 9.609375 * e, 161.5 * e, 15.109375 * e),
                a.bezierCurveTo(134.5 * e, 106.109375 * e, 110.5 * e, 130.109375 * e, 63.5 * e, 145.109375 * e),
                a.bezierCurveTo(33.5 * e, 120.609375 * e, 33.5 * e, 120.609375 * e, 3.5 * e, 96.109375 * e),
                a.bezierCurveTo(82.5 * e, 75.109375 * e, 69.5 * e, 29.109375 * e, 71.5 * e, 6.109375 * e),
                a.closePath(),
                he(a, i[0]),
                a.globalAlpha = 1,
                a.translate(10 * e, -10 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(72.5 * e, 4.109375 * e),
                a.bezierCurveTo(117 * e, 9.609375 * e, 117 * e, 9.609375 * e, 161.5 * e, 15.109375 * e),
                a.bezierCurveTo(134.5 * e, 106.109375 * e, 110.5 * e, 130.109375 * e, 63.5 * e, 145.109375 * e),
                a.bezierCurveTo(33.5 * e, 120.609375 * e, 33.5 * e, 120.609375 * e, 3.5 * e, 96.109375 * e),
                a.bezierCurveTo(82.5 * e, 75.109375 * e, 69.5 * e, 29.109375 * e, 71.5 * e, 6.109375 * e),
                a.closePath(),
                he(a, i[1], i[2], 10 * e),
                n
            }
            function Xi(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                return n.width = 47 * e,
                n.height = 60 * e,
                Re(a, 23.5 * e, 20.734375 * e, 15.132745950421556 * e),
                he(a, void 0, i[2], 4 * e),
                Re(a, 23.5 * e, 20.734375 * e, 18.601075237738275 * e),
                he(a, void 0, i[1], 4 * e),
                Re(a, 23.5 * e, 20.734375 * e, 11.40175425099138 * e),
                he(a, void 0, i[1], 4 * e),
                a.save(),
                a.translate(23 * e, 38.734375 * e),
                a.rotate(0),
                ye(a, -21.5 * e, -19 * e, 43 * e, 38 * e, 10 * e),
                a.restore(),
                he(a, i[2], i[1], 4 * e),
                a.save(),
                a.translate(23.5 * e, 43.734375 * e),
                a.rotate(.5235987755982988),
                me(a, 3, 8.06225774829855 * e, 0 * e),
                a.restore(),
                he(a, i[3]),
                Re(a, 23.5 * e, 35.734375 * e, 7.0710678118654755 * e),
                he(a, i[3]),
                n
            }
            function qi(e, t, i, n) {
                var a = window.document.createElement("canvas")
                  , I = a.getContext("2d");
                return a.width = 501 * e,
                a.height = 564 * e,
                I.scale(.5, .5),
                I.translate(240 * e, 255 * e),
                I.rotate(n),
                I.globalAlpha = t ? .5 : .2,
                Re(I, 174 * e, 87.984375 * e, 20.8806130178211 * e),
                he(I, i[0], i[0], 8 * e),
                Re(I, 174 * e, 87.984375 * e, 12.165525060596439 * e),
                he(I, i[0], i[0], 8 * e),
                Re(I, 174 * e, 87.484375 * e, 6 * e),
                he(I, i[0]),
                Re(I, 30 * e, 87.984375 * e, 20.8806130178211 * e),
                he(I, i[0], i[0], 4 * e),
                Re(I, 30 * e, 87.984375 * e, 12.165525060596439 * e),
                he(I, i[0], i[0], 4 * e),
                Re(I, 30 * e, 87.484375 * e, 6 * e),
                he(I, i[0]),
                Re(I, 100 * e, 30 * e, 20.8806130178211 * e),
                he(I, i[0], i[0], 4 * e),
                Re(I, 100 * e, 30 * e, 12.165525060596439 * e),
                he(I, i[0], i[0], 4 * e),
                Re(I, 100 * e, 30 * e, 6 * e),
                he(I, i[0]),
                Re(I, 100 * e, 130 * e, 20.8806130178211 * e),
                he(I, i[0], i[0], 4 * e),
                Re(I, 100 * e, 130 * e, 12.165525060596439 * e),
                he(I, i[0], i[0], 4 * e),
                Re(I, 100 * e, 130 * e, 6 * e),
                he(I, i[0]),
                I.save(),
                I.translate(102 * e, 81.984375 * e),
                I.rotate(0),
                ye(I, -74 * e, -57 * e, 148 * e, 114 * e, 23 * e),
                I.restore(),
                he(I, i[0], i[0], 4 * e),
                I.save(),
                I.translate(101 * e, 64.984375 * e),
                I.rotate(0),
                ye(I, -33 * e, -10 * e, 66 * e, 20 * e, 15 * e),
                I.restore(),
                he(I, i[0], i[0], 4 * e),
                I.save(),
                I.translate(102 * e, 63.484375 * e),
                I.rotate(0),
                ye(I, -9 * e, -27.5 * e, 18 * e, 55 * e, 15 * e),
                I.restore(),
                I.translate(5, -5),
                I.globalAlpha = 1,
                Re(I, 174 * e, 87.984375 * e, 20.8806130178211 * e),
                he(I, i[1], i[3], 8 * e),
                Re(I, 174 * e, 87.984375 * e, 12.165525060596439 * e),
                he(I, i[1], i[3], 8 * e),
                Re(I, 174 * e, 87.484375 * e, 6 * e),
                he(I, i[2]),
                Re(I, 30 * e, 87.984375 * e, 20.8806130178211 * e),
                he(I, i[1], i[3], 8 * e),
                Re(I, 30 * e, 87.984375 * e, 12.165525060596439 * e),
                he(I, i[1], i[3], 8 * e),
                Re(I, 30 * e, 87.484375 * e, 6 * e),
                he(I, i[2]),
                Re(I, 102 * e, 30 * e, 20.8806130178211 * e),
                he(I, i[1], i[3], 8 * e),
                Re(I, 102 * e, 30 * e, 12.165525060596439 * e),
                he(I, i[1], i[3], 8 * e),
                Re(I, 102 * e, 30 * e, 6 * e),
                he(I, i[1]),
                Re(I, 102 * e, 130 * e, 20.8806130178211 * e),
                he(I, i[1], i[3], 8 * e),
                Re(I, 102 * e, 130 * e, 12.165525060596439 * e),
                he(I, i[1], i[3], 8 * e),
                Re(I, 102 * e, 130 * e, 6 * e),
                he(I, i[1]),
                I.save(),
                I.translate(102 * e, 81.984375 * e),
                ye(I, -74 * e, -57 * e, 148 * e, 114 * e, 23 * e),
                I.restore(),
                he(I, i[1], i[3], 8 * e),
                I.save(),
                I.translate(101 * e, 64.984375 * e),
                ye(I, -33 * e, -10 * e, 66 * e, 20 * e, 15 * e),
                I.restore(),
                he(I, i[2], i[1], 8 * e),
                I.save(),
                I.translate(102 * e, 63.484375 * e),
                ye(I, -9 * e, -27.5 * e, 18 * e, 55 * e, 15 * e),
                I.restore(),
                he(I, i[2], i[1], 8 * e),
                Re(I, 135 * e, 107.36605834960938 * e, 21.095023109728988 * e),
                he(I, i[1], i[3], 8 * e),
                Re(I, 135 * e, 107.36605834960938 * e, 13 * e),
                he(I, i[1], i[3], 8 * e),
                Re(I, 135 * e, 107.36605834960938 * e, 6.082762530298219 * e),
                he(I, i[2]),
                Re(I, 70 * e, 107.36605834960938 * e, 21.095023109728988 * e),
                he(I, i[1], i[3], 8 * e),
                Re(I, 70 * e, 107.36605834960938 * e, 13 * e),
                he(I, i[1], i[3], 8 * e),
                Re(I, 70 * e, 107.36605834960938 * e, 6.082762530298219 * e),
                he(I, i[2]),
                a
            }
            function zi(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                return n.width = 95 * e,
                n.height = 85 * e,
                0 == i ? (a.translate(7 * e, 15 * e),
                a.scale(.9, .9),
                a.save(),
                ye(a, 0 * e, 5 * e, 90 * e, 60 * e, 10),
                he(a, t[0]),
                a.globalCompositeOperation = "destination-out",
                Re(a, 25 * e, 40 * e, 10 * e),
                a.fill(),
                Re(a, 65 * e, 40 * e, 10 * e),
                a.fill(),
                a.restore(),
                a.save(),
                ye(a, 0, 0, 90 * e, 60 * e, 10 * e),
                he(a, t[1]),
                a.globalCompositeOperation = "destination-out",
                Re(a, 25 * e, 40 * e, 10 * e),
                a.fill(),
                Re(a, 65 * e, 40 * e, 10 * e),
                a.fill(),
                a.restore()) : 1 == i && (a.scale(.8, .8),
                a.translate(15 * e, 33 * e),
                a.save(),
                a.scale(.56, .56),
                a.translate(-39 * e, -60 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(32.5 * e, 50.642852783203125 * e),
                a.bezierCurveTo(83 * e, 69.64285278320312 * e, 83 * e, 69.64285278320312 * e, 133.5 * e, 88.64285278320312 * e),
                a.bezierCurveTo(93 * e, 92.64285278320312 * e, 93 * e, 92.64285278320312 * e, 52.5 * e, 96.64285278320312 * e),
                a.bezierCurveTo(30.5 * e, 100.64285278320312 * e, 36.5 * e, 94.64285278320312 * e, 32.5 * e, 84.64285278320312 * e),
                a.bezierCurveTo(21.5 * e, 45.642852783203125 * e, 24.5 * e, 48.642852783203125 * e, 31.5 * e, 50.642852783203125 * e),
                a.closePath(),
                he(a, t[1]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(116.5 * e, 85.64285278320312 * e),
                a.bezierCurveTo(160.5 * e, 67.14285278320312 * e, 160.5 * e, 67.14285278320312 * e, 204.5 * e, 48.642852783203125 * e),
                a.bezierCurveTo(220.5 * e, 42.642852783203125 * e, 208.5 * e, 68.64285278320312 * e, 205.5 * e, 85.64285278320312 * e),
                a.bezierCurveTo(202.5 * e, 98.64285278320312 * e, 199.5 * e, 98.64285278320312 * e, 188.5 * e, 100.64285278320312 * e),
                a.closePath(),
                he(a, t[1]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(166.5 * e, 68.64285278320312 * e),
                a.bezierCurveTo(147.5 * e, 72.64285278320312 * e, 145.5 * e, 73.64285278320312 * e, 142.5 * e, 62.642852783203125 * e),
                a.bezierCurveTo(121.5 * e, 12.642852783203125 * e, 122.5 * e, 5.642852783203125 * e, 117.5 * e, 15.642852783203125 * e),
                a.bezierCurveTo(105.5 * e, 40.642852783203125 * e, 105.5 * e, 40.642852783203125 * e, 93.5 * e, 65.64285278320312 * e),
                a.bezierCurveTo(89.5 * e, 74.64285278320312 * e, 84.5 * e, 72.64285278320312 * e, 73.5 * e, 74.64285278320312 * e),
                a.bezierCurveTo(98 * e, 87.64285278320312 * e, 98 * e, 87.64285278320312 * e, 122.5 * e, 100.64285278320312 * e),
                a.closePath(),
                he(a, t[1]),
                a.restore(),
                a.save(),
                ye(a, 0, 15 * e, 90 * e, 50 * e, 10 * e),
                he(a, t[0]),
                ye(a, 0, 10 * e, 90 * e, 50 * e, 10 * e),
                he(a, t[1]),
                a.globalCompositeOperation = "destination-out",
                Re(a, 25 * e, 40 * e, 10 * e),
                a.fill(),
                Re(a, 65 * e, 40 * e, 10 * e),
                a.fill(),
                a.restore()),
                n
            }
            function ji(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                if (n.width = 120 * e,
                n.height = 100 * e,
                ye(a, 10 * e, 10 * e, 95 * e, 80 * e, 10 * e),
                he(a, t[2]),
                ye(a, 10 * e, 5 * e, 95 * e, 80 * e, 10 * e),
                he(a, t[3], t[4], 4 * e),
                0 == i) {
                    var I = zi(.75 * e, t, 0);
                    a.drawImage(I, 22 * e, 18 * e)
                } else if (1 == i) {
                    I = zi(.75 * e, t, 1);
                    a.drawImage(I, 22 * e, 18 * e)
                }
                return n
            }
            render_minimap = function() {
                for (var e = 0; e < 2; e++) {
                    Ie[SPRITE.MINIMAP_CTX][e].clearRect(0, 0, 193, 193),
                    Ie[SPRITE.MINIMAP_CTX][e].drawImage(oe.MAP[e], 0, 0, 193, 193),
                    Ie[SPRITE.BIGMAP_CTX][e].clearRect(0, 0, 600, 600),
                    Ie[SPRITE.BIGMAP_CTX][e].drawImage(oe.MAP[e], 0, 0, 600, 600);
                    for (var t = world.biomes.length - 1; t >= 0; t--) {
                        var i = world.biomes[t]
                          , n = 193 * i.x1 / (100 * world.nw)
                          , a = 193 * i.y1 / (100 * world.nh)
                          , I = 193 * i.w / (100 * world.nw)
                          , T = 193 * i.h / (100 * world.nh)
                          , o = 600 * i.x1 / (100 * world.nw)
                          , r = 600 * i.y1 / (100 * world.nh)
                          , d = 600 * i.w / (100 * world.nw)
                          , s = 600 * i.h / (100 * world.nh);
                        i.t === world.BIOME_FOREST && (Ie[SPRITE.MINIMAP_CTX][e].drawImage(oe.FOREST[e], n, a, I, T),
                        Ie[SPRITE.BIGMAP_CTX][e].drawImage(oe.FOREST[e], o, r, d, s)),
                        i.t === world.BIOME_WINTER && (Ie[SPRITE.MINIMAP_CTX][e].drawImage(oe.WINTER[e], n, a, I, T),
                        Ie[SPRITE.BIGMAP_CTX][e].drawImage(oe.WINTER[e], o, r, d, s)),
                        i.t === world.BIOME_LAVA && (Ie[SPRITE.MINIMAP_CTX][e].drawImage(oe.LAVA[e], n, a, I, T),
                        Ie[SPRITE.BIGMAP_CTX][e].drawImage(oe.LAVA[e], o, r, d, s)),
                        i.t === world.BIOME_DRAGON && (Ie[SPRITE.MINIMAP_CTX][e].drawImage(oe.CAVE[e], n, a, I, T),
                        Ie[SPRITE.BIGMAP_CTX][e].drawImage(oe.CAVE[e], o, r, d, s)),
                        i.t === world.BIOME_DESERT && (Ie[SPRITE.MINIMAP_CTX][e].drawImage(oe.DESERT[e], n, a, I, T),
                        Ie[SPRITE.BIGMAP_CTX][e].drawImage(oe.DESERT[e], o, r, d, s))
                    }
                }
            }
            ,
            render_cosmetics = function() {
                Te = {
                    SKIN: [{
                        id: 0,
                        day: P.PLAYER0D,
                        night: P.PLAYER0N,
                        dayHand: P.HAND0D,
                        nightHand: P.HAND0N,
                        rarity: RARITY.FREE,
                        author: "Starve.io",
                        name: "Starver"
                    }, {
                        id: 3,
                        day: P.PLAYER3D,
                        night: P.PLAYER3N,
                        dayHand: P.HAND3D,
                        nightHand: P.HAND3N,
                        rarity: RARITY.FREE,
                        author: "Starve.io",
                        name: "Angry"
                    }, {
                        id: 2,
                        day: P.PLAYER2D,
                        night: P.PLAYER2N,
                        dayHand: P.HAND2D,
                        nightHand: P.HAND2N,
                        rarity: RARITY.FREE,
                        author: "Starve.io",
                        name: "Sad"
                    }, {
                        id: 9,
                        day: P.PLAYER9D,
                        night: P.PLAYER9N,
                        dayHand: P.HAND9D,
                        nightHand: P.HAND9N,
                        rarity: RARITY.FREE,
                        author: "Starve.io",
                        name: "Happy 1"
                    }, {
                        id: 1,
                        day: P.PLAYER1D,
                        night: P.PLAYER1N,
                        dayHand: P.HAND1D,
                        nightHand: P.HAND1N,
                        rarity: RARITY.WOOD,
                        author: "Starve.io",
                        name: "What?"
                    }, {
                        id: 4,
                        day: P.PLAYER4D,
                        night: P.PLAYER4N,
                        dayHand: P.HAND4D,
                        nightHand: P.HAND4N,
                        rarity: RARITY.WOOD,
                        author: "Starve.io",
                        name: "Suspicious"
                    }, {
                        id: 5,
                        day: P.PLAYER5D,
                        night: P.PLAYER5N,
                        dayHand: P.HAND5D,
                        nightHand: P.HAND5N,
                        rarity: RARITY.WOOD,
                        author: "Starve.io",
                        name: "Scar"
                    }, {
                        id: 6,
                        day: P.PLAYER6D,
                        night: P.PLAYER6N,
                        dayHand: P.HAND6D,
                        nightHand: P.HAND6N,
                        rarity: RARITY.WOOD,
                        author: "Starve.io",
                        name: "In Trouble"
                    }, {
                        id: 7,
                        day: P.PLAYER7D,
                        night: P.PLAYER7N,
                        dayHand: P.HAND7D,
                        nightHand: P.HAND7N,
                        rarity: RARITY.WOOD,
                        author: "Starve.io",
                        name: "Cute"
                    }, {
                        id: 8,
                        day: P.PLAYER8D,
                        night: P.PLAYER8N,
                        dayHand: P.HAND8D,
                        nightHand: P.HAND8N,
                        rarity: RARITY.WOOD,
                        author: "Starve.io",
                        name: "Bored 1"
                    }, {
                        id: 10,
                        day: P.PLAYER10D,
                        night: P.PLAYER10N,
                        dayHand: P.HAND10D,
                        nightHand: P.HAND10N,
                        rarity: RARITY.WOOD,
                        author: "Starve.io",
                        name: "Happy 2"
                    }, {
                        id: 11,
                        day: P.PLAYER11D,
                        night: P.PLAYER11N,
                        dayHand: P.HAND11D,
                        nightHand: P.HAND11N,
                        rarity: RARITY.WOOD,
                        author: "Starve.io",
                        name: "Crazy"
                    }, {
                        id: 12,
                        day: P.PLAYER12D,
                        night: P.PLAYER12N,
                        dayHand: P.HAND12D,
                        nightHand: P.HAND12N,
                        rarity: RARITY.WOOD,
                        author: "Starve.io",
                        name: "Happy 3"
                    }, {
                        id: 13,
                        day: P.PLAYER13D,
                        night: P.PLAYER13N,
                        dayHand: P.HAND13D,
                        nightHand: P.HAND13N,
                        rarity: RARITY.WOOD,
                        author: "Starve.io",
                        name: "Very Cute"
                    }, {
                        id: 14,
                        day: P.PLAYER14D,
                        night: P.PLAYER14N,
                        dayHand: P.HAND14D,
                        nightHand: P.HAND14N,
                        rarity: RARITY.WOOD,
                        author: "Starve.io",
                        name: "Curious"
                    }, {
                        id: 15,
                        day: P.PLAYER15D,
                        night: P.PLAYER15N,
                        dayHand: P.HAND15D,
                        nightHand: P.HAND15N,
                        rarity: RARITY.WOOD,
                        author: "Starve.io",
                        name: "Bored 2"
                    }, {
                        id: 16,
                        day: P.PLAYER16D,
                        night: P.PLAYER16N,
                        dayHand: P.HAND16D,
                        nightHand: P.HAND16N,
                        rarity: RARITY.WOOD,
                        author: "Starve.io",
                        name: "Happy 4"
                    }, {
                        id: 17,
                        day: P.PLAYER17D,
                        night: P.PLAYER17N,
                        dayHand: P.HAND17D,
                        nightHand: P.HAND17N,
                        rarity: RARITY.WOOD,
                        author: "Starve.io",
                        name: "Scar 2"
                    }, {
                        id: 18,
                        day: P.PLAYER18D,
                        night: P.PLAYER18N,
                        dayHand: P.HAND18D,
                        nightHand: P.HAND18N,
                        rarity: RARITY.WOOD,
                        author: "Starve.io",
                        name: "Sick"
                    }, {
                        id: 19,
                        day: P.PLAYER19D,
                        night: P.PLAYER19N,
                        dayHand: P.HAND19D,
                        nightHand: P.HAND19N,
                        rarity: RARITY.WOOD,
                        author: "Starve.io",
                        name: "Somnambule"
                    }, {
                        id: 24,
                        day: P.SKIN7D,
                        night: P.SKIN7N,
                        dayHand: P.HAND_SKIN7D,
                        nightHand: P.HAND_SKIN7N,
                        rarity: RARITY.WOOD,
                        author: "Pixelbitie",
                        name: "Feel Bad"
                    }, {
                        id: 23,
                        day: P.SKIN0D,
                        night: P.SKIN0N,
                        dayHand: P.HAND_SKIN0D,
                        nightHand: P.HAND_SKIN0N,
                        rarity: RARITY.WOOD,
                        author: "Pixelbitie",
                        name: "Mmmh."
                    }, {
                        id: 103,
                        day: P.SKIN78D,
                        night: P.SKIN78N,
                        dayHand: P.HAND_SKIN78D,
                        nightHand: P.HAND_SKIN78N,
                        rarity: RARITY.WOOD,
                        author: "pizza wa",
                        name: "Panic"
                    }, {
                        id: 105,
                        day: P.SKIN80D,
                        night: P.SKIN80N,
                        dayHand: P.HAND_SKIN80D,
                        nightHand: P.HAND_SKIN80N,
                        rarity: RARITY.WOOD,
                        author: "pizza wa",
                        name: "Hypnotic"
                    }, {
                        id: 106,
                        day: P.SKIN81D,
                        night: P.SKIN81N,
                        dayHand: P.HAND_SKIN81D,
                        nightHand: P.HAND_SKIN81N,
                        rarity: RARITY.WOOD,
                        author: "pizza wa",
                        name: "Stars in the eyes"
                    }, {
                        id: 104,
                        day: P.SKIN79D,
                        night: P.SKIN79N,
                        dayHand: P.HAND_SKIN79D,
                        nightHand: P.HAND_SKIN79N,
                        rarity: RARITY.STONE,
                        author: "pizza wa",
                        name: "Scared at night"
                    }, {
                        id: 20,
                        day: P.SKIN_VAMPIRED,
                        night: P.SKIN_VAMPIREN,
                        dayHand: P.HAND_VAMPIRED,
                        nightHand: P.HAND_VAMPIREN,
                        rarity: RARITY.STONE,
                        author: "Starve.io",
                        name: "Vampire"
                    }, {
                        id: 21,
                        day: P.SKIN_ZOMBIED,
                        night: P.SKIN_ZOMBIEN,
                        dayHand: P.HAND_ZOMBIED,
                        nightHand: P.HAND_ZOMBIEN,
                        rarity: RARITY.STONE,
                        author: "Starve.io",
                        name: "Zombie"
                    }, {
                        id: 22,
                        day: P.SKIN_DEVASTD,
                        night: P.SKIN_DEVASTN,
                        dayHand: P.HAND_DEVASTD,
                        nightHand: P.HAND_DEVASTN,
                        rarity: RARITY.STONE,
                        author: "Pixelbitie",
                        name: "Devaster"
                    }, {
                        id: 116,
                        day: P.SKIN91D,
                        night: P.SKIN91N,
                        dayHand: P.HAND_SKIN91D,
                        nightHand: P.HAND_SKIN91N,
                        rarity: RARITY.STONE,
                        author: "Fukss",
                        name: "Dead Devaster"
                    }, {
                        id: 27,
                        day: P.SKIN19D,
                        night: P.SKIN19N,
                        dayHand: P.HAND_SKIN19D,
                        nightHand: P.HAND_SKIN19N,
                        rarity: RARITY.STONE,
                        author: "Winter",
                        name: "Cactus"
                    }, {
                        id: 28,
                        day: P.SKIN20D,
                        night: P.SKIN20N,
                        dayHand: P.HAND_SKIN20D,
                        nightHand: P.HAND_SKIN20N,
                        rarity: RARITY.STONE,
                        author: "pizza wa",
                        name: "Bee"
                    }, {
                        id: 49,
                        day: P.SKIN24D,
                        night: P.SKIN24N,
                        dayHand: P.HAND_SKIN24D,
                        nightHand: P.HAND_SKIN24N,
                        rarity: RARITY.STONE,
                        author: "Taco4Life",
                        name: "Camo Skin"
                    }, {
                        id: 58,
                        day: P.SKIN34D,
                        night: P.SKIN34N,
                        dayHand: P.HAND_SKIN34D,
                        nightHand: P.HAND_SKIN34N,
                        rarity: RARITY.STONE,
                        author: "Starve.io",
                        name: "Blue Limax Skin"
                    }, {
                        id: 59,
                        day: P.SKIN33D,
                        night: P.SKIN33N,
                        dayHand: P.HAND_SKIN33D,
                        nightHand: P.HAND_SKIN33N,
                        rarity: RARITY.STONE,
                        author: "Starve.io",
                        name: "Red Limax Skin"
                    }, {
                        id: 94,
                        day: P.SKIN69D,
                        night: P.SKIN69N,
                        dayHand: P.HAND_SKIN69D,
                        nightHand: P.HAND_SKIN69N,
                        rarity: RARITY.STONE,
                        author: "Taco4Life",
                        name: "Mr. Pumpkin"
                    }, {
                        id: 109,
                        day: P.SKIN84D,
                        night: P.SKIN84N,
                        dayHand: P.HAND_SKIN84D,
                        nightHand: P.HAND_SKIN84N,
                        rarity: RARITY.STONE,
                        author: "pizza wa",
                        name: "Wood"
                    }, {
                        id: 114,
                        day: P.SKIN89D,
                        night: P.SKIN89N,
                        dayHand: P.HAND_SKIN89D,
                        nightHand: P.HAND_SKIN89N,
                        rarity: RARITY.STONE,
                        author: "pizza wa",
                        name: "Zebra"
                    }, {
                        id: 120,
                        day: P.SKIN95D,
                        night: P.SKIN95N,
                        dayHand: P.HAND_SKIN95D,
                        nightHand: P.HAND_SKIN95N,
                        rarity: RARITY.STONE,
                        author: "CrysTal",
                        name: "Tiger"
                    }, {
                        id: 134,
                        day: P.SKIN109D,
                        night: P.SKIN109N,
                        dayHand: P.HAND_SKIN109D,
                        nightHand: P.HAND_SKIN109N,
                        rarity: RARITY.STONE,
                        author: "Franchestcreator",
                        name: "Day or Night"
                    }, {
                        id: 135,
                        day: P.SKIN110D,
                        night: P.SKIN110N,
                        dayHand: P.HAND_SKIN110D,
                        nightHand: P.HAND_SKIN110N,
                        rarity: RARITY.STONE,
                        author: "Poinet",
                        name: "Square Starver"
                    }, {
                        id: 136,
                        day: P.SKIN111D,
                        night: P.SKIN111N,
                        dayHand: P.HAND_SKIN111D,
                        nightHand: P.HAND_SKIN111N,
                        rarity: RARITY.STONE,
                        author: "Starve.io",
                        name: "Voodoo Doll"
                    }, {
                        id: 137,
                        day: P.SKIN112D,
                        night: P.SKIN112N,
                        dayHand: P.HAND_SKIN112D,
                        nightHand: P.HAND_SKIN112N,
                        rarity: RARITY.STONE,
                        author: "Starve.io",
                        name: "Frankenstein"
                    }, {
                        id: 138,
                        day: P.SKIN114D,
                        night: P.SKIN114N,
                        dayHand: P.HAND_SKIN114D,
                        nightHand: P.HAND_SKIN114N,
                        rarity: RARITY.STONE,
                        author: "Starve.io",
                        name: "Old Mummy"
                    }, {
                        id: 139,
                        day: P.SKIN115D,
                        night: P.SKIN115N,
                        dayHand: P.HAND_SKIN115D,
                        nightHand: P.HAND_SKIN115N,
                        rarity: RARITY.STONE,
                        author: "Starve.io",
                        name: "Werewolf"
                    }, {
                        id: 140,
                        day: P.SKIN116D,
                        night: P.SKIN116N,
                        dayHand: P.HAND_SKIN116D,
                        nightHand: P.HAND_SKIN116N,
                        rarity: RARITY.STONE,
                        author: "Starve.io",
                        name: "Old Cthulhu"
                    }, {
                        id: 141,
                        day: P.SKIN117D,
                        night: P.SKIN117N,
                        dayHand: P.HAND_SKIN117D,
                        nightHand: P.HAND_SKIN117N,
                        rarity: RARITY.STONE,
                        author: "Starve.io",
                        name: "Sea Man"
                    }, {
                        id: 142,
                        day: P.SKIN118D,
                        night: P.SKIN118N,
                        dayHand: P.HAND_SKIN118D,
                        nightHand: P.HAND_SKIN118N,
                        rarity: RARITY.STONE,
                        author: "Starve.io",
                        name: "Old Pumpkin"
                    }, {
                        id: 148,
                        day: P.SKIN124D,
                        night: P.SKIN124N,
                        dayHand: P.HAND_SKIN124D,
                        nightHand: P.HAND_SKIN124N,
                        rarity: RARITY.STONE,
                        author: "Starve.io",
                        name: "Old Snowman"
                    }, {
                        id: 149,
                        day: P.SKIN125D,
                        night: P.SKIN125N,
                        dayHand: P.HAND_SKIN125D,
                        nightHand: P.HAND_SKIN125N,
                        rarity: RARITY.STONE,
                        author: "Starve.io",
                        name: "Old Christmas Tree Man"
                    }, {
                        id: 150,
                        day: P.SKIN126D,
                        night: P.SKIN126N,
                        dayHand: P.HAND_SKIN126D,
                        nightHand: P.HAND_SKIN126N,
                        rarity: RARITY.STONE,
                        author: "Starve.io",
                        name: "Old Mrs Bell"
                    }, {
                        id: 151,
                        day: P.SKIN127D,
                        night: P.SKIN127N,
                        dayHand: P.HAND_SKIN127D,
                        nightHand: P.HAND_SKIN127N,
                        rarity: RARITY.STONE,
                        author: "Starve.io",
                        name: "Old Elfy"
                    }, {
                        id: 152,
                        day: P.SKIN128D,
                        night: P.SKIN128N,
                        dayHand: P.HAND_SKIN128D,
                        nightHand: P.HAND_SKIN128N,
                        rarity: RARITY.STONE,
                        author: "Starve.io",
                        name: "Old Mr Present"
                    }, {
                        id: 153,
                        day: P.SKIN129D,
                        night: P.SKIN129N,
                        dayHand: P.HAND_SKIN129D,
                        nightHand: P.HAND_SKIN129N,
                        rarity: RARITY.STONE,
                        author: "Starve.io",
                        name: "My Dear Old Deer"
                    }, {
                        id: 154,
                        day: P.SKIN130D,
                        night: P.SKIN130N,
                        dayHand: P.HAND_SKIN130D,
                        nightHand: P.HAND_SKIN130N,
                        rarity: RARITY.STONE,
                        author: "Starve.io",
                        name: "Mr Angel"
                    }, {
                        id: 155,
                        day: P.SKIN131D,
                        night: P.SKIN131N,
                        dayHand: P.HAND_SKIN131D,
                        nightHand: P.HAND_SKIN131N,
                        rarity: RARITY.STONE,
                        author: "Starve.io",
                        name: "Mr Ice Cube"
                    }, {
                        id: 156,
                        day: P.SKIN132D,
                        night: P.SKIN132N,
                        dayHand: P.HAND_SKIN132D,
                        nightHand: P.HAND_SKIN132N,
                        rarity: RARITY.STONE,
                        author: "Starve.io",
                        name: "Mr Snowman"
                    }, {
                        id: 159,
                        day: P.SKIN135D,
                        night: P.SKIN135N,
                        dayHand: P.HAND_SKIN135D,
                        nightHand: P.HAND_SKIN135N,
                        rarity: RARITY.STONE,
                        author: "CrysTal",
                        name: "Crystal Sky Skin"
                    }, {
                        id: 167,
                        day: P.SKIN143D,
                        night: P.SKIN143N,
                        dayHand: P.HAND_SKIN143D,
                        nightHand: P.HAND_SKIN143N,
                        rarity: RARITY.STONE,
                        author: "Franchestcreator",
                        name: "Radioactive Starver"
                    }, {
                        id: 169,
                        day: P.SKIN146D,
                        night: P.SKIN146N,
                        dayHand: P.HAND_SKIN146D,
                        nightHand: P.HAND_SKIN146N,
                        rarity: RARITY.STONE,
                        author: "TheScaryBlaze",
                        name: "Eaten Cookie"
                    }, {
                        id: 170,
                        day: P.SKIN147D,
                        night: P.SKIN147N,
                        dayHand: P.HAND_SKIN147D,
                        nightHand: P.HAND_SKIN147N,
                        rarity: RARITY.STONE,
                        author: "aloner",
                        name: "Blob Thing"
                    }, {
                        id: 172,
                        day: P.SKIN149D,
                        night: P.SKIN149N,
                        dayHand: P.HAND_SKIN149D,
                        nightHand: P.HAND_SKIN149N,
                        rarity: RARITY.STONE,
                        author: "aloner",
                        name: "Machine Mask"
                    }, {
                        id: 29,
                        day: P.SKIN2D,
                        night: P.SKIN2N,
                        dayHand: P.HAND_SKIN2D,
                        nightHand: P.HAND_SKIN2N,
                        rarity: RARITY.GOLD,
                        author: "Pixelbitie",
                        name: "Lollipop 1"
                    }, {
                        id: 30,
                        day: P.SKIN3D,
                        night: P.SKIN3N,
                        dayHand: P.HAND_SKIN3D,
                        nightHand: P.HAND_SKIN3N,
                        rarity: RARITY.GOLD,
                        author: "Starve.io",
                        name: "Lollipop 2"
                    }, {
                        id: 31,
                        day: P.SKIN4D,
                        night: P.SKIN4N,
                        dayHand: P.HAND_SKIN4D,
                        nightHand: P.HAND_SKIN4N,
                        rarity: RARITY.GOLD,
                        author: "Starve.io",
                        name: "Lollipop 3"
                    }, {
                        id: 32,
                        day: P.SKIN5D,
                        night: P.SKIN5N,
                        dayHand: P.HAND_SKIN5D,
                        nightHand: P.HAND_SKIN5N,
                        rarity: RARITY.GOLD,
                        author: "Starve.io",
                        name: "Lollipop 4"
                    }, {
                        id: 33,
                        day: P.SKIN8D,
                        night: P.SKIN8N,
                        dayHand: P.HAND_SKIN8D,
                        nightHand: P.HAND_SKIN8N,
                        rarity: RARITY.GOLD,
                        author: "Sushui",
                        name: "Yellow Bird"
                    }, {
                        id: 34,
                        day: P.SKIN9D,
                        night: P.SKIN9N,
                        dayHand: P.HAND_SKIN9D,
                        nightHand: P.HAND_SKIN9N,
                        rarity: RARITY.GOLD,
                        author: "Sushui",
                        name: "Red Bird"
                    }, {
                        id: 35,
                        day: P.SKIN10D,
                        night: P.SKIN10N,
                        dayHand: P.HAND_SKIN10D,
                        nightHand: P.HAND_SKIN10N,
                        rarity: RARITY.GOLD,
                        author: "Sushui",
                        name: "Blue Bird"
                    }, {
                        id: 37,
                        day: P.SKIN17D,
                        night: P.SKIN17N,
                        dayHand: P.HAND_SKIN17D,
                        nightHand: P.HAND_SKIN17N,
                        rarity: RARITY.GOLD,
                        author: "Winter",
                        name: "Owl"
                    }, {
                        id: 52,
                        day: P.SKIN27D,
                        night: P.SKIN27N,
                        dayHand: P.HAND_SKIN27D,
                        nightHand: P.HAND_SKIN27N,
                        rarity: RARITY.GOLD,
                        author: "Starve.io",
                        name: "Nemo"
                    }, {
                        id: 53,
                        day: P.SKIN28D,
                        night: P.SKIN28N,
                        dayHand: P.HAND_SKIN28D,
                        nightHand: P.HAND_SKIN28N,
                        rarity: RARITY.GOLD,
                        author: "Starve.io",
                        name: "Mr. Bread"
                    }, {
                        id: 74,
                        day: P.SKIN49D,
                        night: P.SKIN49N,
                        dayHand: P.HAND_SKIN49D,
                        nightHand: P.HAND_SKIN49N,
                        rarity: RARITY.GOLD,
                        author: "Communist & Taco4Life",
                        name: "Mr. Bread 2"
                    }, {
                        id: 75,
                        day: P.SKIN50D,
                        night: P.SKIN50N,
                        dayHand: P.HAND_SKIN50D,
                        nightHand: P.HAND_SKIN50N,
                        rarity: RARITY.GOLD,
                        author: "Communist & Taco4Life",
                        name: "Mr. Bread 3"
                    }, {
                        id: 60,
                        day: P.SKIN35D,
                        night: P.SKIN35N,
                        dayHand: P.HAND_SKIN35D,
                        nightHand: P.HAND_SKIN35N,
                        rarity: RARITY.GOLD,
                        author: "Starve.io",
                        name: "Red Berry"
                    }, {
                        id: 61,
                        day: P.SKIN36D,
                        night: P.SKIN36N,
                        dayHand: P.HAND_SKIN36D,
                        nightHand: P.HAND_SKIN36N,
                        rarity: RARITY.GOLD,
                        author: "Starve.io",
                        name: "Old Berry"
                    }, {
                        id: 70,
                        day: P.SKIN45D,
                        night: P.SKIN45N,
                        dayHand: P.HAND_SKIN45D,
                        nightHand: P.HAND_SKIN45N,
                        rarity: RARITY.GOLD,
                        author: "eogito",
                        name: "Cake"
                    }, {
                        id: 71,
                        day: P.SKIN46D,
                        night: P.SKIN46N,
                        dayHand: P.HAND_SKIN46D,
                        nightHand: P.HAND_SKIN46N,
                        rarity: RARITY.GOLD,
                        author: "eogito",
                        name: "Christmas Cake"
                    }, {
                        id: 77,
                        day: P.SKIN52D,
                        night: P.SKIN52N,
                        dayHand: P.HAND_SKIN52D,
                        nightHand: P.HAND_SKIN52N,
                        rarity: RARITY.GOLD,
                        author: "Pancakez",
                        name: "Mr. Pancake"
                    }, {
                        id: 87,
                        day: P.SKIN62D,
                        night: P.SKIN62N,
                        dayHand: P.HAND_SKIN62D,
                        nightHand: P.HAND_SKIN62N,
                        rarity: RARITY.GOLD,
                        author: "Taco4Life",
                        name: "Mr. Taco"
                    }, {
                        id: 78,
                        day: P.SKIN53D,
                        night: P.SKIN53N,
                        dayHand: P.HAND_SKIN53D,
                        nightHand: P.HAND_SKIN53N,
                        rarity: RARITY.GOLD,
                        author: "Taco4Life",
                        name: "Mr. Bottle"
                    }, {
                        id: 79,
                        day: P.SKIN54D,
                        night: P.SKIN54N,
                        dayHand: P.HAND_SKIN54D,
                        nightHand: P.HAND_SKIN54N,
                        rarity: RARITY.GOLD,
                        author: "Taco4Life",
                        name: "Mr. Bottle 2"
                    }, {
                        id: 97,
                        day: P.SKIN71D,
                        night: P.SKIN71N,
                        dayHand: P.HAND_SKIN71D,
                        nightHand: P.HAND_SKIN71N,
                        rarity: RARITY.GOLD,
                        author: "eogito",
                        name: "Pink Rabbit"
                    }, {
                        id: 102,
                        day: P.SKIN77D,
                        night: P.SKIN77N,
                        dayHand: P.HAND_SKIN77D,
                        nightHand: P.HAND_SKIN77N,
                        rarity: RARITY.GOLD,
                        author: "pizza wa",
                        name: "Marshmallow"
                    }, {
                        id: 107,
                        day: P.SKIN82D,
                        night: P.SKIN82N,
                        dayHand: P.HAND_SKIN82D,
                        nightHand: P.HAND_SKIN82N,
                        rarity: RARITY.GOLD,
                        author: "eogito",
                        name: "Fox"
                    }, {
                        id: 132,
                        day: P.SKIN107D,
                        night: P.SKIN107N,
                        dayHand: P.HAND_SKIN107D,
                        nightHand: P.HAND_SKIN107N,
                        rarity: RARITY.GOLD,
                        author: "eogito",
                        name: "Raccoon"
                    }, {
                        id: 111,
                        day: P.SKIN86D,
                        night: P.SKIN86N,
                        dayHand: P.HAND_SKIN86D,
                        nightHand: P.HAND_SKIN86N,
                        rarity: RARITY.GOLD,
                        author: "pizza wa",
                        name: "Cloud"
                    }, {
                        id: 113,
                        day: P.SKIN88D,
                        night: P.SKIN88N,
                        dayHand: P.HAND_SKIN88D,
                        nightHand: P.HAND_SKIN88N,
                        rarity: RARITY.GOLD,
                        author: "pizza wa",
                        name: "Moon"
                    }, {
                        id: 117,
                        day: P.SKIN92D,
                        night: P.SKIN92N,
                        dayHand: P.HAND_SKIN92D,
                        nightHand: P.HAND_SKIN92N,
                        rarity: RARITY.GOLD,
                        author: "eogito",
                        name: "Mr. Panda"
                    }, {
                        id: 118,
                        day: P.SKIN93D,
                        night: P.SKIN93N,
                        dayHand: P.HAND_SKIN93D,
                        nightHand: P.HAND_SKIN93N,
                        rarity: RARITY.GOLD,
                        author: "eogito",
                        name: "Mr. Strawberry"
                    }, {
                        id: 119,
                        day: P.SKIN94D,
                        night: P.SKIN94N,
                        dayHand: P.HAND_SKIN94D,
                        nightHand: P.HAND_SKIN94N,
                        rarity: RARITY.GOLD,
                        author: "eogito & Sushuui",
                        name: "Mummy"
                    }, {
                        id: 122,
                        day: P.SKIN97D,
                        night: P.SKIN97N,
                        dayHand: P.HAND_SKIN97D,
                        nightHand: P.HAND_SKIN97N,
                        rarity: RARITY.GOLD,
                        author: "Taco4Life",
                        name: "Dino"
                    }, {
                        id: 127,
                        day: P.SKIN102D,
                        night: P.SKIN102N,
                        dayHand: P.HAND_SKIN102D,
                        nightHand: P.HAND_SKIN102N,
                        rarity: RARITY.GOLD,
                        author: "MADBalgouthi",
                        name: "Mr. Koala"
                    }, {
                        id: 160,
                        day: P.SKIN136D,
                        night: P.SKIN136N,
                        dayHand: P.HAND_SKIN136D,
                        nightHand: P.HAND_SKIN136N,
                        rarity: RARITY.GOLD,
                        author: "Starve.io",
                        name: "Bottle Protection"
                    }, {
                        id: 162,
                        day: P.SKIN138D,
                        night: P.SKIN138N,
                        dayHand: P.HAND_SKIN138D,
                        nightHand: P.HAND_SKIN138N,
                        rarity: RARITY.GOLD,
                        author: "CrysTal",
                        name: "Leaf Man"
                    }, {
                        id: 166,
                        day: P.SKIN142D,
                        night: P.SKIN142N,
                        dayHand: P.HAND_SKIN142D,
                        nightHand: P.HAND_SKIN142N,
                        rarity: RARITY.GOLD,
                        author: "pizza wa",
                        name: "Bubble"
                    }, {
                        id: 174,
                        day: P.SKIN145D,
                        night: P.SKIN145N,
                        dayHand: P.HAND_SKIN145D,
                        nightHand: P.HAND_SKIN145N,
                        rarity: RARITY.GOLD,
                        author: "upfiz",
                        name: "Potato"
                    }, {
                        id: 171,
                        day: P.SKIN148D,
                        night: P.SKIN148N,
                        dayHand: P.HAND_SKIN148D,
                        nightHand: P.HAND_SKIN148N,
                        rarity: RARITY.GOLD,
                        author: "aloner",
                        name: "Axolotl"
                    }, {
                        id: 25,
                        day: P.SKIN6D,
                        night: P.SKIN6N,
                        dayHand: P.HAND_SKIN6D,
                        nightHand: P.HAND_SKIN0N,
                        rarity: RARITY.DIAMOND,
                        author: "Pixelbitie",
                        name: "Test Dummy"
                    }, {
                        id: 41,
                        day: P.SKIN_STARD,
                        night: P.SKIN_STARN,
                        dayHand: P.HAND_STARD,
                        nightHand: P.HAND_STARN,
                        rarity: RARITY.DIAMOND,
                        author: "pizza wa",
                        name: "Star-ver"
                    }, {
                        id: 43,
                        day: P.SKIN11D,
                        night: P.SKIN11N,
                        dayHand: P.HAND_SKIN11D,
                        nightHand: P.HAND_SKIN11N,
                        rarity: RARITY.DIAMOND,
                        author: "Communist",
                        name: "Starver Chest"
                    }, {
                        id: 88,
                        day: P.SKIN63D,
                        night: P.SKIN63N,
                        dayHand: P.HAND_SKIN63D,
                        nightHand: P.HAND_SKIN63N,
                        rarity: RARITY.DIAMOND,
                        author: "Communist",
                        name: "Starver Workbench"
                    }, {
                        id: 121,
                        day: P.SKIN96D,
                        night: P.SKIN96N,
                        dayHand: P.HAND_SKIN96D,
                        nightHand: P.HAND_SKIN96N,
                        rarity: RARITY.DIAMOND,
                        author: "MADBalgouthi",
                        name: "Fish"
                    }, {
                        id: 39,
                        day: P.SKIN22D,
                        night: P.SKIN22N,
                        dayHand: P.HAND_SKIN22D,
                        nightHand: P.HAND_SKIN22N,
                        rarity: RARITY.DIAMOND,
                        author: "Negligent4Dia",
                        name: "Crab"
                    }, {
                        id: 40,
                        day: P.SKIN23D,
                        night: P.SKIN23N,
                        dayHand: P.HAND_SKIN23D,
                        nightHand: P.HAND_SKIN23N,
                        rarity: RARITY.DIAMOND,
                        author: "Negligent4Dia",
                        name: "Piranha"
                    }, {
                        id: 36,
                        day: P.SKIN16D,
                        night: P.SKIN16N,
                        dayHand: P.HAND_SKIN16D,
                        nightHand: P.HAND_SKIN16N,
                        rarity: RARITY.DIAMOND,
                        author: "eogito",
                        name: "Winter Fox"
                    }, {
                        id: 69,
                        day: P.SKIN44D,
                        night: P.SKIN44N,
                        dayHand: P.HAND_SKIN44D,
                        nightHand: P.HAND_SKIN44N,
                        rarity: RARITY.DIAMOND,
                        author: "Zed",
                        name: "Baby Foxy"
                    }, {
                        id: 51,
                        day: P.SKIN26D,
                        night: P.SKIN26N,
                        dayHand: P.HAND_SKIN26D,
                        nightHand: P.HAND_SKIN26N,
                        rarity: RARITY.DIAMOND,
                        author: "HOWI",
                        name: "Winter Bear"
                    }, {
                        id: 133,
                        day: P.SKIN108D,
                        night: P.SKIN108N,
                        dayHand: P.HAND_SKIN108D,
                        nightHand: P.HAND_SKIN108N,
                        rarity: RARITY.DIAMOND,
                        author: "eogito",
                        name: "Hawk"
                    }, {
                        id: 55,
                        day: P.SKIN30D,
                        night: P.SKIN30N,
                        dayHand: P.HAND_SKIN30D,
                        nightHand: P.HAND_SKIN30N,
                        rarity: RARITY.DIAMOND,
                        author: "Starve.io",
                        name: "Nice Little Yuki"
                    }, {
                        id: 68,
                        day: P.SKIN43D,
                        night: P.SKIN43N,
                        dayHand: P.HAND_SKIN43D,
                        nightHand: P.HAND_SKIN43N,
                        rarity: RARITY.DIAMOND,
                        author: "Taco4Life",
                        name: "Baby Yuki"
                    }, {
                        id: 62,
                        day: P.SKIN37D,
                        night: P.SKIN37N,
                        dayHand: P.HAND_SKIN37D,
                        nightHand: P.HAND_SKIN37N,
                        rarity: RARITY.DIAMOND,
                        author: "Starve.io",
                        name: "Mr. Carrot"
                    }, {
                        id: 56,
                        day: P.SKIN31D,
                        night: P.SKIN31N,
                        dayHand: P.HAND_SKIN31D,
                        nightHand: P.HAND_SKIN31N,
                        rarity: RARITY.DIAMOND,
                        author: "Starve.io",
                        name: "Bat Limax"
                    }, {
                        id: 72,
                        day: P.SKIN47D,
                        night: P.SKIN47N,
                        dayHand: P.HAND_SKIN47D,
                        nightHand: P.HAND_SKIN47N,
                        rarity: RARITY.DIAMOND,
                        author: "eogito",
                        name: "Mr. Crate"
                    }, {
                        id: 73,
                        day: P.SKIN48D,
                        night: P.SKIN48N,
                        dayHand: P.HAND_SKIN48D,
                        nightHand: P.HAND_SKIN48N,
                        rarity: RARITY.DIAMOND,
                        author: "Taco4Life & eogito",
                        name: "Mr. Spider"
                    }, {
                        id: 93,
                        day: P.SKIN68D,
                        night: P.SKIN68N,
                        dayHand: P.HAND_SKIN68D,
                        nightHand: P.HAND_SKIN68N,
                        rarity: RARITY.DIAMOND,
                        author: "Anyone want to play?",
                        name: "Mr. Spider 2"
                    }, {
                        id: 82,
                        day: P.SKIN57D,
                        night: P.SKIN57N,
                        dayHand: P.HAND_SKIN57D,
                        nightHand: P.HAND_SKIN57N,
                        rarity: RARITY.DIAMOND,
                        author: "Starve.io",
                        name: "Mr. Blue Starfish"
                    }, {
                        id: 83,
                        day: P.SKIN58D,
                        night: P.SKIN58N,
                        dayHand: P.HAND_SKIN58D,
                        nightHand: P.HAND_SKIN58N,
                        rarity: RARITY.DIAMOND,
                        author: "Starve.io",
                        name: "Mr. Orange Starfish"
                    }, {
                        id: 84,
                        day: P.SKIN59D,
                        night: P.SKIN59N,
                        dayHand: P.HAND_SKIN59D,
                        nightHand: P.HAND_SKIN59N,
                        rarity: RARITY.DIAMOND,
                        author: "Starve.io",
                        name: "Mr. Pink Starfish"
                    }, {
                        id: 85,
                        day: P.SKIN60D,
                        night: P.SKIN60N,
                        dayHand: P.HAND_SKIN60D,
                        nightHand: P.HAND_SKIN60N,
                        rarity: RARITY.DIAMOND,
                        author: "Starve.io",
                        name: "Mr. ShellMauve"
                    }, {
                        id: 86,
                        day: P.SKIN61D,
                        night: P.SKIN61N,
                        dayHand: P.HAND_SKIN61D,
                        nightHand: P.HAND_SKIN61N,
                        rarity: RARITY.DIAMOND,
                        author: "Starve.io",
                        name: "Mr. Shell Bead"
                    }, {
                        id: 96,
                        day: P.SKIN72D,
                        night: P.SKIN72N,
                        dayHand: P.HAND_SKIN72D,
                        nightHand: P.HAND_SKIN72N,
                        rarity: RARITY.DIAMOND,
                        author: "Fukss",
                        name: "Angry Crab"
                    }, {
                        id: 98,
                        day: P.SKIN73D,
                        night: P.SKIN73N,
                        dayHand: P.HAND_SKIN73D,
                        nightHand: P.HAND_SKIN73N,
                        rarity: RARITY.DIAMOND,
                        author: "Starve.io",
                        name: "Penguin"
                    }, {
                        id: 126,
                        day: P.SKIN101D,
                        night: P.SKIN101N,
                        dayHand: P.HAND_SKIN101D,
                        nightHand: P.HAND_SKIN101N,
                        rarity: RARITY.DIAMOND,
                        author: "Anyone want to play?",
                        name: "Mr. Boar"
                    }, {
                        id: 145,
                        day: P.SKIN121D,
                        night: P.SKIN121N,
                        dayHand: P.HAND_SKIN121D,
                        nightHand: P.HAND_SKIN121N,
                        rarity: RARITY.DIAMOND,
                        author: "Starve.io",
                        name: "I saw you"
                    }, {
                        id: 146,
                        day: P.SKIN122D,
                        night: P.SKIN122N,
                        dayHand: P.HAND_SKIN122D,
                        nightHand: P.HAND_SKIN122N,
                        rarity: RARITY.DIAMOND,
                        author: "Starve.io",
                        name: "It was funny"
                    }, {
                        id: 147,
                        day: P.SKIN123D,
                        night: P.SKIN123N,
                        dayHand: P.HAND_SKIN123D,
                        nightHand: P.HAND_SKIN123N,
                        rarity: RARITY.DIAMOND,
                        author: "Starve.io",
                        name: "You can scream"
                    }, {
                        id: 158,
                        day: P.SKIN134D,
                        night: P.SKIN134N,
                        dayHand: P.HAND_SKIN134D,
                        nightHand: P.HAND_SKIN134N,
                        rarity: RARITY.DIAMOND,
                        author: "eogito",
                        name: "Mr. Book"
                    }, {
                        id: 163,
                        day: P.SKIN139D,
                        night: P.SKIN139N,
                        dayHand: P.HAND_SKIN139D,
                        nightHand: P.HAND_SKIN139N,
                        rarity: RARITY.DIAMOND,
                        author: "Anyone want to play?",
                        name: "Mr. Mammoth"
                    }, {
                        id: 164,
                        day: P.SKIN140D,
                        night: P.SKIN140N,
                        dayHand: P.HAND_SKIN140D,
                        nightHand: P.HAND_SKIN140N,
                        rarity: RARITY.DIAMOND,
                        author: "SoOw",
                        name: "Mr. Mammoth 2"
                    }, {
                        id: 161,
                        day: P.SKIN137D,
                        night: P.SKIN137N,
                        dayHand: P.HAND_SKIN137D,
                        nightHand: P.HAND_SKIN137N,
                        rarity: RARITY.DIAMOND,
                        author: "eogito",
                        name: "Nightmare"
                    }, {
                        id: 168,
                        day: P.SKIN144D,
                        night: P.SKIN144N,
                        dayHand: P.HAND_SKIN144D,
                        nightHand: P.HAND_SKIN144N,
                        rarity: RARITY.DIAMOND,
                        author: "pizza wa",
                        name: "Shiny Crystal"
                    }, {
                        id: 173,
                        day: P.SKIN150D,
                        night: P.SKIN150N,
                        dayHand: P.HAND_SKIN150D,
                        nightHand: P.HAND_SKIN150N,
                        rarity: RARITY.DIAMOND,
                        author: "pizza wa",
                        name: "Water skin"
                    }, {
                        id: 42,
                        day: P.SKIN14D,
                        night: P.SKIN14N,
                        dayHand: P.HAND_SKIN14D,
                        nightHand: P.HAND_SKIN14N,
                        rarity: RARITY.AMETHYST,
                        author: "Winter",
                        name: "Will-O'-The-Wisp"
                    }, {
                        id: 91,
                        day: P.SKIN66D,
                        night: P.SKIN66N,
                        dayHand: P.HAND_SKIN66D,
                        nightHand: P.HAND_SKIN66N,
                        rarity: RARITY.AMETHYST,
                        author: "ExpertyAnimations",
                        name: "Flame"
                    }, {
                        id: 26,
                        day: P.SKIN15D,
                        night: P.SKIN15N,
                        dayHand: P.HAND_SKIN15D,
                        nightHand: P.HAND_SKIN15N,
                        rarity: RARITY.AMETHYST,
                        author: "Starve.io",
                        name: "Be a Tree"
                    }, {
                        id: 38,
                        day: P.SKIN18D,
                        night: P.SKIN18N,
                        dayHand: P.HAND_SKIN18D,
                        nightHand: P.HAND_SKIN18N,
                        rarity: RARITY.AMETHYST,
                        author: "Winter",
                        name: "Toxic Mutant"
                    }, {
                        id: 50,
                        day: P.SKIN25D,
                        night: P.SKIN25N,
                        dayHand: P.HAND_SKIN25D,
                        nightHand: P.HAND_SKIN25N,
                        rarity: RARITY.AMETHYST,
                        author: "Communist",
                        name: "Mr. Tomato"
                    }, {
                        id: 54,
                        day: P.SKIN29D,
                        night: P.SKIN29N,
                        dayHand: P.HAND_SKIN29D,
                        nightHand: P.HAND_SKIN29N,
                        rarity: RARITY.AMETHYST,
                        author: "Starve.io",
                        name: "Mr. Mauve, the Lapa"
                    }, {
                        id: 57,
                        day: P.SKIN32D,
                        night: P.SKIN32N,
                        dayHand: P.HAND_SKIN32D,
                        nightHand: P.HAND_SKIN32N,
                        rarity: RARITY.AMETHYST,
                        author: "Starve.io",
                        name: "Golden Fish"
                    }, {
                        id: 64,
                        day: P.SKIN39D,
                        night: P.SKIN39N,
                        dayHand: P.HAND_SKIN39D,
                        nightHand: P.HAND_SKIN39N,
                        rarity: RARITY.AMETHYST,
                        author: "Starve.io",
                        name: "LapaMauve"
                    }, {
                        id: 65,
                        day: P.SKIN40D,
                        night: P.SKIN40N,
                        dayHand: P.HAND_SKIN40D,
                        nightHand: P.HAND_SKIN40N,
                        rarity: RARITY.AMETHYST,
                        author: "Starve.io",
                        name: "LapaMauve "
                    }, {
                        id: 92,
                        day: P.SKIN67D,
                        night: P.SKIN67N,
                        dayHand: P.HAND_SKIN67D,
                        nightHand: P.HAND_SKIN67N,
                        rarity: RARITY.AMETHYST,
                        author: "Starve.io",
                        name: "Mr. Burger"
                    }, {
                        id: 66,
                        day: P.SKIN41D,
                        night: P.SKIN41N,
                        dayHand: P.HAND_SKIN41D,
                        nightHand: P.HAND_SKIN41N,
                        rarity: RARITY.AMETHYST,
                        author: "pizza wa",
                        name: "Tropical Starver"
                    }, {
                        id: 80,
                        day: P.SKIN55D,
                        night: P.SKIN55N,
                        dayHand: P.HAND_SKIN55D,
                        nightHand: P.HAND_SKIN55N,
                        rarity: RARITY.AMETHYST,
                        author: "Starve.io",
                        name: "Mr. ShellPink"
                    }, {
                        id: 81,
                        day: P.SKIN56D,
                        night: P.SKIN56N,
                        dayHand: P.HAND_SKIN56D,
                        nightHand: P.HAND_SKIN56N,
                        rarity: RARITY.AMETHYST,
                        author: "Starve.io",
                        name: "Mr. OranShell"
                    }, {
                        id: 99,
                        day: P.SKIN74D,
                        night: P.SKIN74N,
                        dayHand: P.HAND_SKIN74D,
                        nightHand: P.HAND_SKIN74N,
                        rarity: RARITY.AMETHYST,
                        author: "eogito",
                        name: "Pepe"
                    }, {
                        id: 100,
                        day: P.SKIN75D,
                        night: P.SKIN75N,
                        dayHand: P.HAND_SKIN75D,
                        nightHand: P.HAND_SKIN75N,
                        rarity: RARITY.AMETHYST,
                        author: "fatant",
                        name: "Mr. Ant"
                    }, {
                        id: 115,
                        day: P.SKIN90D,
                        night: P.SKIN90N,
                        dayHand: P.HAND_SKIN90D,
                        nightHand: P.HAND_SKIN90N,
                        rarity: RARITY.AMETHYST,
                        author: "MADBalgouthi",
                        name: "Mr. Watermelon"
                    }, {
                        id: 101,
                        day: P.SKIN76D,
                        night: P.SKIN76N,
                        dayHand: P.HAND_SKIN76D,
                        nightHand: P.HAND_SKIN76N,
                        rarity: RARITY.AMETHYST,
                        author: "Taco4Life",
                        name: "Mr. Thornbush"
                    }, {
                        id: 131,
                        day: P.SKIN106D,
                        night: P.SKIN106N,
                        dayHand: P.HAND_SKIN106D,
                        nightHand: P.HAND_SKIN106N,
                        rarity: RARITY.AMETHYST,
                        author: "Taco4Life",
                        name: "Cthulhu"
                    }, {
                        id: 143,
                        day: P.SKIN119D,
                        night: P.SKIN119N,
                        dayHand: P.HAND_SKIN119D,
                        nightHand: P.HAND_SKIN119N,
                        rarity: RARITY.AMETHYST,
                        author: "eogito",
                        name: "Mr. Cactus"
                    }, {
                        id: 144,
                        day: P.SKIN120D,
                        night: P.SKIN120N,
                        dayHand: P.HAND_SKIN120D,
                        nightHand: P.HAND_SKIN120N,
                        rarity: RARITY.AMETHYST,
                        author: "Starve.io",
                        name: "Momo"
                    }, {
                        id: 95,
                        day: P.SKIN70D,
                        night: P.SKIN70N,
                        dayHand: P.HAND_SKIN70D,
                        nightHand: P.HAND_SKIN70N,
                        rarity: RARITY.REIDITE,
                        author: "Taco4Life",
                        name: "Mr. Garlic"
                    }, {
                        id: 76,
                        day: P.SKIN51D,
                        night: P.SKIN51N,
                        dayHand: P.HAND_SKIN51D,
                        nightHand: P.HAND_SKIN51N,
                        rarity: RARITY.REIDITE,
                        author: "Winter",
                        name: "Robot Dragon"
                    }, {
                        id: 44,
                        day: P.SKIN1D,
                        night: P.SKIN1N,
                        dayHand: P.HAND_SKIN1D,
                        nightHand: P.HAND_SKIN1N,
                        rarity: RARITY.REIDITE,
                        author: "Winter",
                        name: "Lava Dragon Version 1"
                    }, {
                        id: 90,
                        day: P.SKIN65D,
                        night: P.SKIN65N,
                        dayHand: P.HAND_SKIN65D,
                        nightHand: P.HAND_SKIN65N,
                        rarity: RARITY.REIDITE,
                        author: "ExpertyAnimations",
                        name: "Lava Dragon Version 2"
                    }, {
                        id: 124,
                        day: P.SKIN99D,
                        night: P.SKIN99N,
                        dayHand: P.HAND_SKIN99D,
                        nightHand: P.HAND_SKIN99N,
                        rarity: RARITY.REIDITE,
                        author: "eogito",
                        name: "Lava Dragon Version 3"
                    }, {
                        id: 45,
                        day: P.SKIN12D,
                        night: P.SKIN12N,
                        dayHand: P.HAND_SKIN12D,
                        nightHand: P.HAND_SKIN12N,
                        rarity: RARITY.REIDITE,
                        author: "Sushui",
                        name: "Ice Dragon Version 1"
                    }, {
                        id: 46,
                        day: P.SKIN13D,
                        night: P.SKIN13N,
                        dayHand: P.HAND_SKIN13D,
                        nightHand: P.HAND_SKIN13N,
                        rarity: RARITY.REIDITE,
                        author: "Winter",
                        name: "Ice Dragon Version 2"
                    }, {
                        id: 108,
                        day: P.SKIN83D,
                        night: P.SKIN83N,
                        dayHand: P.HAND_SKIN83D,
                        nightHand: P.HAND_SKIN83N,
                        rarity: RARITY.REIDITE,
                        author: "eogito",
                        name: "Ice Dragon Version 3"
                    }, {
                        id: 123,
                        day: P.SKIN98D,
                        night: P.SKIN98N,
                        dayHand: P.HAND_SKIN98D,
                        nightHand: P.HAND_SKIN98N,
                        rarity: RARITY.REIDITE,
                        author: "eogito",
                        name: "Baby Dragon Version 1"
                    }, {
                        id: 128,
                        day: P.SKIN103D,
                        night: P.SKIN103N,
                        dayHand: P.HAND_SKIN103D,
                        nightHand: P.HAND_SKIN103N,
                        rarity: RARITY.REIDITE,
                        author: "MADBalgouthi",
                        name: "Baby Dragon Version 2"
                    }, {
                        id: 125,
                        day: P.SKIN100D,
                        night: P.SKIN100N,
                        dayHand: P.HAND_SKIN100D,
                        nightHand: P.HAND_SKIN100N,
                        rarity: RARITY.REIDITE,
                        author: "eogito",
                        name: "Baby Lava"
                    }, {
                        id: 47,
                        day: P.SKIN21D,
                        night: P.SKIN21N,
                        dayHand: P.HAND_SKIN21D,
                        nightHand: P.HAND_SKIN21N,
                        rarity: RARITY.REIDITE,
                        author: "Taco4Life",
                        name: "Kraken"
                    }, {
                        id: 129,
                        day: P.SKIN104D,
                        night: P.SKIN104N,
                        dayHand: P.HAND_SKIN104D,
                        nightHand: P.HAND_SKIN104N,
                        rarity: RARITY.REIDITE,
                        author: "Taco4Life",
                        name: "Sandworm"
                    }, {
                        id: 63,
                        day: P.SKIN38D,
                        night: P.SKIN38N,
                        dayHand: P.HAND_SKIN38D,
                        nightHand: P.HAND_SKIN38N,
                        rarity: RARITY.REIDITE,
                        author: "Starve.io",
                        name: "Mr. Golden Bread"
                    }, {
                        id: 67,
                        day: P.SKIN42D,
                        night: P.SKIN42N,
                        dayHand: P.HAND_SKIN42D,
                        nightHand: P.HAND_SKIN42N,
                        rarity: RARITY.REIDITE,
                        author: "ForgottenHeroe",
                        name: "Starver Ores"
                    }, {
                        id: 130,
                        day: P.SKIN105D,
                        night: P.SKIN105N,
                        dayHand: P.HAND_SKIN105D,
                        nightHand: P.HAND_SKIN105N,
                        rarity: RARITY.REIDITE,
                        author: "Taco4Life",
                        name: "Poo"
                    }, {
                        id: 89,
                        day: P.SKIN64D,
                        night: P.SKIN64N,
                        dayHand: P.HAND_SKIN64D,
                        nightHand: P.HAND_SKIN64N,
                        rarity: RARITY.REIDITE,
                        author: "Poinet",
                        name: "Volcano Starver"
                    }, {
                        id: 112,
                        day: P.SKIN87D,
                        night: P.SKIN87N,
                        dayHand: P.HAND_SKIN87D,
                        nightHand: P.HAND_SKIN87N,
                        rarity: RARITY.REIDITE,
                        author: "eogito",
                        name: "Lava Starver"
                    }, {
                        id: 48,
                        day: P.SKIN_ROBOTD,
                        night: P.SKIN_ROBOTN,
                        dayHand: P.HAND_ROBOTD,
                        nightHand: P.HAND_ROBOTN,
                        rarity: RARITY.SPECIAL,
                        author: "eogito",
                        name: "Robot"
                    }, {
                        id: 110,
                        day: P.SKIN85D,
                        night: P.SKIN85N,
                        dayHand: P.HAND_SKIN85D,
                        nightHand: P.HAND_SKIN85N,
                        rarity: RARITY.SPECIAL,
                        author: "pizza wa",
                        name: "Blue Butterfly"
                    }, {
                        id: 157,
                        day: P.SKIN133D,
                        night: P.SKIN133N,
                        dayHand: P.HAND_SKIN133D,
                        nightHand: P.HAND_SKIN133N,
                        rarity: RARITY.SPECIAL,
                        author: "eogito",
                        name: "Yrifox"
                    }, {
                        id: 165,
                        day: P.SKIN141D,
                        night: P.SKIN141N,
                        dayHand: P.HAND_SKIN141D,
                        nightHand: P.HAND_SKIN141N,
                        rarity: RARITY.SPECIAL,
                        author: "OmarJr13",
                        name: "Blob Skin"
                    }],
                    BAG: [{
                        id: 0,
                        day: P.BAGD,
                        night: P.BAGN,
                        rarity: RARITY.FREE,
                        author: "Starve.io",
                        name: "Bag 1"
                    }, {
                        id: 1,
                        day: P.BAG0D,
                        night: P.BAG0N,
                        rarity: RARITY.FREE,
                        author: "Starve.io",
                        name: "Old Bag"
                    }, {
                        id: 2,
                        day: P.BAG4D,
                        night: P.BAG4N,
                        rarity: RARITY.WOOD,
                        author: "Starve.io",
                        name: "Bag 2"
                    }, {
                        id: 3,
                        day: P.BAG5D,
                        night: P.BAG5N,
                        rarity: RARITY.WOOD,
                        author: "Starve.io",
                        name: "Bag 3"
                    }, {
                        id: 4,
                        day: P.BAG6D,
                        night: P.BAG6N,
                        rarity: RARITY.WOOD,
                        author: "Starve.io",
                        name: "Bag 4"
                    }, {
                        id: 5,
                        day: P.BAG7D,
                        night: P.BAG7N,
                        rarity: RARITY.WOOD,
                        author: "Starve.io",
                        name: "Bag 5"
                    }, {
                        id: 11,
                        day: P.BAG23D,
                        night: P.BAG23N,
                        rarity: RARITY.WOOD,
                        author: "eogito",
                        name: "Wood Pickaxe Bag"
                    }, {
                        id: 19,
                        day: P.BAG16D,
                        night: P.BAG16N,
                        rarity: RARITY.WOOD,
                        author: "Starve.io ",
                        name: "Wood Carrier"
                    }, {
                        id: 37,
                        day: P.BAG36D,
                        night: P.BAG36N,
                        rarity: RARITY.WOOD,
                        author: "eogito",
                        name: "Bag 6"
                    }, {
                        id: 39,
                        day: P.BAG38D,
                        night: P.BAG38N,
                        rarity: RARITY.WOOD,
                        author: "eogito",
                        name: "Bag with Wooden Swords"
                    }, {
                        id: 44,
                        day: P.BAG43D,
                        night: P.BAG43N,
                        rarity: RARITY.WOOD,
                        author: "Communist",
                        name: "Big Bag"
                    }, {
                        id: 7,
                        day: P.BAG14D,
                        night: P.BAG14N,
                        rarity: RARITY.STONE,
                        author: "Communist",
                        name: "Bag 6"
                    }, {
                        id: 8,
                        day: P.BAG_EASTERD,
                        night: P.BAG_EASTERN,
                        rarity: RARITY.STONE,
                        author: "Starve.io",
                        name: "Easter Bag"
                    }, {
                        id: 9,
                        day: P.BAG_STARD,
                        night: P.BAG_STARN,
                        rarity: RARITY.STONE,
                        author: "pizza wa",
                        name: "Star Bag"
                    }, {
                        id: 10,
                        day: P.BAG9D,
                        night: P.BAG9N,
                        rarity: RARITY.STONE,
                        author: "eogito",
                        name: "Winter Bag"
                    }, {
                        id: 20,
                        day: P.BAG17D,
                        night: P.BAG17N,
                        rarity: RARITY.STONE,
                        author: "Starve.io ",
                        name: "Stone Carrier"
                    }, {
                        id: 24,
                        day: P.BAG24D,
                        night: P.BAG24N,
                        rarity: RARITY.STONE,
                        author: "eogito",
                        name: "Stone Pickaxe Bag"
                    }, {
                        id: 6,
                        day: P.BAG13D,
                        night: P.BAG13N,
                        rarity: RARITY.STONE,
                        author: "Communist",
                        name: "Bag Camouflage"
                    }, {
                        id: 38,
                        day: P.BAG37D,
                        night: P.BAG37N,
                        rarity: RARITY.STONE,
                        author: "eogito",
                        name: "Bag with Stone Swords"
                    }, {
                        id: 54,
                        day: P.BAG53D,
                        night: P.BAG53N,
                        rarity: RARITY.STONE,
                        author: "eogito",
                        name: "Cow Bag"
                    }, {
                        id: 59,
                        day: P.BAG58D,
                        night: P.BAG58N,
                        rarity: RARITY.STONE,
                        author: "CrysTal",
                        name: "Starver Bag"
                    }, {
                        id: 62,
                        day: P.BAG61D,
                        night: P.BAG61N,
                        rarity: RARITY.STONE,
                        author: "CrysTal",
                        name: "Crystal Sky Bag"
                    }, {
                        id: 13,
                        day: P.BAG10D,
                        night: P.BAG10N,
                        rarity: RARITY.GOLD,
                        author: "pizza wa",
                        name: "Honey Pot"
                    }, {
                        id: 21,
                        day: P.BAG18D,
                        night: P.BAG18N,
                        rarity: RARITY.GOLD,
                        author: "Starve.io ",
                        name: "Gold Carrier"
                    }, {
                        id: 30,
                        day: P.BAG25D,
                        night: P.BAG25N,
                        rarity: RARITY.GOLD,
                        author: "eogito",
                        name: "Gold Pickaxe Bag"
                    }, {
                        id: 29,
                        day: P.BAG31D,
                        night: P.BAG31N,
                        rarity: RARITY.GOLD,
                        author: "Ariel",
                        name: "Mr and Mrs Bakers"
                    }, {
                        id: 41,
                        day: P.BAG40D,
                        night: P.BAG40N,
                        rarity: RARITY.GOLD,
                        author: "eogito",
                        name: "Bag with Golden Swords"
                    }, {
                        id: 47,
                        day: P.BAG46D,
                        night: P.BAG46N,
                        rarity: RARITY.GOLD,
                        author: "eogito",
                        name: "Explorer Bag"
                    }, {
                        id: 51,
                        day: P.BAG50D,
                        night: P.BAG50N,
                        rarity: RARITY.GOLD,
                        author: "pizza wa",
                        name: "Bamboo Bag"
                    }, {
                        id: 53,
                        day: P.BAG52D,
                        night: P.BAG52N,
                        rarity: RARITY.GOLD,
                        author: "eogito",
                        name: "Mummy Bag"
                    }, {
                        id: 58,
                        day: P.BAG57D,
                        night: P.BAG57N,
                        rarity: RARITY.GOLD,
                        author: "MADBalgouthi",
                        name: "Watermelon Bag"
                    }, {
                        id: 60,
                        day: P.BAG59D,
                        night: P.BAG60N,
                        rarity: RARITY.GOLD,
                        author: "Taco4Life",
                        name: "Garlic Bag"
                    }, {
                        id: 61,
                        day: P.BAG60D,
                        night: P.BAG59N,
                        rarity: RARITY.GOLD,
                        author: "Taco4Life",
                        name: "Pumpkin Bag"
                    }, {
                        id: 64,
                        day: P.BAG63D,
                        night: P.BAG63N,
                        rarity: RARITY.GOLD,
                        author: "upfiz",
                        name: "Oil Barel bag"
                    }, {
                        id: 67,
                        day: P.BAG68D,
                        night: P.BAG68N,
                        rarity: RARITY.GOLD,
                        author: "pizza wa",
                        name: "Tree Bag"
                    }, {
                        id: 14,
                        day: P.BAG1D,
                        night: P.BAG1N,
                        rarity: RARITY.DIAMOND,
                        author: "Starve.io",
                        name: "a Rabbit in my Bag"
                    }, {
                        id: 15,
                        day: P.BAG2D,
                        night: P.BAG2N,
                        rarity: RARITY.DIAMOND,
                        author: "Starve.io",
                        name: "Bird's nest"
                    }, {
                        id: 16,
                        day: P.BAG3D,
                        night: P.BAG3N,
                        rarity: RARITY.DIAMOND,
                        author: "Starve.io",
                        name: "a Fish on your Back"
                    }, {
                        id: 17,
                        day: P.BAG8D,
                        night: P.BAG8N,
                        rarity: RARITY.DIAMOND,
                        author: "Starve.io",
                        name: "a Squirrel in my Bag"
                    }, {
                        id: 22,
                        day: P.BAG19D,
                        night: P.BAG19N,
                        rarity: RARITY.DIAMOND,
                        author: "Starve.io ",
                        name: "Diamond Carrier"
                    }, {
                        id: 12,
                        day: P.BAG22D,
                        night: P.BAG22N,
                        rarity: RARITY.DIAMOND,
                        author: "eogito",
                        name: "Resources Bag"
                    }, {
                        id: 32,
                        day: P.BAG26D,
                        night: P.BAG26N,
                        rarity: RARITY.DIAMOND,
                        author: "eogito",
                        name: "Diamond Pickaxe Bag"
                    }, {
                        id: 40,
                        day: P.BAG39D,
                        night: P.BAG39N,
                        rarity: RARITY.DIAMOND,
                        author: "eogito",
                        name: "Bag with Diamond Swords"
                    }, {
                        id: 45,
                        day: P.BAG44D,
                        night: P.BAG44N,
                        rarity: RARITY.DIAMOND,
                        author: "eogito",
                        name: "My Cake Bag"
                    }, {
                        id: 46,
                        day: P.BAG45D,
                        night: P.BAG45N,
                        rarity: RARITY.DIAMOND,
                        author: "eogito",
                        name: "My Christmas Cake Bag"
                    }, {
                        id: 52,
                        day: P.BAG51D,
                        night: P.BAG51N,
                        rarity: RARITY.DIAMOND,
                        author: "MADBalgouthi",
                        name: "Fish Bag"
                    }, {
                        id: 65,
                        day: P.BAG64D,
                        night: P.BAG64N,
                        rarity: RARITY.DIAMOND,
                        author: "pizza wa",
                        name: "Cloud Bag"
                    }, {
                        id: 68,
                        day: P.BAG66D,
                        night: P.BAG66N,
                        rarity: RARITY.DIAMOND,
                        author: "pizza wa",
                        name: "Bee Bag"
                    }, {
                        id: 48,
                        day: P.BAG47D,
                        night: P.BAG47N,
                        rarity: RARITY.AMETHYST,
                        author: "fatant",
                        name: "Natural Bag"
                    }, {
                        id: 23,
                        day: P.BAG20D,
                        night: P.BAG20N,
                        rarity: RARITY.AMETHYST,
                        author: "Starve.io ",
                        name: "Amethyst Carrier"
                    }, {
                        id: 25,
                        day: P.BAG27D,
                        night: P.BAG27N,
                        rarity: RARITY.AMETHYST,
                        author: "eogito",
                        name: "Amethyst Pickaxe Bag"
                    }, {
                        id: 28,
                        day: P.BAG30D,
                        night: P.BAG30N,
                        rarity: RARITY.AMETHYST,
                        author: "Starve.io",
                        name: "Your Baby"
                    }, {
                        id: 33,
                        day: P.BAG32D,
                        night: P.BAG32N,
                        rarity: RARITY.AMETHYST,
                        author: "pizza wa",
                        name: "Tropical Bag"
                    }, {
                        id: 43,
                        day: P.BAG42D,
                        night: P.BAG42N,
                        rarity: RARITY.AMETHYST,
                        author: "eogito",
                        name: "Bag with Amethyst Swords"
                    }, {
                        id: 35,
                        day: P.BAG34D,
                        night: P.BAG34N,
                        rarity: RARITY.AMETHYST,
                        author: "eogito",
                        name: "Ice Bag"
                    }, {
                        id: 50,
                        day: P.BAG49D,
                        night: P.BAG49N,
                        rarity: RARITY.AMETHYST,
                        author: "Taco4Life",
                        name: "Thornbush Bag"
                    }, {
                        id: 56,
                        day: P.BAG55D,
                        night: P.BAG55N,
                        rarity: RARITY.AMETHYST,
                        author: "eogito",
                        name: "Autumn Bag"
                    }, {
                        id: 57,
                        day: P.BAG56D,
                        night: P.BAG56N,
                        rarity: RARITY.AMETHYST,
                        author: "Taco4Life",
                        name: "Dino Egg Bag"
                    }, {
                        id: 66,
                        day: P.BAG65D,
                        night: P.BAG65N,
                        rarity: RARITY.AMETHYST,
                        author: "pizza wa",
                        name: "Magic Cloud Bag"
                    }, {
                        id: 69,
                        day: P.BAG67D,
                        night: P.BAG67N,
                        rarity: RARITY.AMETHYST,
                        author: "pizza wa",
                        name: "Chest Bag"
                    }, {
                        id: 31,
                        day: P.BAG21D,
                        night: P.BAG21N,
                        rarity: RARITY.REIDITE,
                        author: "Starve.io ",
                        name: "Reidite Carrier"
                    }, {
                        id: 18,
                        day: P.BAG11D,
                        night: P.BAG11N,
                        rarity: RARITY.REIDITE,
                        author: "Winter",
                        name: "Lava Bag"
                    }, {
                        id: 49,
                        day: P.BAG48D,
                        night: P.BAG48N,
                        rarity: RARITY.REIDITE,
                        author: "eogito",
                        name: "Lava Bag 2"
                    }, {
                        id: 36,
                        day: P.BAG35D,
                        night: P.BAG35N,
                        rarity: RARITY.REIDITE,
                        author: "eogito",
                        name: "Dragon Bag"
                    }, {
                        id: 55,
                        day: P.BAG54D,
                        night: P.BAG54N,
                        rarity: RARITY.REIDITE,
                        author: "eogito",
                        name: "Winter Ice Bag"
                    }, {
                        id: 26,
                        day: P.BAG28D,
                        night: P.BAG28N,
                        rarity: RARITY.REIDITE,
                        author: "eogito",
                        name: "Reidite Pickaxe Bag"
                    }, {
                        id: 27,
                        day: P.BAG29D,
                        night: P.BAG29N,
                        rarity: RARITY.REIDITE,
                        author: "Starve.io",
                        name: "Octopus Bowl"
                    }, {
                        id: 34,
                        day: P.BAG33D,
                        night: P.BAG33N,
                        rarity: RARITY.REIDITE,
                        author: "Taco4Life",
                        name: "Cave Bag"
                    }, {
                        id: 42,
                        day: P.BAG41D,
                        night: P.BAG41N,
                        rarity: RARITY.REIDITE,
                        author: "eogito",
                        name: "Bag with Reidite Swords"
                    }, {
                        id: 63,
                        day: P.BAG62D,
                        night: P.BAG62N,
                        rarity: RARITY.REIDITE,
                        author: "eogito",
                        name: "Engineer Bag"
                    }],
                    CRATE: [{
                        id: 0,
                        day: P.CRATE7D,
                        night: P.CRATE7N,
                        rarity: RARITY.FREE,
                        author: "eogito",
                        name: "Wooden Dead Box"
                    }, {
                        id: 1,
                        day: P.CRATE6D,
                        night: P.CRATE6N,
                        rarity: RARITY.FREE,
                        author: "eogito",
                        name: "Hidden item"
                    }, {
                        id: 2,
                        day: P.CRATE1D,
                        night: P.CRATE1N,
                        rarity: RARITY.WOOD,
                        author: "eogito",
                        name: "Wooden Box 1"
                    }, {
                        id: 3,
                        day: P.CRATE2D,
                        night: P.CRATE2N,
                        rarity: RARITY.WOOD,
                        author: "eogito",
                        name: "Wooden Box 2"
                    }, {
                        id: 4,
                        day: P.CRATE3D,
                        night: P.CRATE3N,
                        rarity: RARITY.WOOD,
                        author: "eogito",
                        name: "Wooden Box 3"
                    }, {
                        id: 5,
                        day: P.CRATE4D,
                        night: P.CRATE4N,
                        rarity: RARITY.WOOD,
                        author: "eogito",
                        name: "Broken Wooden Box"
                    }, {
                        id: 6,
                        day: P.CRATE5D,
                        night: P.CRATE5N,
                        rarity: RARITY.WOOD,
                        author: "eogito",
                        name: "Wooden Box"
                    }, {
                        id: 7,
                        day: P.CRATE8D,
                        night: P.CRATE8N,
                        rarity: RARITY.WOOD,
                        author: "eogito",
                        name: "Wooden Battle Box"
                    }, {
                        id: 8,
                        day: P.CRATE9D,
                        night: P.CRATE9N,
                        rarity: RARITY.WOOD,
                        author: "eogito",
                        name: "Wooden Box with a Cross"
                    }, {
                        id: 9,
                        day: P.CRATE10D,
                        night: P.CRATE10N,
                        rarity: RARITY.WOOD,
                        author: "eogito",
                        name: "Wooden Box with Bubbles"
                    }, {
                        id: 10,
                        day: P.CRATE11D,
                        night: P.CRATE11N,
                        rarity: RARITY.WOOD,
                        author: "eogito",
                        name: "Wooden Box with Eyes"
                    }, {
                        id: 11,
                        day: P.CRATE12D,
                        night: P.CRATE12N,
                        rarity: RARITY.WOOD,
                        author: "eogito",
                        name: "Dark Wooden Box"
                    }, {
                        id: 38,
                        day: P.CRATE39D,
                        night: P.CRATE39N,
                        rarity: RARITY.WOOD,
                        author: "Weddlz",
                        name: "Noob Box"
                    }, {
                        id: 12,
                        day: P.CRATE13D,
                        night: P.CRATE13N,
                        rarity: RARITY.STONE,
                        author: "eogito",
                        name: "Wooden and Stone Box"
                    }, {
                        id: 14,
                        day: P.CRATE19D,
                        night: P.CRATE19N,
                        rarity: RARITY.STONE,
                        author: "pizza wa",
                        name: "Star Box 1"
                    }, {
                        id: 15,
                        day: P.CRATE20D,
                        night: P.CRATE20N,
                        rarity: RARITY.STONE,
                        author: "pizza wa",
                        name: "Star Box 2"
                    }, {
                        id: 27,
                        day: P.CRATE29D,
                        night: P.CRATE29N,
                        rarity: RARITY.STONE,
                        author: "eogito",
                        name: "Flower Box"
                    }, {
                        id: 46,
                        day: P.CRATE47D,
                        night: P.CRATE47N,
                        rarity: RARITY.STONE,
                        author: "MADBalgouthi",
                        name: "Blue Box"
                    }, {
                        id: 19,
                        day: P.CRATE21D,
                        night: P.CRATE21N,
                        rarity: RARITY.GOLD,
                        author: "Starve.io",
                        name: "Beehive"
                    }, {
                        id: 13,
                        day: P.CRATE14D,
                        night: P.CRATE14N,
                        rarity: RARITY.GOLD,
                        author: "eogito",
                        name: "Wooden and Golden Box"
                    }, {
                        id: 21,
                        day: P.CRATE22D,
                        night: P.CRATE22N,
                        rarity: RARITY.GOLD,
                        author: "Starve.io",
                        name: "Gravestone"
                    }, {
                        id: 25,
                        day: P.CRATE26D,
                        night: P.CRATE26N,
                        rarity: RARITY.GOLD,
                        author: "Communist",
                        name: "Sky Box"
                    }, {
                        id: 29,
                        day: P.CRATE30D,
                        night: P.CRATE30N,
                        rarity: RARITY.GOLD,
                        author: "Winter",
                        name: "Golden Box"
                    }, {
                        id: 34,
                        day: P.CRATE35D,
                        night: P.CRATE35N,
                        rarity: RARITY.GOLD,
                        author: "Communist",
                        name: "Water Crate"
                    }, {
                        id: 35,
                        day: P.CRATE36D,
                        night: P.CRATE36N,
                        rarity: RARITY.GOLD,
                        author: "Communist",
                        name: "Glass Crate"
                    }, {
                        id: 16,
                        day: P.CRATE15D,
                        night: P.CRATE15N,
                        rarity: RARITY.DIAMOND,
                        author: "eogito",
                        name: "Wooden and Diamond Box"
                    }, {
                        id: 18,
                        day: P.CRATE18D,
                        night: P.CRATE18N,
                        rarity: RARITY.DIAMOND,
                        author: "Starve.io",
                        name: "Don't Hit Me"
                    }, {
                        id: 26,
                        day: P.CRATE27D,
                        night: P.CRATE27N,
                        rarity: RARITY.DIAMOND,
                        author: "Starve.io",
                        name: "Underwater Box"
                    }, {
                        id: 31,
                        day: P.CRATE32D,
                        night: P.CRATE32N,
                        rarity: RARITY.DIAMOND,
                        author: "Communist",
                        name: "Items Pile"
                    }, {
                        id: 32,
                        day: P.CRATE33D,
                        night: P.CRATE33N,
                        rarity: RARITY.DIAMOND,
                        author: "eogito",
                        name: "Cake Box"
                    }, {
                        id: 33,
                        day: P.CRATE34D,
                        night: P.CRATE34N,
                        rarity: RARITY.DIAMOND,
                        author: "eogito",
                        name: "Christmas Cake Box"
                    }, {
                        id: 36,
                        day: P.CRATE37D,
                        night: P.CRATE37N,
                        rarity: RARITY.DIAMOND,
                        author: "Fukss",
                        name: "Crab Box"
                    }, {
                        id: 42,
                        day: P.CRATE43D,
                        night: P.CRATE43N,
                        rarity: RARITY.DIAMOND,
                        author: "MADBalgouthi",
                        name: "Fishing Box"
                    }, {
                        id: 22,
                        day: P.CRATE23D,
                        night: P.CRATE23N,
                        rarity: RARITY.AMETHYST,
                        author: "Starve.io",
                        name: "Let me out of here"
                    }, {
                        id: 17,
                        day: P.CRATE16D,
                        night: P.CRATE16N,
                        rarity: RARITY.AMETHYST,
                        author: "eogito",
                        name: "Wooden and Amethyst Box"
                    }, {
                        id: 24,
                        day: P.CRATE25D,
                        night: P.CRATE25N,
                        rarity: RARITY.AMETHYST,
                        author: "Starve.io",
                        name: "Aquarium"
                    }, {
                        id: 28,
                        day: P.CRATE28D,
                        night: P.CRATE28N,
                        rarity: RARITY.AMETHYST,
                        author: "eogito",
                        name: "Gift Box"
                    }, {
                        id: 40,
                        day: P.CRATE41D,
                        night: P.CRATE41N,
                        rarity: RARITY.AMETHYST,
                        author: "MADBalgouthi",
                        name: "Open Watermelon Box"
                    }, {
                        id: 41,
                        day: P.CRATE42D,
                        night: P.CRATE42N,
                        rarity: RARITY.AMETHYST,
                        author: "MADBalgouthi",
                        name: "Watermelon Box"
                    }, {
                        id: 39,
                        day: P.CRATE40D,
                        night: P.CRATE40N,
                        rarity: RARITY.AMETHYST,
                        author: "Taco4Life",
                        name: "Thornbush Box"
                    }, {
                        id: 43,
                        day: P.CRATE44D,
                        night: P.CRATE44N,
                        rarity: RARITY.AMETHYST,
                        author: "eogito",
                        name: "Rabbit in the Box"
                    }, {
                        id: 47,
                        day: P.CRATE48D,
                        night: P.CRATE48N,
                        rarity: RARITY.AMETHYST,
                        author: "Taco4Life",
                        name: "Garlic Plot"
                    }, {
                        id: 48,
                        day: P.CRATE49D,
                        night: P.CRATE49N,
                        rarity: RARITY.AMETHYST,
                        author: "Taco4Life",
                        name: "Pumpkin Plot"
                    }, {
                        id: 45,
                        day: P.CRATE46D,
                        night: P.CRATE46N,
                        rarity: RARITY.REIDITE,
                        author: "eogito",
                        name: "Autumn Box"
                    }, {
                        id: 44,
                        day: P.CRATE45D,
                        night: P.CRATE45N,
                        rarity: RARITY.REIDITE,
                        author: "eogito",
                        name: "Winter Box"
                    }, {
                        id: 20,
                        day: P.CRATE17D,
                        night: P.CRATE17N,
                        rarity: RARITY.REIDITE,
                        author: "eogito",
                        name: "Metal and Reidite Box"
                    }, {
                        id: 23,
                        day: P.CRATE24D,
                        night: P.CRATE24N,
                        rarity: RARITY.REIDITE,
                        author: "Starve.io",
                        name: "Kraken Box"
                    }, {
                        id: 30,
                        day: P.CRATE31D,
                        night: P.CRATE31N,
                        rarity: RARITY.REIDITE,
                        author: "Winter",
                        name: "Lava Box"
                    }, {
                        id: 37,
                        day: P.CRATE38D,
                        night: P.CRATE38N,
                        rarity: RARITY.REIDITE,
                        author: "eogito",
                        name: "Lava Box 2"
                    }, {
                        id: 49,
                        day: P.CRATE50D,
                        night: P.CRATE50N,
                        rarity: RARITY.REIDITE,
                        author: "Starve.io",
                        name: "Box of the Rabbit"
                    }, {
                        id: 50,
                        day: P.CRATE51D,
                        night: P.CRATE51N,
                        rarity: RARITY.REIDITE,
                        author: "Starve.io",
                        name: "Box of the Wolf"
                    }, {
                        id: 51,
                        day: P.CRATE52D,
                        night: P.CRATE52N,
                        rarity: RARITY.REIDITE,
                        author: "Starve.io",
                        name: "Box of the Spider"
                    }, {
                        id: 52,
                        day: P.CRATE53D,
                        night: P.CRATE53N,
                        rarity: RARITY.REIDITE,
                        author: "Starve.io",
                        name: "Box of the Hawk"
                    }, {
                        id: 53,
                        day: P.CRATE54D,
                        night: P.CRATE54N,
                        rarity: RARITY.REIDITE,
                        author: "Starve.io",
                        name: "Box of the Bear"
                    }, {
                        id: 54,
                        day: P.CRATE55D,
                        night: P.CRATE55N,
                        rarity: RARITY.REIDITE,
                        author: "Starve.io",
                        name: "Box of the Fox"
                    }, {
                        id: 55,
                        day: P.CRATE56D,
                        night: P.CRATE56N,
                        rarity: RARITY.REIDITE,
                        author: "Starve.io",
                        name: "Box of the Baby Mammoth"
                    }, {
                        id: 56,
                        day: P.CRATE57D,
                        night: P.CRATE57N,
                        rarity: RARITY.REIDITE,
                        author: "Starve.io",
                        name: "Box of the Mammoth"
                    }, {
                        id: 57,
                        day: P.CRATE58D,
                        night: P.CRATE58N,
                        rarity: RARITY.REIDITE,
                        author: "Starve.io",
                        name: "Box of the Sandworm"
                    }, {
                        id: 58,
                        day: P.CRATE59D,
                        night: P.CRATE59N,
                        rarity: RARITY.REIDITE,
                        author: "Starve.io",
                        name: "Box of the Vulture"
                    }, {
                        id: 59,
                        day: P.CRATE60D,
                        night: P.CRATE60N,
                        rarity: RARITY.REIDITE,
                        author: "Starve.io",
                        name: "Box of the Kraken"
                    }, {
                        id: 60,
                        day: P.CRATE61D,
                        night: P.CRATE61N,
                        rarity: RARITY.REIDITE,
                        author: "Starve.io",
                        name: "Box of the Piranha"
                    }, {
                        id: 61,
                        day: P.CRATE62D,
                        night: P.CRATE62N,
                        rarity: RARITY.REIDITE,
                        author: "Starve.io",
                        name: "Box of the Baby Dragon"
                    }, {
                        id: 62,
                        day: P.CRATE63D,
                        night: P.CRATE63N,
                        rarity: RARITY.REIDITE,
                        author: "Starve.io",
                        name: "Box of the Baby Lava"
                    }, {
                        id: 63,
                        day: P.CRATE64D,
                        night: P.CRATE64N,
                        rarity: RARITY.REIDITE,
                        author: "Starve.io",
                        name: "Box of the Dragon"
                    }, {
                        id: 64,
                        day: P.CRATE65D,
                        night: P.CRATE65N,
                        rarity: RARITY.REIDITE,
                        author: "Starve.io",
                        name: "Box of the Penguin"
                    }, {
                        id: 65,
                        day: P.CRATE66D,
                        night: P.CRATE66N,
                        rarity: RARITY.REIDITE,
                        author: "Starve.io",
                        name: "Box of the Lava Dragon"
                    }, {
                        id: 66,
                        day: P.CRATE67D,
                        night: P.CRATE67N,
                        rarity: RARITY.REIDITE,
                        author: "Starve.io",
                        name: "Box of the Boar"
                    }, {
                        id: 67,
                        day: P.CRATE68D,
                        night: P.CRATE68N,
                        rarity: RARITY.REIDITE,
                        author: "Starve.io",
                        name: "Box of the Fire mob"
                    }, {
                        id: 68,
                        day: P.CRATE69D,
                        night: P.CRATE69N,
                        rarity: RARITY.REIDITE,
                        author: "Starve.io",
                        name: "Box of the Crab"
                    }, {
                        id: 69,
                        day: P.CRATE70D,
                        night: P.CRATE70N,
                        rarity: RARITY.REIDITE,
                        author: "Starve.io",
                        name: "Box of the King Crab"
                    }, {
                        id: 70,
                        day: P.CRATE71D,
                        night: P.CRATE71N,
                        rarity: RARITY.GOLD,
                        author: "CrysTal",
                        name: "Crystal Sky Box"
                    }, {
                        id: 71,
                        day: P.CRATE72D,
                        night: P.CRATE72N,
                        rarity: RARITY.REIDITE,
                        author: "eogito",
                        name: "Dragon Box"
                    }],
                    BOOK: [{
                        id: 0,
                        day: P.BOOK0D,
                        night: P.BOOK0N,
                        rarity: RARITY.FREE,
                        author: "Starve.io",
                        name: "Book 1"
                    }, {
                        id: 1,
                        day: P.BOOK3D,
                        night: P.BOOK3N,
                        rarity: RARITY.WOOD,
                        author: "eogito",
                        name: "Book 2"
                    }, {
                        id: 2,
                        day: P.BOOK4D,
                        night: P.BOOK4N,
                        rarity: RARITY.WOOD,
                        author: "eogito",
                        name: "Book 3"
                    }, {
                        id: 3,
                        day: P.BOOK5D,
                        night: P.BOOK5N,
                        rarity: RARITY.WOOD,
                        author: "eogito",
                        name: "Book 4"
                    }, {
                        id: 4,
                        day: P.BOOK6D,
                        night: P.BOOK6N,
                        rarity: RARITY.WOOD,
                        author: "eogito",
                        name: "Damaged Book 1"
                    }, {
                        id: 18,
                        day: P.BOOK18D,
                        night: P.BOOK18N,
                        rarity: RARITY.WOOD,
                        author: "SeveR",
                        name: "Damaged Book 2"
                    }, {
                        id: 5,
                        day: P.BOOK1D,
                        night: P.BOOK1N,
                        rarity: RARITY.STONE,
                        author: "Doctorpus",
                        name: "Scroll"
                    }, {
                        id: 6,
                        day: P.BOOK2D,
                        night: P.BOOK2N,
                        rarity: RARITY.STONE,
                        author: "Doctorpus",
                        name: "Clipboard"
                    }, {
                        id: 7,
                        day: P.BOOK7D,
                        night: P.BOOK7N,
                        rarity: RARITY.STONE,
                        author: "eogito",
                        name: "Seed Book"
                    }, {
                        id: 20,
                        day: P.BOOK20D,
                        night: P.BOOK20N,
                        rarity: RARITY.STONE,
                        author: "Taco4Life",
                        name: "Camo Book"
                    }, {
                        id: 24,
                        day: P.BOOK24D,
                        night: P.BOOK24N,
                        rarity: RARITY.STONE,
                        author: "Communist",
                        name: "Stone Tablet"
                    }, {
                        id: 10,
                        day: P.BOOK13D,
                        night: P.BOOK13N,
                        rarity: RARITY.GOLD,
                        author: "pizza wa",
                        name: "Star Book"
                    }, {
                        id: 8,
                        day: P.BOOK9D,
                        night: P.BOOK9N,
                        rarity: RARITY.GOLD,
                        author: "eogito",
                        name: "Gold Book"
                    }, {
                        id: 15,
                        day: P.BOOK15D,
                        night: P.BOOK15N,
                        rarity: RARITY.GOLD,
                        author: "Starve.io",
                        name: "Old Mysterious Paper"
                    }, {
                        id: 17,
                        day: P.BOOK17D,
                        night: P.BOOK17N,
                        rarity: RARITY.GOLD,
                        author: "Starve.io",
                        name: "Gold Engraving"
                    }, {
                        id: 25,
                        day: P.BOOK25D,
                        night: P.BOOK25N,
                        rarity: RARITY.GOLD,
                        author: "fatant",
                        name: "Ant Book"
                    }, {
                        id: 32,
                        day: P.BOOK32D,
                        night: P.BOOK32N,
                        rarity: RARITY.GOLD,
                        author: "eogito",
                        name: "Mummy Book"
                    }, {
                        id: 37,
                        day: P.BOOK39D,
                        night: P.BOOK39N,
                        rarity: RARITY.GOLD,
                        author: "Taco4Life",
                        name: "Garlic Book"
                    }, {
                        id: 38,
                        day: P.BOOK38D,
                        night: P.BOOK38N,
                        rarity: RARITY.GOLD,
                        author: "Taco4Life",
                        name: "Pumpkin Book"
                    }, {
                        id: 39,
                        day: P.BOOK40D,
                        night: P.BOOK40N,
                        rarity: RARITY.GOLD,
                        author: "Starve.io",
                        name: "Christmas Tree Book"
                    }, {
                        id: 11,
                        day: P.BOOK10D,
                        night: P.BOOK10N,
                        rarity: RARITY.DIAMOND,
                        author: "eogito",
                        name: "Diamond Book"
                    }, {
                        id: 9,
                        day: P.BOOK8D,
                        night: P.BOOK8N,
                        rarity: RARITY.DIAMOND,
                        author: "eogito",
                        name: "Obscure Book"
                    }, {
                        id: 16,
                        day: P.BOOK16D,
                        night: P.BOOK16N,
                        rarity: RARITY.DIAMOND,
                        author: "Starve.io",
                        name: "Rolled Parchment"
                    }, {
                        id: 22,
                        day: P.BOOK22D,
                        night: P.BOOK22N,
                        rarity: RARITY.DIAMOND,
                        author: "eogito",
                        name: "Cake Book"
                    }, {
                        id: 23,
                        day: P.BOOK23D,
                        night: P.BOOK23N,
                        rarity: RARITY.DIAMOND,
                        author: "eogito",
                        name: "Christmas Cake Book"
                    }, {
                        id: 30,
                        day: P.BOOK30D,
                        night: P.BOOK30N,
                        rarity: RARITY.DIAMOND,
                        author: "MADBalgouthi",
                        name: "Fish Book"
                    }, {
                        id: 31,
                        day: P.BOOK31D,
                        night: P.BOOK31N,
                        rarity: RARITY.DIAMOND,
                        author: "CrysTal",
                        name: "Once upon a time"
                    }, {
                        id: 13,
                        day: P.BOOK11D,
                        night: P.BOOK11N,
                        rarity: RARITY.AMETHYST,
                        author: "eogito",
                        name: "Amethyst Book"
                    }, {
                        id: 28,
                        day: P.BOOK28D,
                        night: P.BOOK28N,
                        rarity: RARITY.AMETHYST,
                        author: "eogito",
                        name: "Paint Pallet"
                    }, {
                        id: 29,
                        day: P.BOOK29D,
                        night: P.BOOK29N,
                        rarity: RARITY.AMETHYST,
                        author: "CrysTal",
                        name: "Watermelon Book"
                    }, {
                        id: 27,
                        day: P.BOOK27D,
                        night: P.BOOK27N,
                        rarity: RARITY.AMETHYST,
                        author: "Taco4Life",
                        name: "Thornbush Book"
                    }, {
                        id: 35,
                        day: P.BOOK35D,
                        night: P.BOOK35N,
                        rarity: RARITY.AMETHYST,
                        author: "Taco4Life",
                        name: "Menu"
                    }, {
                        id: 36,
                        day: P.BOOK36D,
                        night: P.BOOK36N,
                        rarity: RARITY.AMETHYST,
                        author: "CrysTal",
                        name: "Lover Letter"
                    }, {
                        id: 40,
                        day: P.BOOK41D,
                        night: P.BOOK41N,
                        rarity: RARITY.AMETHYST,
                        author: "Starve.io",
                        name: "Fresh-Baked Cookies"
                    }, {
                        id: 41,
                        day: P.BOOK42D,
                        night: P.BOOK42N,
                        rarity: RARITY.AMETHYST,
                        author: "Starve.io",
                        name: "Inside, there is just a book."
                    }, {
                        id: 33,
                        day: P.BOOK33D,
                        night: P.BOOK33N,
                        rarity: RARITY.REIDITE,
                        author: "eogito",
                        name: "Winter Book"
                    }, {
                        id: 34,
                        day: P.BOOK34D,
                        night: P.BOOK34N,
                        rarity: RARITY.REIDITE,
                        author: "eogito",
                        name: "Autumn Book"
                    }, {
                        id: 14,
                        day: P.BOOK12D,
                        night: P.BOOK12N,
                        rarity: RARITY.REIDITE,
                        author: "eogito",
                        name: "Reidite Book"
                    }, {
                        id: 12,
                        day: P.BOOK14D,
                        night: P.BOOK14N,
                        rarity: RARITY.REIDITE,
                        author: "Winter",
                        name: "Lava Book"
                    }, {
                        id: 26,
                        day: P.BOOK26D,
                        night: P.BOOK26N,
                        rarity: RARITY.REIDITE,
                        author: "eogito",
                        name: "Lava Book 2"
                    }, {
                        id: 19,
                        day: P.BOOK19D,
                        night: P.BOOK19N,
                        rarity: RARITY.REIDITE,
                        author: "Winter",
                        name: "Ocean Mystery"
                    }, {
                        id: 21,
                        day: P.BOOK21D,
                        night: P.BOOK21N,
                        rarity: RARITY.REIDITE,
                        author: "eogito",
                        name: "Dragon Book"
                    }, {
                        id: 42,
                        day: P.BOOK43D,
                        night: P.BOOK43N,
                        rarity: RARITY.REIDITE,
                        author: "eogito",
                        name: "Engineer Book"
                    }, {
                        id: 43,
                        day: P.BOOK44D,
                        night: P.BOOK44N,
                        rarity: RARITY.REIDITE,
                        author: "eogito",
                        name: "Nightmare Book"
                    }, {
                        id: 44,
                        day: P.BOOK45D,
                        night: P.BOOK45N,
                        rarity: RARITY.REIDITE,
                        author: "aloner",
                        name: "Mystery Book"
                    }],
                    ACCESSORY: [{
                        id: 0,
                        day: P.ACCESSORY0D,
                        night: P.ACCESSORY0D,
                        rarity: RARITY.FREE,
                        author: "Starve.io",
                        name: "Nothing"
                    }, {
                        id: 2,
                        day: P.ACCESSORY4D,
                        night: P.ACCESSORY4N,
                        rarity: RARITY.FREE,
                        author: "Starve.io",
                        name: "Pink Cheeks"
                    }, {
                        id: 3,
                        day: P.ACCESSORY5D,
                        night: P.ACCESSORY5N,
                        rarity: RARITY.FREE,
                        author: "Starve.io",
                        name: "Heart"
                    }, {
                        id: 1,
                        day: P.ACCESSORY3D,
                        night: P.ACCESSORY3N,
                        rarity: RARITY.FREE,
                        author: "Starve.io",
                        name: "Bandage 1"
                    }, {
                        id: 4,
                        day: P.ACCESSORY6D,
                        night: P.ACCESSORY6N,
                        rarity: RARITY.FREE,
                        author: "Starve.io",
                        name: "Flower 1"
                    }, {
                        id: 5,
                        day: P.ACCESSORY8D,
                        night: P.ACCESSORY8N,
                        rarity: RARITY.WOOD,
                        author: "Starve.io",
                        name: "Bow 1"
                    }, {
                        id: 6,
                        day: P.ACCESSORY9D,
                        night: P.ACCESSORY9N,
                        rarity: RARITY.WOOD,
                        author: "eogito",
                        name: "Bandage 2"
                    }, {
                        id: 7,
                        day: P.ACCESSORY15D,
                        night: P.ACCESSORY15N,
                        rarity: RARITY.WOOD,
                        author: "Starve.io",
                        name: "Flower 2"
                    }, {
                        id: 8,
                        day: P.ACCESSORY10D,
                        night: P.ACCESSORY10N,
                        rarity: RARITY.WOOD,
                        author: "eogito",
                        name: "Bandage 3"
                    }, {
                        id: 36,
                        day: P.ACCESSORY36D,
                        night: P.ACCESSORY36N,
                        rarity: RARITY.WOOD,
                        author: "eogito",
                        name: "Foliage"
                    }, {
                        id: 59,
                        day: P.ACCESSORY47D,
                        night: P.ACCESSORY47N,
                        rarity: RARITY.WOOD,
                        author: "eogito",
                        name: "Peaceful"
                    }, {
                        id: 67,
                        day: P.ACCESSORY55D,
                        night: P.ACCESSORY55N,
                        rarity: RARITY.WOOD,
                        author: "pizza wa",
                        name: "Sparkles"
                    }, {
                        id: 68,
                        day: P.ACCESSORY56D,
                        night: P.ACCESSORY56N,
                        rarity: RARITY.WOOD,
                        author: "pizza wa",
                        name: "Luxury"
                    }, {
                        id: 69,
                        day: P.ACCESSORY57D,
                        night: P.ACCESSORY57N,
                        rarity: RARITY.WOOD,
                        author: "pizza wa",
                        name: "Snow Flakes Crown"
                    }, {
                        id: 17,
                        day: P.ACCESSORY17D,
                        night: P.ACCESSORY17N,
                        rarity: RARITY.STONE,
                        author: "Starve.io",
                        name: "Glasses 1"
                    }, {
                        id: 10,
                        day: P.ACCESSORY7D,
                        night: P.ACCESSORY7N,
                        rarity: RARITY.STONE,
                        author: "Starve.io",
                        name: "Bow 2"
                    }, {
                        id: 11,
                        day: P.ACCESSORY13D,
                        night: P.ACCESSORY13N,
                        rarity: RARITY.STONE,
                        author: "pizza wa",
                        name: "Little Stars"
                    }, {
                        id: 12,
                        day: P.ACCESSORY11D,
                        night: P.ACCESSORY11N,
                        rarity: RARITY.STONE,
                        author: "eogito",
                        name: "Pirate Eye Patch 1"
                    }, {
                        id: 44,
                        day: P.ACCESSORY44D,
                        night: P.ACCESSORY44N,
                        rarity: RARITY.STONE,
                        author: "Taco4Life",
                        name: "Pirate Eye Patch 2"
                    }, {
                        id: 23,
                        day: P.ACCESSORY23D,
                        night: P.ACCESSORY23N,
                        rarity: RARITY.STONE,
                        author: "Starve.io",
                        name: "Clown nose"
                    }, {
                        id: 16,
                        day: P.ACCESSORY2D,
                        night: P.ACCESSORY2N,
                        rarity: RARITY.STONE,
                        author: "Starve.io",
                        name: "Eye Patch"
                    }, {
                        id: 30,
                        day: P.ACCESSORY30D,
                        night: P.ACCESSORY30N,
                        rarity: RARITY.STONE,
                        author: "eogito",
                        name: "Flower 3"
                    }, {
                        id: 38,
                        day: P.ACCESSORY38D,
                        night: P.ACCESSORY38N,
                        rarity: RARITY.STONE,
                        author: "Winter",
                        name: "False Nose"
                    }, {
                        id: 74,
                        day: P.ACCESSORY62D,
                        night: P.ACCESSORY62N,
                        rarity: RARITY.STONE,
                        author: "Starve.io",
                        name: "Red Cloth"
                    }, {
                        id: 75,
                        day: P.ACCESSORY63D,
                        night: P.ACCESSORY63N,
                        rarity: RARITY.STONE,
                        author: "Starve.io",
                        name: "Blue Cloth"
                    }, {
                        id: 79,
                        day: P.ACCESSORY67D,
                        night: P.ACCESSORY67N,
                        rarity: RARITY.STONE,
                        author: "Starve.io",
                        name: "Transparent Mask"
                    }, {
                        id: 89,
                        day: P.ACCESSORY77D,
                        night: P.ACCESSORY77N,
                        rarity: RARITY.STONE,
                        author: "Anyone want to play?",
                        name: "Starve.io Anime"
                    }, {
                        id: 94,
                        day: P.ACCESSORY78D,
                        night: P.ACCESSORY78N,
                        rarity: RARITY.STONE,
                        author: "Ant",
                        name: "Hero Mask"
                    }, {
                        id: 15,
                        day: P.ACCESSORY16D,
                        night: P.ACCESSORY16N,
                        rarity: RARITY.GOLD,
                        author: "Starve.io",
                        name: "Star Glasses"
                    }, {
                        id: 21,
                        day: P.ACCESSORY21D,
                        night: P.ACCESSORY21N,
                        rarity: RARITY.GOLD,
                        author: "Starve.io",
                        name: "Great-aunt's Glasses"
                    }, {
                        id: 24,
                        day: P.ACCESSORY24D,
                        night: P.ACCESSORY24N,
                        rarity: RARITY.GOLD,
                        author: "Starve.io",
                        name: "Little Starver"
                    }, {
                        id: 22,
                        day: P.ACCESSORY22D,
                        night: P.ACCESSORY22N,
                        rarity: RARITY.GOLD,
                        author: "Starve.io",
                        name: "Little Glasses"
                    }, {
                        id: 13,
                        day: P.ACCESSORY14D,
                        night: P.ACCESSORY14N,
                        rarity: RARITY.GOLD,
                        author: "Starve.io",
                        name: "Flower Chain"
                    }, {
                        id: 29,
                        day: P.ACCESSORY29D,
                        night: P.ACCESSORY29N,
                        rarity: RARITY.GOLD,
                        author: "eogito",
                        name: "Horns"
                    }, {
                        id: 31,
                        day: P.ACCESSORY31D,
                        night: P.ACCESSORY31N,
                        rarity: RARITY.GOLD,
                        author: "eogito",
                        name: "Golden Flower"
                    }, {
                        id: 40,
                        day: P.ACCESSORY40D,
                        night: P.ACCESSORY40N,
                        rarity: RARITY.GOLD,
                        author: "pizza wa",
                        name: "Sleeping Mask"
                    }, {
                        id: 57,
                        day: P.ACCESSORY50D,
                        night: P.ACCESSORY50N,
                        rarity: RARITY.GOLD,
                        author: "Taco4Life",
                        name: "Fish on your head"
                    }, {
                        id: 58,
                        day: P.ACCESSORY46D,
                        night: P.ACCESSORY46N,
                        rarity: RARITY.GOLD,
                        author: "eogito",
                        name: "Rose"
                    }, {
                        id: 91,
                        day: P.ACCESSORY80D,
                        night: P.ACCESSORY80N,
                        rarity: RARITY.GOLD,
                        author: "upfiz",
                        name: "Grey Scarf"
                    }, {
                        id: 92,
                        day: P.ACCESSORY81D,
                        night: P.ACCESSORY81N,
                        rarity: RARITY.GOLD,
                        author: "upfiz",
                        name: "Black Scarf"
                    }, {
                        id: 93,
                        day: P.ACCESSORY82D,
                        night: P.ACCESSORY82N,
                        rarity: RARITY.GOLD,
                        author: "upfiz",
                        name: "Skull Mask"
                    }, {
                        id: 9,
                        day: P.ACCESSORY1D,
                        night: P.ACCESSORY1N,
                        rarity: RARITY.DIAMOND,
                        author: "Starve.io",
                        name: "Fancy Glasses"
                    }, {
                        id: 25,
                        day: P.ACCESSORY25D,
                        night: P.ACCESSORY25N,
                        rarity: RARITY.DIAMOND,
                        author: "Starve.io",
                        name: "Medecin Mask"
                    }, {
                        id: 14,
                        day: P.ACCESSORY12D,
                        night: P.ACCESSORY12N,
                        rarity: RARITY.DIAMOND,
                        author: "Starve.io",
                        name: "Mr. Mayor"
                    }, {
                        id: 19,
                        day: P.ACCESSORY19D,
                        night: P.ACCESSORY19N,
                        rarity: RARITY.DIAMOND,
                        author: "Starve.io",
                        name: "Sunglasses 2"
                    }, {
                        id: 28,
                        day: P.ACCESSORY28D,
                        night: P.ACCESSORY28N,
                        rarity: RARITY.DIAMOND,
                        author: "pizza wa",
                        name: "Starfish"
                    }, {
                        id: 37,
                        day: P.ACCESSORY37D,
                        night: P.ACCESSORY37N,
                        rarity: RARITY.DIAMOND,
                        author: "eogito",
                        name: "Berry"
                    }, {
                        id: 39,
                        day: P.ACCESSORY39D,
                        night: P.ACCESSORY39N,
                        rarity: RARITY.DIAMOND,
                        author: "eogito",
                        name: "Flake"
                    }, {
                        id: 43,
                        day: P.ACCESSORY43D,
                        night: P.ACCESSORY43N,
                        rarity: RARITY.DIAMOND,
                        author: "eogito",
                        name: "Leaf "
                    }, {
                        id: 61,
                        day: P.ACCESSORY49D,
                        night: P.ACCESSORY49N,
                        rarity: RARITY.DIAMOND,
                        author: "Starve.io",
                        name: "A sword in your head"
                    }, {
                        id: 62,
                        day: P.ACCESSORY51D,
                        night: P.ACCESSORY51N,
                        rarity: RARITY.DIAMOND,
                        author: "Starve.io",
                        name: "Winter Scarf"
                    }, {
                        id: 64,
                        day: P.ACCESSORY53D,
                        night: P.ACCESSORY53N,
                        rarity: RARITY.DIAMOND,
                        author: "eogito",
                        name: "Winter Scarf 2"
                    }, {
                        id: 66,
                        day: P.ACCESSORY54D,
                        night: P.ACCESSORY54N,
                        rarity: RARITY.DIAMOND,
                        author: "eogito",
                        name: "Winter Scarf 3"
                    }, {
                        id: 70,
                        day: P.ACCESSORY58D,
                        night: P.ACCESSORY58N,
                        rarity: RARITY.DIAMOND,
                        author: "Starve.io",
                        name: "Mask with animal tracks"
                    }, {
                        id: 71,
                        day: P.ACCESSORY59D,
                        night: P.ACCESSORY59N,
                        rarity: RARITY.DIAMOND,
                        author: "Starve.io",
                        name: "Spring Mask"
                    }, {
                        id: 72,
                        day: P.ACCESSORY60D,
                        night: P.ACCESSORY60N,
                        rarity: RARITY.DIAMOND,
                        author: "Starve.io",
                        name: "Pink Mask"
                    }, {
                        id: 73,
                        day: P.ACCESSORY61D,
                        night: P.ACCESSORY61N,
                        rarity: RARITY.DIAMOND,
                        author: "Starve.io",
                        name: "Blue Mask"
                    }, {
                        id: 76,
                        day: P.ACCESSORY64D,
                        night: P.ACCESSORY64N,
                        rarity: RARITY.DIAMOND,
                        author: "Starve.io",
                        name: "Military Mask"
                    }, {
                        id: 77,
                        day: P.ACCESSORY65D,
                        night: P.ACCESSORY65N,
                        rarity: RARITY.DIAMOND,
                        author: "Starve.io",
                        name: "Orange Mask"
                    }, {
                        id: 78,
                        day: P.ACCESSORY66D,
                        night: P.ACCESSORY66N,
                        rarity: RARITY.DIAMOND,
                        author: "Starve.io",
                        name: "White and Red Points Mask"
                    }, {
                        id: 80,
                        day: P.ACCESSORY68D,
                        night: P.ACCESSORY68N,
                        rarity: RARITY.DIAMOND,
                        author: "Starve.io",
                        name: "Stick out your tongue Mask"
                    }, {
                        id: 81,
                        day: P.ACCESSORY69D,
                        night: P.ACCESSORY69N,
                        rarity: RARITY.DIAMOND,
                        author: "Starve.io",
                        name: "Two Teeth Mask"
                    }, {
                        id: 82,
                        day: P.ACCESSORY70D,
                        night: P.ACCESSORY70N,
                        rarity: RARITY.DIAMOND,
                        author: "Starve.io",
                        name: "Make-up Mask"
                    }, {
                        id: 83,
                        day: P.ACCESSORY71D,
                        night: P.ACCESSORY71N,
                        rarity: RARITY.DIAMOND,
                        author: "Starve.io",
                        name: "Sad Mask"
                    }, {
                        id: 84,
                        day: P.ACCESSORY72D,
                        night: P.ACCESSORY72N,
                        rarity: RARITY.DIAMOND,
                        author: "Starve.io",
                        name: "Happy Mask"
                    }, {
                        id: 90,
                        day: P.ACCESSORY79D,
                        night: P.ACCESSORY79N,
                        rarity: RARITY.DIAMOND,
                        author: "aloner",
                        name: "Blood"
                    }, {
                        id: 27,
                        day: P.ACCESSORY27D,
                        night: P.ACCESSORY27N,
                        rarity: RARITY.AMETHYST,
                        author: "Starve.io",
                        name: "Clown Face"
                    }, {
                        id: 20,
                        day: P.ACCESSORY20D,
                        night: P.ACCESSORY20N,
                        rarity: RARITY.AMETHYST,
                        author: "Starve.io",
                        name: "Sunglasses 3"
                    }, {
                        id: 32,
                        day: P.ACCESSORY32D,
                        night: P.ACCESSORY32N,
                        rarity: RARITY.AMETHYST,
                        author: "eogito",
                        name: "Engineer's Glasses"
                    }, {
                        id: 33,
                        day: P.ACCESSORY33D,
                        night: P.ACCESSORY33N,
                        rarity: RARITY.AMETHYST,
                        author: "eogito",
                        name: "Engineer's Monocle"
                    }, {
                        id: 34,
                        day: P.ACCESSORY34D,
                        night: P.ACCESSORY34N,
                        rarity: RARITY.AMETHYST,
                        author: "Starve.io",
                        name: "Mauve's butt"
                    }, {
                        id: 41,
                        day: P.ACCESSORY41D,
                        night: P.ACCESSORY41N,
                        rarity: RARITY.AMETHYST,
                        author: "eogito",
                        name: "Lapa Head"
                    }, {
                        id: 42,
                        day: P.ACCESSORY42D,
                        night: P.ACCESSORY42N,
                        rarity: RARITY.AMETHYST,
                        author: "eogito",
                        name: "Lapa Head "
                    }, {
                        id: 85,
                        day: P.ACCESSORY73D,
                        night: P.ACCESSORY73N,
                        rarity: RARITY.AMETHYST,
                        author: "Starve.io",
                        name: "Mask and Glasses"
                    }, {
                        id: 60,
                        day: P.ACCESSORY48D,
                        night: P.ACCESSORY48N,
                        rarity: RARITY.REIDITE,
                        author: "Starve.io",
                        name: "Jason"
                    }, {
                        id: 26,
                        day: P.ACCESSORY26D,
                        night: P.ACCESSORY26N,
                        rarity: RARITY.REIDITE,
                        author: "Starve.io",
                        name: "Devil Horns"
                    }, {
                        id: 18,
                        day: P.ACCESSORY18D,
                        night: P.ACCESSORY18N,
                        rarity: RARITY.REIDITE,
                        author: "Starve.io",
                        name: "Big Boss"
                    }, {
                        id: 35,
                        day: P.ACCESSORY35D,
                        night: P.ACCESSORY35N,
                        rarity: RARITY.REIDITE,
                        author: "Starve.io",
                        name: "Baby Kraken"
                    }, {
                        id: 63,
                        day: P.ACCESSORY52D,
                        night: P.ACCESSORY52N,
                        rarity: RARITY.REIDITE,
                        author: "eogito",
                        name: "Deer Antlers"
                    }, {
                        id: 65,
                        day: P.ACCESSORY45D,
                        night: P.ACCESSORY45N,
                        rarity: RARITY.REIDITE,
                        author: "eogito",
                        name: "Baby Dragon on your head"
                    }, {
                        id: 86,
                        day: P.ACCESSORY74D,
                        night: P.ACCESSORY74N,
                        rarity: RARITY.REIDITE,
                        author: "Starve.io",
                        name: "Gaz Mask and Glasses"
                    }, {
                        id: 87,
                        day: P.ACCESSORY75D,
                        night: P.ACCESSORY75N,
                        rarity: RARITY.REIDITE,
                        author: "Starve.io",
                        name: "Pink Gaz Mask and Glasses"
                    }, {
                        id: 88,
                        day: P.ACCESSORY76D,
                        night: P.ACCESSORY76N,
                        rarity: RARITY.REIDITE,
                        author: "eogito",
                        name: "Engineer Glasses"
                    }, {
                        id: 45,
                        day: P.LEVEL5D,
                        night: P.LEVEL5N,
                        rarity: RARITY.LEVEL,
                        author: "Starve.io",
                        name: "More than Level 5",
                        level: 5
                    }, {
                        id: 46,
                        day: P.LEVEL10D,
                        night: P.LEVEL10N,
                        rarity: RARITY.LEVEL,
                        author: "Starve.io",
                        name: "More than Level 10",
                        level: 10
                    }, {
                        id: 47,
                        day: P.LEVEL15D,
                        night: P.LEVEL15N,
                        rarity: RARITY.LEVEL,
                        author: "Starve.io",
                        name: "More than Level 15",
                        level: 15
                    }, {
                        id: 48,
                        day: P.LEVEL20D,
                        night: P.LEVEL20N,
                        rarity: RARITY.LEVEL,
                        author: "Starve.io",
                        name: "More than Level 20",
                        level: 20
                    }, {
                        id: 49,
                        day: P.LEVEL25D,
                        night: P.LEVEL25N,
                        rarity: RARITY.LEVEL,
                        author: "Starve.io",
                        name: "More than Level 25",
                        level: 25
                    }, {
                        id: 50,
                        day: P.LEVEL30D,
                        night: P.LEVEL30N,
                        rarity: RARITY.LEVEL,
                        author: "Starve.io",
                        name: "More than Level 30",
                        level: 30
                    }, {
                        id: 51,
                        day: P.LEVEL35D,
                        night: P.LEVEL35N,
                        rarity: RARITY.LEVEL,
                        author: "Starve.io",
                        name: "More than Level 35",
                        level: 35
                    }, {
                        id: 52,
                        day: P.LEVEL40D,
                        night: P.LEVEL40N,
                        rarity: RARITY.LEVEL,
                        author: "Starve.io",
                        name: "More than Level 40",
                        level: 40
                    }, {
                        id: 53,
                        day: P.LEVEL45D,
                        night: P.LEVEL45N,
                        rarity: RARITY.LEVEL,
                        author: "Starve.io",
                        name: "More than Level 45",
                        level: 45
                    }, {
                        id: 54,
                        day: P.LEVEL50D,
                        night: P.LEVEL50N,
                        rarity: RARITY.LEVEL,
                        author: "Starve.io",
                        name: "More than Level 50",
                        level: 50
                    }, {
                        id: 55,
                        day: P.LEVEL55D,
                        night: P.LEVEL55N,
                        rarity: RARITY.LEVEL,
                        author: "Starve.io",
                        name: "More than Level 55",
                        level: 55
                    }, {
                        id: 56,
                        day: P.LEVEL60D,
                        night: P.LEVEL60N,
                        rarity: RARITY.LEVEL,
                        author: "Starve.io",
                        name: "More than Level 60",
                        level: 60
                    }]
                },
                Ie[SPRITE.BODY] = [],
                Ie[ItemType.HAND] = [],
                Ie[SPRITE.CRATE] = [],
                Ie[ItemType.BOOK] = [],
                Ie[ItemType.BAG] = [],
                Ie[SPRITE.ACCESSORY] = [];
                for (var e = 0; e < Te.SKIN.length; e++)
                    Ie[SPRITE.BODY][e] = [Te.SKIN[e].day, Te.SKIN[e].night],
                    Ie[ItemType.HAND][e] = [Te.SKIN[e].dayHand, Te.SKIN[e].nightHand];
                for (e = 0; e < Te.BOOK.length; e++)
                    Ie[ItemType.BOOK][e] = [Te.BOOK[e].day, Te.BOOK[e].night];
                for (e = 0; e < Te.CRATE.length; e++)
                    Ie[SPRITE.CRATE][e] = [Te.CRATE[e].day, Te.CRATE[e].night];
                for (e = 0; e < Te.BAG.length; e++)
                    Ie[ItemType.BAG][e] = [Te.BAG[e].day, Te.BAG[e].night];
                for (e = 0; e < Te.ACCESSORY.length; e++)
                    Ie[SPRITE.ACCESSORY][e] = [Te.ACCESSORY[e].day, Te.ACCESSORY[e].night]
            }
            
            // window.Object.defineProperties = this.a;
            const {defineProperty: $i} = Object;
            function Zi(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                n.width = 185 * e,
                n.height = 164 * e,
                a.translate(0, 0);
                var I = function(e, t, i) {
                    var n = window.document.createElement("canvas")
                      , a = n.getContext("2d");
                    return n.width = 201 * e,
                    n.height = 164 * e,
                    a.translate(0, 5 * e),
                    a.globalAlpha = t ? .5 : 1,
                    Re(a, 100.5 * e, 82 * e, 74.92746655359852 * e),
                    he(a, i[0], i[0], 4 * e),
                    Re(a, 100.5 * e, 82 * e, 65.9417374971317 * e),
                    he(a, i[0], i[0], 4 * e),
                    a.translate(0, -5),
                    a.globalAlpha = 1,
                    Re(a, 100.5 * e, 82 * e, 74.92746655359852 * e),
                    he(a, i[1], i[3], 4 * e),
                    Re(a, 100.5 * e, 82 * e, 65.9417374971317 * e),
                    he(a, i[1], i[2], 4 * e),
                    Re(a, 100.5 * e, 82 * e, 35.9417374971317 * e),
                    he(a, i[1], i[2], 20 * e),
                    Re(a, 100.5 * e, 82 * e, 15.9417374971317 * e),
                    he(a, i[1], i[2], 6 * e),
                    n
                }(e, t, i);
                a.drawImage(I, -10 * e, 0 * e);
                I = qi(e, t, i, 0);
                a.drawImage(I, -83 * e, -40 * e);
                I = qi(e, t, i, window.Math.PI / 1.4);
                a.drawImage(I, -15 * e, -88 * e);
                I = qi(e, t, i, window.Math.PI / -1.4);
                return a.drawImage(I, 15 * e, -8 * e),
                n
            }
            function Ji(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                return n.width = 450 * e,
                n.height = 790 * e,
                a.translate(5 * e, 5 * e),
                a.globalAlpha = 0,
                Re(a, 178.5 * e, 172.828125 * e, 150 * e),
                he(a, void 0, i[0], 65 * e),
                Re(a, 178.5 * e, 172.828125 * e, 150 * e),
                he(a, void 0, i[0], 55 * e),
                a.closePath(),
                a.save(),
                a.translate(177 * e, 512.328125 * e),
                ye(a, -25 * e, -202.5 * e, 65 * e, 405 * e, 25 * e),
                a.restore(),
                he(a, i[0]),
                a.save(),
                a.translate(136 * e, 581.828125 * e),
                ye(a, -39 * e, -23 * e, 78 * e, 46 * e, 25 * e),
                a.restore(),
                he(a, i[0]),
                a.save(),
                a.translate(135.5 * e, 663.828125 * e),
                ye(a, -39.5 * e, -22 * e, 79 * e, 44 * e, 25 * e),
                a.restore(),
                he(a, i[0]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(114 * e, 594.828125 * e),
                a.bezierCurveTo(175 * e, 596.828125 * e, 163 * e, 596.828125 * e, 172 * e, 594.828125 * e),
                a.bezierCurveTo(171.5 * e, 633.828125 * e, 171.5 * e, 633.828125 * e, 171 * e, 672.828125 * e),
                a.bezierCurveTo(110 * e, 673.828125 * e, 140.5 * e, 673.328125 * e, 110 * e, 673.828125 * e),
                a.bezierCurveTo(110.5 * e, 661.828125 * e, 110.5 * e, 661.828125 * e, 111 * e, 649.828125 * e),
                a.bezierCurveTo(157 * e, 633.828125 * e, 134 * e, 607.828125 * e, 114 * e, 594.828125 * e),
                a.closePath(),
                he(a, i[0]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.translate(0, 5 * e),
                a.moveTo(140 * e, 294.828125 * e),
                a.bezierCurveTo(212 * e, 295.828125 * e, 176.5 * e, 295.328125 * e, 213 * e, 295.828125 * e),
                a.bezierCurveTo(201.5 * e, 325.328125 * e, 201.5 * e, 325.328125 * e, 190 * e, 354.828125 * e),
                a.bezierCurveTo(175.5 * e, 355.828125 * e, 175.5 * e, 355.828125 * e, 161 * e, 356.828125 * e),
                a.bezierCurveTo(154.5 * e, 328.828125 * e, 154.5 * e, 328.828125 * e, 148 * e, 300.828125 * e),
                a.closePath(),
                he(a, i[0]),
                a.translate(3, -5 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(159 * e, 679.828125 * e),
                a.bezierCurveTo(180 * e, 665.828125 * e, 155 * e, 675.828125 * e, 151 * e, 671.828125 * e),
                a.bezierCurveTo(154.5 * e, 685.328125 * e, 154.5 * e, 685.328125 * e, 158 * e, 698.828125 * e),
                a.bezierCurveTo(171 * e, 699.828125 * e, 171 * e, 699.828125 * e, 184 * e, 700.828125 * e),
                a.closePath(),
                he(a, i[0]),
                a.save(),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(157 * e, 548.828125 * e),
                a.bezierCurveTo(157 * e, 561.828125 * e, 157 * e, 561.828125 * e, 157 * e, 574.828125 * e),
                a.bezierCurveTo(132.5 * e, 580.828125 * e, 132.5 * e, 580.828125 * e, 108 * e, 586.828125 * e),
                a.bezierCurveTo(112 * e, 599.828125 * e, 111 * e, 593.828125 * e, 112 * e, 599.828125 * e),
                a.bezierCurveTo(159 * e, 603.828125 * e, 126.5 * e, 601.328125 * e, 141 * e, 602.828125 * e),
                a.bezierCurveTo(145 * e, 641.828125 * e, 143.5 * e, 623.828125 * e, 146 * e, 644.828125 * e),
                a.bezierCurveTo(129.5 * e, 645.328125 * e, 129.5 * e, 645.328125 * e, 113 * e, 645.828125 * e),
                a.bezierCurveTo(107.5 * e, 652.828125 * e, 107.5 * e, 652.828125 * e, 102 * e, 659.828125 * e),
                a.bezierCurveTo(104 * e, 669.328125 * e, 104 * e, 669.328125 * e, 106 * e, 678.828125 * e),
                a.bezierCurveTo(145 * e, 679.328125 * e, 145 * e, 679.328125 * e, 184 * e, 679.828125 * e),
                a.bezierCurveTo(185 * e, 615.828125 * e, 185 * e, 615.828125 * e, 186 * e, 551.828125 * e),
                a.bezierCurveTo(172.5 * e, 551.328125 * e, 172.5 * e, 551.328125 * e, 159 * e, 550.828125 * e),
                a.closePath(),
                he(a, i[0], i[0], 7 * e),
                a.restore(),
                a.globalAlpha = 1,
                a.translate(15 * e, 35 * e),
                Re(a, 178.5 * e, 172.828125 * e, 150 * e),
                he(a, void 0, i[2], 95 * e),
                Re(a, 178.5 * e, 172.828125 * e, 150 * e),
                he(a, void 0, i[1], 55 * e),
                a.closePath(),
                a.save(),
                a.translate(177 * e, 512.328125 * e),
                ye(a, -25 * e, -202.5 * e, 65 * e, 405 * e, 25 * e),
                a.restore(),
                he(a, i[1], i[2], 20 * e),
                a.save(),
                a.translate(136 * e, 581.828125 * e),
                ye(a, -39 * e, -23 * e, 78 * e, 46 * e, 25 * e),
                a.restore(),
                he(a, i[1], i[2], 20 * e),
                a.save(),
                a.translate(135.5 * e, 663.828125 * e),
                ye(a, -39.5 * e, -22 * e, 79 * e, 44 * e, 25 * e),
                a.restore(),
                he(a, i[1], i[2], 20 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(114 * e, 594.828125 * e),
                a.bezierCurveTo(175 * e, 596.828125 * e, 163 * e, 596.828125 * e, 172 * e, 594.828125 * e),
                a.bezierCurveTo(171.5 * e, 633.828125 * e, 171.5 * e, 633.828125 * e, 171 * e, 672.828125 * e),
                a.bezierCurveTo(110 * e, 673.828125 * e, 140.5 * e, 673.328125 * e, 110 * e, 673.828125 * e),
                a.bezierCurveTo(110.5 * e, 661.828125 * e, 110.5 * e, 661.828125 * e, 111 * e, 649.828125 * e),
                a.bezierCurveTo(157 * e, 633.828125 * e, 134 * e, 607.828125 * e, 114 * e, 594.828125 * e),
                a.closePath(),
                he(a, i[1]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.translate(0, 5 * e),
                a.moveTo(123 * e, 294.828125 * e),
                a.bezierCurveTo(212 * e, 295.828125 * e, 190.5 * e, 295.328125 * e, 250 * e, 295.828125 * e),
                a.bezierCurveTo(231.5 * e, 325.328125 * e, 231.5 * e, 325.328125 * e, 220 * e, 354.828125 * e),
                a.bezierCurveTo(175.5 * e, 355.828125 * e, 175.5 * e, 355.828125 * e, 140 * e, 356.828125 * e),
                a.bezierCurveTo(123.5 * e, 328.828125 * e, 123.5 * e, 328.828125 * e, 123 * e, 294.828125 * e),
                a.closePath(),
                he(a, i[1]),
                a.translate(0, -5 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(159 * e, 679.828125 * e),
                a.bezierCurveTo(180 * e, 665.828125 * e, 155 * e, 675.828125 * e, 151 * e, 671.828125 * e),
                a.bezierCurveTo(154.5 * e, 685.328125 * e, 154.5 * e, 685.328125 * e, 158 * e, 698.828125 * e),
                a.bezierCurveTo(171 * e, 699.828125 * e, 171 * e, 699.828125 * e, 184 * e, 700.828125 * e),
                a.closePath(),
                he(a, i[1]),
                a.save(),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(157 * e, 548.828125 * e),
                a.bezierCurveTo(157 * e, 561.828125 * e, 157 * e, 561.828125 * e, 157 * e, 574.828125 * e),
                a.bezierCurveTo(132.5 * e, 580.828125 * e, 132.5 * e, 580.828125 * e, 108 * e, 586.828125 * e),
                a.bezierCurveTo(112 * e, 599.828125 * e, 111 * e, 593.828125 * e, 112 * e, 599.828125 * e),
                a.bezierCurveTo(159 * e, 603.828125 * e, 126.5 * e, 601.328125 * e, 141 * e, 602.828125 * e),
                a.bezierCurveTo(145 * e, 641.828125 * e, 143.5 * e, 623.828125 * e, 146 * e, 644.828125 * e),
                a.bezierCurveTo(129.5 * e, 645.328125 * e, 129.5 * e, 645.328125 * e, 113 * e, 645.828125 * e),
                a.bezierCurveTo(107.5 * e, 652.828125 * e, 107.5 * e, 652.828125 * e, 102 * e, 659.828125 * e),
                a.bezierCurveTo(104 * e, 669.328125 * e, 104 * e, 669.328125 * e, 106 * e, 678.828125 * e),
                a.bezierCurveTo(145 * e, 679.328125 * e, 145 * e, 679.328125 * e, 184 * e, 679.828125 * e),
                a.bezierCurveTo(185 * e, 615.828125 * e, 185 * e, 615.828125 * e, 186 * e, 551.828125 * e),
                a.bezierCurveTo(172.5 * e, 551.328125 * e, 172.5 * e, 551.328125 * e, 159 * e, 550.828125 * e),
                a.closePath(),
                he(a, i[1], i[1], 7 * e),
                a.restore(),
                n
            }
            function Qi(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                return n.width = 202 * e,
                n.height = 202 * e,
                a.translate(2 * e, 1 * e),
                a.globalAlpha = .3,
                Re(a, 98 * e, 99 * e, 100 * e),
                he(a, i[0]),
                a.globalAlpha = .5,
                Re(a, 98 * e, 99 * e, 90 * e),
                he(a, i[1]),
                n
            }
            function en(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                return n.width = 89 * e,
                n.height = 89 * e,
                a.save(),
                a.translate(44.5 * e, 44.5 * e),
                me(a, 6, 40 * e, 10 * e),
                a.restore(),
                he(a, i[0], i[1], 5 * e),
                a.save(),
                a.translate(44.5 * e, 44.5 * e),
                me(a, 6, 25.11521001172521 * e, 10 * e),
                a.restore(),
                he(a, i[2], i[3], 5 * e),
                n
            }
            function tn(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                return n.width = 88 * e,
                n.height = 88 * e,
                a.save(),
                a.translate(44 * e, 44 * e),
                a.rotate(.52),
                me(a, 6, 43 * e, 10 * e),
                a.restore(),
                he(a, i[0], i[1], 3 * e),
                n
            }
            function nn(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                return n.width = 202 * e,
                n.height = 202 * e,
                a.translate(2 * e, 1 * e),
                a.globalAlpha = t ? .5 : 1,
                a.translate(0, 10 * e),
                a.save(),
                a.translate(98 * e, 41.15177917480469 * e),
                a.rotate(.8),
                ye(a, -16 * e, -16.5 * e, 32 * e, 33 * e, 7 * e),
                a.restore(),
                he(a, i[2]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(98 * e, 22.5089111328125 * e),
                a.bezierCurveTo(97.5 * e, 41.5089111328125 * e, 97.5 * e, 41.5089111328125 * e, 97 * e, 60.5089111328125 * e),
                he(a, i[2]),
                a.save(),
                a.translate(147.5 * e, 69.5089111328125 * e),
                a.rotate(.2),
                ye(a, -15.5 * e, -16 * e, 31 * e, 32 * e, 7 * e),
                a.restore(),
                he(a, i[2]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(163 * e, 59.50892639160156 * e),
                a.bezierCurveTo(147 * e, 69.50892639160156 * e, 127 * e, 82.50892639160156 * e, 131 * e, 79.50892639160156 * e),
                he(a, i[2]),
                a.save(),
                a.translate(143.5 * e, 128.2946319580078 * e),
                a.rotate(1.24),
                ye(a, -16.5 * e, -17.5 * e, 33 * e, 35 * e, 7 * e),
                a.restore(),
                he(a, i[2]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(162 * e, 135.93748474121094 * e),
                a.bezierCurveTo(143.5 * e, 128.43748474121094 * e, 129 * e, 120.93748474121094 * e, 125 * e, 120.93748474121094 * e),
                he(a, i[2]),
                a.save(),
                a.translate(99 * e, 156.08035278320312 * e),
                a.rotate(.84),
                ye(a, -18 * e, -18 * e, 36 * e, 36 * e, 7 * e),
                a.restore(),
                he(a, i[2]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(98 * e, 136.08035278320312 * e),
                a.bezierCurveTo(98 * e, 156.08035278320312 * e, 98 * e, 156.08035278320312 * e, 98 * e, 176.08035278320312 * e),
                he(a, i[2]),
                a.save(),
                a.translate(54 * e, 72.22320556640625 * e),
                a.rotate(1.32),
                ye(a, -18 * e, -19 * e, 36 * e, 38 * e, 7 * e),
                a.restore(),
                he(a, i[2]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(34 * e, 60.79463195800781 * e),
                a.bezierCurveTo(53.5 * e, 72.29463195800781 * e, 69 * e, 79.79463195800781 * e, 73 * e, 83.79463195800781 * e),
                he(a, i[2]),
                a.save(),
                a.translate(49 * e, 127.29463195800781 * e),
                a.rotate(1.76),
                ye(a, -20 * e, -17.5 * e, 40 * e, 35 * e, 7 * e),
                a.restore(),
                he(a, i[2]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(30 * e, 141.7946319580078 * e),
                a.bezierCurveTo(47 * e, 130.2946319580078 * e, 64 * e, 119.79463195800781 * e, 64 * e, 118.79463195800781 * e),
                he(a, i[2]),
                a.globalAlpha = 1,
                a.translate(0, -10 * e),
                a.save(),
                a.translate(98 * e, 41.15177917480469 * e),
                a.rotate(.8),
                ye(a, -16 * e, -16.5 * e, 32 * e, 33 * e, 7 * e),
                a.restore(),
                he(a, i[3], i[4], 5 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(98 * e, 22.5089111328125 * e),
                a.bezierCurveTo(97.5 * e, 41.5089111328125 * e, 97.5 * e, 41.5089111328125 * e, 97 * e, 60.5089111328125 * e),
                he(a, void 0, i[4], 5 * e),
                a.save(),
                a.translate(147.5 * e, 69.5089111328125 * e),
                a.rotate(.2),
                ye(a, -15.5 * e, -16 * e, 31 * e, 32 * e, 7 * e),
                a.restore(),
                he(a, i[3], i[4], 5 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(163 * e, 59.50892639160156 * e),
                a.bezierCurveTo(147 * e, 69.50892639160156 * e, 127 * e, 82.50892639160156 * e, 131 * e, 79.50892639160156 * e),
                he(a, void 0, i[4], 5 * e),
                a.save(),
                a.translate(143.5 * e, 128.2946319580078 * e),
                a.rotate(1.24),
                ye(a, -16.5 * e, -17.5 * e, 33 * e, 35 * e, 7 * e),
                a.restore(),
                he(a, i[3], i[4], 5 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(162 * e, 135.93748474121094 * e),
                a.bezierCurveTo(143.5 * e, 128.43748474121094 * e, 129 * e, 120.93748474121094 * e, 125 * e, 120.93748474121094 * e),
                he(a, void 0, i[4], 5 * e),
                a.save(),
                a.translate(99 * e, 156.08035278320312 * e),
                a.rotate(.84),
                ye(a, -18 * e, -18 * e, 36 * e, 36 * e, 7 * e),
                a.restore(),
                he(a, i[3], i[4], 5 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(98 * e, 136.08035278320312 * e),
                a.bezierCurveTo(98 * e, 156.08035278320312 * e, 98 * e, 156.08035278320312 * e, 98 * e, 176.08035278320312 * e),
                he(a, void 0, i[4], 5 * e),
                a.save(),
                a.translate(54 * e, 72.22320556640625 * e),
                a.rotate(1.32),
                ye(a, -18 * e, -19 * e, 36 * e, 38 * e, 7 * e),
                a.restore(),
                he(a, i[3], i[4], 5 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(34 * e, 60.79463195800781 * e),
                a.bezierCurveTo(53.5 * e, 72.29463195800781 * e, 69 * e, 79.79463195800781 * e, 73 * e, 83.79463195800781 * e),
                he(a, void 0, i[4], 5 * e),
                a.save(),
                a.translate(49 * e, 127.29463195800781 * e),
                a.rotate(1.76),
                ye(a, -20 * e, -17.5 * e, 40 * e, 35 * e, 7 * e),
                a.restore(),
                he(a, i[3], i[4], 5 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(30 * e, 141.7946319580078 * e),
                a.bezierCurveTo(47 * e, 130.2946319580078 * e, 64 * e, 119.79463195800781 * e, 64 * e, 118.79463195800781 * e),
                he(a, void 0, i[4], 5 * e),
                a.globalAlpha = t ? .5 : 1,
                a.translate(0, 10 * e),
                a.save(),
                a.translate(98 * e, 99 * e),
                me(a, 6, 70.28669492273468 * e, 10 * e),
                a.restore(),
                he(a, i[2]),
                a.save(),
                a.translate(98 * e, 99 * e),
                me(a, 6, 56.455940020351264 * e, 10 * e),
                a.restore(),
                he(a, i[2]),
                a.globalAlpha = 1,
                a.translate(0, -10 * e),
                a.save(),
                a.translate(98 * e, 99 * e),
                me(a, 6, 70.28669492273468 * e, 10 * e),
                a.restore(),
                he(a, i[5], i[6], 5 * e),
                a.save(),
                a.translate(98 * e, 99 * e),
                me(a, 6, 56.455940020351264 * e, 10 * e),
                a.restore(),
                he(a, i[7], i[8], 7 * e),
                n
            }
            function an(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                return n.width = 161 * e,
                n.height = 184 * e,
                a.translate(0, 10 * e),
                a.globalAlpha = 1,
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(105.5 * e, 34.609375 * e),
                a.bezierCurveTo(48.5 * e, 7.609375 * e, 11.5 * e, 58.609375 * e, 20.5 * e, 97.609375 * e),
                a.bezierCurveTo(44.5 * e, 161.609375 * e, 70.5 * e, 171.609375 * e, 88.5 * e, 156.609375 * e),
                a.bezierCurveTo(120.5 * e, 129.609375 * e, 123.5 * e, 105.609375 * e, 128.5 * e, 83.609375 * e),
                a.bezierCurveTo(137.5 * e, 79.609375 * e, 141.5 * e, 79.609375 * e, 146.5 * e, 81.609375 * e),
                a.bezierCurveTo(153.5 * e, 70.609375 * e, 151.5 * e, 65.609375 * e, 148.5 * e, 61.609375 * e),
                a.bezierCurveTo(134.5 * e, 60.609375 * e, 131.5 * e, 63.609375 * e, 127.5 * e, 66.609375 * e),
                a.bezierCurveTo(127.5 * e, 55.609375 * e, 125.5 * e, 54.609375 * e, 120.5 * e, 51.609375 * e),
                a.bezierCurveTo(128.5 * e, 42.609375 * e, 136.5 * e, 38.609375 * e, 147.5 * e, 39.609375 * e),
                a.bezierCurveTo(152.5 * e, 23.609375 * e, 147.5 * e, 21.609375 * e, 140.5 * e, 17.609375 * e),
                a.bezierCurveTo(120.5 * e, 17.609375 * e, 114.5 * e, 27.609375 * e, 106.5 * e, 35.609375 * e),
                a.closePath(),
                he(a, i[0]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(45.5 * e, 144.609375 * e),
                a.bezierCurveTo(35.5 * e, 155.609375 * e, 37 * e, 152.109375 * e, 28.5 * e, 159.609375 * e),
                a.bezierCurveTo(16.5 * e, 154.609375 * e, 16.5 * e, 151.609375 * e, 17.5 * e, 141.609375 * e),
                a.bezierCurveTo(25.5 * e, 134.109375 * e, 25.5 * e, 134.109375 * e, 33.5 * e, 126.609375 * e),
                he(a, i[0]),
                a.translate(0, -10 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(45.5 * e, 144.609375 * e),
                a.bezierCurveTo(35.5 * e, 155.609375 * e, 37 * e, 152.109375 * e, 28.5 * e, 159.609375 * e),
                a.bezierCurveTo(16.5 * e, 154.609375 * e, 16.5 * e, 151.609375 * e, 17.5 * e, 141.609375 * e),
                a.bezierCurveTo(25.5 * e, 134.109375 * e, 25.5 * e, 134.109375 * e, 33.5 * e, 126.609375 * e),
                he(a, i[1], i[2], 8 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(105.5 * e, 34.609375 * e),
                a.bezierCurveTo(48.5 * e, 7.609375 * e, 11.5 * e, 58.609375 * e, 20.5 * e, 97.609375 * e),
                a.bezierCurveTo(44.5 * e, 161.609375 * e, 70.5 * e, 171.609375 * e, 88.5 * e, 156.609375 * e),
                a.bezierCurveTo(120.5 * e, 129.609375 * e, 123.5 * e, 105.609375 * e, 128.5 * e, 83.609375 * e),
                a.bezierCurveTo(137.5 * e, 79.609375 * e, 141.5 * e, 79.609375 * e, 146.5 * e, 81.609375 * e),
                a.bezierCurveTo(153.5 * e, 70.609375 * e, 151.5 * e, 65.609375 * e, 148.5 * e, 61.609375 * e),
                a.bezierCurveTo(134.5 * e, 60.609375 * e, 131.5 * e, 63.609375 * e, 127.5 * e, 66.609375 * e),
                a.bezierCurveTo(127.5 * e, 55.609375 * e, 125.5 * e, 54.609375 * e, 120.5 * e, 51.609375 * e),
                a.bezierCurveTo(128.5 * e, 42.609375 * e, 136.5 * e, 38.609375 * e, 147.5 * e, 39.609375 * e),
                a.bezierCurveTo(152.5 * e, 23.609375 * e, 147.5 * e, 21.609375 * e, 140.5 * e, 17.609375 * e),
                a.bezierCurveTo(120.5 * e, 17.609375 * e, 114.5 * e, 27.609375 * e, 106.5 * e, 35.609375 * e),
                a.closePath(),
                he(a, i[1], i[2], 8 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(104.5 * e, 35.609375 * e),
                a.bezierCurveTo(71.5 * e, 36.609375 * e, 57.5 * e, 52.609375 * e, 58.5 * e, 81.609375 * e),
                a.bezierCurveTo(59.5 * e, 103.609375 * e, 66.5 * e, 107.609375 * e, 66.5 * e, 116.609375 * e),
                a.bezierCurveTo(67.5 * e, 128.609375 * e, 65.5 * e, 131.609375 * e, 63.5 * e, 137.609375 * e),
                he(a, void 0, i[2], 8 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(59.5 * e, 72.609375 * e),
                a.bezierCurveTo(38.5 * e, 80.609375 * e, 43.5 * e, 81.609375 * e, 37.5 * e, 89.609375 * e),
                he(a, void 0, i[2], 4 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(60.5 * e, 85.609375 * e),
                a.bezierCurveTo(75.5 * e, 91.609375 * e, 76.5 * e, 96.609375 * e, 81.5 * e, 104.609375 * e),
                he(a, void 0, i[2], 4 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(68.5 * e, 122.609375 * e),
                a.bezierCurveTo(79.5 * e, 130.609375 * e, 74.5 * e, 128.609375 * e, 80.5 * e, 134.609375 * e),
                he(a, i[1], i[2], 4 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(142.5 * e, 18.609375 * e),
                a.bezierCurveTo(151.5 * e, 28.609375 * e, 151.5 * e, 32.609375 * e, 146.5 * e, 40.609375 * e),
                a.bezierCurveTo(137.5 * e, 26.609375 * e, 138.5 * e, 24.609375 * e, 142.5 * e, 19.609375 * e),
                a.closePath(),
                he(a, i[3]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(146.5 * e, 61.50892639160156 * e),
                a.bezierCurveTo(157.5 * e, 69.50892639160156 * e, 150.5 * e, 79.50892639160156 * e, 145.5 * e, 81.50892639160156 * e),
                a.bezierCurveTo(140.5 * e, 65.50892639160156 * e, 144.5 * e, 64.50892639160156 * e, 146.5 * e, 62.50892639160156 * e),
                a.closePath(),
                he(a, i[3]),
                n
            }
            function In(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                return n.width = 104 * e,
                n.height = 117 * e,
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(4 * e, 90 * e),
                a.bezierCurveTo(20 * e, 99.5 * e, 20 * e, 99.5 * e, 36 * e, 109 * e),
                a.bezierCurveTo(67 * e, 92 * e, 67 * e, 92 * e, 98 * e, 75 * e),
                a.bezierCurveTo(91 * e, 27 * e, 91 * e, 27 * e, 91 * e, 28 * e),
                a.bezierCurveTo(72.5 * e, 16 * e, 72.5 * e, 16 * e, 54 * e, 4 * e),
                a.bezierCurveTo(33.5 * e, 10 * e, 33.5 * e, 10 * e, 13 * e, 16 * e),
                a.closePath(),
                he(a, i[0]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(6 * e, 76 * e),
                a.bezierCurveTo(13.5 * e, 51.5 * e, 13.5 * e, 51.5 * e, 21 * e, 27 * e),
                a.bezierCurveTo(37.5 * e, 17 * e, 37.5 * e, 17 * e, 54 * e, 7 * e),
                a.bezierCurveTo(33.5 * e, 12.5 * e, 33.5 * e, 12.5 * e, 13 * e, 18 * e),
                a.closePath(),
                he(a, i[1]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(24 * e, 62 * e),
                a.bezierCurveTo(28.5 * e, 53 * e, 28.5 * e, 53 * e, 33 * e, 44 * e),
                a.bezierCurveTo(41.5 * e, 41 * e, 41.5 * e, 41 * e, 50 * e, 38 * e),
                a.bezierCurveTo(52.5 * e, 35 * e, 52.5 * e, 35 * e, 55 * e, 32 * e),
                a.bezierCurveTo(52 * e, 30 * e, 52 * e, 30 * e, 49 * e, 28 * e),
                a.bezierCurveTo(38 * e, 31.5 * e, 38 * e, 31.5 * e, 27 * e, 35 * e),
                a.closePath(),
                he(a, i[1]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(36 * e, 107 * e),
                a.bezierCurveTo(66 * e, 90.5 * e, 66 * e, 90.5 * e, 96 * e, 74 * e),
                a.bezierCurveTo(93 * e, 52.5 * e, 93 * e, 52.5 * e, 90 * e, 31 * e),
                a.bezierCurveTo(87 * e, 48 * e, 87 * e, 48 * e, 84 * e, 65 * e),
                a.closePath(),
                he(a, i[2]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(1 * e, 89 * e),
                a.bezierCurveTo(18 * e, 100 * e, 34 * e, 110 * e, 35 * e, 111 * e),
                a.bezierCurveTo(67 * e, 93 * e, 67 * e, 93 * e, 99 * e, 75 * e),
                a.bezierCurveTo(100 * e, 78.5 * e, 100 * e, 78.5 * e, 101 * e, 82 * e),
                a.bezierCurveTo(68 * e, 99 * e, 68 * e, 99 * e, 35 * e, 116 * e),
                a.bezierCurveTo(18 * e, 106.5 * e, 18 * e, 106.5 * e, 1 * e, 97 * e),
                a.closePath(),
                he(a, i[3]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(36 * e, 107 * e),
                a.bezierCurveTo(66.5 * e, 91.5 * e, 66.5 * e, 91.5 * e, 97 * e, 76 * e),
                a.bezierCurveTo(94.5 * e, 52 * e, 94.5 * e, 52 * e, 92 * e, 28 * e),
                a.bezierCurveTo(73 * e, 15.5 * e, 73 * e, 15.5 * e, 54 * e, 3 * e),
                a.bezierCurveTo(33 * e, 9.5 * e, 33 * e, 9.5 * e, 12 * e, 16 * e),
                a.bezierCurveTo(8 * e, 53 * e, 8 * e, 53 * e, 4 * e, 90 * e),
                a.bezierCurveTo(18.5 * e, 99 * e, 18.5 * e, 99 * e, 33 * e, 108 * e),
                a.closePath(),
                he(a, void 0, i[4], 6 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(22 * e, 71 * e),
                a.bezierCurveTo(30 * e, 76.5 * e, 30 * e, 76.5 * e, 38 * e, 82 * e),
                a.bezierCurveTo(53 * e, 72 * e, 53 * e, 72 * e, 68 * e, 62 * e),
                a.bezierCurveTo(68 * e, 52 * e, 68 * e, 52 * e, 68 * e, 42 * e),
                a.bezierCurveTo(59.5 * e, 35.5 * e, 59.5 * e, 35.5 * e, 51 * e, 29 * e),
                a.bezierCurveTo(39.5 * e, 32 * e, 39.5 * e, 32 * e, 28 * e, 35 * e),
                a.bezierCurveTo(25 * e, 52 * e, 25 * e, 52 * e, 22 * e, 69 * e),
                a.closePath(),
                he(a, void 0, i[4], 6 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(5 * e, 89 * e),
                a.bezierCurveTo(20 * e, 73 * e, 12.5 * e, 80.5 * e, 20 * e, 72 * e),
                a.closePath(),
                he(a, void 0, i[4], 6 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(35 * e, 102 * e),
                a.bezierCurveTo(36 * e, 92.5 * e, 36 * e, 92.5 * e, 37 * e, 83 * e),
                a.closePath(),
                he(a, void 0, i[4], 6 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(68 * e, 62 * e),
                a.bezierCurveTo(81 * e, 67.5 * e, 81 * e, 67.5 * e, 94 * e, 73 * e),
                a.closePath(),
                he(a, void 0, i[4], 6 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(70 * e, 41 * e),
                a.bezierCurveTo(80 * e, 35.5 * e, 80 * e, 35.5 * e, 90 * e, 30 * e),
                a.closePath(),
                he(a, void 0, i[4], 6 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(28 * e, 33 * e),
                a.bezierCurveTo(21.5 * e, 26.5 * e, 21.5 * e, 26.5 * e, 15 * e, 20 * e),
                a.closePath(),
                he(a, void 0, i[4], 6 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(51 * e, 28 * e),
                a.bezierCurveTo(53 * e, 17 * e, 53 * e, 17 * e, 55 * e, 6 * e),
                a.closePath(),
                he(a, void 0, i[4], 6 * e),
                n
            }
            function Tn(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                return n.width = 105 * e,
                n.height = 144 * e,
                a.globalAlpha = t ? .5 : 1,
                a.translate(-5 * e, 0 * e),
                a.save(),
                a.translate(52.5 * e, 91.5 * e),
                ye(a, -4.5 * e, -39 * e, 9 * e, 78 * e, 5 * e),
                a.restore(),
                he(a, i[0], i[0], 3 * e),
                a.save(),
                a.translate(53 * e, 36 * e),
                ye(a, -29 * e, -17.5 * e, 58 * e, 35 * e, 5 * e),
                a.restore(),
                he(a, i[0], i[0], 4 * e),
                a.save(),
                a.translate(53.5 * e, 35.5 * e),
                ye(a, -26.5 * e, -15 * e, 53 * e, 30 * e, 5 * e),
                a.restore(),
                he(a, i[0], i[0], 4 * e),
                a.translate(5 * e, 0 * e),
                a.globalAlpha = 1,
                a.save(),
                a.translate(52.5 * e, 91.5 * e),
                ye(a, -4.5 * e, -39 * e, 9 * e, 78 * e, 5 * e),
                a.restore(),
                he(a, i[1], i[2], 3 * e),
                a.save(),
                a.translate(53 * e, 36 * e),
                ye(a, -29 * e, -17.5 * e, 58 * e, 35 * e, 5 * e),
                a.restore(),
                he(a, i[3], i[4], 4 * e),
                a.save(),
                a.translate(53.5 * e, 35.5 * e),
                ye(a, -26.5 * e, -15 * e, 53 * e, 30 * e, 5 * e),
                a.restore(),
                he(a, i[5], i[6], 4 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(49 * e, 60.5 * e),
                a.bezierCurveTo(44 * e, 56.5 * e, 44 * e, 56.5 * e, 39 * e, 52.5 * e),
                a.bezierCurveTo(39 * e, 46.5 * e, 39 * e, 46.5 * e, 39 * e, 40.5 * e),
                a.bezierCurveTo(44 * e, 44 * e, 44 * e, 44 * e, 49 * e, 47.5 * e),
                a.bezierCurveTo(49 * e, 54 * e, 49 * e, 54 * e, 49 * e, 60.5 * e),
                a.closePath(),
                he(a, i[7], i[6], 3 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(66 * e, 40.5 * e),
                a.bezierCurveTo(66 * e, 46.5 * e, 66 * e, 46.5 * e, 66 * e, 52.5 * e),
                a.bezierCurveTo(60.5 * e, 56.5 * e, 60.5 * e, 56.5 * e, 55 * e, 60.5 * e),
                a.bezierCurveTo(56 * e, 53 * e, 56 * e, 53 * e, 57 * e, 45.5 * e),
                a.bezierCurveTo(61.5 * e, 43 * e, 61.5 * e, 43 * e, 66 * e, 40.5 * e),
                a.closePath(),
                he(a, i[7], i[6], 3 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(52 * e, 33.5 * e),
                a.bezierCurveTo(55.5 * e, 41 * e, 55.5 * e, 41 * e, 59 * e, 48.5 * e),
                a.bezierCurveTo(56 * e, 58 * e, 56 * e, 58 * e, 53 * e, 67.5 * e),
                a.bezierCurveTo(49 * e, 58 * e, 49 * e, 58 * e, 45 * e, 48.5 * e),
                a.bezierCurveTo(48.5 * e, 41 * e, 48.5 * e, 41 * e, 52 * e, 33.5 * e),
                a.closePath(),
                he(a, i[9], i[8], 3 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(52 * e, 47.5 * e),
                a.bezierCurveTo(54.5 * e, 50.5 * e, 54.5 * e, 50.5 * e, 57 * e, 53.5 * e),
                a.bezierCurveTo(55 * e, 60 * e, 55 * e, 60 * e, 53 * e, 66.5 * e),
                a.bezierCurveTo(50.5 * e, 61 * e, 50.5 * e, 61 * e, 48 * e, 55.5 * e),
                a.bezierCurveTo(50 * e, 52 * e, 50 * e, 52 * e, 52 * e, 48.5 * e),
                a.closePath(),
                he(a, i[11], i[10], 3 * e),
                n
            }
            function on(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                return n.width = 46 * e,
                n.height = 140 * e,
                a.scale(-1 * e, 1 * e),
                a.translate(-50 * e, 40 * e),
                a.translate(-20 * e, 0),
                a.globalAlpha = t ? .5 : 1,
                a.translate(10 * e, 0),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(22.599990844726562 * e, 85.94999694824219 * e),
                a.bezierCurveTo(17.599990844726562 * e, 83.94999694824219 * e, 17.599990844726562 * e, 83.94999694824219 * e, 12.599990844726562 * e, 81.94999694824219 * e),
                a.bezierCurveTo(19.599990844726562 * e, 73.94999694824219 * e, 2.5999908447265625 * e, 22.949996948242188 * e, 33.59999084472656 * e, 7.9499969482421875 * e),
                a.bezierCurveTo(27.599990844726562 * e, 28.949996948242188 * e, 33.59999084472656 * e, 26.949996948242188 * e, 35.59999084472656 * e, 32.94999694824219 * e),
                a.bezierCurveTo(25.599990844726562 * e, 59.94999694824219 * e, 26.599990844726562 * e, 69.94999694824219 * e, 29.599990844726562 * e, 82.94999694824219 * e),
                a.closePath(),
                he(a, i[0]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.translate(-1 * e, 0),
                a.moveTo(17.599990844726562 * e, 89.75 * e),
                a.bezierCurveTo(24.599990844726562 * e, 99.75 * e, 24.599990844726562 * e, 101.75 * e, 20.599990844726562 * e, 111.75 * e),
                a.bezierCurveTo(28.599990844726562 * e, 110.75 * e, 26.599990844726562 * e, 112.75 * e, 28.599990844726562 * e, 111.75 * e),
                a.bezierCurveTo(30.599990844726562 * e, 96.75 * e, 32.59999084472656 * e, 96.75 * e, 30.599990844726562 * e, 87.75 * e),
                a.closePath(),
                he(a, i[0]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.translate(1 * e, 0),
                a.moveTo(7.5999908447265625 * e, 86.34999084472656 * e),
                a.bezierCurveTo(12.599990844726562 * e, 85.34999084472656 * e, 14.599990844726562 * e, 84.34999084472656 * e, 13.599990844726562 * e, 84.34999084472656 * e),
                a.bezierCurveTo(21.599990844726562 * e, 83.34999084472656 * e, 21.599990844726562 * e, 83.34999084472656 * e, 29.599990844726562 * e, 82.34999084472656 * e),
                a.bezierCurveTo(33.59999084472656 * e, 85.84999084472656 * e, 33.59999084472656 * e, 85.84999084472656 * e, 37.59999084472656 * e, 89.34999084472656 * e),
                a.bezierCurveTo(34.09999084472656 * e, 91.84999084472656 * e, 34.09999084472656 * e, 91.84999084472656 * e, 30.599990844726562 * e, 94.34999084472656 * e),
                a.bezierCurveTo(21.099990844726562 * e, 93.34999084472656 * e, 21.099990844726562 * e, 93.34999084472656 * e, 11.599990844726562 * e, 92.34999084472656 * e),
                a.closePath(),
                he(a, i[0]),
                a.save(),
                a.translate(23.599990844726562 * e, 110.94999694824219 * e),
                a.rotate(0),
                ye(a, -7 * e, -4 * e, 14 * e, 8 * e, 10 * e),
                a.restore(),
                he(a, i[0]),
                a.translate(0 * e, 0),
                a.globalAlpha = 1,
                a.translate(10 * e, 0),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(22.599990844726562 * e, 85.94999694824219 * e),
                a.bezierCurveTo(17.599990844726562 * e, 83.94999694824219 * e, 17.599990844726562 * e, 83.94999694824219 * e, 12.599990844726562 * e, 81.94999694824219 * e),
                a.bezierCurveTo(19.599990844726562 * e, 73.94999694824219 * e, 2.5999908447265625 * e, 22.949996948242188 * e, 33.59999084472656 * e, 7.9499969482421875 * e),
                a.bezierCurveTo(27.599990844726562 * e, 28.949996948242188 * e, 33.59999084472656 * e, 26.949996948242188 * e, 35.59999084472656 * e, 32.94999694824219 * e),
                a.bezierCurveTo(25.599990844726562 * e, 59.94999694824219 * e, 26.599990844726562 * e, 69.94999694824219 * e, 29.599990844726562 * e, 82.94999694824219 * e),
                a.closePath(),
                he(a, i[3], i[4], 3 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.translate(-1 * e, 0),
                a.moveTo(17.599990844726562 * e, 89.75 * e),
                a.bezierCurveTo(24.599990844726562 * e, 99.75 * e, 24.599990844726562 * e, 101.75 * e, 20.599990844726562 * e, 111.75 * e),
                a.bezierCurveTo(28.599990844726562 * e, 110.75 * e, 26.599990844726562 * e, 112.75 * e, 28.599990844726562 * e, 111.75 * e),
                a.bezierCurveTo(30.599990844726562 * e, 96.75 * e, 32.59999084472656 * e, 96.75 * e, 30.599990844726562 * e, 87.75 * e),
                a.closePath(),
                he(a, i[1], i[2], 3 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.translate(1 * e, 0),
                a.moveTo(7.5999908447265625 * e, 86.34999084472656 * e),
                a.bezierCurveTo(12.599990844726562 * e, 85.34999084472656 * e, 14.599990844726562 * e, 84.34999084472656 * e, 13.599990844726562 * e, 84.34999084472656 * e),
                a.bezierCurveTo(21.599990844726562 * e, 83.34999084472656 * e, 21.599990844726562 * e, 83.34999084472656 * e, 29.599990844726562 * e, 82.34999084472656 * e),
                a.bezierCurveTo(33.59999084472656 * e, 85.84999084472656 * e, 33.59999084472656 * e, 85.84999084472656 * e, 37.59999084472656 * e, 89.34999084472656 * e),
                a.bezierCurveTo(34.09999084472656 * e, 91.84999084472656 * e, 34.09999084472656 * e, 91.84999084472656 * e, 30.599990844726562 * e, 94.34999084472656 * e),
                a.bezierCurveTo(21.099990844726562 * e, 93.34999084472656 * e, 21.099990844726562 * e, 93.34999084472656 * e, 11.599990844726562 * e, 92.34999084472656 * e),
                a.closePath(),
                he(a, i[1], i[2], 3 * e),
                a.save(),
                a.translate(23.599990844726562 * e, 110.94999694824219 * e),
                a.rotate(0),
                ye(a, -7 * e, -4 * e, 14 * e, 8 * e, 10 * e),
                a.restore(),
                he(a, i[1], i[2], 3 * e),
                n
            }
            function rn(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                return n.width = 65 * e,
                n.height = 131 * e,
                a.globalAlpha = t ? .5 : 1,
                a.translate(3, 0),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(21.25 * e, 88.9375 * e),
                a.bezierCurveTo(19.25 * e, 57.9375 * e, 19.25 * e, 57.9375 * e, 17.25 * e, 26.9375 * e),
                a.bezierCurveTo(24.25 * e, 20.9375 * e, 24.25 * e, 20.9375 * e, 31.25 * e, 14.9375 * e),
                a.bezierCurveTo(32.75 * e, 54.4375 * e, 32.75 * e, 54.4375 * e, 34.25 * e, 93.9375 * e),
                a.closePath(),
                he(a, i[0]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(30.25 * e, 5.9375 * e),
                a.bezierCurveTo(39.25 * e, 14.9375 * e, 39.25 * e, 14.9375 * e, 48.25 * e, 23.9375 * e),
                a.bezierCurveTo(44.75 * e, 56.4375 * e, 44.75 * e, 56.4375 * e, 41.25 * e, 88.9375 * e),
                a.bezierCurveTo(36.25 * e, 88.9375 * e, 36.25 * e, 88.9375 * e, 31.25 * e, 88.9375 * e),
                a.bezierCurveTo(30.75 * e, 47.9375 * e, 30.75 * e, 47.9375 * e, 30.25 * e, 6.9375 * e),
                a.closePath(),
                he(a, i[0], i[0], 4 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(7.25 * e, 85.4375 * e),
                a.bezierCurveTo(31.75 * e, 85.4375 * e, 31.75 * e, 85.4375 * e, 56.25 * e, 85.4375 * e),
                a.bezierCurveTo(51.25 * e, 91.9375 * e, 51.25 * e, 91.9375 * e, 46.25 * e, 98.4375 * e),
                a.bezierCurveTo(30.25 * e, 98.4375 * e, 30.25 * e, 98.4375 * e, 14.25 * e, 98.4375 * e),
                a.closePath(),
                he(a, i[0], i[0], 4 * e),
                a.save(),
                a.translate(31.25 * e, 108.9375 * e),
                ye(a, -6 * e, -14.5 * e, 12 * e, 29 * e, 10 * e),
                a.restore(),
                a.globalAlpha = 1,
                a.translate(-3, 0),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(21.25 * e, 88.9375 * e),
                a.bezierCurveTo(19.25 * e, 57.9375 * e, 19.25 * e, 57.9375 * e, 17.25 * e, 26.9375 * e),
                a.bezierCurveTo(24.25 * e, 20.9375 * e, 24.25 * e, 20.9375 * e, 31.25 * e, 14.9375 * e),
                a.bezierCurveTo(32.75 * e, 54.4375 * e, 32.75 * e, 54.4375 * e, 34.25 * e, 93.9375 * e),
                a.closePath(),
                he(a, i[1]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(30.25 * e, 5.9375 * e),
                a.bezierCurveTo(39.25 * e, 14.9375 * e, 39.25 * e, 14.9375 * e, 48.25 * e, 23.9375 * e),
                a.bezierCurveTo(44.75 * e, 56.4375 * e, 44.75 * e, 56.4375 * e, 41.25 * e, 88.9375 * e),
                a.bezierCurveTo(36.25 * e, 88.9375 * e, 36.25 * e, 88.9375 * e, 31.25 * e, 88.9375 * e),
                a.bezierCurveTo(30.75 * e, 47.9375 * e, 30.75 * e, 47.9375 * e, 30.25 * e, 6.9375 * e),
                a.closePath(),
                he(a, i[2], i[1], 4 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(7.25 * e, 85.4375 * e),
                a.bezierCurveTo(31.75 * e, 85.4375 * e, 31.75 * e, 85.4375 * e, 56.25 * e, 85.4375 * e),
                a.bezierCurveTo(51.25 * e, 91.9375 * e, 51.25 * e, 91.9375 * e, 46.25 * e, 98.4375 * e),
                a.bezierCurveTo(30.25 * e, 98.4375 * e, 30.25 * e, 98.4375 * e, 14.25 * e, 98.4375 * e),
                a.closePath(),
                he(a, i[4], i[5], 4 * e),
                a.save(),
                a.translate(31.25 * e, 108.9375 * e),
                ye(a, -6 * e, -14.5 * e, 12 * e, 29 * e, 10 * e),
                a.restore(),
                he(a, i[4], i[5], 4 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(31.25 * e, 73.4375 * e),
                a.bezierCurveTo(33.25 * e, 77.9375 * e, 33.25 * e, 77.9375 * e, 35.25 * e, 82.4375 * e),
                a.bezierCurveTo(33.25 * e, 87.4375 * e, 33.25 * e, 87.4375 * e, 31.25 * e, 92.4375 * e),
                a.bezierCurveTo(29.25 * e, 87.9375 * e, 29.25 * e, 87.9375 * e, 27.25 * e, 83.4375 * e),
                a.closePath(),
                he(a, i[3], i[1], 2 * e),
                n
            }
            function dn(e, t) {
                var i = window.document.createElement("canvas")
                  , n = i.getContext("2d")
                  , a = 120 * e
                  , I = 140 * e;
                i.width = a,
                i.height = I,
                i.width = 130 * e,
                i.height = 120 * e,
                ye(n, 10 * e, 12 * e, 110 * e, 90 * e, 10 * e),
                he(n, t[0]),
                ye(n, 10 * e, 5 * e, 110 * e, 90 * e, 10 * e),
                he(n, t[1], t[2], 4 * e);
                var o = Se(-window.Math.PI / 5, Tt(.5 * e, !0, ["rgba(255, 255, 255, 0)", "rgba(255, 255, 255, 0)", "rgba(255, 255, 255, 0)", "#FFF", "#FFF", "#FFF", "#FFF"]));
                n.drawImage(o, 12 * e, 18 * e);
                o = Se(T, ci(.55 * e, !0, ["rgba(255, 255, 255, 0)", "#FFF", "#FFF", "#FFF", "#FFF"]));
                return n.drawImage(o, 36 * e, 16 * e),
                i
            }
            function sn(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                return n.width = 137 * e,
                n.height = 129 * e,
                a.globalAlpha = .5,
                Re(a, 69 * e, 64 * e, 48.16637831516918 * e),
                he(a, i[1]),
                a.globalAlpha = .7,
                Re(a, 69 * e, 64 * e, 38.23105625617661 * e),
                he(a, i[2]),
                a.globalAlpha = .7,
                Re(a, 69 * e, 64 * e, 32.01562118716424 * e),
                he(a, i[2], i[3], 4 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(72 * e, 41 * e),
                a.bezierCurveTo(52 * e, 41 * e, 48 * e, 50 * e, 45 * e, 58 * e),
                a.bezierCurveTo(43 * e, 67 * e, 45 * e, 68 * e, 46 * e, 72 * e),
                a.bezierCurveTo(52 * e, 53 * e, 60 * e, 48 * e, 72 * e, 42 * e),
                a.closePath(),
                he(a, i[3]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(93 * e, 62 * e),
                a.bezierCurveTo(95 * e, 72 * e, 90 * e, 81 * e, 81 * e, 87 * e),
                a.bezierCurveTo(74 * e, 91 * e, 69 * e, 89 * e, 64 * e, 88 * e),
                a.bezierCurveTo(77 * e, 83 * e, 84 * e, 82 * e, 92 * e, 62 * e),
                a.closePath(),
                he(a, i[3]),
                n
            }
            function hn(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                return n.width = 137 * e,
                n.height = 129 * e,
                a.globalAlpha = .4,
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(42.000030517578125 * e, 41.17047119140625 * e),
                a.bezierCurveTo(45.000030517578125 * e, 38.17047119140625 * e, 49.000030517578125 * e, 37.17047119140625 * e, 62.000030517578125 * e, 38.17047119140625 * e),
                a.bezierCurveTo(78.00003051757812 * e, 38.17047119140625 * e, 78.00003051757812 * e, 38.17047119140625 * e, 94.00003051757812 * e, 38.17047119140625 * e),
                a.bezierCurveTo(100.00003051757812 * e, 38.17047119140625 * e, 102.00003051757812 * e, 38.17047119140625 * e, 101.00003051757812 * e, 47.17047119140625 * e),
                a.bezierCurveTo(101.00003051757812 * e, 63.67047119140625 * e, 101.00003051757812 * e, 63.67047119140625 * e, 101.00003051757812 * e, 80.17047119140625 * e),
                a.bezierCurveTo(102.00003051757812 * e, 84.17047119140625 * e, 100.00003051757812 * e, 86.17047119140625 * e, 95.00003051757812 * e, 88.17047119140625 * e),
                a.bezierCurveTo(84.00003051757812 * e, 94.17047119140625 * e, 89.00003051757812 * e, 94.17047119140625 * e, 79.00003051757812 * e, 94.17047119140625 * e),
                a.bezierCurveTo(59.500030517578125 * e, 94.17047119140625 * e, 59.500030517578125 * e, 94.17047119140625 * e, 40.000030517578125 * e, 94.17047119140625 * e),
                a.bezierCurveTo(33.000030517578125 * e, 94.17047119140625 * e, 34.000030517578125 * e, 94.17047119140625 * e, 34.000030517578125 * e, 86.17047119140625 * e),
                a.bezierCurveTo(34.000030517578125 * e, 69.67047119140625 * e, 34.000030517578125 * e, 69.67047119140625 * e, 34.000030517578125 * e, 53.17047119140625 * e),
                a.bezierCurveTo(33.000030517578125 * e, 47.17047119140625 * e, 34.000030517578125 * e, 47.17047119140625 * e, 40.000030517578125 * e, 42.17047119140625 * e),
                a.closePath(),
                he(a, void 0, i[2], 40 * e),
                a.globalAlpha = .4,
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(42.000030517578125 * e, 41.17047119140625 * e),
                a.bezierCurveTo(45.000030517578125 * e, 38.17047119140625 * e, 49.000030517578125 * e, 37.17047119140625 * e, 62.000030517578125 * e, 38.17047119140625 * e),
                a.bezierCurveTo(78.00003051757812 * e, 38.17047119140625 * e, 78.00003051757812 * e, 38.17047119140625 * e, 94.00003051757812 * e, 38.17047119140625 * e),
                a.bezierCurveTo(100.00003051757812 * e, 38.17047119140625 * e, 102.00003051757812 * e, 38.17047119140625 * e, 101.00003051757812 * e, 47.17047119140625 * e),
                a.bezierCurveTo(101.00003051757812 * e, 63.67047119140625 * e, 101.00003051757812 * e, 63.67047119140625 * e, 101.00003051757812 * e, 80.17047119140625 * e),
                a.bezierCurveTo(102.00003051757812 * e, 84.17047119140625 * e, 100.00003051757812 * e, 86.17047119140625 * e, 95.00003051757812 * e, 88.17047119140625 * e),
                a.bezierCurveTo(84.00003051757812 * e, 94.17047119140625 * e, 89.00003051757812 * e, 94.17047119140625 * e, 79.00003051757812 * e, 94.17047119140625 * e),
                a.bezierCurveTo(59.500030517578125 * e, 94.17047119140625 * e, 59.500030517578125 * e, 94.17047119140625 * e, 40.000030517578125 * e, 94.17047119140625 * e),
                a.bezierCurveTo(33.000030517578125 * e, 94.17047119140625 * e, 34.000030517578125 * e, 94.17047119140625 * e, 34.000030517578125 * e, 86.17047119140625 * e),
                a.bezierCurveTo(34.000030517578125 * e, 69.67047119140625 * e, 34.000030517578125 * e, 69.67047119140625 * e, 34.000030517578125 * e, 53.17047119140625 * e),
                a.bezierCurveTo(33.000030517578125 * e, 47.17047119140625 * e, 34.000030517578125 * e, 47.17047119140625 * e, 40.000030517578125 * e, 42.17047119140625 * e),
                a.closePath(),
                he(a, void 0, i[1], 20 * e),
                a.globalAlpha = .8,
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(42.000030517578125 * e, 41.17047119140625 * e),
                a.bezierCurveTo(45.000030517578125 * e, 38.17047119140625 * e, 49.000030517578125 * e, 37.17047119140625 * e, 62.000030517578125 * e, 38.17047119140625 * e),
                a.bezierCurveTo(78.00003051757812 * e, 38.17047119140625 * e, 78.00003051757812 * e, 38.17047119140625 * e, 94.00003051757812 * e, 38.17047119140625 * e),
                a.bezierCurveTo(100.00003051757812 * e, 38.17047119140625 * e, 102.00003051757812 * e, 38.17047119140625 * e, 101.00003051757812 * e, 47.17047119140625 * e),
                a.bezierCurveTo(101.00003051757812 * e, 63.67047119140625 * e, 101.00003051757812 * e, 63.67047119140625 * e, 101.00003051757812 * e, 80.17047119140625 * e),
                a.bezierCurveTo(102.00003051757812 * e, 84.17047119140625 * e, 100.00003051757812 * e, 86.17047119140625 * e, 95.00003051757812 * e, 88.17047119140625 * e),
                a.bezierCurveTo(84.00003051757812 * e, 94.17047119140625 * e, 89.00003051757812 * e, 94.17047119140625 * e, 79.00003051757812 * e, 94.17047119140625 * e),
                a.bezierCurveTo(59.500030517578125 * e, 94.17047119140625 * e, 59.500030517578125 * e, 94.17047119140625 * e, 40.000030517578125 * e, 94.17047119140625 * e),
                a.bezierCurveTo(33.000030517578125 * e, 94.17047119140625 * e, 34.000030517578125 * e, 94.17047119140625 * e, 34.000030517578125 * e, 86.17047119140625 * e),
                a.bezierCurveTo(34.000030517578125 * e, 69.67047119140625 * e, 34.000030517578125 * e, 69.67047119140625 * e, 34.000030517578125 * e, 53.17047119140625 * e),
                a.bezierCurveTo(33.000030517578125 * e, 47.17047119140625 * e, 34.000030517578125 * e, 47.17047119140625 * e, 40.000030517578125 * e, 42.17047119140625 * e),
                a.closePath(),
                he(a, i[0], i[1], 4 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(51.000030517578125 * e, 37.9886474609375 * e),
                a.bezierCurveTo(51.000030517578125 * e, 61.9886474609375 * e, 51.000030517578125 * e, 61.9886474609375 * e, 51.000030517578125 * e, 85.9886474609375 * e),
                a.bezierCurveTo(75.50003051757812 * e, 85.9886474609375 * e, 75.50003051757812 * e, 85.9886474609375 * e, 100.00003051757812 * e, 85.9886474609375 * e),
                a.bezierCurveTo(100.00003051757812 * e, 61.9886474609375 * e, 100.00003051757812 * e, 61.9886474609375 * e, 100.00003051757812 * e, 37.9886474609375 * e),
                a.bezierCurveTo(76.00003051757812 * e, 37.9886474609375 * e, 76.00003051757812 * e, 37.9886474609375 * e, 52.000030517578125 * e, 37.9886474609375 * e),
                a.closePath(),
                he(a, i[1], i[2], 4 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(99.00003051757812 * e, 38.9886474609375 * e),
                a.bezierCurveTo(93.50003051757812 * e, 44.9886474609375 * e, 93.50003051757812 * e, 44.9886474609375 * e, 88.00003051757812 * e, 50.9886474609375 * e),
                a.bezierCurveTo(88.00003051757812 * e, 72.4886474609375 * e, 88.00003051757812 * e, 72.4886474609375 * e, 88.00003051757812 * e, 93.9886474609375 * e),
                a.bezierCurveTo(94.00003051757812 * e, 90.4886474609375 * e, 94.00003051757812 * e, 90.4886474609375 * e, 100.00003051757812 * e, 86.9886474609375 * e),
                a.closePath(),
                he(a, i[1], i[2], 4 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(87.00003051757812 * e, 49.625 * e),
                a.bezierCurveTo(61.000030517578125 * e, 49.625 * e, 61.000030517578125 * e, 49.625 * e, 35.000030517578125 * e, 49.625 * e),
                a.bezierCurveTo(35.000030517578125 * e, 70.625 * e, 35.000030517578125 * e, 70.625 * e, 35.000030517578125 * e, 91.625 * e),
                a.bezierCurveTo(60.500030517578125 * e, 91.625 * e, 60.500030517578125 * e, 91.625 * e, 86.00003051757812 * e, 91.625 * e),
                a.bezierCurveTo(86.50003051757812 * e, 70.625 * e, 86.50003051757812 * e, 70.625 * e, 87.00003051757812 * e, 49.625 * e),
                a.closePath(),
                he(a, i[1], i[3], 4 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(47.000030517578125 * e, 36.625 * e),
                a.bezierCurveTo(73.00003051757812 * e, 37.125 * e, 73.00003051757812 * e, 37.125 * e, 99.00003051757812 * e, 37.625 * e),
                a.bezierCurveTo(93.50003051757812 * e, 44.125 * e, 93.50003051757812 * e, 44.125 * e, 88.00003051757812 * e, 50.625 * e),
                a.bezierCurveTo(60.500030517578125 * e, 50.125 * e, 60.500030517578125 * e, 50.125 * e, 33.000030517578125 * e, 49.625 * e),
                a.closePath(),
                he(a, i[1], i[3], 4 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(53.000030517578125 * e, 52.625 * e),
                a.bezierCurveTo(40.000030517578125 * e, 54.625 * e, 39.000030517578125 * e, 59.625 * e, 40.000030517578125 * e, 67.625 * e),
                a.bezierCurveTo(45.000030517578125 * e, 59.625 * e, 48.000030517578125 * e, 58.625 * e, 54.000030517578125 * e, 53.625 * e),
                a.closePath(),
                he(a, i[3]),
                a.globalAlpha = 1,
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(42.000030517578125 * e, 41.17047119140625 * e),
                a.bezierCurveTo(45.000030517578125 * e, 38.17047119140625 * e, 49.000030517578125 * e, 37.17047119140625 * e, 62.000030517578125 * e, 38.17047119140625 * e),
                a.bezierCurveTo(78.00003051757812 * e, 38.17047119140625 * e, 78.00003051757812 * e, 38.17047119140625 * e, 94.00003051757812 * e, 38.17047119140625 * e),
                a.bezierCurveTo(100.00003051757812 * e, 38.17047119140625 * e, 102.00003051757812 * e, 38.17047119140625 * e, 101.00003051757812 * e, 47.17047119140625 * e),
                a.bezierCurveTo(101.00003051757812 * e, 63.67047119140625 * e, 101.00003051757812 * e, 63.67047119140625 * e, 101.00003051757812 * e, 80.17047119140625 * e),
                a.bezierCurveTo(102.00003051757812 * e, 84.17047119140625 * e, 100.00003051757812 * e, 86.17047119140625 * e, 95.00003051757812 * e, 88.17047119140625 * e),
                a.bezierCurveTo(84.00003051757812 * e, 94.17047119140625 * e, 89.00003051757812 * e, 94.17047119140625 * e, 79.00003051757812 * e, 94.17047119140625 * e),
                a.bezierCurveTo(59.500030517578125 * e, 94.17047119140625 * e, 59.500030517578125 * e, 94.17047119140625 * e, 40.000030517578125 * e, 94.17047119140625 * e),
                a.bezierCurveTo(33.000030517578125 * e, 94.17047119140625 * e, 34.000030517578125 * e, 94.17047119140625 * e, 34.000030517578125 * e, 86.17047119140625 * e),
                a.bezierCurveTo(34.000030517578125 * e, 69.67047119140625 * e, 34.000030517578125 * e, 69.67047119140625 * e, 34.000030517578125 * e, 53.17047119140625 * e),
                a.bezierCurveTo(33.000030517578125 * e, 47.17047119140625 * e, 34.000030517578125 * e, 47.17047119140625 * e, 40.000030517578125 * e, 42.17047119140625 * e),
                a.closePath(),
                he(a, void 0, i[3], 4 * e),
                n
            }
            function yn(e, t) {
                var i = window.document.createElement("canvas")
                  , n = i.getContext("2d");
                return i.width = 376 * e,
                i.height = 371 * e,
                n.globalAlpha = .5,
                n.translate(5 * e, 5 * e),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(191.633544921875 * e, 123.98580932617188 * e),
                n.bezierCurveTo(215.633544921875 * e, 85.98580932617188 * e, 187.633544921875 * e, 71.98580932617188 * e, 202.633544921875 * e, 19.985809326171875 * e),
                n.bezierCurveTo(231.633544921875 * e, 68.98580932617188 * e, 253.633544921875 * e, 71.98580932617188 * e, 256.633544921875 * e, 93.98580932617188 * e),
                n.bezierCurveTo(306.633544921875 * e, 64.98580932617188 * e, 319.633544921875 * e, 61.985809326171875 * e, 350.633544921875 * e, 58.985809326171875 * e),
                n.bezierCurveTo(280.633544921875 * e, 86.98580932617188 * e, 281.633544921875 * e, 106.98580932617188 * e, 268.633544921875 * e, 130.98580932617188 * e),
                n.bezierCurveTo(295.633544921875 * e, 158.98580932617188 * e, 328.633544921875 * e, 155.98580932617188 * e, 353.633544921875 * e, 90.98580932617188 * e),
                n.bezierCurveTo(371.633544921875 * e, 158.98580932617188 * e, 337.633544921875 * e, 210.98580932617188 * e, 286.633544921875 * e, 209.98580932617188 * e),
                n.bezierCurveTo(323.633544921875 * e, 230.98580932617188 * e, 317.633544921875 * e, 274.9858093261719 * e, 356.633544921875 * e, 305.9858093261719 * e),
                n.bezierCurveTo(288.633544921875 * e, 297.9858093261719 * e, 288.633544921875 * e, 265.9858093261719 * e, 275.633544921875 * e, 266.9858093261719 * e),
                n.bezierCurveTo(280.633544921875 * e, 294.9858093261719 * e, 315.633544921875 * e, 306.9858093261719 * e, 336.633544921875 * e, 316.9858093261719 * e),
                n.bezierCurveTo(295.633544921875 * e, 318.9858093261719 * e, 264.633544921875 * e, 302.9858093261719 * e, 254.633544921875 * e, 289.9858093261719 * e),
                n.bezierCurveTo(252.633544921875 * e, 301.9858093261719 * e, 224.633544921875 * e, 315.9858093261719 * e, 201.633544921875 * e, 356.9858093261719 * e),
                n.bezierCurveTo(195.633544921875 * e, 313.9858093261719 * e, 195.633544921875 * e, 308.9858093261719 * e, 196.633544921875 * e, 307.9858093261719 * e),
                n.bezierCurveTo(197.633544921875 * e, 289.9858093261719 * e, 207.633544921875 * e, 283.9858093261719 * e, 195.633544921875 * e, 258.9858093261719 * e),
                n.bezierCurveTo(182.633544921875 * e, 282.9858093261719 * e, 190.633544921875 * e, 287.9858093261719 * e, 193.633544921875 * e, 297.9858093261719 * e),
                n.bezierCurveTo(195.633544921875 * e, 306.9858093261719 * e, 191.633544921875 * e, 334.9858093261719 * e, 187.633544921875 * e, 354.9858093261719 * e),
                n.bezierCurveTo(165.633544921875 * e, 320.9858093261719 * e, 138.633544921875 * e, 307.9858093261719 * e, 135.633544921875 * e, 288.9858093261719 * e),
                n.bezierCurveTo(110.633544921875 * e, 318.9858093261719 * e, 68.633544921875 * e, 323.9858093261719 * e, 49.633544921875 * e, 320.9858093261719 * e),
                n.bezierCurveTo(88.633544921875 * e, 308.9858093261719 * e, 108.633544921875 * e, 284.9858093261719 * e, 118.633544921875 * e, 258.9858093261719 * e),
                n.bezierCurveTo(86.633544921875 * e, 264.9858093261719 * e, 75.633544921875 * e, 310.9858093261719 * e, 19.633544921875 * e, 304.9858093261719 * e),
                n.bezierCurveTo(54.633544921875 * e, 276.9858093261719 * e, 59.633544921875 * e, 214.98580932617188 * e, 105.633544921875 * e, 205.98580932617188 * e),
                n.bezierCurveTo(14.633544921875 * e, 201.98580932617188 * e, 24.633544921875 * e, 141.98580932617188 * e, 25.633544921875 * e, 82.98580932617188 * e),
                n.bezierCurveTo(49.633544921875 * e, 168.98580932617188 * e, 87.633544921875 * e, 141.98580932617188 * e, 112.633544921875 * e, 123.98580932617188 * e),
                n.bezierCurveTo(95.633544921875 * e, 75.98580932617188 * e, 70.633544921875 * e, 68.98580932617188 * e, 35.633544921875 * e, 50.985809326171875 * e),
                n.bezierCurveTo(70.633544921875 * e, 53.985809326171875 * e, 102.633544921875 * e, 65.98580932617188 * e, 125.633544921875 * e, 84.98580932617188 * e),
                n.bezierCurveTo(133.633544921875 * e, 69.98580932617188 * e, 166.633544921875 * e, 42.985809326171875 * e, 176.633544921875 * e, 21.985809326171875 * e),
                n.bezierCurveTo(185.633544921875 * e, 49.985809326171875 * e, 168.633544921875 * e, 95.98580932617188 * e, 191.633544921875 * e, 121.98580932617188 * e),
                n.closePath(),
                he(n, t[0]),
                n.globalAlpha = 1,
                n.translate(-4 * e, -5 * e),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(191.633544921875 * e, 123.98580932617188 * e),
                n.bezierCurveTo(215.633544921875 * e, 85.98580932617188 * e, 187.633544921875 * e, 71.98580932617188 * e, 202.633544921875 * e, 19.985809326171875 * e),
                n.bezierCurveTo(231.633544921875 * e, 68.98580932617188 * e, 253.633544921875 * e, 71.98580932617188 * e, 256.633544921875 * e, 93.98580932617188 * e),
                n.bezierCurveTo(306.633544921875 * e, 64.98580932617188 * e, 319.633544921875 * e, 61.985809326171875 * e, 350.633544921875 * e, 58.985809326171875 * e),
                n.bezierCurveTo(280.633544921875 * e, 86.98580932617188 * e, 281.633544921875 * e, 106.98580932617188 * e, 268.633544921875 * e, 130.98580932617188 * e),
                n.bezierCurveTo(295.633544921875 * e, 158.98580932617188 * e, 328.633544921875 * e, 155.98580932617188 * e, 353.633544921875 * e, 90.98580932617188 * e),
                n.bezierCurveTo(371.633544921875 * e, 158.98580932617188 * e, 337.633544921875 * e, 210.98580932617188 * e, 286.633544921875 * e, 209.98580932617188 * e),
                n.bezierCurveTo(323.633544921875 * e, 230.98580932617188 * e, 317.633544921875 * e, 274.9858093261719 * e, 356.633544921875 * e, 305.9858093261719 * e),
                n.bezierCurveTo(288.633544921875 * e, 297.9858093261719 * e, 288.633544921875 * e, 265.9858093261719 * e, 275.633544921875 * e, 266.9858093261719 * e),
                n.bezierCurveTo(280.633544921875 * e, 294.9858093261719 * e, 315.633544921875 * e, 306.9858093261719 * e, 336.633544921875 * e, 316.9858093261719 * e),
                n.bezierCurveTo(295.633544921875 * e, 318.9858093261719 * e, 264.633544921875 * e, 302.9858093261719 * e, 254.633544921875 * e, 289.9858093261719 * e),
                n.bezierCurveTo(252.633544921875 * e, 301.9858093261719 * e, 224.633544921875 * e, 315.9858093261719 * e, 201.633544921875 * e, 356.9858093261719 * e),
                n.bezierCurveTo(195.633544921875 * e, 313.9858093261719 * e, 195.633544921875 * e, 308.9858093261719 * e, 196.633544921875 * e, 307.9858093261719 * e),
                n.bezierCurveTo(197.633544921875 * e, 289.9858093261719 * e, 207.633544921875 * e, 283.9858093261719 * e, 195.633544921875 * e, 258.9858093261719 * e),
                n.bezierCurveTo(182.633544921875 * e, 282.9858093261719 * e, 190.633544921875 * e, 287.9858093261719 * e, 193.633544921875 * e, 297.9858093261719 * e),
                n.bezierCurveTo(195.633544921875 * e, 306.9858093261719 * e, 191.633544921875 * e, 334.9858093261719 * e, 187.633544921875 * e, 354.9858093261719 * e),
                n.bezierCurveTo(165.633544921875 * e, 320.9858093261719 * e, 138.633544921875 * e, 307.9858093261719 * e, 135.633544921875 * e, 288.9858093261719 * e),
                n.bezierCurveTo(110.633544921875 * e, 318.9858093261719 * e, 68.633544921875 * e, 323.9858093261719 * e, 49.633544921875 * e, 320.9858093261719 * e),
                n.bezierCurveTo(88.633544921875 * e, 308.9858093261719 * e, 108.633544921875 * e, 284.9858093261719 * e, 118.633544921875 * e, 258.9858093261719 * e),
                n.bezierCurveTo(86.633544921875 * e, 264.9858093261719 * e, 75.633544921875 * e, 310.9858093261719 * e, 19.633544921875 * e, 304.9858093261719 * e),
                n.bezierCurveTo(54.633544921875 * e, 276.9858093261719 * e, 59.633544921875 * e, 214.98580932617188 * e, 105.633544921875 * e, 205.98580932617188 * e),
                n.bezierCurveTo(14.633544921875 * e, 201.98580932617188 * e, 24.633544921875 * e, 141.98580932617188 * e, 25.633544921875 * e, 82.98580932617188 * e),
                n.bezierCurveTo(49.633544921875 * e, 168.98580932617188 * e, 87.633544921875 * e, 141.98580932617188 * e, 112.633544921875 * e, 123.98580932617188 * e),
                n.bezierCurveTo(95.633544921875 * e, 75.98580932617188 * e, 70.633544921875 * e, 68.98580932617188 * e, 35.633544921875 * e, 50.985809326171875 * e),
                n.bezierCurveTo(70.633544921875 * e, 53.985809326171875 * e, 102.633544921875 * e, 65.98580932617188 * e, 125.633544921875 * e, 84.98580932617188 * e),
                n.bezierCurveTo(133.633544921875 * e, 69.98580932617188 * e, 166.633544921875 * e, 42.985809326171875 * e, 176.633544921875 * e, 21.985809326171875 * e),
                n.bezierCurveTo(185.633544921875 * e, 49.985809326171875 * e, 168.633544921875 * e, 95.98580932617188 * e, 191.633544921875 * e, 121.98580932617188 * e),
                n.closePath(),
                he(n, void 0, t[1], 12 * e),
                n.translate(-1 * e, 0 * e),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(270.633544921875 * e, 88.98580932617188 * e),
                n.bezierCurveTo(296.633544921875 * e, 65.98580932617188 * e, 318.633544921875 * e, 62.985809326171875 * e, 348.633544921875 * e, 57.985809326171875 * e),
                n.bezierCurveTo(309.633544921875 * e, 76.98580932617188 * e, 291.633544921875 * e, 88.98580932617188 * e, 280.633544921875 * e, 99.98580932617188 * e),
                n.closePath(),
                he(n, t[4], t[5], 4 * e),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(275.633544921875 * e, 281.9858093261719 * e),
                n.bezierCurveTo(303.633544921875 * e, 308.9858093261719 * e, 321.633544921875 * e, 308.9858093261719 * e, 335.633544921875 * e, 315.9858093261719 * e),
                n.bezierCurveTo(305.633544921875 * e, 320.9858093261719 * e, 278.633544921875 * e, 307.9858093261719 * e, 264.633544921875 * e, 293.9858093261719 * e),
                n.closePath(),
                he(n, t[4], t[5], 4 * e),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(124.633544921875 * e, 291.9858093261719 * e),
                n.bezierCurveTo(106.633544921875 * e, 316.9858093261719 * e, 72.633544921875 * e, 325.9858093261719 * e, 53.633544921875 * e, 319.9858093261719 * e),
                n.bezierCurveTo(83.633544921875 * e, 308.9858093261719 * e, 97.633544921875 * e, 298.9858093261719 * e, 112.633544921875 * e, 284.9858093261719 * e),
                n.closePath(),
                he(n, t[4], t[5], 4 * e),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(113.633544921875 * e, 80.98580932617188 * e),
                n.bezierCurveTo(91.633544921875 * e, 54.985809326171875 * e, 72.633544921875 * e, 56.985809326171875 * e, 36.633544921875 * e, 49.985809326171875 * e),
                n.bezierCurveTo(87.633544921875 * e, 72.98580932617188 * e, 95.633544921875 * e, 82.98580932617188 * e, 106.633544921875 * e, 96.98580932617188 * e),
                n.closePath(),
                he(n, t[4], t[5], 4 * e),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(202.633544921875 * e, 20.985809326171875 * e),
                n.bezierCurveTo(219.633544921875 * e, 49.985809326171875 * e, 259.633544921875 * e, 80.98580932617188 * e, 255.633544921875 * e, 92.98580932617188 * e),
                n.bezierCurveTo(268.633544921875 * e, 86.98580932617188 * e, 265.633544921875 * e, 87.98580932617188 * e, 275.633544921875 * e, 82.98580932617188 * e),
                n.bezierCurveTo(283.633544921875 * e, 87.98580932617188 * e, 283.633544921875 * e, 87.98580932617188 * e, 291.633544921875 * e, 92.98580932617188 * e),
                n.bezierCurveTo(269.633544921875 * e, 116.98580932617188 * e, 270.633544921875 * e, 124.98580932617188 * e, 267.633544921875 * e, 130.98580932617188 * e),
                n.bezierCurveTo(307.633544921875 * e, 168.98580932617188 * e, 339.633544921875 * e, 132.98580932617188 * e, 352.633544921875 * e, 93.98580932617188 * e),
                n.bezierCurveTo(366.633544921875 * e, 145.98580932617188 * e, 345.633544921875 * e, 207.98580932617188 * e, 286.633544921875 * e, 208.98580932617188 * e),
                n.bezierCurveTo(315.633544921875 * e, 223.98580932617188 * e, 327.633544921875 * e, 287.9858093261719 * e, 355.633544921875 * e, 305.9858093261719 * e),
                n.bezierCurveTo(293.633544921875 * e, 298.9858093261719 * e, 293.633544921875 * e, 275.9858093261719 * e, 276.633544921875 * e, 266.9858093261719 * e),
                n.bezierCurveTo(274.633544921875 * e, 282.9858093261719 * e, 287.633544921875 * e, 288.9858093261719 * e, 295.633544921875 * e, 296.9858093261719 * e),
                n.bezierCurveTo(287.133544921875 * e, 302.4858093261719 * e, 287.133544921875 * e, 302.4858093261719 * e, 278.633544921875 * e, 307.9858093261719 * e),
                n.bezierCurveTo(261.633544921875 * e, 297.9858093261719 * e, 258.633544921875 * e, 293.9858093261719 * e, 255.633544921875 * e, 290.9858093261719 * e),
                n.bezierCurveTo(249.633544921875 * e, 301.9858093261719 * e, 225.633544921875 * e, 320.9858093261719 * e, 202.633544921875 * e, 354.9858093261719 * e),
                n.bezierCurveTo(195.633544921875 * e, 318.9858093261719 * e, 196.633544921875 * e, 306.9858093261719 * e, 198.633544921875 * e, 300.9858093261719 * e),
                n.bezierCurveTo(209.633544921875 * e, 268.9858093261719 * e, 199.633544921875 * e, 266.9858093261719 * e, 195.633544921875 * e, 256.9858093261719 * e),
                n.bezierCurveTo(183.633544921875 * e, 274.9858093261719 * e, 182.633544921875 * e, 281.9858093261719 * e, 192.633544921875 * e, 305.9858093261719 * e),
                n.bezierCurveTo(194.633544921875 * e, 317.9858093261719 * e, 191.633544921875 * e, 336.9858093261719 * e, 186.633544921875 * e, 351.9858093261719 * e),
                n.bezierCurveTo(166.633544921875 * e, 318.9858093261719 * e, 141.633544921875 * e, 303.9858093261719 * e, 136.633544921875 * e, 286.9858093261719 * e),
                n.bezierCurveTo(122.633544921875 * e, 303.9858093261719 * e, 115.633544921875 * e, 305.9858093261719 * e, 109.633544921875 * e, 306.9858093261719 * e),
                n.bezierCurveTo(101.133544921875 * e, 301.9858093261719 * e, 94.633544921875 * e, 297.9858093261719 * e, 92.633544921875 * e, 296.9858093261719 * e),
                n.bezierCurveTo(116.633544921875 * e, 277.9858093261719 * e, 116.633544921875 * e, 266.9858093261719 * e, 119.633544921875 * e, 257.9858093261719 * e),
                n.bezierCurveTo(107.633544921875 * e, 257.9858093261719 * e, 65.633544921875 * e, 308.9858093261719 * e, 24.633544921875 * e, 303.9858093261719 * e),
                n.bezierCurveTo(51.633544921875 * e, 275.9858093261719 * e, 64.633544921875 * e, 220.98580932617188 * e, 108.633544921875 * e, 205.98580932617188 * e),
                n.bezierCurveTo(14.633544921875 * e, 198.98580932617188 * e, 26.633544921875 * e, 142.98580932617188 * e, 25.633544921875 * e, 86.98580932617188 * e),
                n.bezierCurveTo(41.633544921875 * e, 155.98580932617188 * e, 81.633544921875 * e, 148.98580932617188 * e, 113.633544921875 * e, 124.98580932617188 * e),
                n.bezierCurveTo(102.633544921875 * e, 93.98580932617188 * e, 95.633544921875 * e, 88.98580932617188 * e, 89.633544921875 * e, 81.98580932617188 * e),
                n.bezierCurveTo(97.633544921875 * e, 76.48580932617188 * e, 97.633544921875 * e, 76.48580932617188 * e, 105.633544921875 * e, 70.98580932617188 * e),
                n.bezierCurveTo(120.633544921875 * e, 78.98580932617188 * e, 121.633544921875 * e, 81.98580932617188 * e, 124.633544921875 * e, 86.98580932617188 * e),
                n.bezierCurveTo(132.633544921875 * e, 71.98580932617188 * e, 160.633544921875 * e, 56.985809326171875 * e, 175.633544921875 * e, 23.985809326171875 * e),
                n.bezierCurveTo(182.633544921875 * e, 53.985809326171875 * e, 170.633544921875 * e, 102.98580932617188 * e, 191.633544921875 * e, 125.98580932617188 * e),
                n.bezierCurveTo(214.633544921875 * e, 89.98580932617188 * e, 192.633544921875 * e, 58.985809326171875 * e, 202.633544921875 * e, 20.985809326171875 * e),
                n.closePath(),
                he(n, t[2], t[3], 5 * e),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(203.633544921875 * e, 21.985809326171875 * e),
                n.bezierCurveTo(223.633544921875 * e, 63.985809326171875 * e, 227.633544921875 * e, 72.98580932617188 * e, 235.633544921875 * e, 98.98580932617188 * e),
                n.bezierCurveTo(241.633544921875 * e, 123.98580932617188 * e, 225.633544921875 * e, 138.98580932617188 * e, 196.633544921875 * e, 122.98580932617188 * e),
                n.bezierCurveTo(213.633544921875 * e, 93.98580932617188 * e, 199.633544921875 * e, 49.985809326171875 * e, 203.633544921875 * e, 26.985809326171875 * e),
                n.closePath(),
                he(n, t[3]),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(175.633544921875 * e, 25.985809326171875 * e),
                n.bezierCurveTo(176.633544921875 * e, 51.985809326171875 * e, 171.633544921875 * e, 88.98580932617188 * e, 186.633544921875 * e, 121.98580932617188 * e),
                n.bezierCurveTo(156.633544921875 * e, 144.98580932617188 * e, 139.633544921875 * e, 120.98580932617188 * e, 147.633544921875 * e, 97.98580932617188 * e),
                n.bezierCurveTo(152.633544921875 * e, 77.98580932617188 * e, 162.633544921875 * e, 60.985809326171875 * e, 176.633544921875 * e, 25.985809326171875 * e),
                n.closePath(),
                he(n, t[3]),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(26.633544921875 * e, 96.98580932617188 * e),
                n.bezierCurveTo(38.633544921875 * e, 151.98580932617188 * e, 61.633544921875 * e, 161.98580932617188 * e, 88.633544921875 * e, 168.98580932617188 * e),
                n.bezierCurveTo(117.633544921875 * e, 177.98580932617188 * e, 113.633544921875 * e, 185.98580932617188 * e, 106.633544921875 * e, 204.98580932617188 * e),
                n.bezierCurveTo(32.633544921875 * e, 204.98580932617188 * e, 25.633544921875 * e, 149.98580932617188 * e, 25.633544921875 * e, 97.98580932617188 * e),
                n.closePath(),
                he(n, t[3]),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(351.633544921875 * e, 99.98580932617188 * e),
                n.bezierCurveTo(365.633544921875 * e, 161.98580932617188 * e, 333.633544921875 * e, 203.98580932617188 * e, 287.633544921875 * e, 207.98580932617188 * e),
                n.bezierCurveTo(255.633544921875 * e, 208.98580932617188 * e, 266.633544921875 * e, 174.98580932617188 * e, 285.633544921875 * e, 176.98580932617188 * e),
                n.bezierCurveTo(313.633544921875 * e, 178.98580932617188 * e, 348.633544921875 * e, 135.98580932617188 * e, 353.633544921875 * e, 99.98580932617188 * e),
                n.closePath(),
                he(n, t[3]),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(350.633544921875 * e, 302.9858093261719 * e),
                n.bezierCurveTo(310.633544921875 * e, 280.9858093261719 * e, 314.633544921875 * e, 244.98580932617188 * e, 292.633544921875 * e, 230.98580932617188 * e),
                n.bezierCurveTo(272.633544921875 * e, 215.98580932617188 * e, 263.633544921875 * e, 222.98580932617188 * e, 256.633544921875 * e, 236.98580932617188 * e),
                n.bezierCurveTo(251.633544921875 * e, 249.98580932617188 * e, 264.633544921875 * e, 255.98580932617188 * e, 279.633544921875 * e, 268.9858093261719 * e),
                n.bezierCurveTo(306.633544921875 * e, 295.9858093261719 * e, 325.633544921875 * e, 299.9858093261719 * e, 349.633544921875 * e, 302.9858093261719 * e),
                n.closePath(),
                he(n, t[3]),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(95.633544921875 * e, 224.98580932617188 * e),
                n.bezierCurveTo(64.633544921875 * e, 245.98580932617188 * e, 62.633544921875 * e, 280.9858093261719 * e, 32.633544921875 * e, 303.9858093261719 * e),
                n.bezierCurveTo(59.633544921875 * e, 301.9858093261719 * e, 102.633544921875 * e, 260.9858093261719 * e, 116.633544921875 * e, 255.98580932617188 * e),
                n.bezierCurveTo(139.633544921875 * e, 229.98580932617188 * e, 108.633544921875 * e, 209.98580932617188 * e, 97.633544921875 * e, 224.98580932617188 * e),
                n.closePath(),
                he(n, t[3]),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(195.633544921875 * e, 253.98580932617188 * e),
                n.bezierCurveTo(209.633544921875 * e, 282.9858093261719 * e, 205.633544921875 * e, 278.9858093261719 * e, 199.633544921875 * e, 307.9858093261719 * e),
                n.bezierCurveTo(198.633544921875 * e, 332.9858093261719 * e, 201.633544921875 * e, 340.9858093261719 * e, 202.633544921875 * e, 348.9858093261719 * e),
                n.bezierCurveTo(215.633544921875 * e, 313.9858093261719 * e, 226.633544921875 * e, 291.9858093261719 * e, 235.633544921875 * e, 270.9858093261719 * e),
                n.bezierCurveTo(243.633544921875 * e, 247.98580932617188 * e, 219.633544921875 * e, 235.98580932617188 * e, 196.633544921875 * e, 252.98580932617188 * e),
                n.closePath(),
                he(n, t[3]),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(195.633544921875 * e, 251.98580932617188 * e),
                n.bezierCurveTo(176.633544921875 * e, 275.9858093261719 * e, 182.633544921875 * e, 285.9858093261719 * e, 191.633544921875 * e, 308.9858093261719 * e),
                n.bezierCurveTo(194.633544921875 * e, 318.9858093261719 * e, 190.633544921875 * e, 334.9858093261719 * e, 186.633544921875 * e, 348.9858093261719 * e),
                n.bezierCurveTo(175.633544921875 * e, 307.9858093261719 * e, 157.633544921875 * e, 291.9858093261719 * e, 155.633544921875 * e, 272.9858093261719 * e),
                n.bezierCurveTo(150.633544921875 * e, 243.98580932617188 * e, 170.633544921875 * e, 236.98580932617188 * e, 195.633544921875 * e, 251.98580932617188 * e),
                n.closePath(),
                he(n, t[3]),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(316 * e, 186.8020782470703 * e),
                n.bezierCurveTo(315 * e, 173.8020782470703 * e, 298 * e, 177.8020782470703 * e, 293 * e, 183.8020782470703 * e),
                n.bezierCurveTo(285 * e, 195.8020782470703 * e, 314 * e, 197.8020782470703 * e, 315 * e, 187.8020782470703 * e),
                n.closePath(),
                he(n, t[6], t[7], 4 * e),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(340 * e, 157.8020782470703 * e),
                n.bezierCurveTo(327 * e, 153.8020782470703 * e, 321 * e, 168.8020782470703 * e, 330 * e, 174.8020782470703 * e),
                n.bezierCurveTo(341 * e, 178.8020782470703 * e, 347 * e, 161.8020782470703 * e, 341 * e, 157.8020782470703 * e),
                n.closePath(),
                he(n, t[6], t[7], 4 * e),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(349 * e, 136.8020782470703 * e),
                n.bezierCurveTo(343 * e, 135.8020782470703 * e, 342 * e, 139.8020782470703 * e, 341 * e, 147.8020782470703 * e),
                n.bezierCurveTo(343 * e, 155.8020782470703 * e, 353 * e, 143.8020782470703 * e, 349 * e, 137.8020782470703 * e),
                n.closePath(),
                he(n, t[6], t[7], 4 * e),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(278.75 * e, 246.4375 * e),
                n.bezierCurveTo(288.75 * e, 242.4375 * e, 301.75 * e, 248.4375 * e, 298.75 * e, 262.4375 * e),
                n.bezierCurveTo(293.75 * e, 271.4375 * e, 287.75 * e, 271.4375 * e, 278.75 * e, 262.4375 * e),
                n.bezierCurveTo(271.75 * e, 255.4375 * e, 274.75 * e, 250.4375 * e, 277.75 * e, 247.4375 * e),
                n.closePath(),
                he(n, t[6], t[7], 4 * e),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(310.75 * e, 277.4375 * e),
                n.bezierCurveTo(319.75 * e, 280.4375 * e, 322.75 * e, 283.4375 * e, 321.75 * e, 289.4375 * e),
                n.bezierCurveTo(319.75 * e, 295.4375 * e, 313.75 * e, 291.4375 * e, 308.75 * e, 288.4375 * e),
                n.bezierCurveTo(301.75 * e, 281.4375 * e, 306.75 * e, 277.4375 * e, 309.75 * e, 277.4375 * e),
                n.closePath(),
                he(n, t[6], t[7], 4 * e),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(217.75 * e, 257.4375 * e),
                n.bezierCurveTo(227.75 * e, 269.4375 * e, 220.75 * e, 281.4375 * e, 212.75 * e, 280.4375 * e),
                n.bezierCurveTo(206.75 * e, 279.4375 * e, 206.75 * e, 269.4375 * e, 204.75 * e, 260.4375 * e),
                n.bezierCurveTo(204.75 * e, 254.4375 * e, 211.75 * e, 253.4375 * e, 216.75 * e, 256.4375 * e),
                n.closePath(),
                he(n, t[6], t[7], 4 * e),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(211.75 * e, 289.4375 * e),
                n.bezierCurveTo(219.75 * e, 292.4375 * e, 213.75 * e, 306.4375 * e, 206.75 * e, 307.4375 * e),
                n.bezierCurveTo(199.75 * e, 303.4375 * e, 209.75 * e, 287.4375 * e, 210.75 * e, 289.4375 * e),
                n.closePath(),
                he(n, t[6], t[7], 4 * e),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(171.75 * e, 256.4375 * e),
                n.bezierCurveTo(162.75 * e, 273.4375 * e, 166.75 * e, 278.4375 * e, 175.75 * e, 280.4375 * e),
                n.bezierCurveTo(183.75 * e, 278.4375 * e, 185.75 * e, 257.4375 * e, 182.75 * e, 255.4375 * e),
                n.bezierCurveTo(176.75 * e, 251.4375 * e, 172.75 * e, 253.4375 * e, 172.75 * e, 256.4375 * e),
                n.closePath(),
                he(n, t[6], t[7], 4 * e),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(175.75 * e, 289.9375 * e),
                n.bezierCurveTo(183.75 * e, 287.9375 * e, 186.75 * e, 301.9375 * e, 182.75 * e, 305.9375 * e),
                n.bezierCurveTo(176.75 * e, 307.9375 * e, 171.75 * e, 292.9375 * e, 174.75 * e, 290.9375 * e),
                n.closePath(),
                he(n, t[6], t[7], 4 * e),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(205.75 * e, 314.4375 * e),
                n.bezierCurveTo(209.75 * e, 316.4375 * e, 210.75 * e, 320.4375 * e, 206.75 * e, 323.4375 * e),
                n.bezierCurveTo(201.75 * e, 324.4375 * e, 201.75 * e, 314.4375 * e, 204.75 * e, 314.4375 * e),
                n.closePath(),
                he(n, t[6], t[7], 4 * e),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(186.75 * e, 313.4375 * e),
                n.bezierCurveTo(181.75 * e, 315.4375 * e, 180.75 * e, 321.4375 * e, 185.75 * e, 326.4375 * e),
                n.bezierCurveTo(190.75 * e, 327.4375 * e, 190.75 * e, 313.4375 * e, 187.75 * e, 314.4375 * e),
                n.closePath(),
                he(n, t[6], t[7], 4 * e),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(103.75 * e, 244.4375 * e),
                n.bezierCurveTo(96.75 * e, 239.4375 * e, 83.75 * e, 240.4375 * e, 81.75 * e, 255.4375 * e),
                n.bezierCurveTo(80.75 * e, 264.4375 * e, 89.75 * e, 269.4375 * e, 99.75 * e, 260.4375 * e),
                n.bezierCurveTo(106.75 * e, 254.4375 * e, 106.75 * e, 250.4375 * e, 104.75 * e, 245.4375 * e),
                n.closePath(),
                he(n, t[6], t[7], 4 * e),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(86.75 * e, 182.4375 * e),
                n.bezierCurveTo(82.75 * e, 170.4375 * e, 66.75 * e, 169.4375 * e, 61.75 * e, 181.4375 * e),
                n.bezierCurveTo(58.75 * e, 187.4375 * e, 68.75 * e, 194.4375 * e, 75.75 * e, 192.4375 * e),
                n.bezierCurveTo(83.75 * e, 192.4375 * e, 86.75 * e, 187.4375 * e, 86.75 * e, 183.4375 * e),
                n.closePath(),
                he(n, t[6], t[7], 4 * e),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(44.75 * e, 152.4375 * e),
                n.bezierCurveTo(55.75 * e, 159.4375 * e, 54.75 * e, 170.4375 * e, 46.75 * e, 171.4375 * e),
                n.bezierCurveTo(39.75 * e, 170.4375 * e, 34.75 * e, 151.4375 * e, 43.75 * e, 152.4375 * e),
                n.closePath(),
                he(n, t[6], t[7], 4 * e),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(31.75 * e, 130.4375 * e),
                n.bezierCurveTo(35.75 * e, 132.4375 * e, 35.75 * e, 131.4375 * e, 37.75 * e, 137.4375 * e),
                n.bezierCurveTo(36.75 * e, 144.4375 * e, 36.75 * e, 145.4375 * e, 33.75 * e, 144.4375 * e),
                n.bezierCurveTo(26.75 * e, 137.4375 * e, 29.75 * e, 131.4375 * e, 31.75 * e, 130.4375 * e),
                n.closePath(),
                he(n, t[6], t[7], 4 * e),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(69.75 * e, 274.4375 * e),
                n.bezierCurveTo(62.75 * e, 272.4375 * e, 59.75 * e, 277.4375 * e, 57.75 * e, 284.4375 * e),
                n.bezierCurveTo(56.75 * e, 290.4375 * e, 63.75 * e, 289.4375 * e, 71.75 * e, 282.4375 * e),
                n.bezierCurveTo(75.75 * e, 277.4375 * e, 72.75 * e, 275.4375 * e, 69.75 * e, 274.4375 * e),
                n.closePath(),
                he(n, t[6], t[7], 4 * e),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(165.75 * e, 95.4375 * e),
                n.bezierCurveTo(177.75 * e, 97.4375 * e, 182.75 * e, 115.4375 * e, 173.75 * e, 121.4375 * e),
                n.bezierCurveTo(164.75 * e, 126.4375 * e, 149.75 * e, 102.4375 * e, 164.75 * e, 96.4375 * e),
                n.closePath(),
                he(n, t[6], t[7], 4 * e),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(216.75 * e, 94.4375 * e),
                n.bezierCurveTo(227.75 * e, 99.4375 * e, 223.75 * e, 122.4375 * e, 210.75 * e, 119.4375 * e),
                n.bezierCurveTo(203.75 * e, 115.4375 * e, 207.75 * e, 93.4375 * e, 216.75 * e, 94.4375 * e),
                n.closePath(),
                he(n, t[6], t[7], 4 * e),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(211.75 * e, 68.4375 * e),
                n.bezierCurveTo(218.75 * e, 69.4375 * e, 220.75 * e, 77.4375 * e, 216.75 * e, 83.4375 * e),
                n.bezierCurveTo(208.75 * e, 89.4375 * e, 205.75 * e, 68.4375 * e, 210.75 * e, 68.4375 * e),
                n.closePath(),
                he(n, t[6], t[7], 4 * e),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(169.75 * e, 71.4375 * e),
                n.bezierCurveTo(162.75 * e, 72.4375 * e, 159.75 * e, 83.4375 * e, 167.75 * e, 88.4375 * e),
                n.bezierCurveTo(174.75 * e, 90.4375 * e, 174.75 * e, 72.4375 * e, 170.75 * e, 71.4375 * e),
                n.closePath(),
                he(n, t[6], t[7], 4 * e),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(193.75 * e, 160.4375 * e),
                n.bezierCurveTo(215.75 * e, 168.4375 * e, 224.75 * e, 180.4375 * e, 229.75 * e, 193.4375 * e),
                n.bezierCurveTo(223.75 * e, 211.4375 * e, 205.75 * e, 225.4375 * e, 193.75 * e, 229.4375 * e),
                n.bezierCurveTo(167.75 * e, 217.4375 * e, 161.75 * e, 205.4375 * e, 156.75 * e, 192.4375 * e),
                n.bezierCurveTo(164.75 * e, 175.4375 * e, 176.75 * e, 166.4375 * e, 192.75 * e, 160.4375 * e),
                n.closePath(),
                he(n, t[8], t[9], 3 * e),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(189.1999969482422 * e, 182.61249923706055 * e),
                n.bezierCurveTo(190.1999969482422 * e, 184.11249923706055 * e, 190.1999969482422 * e, 184.11249923706055 * e, 191.1999969482422 * e, 185.61249923706055 * e),
                n.bezierCurveTo(192.1999969482422 * e, 180.61249923706055 * e, 192.1999969482422 * e, 180.61249923706055 * e, 193.1999969482422 * e, 175.61249923706055 * e),
                n.bezierCurveTo(195.6999969482422 * e, 177.11249923706055 * e, 195.6999969482422 * e, 177.11249923706055 * e, 198.1999969482422 * e, 178.61249923706055 * e),
                n.bezierCurveTo(198.1999969482422 * e, 181.11249923706055 * e, 198.1999969482422 * e, 181.11249923706055 * e, 198.1999969482422 * e, 183.61249923706055 * e),
                n.bezierCurveTo(201.6999969482422 * e, 181.11249923706055 * e, 201.6999969482422 * e, 181.11249923706055 * e, 205.1999969482422 * e, 178.61249923706055 * e),
                n.bezierCurveTo(206.6999969482422 * e, 180.61249923706055 * e, 206.6999969482422 * e, 180.61249923706055 * e, 208.1999969482422 * e, 182.61249923706055 * e),
                n.bezierCurveTo(206.1999969482422 * e, 185.61249923706055 * e, 206.1999969482422 * e, 185.61249923706055 * e, 204.1999969482422 * e, 188.61249923706055 * e),
                n.bezierCurveTo(208.6999969482422 * e, 188.61249923706055 * e, 208.6999969482422 * e, 188.61249923706055 * e, 213.1999969482422 * e, 188.61249923706055 * e),
                n.bezierCurveTo(213.1999969482422 * e, 191.11249923706055 * e, 213.1999969482422 * e, 191.11249923706055 * e, 213.1999969482422 * e, 193.61249923706055 * e),
                n.bezierCurveTo(209.6999969482422 * e, 194.61249923706055 * e, 209.6999969482422 * e, 194.61249923706055 * e, 206.1999969482422 * e, 195.61249923706055 * e),
                n.bezierCurveTo(210.1999969482422 * e, 198.61249923706055 * e, 210.1999969482422 * e, 198.61249923706055 * e, 214.1999969482422 * e, 201.61249923706055 * e),
                n.bezierCurveTo(212.1999969482422 * e, 203.61249923706055 * e, 212.1999969482422 * e, 203.61249923706055 * e, 210.1999969482422 * e, 205.61249923706055 * e),
                n.bezierCurveTo(207.1999969482422 * e, 204.11249923706055 * e, 207.1999969482422 * e, 204.11249923706055 * e, 204.1999969482422 * e, 202.61249923706055 * e),
                n.bezierCurveTo(205.6999969482422 * e, 207.61249923706055 * e, 205.6999969482422 * e, 207.61249923706055 * e, 207.1999969482422 * e, 212.61249923706055 * e),
                n.bezierCurveTo(204.6999969482422 * e, 213.61249923706055 * e, 204.6999969482422 * e, 213.61249923706055 * e, 202.1999969482422 * e, 214.61249923706055 * e),
                n.bezierCurveTo(200.1999969482422 * e, 210.61249923706055 * e, 200.1999969482422 * e, 210.61249923706055 * e, 198.1999969482422 * e, 206.61249923706055 * e),
                n.bezierCurveTo(196.6999969482422 * e, 211.61249923706055 * e, 196.6999969482422 * e, 211.61249923706055 * e, 195.1999969482422 * e, 216.61249923706055 * e),
                n.bezierCurveTo(192.6999969482422 * e, 216.11249923706055 * e, 192.6999969482422 * e, 216.11249923706055 * e, 190.1999969482422 * e, 215.61249923706055 * e),
                n.bezierCurveTo(190.1999969482422 * e, 211.61249923706055 * e, 190.1999969482422 * e, 211.61249923706055 * e, 190.1999969482422 * e, 207.61249923706055 * e),
                n.bezierCurveTo(186.1999969482422 * e, 210.61249923706055 * e, 186.1999969482422 * e, 210.61249923706055 * e, 182.1999969482422 * e, 213.61249923706055 * e),
                n.bezierCurveTo(181.1999969482422 * e, 211.11249923706055 * e, 181.1999969482422 * e, 211.11249923706055 * e, 180.1999969482422 * e, 208.61249923706055 * e),
                n.bezierCurveTo(183.1999969482422 * e, 205.61249923706055 * e, 183.1999969482422 * e, 205.61249923706055 * e, 186.1999969482422 * e, 202.61249923706055 * e),
                n.bezierCurveTo(180.6999969482422 * e, 203.11249923706055 * e, 180.6999969482422 * e, 203.11249923706055 * e, 175.1999969482422 * e, 203.61249923706055 * e),
                n.bezierCurveTo(174.6999969482422 * e, 200.11249923706055 * e, 174.6999969482422 * e, 200.11249923706055 * e, 174.1999969482422 * e, 196.61249923706055 * e),
                n.bezierCurveTo(177.1999969482422 * e, 195.61249923706055 * e, 177.1999969482422 * e, 195.61249923706055 * e, 180.1999969482422 * e, 194.61249923706055 * e),
                n.bezierCurveTo(177.1999969482422 * e, 191.61249923706055 * e, 177.1999969482422 * e, 191.61249923706055 * e, 174.1999969482422 * e, 188.61249923706055 * e),
                n.bezierCurveTo(175.6999969482422 * e, 187.11249923706055 * e, 175.6999969482422 * e, 187.11249923706055 * e, 177.1999969482422 * e, 185.61249923706055 * e),
                n.bezierCurveTo(180.6999969482422 * e, 187.11249923706055 * e, 180.6999969482422 * e, 187.11249923706055 * e, 184.1999969482422 * e, 188.61249923706055 * e),
                n.bezierCurveTo(182.6999969482422 * e, 183.61249923706055 * e, 182.6999969482422 * e, 183.61249923706055 * e, 181.1999969482422 * e, 178.61249923706055 * e),
                n.bezierCurveTo(183.1999969482422 * e, 177.11249923706055 * e, 183.1999969482422 * e, 177.11249923706055 * e, 185.1999969482422 * e, 175.61249923706055 * e),
                n.closePath(),
                he(n, t[10]),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(185.1999969482422 * e, 173.8125 * e),
                n.bezierCurveTo(187.1999969482422 * e, 179.3125 * e, 187.1999969482422 * e, 179.3125 * e, 189.1999969482422 * e, 184.8125 * e),
                n.bezierCurveTo(184.1999969482422 * e, 181.8125 * e, 184.1999969482422 * e, 181.8125 * e, 179.1999969482422 * e, 178.8125 * e),
                n.bezierCurveTo(181.1999969482422 * e, 175.8125 * e, 182.1999969482422 * e, 174.8125 * e, 185.1999969482422 * e, 173.8125 * e),
                n.closePath(),
                he(n, t[11]),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(192.1999969482422 * e, 173.61249542236328 * e),
                n.bezierCurveTo(194.1999969482422 * e, 172.61249542236328 * e, 196.1999969482422 * e, 171.61249542236328 * e, 199.1999969482422 * e, 173.61249542236328 * e),
                n.bezierCurveTo(197.6999969482422 * e, 179.61249542236328 * e, 197.6999969482422 * e, 179.61249542236328 * e, 196.1999969482422 * e, 185.61249542236328 * e),
                n.bezierCurveTo(194.1999969482422 * e, 179.61249542236328 * e, 194.1999969482422 * e, 179.61249542236328 * e, 192.1999969482422 * e, 173.61249542236328 * e),
                n.closePath(),
                he(n, t[11]),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(205.1999969482422 * e, 176.2125015258789 * e),
                n.bezierCurveTo(210.1999969482422 * e, 178.2125015258789 * e, 211.1999969482422 * e, 179.2125015258789 * e, 211.1999969482422 * e, 181.2125015258789 * e),
                n.bezierCurveTo(206.6999969482422 * e, 184.7125015258789 * e, 206.6999969482422 * e, 184.7125015258789 * e, 202.1999969482422 * e, 188.2125015258789 * e),
                n.bezierCurveTo(203.6999969482422 * e, 182.2125015258789 * e, 203.6999969482422 * e, 182.2125015258789 * e, 205.1999969482422 * e, 176.2125015258789 * e),
                n.closePath(),
                he(n, t[11]),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(214.1999969482422 * e, 187.21249985694885 * e),
                n.bezierCurveTo(216.1999969482422 * e, 191.21249985694885 * e, 216.1999969482422 * e, 192.21249985694885 * e, 215.1999969482422 * e, 195.21249985694885 * e),
                n.bezierCurveTo(206.1999969482422 * e, 194.21249985694885 * e, 205.1999969482422 * e, 194.21249985694885 * e, 205.1999969482422 * e, 194.21249985694885 * e),
                n.bezierCurveTo(209.6999969482422 * e, 190.71249985694885 * e, 209.6999969482422 * e, 190.71249985694885 * e, 214.1999969482422 * e, 187.21249985694885 * e),
                n.closePath(),
                he(n, t[11]),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(204.1999969482422 * e, 201.8125 * e),
                n.bezierCurveTo(209.1999969482422 * e, 201.3125 * e, 209.1999969482422 * e, 201.3125 * e, 214.1999969482422 * e, 200.8125 * e),
                n.bezierCurveTo(215.1999969482422 * e, 204.8125 * e, 214.1999969482422 * e, 205.8125 * e, 213.1999969482422 * e, 208.8125 * e),
                n.bezierCurveTo(208.6999969482422 * e, 205.3125 * e, 208.6999969482422 * e, 205.3125 * e, 204.1999969482422 * e, 201.8125 * e),
                n.closePath(),
                he(n, t[11]),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(199.1999969482422 * e, 205.61249923706055 * e),
                n.bezierCurveTo(207.1999969482422 * e, 212.61249923706055 * e, 203.6999969482422 * e, 209.11249923706055 * e, 208.1999969482422 * e, 212.61249923706055 * e),
                n.bezierCurveTo(206.1999969482422 * e, 215.61249923706055 * e, 204.1999969482422 * e, 217.61249923706055 * e, 203.1999969482422 * e, 216.61249923706055 * e),
                n.bezierCurveTo(201.1999969482422 * e, 211.11249923706055 * e, 201.1999969482422 * e, 211.11249923706055 * e, 199.1999969482422 * e, 205.61249923706055 * e),
                n.closePath(),
                he(n, t[11]),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(191.1999969482422 * e, 207.01250076293945 * e),
                n.bezierCurveTo(194.1999969482422 * e, 213.01250076293945 * e, 194.1999969482422 * e, 216.01250076293945 * e, 196.1999969482422 * e, 218.01250076293945 * e),
                n.bezierCurveTo(193.1999969482422 * e, 220.01250076293945 * e, 190.1999969482422 * e, 220.01250076293945 * e, 188.1999969482422 * e, 218.01250076293945 * e),
                n.bezierCurveTo(189.6999969482422 * e, 213.01250076293945 * e, 189.6999969482422 * e, 213.01250076293945 * e, 191.1999969482422 * e, 208.01250076293945 * e),
                n.closePath(),
                he(n, t[11]),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(186.1999969482422 * e, 203.21249961853027 * e),
                n.bezierCurveTo(184.1999969482422 * e, 209.21249961853027 * e, 184.1999969482422 * e, 209.21249961853027 * e, 182.1999969482422 * e, 215.21249961853027 * e),
                n.bezierCurveTo(177.1999969482422 * e, 212.21249961853027 * e, 176.1999969482422 * e, 211.21249961853027 * e, 177.1999969482422 * e, 210.21249961853027 * e),
                n.bezierCurveTo(181.6999969482422 * e, 206.71249961853027 * e, 181.6999969482422 * e, 206.71249961853027 * e, 186.1999969482422 * e, 203.21249961853027 * e),
                n.closePath(),
                he(n, t[11]),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(183.1999969482422 * e, 196.8125 * e),
                n.bezierCurveTo(177.1999969482422 * e, 196.3125 * e, 177.1999969482422 * e, 196.3125 * e, 171.1999969482422 * e, 195.8125 * e),
                n.bezierCurveTo(171.1999969482422 * e, 199.8125 * e, 171.1999969482422 * e, 202.8125 * e, 174.1999969482422 * e, 204.8125 * e),
                n.bezierCurveTo(178.6999969482422 * e, 200.8125 * e, 178.6999969482422 * e, 200.8125 * e, 183.1999969482422 * e, 196.8125 * e),
                n.closePath(),
                he(n, t[11]),
                n.beginPath(),
                n.lineCap = "round",
                n.lineJoin = "round",
                n.moveTo(185.1999969482422 * e, 190.21249771118164 * e),
                n.bezierCurveTo(179.6999969482422 * e, 186.71249771118164 * e, 179.6999969482422 * e, 186.71249771118164 * e, 174.1999969482422 * e, 183.21249771118164 * e),
                n.bezierCurveTo(172.1999969482422 * e, 186.21249771118164 * e, 172.1999969482422 * e, 187.21249771118164 * e, 172.1999969482422 * e, 190.21249771118164 * e),
                n.bezierCurveTo(178.1999969482422 * e, 190.21249771118164 * e, 178.1999969482422 * e, 190.21249771118164 * e, 184.1999969482422 * e, 190.21249771118164 * e),
                n.closePath(),
                he(n, t[11]),
                Re(n, 126.19999694824219 * e, 169.8125 * e, 8.94427190999916 * e),
                he(n, t[12]),
                Re(n, 123.19999694824219 * e, 164.8125 * e, 2.8284271247461903 * e),
                he(n, t[13]),
                Re(n, 253.1999969482422 * e, 169.8125 * e, 8.94427190999916 * e),
                he(n, t[12]),
                Re(n, 255.1999969482422 * e, 164.8125 * e, 2.23606797749979 * e),
                he(n, t[13]),
                i
            }
            function Rn(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                return n.width = 400 * e,
                n.height = 400 * e,
                a.globalAlpha = 1,
                a.translate(20 * e, 20 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(36.5 * e, 278.0625 * e),
                a.bezierCurveTo(67.5 * e, 316.0625 * e, 134.5 * e, 334.0625 * e, 199.5 * e, 319.0625 * e),
                a.bezierCurveTo(254.5 * e, 304.0625 * e, 346.5 * e, 270.0625 * e, 348.5 * e, 237.0625 * e),
                a.bezierCurveTo(359.5 * e, 206.0625 * e, 318.5 * e, 129.0625 * e, 262.5 * e, 122.0625 * e),
                a.bezierCurveTo(213.5 * e, 115.0625 * e, 166.5 * e, 133.0625 * e, 104.5 * e, 166.0625 * e),
                a.bezierCurveTo(54.5 * e, 194.0625 * e, 23.5 * e, 241.0625 * e, 36.5 * e, 277.0625 * e),
                a.closePath(),
                he(a, i[0]),
                a.translate(-20 * e, -20 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(36.5 * e, 278.0625 * e),
                a.bezierCurveTo(67.5 * e, 316.0625 * e, 134.5 * e, 334.0625 * e, 199.5 * e, 319.0625 * e),
                a.bezierCurveTo(254.5 * e, 304.0625 * e, 346.5 * e, 270.0625 * e, 348.5 * e, 237.0625 * e),
                a.bezierCurveTo(359.5 * e, 206.0625 * e, 318.5 * e, 129.0625 * e, 262.5 * e, 122.0625 * e),
                a.bezierCurveTo(213.5 * e, 115.0625 * e, 166.5 * e, 133.0625 * e, 104.5 * e, 166.0625 * e),
                a.bezierCurveTo(54.5 * e, 194.0625 * e, 23.5 * e, 241.0625 * e, 36.5 * e, 277.0625 * e),
                a.closePath(),
                he(a, i[1], i[2], 19 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(214.5 * e, 124.0625 * e),
                a.bezierCurveTo(242.5 * e, 125.0625 * e, 272.5 * e, 159.0625 * e, 283.5 * e, 184.0625 * e),
                a.bezierCurveTo(277.5 * e, 161.0625 * e, 233.5 * e, 128.0625 * e, 219.5 * e, 122.0625 * e),
                a.closePath(),
                he(a, void 0, i[2], 19 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(157.5 * e, 145.0625 * e),
                a.bezierCurveTo(176.5 * e, 148.0625 * e, 205.5 * e, 176.0625 * e, 212.5 * e, 197.0625 * e),
                a.bezierCurveTo(205.5 * e, 178.0625 * e, 177.5 * e, 152.0625 * e, 156.5 * e, 142.0625 * e),
                a.closePath(),
                he(a, void 0, i[2], 19 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(103.5 * e, 169.0625 * e),
                a.bezierCurveTo(160.5 * e, 166.0625 * e, 228.5 * e, 312.0625 * e, 162.5 * e, 323.0625 * e),
                a.bezierCurveTo(128.5 * e, 330.0625 * e, 45.5 * e, 312.0625 * e, 34.5 * e, 268.0625 * e),
                a.bezierCurveTo(30.5 * e, 238.0625 * e, 44.5 * e, 222.0625 * e, 52.5 * e, 211.0625 * e),
                a.bezierCurveTo(82.5 * e, 174.0625 * e, 104.5 * e, 166.0625 * e, 119.5 * e, 172.0625 * e),
                a.closePath(),
                he(a, i[3], i[2], 19 * e),
                Re(a, 92.5 * e, 216.0625 * e, 13.892443989449804 * e),
                he(a, i[4]),
                Re(a, 68.5 * e, 227.0625 * e, 8.06225774829855 * e),
                he(a, i[4]),
                Re(a, 85.5 * e, 240.0625 * e, 6.708203932499369 * e),
                he(a, i[4]),
                Re(a, 147.5 * e, 294.0625 * e, 17.46424919657298 * e),
                he(a, i[4]),
                Re(a, 166.5 * e, 273.0625 * e, 6.708203932499369 * e),
                he(a, i[4]),
                Re(a, 114.5 * e, 294.0625 * e, 12.36931687685298 * e),
                he(a, i[4]),
                Re(a, 123.5 * e, 220.0625 * e, 5.830951894845301 * e),
                he(a, i[4]),
                Re(a, 114.5 * e, 259.0625 * e, 4.123105625617661 * e),
                he(a, i[4]),
                Re(a, 63.5 * e, 265.0625 * e, 5.385164807134504 * e),
                he(a, i[4]),
                Re(a, 148.5 * e, 235.0625 * e, 4.47213595499958 * e),
                he(a, i[4]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(194.5 * e, 313.0625 * e),
                a.bezierCurveTo(222.5 * e, 306.0625 * e, 319.5 * e, 271.0625 * e, 337.5 * e, 241.0625 * e),
                a.bezierCurveTo(274.5 * e, 270.0625 * e, 216.5 * e, 288.0625 * e, 199.5 * e, 287.0625 * e),
                a.bezierCurveTo(198.5 * e, 302.0625 * e, 195.5 * e, 311.0625 * e, 193.5 * e, 312.0625 * e),
                a.closePath(),
                he(a, i[5]),
                n
            }
            function En(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                return n.width = 440 * e,
                n.height = 388 * e,
                a.globalAlpha = t ? .5 : 1,
                a.translate(5 * e, 5 * e),
                Re(a, 220 * e, 201 * e, 170.41713528867922 * e),
                he(a, i[0], i[0], 6 * e),
                a.globalAlpha = 1,
                a.translate(-5 * e, -5 * e),
                Re(a, 220 * e, 201 * e, 170.41713528867922 * e),
                he(a, i[1], i[2], 6 * e),
                Re(a, 220 * e, 201 * e, 130 * e),
                he(a, i[11], i[2], 6 * e),
                Re(a, 222 * e, 199 * e, 120.74767078498864 * e),
                he(a, void 0, i[3], 40 * e),
                Re(a, 220 * e, 200 * e, 95.44108130150245 * e),
                he(a, void 0, i[2], 15 * e),
                a.globalAlpha = t ? .5 : 1,
                a.translate(5 * e, 5 * e),
                Re(a, 63 * e, 136 * e, 49.193495504995376 * e),
                he(a, i[0], i[0], 4 * e),
                a.globalAlpha = 1,
                a.translate(-5 * e, -5 * e),
                Re(a, 63 * e, 136 * e, 49.193495504995376 * e),
                he(a, i[8], i[2], 4 * e),
                Re(a, 63 * e, 137 * e, 25.632011235952593 * e),
                he(a, i[7], i[2], 4 * e),
                n
            }
            function mn(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                return n.width = 440 * e,
                n.height = 388 * e,
                a.globalAlpha = t ? .5 : 1,
                a.translate(5 * e, 5 * e),
                Re(a, 220 * e, 201 * e, 170.41713528867922 * e),
                he(a, i[0], i[0], 6 * e),
                a.globalAlpha = 1,
                a.translate(-5 * e, -5 * e),
                Re(a, 220 * e, 201 * e, 170.41713528867922 * e),
                he(a, i[1], i[2], 6 * e),
                Re(a, 220 * e, 201 * e, 130 * e),
                he(a, i[11], i[2], 6 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(218 * e, 97 * e),
                a.bezierCurveTo(219 * e, 163 * e, 201 * e, 176 * e, 191 * e, 175 * e),
                a.bezierCurveTo(176 * e, 177 * e, 168 * e, 167 * e, 160 * e, 115 * e),
                a.closePath(),
                he(a, i[5], i[6], 4 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(224 * e, 181 * e),
                a.bezierCurveTo(225 * e, 138 * e, 246 * e, 115 * e, 263 * e, 137 * e),
                a.bezierCurveTo(282 * e, 174 * e, 279 * e, 217 * e, 265 * e, 243 * e),
                a.bezierCurveTo(253 * e, 264 * e, 240 * e, 256 * e, 233 * e, 238 * e),
                a.bezierCurveTo(221 * e, 212 * e, 225 * e, 198 * e, 224 * e, 184 * e),
                a.closePath(),
                he(a, i[5], i[6], 4 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(169 * e, 289 * e),
                a.bezierCurveTo(161 * e, 234 * e, 168 * e, 197 * e, 187 * e, 195 * e),
                a.bezierCurveTo(219 * e, 189 * e, 222 * e, 256 * e, 216 * e, 307 * e),
                a.closePath(),
                he(a, i[5], i[6], 4 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(143 * e, 146 * e),
                a.bezierCurveTo(161 * e, 199 * e, 151 * e, 245 * e, 138 * e, 266 * e),
                a.bezierCurveTo(120.5 * e, 239.5 * e, 120.5 * e, 239.5 * e, 103 * e, 213 * e),
                a.closePath(),
                he(a, i[5], i[6], 4 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(283 * e, 135 * e),
                a.bezierCurveTo(277 * e, 176 * e, 298 * e, 194 * e, 315 * e, 205 * e),
                a.bezierCurveTo(323.5 * e, 175 * e, 323.5 * e, 175 * e, 332 * e, 145 * e),
                a.closePath(),
                he(a, i[5], i[6], 4 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(318 * e, 223 * e),
                a.bezierCurveTo(290 * e, 195 * e, 271 * e, 256 * e, 283 * e, 281 * e),
                a.bezierCurveTo(303.5 * e, 267 * e, 303.5 * e, 267 * e, 324 * e, 253 * e),
                a.closePath(),
                he(a, i[5], i[6], 4 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(142 * e, 223 * e),
                a.bezierCurveTo(128 * e, 213 * e, 123 * e, 214 * e, 111 * e, 223 * e),
                a.closePath(),
                he(a, i[10], i[10], 4 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(251 * e, 133 * e),
                a.bezierCurveTo(269 * e, 188 * e, 262 * e, 229 * e, 251 * e, 253 * e),
                a.bezierCurveTo(288 * e, 224 * e, 273 * e, 139 * e, 252 * e, 133 * e),
                a.closePath(),
                he(a, i[10], i[10], 4 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(203 * e, 102 * e),
                a.bezierCurveTo(204 * e, 136 * e, 200 * e, 159 * e, 189 * e, 174 * e),
                a.bezierCurveTo(223 * e, 164 * e, 219 * e, 87 * e, 205 * e, 83 * e),
                a.closePath(),
                he(a, i[10], i[10], 4 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(196 * e, 324 * e),
                a.bezierCurveTo(209 * e, 239 * e, 200 * e, 219 * e, 192 * e, 196 * e),
                a.bezierCurveTo(229 * e, 216 * e, 219 * e, 316 * e, 198 * e, 325 * e),
                a.closePath(),
                he(a, i[10], i[10], 4 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(266 * e, 166 * e),
                a.bezierCurveTo(249 * e, 154 * e, 243 * e, 161 * e, 233 * e, 167 * e),
                he(a, void 0, i[6], 6 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(269 * e, 192 * e),
                a.bezierCurveTo(256 * e, 183 * e, 241 * e, 186 * e, 233 * e, 192 * e),
                he(a, void 0, i[6], 6 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(263 * e, 217 * e),
                a.bezierCurveTo(251 * e, 211 * e, 242 * e, 213 * e, 236 * e, 218 * e),
                he(a, void 0, i[6], 6 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(204 * e, 141 * e),
                a.bezierCurveTo(191 * e, 131 * e, 187 * e, 133 * e, 176 * e, 141 * e),
                he(a, void 0, i[6], 6 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(207 * e, 230 * e),
                a.bezierCurveTo(193 * e, 222 * e, 185 * e, 224 * e, 177 * e, 231 * e),
                he(a, void 0, i[6], 6 * e),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(210 * e, 258 * e),
                a.bezierCurveTo(196 * e, 247 * e, 191 * e, 250 * e, 177 * e, 259 * e),
                he(a, void 0, i[6], 6 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(145 * e, 196 * e),
                a.bezierCurveTo(130 * e, 186 * e, 124 * e, 187 * e, 114 * e, 195 * e),
                he(a, void 0, i[6], 6 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(218 * e, 97 * e),
                a.bezierCurveTo(219 * e, 163 * e, 201 * e, 176 * e, 191 * e, 175 * e),
                a.bezierCurveTo(176 * e, 177 * e, 168 * e, 167 * e, 160 * e, 115 * e),
                a.closePath(),
                he(a, void 0, i[6], 6 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(224 * e, 181 * e),
                a.bezierCurveTo(225 * e, 138 * e, 246 * e, 115 * e, 263 * e, 137 * e),
                a.bezierCurveTo(282 * e, 174 * e, 279 * e, 217 * e, 265 * e, 243 * e),
                a.bezierCurveTo(253 * e, 264 * e, 240 * e, 256 * e, 233 * e, 238 * e),
                a.bezierCurveTo(221 * e, 212 * e, 225 * e, 198 * e, 224 * e, 184 * e),
                a.closePath(),
                he(a, void 0, i[6], 6 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(169 * e, 289 * e),
                a.bezierCurveTo(161 * e, 234 * e, 168 * e, 197 * e, 187 * e, 195 * e),
                a.bezierCurveTo(219 * e, 189 * e, 222 * e, 256 * e, 216 * e, 307 * e),
                a.closePath(),
                he(a, void 0, i[6], 6 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(143 * e, 146 * e),
                a.bezierCurveTo(161 * e, 199 * e, 151 * e, 245 * e, 138 * e, 266 * e),
                a.bezierCurveTo(120.5 * e, 239.5 * e, 120.5 * e, 239.5 * e, 103 * e, 213 * e),
                a.closePath(),
                he(a, void 0, i[6], 6 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(283 * e, 135 * e),
                a.bezierCurveTo(277 * e, 176 * e, 298 * e, 194 * e, 315 * e, 205 * e),
                a.bezierCurveTo(323.5 * e, 175 * e, 323.5 * e, 175 * e, 332 * e, 145 * e),
                a.closePath(),
                he(a, void 0, i[6], 6 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(318 * e, 223 * e),
                a.bezierCurveTo(290 * e, 195 * e, 271 * e, 256 * e, 283 * e, 281 * e),
                a.bezierCurveTo(303.5 * e, 267 * e, 303.5 * e, 267 * e, 324 * e, 253 * e),
                a.closePath(),
                he(a, void 0, i[6], 6 * e),
                Re(a, 222 * e, 199 * e, 120.74767078498864 * e),
                he(a, void 0, i[3], 40 * e),
                Re(a, 220 * e, 200 * e, 95.44108130150245 * e),
                he(a, void 0, i[2], 15 * e),
                Re(a, 220 * e, 201 * e, 85 * e),
                he(a, void 0, i[4], 10 * e),
                a.globalAlpha = .5,
                Re(a, 220 * e, 201 * e, 82 * e),
                he(a, i[9]),
                a.globalAlpha = t ? .5 : 1,
                a.translate(5 * e, 5 * e),
                Re(a, 63 * e, 136 * e, 49.193495504995376 * e),
                he(a, i[0], i[0], 4 * e),
                a.globalAlpha = 1,
                a.translate(-5 * e, -5 * e),
                Re(a, 63 * e, 136 * e, 49.193495504995376 * e),
                he(a, i[8], i[2], 4 * e),
                Re(a, 63 * e, 137 * e, 25.632011235952593 * e),
                he(a, i[7], i[2], 4 * e),
                n
            }
            function Sn(e, t) {
                var i = window.document.createElement("canvas")
                  , n = i.getContext("2d");
                return i.width = 110 * e,
                i.height = 110 * e,
                n.globalAlpha = .2,
                Re(n, 55 * e, 55 * e, 55 * e),
                he(n, t[0]),
                i
            }
            function cn(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                return n.width = 102 * e,
                n.height = 102 * e,
                a.globalAlpha = t ? .5 : 1,
                a.translate(3, 3),
                ye(a, 24 * e, 26 * e, 70 * e, 9 * e, 10 * e),
                he(a, i[0]),
                ye(a, 26 * e, 70 * e, 70 * e, 9 * e, 10 * e),
                he(a, i[0]),
                ye(a, 5 * e, 3 * e, 22 * e, 94 * e, 5 * e),
                he(a, i[0]),
                ye(a, 40 * e, 3 * e, 22 * e, 94 * e, 5 * e),
                he(a, i[0]),
                ye(a, 75 * e, 3 * e, 22 * e, 94 * e, 5 * e),
                he(a, i[0]),
                a.globalAlpha = 1,
                a.translate(-3, -3),
                ye(a, 24 * e, 26 * e, 70 * e, 9 * e, 10 * e),
                he(a, i[1]),
                ye(a, 26 * e, 70 * e, 70 * e, 9 * e, 10 * e),
                he(a, i[1]),
                ye(a, 5 * e, 3 * e, 22 * e, 94 * e, 5 * e),
                he(a, i[2], i[3], 4 * e),
                ye(a, 40 * e, 3 * e, 22 * e, 94 * e, 5 * e),
                he(a, i[2], i[3], 4 * e),
                ye(a, 75 * e, 3 * e, 22 * e, 94 * e, 5 * e),
                he(a, i[2], i[3], 4 * e),
                n
            }
            function un(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                n.width = 496 * e,
                n.height = 520 * e,
                a.globalAlpha = t ? .5 : 1,
                a.translate(0, 10 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(19.000030517578125 * e, 256.67613983154297 * e),
                a.bezierCurveTo(1.000030517578125 * e, 332.67613983154297 * e, 23.000030517578125 * e, 404.67613983154297 * e, 95.00003051757812 * e, 463.67613983154297 * e),
                a.bezierCurveTo(128.00003051757812 * e, 491.67613983154297 * e, 165.00003051757812 * e, 507.67613983154297 * e, 194.00003051757812 * e, 512.676139831543 * e),
                a.bezierCurveTo(280.0000305175781 * e, 517.676139831543 * e, 291.0000305175781 * e, 516.676139831543 * e, 342.0000305175781 * e, 497.67613983154297 * e),
                a.bezierCurveTo(425.0000305175781 * e, 454.67613983154297 * e, 469.0000305175781 * e, 392.67613983154297 * e, 468.0000305175781 * e, 300.67613983154297 * e),
                a.bezierCurveTo(408.5000305175781 * e, 365.17613983154297 * e, 408.5000305175781 * e, 365.17613983154297 * e, 349.0000305175781 * e, 429.67613983154297 * e),
                a.bezierCurveTo(256.0000305175781 * e, 473.67613983154297 * e, 167.00003051757812 * e, 459.67613983154297 * e, 78.00003051757812 * e, 384.67613983154297 * e),
                a.closePath(),
                he(a, i[0]),
                a.globalAlpha = 1,
                a.translate(0, -10 * e),
                Re(a, 247.01138305664062 * e, 249.3125 * e, 161.4465855941215 * e),
                he(a, i[5], void 0, 12 * e),
                a.globalAlpha = t ? .5 : 1,
                a.translate(0, 10 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(65.00003051757812 * e, 263.4034118652344 * e),
                a.bezierCurveTo(109.00003051757812 * e, 160.40341186523438 * e, 185.00003051757812 * e, 128.40341186523438 * e, 222.00003051757812 * e, 124.40341186523438 * e),
                a.bezierCurveTo(277.0000305175781 * e, 116.40341186523438 * e, 339.0000305175781 * e, 134.40341186523438 * e, 379.0000305175781 * e, 195.40341186523438 * e),
                a.bezierCurveTo(409.0000305175781 * e, 242.40341186523438 * e, 416.0000305175781 * e, 256.4034118652344 * e, 428.0000305175781 * e, 304.4034118652344 * e),
                a.bezierCurveTo(457.0000305175781 * e, 203.40341186523438 * e, 449.0000305175781 * e, 183.40341186523438 * e, 438.0000305175781 * e, 162.40341186523438 * e),
                a.bezierCurveTo(381.0000305175781 * e, 73.40341186523438 * e, 360.0000305175781 * e, 66.40341186523438 * e, 257.0000305175781 * e, 46.403411865234375 * e),
                a.bezierCurveTo(191.00003051757812 * e, 45.403411865234375 * e, 142.00003051757812 * e, 65.40341186523438 * e, 101.00003051757812 * e, 115.40341186523438 * e),
                a.closePath(),
                he(a, i[0]),
                a.globalAlpha = 1;
                var I = function(e, t) {
                    var i = window.document.createElement("canvas")
                      , n = i.getContext("2d");
                    return i.width = 496 * e,
                    i.height = 520 * e,
                    n.globalAlpha = 1,
                    n.translate(0, -10 * e),
                    Re(n, 247.01138305664062 * e, 250.13068389892578 * e, 232.81967270830015 * e),
                    he(n, t[1], t[2], 14 * e),
                    n.globalCompositeOperation = "destination-out",
                    Re(n, 247.01138305664062 * e, 249.3125 * e, 161.4465855941215 * e),
                    he(n, t[0], t[0], 14 * e),
                    n.globalCompositeOperation = "source-over",
                    i
                }(e, i);
                return a.drawImage(I, 0, 0),
                a.translate(0, -10 * e),
                Re(a, 247.01138305664062 * e, 249.3125 * e, 161.4465855941215 * e),
                he(a, void 0, i[2], 12 * e),
                a.globalAlpha = t ? .5 : 1,
                a.translate(0, 5 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(325.0113830566406 * e, 13.767059326171875 * e),
                a.bezierCurveTo(349.5113830566406 * e, 25.767059326171875 * e, 349.5113830566406 * e, 25.767059326171875 * e, 374.0113830566406 * e, 37.767059326171875 * e),
                a.bezierCurveTo(384.0113830566406 * e, 44.767059326171875 * e, 383.0113830566406 * e, 50.767059326171875 * e, 368.0113830566406 * e, 68.76705932617188 * e),
                a.bezierCurveTo(352.5113830566406 * e, 91.26705932617188 * e, 352.5113830566406 * e, 91.26705932617188 * e, 337.0113830566406 * e, 113.76705932617188 * e),
                a.bezierCurveTo(328.0113830566406 * e, 119.76705932617188 * e, 328.0113830566406 * e, 121.76705932617188 * e, 312.0113830566406 * e, 112.76705932617188 * e),
                a.bezierCurveTo(303.0113830566406 * e, 108.26705932617188 * e, 303.0113830566406 * e, 108.26705932617188 * e, 294.0113830566406 * e, 103.76705932617188 * e),
                a.bezierCurveTo(287.0113830566406 * e, 99.76705932617188 * e, 293.0113830566406 * e, 84.76705932617188 * e, 297.0113830566406 * e, 67.76705932617188 * e),
                a.bezierCurveTo(302.0113830566406 * e, 47.767059326171875 * e, 302.0113830566406 * e, 47.767059326171875 * e, 307.0113830566406 * e, 27.767059326171875 * e),
                a.bezierCurveTo(310.0113830566406 * e, 15.767059326171875 * e, 317.0113830566406 * e, 12.767059326171875 * e, 323.0113830566406 * e, 13.767059326171875 * e),
                a.closePath(),
                he(a, i[0], i[0], 12 * e),
                a.globalAlpha = 1,
                a.translate(0, -5 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(325.0113830566406 * e, 13.767059326171875 * e),
                a.bezierCurveTo(349.5113830566406 * e, 25.767059326171875 * e, 349.5113830566406 * e, 25.767059326171875 * e, 374.0113830566406 * e, 37.767059326171875 * e),
                a.bezierCurveTo(384.0113830566406 * e, 44.767059326171875 * e, 383.0113830566406 * e, 50.767059326171875 * e, 368.0113830566406 * e, 68.76705932617188 * e),
                a.bezierCurveTo(352.5113830566406 * e, 91.26705932617188 * e, 352.5113830566406 * e, 91.26705932617188 * e, 337.0113830566406 * e, 113.76705932617188 * e),
                a.bezierCurveTo(328.0113830566406 * e, 119.76705932617188 * e, 328.0113830566406 * e, 121.76705932617188 * e, 312.0113830566406 * e, 112.76705932617188 * e),
                a.bezierCurveTo(303.0113830566406 * e, 108.26705932617188 * e, 303.0113830566406 * e, 108.26705932617188 * e, 294.0113830566406 * e, 103.76705932617188 * e),
                a.bezierCurveTo(287.0113830566406 * e, 99.76705932617188 * e, 293.0113830566406 * e, 84.76705932617188 * e, 297.0113830566406 * e, 67.76705932617188 * e),
                a.bezierCurveTo(302.0113830566406 * e, 47.767059326171875 * e, 302.0113830566406 * e, 47.767059326171875 * e, 307.0113830566406 * e, 27.767059326171875 * e),
                a.bezierCurveTo(310.0113830566406 * e, 15.767059326171875 * e, 317.0113830566406 * e, 12.767059326171875 * e, 323.0113830566406 * e, 13.767059326171875 * e),
                a.closePath(),
                he(a, i[3], i[2], 12 * e),
                a.globalAlpha = t ? .5 : 1,
                a.translate(0, 5 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(403.0113830566406 * e, 89.76705932617188 * e),
                a.bezierCurveTo(413.0113830566406 * e, 76.76705932617188 * e, 418.0113830566406 * e, 79.76705932617188 * e, 428.0113830566406 * e, 92.76705932617188 * e),
                a.bezierCurveTo(435.0113830566406 * e, 99.76705932617188 * e, 435.0113830566406 * e, 99.76705932617188 * e, 442.0113830566406 * e, 106.76705932617188 * e),
                a.bezierCurveTo(450.0113830566406 * e, 116.76705932617188 * e, 445.0113830566406 * e, 119.76705932617188 * e, 433.0113830566406 * e, 128.76705932617188 * e),
                a.bezierCurveTo(408.0113830566406 * e, 146.26705932617188 * e, 408.0113830566406 * e, 146.26705932617188 * e, 383.0113830566406 * e, 163.76705932617188 * e),
                a.bezierCurveTo(376.0113830566406 * e, 166.76705932617188 * e, 377.0113830566406 * e, 165.76705932617188 * e, 368.0113830566406 * e, 156.76705932617188 * e),
                a.bezierCurveTo(359.0113830566406 * e, 144.76705932617188 * e, 359.0113830566406 * e, 142.76705932617188 * e, 367.0113830566406 * e, 133.76705932617188 * e),
                a.closePath(),
                he(a, i[0], i[0], 12 * e),
                a.globalAlpha = 1,
                a.translate(0, -5 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(403.0113830566406 * e, 89.76705932617188 * e),
                a.bezierCurveTo(413.0113830566406 * e, 76.76705932617188 * e, 418.0113830566406 * e, 79.76705932617188 * e, 428.0113830566406 * e, 92.76705932617188 * e),
                a.bezierCurveTo(435.0113830566406 * e, 99.76705932617188 * e, 435.0113830566406 * e, 99.76705932617188 * e, 442.0113830566406 * e, 106.76705932617188 * e),
                a.bezierCurveTo(450.0113830566406 * e, 116.76705932617188 * e, 445.0113830566406 * e, 119.76705932617188 * e, 433.0113830566406 * e, 128.76705932617188 * e),
                a.bezierCurveTo(408.0113830566406 * e, 146.26705932617188 * e, 408.0113830566406 * e, 146.26705932617188 * e, 383.0113830566406 * e, 163.76705932617188 * e),
                a.bezierCurveTo(376.0113830566406 * e, 166.76705932617188 * e, 377.0113830566406 * e, 165.76705932617188 * e, 368.0113830566406 * e, 156.76705932617188 * e),
                a.bezierCurveTo(359.0113830566406 * e, 144.76705932617188 * e, 359.0113830566406 * e, 142.76705932617188 * e, 367.0113830566406 * e, 133.76705932617188 * e),
                a.closePath(),
                he(a, i[4], i[2], 12 * e),
                a.globalAlpha = t ? .5 : 1,
                a.translate(0, 5 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(228.01138305664062 * e, 1.767059326171875 * e),
                a.bezierCurveTo(246.51138305664062 * e, 3.267059326171875 * e, 246.51138305664062 * e, 3.267059326171875 * e, 265.0113830566406 * e, 4.767059326171875 * e),
                a.bezierCurveTo(273.0113830566406 * e, 5.767059326171875 * e, 275.0113830566406 * e, 11.767059326171875 * e, 270.0113830566406 * e, 27.767059326171875 * e),
                a.bezierCurveTo(264.0113830566406 * e, 54.267059326171875 * e, 264.0113830566406 * e, 54.267059326171875 * e, 258.0113830566406 * e, 80.76705932617188 * e),
                a.bezierCurveTo(256.0113830566406 * e, 92.76705932617188 * e, 256.0113830566406 * e, 94.76705932617188 * e, 242.01138305664062 * e, 93.76705932617188 * e),
                a.bezierCurveTo(226.01138305664062 * e, 95.76705932617188 * e, 225.01138305664062 * e, 91.76705932617188 * e, 225.01138305664062 * e, 80.76705932617188 * e),
                a.bezierCurveTo(223.51138305664062 * e, 50.267059326171875 * e, 223.51138305664062 * e, 50.267059326171875 * e, 222.01138305664062 * e, 19.767059326171875 * e),
                a.bezierCurveTo(219.01138305664062 * e, 8.767059326171875 * e, 224.01138305664062 * e, 4.767059326171875 * e, 227.01138305664062 * e, 2.767059326171875 * e),
                a.closePath(),
                he(a, i[0], i[0], 12 * e),
                a.globalAlpha = 1,
                a.translate(0, -5 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(228.01138305664062 * e, 1.767059326171875 * e),
                a.bezierCurveTo(246.51138305664062 * e, 3.267059326171875 * e, 246.51138305664062 * e, 3.267059326171875 * e, 265.0113830566406 * e, 4.767059326171875 * e),
                a.bezierCurveTo(273.0113830566406 * e, 5.767059326171875 * e, 275.0113830566406 * e, 11.767059326171875 * e, 270.0113830566406 * e, 27.767059326171875 * e),
                a.bezierCurveTo(264.0113830566406 * e, 54.267059326171875 * e, 264.0113830566406 * e, 54.267059326171875 * e, 258.0113830566406 * e, 80.76705932617188 * e),
                a.bezierCurveTo(256.0113830566406 * e, 92.76705932617188 * e, 256.0113830566406 * e, 94.76705932617188 * e, 242.01138305664062 * e, 93.76705932617188 * e),
                a.bezierCurveTo(226.01138305664062 * e, 95.76705932617188 * e, 225.01138305664062 * e, 91.76705932617188 * e, 225.01138305664062 * e, 80.76705932617188 * e),
                a.bezierCurveTo(223.51138305664062 * e, 50.267059326171875 * e, 223.51138305664062 * e, 50.267059326171875 * e, 222.01138305664062 * e, 19.767059326171875 * e),
                a.bezierCurveTo(219.01138305664062 * e, 8.767059326171875 * e, 224.01138305664062 * e, 4.767059326171875 * e, 227.01138305664062 * e, 2.767059326171875 * e),
                a.closePath(),
                he(a, i[4], i[2], 12 * e),
                a.globalAlpha = t ? .5 : 1,
                a.translate(0, 5 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(142.01138305664062 * e, 25.767059326171875 * e),
                a.bezierCurveTo(158.51138305664062 * e, 19.767059326171875 * e, 158.51138305664062 * e, 19.767059326171875 * e, 175.01138305664062 * e, 13.767059326171875 * e),
                a.bezierCurveTo(188.01138305664062 * e, 11.767059326171875 * e, 188.01138305664062 * e, 16.767059326171875 * e, 191.01138305664062 * e, 29.767059326171875 * e),
                a.bezierCurveTo(197.01138305664062 * e, 60.267059326171875 * e, 197.01138305664062 * e, 60.267059326171875 * e, 203.01138305664062 * e, 90.76705932617188 * e),
                a.bezierCurveTo(206.01138305664062 * e, 102.76705932617188 * e, 196.01138305664062 * e, 99.76705932617188 * e, 181.01138305664062 * e, 105.76705932617188 * e),
                a.bezierCurveTo(175.01138305664062 * e, 108.76705932617188 * e, 172.01138305664062 * e, 104.76705932617188 * e, 164.01138305664062 * e, 84.76705932617188 * e),
                a.bezierCurveTo(152.51138305664062 * e, 63.267059326171875 * e, 152.51138305664062 * e, 63.267059326171875 * e, 141.01138305664062 * e, 41.767059326171875 * e),
                a.bezierCurveTo(138.01138305664062 * e, 35.767059326171875 * e, 138.01138305664062 * e, 29.767059326171875 * e, 141.01138305664062 * e, 27.767059326171875 * e),
                a.closePath(),
                he(a, i[0], i[0], 12 * e),
                a.globalAlpha = 1,
                a.translate(0, -5 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(142.01138305664062 * e, 25.767059326171875 * e),
                a.bezierCurveTo(158.51138305664062 * e, 19.767059326171875 * e, 158.51138305664062 * e, 19.767059326171875 * e, 175.01138305664062 * e, 13.767059326171875 * e),
                a.bezierCurveTo(188.01138305664062 * e, 11.767059326171875 * e, 188.01138305664062 * e, 16.767059326171875 * e, 191.01138305664062 * e, 29.767059326171875 * e),
                a.bezierCurveTo(197.01138305664062 * e, 60.267059326171875 * e, 197.01138305664062 * e, 60.267059326171875 * e, 203.01138305664062 * e, 90.76705932617188 * e),
                a.bezierCurveTo(206.01138305664062 * e, 102.76705932617188 * e, 196.01138305664062 * e, 99.76705932617188 * e, 181.01138305664062 * e, 105.76705932617188 * e),
                a.bezierCurveTo(175.01138305664062 * e, 108.76705932617188 * e, 172.01138305664062 * e, 104.76705932617188 * e, 164.01138305664062 * e, 84.76705932617188 * e),
                a.bezierCurveTo(152.51138305664062 * e, 63.267059326171875 * e, 152.51138305664062 * e, 63.267059326171875 * e, 141.01138305664062 * e, 41.767059326171875 * e),
                a.bezierCurveTo(138.01138305664062 * e, 35.767059326171875 * e, 138.01138305664062 * e, 29.767059326171875 * e, 141.01138305664062 * e, 27.767059326171875 * e),
                a.closePath(),
                he(a, i[4], i[2], 12 * e),
                a.globalAlpha = t ? .5 : 1,
                a.translate(0, 5 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(70.01138305664062 * e, 76.76705932617188 * e),
                a.bezierCurveTo(83.01138305664062 * e, 64.26705932617188 * e, 83.01138305664062 * e, 64.26705932617188 * e, 96.01138305664062 * e, 51.767059326171875 * e),
                a.bezierCurveTo(104.01138305664062 * e, 44.767059326171875 * e, 110.01138305664062 * e, 51.767059326171875 * e, 119.01138305664062 * e, 66.76705932617188 * e),
                a.bezierCurveTo(135.01138305664062 * e, 88.26705932617188 * e, 135.01138305664062 * e, 88.26705932617188 * e, 151.01138305664062 * e, 109.76705932617188 * e),
                a.bezierCurveTo(157.01138305664062 * e, 119.76705932617188 * e, 153.01138305664062 * e, 122.76705932617188 * e, 147.01138305664062 * e, 129.76705932617188 * e),
                a.bezierCurveTo(138.01138305664062 * e, 140.76705932617188 * e, 136.01138305664062 * e, 140.76705932617188 * e, 122.01138305664062 * e, 127.76705932617188 * e),
                a.bezierCurveTo(99.51138305664062 * e, 110.26705932617188 * e, 99.51138305664062 * e, 110.26705932617188 * e, 77.01138305664062 * e, 92.76705932617188 * e),
                a.bezierCurveTo(66.01138305664062 * e, 83.76705932617188 * e, 66.01138305664062 * e, 82.76705932617188 * e, 69.01138305664062 * e, 78.76705932617188 * e),
                a.closePath(),
                he(a, i[0], i[0], 12 * e),
                a.globalAlpha = 1,
                a.translate(0, -5 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(70.01138305664062 * e, 76.76705932617188 * e),
                a.bezierCurveTo(83.01138305664062 * e, 64.26705932617188 * e, 83.01138305664062 * e, 64.26705932617188 * e, 96.01138305664062 * e, 51.767059326171875 * e),
                a.bezierCurveTo(104.01138305664062 * e, 44.767059326171875 * e, 110.01138305664062 * e, 51.767059326171875 * e, 119.01138305664062 * e, 66.76705932617188 * e),
                a.bezierCurveTo(135.01138305664062 * e, 88.26705932617188 * e, 135.01138305664062 * e, 88.26705932617188 * e, 151.01138305664062 * e, 109.76705932617188 * e),
                a.bezierCurveTo(157.01138305664062 * e, 119.76705932617188 * e, 153.01138305664062 * e, 122.76705932617188 * e, 147.01138305664062 * e, 129.76705932617188 * e),
                a.bezierCurveTo(138.01138305664062 * e, 140.76705932617188 * e, 136.01138305664062 * e, 140.76705932617188 * e, 122.01138305664062 * e, 127.76705932617188 * e),
                a.bezierCurveTo(99.51138305664062 * e, 110.26705932617188 * e, 99.51138305664062 * e, 110.26705932617188 * e, 77.01138305664062 * e, 92.76705932617188 * e),
                a.bezierCurveTo(66.01138305664062 * e, 83.76705932617188 * e, 66.01138305664062 * e, 82.76705932617188 * e, 69.01138305664062 * e, 78.76705932617188 * e),
                a.closePath(),
                he(a, i[4], i[2], 12 * e),
                a.globalAlpha = t ? .5 : 1,
                a.translate(0, 5 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(33.011383056640625 * e, 126.76705932617188 * e),
                a.bezierCurveTo(22.011383056640625 * e, 149.76705932617188 * e, 22.011383056640625 * e, 149.76705932617188 * e, 11.011383056640625 * e, 172.76705932617188 * e),
                a.bezierCurveTo(7.011383056640625 * e, 184.76705932617188 * e, 11.011383056640625 * e, 189.76705932617188 * e, 36.011383056640625 * e, 195.76705932617188 * e),
                a.bezierCurveTo(61.011383056640625 * e, 202.26705932617188 * e, 61.011383056640625 * e, 202.26705932617188 * e, 86.01138305664062 * e, 208.76705932617188 * e),
                a.bezierCurveTo(100.01138305664062 * e, 214.76705932617188 * e, 102.01138305664062 * e, 203.76705932617188 * e, 109.01138305664062 * e, 189.76705932617188 * e),
                a.bezierCurveTo(117.01138305664062 * e, 171.76705932617188 * e, 116.01138305664062 * e, 166.76705932617188 * e, 97.01138305664062 * e, 156.76705932617188 * e),
                a.bezierCurveTo(74.01138305664062 * e, 140.76705932617188 * e, 74.01138305664062 * e, 140.76705932617188 * e, 51.011383056640625 * e, 124.76705932617188 * e),
                a.bezierCurveTo(42.011383056640625 * e, 118.76705932617188 * e, 37.011383056640625 * e, 119.76705932617188 * e, 33.011383056640625 * e, 126.76705932617188 * e),
                a.closePath(),
                he(a, i[0], i[0], 12 * e),
                a.globalAlpha = 1,
                a.translate(0, -5 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(33.011383056640625 * e, 126.76705932617188 * e),
                a.bezierCurveTo(22.011383056640625 * e, 149.76705932617188 * e, 22.011383056640625 * e, 149.76705932617188 * e, 11.011383056640625 * e, 172.76705932617188 * e),
                a.bezierCurveTo(7.011383056640625 * e, 184.76705932617188 * e, 11.011383056640625 * e, 189.76705932617188 * e, 36.011383056640625 * e, 195.76705932617188 * e),
                a.bezierCurveTo(61.011383056640625 * e, 202.26705932617188 * e, 61.011383056640625 * e, 202.26705932617188 * e, 86.01138305664062 * e, 208.76705932617188 * e),
                a.bezierCurveTo(100.01138305664062 * e, 214.76705932617188 * e, 102.01138305664062 * e, 203.76705932617188 * e, 109.01138305664062 * e, 189.76705932617188 * e),
                a.bezierCurveTo(117.01138305664062 * e, 171.76705932617188 * e, 116.01138305664062 * e, 166.76705932617188 * e, 97.01138305664062 * e, 156.76705932617188 * e),
                a.bezierCurveTo(74.01138305664062 * e, 140.76705932617188 * e, 74.01138305664062 * e, 140.76705932617188 * e, 51.011383056640625 * e, 124.76705932617188 * e),
                a.bezierCurveTo(42.011383056640625 * e, 118.76705932617188 * e, 37.011383056640625 * e, 119.76705932617188 * e, 33.011383056640625 * e, 126.76705932617188 * e),
                a.closePath(),
                he(a, i[3], i[2], 12 * e),
                a.globalAlpha = t ? .5 : 1,
                a.translate(0, 5 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(13.011383056640625 * e, 229.76705932617188 * e),
                a.bezierCurveTo(45.511383056640625 * e, 233.76705932617188 * e, 45.511383056640625 * e, 233.76705932617188 * e, 78.01138305664062 * e, 237.76705932617188 * e),
                a.bezierCurveTo(92.01138305664062 * e, 239.76705932617188 * e, 92.01138305664062 * e, 246.76705932617188 * e, 91.01138305664062 * e, 257.7670593261719 * e),
                a.bezierCurveTo(92.01138305664062 * e, 275.7670593261719 * e, 91.01138305664062 * e, 274.7670593261719 * e, 68.01138305664062 * e, 276.7670593261719 * e),
                a.bezierCurveTo(42.511383056640625 * e, 279.7670593261719 * e, 42.511383056640625 * e, 279.7670593261719 * e, 17.011383056640625 * e, 282.7670593261719 * e),
                a.bezierCurveTo(2.011383056640625 * e, 282.7670593261719 * e, 3.011383056640625 * e, 276.7670593261719 * e, 2.011383056640625 * e, 260.7670593261719 * e),
                a.bezierCurveTo(2.011383056640625 * e, 231.76705932617188 * e, 4.011383056640625 * e, 232.76705932617188 * e, 11.011383056640625 * e, 230.76705932617188 * e),
                a.closePath(),
                he(a, i[0], i[0], 12 * e),
                a.globalAlpha = 1,
                a.translate(0, -5 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(13.011383056640625 * e, 229.76705932617188 * e),
                a.bezierCurveTo(45.511383056640625 * e, 233.76705932617188 * e, 45.511383056640625 * e, 233.76705932617188 * e, 78.01138305664062 * e, 237.76705932617188 * e),
                a.bezierCurveTo(92.01138305664062 * e, 239.76705932617188 * e, 92.01138305664062 * e, 246.76705932617188 * e, 91.01138305664062 * e, 257.7670593261719 * e),
                a.bezierCurveTo(92.01138305664062 * e, 275.7670593261719 * e, 91.01138305664062 * e, 274.7670593261719 * e, 68.01138305664062 * e, 276.7670593261719 * e),
                a.bezierCurveTo(42.511383056640625 * e, 279.7670593261719 * e, 42.511383056640625 * e, 279.7670593261719 * e, 17.011383056640625 * e, 282.7670593261719 * e),
                a.bezierCurveTo(2.011383056640625 * e, 282.7670593261719 * e, 3.011383056640625 * e, 276.7670593261719 * e, 2.011383056640625 * e, 260.7670593261719 * e),
                a.bezierCurveTo(2.011383056640625 * e, 231.76705932617188 * e, 4.011383056640625 * e, 232.76705932617188 * e, 11.011383056640625 * e, 230.76705932617188 * e),
                a.closePath(),
                he(a, i[4], i[2], 12 * e),
                a.globalAlpha = t ? .5 : 1,
                a.translate(0, 5 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(97.01138305664062 * e, 329.7670593261719 * e),
                a.bezierCurveTo(68.51138305664062 * e, 343.7670593261719 * e, 68.51138305664062 * e, 343.7670593261719 * e, 40.011383056640625 * e, 357.7670593261719 * e),
                a.bezierCurveTo(29.011383056640625 * e, 360.7670593261719 * e, 27.011383056640625 * e, 361.7670593261719 * e, 20.011383056640625 * e, 346.7670593261719 * e),
                a.bezierCurveTo(16.511383056640625 * e, 336.2670593261719 * e, 16.511383056640625 * e, 336.2670593261719 * e, 13.011383056640625 * e, 325.7670593261719 * e),
                a.bezierCurveTo(10.011383056640625 * e, 307.7670593261719 * e, 18.011383056640625 * e, 312.7670593261719 * e, 34.011383056640625 * e, 306.7670593261719 * e),
                a.bezierCurveTo(59.511383056640625 * e, 302.2670593261719 * e, 59.511383056640625 * e, 302.2670593261719 * e, 85.01138305664062 * e, 297.7670593261719 * e),
                a.bezierCurveTo(97.01138305664062 * e, 294.7670593261719 * e, 100.01138305664062 * e, 297.7670593261719 * e, 100.01138305664062 * e, 307.7670593261719 * e),
                a.bezierCurveTo(105.01138305664062 * e, 326.7670593261719 * e, 103.01138305664062 * e, 325.7670593261719 * e, 97.01138305664062 * e, 329.7670593261719 * e),
                a.closePath(),
                he(a, i[0], i[0], 12 * e),
                a.globalAlpha = 1,
                a.translate(0, -5 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(97.01138305664062 * e, 329.7670593261719 * e),
                a.bezierCurveTo(68.51138305664062 * e, 343.7670593261719 * e, 68.51138305664062 * e, 343.7670593261719 * e, 40.011383056640625 * e, 357.7670593261719 * e),
                a.bezierCurveTo(29.011383056640625 * e, 360.7670593261719 * e, 27.011383056640625 * e, 361.7670593261719 * e, 20.011383056640625 * e, 346.7670593261719 * e),
                a.bezierCurveTo(16.511383056640625 * e, 336.2670593261719 * e, 16.511383056640625 * e, 336.2670593261719 * e, 13.011383056640625 * e, 325.7670593261719 * e),
                a.bezierCurveTo(10.011383056640625 * e, 307.7670593261719 * e, 18.011383056640625 * e, 312.7670593261719 * e, 34.011383056640625 * e, 306.7670593261719 * e),
                a.bezierCurveTo(59.511383056640625 * e, 302.2670593261719 * e, 59.511383056640625 * e, 302.2670593261719 * e, 85.01138305664062 * e, 297.7670593261719 * e),
                a.bezierCurveTo(97.01138305664062 * e, 294.7670593261719 * e, 100.01138305664062 * e, 297.7670593261719 * e, 100.01138305664062 * e, 307.7670593261719 * e),
                a.bezierCurveTo(105.01138305664062 * e, 326.7670593261719 * e, 103.01138305664062 * e, 325.7670593261719 * e, 97.01138305664062 * e, 329.7670593261719 * e),
                a.closePath(),
                he(a, i[4], i[2], 12 * e),
                a.globalAlpha = t ? .5 : 1,
                a.translate(0, 5 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(394.0113830566406 * e, 181.76705932617188 * e),
                a.bezierCurveTo(426.5113830566406 * e, 166.76705932617188 * e, 426.5113830566406 * e, 166.76705932617188 * e, 459.0113830566406 * e, 151.76705932617188 * e),
                a.bezierCurveTo(469.0113830566406 * e, 152.76705932617188 * e, 469.0113830566406 * e, 155.76705932617188 * e, 472.0113830566406 * e, 165.76705932617188 * e),
                a.bezierCurveTo(476.0113830566406 * e, 177.26705932617188 * e, 476.0113830566406 * e, 177.26705932617188 * e, 480.0113830566406 * e, 188.76705932617188 * e),
                a.bezierCurveTo(483.0113830566406 * e, 199.76705932617188 * e, 480.0113830566406 * e, 200.76705932617188 * e, 460.0113830566406 * e, 205.76705932617188 * e),
                a.bezierCurveTo(433.5113830566406 * e, 210.26705932617188 * e, 433.5113830566406 * e, 210.26705932617188 * e, 407.0113830566406 * e, 214.76705932617188 * e),
                a.bezierCurveTo(395.0113830566406 * e, 218.76705932617188 * e, 397.0113830566406 * e, 211.76705932617188 * e, 393.0113830566406 * e, 202.76705932617188 * e),
                a.bezierCurveTo(387.0113830566406 * e, 188.76705932617188 * e, 387.0113830566406 * e, 187.76705932617188 * e, 394.0113830566406 * e, 181.76705932617188 * e),
                a.closePath(),
                he(a, i[0], i[0], 12 * e),
                a.globalAlpha = 1,
                a.translate(0, -5 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(394.0113830566406 * e, 181.76705932617188 * e),
                a.bezierCurveTo(426.5113830566406 * e, 166.76705932617188 * e, 426.5113830566406 * e, 166.76705932617188 * e, 459.0113830566406 * e, 151.76705932617188 * e),
                a.bezierCurveTo(469.0113830566406 * e, 152.76705932617188 * e, 469.0113830566406 * e, 155.76705932617188 * e, 472.0113830566406 * e, 165.76705932617188 * e),
                a.bezierCurveTo(476.0113830566406 * e, 177.26705932617188 * e, 476.0113830566406 * e, 177.26705932617188 * e, 480.0113830566406 * e, 188.76705932617188 * e),
                a.bezierCurveTo(483.0113830566406 * e, 199.76705932617188 * e, 480.0113830566406 * e, 200.76705932617188 * e, 460.0113830566406 * e, 205.76705932617188 * e),
                a.bezierCurveTo(433.5113830566406 * e, 210.26705932617188 * e, 433.5113830566406 * e, 210.26705932617188 * e, 407.0113830566406 * e, 214.76705932617188 * e),
                a.bezierCurveTo(395.0113830566406 * e, 218.76705932617188 * e, 397.0113830566406 * e, 211.76705932617188 * e, 393.0113830566406 * e, 202.76705932617188 * e),
                a.bezierCurveTo(387.0113830566406 * e, 188.76705932617188 * e, 387.0113830566406 * e, 187.76705932617188 * e, 394.0113830566406 * e, 181.76705932617188 * e),
                a.closePath(),
                he(a, i[4], i[2], 12 * e),
                a.globalAlpha = t ? .5 : 1,
                a.translate(0, 5 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(411.0113830566406 * e, 234.76705932617188 * e),
                a.bezierCurveTo(446.0113830566406 * e, 233.26705932617188 * e, 446.0113830566406 * e, 233.26705932617188 * e, 481.0113830566406 * e, 231.76705932617188 * e),
                a.bezierCurveTo(491.0113830566406 * e, 232.76705932617188 * e, 493.0113830566406 * e, 239.76705932617188 * e, 491.0113830566406 * e, 251.76705932617188 * e),
                a.bezierCurveTo(490.0113830566406 * e, 263.7670593261719 * e, 490.0113830566406 * e, 263.7670593261719 * e, 489.0113830566406 * e, 275.7670593261719 * e),
                a.bezierCurveTo(487.0113830566406 * e, 283.7670593261719 * e, 483.0113830566406 * e, 284.7670593261719 * e, 464.0113830566406 * e, 280.7670593261719 * e),
                a.bezierCurveTo(437.0113830566406 * e, 273.7670593261719 * e, 437.0113830566406 * e, 273.7670593261719 * e, 410.0113830566406 * e, 266.7670593261719 * e),
                a.bezierCurveTo(400.0113830566406 * e, 261.7670593261719 * e, 401.0113830566406 * e, 259.7670593261719 * e, 402.0113830566406 * e, 249.76705932617188 * e),
                a.bezierCurveTo(401.0113830566406 * e, 237.76705932617188 * e, 403.0113830566406 * e, 235.76705932617188 * e, 408.0113830566406 * e, 234.76705932617188 * e),
                a.closePath(),
                he(a, i[0], i[0], 12 * e),
                a.globalAlpha = 1,
                a.translate(0, -5 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(411.0113830566406 * e, 234.76705932617188 * e),
                a.bezierCurveTo(446.0113830566406 * e, 233.26705932617188 * e, 446.0113830566406 * e, 233.26705932617188 * e, 481.0113830566406 * e, 231.76705932617188 * e),
                a.bezierCurveTo(491.0113830566406 * e, 232.76705932617188 * e, 493.0113830566406 * e, 239.76705932617188 * e, 491.0113830566406 * e, 251.76705932617188 * e),
                a.bezierCurveTo(490.0113830566406 * e, 263.7670593261719 * e, 490.0113830566406 * e, 263.7670593261719 * e, 489.0113830566406 * e, 275.7670593261719 * e),
                a.bezierCurveTo(487.0113830566406 * e, 283.7670593261719 * e, 483.0113830566406 * e, 284.7670593261719 * e, 464.0113830566406 * e, 280.7670593261719 * e),
                a.bezierCurveTo(437.0113830566406 * e, 273.7670593261719 * e, 437.0113830566406 * e, 273.7670593261719 * e, 410.0113830566406 * e, 266.7670593261719 * e),
                a.bezierCurveTo(400.0113830566406 * e, 261.7670593261719 * e, 401.0113830566406 * e, 259.7670593261719 * e, 402.0113830566406 * e, 249.76705932617188 * e),
                a.bezierCurveTo(401.0113830566406 * e, 237.76705932617188 * e, 403.0113830566406 * e, 235.76705932617188 * e, 408.0113830566406 * e, 234.76705932617188 * e),
                a.closePath(),
                he(a, i[4], i[2], 12 * e),
                a.globalAlpha = t ? .5 : 1,
                a.translate(0, 5 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(400.0113830566406 * e, 290.7670593261719 * e),
                a.bezierCurveTo(437.0113830566406 * e, 301.2670593261719 * e, 437.0113830566406 * e, 301.2670593261719 * e, 474.0113830566406 * e, 311.7670593261719 * e),
                a.bezierCurveTo(484.0113830566406 * e, 319.7670593261719 * e, 481.0113830566406 * e, 322.7670593261719 * e, 474.0113830566406 * e, 335.7670593261719 * e),
                a.bezierCurveTo(465.5113830566406 * e, 354.7670593261719 * e, 465.5113830566406 * e, 354.7670593261719 * e, 457.0113830566406 * e, 373.7670593261719 * e),
                a.bezierCurveTo(449.0113830566406 * e, 386.7670593261719 * e, 444.0113830566406 * e, 384.7670593261719 * e, 427.0113830566406 * e, 370.7670593261719 * e),
                a.bezierCurveTo(403.0113830566406 * e, 354.7670593261719 * e, 403.0113830566406 * e, 354.7670593261719 * e, 379.0113830566406 * e, 338.7670593261719 * e),
                a.bezierCurveTo(371.0113830566406 * e, 327.7670593261719 * e, 373.0113830566406 * e, 323.7670593261719 * e, 377.0113830566406 * e, 313.7670593261719 * e),
                a.bezierCurveTo(386.0113830566406 * e, 292.7670593261719 * e, 393.0113830566406 * e, 288.7670593261719 * e, 398.0113830566406 * e, 291.7670593261719 * e),
                a.closePath(),
                he(a, i[0], i[0], 12 * e),
                a.globalAlpha = 1,
                a.translate(0, -5 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(400.0113830566406 * e, 290.7670593261719 * e),
                a.bezierCurveTo(437.0113830566406 * e, 301.2670593261719 * e, 437.0113830566406 * e, 301.2670593261719 * e, 474.0113830566406 * e, 311.7670593261719 * e),
                a.bezierCurveTo(484.0113830566406 * e, 319.7670593261719 * e, 481.0113830566406 * e, 322.7670593261719 * e, 474.0113830566406 * e, 335.7670593261719 * e),
                a.bezierCurveTo(465.5113830566406 * e, 354.7670593261719 * e, 465.5113830566406 * e, 354.7670593261719 * e, 457.0113830566406 * e, 373.7670593261719 * e),
                a.bezierCurveTo(449.0113830566406 * e, 386.7670593261719 * e, 444.0113830566406 * e, 384.7670593261719 * e, 427.0113830566406 * e, 370.7670593261719 * e),
                a.bezierCurveTo(403.0113830566406 * e, 354.7670593261719 * e, 403.0113830566406 * e, 354.7670593261719 * e, 379.0113830566406 * e, 338.7670593261719 * e),
                a.bezierCurveTo(371.0113830566406 * e, 327.7670593261719 * e, 373.0113830566406 * e, 323.7670593261719 * e, 377.0113830566406 * e, 313.7670593261719 * e),
                a.bezierCurveTo(386.0113830566406 * e, 292.7670593261719 * e, 393.0113830566406 * e, 288.7670593261719 * e, 398.0113830566406 * e, 291.7670593261719 * e),
                a.closePath(),
                he(a, i[3], i[2], 12 * e),
                a.globalAlpha = t ? .5 : 1,
                a.translate(0, 5 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(366.0113830566406 * e, 361.2216033935547 * e),
                a.bezierCurveTo(393.0113830566406 * e, 383.2216033935547 * e, 393.0113830566406 * e, 383.2216033935547 * e, 420.0113830566406 * e, 405.2216033935547 * e),
                a.bezierCurveTo(427.0113830566406 * e, 414.2216033935547 * e, 425.0113830566406 * e, 417.2216033935547 * e, 413.0113830566406 * e, 428.2216033935547 * e),
                a.bezierCurveTo(405.5113830566406 * e, 435.2216033935547 * e, 405.5113830566406 * e, 435.2216033935547 * e, 398.0113830566406 * e, 442.2216033935547 * e),
                a.bezierCurveTo(388.0113830566406 * e, 451.2216033935547 * e, 385.0113830566406 * e, 445.2216033935547 * e, 373.0113830566406 * e, 428.2216033935547 * e),
                a.bezierCurveTo(358.5113830566406 * e, 408.2216033935547 * e, 358.5113830566406 * e, 408.2216033935547 * e, 344.0113830566406 * e, 388.2216033935547 * e),
                a.bezierCurveTo(337.0113830566406 * e, 378.2216033935547 * e, 342.0113830566406 * e, 377.2216033935547 * e, 347.0113830566406 * e, 371.2216033935547 * e),
                a.bezierCurveTo(359.0113830566406 * e, 359.2216033935547 * e, 361.0113830566406 * e, 358.2216033935547 * e, 364.0113830566406 * e, 361.2216033935547 * e),
                a.closePath(),
                he(a, i[0], i[0], 12 * e),
                a.globalAlpha = 1,
                a.translate(0, -5 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(366.0113830566406 * e, 361.2216033935547 * e),
                a.bezierCurveTo(393.0113830566406 * e, 383.2216033935547 * e, 393.0113830566406 * e, 383.2216033935547 * e, 420.0113830566406 * e, 405.2216033935547 * e),
                a.bezierCurveTo(427.0113830566406 * e, 414.2216033935547 * e, 425.0113830566406 * e, 417.2216033935547 * e, 413.0113830566406 * e, 428.2216033935547 * e),
                a.bezierCurveTo(405.5113830566406 * e, 435.2216033935547 * e, 405.5113830566406 * e, 435.2216033935547 * e, 398.0113830566406 * e, 442.2216033935547 * e),
                a.bezierCurveTo(388.0113830566406 * e, 451.2216033935547 * e, 385.0113830566406 * e, 445.2216033935547 * e, 373.0113830566406 * e, 428.2216033935547 * e),
                a.bezierCurveTo(358.5113830566406 * e, 408.2216033935547 * e, 358.5113830566406 * e, 408.2216033935547 * e, 344.0113830566406 * e, 388.2216033935547 * e),
                a.bezierCurveTo(337.0113830566406 * e, 378.2216033935547 * e, 342.0113830566406 * e, 377.2216033935547 * e, 347.0113830566406 * e, 371.2216033935547 * e),
                a.bezierCurveTo(359.0113830566406 * e, 359.2216033935547 * e, 361.0113830566406 * e, 358.2216033935547 * e, 364.0113830566406 * e, 361.2216033935547 * e),
                a.closePath(),
                he(a, i[4], i[2], 12 * e),
                a.globalAlpha = t ? .5 : 1,
                a.translate(0, 5 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(323.0113830566406 * e, 393.2216033935547 * e),
                a.bezierCurveTo(338.0113830566406 * e, 424.7216033935547 * e, 338.0113830566406 * e, 424.7216033935547 * e, 353.0113830566406 * e, 456.2216033935547 * e),
                a.bezierCurveTo(355.0113830566406 * e, 467.2216033935547 * e, 354.0113830566406 * e, 469.2216033935547 * e, 336.0113830566406 * e, 475.2216033935547 * e),
                a.bezierCurveTo(326.0113830566406 * e, 478.2216033935547 * e, 326.0113830566406 * e, 478.2216033935547 * e, 316.0113830566406 * e, 481.2216033935547 * e),
                a.bezierCurveTo(304.0113830566406 * e, 484.2216033935547 * e, 304.0113830566406 * e, 477.2216033935547 * e, 301.0113830566406 * e, 454.2216033935547 * e),
                a.bezierCurveTo(295.5113830566406 * e, 429.2216033935547 * e, 295.5113830566406 * e, 429.2216033935547 * e, 290.0113830566406 * e, 404.2216033935547 * e),
                a.bezierCurveTo(287.0113830566406 * e, 396.2216033935547 * e, 297.0113830566406 * e, 394.2216033935547 * e, 303.0113830566406 * e, 392.2216033935547 * e),
                a.bezierCurveTo(316.0113830566406 * e, 387.2216033935547 * e, 318.0113830566406 * e, 387.2216033935547 * e, 323.0113830566406 * e, 394.2216033935547 * e),
                a.closePath(),
                he(a, i[0], i[0], 12 * e),
                a.globalAlpha = 1,
                a.translate(0, -5 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(323.0113830566406 * e, 393.2216033935547 * e),
                a.bezierCurveTo(338.0113830566406 * e, 424.7216033935547 * e, 338.0113830566406 * e, 424.7216033935547 * e, 353.0113830566406 * e, 456.2216033935547 * e),
                a.bezierCurveTo(355.0113830566406 * e, 467.2216033935547 * e, 354.0113830566406 * e, 469.2216033935547 * e, 336.0113830566406 * e, 475.2216033935547 * e),
                a.bezierCurveTo(326.0113830566406 * e, 478.2216033935547 * e, 326.0113830566406 * e, 478.2216033935547 * e, 316.0113830566406 * e, 481.2216033935547 * e),
                a.bezierCurveTo(304.0113830566406 * e, 484.2216033935547 * e, 304.0113830566406 * e, 477.2216033935547 * e, 301.0113830566406 * e, 454.2216033935547 * e),
                a.bezierCurveTo(295.5113830566406 * e, 429.2216033935547 * e, 295.5113830566406 * e, 429.2216033935547 * e, 290.0113830566406 * e, 404.2216033935547 * e),
                a.bezierCurveTo(287.0113830566406 * e, 396.2216033935547 * e, 297.0113830566406 * e, 394.2216033935547 * e, 303.0113830566406 * e, 392.2216033935547 * e),
                a.bezierCurveTo(316.0113830566406 * e, 387.2216033935547 * e, 318.0113830566406 * e, 387.2216033935547 * e, 323.0113830566406 * e, 394.2216033935547 * e),
                a.closePath(),
                he(a, i[4], i[2], 12 * e),
                a.globalAlpha = t ? .5 : 1,
                a.translate(0, 5 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(270.0113830566406 * e, 413.2216033935547 * e),
                a.bezierCurveTo(271.0113830566406 * e, 445.7216033935547 * e, 271.0113830566406 * e, 445.7216033935547 * e, 272.0113830566406 * e, 478.2216033935547 * e),
                a.bezierCurveTo(273.0113830566406 * e, 490.2216033935547 * e, 267.0113830566406 * e, 493.2216033935547 * e, 249.01138305664062 * e, 490.2216033935547 * e),
                a.bezierCurveTo(222.01138305664062 * e, 492.2216033935547 * e, 220.01138305664062 * e, 485.2216033935547 * e, 225.01138305664062 * e, 467.2216033935547 * e),
                a.bezierCurveTo(230.51138305664062 * e, 440.2216033935547 * e, 230.51138305664062 * e, 440.2216033935547 * e, 236.01138305664062 * e, 413.2216033935547 * e),
                a.bezierCurveTo(237.01138305664062 * e, 405.2216033935547 * e, 238.01138305664062 * e, 404.2216033935547 * e, 253.01138305664062 * e, 403.2216033935547 * e),
                a.bezierCurveTo(269.0113830566406 * e, 405.2216033935547 * e, 270.0113830566406 * e, 407.2216033935547 * e, 269.0113830566406 * e, 412.2216033935547 * e),
                a.closePath(),
                he(a, i[0], i[0], 12 * e),
                a.globalAlpha = 1,
                a.translate(0, -5 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(270.0113830566406 * e, 413.2216033935547 * e),
                a.bezierCurveTo(271.0113830566406 * e, 445.7216033935547 * e, 271.0113830566406 * e, 445.7216033935547 * e, 272.0113830566406 * e, 478.2216033935547 * e),
                a.bezierCurveTo(273.0113830566406 * e, 490.2216033935547 * e, 267.0113830566406 * e, 493.2216033935547 * e, 249.01138305664062 * e, 490.2216033935547 * e),
                a.bezierCurveTo(222.01138305664062 * e, 492.2216033935547 * e, 220.01138305664062 * e, 485.2216033935547 * e, 225.01138305664062 * e, 467.2216033935547 * e),
                a.bezierCurveTo(230.51138305664062 * e, 440.2216033935547 * e, 230.51138305664062 * e, 440.2216033935547 * e, 236.01138305664062 * e, 413.2216033935547 * e),
                a.bezierCurveTo(237.01138305664062 * e, 405.2216033935547 * e, 238.01138305664062 * e, 404.2216033935547 * e, 253.01138305664062 * e, 403.2216033935547 * e),
                a.bezierCurveTo(269.0113830566406 * e, 405.2216033935547 * e, 270.0113830566406 * e, 407.2216033935547 * e, 269.0113830566406 * e, 412.2216033935547 * e),
                a.closePath(),
                he(a, i[4], i[2], 12 * e),
                a.globalAlpha = t ? .5 : 1,
                a.translate(0, 5 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(207.01138305664062 * e, 406.2216033935547 * e),
                a.bezierCurveTo(197.51138305664062 * e, 440.7216033935547 * e, 197.51138305664062 * e, 440.7216033935547 * e, 188.01138305664062 * e, 475.2216033935547 * e),
                a.bezierCurveTo(184.01138305664062 * e, 485.2216033935547 * e, 179.01138305664062 * e, 491.2216033935547 * e, 152.01138305664062 * e, 477.2216033935547 * e),
                a.bezierCurveTo(136.51138305664062 * e, 469.7216033935547 * e, 136.51138305664062 * e, 469.7216033935547 * e, 121.01138305664062 * e, 462.2216033935547 * e),
                a.bezierCurveTo(109.01138305664062 * e, 453.2216033935547 * e, 117.01138305664062 * e, 447.2216033935547 * e, 133.01138305664062 * e, 427.2216033935547 * e),
                a.bezierCurveTo(146.51138305664062 * e, 406.7216033935547 * e, 146.51138305664062 * e, 406.7216033935547 * e, 160.01138305664062 * e, 386.2216033935547 * e),
                a.bezierCurveTo(163.01138305664062 * e, 377.2216033935547 * e, 168.01138305664062 * e, 378.2216033935547 * e, 187.01138305664062 * e, 387.2216033935547 * e),
                a.bezierCurveTo(206.01138305664062 * e, 395.2216033935547 * e, 208.01138305664062 * e, 398.2216033935547 * e, 207.01138305664062 * e, 405.2216033935547 * e),
                a.closePath(),
                he(a, i[0], i[0], 12 * e),
                a.globalAlpha = 1,
                a.translate(0, -5 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(207.01138305664062 * e, 406.2216033935547 * e),
                a.bezierCurveTo(197.51138305664062 * e, 440.7216033935547 * e, 197.51138305664062 * e, 440.7216033935547 * e, 188.01138305664062 * e, 475.2216033935547 * e),
                a.bezierCurveTo(184.01138305664062 * e, 485.2216033935547 * e, 179.01138305664062 * e, 491.2216033935547 * e, 152.01138305664062 * e, 477.2216033935547 * e),
                a.bezierCurveTo(136.51138305664062 * e, 469.7216033935547 * e, 136.51138305664062 * e, 469.7216033935547 * e, 121.01138305664062 * e, 462.2216033935547 * e),
                a.bezierCurveTo(109.01138305664062 * e, 453.2216033935547 * e, 117.01138305664062 * e, 447.2216033935547 * e, 133.01138305664062 * e, 427.2216033935547 * e),
                a.bezierCurveTo(146.51138305664062 * e, 406.7216033935547 * e, 146.51138305664062 * e, 406.7216033935547 * e, 160.01138305664062 * e, 386.2216033935547 * e),
                a.bezierCurveTo(163.01138305664062 * e, 377.2216033935547 * e, 168.01138305664062 * e, 378.2216033935547 * e, 187.01138305664062 * e, 387.2216033935547 * e),
                a.bezierCurveTo(206.01138305664062 * e, 395.2216033935547 * e, 208.01138305664062 * e, 398.2216033935547 * e, 207.01138305664062 * e, 405.2216033935547 * e),
                a.closePath(),
                he(a, i[3], i[2], 12 * e),
                a.globalAlpha = t ? .5 : 1,
                a.translate(0, 5 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(130.01138305664062 * e, 375.2216033935547 * e),
                a.bezierCurveTo(109.51138305664062 * e, 400.7216033935547 * e, 109.51138305664062 * e, 400.7216033935547 * e, 89.01138305664062 * e, 426.2216033935547 * e),
                a.bezierCurveTo(82.01138305664062 * e, 435.2216033935547 * e, 77.01138305664062 * e, 435.2216033935547 * e, 62.011383056640625 * e, 417.2216033935547 * e),
                a.bezierCurveTo(43.011383056640625 * e, 397.2216033935547 * e, 47.011383056640625 * e, 395.2216033935547 * e, 62.011383056640625 * e, 382.2216033935547 * e),
                a.bezierCurveTo(84.01138305664062 * e, 366.7216033935547 * e, 84.01138305664062 * e, 366.7216033935547 * e, 106.01138305664062 * e, 351.2216033935547 * e),
                a.bezierCurveTo(116.01138305664062 * e, 344.2216033935547 * e, 120.01138305664062 * e, 347.2216033935547 * e, 127.01138305664062 * e, 356.2216033935547 * e),
                a.bezierCurveTo(137.01138305664062 * e, 366.2216033935547 * e, 137.01138305664062 * e, 366.2216033935547 * e, 131.01138305664062 * e, 376.2216033935547 * e),
                a.closePath(),
                he(a, i[0], i[0], 12 * e),
                a.globalAlpha = 1,
                a.translate(0, -5 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(130.01138305664062 * e, 375.2216033935547 * e),
                a.bezierCurveTo(109.51138305664062 * e, 400.7216033935547 * e, 109.51138305664062 * e, 400.7216033935547 * e, 89.01138305664062 * e, 426.2216033935547 * e),
                a.bezierCurveTo(82.01138305664062 * e, 435.2216033935547 * e, 77.01138305664062 * e, 435.2216033935547 * e, 62.011383056640625 * e, 417.2216033935547 * e),
                a.bezierCurveTo(43.011383056640625 * e, 397.2216033935547 * e, 47.011383056640625 * e, 395.2216033935547 * e, 62.011383056640625 * e, 382.2216033935547 * e),
                a.bezierCurveTo(84.01138305664062 * e, 366.7216033935547 * e, 84.01138305664062 * e, 366.7216033935547 * e, 106.01138305664062 * e, 351.2216033935547 * e),
                a.bezierCurveTo(116.01138305664062 * e, 344.2216033935547 * e, 120.01138305664062 * e, 347.2216033935547 * e, 127.01138305664062 * e, 356.2216033935547 * e),
                a.bezierCurveTo(137.01138305664062 * e, 366.2216033935547 * e, 137.01138305664062 * e, 366.2216033935547 * e, 131.01138305664062 * e, 376.2216033935547 * e),
                a.closePath(),
                he(a, i[4], i[2], 12 * e),
                n
            }
            function pn(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                return n.width = 218 * e,
                n.height = 185 * e,
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(64 * e, 53.135406494140625 * e),
                a.bezierCurveTo(92 * e, 17.135406494140625 * e, 116 * e, 11.135406494140625 * e, 158 * e, 53.135406494140625 * e),
                a.bezierCurveTo(178 * e, 74.13540649414062 * e, 181 * e, 81.13540649414062 * e, 196 * e, 101.13540649414062 * e),
                a.bezierCurveTo(214 * e, 127.13540649414062 * e, 192 * e, 138.13540649414062 * e, 173 * e, 149.13540649414062 * e),
                a.bezierCurveTo(137 * e, 166.13540649414062 * e, 74 * e, 170.13540649414062 * e, 36 * e, 141.13540649414062 * e),
                a.bezierCurveTo(13 * e, 127.13540649414062 * e, 20 * e, 119.13540649414062 * e, 30 * e, 103.13540649414062 * e),
                a.bezierCurveTo(48 * e, 71.13540649414062 * e, 54 * e, 67.13540649414062 * e, 63 * e, 54.135406494140625 * e),
                a.closePath(),
                he(a, i[0], i[1], 10 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(107 * e, 25.135406494140625 * e),
                a.bezierCurveTo(62 * e, 90.13540649414062 * e, 54 * e, 129.13540649414062 * e, 53 * e, 151.13540649414062 * e),
                a.bezierCurveTo(39.5 * e, 142.13540649414062 * e, 39.5 * e, 142.13540649414062 * e, 26 * e, 133.13540649414062 * e),
                a.bezierCurveTo(23.5 * e, 128.63540649414062 * e, 23.5 * e, 128.63540649414062 * e, 21 * e, 124.13540649414062 * e),
                a.bezierCurveTo(22 * e, 113.13540649414062 * e, 31 * e, 99.13540649414062 * e, 40 * e, 88.13540649414062 * e),
                a.bezierCurveTo(54.5 * e, 67.13540649414062 * e, 54.5 * e, 67.13540649414062 * e, 69 * e, 46.135406494140625 * e),
                a.bezierCurveTo(80.5 * e, 36.635406494140625 * e, 80.5 * e, 36.635406494140625 * e, 92 * e, 27.135406494140625 * e),
                a.closePath(),
                he(a, i[1]),
                n
            }
            function Pn(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                return n.width = 167 * e,
                n.height = 136 * e,
                a.globalAlpha = .5,
                a.save(),
                a.translate(76.71426391601562 * e, 67.85713195800781 * e),
                ye(a, -57.5 * e, -54.5 * e, 115 * e, 109 * e, 15 * e),
                a.restore(),
                he(a, i[0]),
                a.globalAlpha = .8,
                a.save(),
                a.translate(76.71426391601562 * e, 67.85713195800781 * e),
                ye(a, -57.5 * e, -54.5 * e, 115 * e, 109 * e, 15 * e),
                a.restore(),
                he(a, void 0, i[1], 7 * e),
                a.globalAlpha = .5,
                a.save(),
                a.translate(91.21426391601562 * e, 67.35713195800781 * e),
                ye(a, -56 * e, -55 * e, 115 * e, 109 * e, 15 * e),
                a.restore(),
                he(a, i[0]),
                a.globalAlpha = 1,
                a.save(),
                a.translate(91.21426391601562 * e, 67.35713195800781 * e),
                ye(a, -56 * e, -55 * e, 115 * e, 109 * e, 15 * e),
                a.restore(),
                he(a, void 0, i[1], 7 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(131.21426391601562 * e, 70.35713195800781 * e),
                a.bezierCurveTo(133.21426391601562 * e, 95.35713195800781 * e, 128.21426391601562 * e, 109.35713195800781 * e, 108.21426391601562 * e, 108.35713195800781 * e),
                he(a, void 0, i[1], 10 * e),
                n
            }
            function wn(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                return n.width = 163 * e,
                n.height = 163 * e,
                a.save(),
                a.translate(82.5 * e, 81.1015625 * e),
                a.rotate(0),
                ye(a, -65.5 * e, -66 * e, 131 * e, 131 * e, 5 * e),
                a.restore(),
                he(a, i[1]),
                a.globalAlpha = t ? .5 : 1,
                a.translate(5 * e, 5 * e),
                a.save(),
                a.translate(80 * e, 17.1015625 * e),
                ye(a, -64 * e, -4.5 * e, 129 * e, 9 * e, 5 * e),
                a.restore(),
                he(a, i[0]),
                a.globalAlpha = 1,
                a.translate(-5 * e, -5 * e),
                a.save(),
                a.translate(80 * e, 17.1015625 * e),
                ye(a, -64 * e, -4.5 * e, 129 * e, 9 * e, 5 * e),
                a.restore(),
                he(a, i[2], i[3], 3 * e),
                a.globalAlpha = t ? .5 : 1,
                a.translate(5 * e, 5 * e),
                a.save(),
                a.translate(145.5 * e, 83.6015625 * e),
                ye(a, -4.5 * e, -61 * e, 9 * e, 129 * e, 5 * e),
                a.restore(),
                he(a, i[0]),
                a.globalAlpha = 1,
                a.translate(-5 * e, -5 * e),
                a.save(),
                a.translate(145.5 * e, 83.6015625 * e),
                ye(a, -4.5 * e, -61 * e, 9 * e, 129 * e, 5 * e),
                a.restore(),
                he(a, i[2], i[3], 3 * e),
                a.globalAlpha = t ? .5 : 1,
                a.translate(5 * e, 5 * e),
                a.save(),
                a.translate(17.5 * e, 82.6015625 * e),
                ye(a, -4.5 * e, -65 * e, 9 * e, 129 * e, 5 * e),
                a.restore(),
                he(a, i[0]),
                a.globalAlpha = 1,
                a.translate(-5 * e, -5 * e),
                a.save(),
                a.translate(17.5 * e, 82.6015625 * e),
                ye(a, -4.5 * e, -65 * e, 9 * e, 129 * e, 5 * e),
                a.restore(),
                he(a, i[2], i[3], 3 * e),
                a.globalAlpha = t ? .5 : 1,
                a.translate(5 * e, 5 * e),
                a.save(),
                a.translate(80.5 * e, 145.6015625 * e),
                ye(a, -65.5 * e, -4 * e, 129 * e, 9 * e, 5 * e),
                a.restore(),
                he(a, i[0]),
                a.globalAlpha = 1,
                a.translate(-5 * e, -5 * e),
                a.save(),
                a.translate(80.5 * e, 145.6015625 * e),
                ye(a, -65.5 * e, -4 * e, 129 * e, 9 * e, 5 * e),
                a.restore(),
                he(a, i[2], i[3], 3 * e),
                a.globalAlpha = t ? .5 : 1,
                a.translate(5 * e, 5 * e),
                a.save(),
                a.translate(17 * e, 18.1015625 * e),
                ye(a, -11 * e, -11.5 * e, 22 * e, 22 * e, 5 * e),
                a.restore(),
                he(a, i[0]),
                a.globalAlpha = 1,
                a.translate(-5 * e, -5 * e),
                a.save(),
                a.translate(17 * e, 18.1015625 * e),
                ye(a, -11 * e, -11.5 * e, 22 * e, 22 * e, 5 * e),
                a.restore(),
                he(a, i[2], i[3], 3 * e),
                a.globalAlpha = t ? .5 : 1,
                a.translate(5 * e, 5 * e),
                a.save(),
                a.translate(145.5 * e, 16.6015625 * e),
                ye(a, -10.5 * e, -11.5 * e, 21 * e, 22 * e, 5 * e),
                a.restore(),
                he(a, i[0]),
                a.globalAlpha = 1,
                a.translate(-5 * e, -5 * e),
                a.save(),
                a.translate(145.5 * e, 16.6015625 * e),
                ye(a, -10.5 * e, -11.5 * e, 21 * e, 22 * e, 5 * e),
                a.restore(),
                he(a, i[2], i[3], 3 * e),
                a.globalAlpha = t ? .5 : 1,
                a.translate(5 * e, 5 * e),
                a.save(),
                a.translate(145.5 * e, 144.1015625 * e),
                ye(a, -10.5 * e, -11 * e, 22 * e, 22 * e, 5 * e),
                a.restore(),
                he(a, i[0]),
                a.globalAlpha = 1,
                a.translate(-5 * e, -5 * e),
                a.save(),
                a.translate(145.5 * e, 144.1015625 * e),
                ye(a, -10.5 * e, -11 * e, 22 * e, 22 * e, 5 * e),
                a.restore(),
                he(a, i[2], i[3], 3 * e),
                a.globalAlpha = t ? .5 : 1,
                a.translate(5 * e, 5 * e),
                a.save(),
                a.translate(17.5 * e, 145.1015625 * e),
                ye(a, -11.5 * e, -12 * e, 22 * e, 22 * e, 5 * e),
                a.restore(),
                he(a, i[0]),
                a.globalAlpha = 1,
                a.translate(-5 * e, -5 * e),
                a.save(),
                a.translate(17.5 * e, 145.1015625 * e),
                ye(a, -11.5 * e, -12 * e, 22 * e, 22 * e, 5 * e),
                a.restore(),
                he(a, i[2], i[3], 3 * e),
                n
            }
            function _n(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                return n.width = 168 * e,
                n.height = 100 * e,
                a.globalAlpha = t ? .5 : 1,
                a.translate(10 * e, 5 * e),
                a.save(),
                a.translate(24.5 * e, 44.30000305175781 * e),
                ye(a, -19.5 * e, -8.5 * e, 39 * e, 17 * e, 10 * e),
                a.restore(),
                he(a, i[0]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(115 * e, 37.80000305175781 * e),
                a.bezierCurveTo(142 * e, 37.80000305175781 * e, 140 * e, 37.80000305175781 * e, 141 * e, 37.80000305175781 * e),
                a.bezierCurveTo(147 * e, 28.800003051757812 * e, 149 * e, 26.800003051757812 * e, 153 * e, 32.80000305175781 * e),
                a.bezierCurveTo(160 * e, 42.80000305175781 * e, 157 * e, 50.80000305175781 * e, 153 * e, 58.80000305175781 * e),
                a.bezierCurveTo(148 * e, 62.80000305175781 * e, 147 * e, 59.80000305175781 * e, 143 * e, 52.80000305175781 * e),
                a.bezierCurveTo(129 * e, 52.80000305175781 * e, 129 * e, 52.80000305175781 * e, 115 * e, 52.80000305175781 * e),
                a.closePath(),
                he(a, i[0]),
                Re(a, 78 * e, 44.80000305175781 * e, 39.44616584663204 * e),
                he(a, i[0]),
                a.globalAlpha = 1,
                a.translate(-10 * e, -5 * e),
                a.save(),
                a.translate(24.5 * e, 44.30000305175781 * e),
                ye(a, -19.5 * e, -8.5 * e, 39 * e, 17 * e, 10 * e),
                a.restore(),
                he(a, void 0, i[3], 6 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(115 * e, 37.80000305175781 * e),
                a.bezierCurveTo(142 * e, 37.80000305175781 * e, 140 * e, 37.80000305175781 * e, 141 * e, 37.80000305175781 * e),
                a.bezierCurveTo(147 * e, 28.800003051757812 * e, 149 * e, 26.800003051757812 * e, 153 * e, 32.80000305175781 * e),
                a.bezierCurveTo(160 * e, 42.80000305175781 * e, 157 * e, 50.80000305175781 * e, 153 * e, 58.80000305175781 * e),
                a.bezierCurveTo(148 * e, 62.80000305175781 * e, 147 * e, 59.80000305175781 * e, 143 * e, 52.80000305175781 * e),
                a.bezierCurveTo(129 * e, 52.80000305175781 * e, 129 * e, 52.80000305175781 * e, 115 * e, 52.80000305175781 * e),
                a.closePath(),
                he(a, void 0, i[3], 6 * e),
                Re(a, 78 * e, 44.80000305175781 * e, 42.44616584663204 * e),
                he(a, void 0, i[3], 6 * e),
                a.save(),
                a.translate(24.5 * e, 44.30000305175781 * e),
                ye(a, -19.5 * e, -8.5 * e, 39 * e, 17 * e, 10 * e),
                a.restore(),
                he(a, i[1]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(115 * e, 37.80000305175781 * e),
                a.bezierCurveTo(142 * e, 37.80000305175781 * e, 140 * e, 37.80000305175781 * e, 141 * e, 37.80000305175781 * e),
                a.bezierCurveTo(147 * e, 28.800003051757812 * e, 149 * e, 26.800003051757812 * e, 153 * e, 32.80000305175781 * e),
                a.bezierCurveTo(160 * e, 42.80000305175781 * e, 157 * e, 50.80000305175781 * e, 153 * e, 58.80000305175781 * e),
                a.bezierCurveTo(148 * e, 62.80000305175781 * e, 147 * e, 59.80000305175781 * e, 143 * e, 52.80000305175781 * e),
                a.bezierCurveTo(129 * e, 52.80000305175781 * e, 129 * e, 52.80000305175781 * e, 115 * e, 52.80000305175781 * e),
                a.closePath(),
                he(a, i[1]),
                Re(a, 78 * e, 44.80000305175781 * e, 39.44616584663204 * e),
                he(a, i[2], i[1], 4 * e),
                Re(a, 78 * e, 44.80000305175781 * e, 29.68164415931166 * e),
                he(a, i[3], i[1], 4 * e),
                Re(a, 78 * e, 44 * e, 20 * e),
                he(a, i[4]),
                n
            }
            function fn(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                return n.width = 158 * e,
                n.height = 201 * e,
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(96.5 * e, 76.421875 * e),
                a.bezierCurveTo(100.5 * e, 64.421875 * e, 103.5 * e, 62.421875 * e, 110.5 * e, 65.421875 * e),
                a.bezierCurveTo(116.5 * e, 66.421875 * e, 117.5 * e, 67.421875 * e, 112.5 * e, 73.421875 * e),
                a.bezierCurveTo(107 * e, 79.921875 * e, 107 * e, 79.921875 * e, 101.5 * e, 86.421875 * e),
                a.closePath(),
                he(a, i[8], i[8], 10 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(61.5 * e, 78.421875 * e),
                a.bezierCurveTo(57.5 * e, 73.421875 * e, 51.5 * e, 66.421875 * e, 45.5 * e, 68.421875 * e),
                a.bezierCurveTo(32.5 * e, 73.421875 * e, 38.5 * e, 75.421875 * e, 46.5 * e, 81.421875 * e),
                a.bezierCurveTo(51.5 * e, 84.921875 * e, 51.5 * e, 84.921875 * e, 56.5 * e, 88.421875 * e),
                a.closePath(),
                he(a, i[8], i[8], 10 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(116.5 * e, 127.421875 * e),
                a.bezierCurveTo(124.5 * e, 108.421875 * e, 129.5 * e, 104.421875 * e, 141.5 * e, 107.421875 * e),
                a.bezierCurveTo(156.5 * e, 112.421875 * e, 153.5 * e, 113.421875 * e, 132.5 * e, 134.421875 * e),
                a.bezierCurveTo(123.5 * e, 141.921875 * e, 123.5 * e, 141.921875 * e, 114.5 * e, 149.421875 * e),
                a.closePath(),
                he(a, i[8], i[8], 10 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(41.5 * e, 134.421875 * e),
                a.bezierCurveTo(30.5 * e, 119.421875 * e, 25.5 * e, 111.421875 * e, 12.5 * e, 115.421875 * e),
                a.bezierCurveTo(4.5 * e, 120.421875 * e, 4.5 * e, 121.421875 * e, 26.5 * e, 142.421875 * e),
                a.bezierCurveTo(35 * e, 149.921875 * e, 35 * e, 149.921875 * e, 43.5 * e, 157.421875 * e),
                a.closePath(),
                he(a, i[8], i[8], 10 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(78.5 * e, 51.921875 * e),
                a.bezierCurveTo(99.5 * e, 75.921875 * e, 110.5 * e, 96.921875 * e, 118.5 * e, 120.921875 * e),
                a.bezierCurveTo(121.5 * e, 140.921875 * e, 107.5 * e, 179.921875 * e, 75.5 * e, 183.921875 * e),
                a.bezierCurveTo(30.5 * e, 169.921875 * e, 37.5 * e, 131.921875 * e, 34.5 * e, 120.921875 * e),
                a.bezierCurveTo(41.5 * e, 89.921875 * e, 61.5 * e, 67.921875 * e, 78.5 * e, 51.921875 * e),
                a.closePath(),
                he(a, i[8], i[8], 10 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(72.5 * e, 72.421875 * e),
                a.bezierCurveTo(76.5 * e, 79.421875 * e, 79.5 * e, 80.421875 * e, 83.5 * e, 73.421875 * e),
                a.bezierCurveTo(80.5 * e, 96.921875 * e, 79.5 * e, 114.421875 * e, 77.5 * e, 120.421875 * e),
                a.closePath(),
                he(a, i[8], i[8], 10 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(42.5 * e, 163.421875 * e),
                a.bezierCurveTo(62.5 * e, 185.421875 * e, 86.5 * e, 186.421875 * e, 111.5 * e, 165.421875 * e),
                a.bezierCurveTo(107.5 * e, 176.421875 * e, 95.5 * e, 187.421875 * e, 75.5 * e, 188.421875 * e),
                a.bezierCurveTo(53.5 * e, 188.421875 * e, 43.5 * e, 171.421875 * e, 42.5 * e, 164.421875 * e),
                a.closePath(),
                he(a, i[8], i[8], 8 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(79.5 * e, 61.421875 * e),
                a.bezierCurveTo(88.5 * e, 31.421875 * e, 81.5 * e, 16.421875 * e, 75.5 * e, 7.421875 * e),
                a.bezierCurveTo(77.5 * e, 28.421875 * e, 77.5 * e, 37.421875 * e, 68.5 * e, 42.421875 * e),
                a.bezierCurveTo(79.5 * e, 57.421875 * e, 79.5 * e, 58.421875 * e, 80.5 * e, 61.421875 * e),
                a.closePath(),
                he(a, i[8], i[8], 10 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(72.5 * e, 72.421875 * e),
                a.bezierCurveTo(76.5 * e, 79.421875 * e, 79.5 * e, 80.421875 * e, 83.5 * e, 73.421875 * e),
                a.bezierCurveTo(80.5 * e, 96.921875 * e, 79.5 * e, 114.421875 * e, 77.5 * e, 120.421875 * e),
                a.closePath(),
                he(a, i[8], i[8], 10 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(96.5 * e, 76.421875 * e),
                a.bezierCurveTo(100.5 * e, 64.421875 * e, 103.5 * e, 62.421875 * e, 110.5 * e, 65.421875 * e),
                a.bezierCurveTo(116.5 * e, 66.421875 * e, 117.5 * e, 67.421875 * e, 112.5 * e, 73.421875 * e),
                a.bezierCurveTo(107 * e, 79.921875 * e, 107 * e, 79.921875 * e, 101.5 * e, 86.421875 * e),
                a.closePath(),
                he(a, i[1], i[2], 4 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(61.5 * e, 78.421875 * e),
                a.bezierCurveTo(57.5 * e, 73.421875 * e, 51.5 * e, 66.421875 * e, 45.5 * e, 68.421875 * e),
                a.bezierCurveTo(32.5 * e, 73.421875 * e, 38.5 * e, 75.421875 * e, 46.5 * e, 81.421875 * e),
                a.bezierCurveTo(51.5 * e, 84.921875 * e, 51.5 * e, 84.921875 * e, 56.5 * e, 88.421875 * e),
                a.closePath(),
                he(a, i[1], i[2], 4 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(116.5 * e, 127.421875 * e),
                a.bezierCurveTo(124.5 * e, 108.421875 * e, 129.5 * e, 104.421875 * e, 141.5 * e, 107.421875 * e),
                a.bezierCurveTo(156.5 * e, 112.421875 * e, 153.5 * e, 113.421875 * e, 132.5 * e, 134.421875 * e),
                a.bezierCurveTo(123.5 * e, 141.921875 * e, 123.5 * e, 141.921875 * e, 114.5 * e, 149.421875 * e),
                a.closePath(),
                he(a, i[1], i[2], 4 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(41.5 * e, 134.421875 * e),
                a.bezierCurveTo(30.5 * e, 119.421875 * e, 25.5 * e, 111.421875 * e, 12.5 * e, 115.421875 * e),
                a.bezierCurveTo(4.5 * e, 120.421875 * e, 4.5 * e, 121.421875 * e, 26.5 * e, 142.421875 * e),
                a.bezierCurveTo(35 * e, 149.921875 * e, 35 * e, 149.921875 * e, 43.5 * e, 157.421875 * e),
                a.closePath(),
                he(a, i[1], i[2], 4 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(78.5 * e, 51.921875 * e),
                a.bezierCurveTo(99.5 * e, 75.921875 * e, 110.5 * e, 96.921875 * e, 118.5 * e, 120.921875 * e),
                a.bezierCurveTo(121.5 * e, 140.921875 * e, 107.5 * e, 179.921875 * e, 75.5 * e, 183.921875 * e),
                a.bezierCurveTo(30.5 * e, 169.921875 * e, 37.5 * e, 131.921875 * e, 34.5 * e, 120.921875 * e),
                a.bezierCurveTo(41.5 * e, 89.921875 * e, 61.5 * e, 67.921875 * e, 78.5 * e, 51.921875 * e),
                a.closePath(),
                he(a, i[3], i[2], 4 * e),
                Re(a, 108.5 * e, 148.421875 * e, 9 * e),
                he(a, i[5]),
                Re(a, 106.5 * e, 144.421875 * e, 3 * e),
                he(a, i[6]),
                Re(a, 46.5 * e, 148.421875 * e, 9 * e),
                he(a, i[5]),
                Re(a, 44.5 * e, 144.421875 * e, 3 * e),
                he(a, i[6]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(116.5 * e, 114.421875 * e),
                a.bezierCurveTo(121.5 * e, 137.421875 * e, 118.5 * e, 133.421875 * e, 108.5 * e, 139.421875 * e),
                a.bezierCurveTo(94.5 * e, 146.421875 * e, 96.5 * e, 148.421875 * e, 95.5 * e, 152.421875 * e),
                he(a, i[3], i[2], 4 * e),
                a.beginPath(),
                a.translate(0, -2 * e),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(35.5 * e, 131.421875 * e),
                a.bezierCurveTo(36.5 * e, 140.421875 * e, 39.5 * e, 140.421875 * e, 49.5 * e, 143.421875 * e),
                a.bezierCurveTo(59.5 * e, 149.421875 * e, 57.5 * e, 151.421875 * e, 59.5 * e, 155.421875 * e),
                he(a, i[3], i[2], 4 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(84.5 * e, 57.421875 * e),
                a.bezierCurveTo(101.5 * e, 120.421875 * e, 92.5 * e, 127.421875 * e, 78.5 * e, 134.421875 * e),
                a.bezierCurveTo(51.5 * e, 131.421875 * e, 63.5 * e, 102.421875 * e, 70.5 * e, 59.421875 * e),
                a.bezierCurveTo(75 * e, 55.421875 * e, 78.5 * e, 52.421875 * e, 79.5 * e, 51.421875 * e),
                a.closePath(),
                he(a, i[4]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(79.5 * e, 61.421875 * e),
                a.bezierCurveTo(88.5 * e, 31.421875 * e, 81.5 * e, 16.421875 * e, 75.5 * e, 7.421875 * e),
                a.bezierCurveTo(77.5 * e, 28.421875 * e, 77.5 * e, 37.421875 * e, 68.5 * e, 42.421875 * e),
                a.bezierCurveTo(79.5 * e, 57.421875 * e, 79.5 * e, 58.421875 * e, 80.5 * e, 61.421875 * e),
                a.closePath(),
                he(a, i[3], i[2], 4 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(72.5 * e, 72.421875 * e),
                a.bezierCurveTo(76.5 * e, 79.421875 * e, 79.5 * e, 80.421875 * e, 83.5 * e, 73.421875 * e),
                a.bezierCurveTo(80.5 * e, 96.921875 * e, 79.5 * e, 114.421875 * e, 77.5 * e, 120.421875 * e),
                a.closePath(),
                he(a, i[3], i[2], 4 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(87.5 * e, 154.421875 * e),
                a.bezierCurveTo(93.5 * e, 163.921875 * e, 93.5 * e, 163.921875 * e, 99.5 * e, 173.421875 * e),
                a.bezierCurveTo(95 * e, 177.421875 * e, 95 * e, 177.421875 * e, 90.5 * e, 181.421875 * e),
                a.bezierCurveTo(89 * e, 167.921875 * e, 89 * e, 167.921875 * e, 87.5 * e, 154.421875 * e),
                a.closePath(),
                he(a, i[6], i[7], 2 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(81.5 * e, 164.421875 * e),
                a.bezierCurveTo(84 * e, 172.921875 * e, 84 * e, 172.921875 * e, 86.5 * e, 181.421875 * e),
                a.bezierCurveTo(82.5 * e, 182.421875 * e, 82.5 * e, 182.421875 * e, 78.5 * e, 183.421875 * e),
                a.closePath(),
                he(a, i[6], i[7], 2 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(72.5 * e, 164.421875 * e),
                a.bezierCurveTo(73.5 * e, 173.921875 * e, 73.5 * e, 173.921875 * e, 74.5 * e, 183.421875 * e),
                a.bezierCurveTo(70.5 * e, 182.921875 * e, 70.5 * e, 182.921875 * e, 66.5 * e, 182.421875 * e),
                a.closePath(),
                he(a, i[6], i[7], 2 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(65.5 * e, 156.421875 * e),
                a.bezierCurveTo(65 * e, 168.421875 * e, 65 * e, 168.421875 * e, 64.5 * e, 180.421875 * e),
                a.bezierCurveTo(58.5 * e, 177.421875 * e, 58.5 * e, 177.421875 * e, 52.5 * e, 174.421875 * e),
                a.closePath(),
                he(a, i[6], i[7], 2 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(42.5 * e, 163.421875 * e),
                a.bezierCurveTo(62.5 * e, 185.421875 * e, 86.5 * e, 186.421875 * e, 111.5 * e, 165.421875 * e),
                a.bezierCurveTo(107.5 * e, 176.421875 * e, 95.5 * e, 187.421875 * e, 75.5 * e, 188.421875 * e),
                a.bezierCurveTo(53.5 * e, 188.421875 * e, 43.5 * e, 171.421875 * e, 42.5 * e, 164.421875 * e),
                a.closePath(),
                he(a, i[3], i[2], 4 * e),
                n
            }
            function gn(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                return n.width = 400 * e,
                n.height = 170 * e,
                a.translate(0, -170 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(159.5 * e, 322.0625 * e),
                a.bezierCurveTo(240.5 * e, 293.0625 * e, 240.5 * e, 293.0625 * e, 321.5 * e, 264.0625 * e),
                a.bezierCurveTo(276.5 * e, 230.0625 * e, 276.5 * e, 230.0625 * e, 231.5 * e, 196.0625 * e),
                a.bezierCurveTo(158.5 * e, 221.5625 * e, 158.5 * e, 221.5625 * e, 85.5 * e, 247.0625 * e),
                a.closePath(),
                he(a, i[0], i[1], 12 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(212.5 * e, 270.0625 * e),
                a.bezierCurveTo(235 * e, 261.5625 * e, 235 * e, 261.5625 * e, 257.5 * e, 253.0625 * e),
                a.closePath(),
                he(a, void 0, i[0], 12 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(193.5 * e, 226.0625 * e),
                a.bezierCurveTo(204.5 * e, 242.0625 * e, 242.5 * e, 237.0625 * e, 251.5 * e, 225.0625 * e),
                a.bezierCurveTo(246.5 * e, 195.0625 * e, 205.5 * e, 190.0625 * e, 193.5 * e, 227.0625 * e),
                a.closePath(),
                he(a, i[2], i[3], 12 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(164.5 * e, 245.0625 * e),
                a.bezierCurveTo(182.5 * e, 264.0625 * e, 252.5 * e, 258.0625 * e, 276.5 * e, 244.0625 * e),
                a.bezierCurveTo(265.5 * e, 226.0625 * e, 244.5 * e, 231.0625 * e, 229.5 * e, 230.0625 * e),
                a.bezierCurveTo(205.5 * e, 227.0625 * e, 175.5 * e, 202.0625 * e, 162.5 * e, 244.0625 * e),
                a.closePath(),
                he(a, i[2], i[3], 12 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(115.5 * e, 260.0625 * e),
                a.bezierCurveTo(134.5 * e, 279.0625 * e, 170.5 * e, 275.0625 * e, 191.5 * e, 257.0625 * e),
                a.bezierCurveTo(174.5 * e, 208.0625 * e, 142.5 * e, 197.0625 * e, 116.5 * e, 259.0625 * e),
                a.closePath(),
                he(a, i[2], i[3], 12 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(152.5 * e, 278.0625 * e),
                a.bezierCurveTo(165.5 * e, 294.0625 * e, 200.5 * e, 287.0625 * e, 216.5 * e, 278.0625 * e),
                a.bezierCurveTo(206.5 * e, 247.0625 * e, 173.5 * e, 233.0625 * e, 153.5 * e, 276.0625 * e),
                a.closePath(),
                he(a, i[2], i[3], 12 * e),
                n
            }
            function ln(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                return n.width = 272 * e,
                n.height = 264 * e,
                a.translate(0, 20 * e),
                a.globalAlpha = t ? .5 : 1,
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(56.999969482421875 * e, 84.517333984375 * e),
                a.bezierCurveTo(61.999969482421875 * e, 58.517333984375 * e, 79.99996948242188 * e, 50.517333984375 * e, 102.99996948242188 * e, 50.517333984375 * e),
                a.bezierCurveTo(119.99996948242188 * e, 26.517333984375 * e, 137.99996948242188 * e, 32.517333984375 * e, 156.99996948242188 * e, 44.517333984375 * e),
                a.bezierCurveTo(187.99996948242188 * e, 42.517333984375 * e, 195.99996948242188 * e, 50.517333984375 * e, 202.99996948242188 * e, 77.517333984375 * e),
                a.bezierCurveTo(229.99996948242188 * e, 80.517333984375 * e, 231.99996948242188 * e, 96.517333984375 * e, 229.99996948242188 * e, 118.517333984375 * e),
                a.bezierCurveTo(241.99996948242188 * e, 147.517333984375 * e, 236.99996948242188 * e, 148.517333984375 * e, 220.99996948242188 * e, 165.517333984375 * e),
                a.bezierCurveTo(222.99996948242188 * e, 192.517333984375 * e, 209.99996948242188 * e, 212.517333984375 * e, 177.99996948242188 * e, 213.517333984375 * e),
                a.bezierCurveTo(159.99996948242188 * e, 234.517333984375 * e, 141.99996948242188 * e, 234.517333984375 * e, 116.99996948242188 * e, 222.517333984375 * e),
                a.bezierCurveTo(72.99996948242188 * e, 226.517333984375 * e, 66.99996948242188 * e, 207.517333984375 * e, 65.99996948242188 * e, 190.517333984375 * e),
                a.bezierCurveTo(35.999969482421875 * e, 180.517333984375 * e, 30.999969482421875 * e, 162.517333984375 * e, 39.999969482421875 * e, 135.517333984375 * e),
                a.bezierCurveTo(23.999969482421875 * e, 110.517333984375 * e, 43.999969482421875 * e, 90.517333984375 * e, 55.999969482421875 * e, 85.517333984375 * e),
                a.closePath(),
                he(a, i[0]),
                a.translate(0, -20 * e),
                a.globalAlpha = 1,
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(56.999969482421875 * e, 84.517333984375 * e),
                a.bezierCurveTo(61.999969482421875 * e, 58.517333984375 * e, 79.99996948242188 * e, 50.517333984375 * e, 102.99996948242188 * e, 50.517333984375 * e),
                a.bezierCurveTo(119.99996948242188 * e, 26.517333984375 * e, 137.99996948242188 * e, 32.517333984375 * e, 156.99996948242188 * e, 44.517333984375 * e),
                a.bezierCurveTo(187.99996948242188 * e, 42.517333984375 * e, 195.99996948242188 * e, 50.517333984375 * e, 202.99996948242188 * e, 77.517333984375 * e),
                a.bezierCurveTo(229.99996948242188 * e, 80.517333984375 * e, 231.99996948242188 * e, 96.517333984375 * e, 229.99996948242188 * e, 118.517333984375 * e),
                a.bezierCurveTo(241.99996948242188 * e, 147.517333984375 * e, 236.99996948242188 * e, 148.517333984375 * e, 220.99996948242188 * e, 165.517333984375 * e),
                a.bezierCurveTo(222.99996948242188 * e, 192.517333984375 * e, 209.99996948242188 * e, 212.517333984375 * e, 177.99996948242188 * e, 213.517333984375 * e),
                a.bezierCurveTo(159.99996948242188 * e, 234.517333984375 * e, 141.99996948242188 * e, 234.517333984375 * e, 116.99996948242188 * e, 222.517333984375 * e),
                a.bezierCurveTo(72.99996948242188 * e, 226.517333984375 * e, 66.99996948242188 * e, 207.517333984375 * e, 65.99996948242188 * e, 190.517333984375 * e),
                a.bezierCurveTo(35.999969482421875 * e, 180.517333984375 * e, 30.999969482421875 * e, 162.517333984375 * e, 39.999969482421875 * e, 135.517333984375 * e),
                a.bezierCurveTo(23.999969482421875 * e, 110.517333984375 * e, 43.999969482421875 * e, 90.517333984375 * e, 55.999969482421875 * e, 85.517333984375 * e),
                a.closePath(),
                he(a, i[1], i[2], 8 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(123.99996948242188 * e, 116.18402099609375 * e),
                a.bezierCurveTo(115.99996948242188 * e, 99.18402099609375 * e, 109.99996948242188 * e, 74.18402099609375 * e, 109.99996948242188 * e, 63.18402099609375 * e),
                a.bezierCurveTo(115.99996948242188 * e, 69.18402099609375 * e, 125.99996948242188 * e, 87.18402099609375 * e, 137.99996948242188 * e, 112.18402099609375 * e),
                a.bezierCurveTo(142.99996948242188 * e, 84.18402099609375 * e, 143.99996948242188 * e, 76.18402099609375 * e, 153.99996948242188 * e, 62.18402099609375 * e),
                a.bezierCurveTo(155.99996948242188 * e, 79.18402099609375 * e, 149.99996948242188 * e, 110.18402099609375 * e, 151.99996948242188 * e, 117.18402099609375 * e),
                a.bezierCurveTo(162.99996948242188 * e, 104.18402099609375 * e, 180.99996948242188 * e, 91.18402099609375 * e, 191.99996948242188 * e, 91.18402099609375 * e),
                a.bezierCurveTo(185.99996948242188 * e, 102.18402099609375 * e, 180.99996948242188 * e, 106.18402099609375 * e, 160.99996948242188 * e, 124.18402099609375 * e),
                a.bezierCurveTo(190.99996948242188 * e, 121.18402099609375 * e, 199.99996948242188 * e, 120.18402099609375 * e, 207.99996948242188 * e, 123.18402099609375 * e),
                a.bezierCurveTo(199.99996948242188 * e, 129.18402099609375 * e, 181.99996948242188 * e, 132.18402099609375 * e, 160.99996948242188 * e, 135.18402099609375 * e),
                a.bezierCurveTo(179.99996948242188 * e, 142.18402099609375 * e, 193.99996948242188 * e, 151.18402099609375 * e, 196.99996948242188 * e, 156.18402099609375 * e),
                a.bezierCurveTo(185.99996948242188 * e, 156.18402099609375 * e, 163.99996948242188 * e, 149.18402099609375 * e, 152.99996948242188 * e, 147.18402099609375 * e),
                a.bezierCurveTo(157.99996948242188 * e, 155.18402099609375 * e, 165.99996948242188 * e, 176.18402099609375 * e, 169.99996948242188 * e, 195.18402099609375 * e),
                a.bezierCurveTo(162.99996948242188 * e, 190.18402099609375 * e, 147.99996948242188 * e, 167.18402099609375 * e, 139.99996948242188 * e, 153.18402099609375 * e),
                a.bezierCurveTo(137.99996948242188 * e, 167.18402099609375 * e, 126.99996948242188 * e, 194.18402099609375 * e, 119.99996948242188 * e, 204.18402099609375 * e),
                a.bezierCurveTo(117.99996948242188 * e, 186.18402099609375 * e, 123.99996948242188 * e, 165.18402099609375 * e, 126.99996948242188 * e, 149.18402099609375 * e),
                a.bezierCurveTo(110.99996948242188 * e, 163.18402099609375 * e, 103.99996948242188 * e, 170.18402099609375 * e, 82.99996948242188 * e, 177.18402099609375 * e),
                a.bezierCurveTo(90.99996948242188 * e, 162.18402099609375 * e, 99.99996948242188 * e, 153.18402099609375 * e, 117.99996948242188 * e, 140.18402099609375 * e),
                a.bezierCurveTo(97.99996948242188 * e, 140.18402099609375 * e, 83.99996948242188 * e, 139.18402099609375 * e, 65.99996948242188 * e, 132.18402099609375 * e),
                a.bezierCurveTo(77.99996948242188 * e, 127.18402099609375 * e, 95.99996948242188 * e, 127.18402099609375 * e, 115.99996948242188 * e, 127.18402099609375 * e),
                a.bezierCurveTo(91.99996948242188 * e, 113.18402099609375 * e, 84.99996948242188 * e, 107.18402099609375 * e, 76.99996948242188 * e, 96.18402099609375 * e),
                a.bezierCurveTo(94.99996948242188 * e, 99.18402099609375 * e, 109.99996948242188 * e, 109.18402099609375 * e, 123.99996948242188 * e, 116.18402099609375 * e),
                a.closePath(),
                he(a, i[3]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(131.99996948242188 * e, 119.18402099609375 * e),
                a.bezierCurveTo(141.99996948242188 * e, 119.18402099609375 * e, 145.99996948242188 * e, 116.18402099609375 * e, 147.99996948242188 * e, 109.18402099609375 * e),
                a.bezierCurveTo(151.99996948242188 * e, 107.18402099609375 * e, 159.99996948242188 * e, 107.18402099609375 * e, 156.99996948242188 * e, 123.18402099609375 * e),
                a.bezierCurveTo(155.99996948242188 * e, 140.18402099609375 * e, 142.99996948242188 * e, 149.18402099609375 * e, 132.99996948242188 * e, 147.18402099609375 * e),
                a.bezierCurveTo(119.99996948242188 * e, 144.18402099609375 * e, 113.99996948242188 * e, 122.18402099609375 * e, 131.99996948242188 * e, 119.18402099609375 * e),
                a.closePath(),
                he(a, i[4], i[5], 6 * e),
                n
            }
            function An(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                return n.width = 247 * e,
                n.height = 247 * e,
                a.translate(0, 10 * e),
                a.globalAlpha = t ? .5 : 1,
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(150 * e, 62 * e),
                a.bezierCurveTo(151.5 * e, 71.5 * e, 149 * e, 70 * e, 153 * e, 81 * e),
                a.bezierCurveTo(158 * e, 73.5 * e, 158 * e, 73.5 * e, 163 * e, 66 * e),
                a.closePath(),
                he(a, i[0]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(164 * e, 171 * e),
                a.bezierCurveTo(149 * e, 159 * e, 156.5 * e, 165 * e, 149 * e, 159 * e),
                a.bezierCurveTo(149 * e, 167 * e, 149 * e, 170 * e, 152 * e, 178 * e),
                a.closePath(),
                he(a, i[0]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(132 * e, 95 * e),
                a.bezierCurveTo(154 * e, 102 * e, 154 * e, 126 * e, 137 * e, 139 * e),
                a.bezierCurveTo(113 * e, 152 * e, 89 * e, 136 * e, 80 * e, 121 * e),
                a.bezierCurveTo(57 * e, 89 * e, 69 * e, 63 * e, 79 * e, 52 * e),
                a.bezierCurveTo(110 * e, 20 * e, 139 * e, 21 * e, 150 * e, 25 * e),
                a.bezierCurveTo(197 * e, 36 * e, 221 * e, 67 * e, 226 * e, 90 * e),
                a.bezierCurveTo(234 * e, 134 * e, 214 * e, 177 * e, 195 * e, 197 * e),
                a.bezierCurveTo(144 * e, 242 * e, 79 * e, 216 * e, 58 * e, 206 * e),
                a.bezierCurveTo(13 * e, 174 * e, 20 * e, 134 * e, 23 * e, 107 * e),
                a.bezierCurveTo(26 * e, 78 * e, 33 * e, 60 * e, 38 * e, 43 * e),
                a.bezierCurveTo(42 * e, 32 * e, 47 * e, 32 * e, 50 * e, 36 * e),
                a.bezierCurveTo(54 * e, 37 * e, 50 * e, 52 * e, 44 * e, 87 * e),
                a.bezierCurveTo(40 * e, 115 * e, 46 * e, 142 * e, 57 * e, 158 * e),
                a.bezierCurveTo(76 * e, 189 * e, 129 * e, 182 * e, 152 * e, 173 * e),
                a.bezierCurveTo(186 * e, 156 * e, 191 * e, 106 * e, 176 * e, 85 * e),
                a.bezierCurveTo(159 * e, 61 * e, 132 * e, 62 * e, 122 * e, 66 * e),
                a.bezierCurveTo(108 * e, 74 * e, 108 * e, 89 * e, 116 * e, 90 * e),
                a.bezierCurveTo(123 * e, 92 * e, 130 * e, 93 * e, 131 * e, 94 * e),
                a.closePath(),
                he(a, i[0]),
                a.translate(0, -10 * e),
                a.globalAlpha = 1,
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(150 * e, 62 * e),
                a.bezierCurveTo(151.5 * e, 71.5 * e, 149 * e, 70 * e, 153 * e, 81 * e),
                a.bezierCurveTo(158 * e, 73.5 * e, 158 * e, 73.5 * e, 163 * e, 66 * e),
                a.closePath(),
                he(a, i[5]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(164 * e, 171 * e),
                a.bezierCurveTo(149 * e, 159 * e, 156.5 * e, 165 * e, 149 * e, 159 * e),
                a.bezierCurveTo(149 * e, 167 * e, 149 * e, 170 * e, 152 * e, 178 * e),
                a.closePath(),
                he(a, i[5]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(132 * e, 95 * e),
                a.bezierCurveTo(154 * e, 102 * e, 154 * e, 126 * e, 137 * e, 139 * e),
                a.bezierCurveTo(113 * e, 152 * e, 89 * e, 136 * e, 80 * e, 121 * e),
                a.bezierCurveTo(57 * e, 89 * e, 69 * e, 63 * e, 79 * e, 52 * e),
                a.bezierCurveTo(110 * e, 20 * e, 139 * e, 21 * e, 150 * e, 25 * e),
                a.bezierCurveTo(197 * e, 36 * e, 221 * e, 67 * e, 226 * e, 90 * e),
                a.bezierCurveTo(234 * e, 134 * e, 214 * e, 177 * e, 195 * e, 197 * e),
                a.bezierCurveTo(144 * e, 242 * e, 79 * e, 216 * e, 58 * e, 206 * e),
                a.bezierCurveTo(13 * e, 174 * e, 20 * e, 134 * e, 23 * e, 107 * e),
                a.bezierCurveTo(26 * e, 78 * e, 33 * e, 60 * e, 38 * e, 43 * e),
                a.bezierCurveTo(42 * e, 32 * e, 47 * e, 32 * e, 50 * e, 36 * e),
                a.bezierCurveTo(54 * e, 37 * e, 50 * e, 52 * e, 44 * e, 87 * e),
                a.bezierCurveTo(40 * e, 115 * e, 46 * e, 142 * e, 57 * e, 158 * e),
                a.bezierCurveTo(76 * e, 189 * e, 129 * e, 182 * e, 152 * e, 173 * e),
                a.bezierCurveTo(186 * e, 156 * e, 191 * e, 106 * e, 176 * e, 85 * e),
                a.bezierCurveTo(159 * e, 61 * e, 132 * e, 62 * e, 122 * e, 66 * e),
                a.bezierCurveTo(108 * e, 74 * e, 108 * e, 89 * e, 116 * e, 90 * e),
                a.bezierCurveTo(123 * e, 92 * e, 130 * e, 93 * e, 131 * e, 94 * e),
                a.closePath(),
                he(a, i[1], i[2], 5 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(137 * e, 137 * e),
                a.bezierCurveTo(145 * e, 125 * e, 138 * e, 108 * e, 123 * e, 104 * e),
                a.bezierCurveTo(81 * e, 101 * e, 88 * e, 77 * e, 98 * e, 65 * e),
                a.bezierCurveTo(117 * e, 38 * e, 138 * e, 39 * e, 165 * e, 52 * e),
                a.bezierCurveTo(197 * e, 72 * e, 207 * e, 111 * e, 197 * e, 140 * e),
                a.bezierCurveTo(182 * e, 180 * e, 161 * e, 197 * e, 112 * e, 194 * e),
                a.bezierCurveTo(58 * e, 194 * e, 37 * e, 170 * e, 34 * e, 142 * e),
                a.bezierCurveTo(29 * e, 102 * e, 40 * e, 63 * e, 51 * e, 45 * e),
                a.bezierCurveTo(43 * e, 78 * e, 41 * e, 103 * e, 43 * e, 122 * e),
                a.bezierCurveTo(51 * e, 158 * e, 63 * e, 174 * e, 95 * e, 179 * e),
                a.bezierCurveTo(129 * e, 186 * e, 169 * e, 172 * e, 177 * e, 144 * e),
                a.bezierCurveTo(197 * e, 105 * e, 172 * e, 76 * e, 160 * e, 71 * e),
                a.bezierCurveTo(125 * e, 52 * e, 111 * e, 73 * e, 111 * e, 81 * e),
                a.bezierCurveTo(106 * e, 93 * e, 140 * e, 92 * e, 147 * e, 107 * e),
                a.bezierCurveTo(153 * e, 128 * e, 140 * e, 135 * e, 137 * e, 139 * e),
                a.closePath(),
                he(a, i[3]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(132 * e, 95 * e),
                a.bezierCurveTo(154 * e, 102 * e, 154 * e, 126 * e, 137 * e, 139 * e),
                a.bezierCurveTo(113 * e, 152 * e, 89 * e, 136 * e, 80 * e, 121 * e),
                a.bezierCurveTo(57 * e, 89 * e, 69 * e, 63 * e, 79 * e, 52 * e),
                a.bezierCurveTo(110 * e, 20 * e, 139 * e, 21 * e, 150 * e, 25 * e),
                a.bezierCurveTo(197 * e, 36 * e, 221 * e, 67 * e, 226 * e, 90 * e),
                a.bezierCurveTo(234 * e, 134 * e, 214 * e, 177 * e, 195 * e, 197 * e),
                a.bezierCurveTo(144 * e, 242 * e, 79 * e, 216 * e, 58 * e, 206 * e),
                a.bezierCurveTo(13 * e, 174 * e, 20 * e, 134 * e, 23 * e, 107 * e),
                a.bezierCurveTo(26 * e, 78 * e, 33 * e, 60 * e, 38 * e, 43 * e),
                a.bezierCurveTo(42 * e, 32 * e, 47 * e, 32 * e, 50 * e, 36 * e),
                a.bezierCurveTo(54 * e, 37 * e, 50 * e, 52 * e, 44 * e, 87 * e),
                a.bezierCurveTo(40 * e, 115 * e, 46 * e, 142 * e, 57 * e, 158 * e),
                a.bezierCurveTo(76 * e, 189 * e, 129 * e, 182 * e, 152 * e, 173 * e),
                a.bezierCurveTo(186 * e, 156 * e, 191 * e, 106 * e, 176 * e, 85 * e),
                a.bezierCurveTo(159 * e, 61 * e, 132 * e, 62 * e, 122 * e, 66 * e),
                a.bezierCurveTo(108 * e, 74 * e, 108 * e, 89 * e, 116 * e, 90 * e),
                a.bezierCurveTo(123 * e, 92 * e, 130 * e, 93 * e, 131 * e, 94 * e),
                a.closePath(),
                he(a, void 0, i[2], 5 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(82 * e, 63 * e),
                a.bezierCurveTo(91 * e, 64 * e, 96 * e, 62 * e, 98 * e, 53 * e),
                a.bezierCurveTo(91 * e, 45 * e, 85 * e, 42 * e, 78 * e, 41 * e),
                a.bezierCurveTo(81 * e, 51 * e, 82 * e, 57 * e, 82 * e, 63 * e),
                a.closePath(),
                he(a, i[4], i[5], 5 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(148 * e, 40 * e),
                a.bezierCurveTo(140 * e, 52 * e, 131 * e, 51 * e, 123 * e, 43 * e),
                a.bezierCurveTo(123 * e, 25 * e, 129 * e, 17 * e, 134 * e, 12 * e),
                a.bezierCurveTo(138 * e, 35 * e, 142 * e, 31 * e, 148 * e, 40 * e),
                a.closePath(),
                he(a, i[4], i[5], 5 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(189 * e, 43 * e),
                a.bezierCurveTo(191 * e, 54 * e, 196 * e, 58 * e, 205 * e, 59 * e),
                a.bezierCurveTo(211 * e, 42 * e, 214 * e, 37 * e, 216 * e, 31 * e),
                a.bezierCurveTo(202 * e, 34 * e, 195 * e, 39 * e, 190 * e, 43 * e),
                a.closePath(),
                he(a, i[4], i[5], 5 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(216 * e, 98 * e),
                a.bezierCurveTo(219 * e, 105 * e, 225 * e, 107 * e, 230 * e, 109 * e),
                a.bezierCurveTo(227 * e, 113 * e, 221 * e, 115 * e, 215 * e, 115 * e),
                a.bezierCurveTo(208 * e, 109 * e, 211 * e, 101 * e, 216 * e, 98 * e),
                a.closePath(),
                he(a, i[4], i[5], 5 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(180 * e, 85 * e),
                a.bezierCurveTo(193 * e, 86 * e, 196 * e, 98 * e, 191 * e, 108 * e),
                a.bezierCurveTo(179 * e, 112 * e, 167 * e, 113 * e, 155 * e, 111 * e),
                a.bezierCurveTo(169 * e, 100 * e, 176 * e, 96 * e, 180 * e, 85 * e),
                a.closePath(),
                he(a, i[4], i[5], 5 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(96 * e, 114 * e),
                a.bezierCurveTo(102 * e, 109 * e, 112 * e, 110 * e, 114 * e, 118 * e),
                a.bezierCurveTo(111 * e, 134 * e, 102 * e, 143 * e, 95 * e, 147 * e),
                a.bezierCurveTo(98 * e, 123 * e, 97 * e, 119 * e, 96 * e, 115 * e),
                a.closePath(),
                he(a, i[4], i[5], 5 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(79 * e, 92 * e),
                a.bezierCurveTo(86 * e, 95 * e, 89 * e, 102 * e, 83 * e, 111 * e),
                a.bezierCurveTo(70 * e, 110 * e, 61 * e, 107 * e, 54 * e, 100 * e),
                a.bezierCurveTo(70 * e, 97 * e, 70 * e, 95 * e, 78 * e, 92 * e),
                a.closePath(),
                he(a, i[4], i[5], 5 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(39 * e, 130 * e),
                a.bezierCurveTo(37 * e, 141 * e, 41 * e, 143 * e, 48 * e, 144 * e),
                a.bezierCurveTo(54 * e, 134 * e, 55 * e, 131 * e, 56 * e, 123 * e),
                a.bezierCurveTo(47 * e, 129 * e, 43 * e, 129 * e, 39 * e, 129 * e),
                a.closePath(),
                he(a, i[4], i[5], 5 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(113 * e, 189 * e),
                a.bezierCurveTo(119 * e, 201 * e, 127 * e, 198 * e, 134 * e, 192 * e),
                a.bezierCurveTo(128 * e, 175 * e, 128 * e, 173 * e, 128 * e, 165 * e),
                a.bezierCurveTo(117 * e, 176 * e, 116 * e, 182 * e, 113 * e, 187 * e),
                a.closePath(),
                he(a, i[4], i[5], 5 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(74 * e, 154 * e),
                a.bezierCurveTo(76 * e, 163 * e, 76 * e, 170 * e, 75 * e, 177 * e),
                a.bezierCurveTo(68 * e, 179 * e, 66 * e, 176 * e, 63 * e, 171 * e),
                a.bezierCurveTo(69 * e, 164 * e, 72 * e, 159 * e, 74 * e, 154 * e),
                a.closePath(),
                he(a, i[4], i[5], 5 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(206 * e, 152 * e),
                a.bezierCurveTo(198 * e, 158 * e, 198 * e, 166 * e, 201 * e, 171 * e),
                a.bezierCurveTo(209 * e, 170 * e, 221 * e, 170 * e, 226 * e, 172 * e),
                a.bezierCurveTo(219 * e, 159 * e, 210 * e, 155 * e, 207 * e, 153 * e),
                a.closePath(),
                he(a, i[4], i[5], 5 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(181 * e, 184 * e),
                a.bezierCurveTo(170 * e, 184 * e, 167 * e, 187 * e, 163 * e, 195 * e),
                a.bezierCurveTo(171 * e, 207 * e, 183 * e, 214 * e, 191 * e, 217 * e),
                a.bezierCurveTo(183 * e, 204 * e, 184 * e, 196 * e, 181 * e, 184 * e),
                a.closePath(),
                he(a, i[4], i[5], 5 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(66 * e, 199 * e),
                a.bezierCurveTo(73 * e, 197 * e, 78 * e, 199 * e, 79 * e, 206 * e),
                a.bezierCurveTo(71 * e, 216 * e, 67 * e, 221 * e, 57 * e, 223 * e),
                a.closePath(),
                he(a, i[4], i[5], 5 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(182 * e, 143 * e),
                a.bezierCurveTo(183 * e, 146 * e, 183 * e, 149 * e, 179 * e, 152 * e),
                a.bezierCurveTo(174 * e, 146 * e, 174 * e, 146 * e, 169 * e, 140 * e),
                a.closePath(),
                he(a, i[4], i[5], 5 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(32 * e, 159 * e),
                a.bezierCurveTo(45 * e, 160 * e, 48 * e, 164 * e, 45 * e, 175 * e),
                a.bezierCurveTo(28 * e, 183 * e, 25 * e, 184 * e, 19 * e, 184 * e),
                a.bezierCurveTo(30 * e, 170 * e, 29 * e, 164 * e, 31 * e, 160 * e),
                a.closePath(),
                he(a, i[4], i[5], 5 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(110 * e, 214 * e),
                a.bezierCurveTo(106 * e, 212 * e, 104 * e, 213 * e, 102 * e, 218 * e),
                a.bezierCurveTo(104 * e, 220 * e, 107 * e, 222 * e, 110 * e, 224 * e),
                a.bezierCurveTo(110.5 * e, 219 * e, 110.5 * e, 219 * e, 111 * e, 214 * e),
                a.closePath(),
                he(a, i[4], i[5], 5 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(40 * e, 52 * e),
                a.bezierCurveTo(41 * e, 57 * e, 40 * e, 61 * e, 34 * e, 60 * e),
                a.bezierCurveTo(31.5 * e, 55 * e, 31.5 * e, 55 * e, 29 * e, 50 * e),
                a.bezierCurveTo(34 * e, 50.5 * e, 34 * e, 50.5 * e, 39 * e, 51 * e),
                a.closePath(),
                he(a, i[4], i[5], 5 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(31 * e, 81 * e),
                a.bezierCurveTo(37 * e, 84 * e, 38 * e, 90 * e, 34 * e, 99 * e),
                a.bezierCurveTo(23 * e, 97 * e, 19 * e, 96 * e, 16 * e, 93 * e),
                a.bezierCurveTo(24 * e, 88 * e, 28 * e, 85 * e, 30 * e, 81 * e),
                a.closePath(),
                he(a, i[4], i[5], 5 * e),
                n
            }
            function bn(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                return n.width = 465 * e,
                n.height = 310 * e,
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(126 * e, 192 * e),
                a.bezierCurveTo(198 * e, 202 * e, 245 * e, 203 * e, 335 * e, 194 * e),
                a.bezierCurveTo(336 * e, 232 * e, 326 * e, 235 * e, 232 * e, 237 * e),
                a.bezierCurveTo(161 * e, 235 * e, 122 * e, 235 * e, 126 * e, 193 * e),
                a.closePath(),
                he(a, i[0], i[1], 4 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(146 * e, 239 * e),
                a.bezierCurveTo(174 * e, 74 * e, 287 * e, 88 * e, 320 * e, 240 * e),
                a.bezierCurveTo(329 * e, 231 * e, 340 * e, 219 * e, 332 * e, 115 * e),
                a.bezierCurveTo(330 * e, 40 * e, 144 * e, 30 * e, 129 * e, 116 * e),
                a.bezierCurveTo(124 * e, 217 * e, 124 * e, 228 * e, 143 * e, 237 * e),
                a.closePath(),
                he(a, i[0], i[1], 4 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(126 * e, 193 * e),
                a.bezierCurveTo(173 * e, 94 * e, 209 * e, 100 * e, 228 * e, 57 * e),
                a.bezierCurveTo(190 * e, 112 * e, 165 * e, 115 * e, 127 * e, 184 * e),
                a.closePath(),
                he(a, void 0, i[1], 4 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(230 * e, 57 * e),
                a.bezierCurveTo(266 * e, 117 * e, 310 * e, 130 * e, 332 * e, 183 * e),
                a.bezierCurveTo(290 * e, 112 * e, 262 * e, 109 * e, 230 * e, 56 * e),
                a.closePath(),
                he(a, void 0, i[1], 4 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(154 * e, 212 * e),
                a.bezierCurveTo(208 * e, 224 * e, 252 * e, 219 * e, 305 * e, 212 * e),
                a.bezierCurveTo(267 * e, 219 * e, 204 * e, 222 * e, 155 * e, 212 * e),
                a.closePath(),
                he(a, void 0, i[1], 4 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(239 * e, 59 * e),
                a.bezierCurveTo(302 * e, 72 * e, 325 * e, 84 * e, 326 * e, 115 * e),
                a.bezierCurveTo(289 * e, 80 * e, 270 * e, 88 * e, 253 * e, 78 * e),
                a.closePath(),
                he(a, i[2]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(216 * e, 61 * e),
                a.bezierCurveTo(209 * e, 70 * e, 209 * e, 70 * e, 202 * e, 79 * e),
                a.bezierCurveTo(173 * e, 87 * e, 162 * e, 91 * e, 137 * e, 107 * e),
                a.bezierCurveTo(153 * e, 78 * e, 174 * e, 67 * e, 212 * e, 62 * e),
                a.closePath(),
                he(a, i[2]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(175 * e, 125 * e),
                a.bezierCurveTo(218 * e, 94 * e, 238 * e, 90 * e, 281 * e, 125 * e),
                a.bezierCurveTo(245 * e, 89 * e, 240 * e, 80 * e, 228 * e, 67 * e),
                a.bezierCurveTo(207 * e, 100 * e, 192 * e, 104 * e, 177 * e, 123 * e),
                a.closePath(),
                he(a, i[2]),
                n
            }
            function Nn(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                return n.width = 465 * e,
                n.height = 405 * e,
                a.globalAlpha = 1,
                a.translate(6 * e, 0 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(39.000030517578125 * e, 162.03977966308594 * e),
                a.bezierCurveTo(125.00003051757812 * e, 84.03977966308594 * e, 108.50003051757812 * e, 115.03977966308594 * e, 178.00003051757812 * e, 68.03977966308594 * e),
                a.bezierCurveTo(299.0000305175781 * e, 146.53977966308594 * e, 299.0000305175781 * e, 146.53977966308594 * e, 420.0000305175781 * e, 225.03977966308594 * e),
                a.bezierCurveTo(400.0000305175781 * e, 288.53977966308594 * e, 400.0000305175781 * e, 288.53977966308594 * e, 380.0000305175781 * e, 352.03977966308594 * e),
                a.bezierCurveTo(216.50003051757812 * e, 345.53977966308594 * e, 216.50003051757812 * e, 345.53977966308594 * e, 53.000030517578125 * e, 339.03977966308594 * e),
                a.closePath(),
                he(a, i[3]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(23.000030517578125 * e, 306.94886779785156 * e),
                a.bezierCurveTo(5.000030517578125 * e, 275.94886779785156 * e, 6.000030517578125 * e, 201.94886779785156 * e, 14.000030517578125 * e, 150.94886779785156 * e),
                a.bezierCurveTo(40.000030517578125 * e, 34.94886779785156 * e, 157.00003051757812 * e, 14.948867797851562 * e, 199.00003051757812 * e, 11.948867797851562 * e),
                a.bezierCurveTo(331.0000305175781 * e, .9488677978515625 * e, 409.0000305175781 * e, 61.94886779785156 * e, 428.0000305175781 * e, 133.94886779785156 * e),
                a.bezierCurveTo(445.0000305175781 * e, 207.94886779785156 * e, 439.0000305175781 * e, 274.94886779785156 * e, 426.0000305175781 * e, 342.94886779785156 * e),
                a.bezierCurveTo(355.0000305175781 * e, 207.94886779785156 * e, 345.0000305175781 * e, 208.94886779785156 * e, 333.0000305175781 * e, 202.94886779785156 * e),
                a.bezierCurveTo(262.0000305175781 * e, 143.94886779785156 * e, 236.00003051757812 * e, 148.94886779785156 * e, 189.00003051757812 * e, 162.94886779785156 * e),
                a.bezierCurveTo(82.00003051757812 * e, 190.94886779785156 * e, 78.00003051757812 * e, 235.94886779785156 * e, 62.000030517578125 * e, 279.94886779785156 * e),
                a.closePath(),
                he(a, i[0], i[1], 20 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(17.000030517578125 * e, 149.94886779785156 * e),
                a.bezierCurveTo(76.00003051757812 * e, 67.94886779785156 * e, 177.00003051757812 * e, 40.94886779785156 * e, 232.00003051757812 * e, 45.94886779785156 * e),
                a.bezierCurveTo(316.0000305175781 * e, 46.94886779785156 * e, 359.0000305175781 * e, 74.94886779785156 * e, 428.0000305175781 * e, 145.94886779785156 * e),
                a.bezierCurveTo(414.0000305175781 * e, 73.94886779785156 * e, 386.0000305175781 * e, 68.94886779785156 * e, 359.0000305175781 * e, 43.94886779785156 * e),
                a.bezierCurveTo(295.0000305175781 * e, 5.9488677978515625 * e, 239.00003051757812 * e, 10.948867797851562 * e, 207.00003051757812 * e, 10.948867797851562 * e),
                a.bezierCurveTo(121.00003051757812 * e, 20.948867797851562 * e, 104.00003051757812 * e, 34.94886779785156 * e, 45.000030517578125 * e, 84.94886779785156 * e),
                a.bezierCurveTo(14.000030517578125 * e, 128.94886779785156 * e, 18.000030517578125 * e, 142.94886779785156 * e, 16.000030517578125 * e, 151.94886779785156 * e),
                a.closePath(),
                he(a, i[2]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(23.000030517578125 * e, 306.94886779785156 * e),
                a.bezierCurveTo(5.000030517578125 * e, 275.94886779785156 * e, 6.000030517578125 * e, 201.94886779785156 * e, 14.000030517578125 * e, 150.94886779785156 * e),
                a.bezierCurveTo(40.000030517578125 * e, 34.94886779785156 * e, 157.00003051757812 * e, 14.948867797851562 * e, 199.00003051757812 * e, 11.948867797851562 * e),
                a.bezierCurveTo(331.0000305175781 * e, .9488677978515625 * e, 409.0000305175781 * e, 61.94886779785156 * e, 428.0000305175781 * e, 133.94886779785156 * e),
                a.bezierCurveTo(445.0000305175781 * e, 207.94886779785156 * e, 439.0000305175781 * e, 274.94886779785156 * e, 426.0000305175781 * e, 342.94886779785156 * e),
                a.bezierCurveTo(355.0000305175781 * e, 207.94886779785156 * e, 345.0000305175781 * e, 208.94886779785156 * e, 333.0000305175781 * e, 202.94886779785156 * e),
                a.bezierCurveTo(262.0000305175781 * e, 143.94886779785156 * e, 236.00003051757812 * e, 148.94886779785156 * e, 189.00003051757812 * e, 162.94886779785156 * e),
                a.bezierCurveTo(82.00003051757812 * e, 190.94886779785156 * e, 78.00003051757812 * e, 235.94886779785156 * e, 62.000030517578125 * e, 279.94886779785156 * e),
                a.closePath(),
                he(a, void 0, i[1], 16 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(60.000030517578125 * e, 288.03977966308594 * e),
                a.bezierCurveTo(183.00003051757812 * e, 320.03977966308594 * e, 342.0000305175781 * e, 306.03977966308594 * e, 399.0000305175781 * e, 286.03977966308594 * e),
                a.bezierCurveTo(420.0000305175781 * e, 345.03977966308594 * e, 410.0000305175781 * e, 335.03977966308594 * e, 415.0000305175781 * e, 362.03977966308594 * e),
                a.bezierCurveTo(351.0000305175781 * e, 384.03977966308594 * e, 299.0000305175781 * e, 389.03977966308594 * e, 215.00003051757812 * e, 391.03977966308594 * e),
                a.bezierCurveTo(128.00003051757812 * e, 388.03977966308594 * e, 69.00003051757812 * e, 373.03977966308594 * e, 39.000030517578125 * e, 359.03977966308594 * e),
                a.closePath(),
                he(a, i[0], i[1], 13 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(47.000030517578125 * e, 327.03977966308594 * e),
                a.bezierCurveTo(203.00003051757812 * e, 377.03977966308594 * e, 331.0000305175781 * e, 349.03977966308594 * e, 410.0000305175781 * e, 330.03977966308594 * e),
                a.closePath(),
                he(a, i[0], i[1], 20 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(9.000030517578125 * e, 339.1306915283203 * e),
                a.bezierCurveTo(2.000030517578125 * e, 280.1306915283203 * e, 30.000030517578125 * e, 219.1306915283203 * e, 85.00003051757812 * e, 167.1306915283203 * e),
                a.bezierCurveTo(174.00003051757812 * e, 82.13069152832031 * e, 241.00003051757812 * e, 101.13069152832031 * e, 284.0000305175781 * e, 115.13069152832031 * e),
                a.bezierCurveTo(333.0000305175781 * e, 134.1306915283203 * e, 376.0000305175781 * e, 177.1306915283203 * e, 410.0000305175781 * e, 247.1306915283203 * e),
                a.bezierCurveTo(439.0000305175781 * e, 300.1306915283203 * e, 442.0000305175781 * e, 346.1306915283203 * e, 430.0000305175781 * e, 363.1306915283203 * e),
                a.bezierCurveTo(418.0000305175781 * e, 366.1306915283203 * e, 395.0000305175781 * e, 295.1306915283203 * e, 355.0000305175781 * e, 223.1306915283203 * e),
                a.bezierCurveTo(299.0000305175781 * e, 156.1306915283203 * e, 262.0000305175781 * e, 155.1306915283203 * e, 215.00003051757812 * e, 159.1306915283203 * e),
                a.bezierCurveTo(133.00003051757812 * e, 171.1306915283203 * e, 120.00003051757812 * e, 193.1306915283203 * e, 96.00003051757812 * e, 221.1306915283203 * e),
                a.bezierCurveTo(49.000030517578125 * e, 262.1306915283203 * e, 47.000030517578125 * e, 306.1306915283203 * e, 38.000030517578125 * e, 336.1306915283203 * e),
                a.bezierCurveTo(30.000030517578125 * e, 349.1306915283203 * e, 30.000030517578125 * e, 349.1306915283203 * e, 22.000030517578125 * e, 362.1306915283203 * e),
                a.closePath(),
                he(a, i[2], i[1], 20 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(228.00003051757812 * e, 128.03977966308594 * e),
                a.bezierCurveTo(315.0000305175781 * e, 131.03977966308594 * e, 349.0000305175781 * e, 178.03977966308594 * e, 386.0000305175781 * e, 234.03977966308594 * e),
                a.bezierCurveTo(444.0000305175781 * e, 329.03977966308594 * e, 446.0000305175781 * e, 354.03977966308594 * e, 427.0000305175781 * e, 373.03977966308594 * e),
                a.bezierCurveTo(389.0000305175781 * e, 389.03977966308594 * e, 399.0000305175781 * e, 329.03977966308594 * e, 361.0000305175781 * e, 277.03977966308594 * e),
                a.bezierCurveTo(306.0000305175781 * e, 191.03977966308594 * e, 266.0000305175781 * e, 183.03977966308594 * e, 220.00003051757812 * e, 181.03977966308594 * e),
                a.bezierCurveTo(138.00003051757812 * e, 184.03977966308594 * e, 123.00003051757812 * e, 212.03977966308594 * e, 89.00003051757812 * e, 271.03977966308594 * e),
                a.bezierCurveTo(52.000030517578125 * e, 349.03977966308594 * e, 68.00003051757812 * e, 364.03977966308594 * e, 33.000030517578125 * e, 369.03977966308594 * e),
                a.bezierCurveTo(6.000030517578125 * e, 366.03977966308594 * e, 5.000030517578125 * e, 341.03977966308594 * e, 26.000030517578125 * e, 288.03977966308594 * e),
                a.bezierCurveTo(60.000030517578125 * e, 207.03977966308594 * e, 100.00003051757812 * e, 180.03977966308594 * e, 113.00003051757812 * e, 170.03977966308594 * e),
                a.bezierCurveTo(159.00003051757812 * e, 132.03977966308594 * e, 196.00003051757812 * e, 133.03977966308594 * e, 226.00003051757812 * e, 129.03977966308594 * e),
                a.closePath(),
                he(a, i[0], i[1], 20 * e),
                n
            }
            function vn(e, t, i, n) {
                var a = window.document.createElement("canvas")
                  , I = a.getContext("2d");
                return a.width = 198 * e,
                a.height = 147 * e,
                I.globalAlpha = t ? .5 : 1,
                I.translate(0, 6 * e),
                I.beginPath(),
                I.lineCap = "round",
                I.lineJoin = "round",
                I.moveTo(44 * e, 76 * e),
                I.bezierCurveTo(50 * e, 82 * e, 50 * e, 82 * e, 56 * e, 88 * e),
                I.bezierCurveTo(59 * e, 82 * e, 59 * e, 82 * e, 62 * e, 76 * e),
                I.bezierCurveTo(59 * e, 71 * e, 59 * e, 71 * e, 56 * e, 66 * e),
                I.bezierCurveTo(59 * e, 69 * e, 59 * e, 69 * e, 62 * e, 72 * e),
                I.bezierCurveTo(80 * e, 48 * e, 102 * e, 50 * e, 120 * e, 62 * e),
                I.bezierCurveTo(127 * e, 58 * e, 127 * e, 58 * e, 134 * e, 54 * e),
                I.bezierCurveTo(129 * e, 60 * e, 129 * e, 60 * e, 124 * e, 66 * e),
                I.bezierCurveTo(129 * e, 73 * e, 129 * e, 73 * e, 134 * e, 80 * e),
                I.bezierCurveTo(140 * e, 74 * e, 140 * e, 74 * e, 146 * e, 68 * e),
                I.bezierCurveTo(142 * e, 76 * e, 142 * e, 76 * e, 138 * e, 84 * e),
                I.bezierCurveTo(144 * e, 90 * e, 142 * e, 90 * e, 144 * e, 90 * e),
                I.bezierCurveTo(136 * e, 97 * e, 136 * e, 97 * e, 128 * e, 104 * e),
                I.bezierCurveTo(154 * e, 110 * e, 164 * e, 90 * e, 160 * e, 80 * e),
                I.bezierCurveTo(138 * e, 22 * e, 148 * e, 51 * e, 136 * e, 22 * e),
                I.bezierCurveTo(97 * e, 24 * e, 97 * e, 24 * e, 58 * e, 26 * e),
                I.bezierCurveTo(47 * e, 54 * e, 36 * e, 80 * e, 36 * e, 82 * e),
                I.bezierCurveTo(40 * e, 108 * e, 54 * e, 104 * e, 62 * e, 104 * e),
                I.bezierCurveTo(46 * e, 92 * e, 54 * e, 97 * e, 46 * e, 90 * e),
                I.closePath(),
                he(I, i[0]),
                I.beginPath(),
                I.lineCap = "round",
                I.lineJoin = "round",
                I.moveTo(36 * e, 80 * e),
                I.bezierCurveTo(30 * e, 84 * e, 28 * e, 92 * e, 34 * e, 100 * e),
                I.bezierCurveTo(41.5 * e, 102 * e, 41.5 * e, 102 * e, 49 * e, 104 * e),
                I.bezierCurveTo(43 * e, 105.5 * e, 43 * e, 105.5 * e, 37 * e, 107 * e),
                I.bezierCurveTo(46 * e, 111 * e, 60 * e, 114 * e, 76 * e, 114 * e),
                I.bezierCurveTo(78 * e, 110.5 * e, 78 * e, 110.5 * e, 80 * e, 107 * e),
                I.bezierCurveTo(81 * e, 110.5 * e, 81 * e, 110.5 * e, 82 * e, 114 * e),
                I.bezierCurveTo(94.5 * e, 113.5 * e, 94.5 * e, 113.5 * e, 107 * e, 113 * e),
                I.bezierCurveTo(108.5 * e, 110 * e, 108.5 * e, 110 * e, 110 * e, 107 * e),
                I.bezierCurveTo(111.5 * e, 110.5 * e, 111.5 * e, 110.5 * e, 113 * e, 114 * e),
                I.bezierCurveTo(131 * e, 112.5 * e, 131 * e, 112.5 * e, 149 * e, 111 * e),
                I.bezierCurveTo(148.5 * e, 107.5 * e, 148.5 * e, 107.5 * e, 148 * e, 104 * e),
                I.bezierCurveTo(150.5 * e, 107 * e, 150.5 * e, 107 * e, 153 * e, 110 * e),
                I.bezierCurveTo(155.5 * e, 108.5 * e, 155.5 * e, 108.5 * e, 158 * e, 107 * e),
                I.bezierCurveTo(156.5 * e, 104 * e, 156.5 * e, 104 * e, 155 * e, 101 * e),
                I.bezierCurveTo(158.5 * e, 102.5 * e, 158.5 * e, 102.5 * e, 162 * e, 104 * e),
                I.bezierCurveTo(168 * e, 100 * e, 170 * e, 92 * e, 169 * e, 85 * e),
                I.bezierCurveTo(166 * e, 86 * e, 166 * e, 86 * e, 163 * e, 87 * e),
                I.bezierCurveTo(165.5 * e, 83 * e, 165.5 * e, 83 * e, 168 * e, 79 * e),
                I.bezierCurveTo(165.5 * e, 76.5 * e, 165.5 * e, 76.5 * e, 163 * e, 74 * e),
                I.bezierCurveTo(155 * e, 82.5 * e, 155 * e, 82.5 * e, 147 * e, 91 * e),
                I.bezierCurveTo(139 * e, 95.5 * e, 139 * e, 95.5 * e, 131 * e, 100 * e),
                I.bezierCurveTo(97.5 * e, 100.5 * e, 97.5 * e, 100.5 * e, 64 * e, 101 * e),
                I.bezierCurveTo(49 * e, 102 * e, 43 * e, 90 * e, 36 * e, 80 * e),
                I.closePath(),
                he(I, i[0]),
                I.globalAlpha = 1,
                I.translate(0, -6 * e),
                I.beginPath(),
                I.lineCap = "round",
                I.lineJoin = "round",
                I.moveTo(36 * e, 80 * e),
                I.bezierCurveTo(30 * e, 84 * e, 28 * e, 92 * e, 34 * e, 100 * e),
                I.bezierCurveTo(41.5 * e, 102 * e, 41.5 * e, 102 * e, 49 * e, 104 * e),
                I.bezierCurveTo(43 * e, 105.5 * e, 43 * e, 105.5 * e, 37 * e, 107 * e),
                I.bezierCurveTo(46 * e, 111 * e, 60 * e, 114 * e, 76 * e, 114 * e),
                I.bezierCurveTo(78 * e, 110.5 * e, 78 * e, 110.5 * e, 80 * e, 107 * e),
                I.bezierCurveTo(81 * e, 110.5 * e, 81 * e, 110.5 * e, 82 * e, 114 * e),
                I.bezierCurveTo(94.5 * e, 113.5 * e, 94.5 * e, 113.5 * e, 107 * e, 113 * e),
                I.bezierCurveTo(108.5 * e, 110 * e, 108.5 * e, 110 * e, 110 * e, 107 * e),
                I.bezierCurveTo(111.5 * e, 110.5 * e, 111.5 * e, 110.5 * e, 113 * e, 114 * e),
                I.bezierCurveTo(131 * e, 112.5 * e, 131 * e, 112.5 * e, 149 * e, 111 * e),
                I.bezierCurveTo(148.5 * e, 107.5 * e, 148.5 * e, 107.5 * e, 148 * e, 104 * e),
                I.bezierCurveTo(150.5 * e, 107 * e, 150.5 * e, 107 * e, 153 * e, 110 * e),
                I.bezierCurveTo(155.5 * e, 108.5 * e, 155.5 * e, 108.5 * e, 158 * e, 107 * e),
                I.bezierCurveTo(156.5 * e, 104 * e, 156.5 * e, 104 * e, 155 * e, 101 * e),
                I.bezierCurveTo(158.5 * e, 102.5 * e, 158.5 * e, 102.5 * e, 162 * e, 104 * e),
                I.bezierCurveTo(168 * e, 100 * e, 170 * e, 92 * e, 169 * e, 85 * e),
                I.bezierCurveTo(166 * e, 86 * e, 166 * e, 86 * e, 163 * e, 87 * e),
                I.bezierCurveTo(165.5 * e, 83 * e, 165.5 * e, 83 * e, 168 * e, 79 * e),
                I.bezierCurveTo(165.5 * e, 76.5 * e, 165.5 * e, 76.5 * e, 163 * e, 74 * e),
                I.bezierCurveTo(155 * e, 82.5 * e, 155 * e, 82.5 * e, 147 * e, 91 * e),
                I.bezierCurveTo(139 * e, 95.5 * e, 139 * e, 95.5 * e, 131 * e, 100 * e),
                I.bezierCurveTo(97.5 * e, 100.5 * e, 97.5 * e, 100.5 * e, 64 * e, 101 * e),
                I.bezierCurveTo(49 * e, 102 * e, 43 * e, 90 * e, 36 * e, 80 * e),
                I.closePath(),
                he(I, i[1], i[2], 4 * e),
                I.beginPath(),
                I.lineCap = "round",
                I.lineJoin = "round",
                I.moveTo(49 * e, 98 * e),
                I.bezierCurveTo(96.5 * e, 98 * e, 96.5 * e, 98 * e, 144 * e, 98 * e),
                I.bezierCurveTo(136.5 * e, 102 * e, 136.5 * e, 102 * e, 129 * e, 106 * e),
                I.bezierCurveTo(103 * e, 105.5 * e, 103 * e, 105.5 * e, 77 * e, 105 * e),
                I.bezierCurveTo(65 * e, 105 * e, 65 * e, 105 * e, 53 * e, 105 * e),
                I.closePath(),
                he(I, i[1]),
                I.globalAlpha = .5,
                I.beginPath(),
                I.lineCap = "round",
                I.lineJoin = "round",
                I.moveTo(54 * e, 98 * e),
                I.bezierCurveTo(97 * e, 98 * e, 97 * e, 98 * e, 140 * e, 98 * e),
                I.bezierCurveTo(134 * e, 101 * e, 134 * e, 101 * e, 128 * e, 104 * e),
                I.bezierCurveTo(92 * e, 104 * e, 92 * e, 104 * e, 56 * e, 104 * e),
                I.closePath(),
                he(I, i[0]),
                I.globalAlpha = 1,
                I.beginPath(),
                I.lineCap = "round",
                I.lineJoin = "round",
                I.moveTo(118 * e, 47 * e),
                I.bezierCurveTo(124.5 * e, 43.5 * e, 124.5 * e, 43.5 * e, 131 * e, 40 * e),
                I.bezierCurveTo(128 * e, 46 * e, 128 * e, 46 * e, 125 * e, 52 * e),
                I.bezierCurveTo(131 * e, 57 * e, 135 * e, 64 * e, 139 * e, 73 * e),
                I.bezierCurveTo(142.5 * e, 69.5 * e, 142.5 * e, 69.5 * e, 146 * e, 66 * e),
                I.bezierCurveTo(143.5 * e, 72.5 * e, 143.5 * e, 72.5 * e, 141 * e, 79 * e),
                I.bezierCurveTo(142 * e, 91 * e, 141 * e, 94 * e, 132 * e, 98 * e),
                I.bezierCurveTo(117 * e, 102 * e, 126 * e, 108 * e, 142 * e, 102 * e),
                I.bezierCurveTo(159 * e, 98 * e, 164 * e, 80 * e, 162 * e, 47 * e),
                I.bezierCurveTo(160 * e, 19 * e, 150 * e, 6 * e, 117 * e, 4 * e),
                I.bezierCurveTo(44 * e, 0 * e, 35 * e, 20 * e, 33 * e, 37 * e),
                I.bezierCurveTo(29 * e, 69 * e, 33 * e, 88 * e, 44 * e, 96 * e),
                I.bezierCurveTo(64 * e, 107 * e, 70 * e, 102 * e, 54 * e, 93 * e),
                I.bezierCurveTo(49 * e, 88 * e, 50 * e, 82 * e, 53 * e, 77 * e),
                I.bezierCurveTo(51.5 * e, 71 * e, 51.5 * e, 71 * e, 50 * e, 65 * e),
                I.bezierCurveTo(53 * e, 68.5 * e, 53 * e, 68.5 * e, 56 * e, 72 * e),
                I.bezierCurveTo(59 * e, 67.5 * e, 59 * e, 67.5 * e, 62 * e, 63 * e),
                I.bezierCurveTo(60.5 * e, 59.5 * e, 60.5 * e, 59.5 * e, 59 * e, 56 * e),
                I.bezierCurveTo(62 * e, 57 * e, 62 * e, 57 * e, 65 * e, 58 * e),
                I.bezierCurveTo(78 * e, 35 * e, 103 * e, 36 * e, 117 * e, 47 * e),
                I.closePath(),
                he(I, i[1], i[2], 6 * e),
                I.beginPath(),
                I.lineCap = "round",
                I.lineJoin = "round",
                I.moveTo(62 * e, 21 * e),
                I.bezierCurveTo(63 * e, 34 * e, 64 * e, 37 * e, 66 * e, 40 * e),
                I.bezierCurveTo(54 * e, 49 * e, 53 * e, 51 * e, 48 * e, 58 * e),
                I.bezierCurveTo(44 * e, 51 * e, 42 * e, 43 * e, 40 * e, 36 * e),
                I.bezierCurveTo(47 * e, 28 * e, 52 * e, 25 * e, 61 * e, 21 * e),
                I.closePath(),
                he(I, i[4]),
                I.beginPath(),
                I.lineCap = "round",
                I.lineJoin = "round",
                I.moveTo(60 * e, 29 * e),
                I.bezierCurveTo(62 * e, 25 * e, 65 * e, 24 * e, 70 * e, 23 * e),
                he(I, void 0, i[3], 4 * e),
                I.beginPath(),
                I.lineCap = "round",
                I.lineJoin = "round",
                I.moveTo(61 * e, 37 * e),
                I.bezierCurveTo(63 * e, 32 * e, 66 * e, 32 * e, 71 * e, 32 * e),
                he(I, void 0, i[3], 4 * e),
                I.beginPath(),
                I.lineCap = "round",
                I.lineJoin = "round",
                I.moveTo(52 * e, 31 * e),
                I.bezierCurveTo(50 * e, 26 * e, 50 * e, 25 * e, 51 * e, 23 * e),
                he(I, void 0, i[3], 4 * e),
                I.beginPath(),
                I.lineCap = "round",
                I.lineJoin = "round",
                I.moveTo(46 * e, 35 * e),
                I.bezierCurveTo(44 * e, 31 * e, 43 * e, 29 * e, 45 * e, 26 * e),
                he(I, void 0, i[3], 4 * e),
                I.beginPath(),
                I.lineCap = "round",
                I.lineJoin = "round",
                I.moveTo(58 * e, 44 * e),
                I.bezierCurveTo(57 * e, 48 * e, 57 * e, 50 * e, 60 * e, 52 * e),
                he(I, void 0, i[3], 4 * e),
                I.beginPath(),
                I.lineCap = "round",
                I.lineJoin = "round",
                I.moveTo(53 * e, 48 * e),
                I.bezierCurveTo(52 * e, 52 * e, 52 * e, 54 * e, 55 * e, 57 * e),
                he(I, void 0, i[3], 4 * e),
                I.beginPath(),
                I.lineCap = "round",
                I.lineJoin = "round",
                I.moveTo(46 * e, 41 * e),
                I.bezierCurveTo(41 * e, 42 * e, 39 * e, 45 * e, 38 * e, 48 * e),
                he(I, void 0, i[3], 4 * e),
                I.beginPath(),
                I.lineCap = "round",
                I.lineJoin = "round",
                I.moveTo(48 * e, 48 * e),
                I.bezierCurveTo(42 * e, 51 * e, 42 * e, 53 * e, 40 * e, 55 * e),
                he(I, void 0, i[3], 4 * e),
                0 == n ? (I.beginPath(),
                I.lineCap = "round",
                I.lineJoin = "round",
                I.moveTo(99 * e, 101 * e),
                I.bezierCurveTo(118.6666259765625 * e, 104.33331298828125 * e, 124.6666259765625 * e, 116.33331298828125 * e, 112.6666259765625 * e, 114.33331298828125 * e),
                I.bezierCurveTo(104.6666259765625 * e, 112.33331298828125 * e, 100.6666259765625 * e, 105.33331298828125 * e, 99.6666259765625 * e, 101.33331298828125 * e),
                he(I, void 0, i[5], 6 * e),
                I.beginPath(),
                I.lineCap = "round",
                I.lineJoin = "round",
                I.moveTo(97.6666259765625 * e, 101.33331298828125 * e),
                I.bezierCurveTo(81.6666259765625 * e, 106.33331298828125 * e, 79.6666259765625 * e, 114.33331298828125 * e, 89.6666259765625 * e, 114.33331298828125 * e),
                I.bezierCurveTo(95.6666259765625 * e, 111.33331298828125 * e, 95.6666259765625 * e, 109.33331298828125 * e, 98.6666259765625 * e, 102.33331298828125 * e),
                he(I, void 0, i[5], 6 * e)) : (I.beginPath(),
                I.lineCap = "round",
                I.lineJoin = "round",
                I.moveTo(103 * e, 100.39999389648438 * e),
                I.bezierCurveTo(120 * e, 106.39999389648438 * e, 118 * e, 107.39999389648438 * e, 120 * e, 111.39999389648438 * e),
                he(I, void 0, i[5], 6 * e),
                I.beginPath(),
                I.lineCap = "round",
                I.lineJoin = "round",
                I.moveTo(103 * e, 100.39999389648438 * e),
                I.bezierCurveTo(90 * e, 103.39999389648438 * e, 89 * e, 106.39999389648438 * e, 87 * e, 112.39999389648438 * e),
                he(I, void 0, i[5], 6 * e),
                Re(I, 86 * e, 114.39999389648438 * e, 4.5 * e),
                he(I, i[1], i[5], 6 * e),
                Re(I, 121 * e, 114.39999389648438 * e, 4.5 * e),
                he(I, i[1], i[5], 6 * e)),
                a
            }
            function Dn(e, t) {
                var i = window.document.createElement("canvas")
                  , n = i.getContext("2d");
                return i.width = 253 * e,
                i.height = 192 * e,
                n.globalAlpha = .5,
                n.save(),
                n.translate(42 * e, 99 * e),
                n.globalAlpha = .5,
                ye(n, -7 * e, -20 * e, 14 * e, 39 * e, 20 * e),
                n.restore(),
                he(n, t[0]),
                n.globalAlpha = 1,
                n.save(),
                n.translate(37 * e, 94 * e),
                ye(n, -7 * e, -20 * e, 14 * e, 37 * e, 20 * e),
                n.restore(),
                he(n, t[2]),
                n.globalAlpha = .5,
                n.save(),
                n.translate(136 * e, 99 * e),
                n.globalAlpha = .5,
                ye(n, -84 * e, -67 * e, 168 * e, 134 * e, 20 * e),
                n.restore(),
                he(n, t[0], t[0], 13 * e),
                n.globalAlpha = 1,
                n.save(),
                n.translate(131 * e, 94 * e),
                ye(n, -84 * e, -67 * e, 168 * e, 134 * e, 20 * e),
                n.restore(),
                he(n, t[2], t[2], 13 * e),
                n.save(),
                n.translate(131 * e, 94 * e),
                ye(n, -76 * e, -61 * e, 152 * e, 122 * e, 20 * e),
                n.restore(),
                he(n, t[3], t[1], 8 * e),
                n.save(),
                n.translate(168.5 * e, 93.5 * e),
                ye(n, -30.5 * e, -58.5 * e, 61 * e, 117 * e, 20 * e),
                n.restore(),
                he(n, t[3], t[4], 6 * e),
                n.save(),
                n.translate(93.5 * e, 95.5 * e),
                ye(n, -32 * e, -59.5 * e, 59 * e, 119 * e, 20 * e),
                n.restore(),
                he(n, t[3], t[4], 6 * e),
                n.save(),
                n.translate(130.5 * e, 94 * e),
                ye(n, -36 * e, -67 * e, 73 * e, 134 * e, 20 * e),
                n.restore(),
                he(n, t[3], t[2], 8 * e),
                n.globalAlpha = .5,
                n.save(),
                n.translate(133 * e, 97 * e),
                ye(n, -83 * e, -12 * e, 160 * e, 24 * e, 0 * e),
                n.restore(),
                he(n, t[0]),
                n.globalAlpha = 1,
                n.save(),
                n.translate(133 * e, 92 * e),
                ye(n, -83 * e, -12 * e, 160 * e, 24 * e, 0 * e),
                n.restore(),
                he(n, t[2]),
                n.globalAlpha = .5,
                n.save(),
                n.translate(228 * e, 99.5 * e),
                n.globalAlpha = .5,
                ye(n, -5 * e, -18.5 * e, 10 * e, 37 * e, 20 * e),
                n.restore(),
                he(n, t[0]),
                n.globalAlpha = 1,
                n.save(),
                n.translate(223 * e, 94.5 * e),
                ye(n, -5 * e, -18.5 * e, 10 * e, 37 * e, 20 * e),
                n.restore(),
                he(n, t[2]),
                n.save(),
                n.translate(133.5 * e, 175.5 * e),
                n.globalAlpha = .5,
                ye(n, -22.5 * e, -6.5 * e, 45 * e, 13 * e, 20 * e),
                n.restore(),
                he(n, t[0]),
                n.globalAlpha = 1,
                n.save(),
                n.translate(128.5 * e, 170.5 * e),
                ye(n, -22.5 * e, -6.5 * e, 45 * e, 13 * e, 20 * e),
                n.restore(),
                he(n, t[2]),
                i
            }
            function On(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                return n.width = 316 * e,
                n.height = 365 * e,
                a.save(),
                a.translate(156.07142639160156 * e, 51.81248474121094 * e),
                a.rotate(0),
                ye(a, -21.5 * e, -34 * e, 43 * e, 68 * e, 8 * e),
                a.restore(),
                he(a, i[1], i[2], 15 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(110.57142639160156 * e, 197.09820556640625 * e),
                a.bezierCurveTo(158.07142639160156 * e, 179.09820556640625 * e, 158.07142639160156 * e, 179.09820556640625 * e, 205.57142639160156 * e, 161.09820556640625 * e),
                a.bezierCurveTo(205.57142639160156 * e, 235.45535278320312 * e, 205.57142639160156 * e, 235.45535278320312 * e, 205.57142639160156 * e, 309.8125 * e),
                a.bezierCurveTo(205.57142639160156 * e, 323.8125 * e, 200.57142639160156 * e, 325.8125 * e, 187.57142639160156 * e, 326.8125 * e),
                a.bezierCurveTo(155.57142639160156 * e, 326.3125 * e, 155.57142639160156 * e, 326.3125 * e, 123.57142639160156 * e, 325.8125 * e),
                a.bezierCurveTo(111.57142639160156 * e, 326.8125 * e, 109.57142639160156 * e, 321.8125 * e, 110.57142639160156 * e, 312.8125 * e),
                a.closePath(),
                he(a, i[3], i[4], 15 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(126.57142639160156 * e, 67.38392639160156 * e),
                a.bezierCurveTo(126.57142639160156 * e, 57.38392639160156 * e, 132.57142639160156 * e, 54.38392639160156 * e, 140.57142639160156 * e, 54.38392639160156 * e),
                a.bezierCurveTo(177.57142639160156 * e, 55.38392639160156 * e, 158.07142639160156 * e, 54.38392639160156 * e, 175.57142639160156 * e, 54.38392639160156 * e),
                a.bezierCurveTo(185.57142639160156 * e, 56.38392639160156 * e, 185.57142639160156 * e, 57.38392639160156 * e, 184.57142639160156 * e, 66.38392639160156 * e),
                a.bezierCurveTo(184.57142639160156 * e, 78.38392639160156 * e, 184.57142639160156 * e, 89.38392639160156 * e, 184.57142639160156 * e, 90.38392639160156 * e),
                a.bezierCurveTo(177.57142639160156 * e, 107.38392639160156 * e, 180.57142639160156 * e, 112.38392639160156 * e, 189.57142639160156 * e, 116.38392639160156 * e),
                a.bezierCurveTo(212.57142639160156 * e, 127.38392639160156 * e, 212.57142639160156 * e, 132.38392639160156 * e, 211.57142639160156 * e, 150.38392639160156 * e),
                a.bezierCurveTo(211.57142639160156 * e, 227.59821128845215 * e, 211.57142639160156 * e, 227.59821128845215 * e, 211.57142639160156 * e, 304.81249618530273 * e),
                a.bezierCurveTo(212.57142639160156 * e, 328.81249618530273 * e, 209.57142639160156 * e, 330.81249618530273 * e, 188.57142639160156 * e, 333.81249618530273 * e),
                a.bezierCurveTo(155.07142639160156 * e, 333.31249618530273 * e, 155.07142639160156 * e, 333.31249618530273 * e, 121.57142639160156 * e, 332.81249618530273 * e),
                a.bezierCurveTo(104.57142639160156 * e, 327.81249618530273 * e, 105.57142639160156 * e, 328.81249618530273 * e, 104.57142639160156 * e, 312.81249618530273 * e),
                a.bezierCurveTo(104.57142639160156 * e, 228.16963958740234 * e, 104.57142639160156 * e, 228.16963958740234 * e, 104.57142639160156 * e, 143.52678298950195 * e),
                a.bezierCurveTo(106.57142639160156 * e, 124.52678298950195 * e, 110.57142639160156 * e, 123.52678298950195 * e, 123.57142639160156 * e, 116.52678298950195 * e),
                a.bezierCurveTo(136.57142639160156 * e, 110.52678298950195 * e, 130.57142639160156 * e, 106.52678298950195 * e, 126.57142639160156 * e, 98.52678298950195 * e),
                a.closePath(),
                he(a, void 0, i[5], 15 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(125.57142639160156 * e, 156.66963958740234 * e),
                a.bezierCurveTo(125.57142639160156 * e, 182.66963958740234 * e, 125.57142639160156 * e, 182.66963958740234 * e, 125.57142639160156 * e, 208.66963958740234 * e),
                a.closePath(),
                he(a, void 0, i[6], 15 * e),
                n
            }
            function kn(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                return n.width = 316 * e,
                n.height = 365 * e,
                a.save(),
                a.translate(156.07142639160156 * e, 51.81248474121094 * e),
                a.rotate(0),
                ye(a, -21.5 * e, -34 * e, 43 * e, 68 * e, 8 * e),
                a.restore(),
                he(a, i[1], i[2], 15 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(126.57142639160156 * e, 67.38392639160156 * e),
                a.bezierCurveTo(126.57142639160156 * e, 57.38392639160156 * e, 132.57142639160156 * e, 54.38392639160156 * e, 140.57142639160156 * e, 54.38392639160156 * e),
                a.bezierCurveTo(177.57142639160156 * e, 55.38392639160156 * e, 158.07142639160156 * e, 54.38392639160156 * e, 175.57142639160156 * e, 54.38392639160156 * e),
                a.bezierCurveTo(185.57142639160156 * e, 56.38392639160156 * e, 185.57142639160156 * e, 57.38392639160156 * e, 184.57142639160156 * e, 66.38392639160156 * e),
                a.bezierCurveTo(184.57142639160156 * e, 78.38392639160156 * e, 184.57142639160156 * e, 89.38392639160156 * e, 184.57142639160156 * e, 90.38392639160156 * e),
                a.bezierCurveTo(177.57142639160156 * e, 107.38392639160156 * e, 180.57142639160156 * e, 112.38392639160156 * e, 189.57142639160156 * e, 116.38392639160156 * e),
                a.bezierCurveTo(212.57142639160156 * e, 127.38392639160156 * e, 212.57142639160156 * e, 132.38392639160156 * e, 211.57142639160156 * e, 150.38392639160156 * e),
                a.bezierCurveTo(211.57142639160156 * e, 227.59821128845215 * e, 211.57142639160156 * e, 227.59821128845215 * e, 211.57142639160156 * e, 304.81249618530273 * e),
                a.bezierCurveTo(212.57142639160156 * e, 328.81249618530273 * e, 209.57142639160156 * e, 330.81249618530273 * e, 188.57142639160156 * e, 333.81249618530273 * e),
                a.bezierCurveTo(155.07142639160156 * e, 333.31249618530273 * e, 155.07142639160156 * e, 333.31249618530273 * e, 121.57142639160156 * e, 332.81249618530273 * e),
                a.bezierCurveTo(104.57142639160156 * e, 327.81249618530273 * e, 105.57142639160156 * e, 328.81249618530273 * e, 104.57142639160156 * e, 312.81249618530273 * e),
                a.bezierCurveTo(104.57142639160156 * e, 228.16963958740234 * e, 104.57142639160156 * e, 228.16963958740234 * e, 104.57142639160156 * e, 143.52678298950195 * e),
                a.bezierCurveTo(106.57142639160156 * e, 124.52678298950195 * e, 110.57142639160156 * e, 123.52678298950195 * e, 123.57142639160156 * e, 116.52678298950195 * e),
                a.bezierCurveTo(136.57142639160156 * e, 110.52678298950195 * e, 130.57142639160156 * e, 106.52678298950195 * e, 126.57142639160156 * e, 98.52678298950195 * e),
                a.closePath(),
                he(a, void 0, i[5], 15 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(125.57142639160156 * e, 156.66963958740234 * e),
                a.bezierCurveTo(125.57142639160156 * e, 182.66963958740234 * e, 125.57142639160156 * e, 182.66963958740234 * e, 125.57142639160156 * e, 208.66963958740234 * e),
                a.closePath(),
                he(a, void 0, i[6], 15 * e),
                n
            }
            function Cn(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                return n.width = 400 * e,
                n.height = 400 * e,
                a.translate(0, 15 * e),
                a.globalAlpha = t ? .5 : 1,
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(102 * e, 154 * e),
                a.bezierCurveTo(108 * e, 216.5 * e, 108 * e, 216.5 * e, 114 * e, 279 * e),
                a.bezierCurveTo(124 * e, 300 * e, 237 * e, 299 * e, 251 * e, 279 * e),
                a.bezierCurveTo(257 * e, 217 * e, 257 * e, 217 * e, 263 * e, 155 * e),
                a.bezierCurveTo(248 * e, 194 * e, 91 * e, 180 * e, 103 * e, 156 * e),
                a.closePath(),
                he(a, i[0]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(102 * e, 154 * e),
                a.bezierCurveTo(106 * e, 53 * e, 255 * e, 53 * e, 263 * e, 154 * e),
                a.bezierCurveTo(248 * e, 38 * e, 99 * e, 69 * e, 103 * e, 154 * e),
                a.closePath(),
                he(a, void 0, i[0], 11 * e),
                a.translate(0, -5 * e),
                a.globalAlpha = 1,
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(103 * e, 154 * e),
                a.bezierCurveTo(98 * e, 119 * e, 264 * e, 119 * e, 264 * e, 154 * e),
                a.bezierCurveTo(271 * e, 189 * e, 94 * e, 188 * e, 103 * e, 154 * e),
                a.closePath(),
                he(a, i[3], i[2], 12 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(102 * e, 154 * e),
                a.bezierCurveTo(108 * e, 216.5 * e, 108 * e, 216.5 * e, 114 * e, 279 * e),
                a.bezierCurveTo(124 * e, 300 * e, 237 * e, 299 * e, 251 * e, 279 * e),
                a.bezierCurveTo(257 * e, 217 * e, 257 * e, 217 * e, 263 * e, 155 * e),
                a.bezierCurveTo(248 * e, 194 * e, 91 * e, 180 * e, 103 * e, 156 * e),
                a.closePath(),
                he(a, i[1], i[2], 12 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(182 * e, 185 * e),
                a.bezierCurveTo(182.5 * e, 237.5 * e, 182.5 * e, 237.5 * e, 183 * e, 290 * e),
                a.closePath(),
                he(a, void 0, i[2], 12 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(222 * e, 287 * e),
                a.bezierCurveTo(226 * e, 233.5 * e, 226 * e, 233.5 * e, 230 * e, 180 * e),
                a.closePath(),
                he(a, void 0, i[2], 12 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(145 * e, 290 * e),
                a.bezierCurveTo(140.5 * e, 237 * e, 140.5 * e, 237 * e, 136 * e, 184 * e),
                a.closePath(),
                he(a, i[1], i[2], 11 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(105 * e, 184 * e),
                a.bezierCurveTo(148 * e, 205 * e, 231 * e, 202 * e, 260 * e, 182 * e),
                a.bezierCurveTo(259 * e, 195.5 * e, 259 * e, 195.5 * e, 258 * e, 209 * e),
                a.bezierCurveTo(217 * e, 218 * e, 163 * e, 225 * e, 108 * e, 207 * e),
                a.closePath(),
                he(a, i[4], i[2], 11 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(251 * e, 276 * e),
                a.bezierCurveTo(251.5 * e, 267.5 * e, 251.5 * e, 267.5 * e, 252 * e, 259 * e),
                a.bezierCurveTo(212 * e, 272 * e, 156 * e, 275 * e, 112 * e, 260 * e),
                a.bezierCurveTo(112.5 * e, 269 * e, 112.5 * e, 269 * e, 113 * e, 278 * e),
                a.bezierCurveTo(155 * e, 306 * e, 253 * e, 286 * e, 250 * e, 276 * e),
                a.closePath(),
                he(a, i[4], i[2], 11 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(102 * e, 154 * e),
                a.bezierCurveTo(106 * e, 53 * e, 255 * e, 53 * e, 263 * e, 154 * e),
                a.bezierCurveTo(248 * e, 38 * e, 99 * e, 69 * e, 103 * e, 154 * e),
                a.closePath(),
                he(a, void 0, i[2], 11 * e),
                n
            }
            function Ln(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                return n.width = 400 * e,
                n.height = 400 * e,
                a.translate(0, 15 * e),
                a.globalAlpha = t ? .5 : 1,
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(102 * e, 154 * e),
                a.bezierCurveTo(108 * e, 216.5 * e, 108 * e, 216.5 * e, 114 * e, 279 * e),
                a.bezierCurveTo(124 * e, 300 * e, 237 * e, 299 * e, 251 * e, 279 * e),
                a.bezierCurveTo(257 * e, 217 * e, 257 * e, 217 * e, 263 * e, 155 * e),
                a.bezierCurveTo(248 * e, 194 * e, 91 * e, 180 * e, 103 * e, 156 * e),
                a.closePath(),
                he(a, i[0]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(102 * e, 154 * e),
                a.bezierCurveTo(106 * e, 53 * e, 255 * e, 53 * e, 263 * e, 154 * e),
                a.bezierCurveTo(248 * e, 38 * e, 99 * e, 69 * e, 103 * e, 154 * e),
                a.closePath(),
                he(a, void 0, i[0], 11 * e),
                a.translate(0, -5 * e),
                a.globalAlpha = 1,
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(103 * e, 154 * e),
                a.bezierCurveTo(98 * e, 119 * e, 264 * e, 119 * e, 264 * e, 154 * e),
                a.bezierCurveTo(271 * e, 189 * e, 94 * e, 188 * e, 103 * e, 154 * e),
                a.closePath(),
                he(a, i[3], i[2], 12 * e),
                a.translate(0, 25 * e),
                a.globalAlpha = 1,
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(103 * e, 154 * e),
                a.bezierCurveTo(98 * e, 119 * e, 264 * e, 119 * e, 264 * e, 154 * e),
                a.bezierCurveTo(271 * e, 189 * e, 94 * e, 188 * e, 103 * e, 154 * e),
                a.closePath(),
                he(a, i[5]),
                a.translate(0, -25 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(102 * e, 154 * e),
                a.bezierCurveTo(108 * e, 216.5 * e, 108 * e, 216.5 * e, 114 * e, 279 * e),
                a.bezierCurveTo(124 * e, 300 * e, 237 * e, 299 * e, 251 * e, 279 * e),
                a.bezierCurveTo(257 * e, 217 * e, 257 * e, 217 * e, 263 * e, 155 * e),
                a.bezierCurveTo(248 * e, 194 * e, 91 * e, 180 * e, 103 * e, 156 * e),
                a.closePath(),
                he(a, i[1], i[2], 12 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(182 * e, 185 * e),
                a.bezierCurveTo(182.5 * e, 237.5 * e, 182.5 * e, 237.5 * e, 183 * e, 290 * e),
                a.closePath(),
                he(a, void 0, i[2], 12 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(222 * e, 287 * e),
                a.bezierCurveTo(226 * e, 233.5 * e, 226 * e, 233.5 * e, 230 * e, 180 * e),
                a.closePath(),
                he(a, void 0, i[2], 12 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(145 * e, 290 * e),
                a.bezierCurveTo(140.5 * e, 237 * e, 140.5 * e, 237 * e, 136 * e, 184 * e),
                a.closePath(),
                he(a, i[1], i[2], 11 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(105 * e, 184 * e),
                a.bezierCurveTo(148 * e, 205 * e, 231 * e, 202 * e, 260 * e, 182 * e),
                a.bezierCurveTo(259 * e, 195.5 * e, 259 * e, 195.5 * e, 258 * e, 209 * e),
                a.bezierCurveTo(217 * e, 218 * e, 163 * e, 225 * e, 108 * e, 207 * e),
                a.closePath(),
                he(a, i[4], i[2], 11 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(251 * e, 276 * e),
                a.bezierCurveTo(251.5 * e, 267.5 * e, 251.5 * e, 267.5 * e, 252 * e, 259 * e),
                a.bezierCurveTo(212 * e, 272 * e, 156 * e, 275 * e, 112 * e, 260 * e),
                a.bezierCurveTo(112.5 * e, 269 * e, 112.5 * e, 269 * e, 113 * e, 278 * e),
                a.bezierCurveTo(155 * e, 306 * e, 253 * e, 286 * e, 250 * e, 276 * e),
                a.closePath(),
                he(a, i[4], i[2], 11 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(102 * e, 154 * e),
                a.bezierCurveTo(106 * e, 53 * e, 255 * e, 53 * e, 263 * e, 154 * e),
                a.bezierCurveTo(248 * e, 38 * e, 99 * e, 69 * e, 103 * e, 154 * e),
                a.closePath(),
                he(a, void 0, i[2], 11 * e),
                n
            }
            function Bn(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                return n.width = 80 * e,
                n.height = 160 * e,
                a.globalAlpha = t ? .5 : 1,
                a.translate(5 * e, 5 * e),
                a.save(),
                ye(a, 33 * e, 53 * e, 10 * e, 98 * e, 10 * e),
                he(a, i[0]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.translate(-150 * e, -100 * e),
                a.moveTo(167.5 * e, 171.0625 * e),
                a.bezierCurveTo(188 * e, 171.0625 * e, 188 * e, 171.0625 * e, 208.5 * e, 171.0625 * e),
                a.bezierCurveTo(208.5 * e, 156.0625 * e, 208.5 * e, 156.0625 * e, 208.5 * e, 141.0625 * e),
                a.bezierCurveTo(203.5 * e, 113.0625 * e, 179.5 * e, 96.0625 * e, 167.5 * e, 141.0625 * e),
                a.closePath(),
                he(a, i[0]),
                a.restore(),
                a.globalAlpha = 1,
                a.translate(-5 * e, -5 * e),
                a.save(),
                ye(a, 33 * e, 53 * e, 10 * e, 98 * e, 10 * e),
                he(a, i[1], i[2], 4 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.translate(-150 * e, -100 * e),
                a.moveTo(167.5 * e, 171.0625 * e),
                a.bezierCurveTo(188 * e, 171.0625 * e, 188 * e, 171.0625 * e, 208.5 * e, 171.0625 * e),
                a.bezierCurveTo(208.5 * e, 156.0625 * e, 208.5 * e, 156.0625 * e, 208.5 * e, 141.0625 * e),
                a.bezierCurveTo(203.5 * e, 113.0625 * e, 179.5 * e, 96.0625 * e, 167.5 * e, 141.0625 * e),
                a.closePath(),
                he(a, i[3], i[4], 4 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.translate(0 * e, 1 * e),
                a.moveTo(180.5 * e, 169.0625 * e),
                a.bezierCurveTo(180.5 * e, 157.5625 * e, 180.5 * e, 157.5625 * e, 180.5 * e, 146.0625 * e),
                a.bezierCurveTo(181.5 * e, 134.0625 * e, 193.5 * e, 129.0625 * e, 196.5 * e, 146.0625 * e),
                a.bezierCurveTo(196.5 * e, 157.5625 * e, 196.5 * e, 157.5625 * e, 196.5 * e, 169.0625 * e),
                a.closePath(),
                he(a, i[5]),
                a.restore(),
                n
            }
            function Mn(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                return n.width = 109 * e,
                n.height = 110 * e,
                Re(a, 54.5 * e, 55 * e, 48.038209575038294 * e),
                he(a, t[0], t[1], 8 * e),
                0 == i ? (a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(54.928558349609375 * e, 43.72320556640625 * e),
                a.bezierCurveTo(66.92855834960938 * e, 31.72320556640625 * e, 69.92855834960938 * e, 29.72320556640625 * e, 74.92855834960938 * e, 29.72320556640625 * e),
                a.bezierCurveTo(86.92855834960938 * e, 28.72320556640625 * e, 91.92855834960938 * e, 42.72320556640625 * e, 89.92855834960938 * e, 52.72320556640625 * e),
                a.bezierCurveTo(88.92855834960938 * e, 63.72320556640625 * e, 73.92855834960938 * e, 75.72320556640625 * e, 55.928558349609375 * e, 87.72320556640625 * e),
                a.bezierCurveTo(37.928558349609375 * e, 78.72320556640625 * e, 26.928558349609375 * e, 65.72320556640625 * e, 19.928558349609375 * e, 54.72320556640625 * e),
                a.bezierCurveTo(13.928558349609375 * e, 42.72320556640625 * e, 21.928558349609375 * e, 28.72320556640625 * e, 35.928558349609375 * e, 29.72320556640625 * e),
                a.bezierCurveTo(45.928558349609375 * e, 31.72320556640625 * e, 51.928558349609375 * e, 40.72320556640625 * e, 53.928558349609375 * e, 44.72320556640625 * e),
                a.closePath(),
                he(a, t[2])) : 1 == i ? (a.save(),
                a.translate(55 * e, 39.48748779296875 * e),
                ye(a, -11.5 * e, -36 * e, 23 * e, 72 * e, 10 * e),
                a.restore(),
                he(a, t[2], t[3], 4 * e),
                Re(a, 54.5 * e, 78.48748779296875 * e, 22.02271554554524 * e),
                he(a, t[4], t[3], 4 * e),
                a.save(),
                a.translate(55.5 * e, 57.287506103515625 * e),
                ye(a, -9 * e, -16 * e, 18 * e, 32 * e, 10 * e),
                a.restore(),
                he(a, t[4]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(66.5 * e, 25.287506103515625 * e),
                a.bezierCurveTo(60.5 * e, 25.287506103515625 * e, 63.5 * e, 25.287506103515625 * e, 54.5 * e, 25.287506103515625 * e),
                a.closePath(),
                he(a, void 0, t[5], 4 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(66.5 * e, 37.287506103515625 * e),
                a.bezierCurveTo(60.5 * e, 37.287506103515625 * e, 60.5 * e, 37.287506103515625 * e, 54.5 * e, 37.287506103515625 * e),
                a.closePath(),
                he(a, void 0, t[5], 4 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(66.5 * e, 50.287506103515625 * e),
                a.bezierCurveTo(61 * e, 50.287506103515625 * e, 61 * e, 50.287506103515625 * e, 55.5 * e, 50.287506103515625 * e),
                a.closePath(),
                he(a, void 0, t[5], 4 * e)) : 2 == i ? (a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(45.928558349609375 * e, 55.29463195800781 * e),
                a.bezierCurveTo(38.928558349609375 * e, 67.29463195800781 * e, 38.928558349609375 * e, 67.29463195800781 * e, 31.928558349609375 * e, 79.29463195800781 * e),
                a.bezierCurveTo(15.928558349609375 * e, 85.29463195800781 * e, 17.928558349609375 * e, 86.29463195800781 * e, 17.928558349609375 * e, 90.29463195800781 * e),
                a.bezierCurveTo(19.928558349609375 * e, 94.29463195800781 * e, 21.928558349609375 * e, 94.29463195800781 * e, 27.928558349609375 * e, 92.29463195800781 * e),
                a.bezierCurveTo(29.928558349609375 * e, 98.29463195800781 * e, 30.928558349609375 * e, 99.29463195800781 * e, 33.928558349609375 * e, 99.29463195800781 * e),
                a.bezierCurveTo(38.928558349609375 * e, 97.29463195800781 * e, 38.928558349609375 * e, 93.29463195800781 * e, 37.928558349609375 * e, 86.29463195800781 * e),
                a.bezierCurveTo(45.428558349609375 * e, 73.29463195800781 * e, 51.928558349609375 * e, 64.29463195800781 * e, 52.928558349609375 * e, 60.29463195800781 * e),
                a.closePath(),
                he(a, t[2]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(55.928558349609375 * e, 8.866058349609375 * e),
                a.bezierCurveTo(35.928558349609375 * e, 35.866058349609375 * e, 37.928558349609375 * e, 48.866058349609375 * e, 46.928558349609375 * e, 62.866058349609375 * e),
                a.bezierCurveTo(65.92855834960938 * e, 72.86605834960938 * e, 80.92855834960938 * e, 55.866058349609375 * e, 93.92855834960938 * e, 36.866058349609375 * e),
                a.closePath(),
                he(a, t[3], t[4], 6 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(93.92855834960938 * e, 36.866058349609375 * e),
                a.bezierCurveTo(82.92855834960938 * e, 37.866058349609375 * e, 77.92855834960938 * e, 36.866058349609375 * e, 67.92855834960938 * e, 28.866058349609375 * e),
                a.bezierCurveTo(53.928558349609375 * e, 16.866058349609375 * e, 53.928558349609375 * e, 14.866058349609375 * e, 55.928558349609375 * e, 7.866058349609375 * e),
                a.bezierCurveTo(65.92855834960938 * e, 4.866058349609375 * e, 71.92855834960938 * e, 7.866058349609375 * e, 83.92855834960938 * e, 13.866058349609375 * e),
                a.bezierCurveTo(96.92855834960938 * e, 21.866058349609375 * e, 95.92855834960938 * e, 31.866058349609375 * e, 92.92855834960938 * e, 36.866058349609375 * e),
                a.closePath(),
                he(a, t[3], t[4], 6 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(68.92855834960938 * e, 16.866058349609375 * e),
                a.bezierCurveTo(71.92855834960938 * e, 13.866058349609375 * e, 76.92855834960938 * e, 16.866058349609375 * e, 79.92855834960938 * e, 21.866058349609375 * e),
                a.bezierCurveTo(82.92855834960938 * e, 24.866058349609375 * e, 81.92855834960938 * e, 27.866058349609375 * e, 73.92855834960938 * e, 24.866058349609375 * e),
                a.bezierCurveTo(67.92855834960938 * e, 20.866058349609375 * e, 66.92855834960938 * e, 19.866058349609375 * e, 67.92855834960938 * e, 17.866058349609375 * e),
                a.closePath(),
                he(a, t[2])) : 3 == i && (a.scale(.9, .9),
                a.translate(6 * e, 0),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(54 * e, .421875 * e),
                a.bezierCurveTo(84 * e, 45.421875 * e, 89 * e, 51.421875 * e, 83 * e, 74.421875 * e),
                a.bezierCurveTo(74 * e, 95.421875 * e, 46 * e, 98.421875 * e, 30 * e, 78.421875 * e),
                a.bezierCurveTo(22 * e, 59.421875 * e, 27 * e, 49.421875 * e, 34 * e, 36.421875 * e),
                a.closePath(),
                he(a, t[2], t[3], 6 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(74 * e, 52.421875 * e),
                a.bezierCurveTo(77 * e, 73.421875 * e, 69 * e, 81.421875 * e, 58 * e, 81.421875 * e),
                a.bezierCurveTo(66 * e, 71.421875 * e, 70 * e, 66.421875 * e, 74 * e, 52.421875 * e),
                a.closePath(),
                he(a, t[3])),
                n
            }
            function Yn(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                return n.width = 573 * e,
                n.height = 350 * e,
                1 == i && (a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(336 * e, 72 * e),
                a.bezierCurveTo(366 * e, 15 * e, 426 * e, 36 * e, 497 * e, 83 * e),
                a.bezierCurveTo(522 * e, 85 * e, 522 * e, 85 * e, 547 * e, 87 * e),
                a.bezierCurveTo(476.5 * e, 205 * e, 476.5 * e, 205 * e, 406 * e, 323 * e),
                a.bezierCurveTo(297.5 * e, 319 * e, 297.5 * e, 319 * e, 189 * e, 315 * e),
                a.bezierCurveTo(105.5 * e, 279 * e, 105.5 * e, 279 * e, 22 * e, 243 * e),
                a.bezierCurveTo(92 * e, 140 * e, 92 * e, 140 * e, 162 * e, 37 * e),
                a.bezierCurveTo(173 * e, 39 * e, 173 * e, 39 * e, 184 * e, 41 * e),
                a.bezierCurveTo(185 * e, 38.5 * e, 185 * e, 38.5 * e, 186 * e, 36 * e),
                a.bezierCurveTo(323 * e, 13 * e, 322 * e, 25 * e, 337 * e, 74 * e),
                a.closePath(),
                he(a, t[4], t[4], 35 * e)),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(168 * e, 42 * e),
                a.bezierCurveTo(255 * e, 60 * e, 255 * e, 60 * e, 342 * e, 78 * e),
                a.bezierCurveTo(443 * e, 81.5 * e, 443 * e, 81.5 * e, 544 * e, 85 * e),
                a.bezierCurveTo(475 * e, 204.5 * e, 475 * e, 204.5 * e, 406 * e, 324 * e),
                a.bezierCurveTo(297.5 * e, 320 * e, 297.5 * e, 320 * e, 189 * e, 316 * e),
                a.bezierCurveTo(105.5 * e, 279 * e, 105.5 * e, 279 * e, 22 * e, 242 * e),
                a.closePath(),
                he(a, t[0], t[1], 12 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(188 * e, 41 * e),
                a.bezierCurveTo(308 * e, 15 * e, 325 * e, 18 * e, 337 * e, 66 * e),
                a.bezierCurveTo(191 * e, 305 * e, 196 * e, 286 * e, 184 * e, 307 * e),
                a.bezierCurveTo(175 * e, 250 * e, 90 * e, 254 * e, 52 * e, 241 * e),
                a.closePath(),
                he(a, t[2], t[3], 12 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(336 * e, 71 * e),
                a.bezierCurveTo(375 * e, 8 * e, 429 * e, 50 * e, 518 * e, 92 * e),
                a.bezierCurveTo(455 * e, 199.5 * e, 455 * e, 199.5 * e, 392 * e, 307 * e),
                a.bezierCurveTo(227 * e, 301 * e, 261 * e, 255 * e, 188 * e, 308 * e),
                a.closePath(),
                he(a, t[2], t[3], 12 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(357 * e, 76 * e),
                a.bezierCurveTo(390 * e, 67 * e, 414 * e, 86 * e, 435 * e, 104 * e),
                a.bezierCurveTo(417 * e, 135 * e, 417 * e, 135 * e, 399 * e, 166 * e),
                a.bezierCurveTo(352 * e, 140 * e, 345 * e, 139 * e, 319 * e, 142 * e),
                a.closePath(),
                he(a, t[3], t[3], 12 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(309 * e, 168 * e),
                a.bezierCurveTo(345 * e, 163 * e, 372 * e, 180 * e, 412 * e, 203 * e),
                he(a, t[2], t[3], 12 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(263 * e, 54 * e),
                a.bezierCurveTo(305 * e, 44 * e, 307 * e, 51 * e, 311 * e, 64 * e),
                a.bezierCurveTo(270.5 * e, 129.5 * e, 270.5 * e, 129.5 * e, 230 * e, 195 * e),
                a.bezierCurveTo(221 * e, 175 * e, 203 * e, 171 * e, 186 * e, 172 * e),
                a.closePath(),
                he(a, t[3], t[3], 12 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(292 * e, 198 * e),
                a.bezierCurveTo(328 * e, 191 * e, 364 * e, 211 * e, 401 * e, 237 * e),
                he(a, t[2], t[3], 12 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(245 * e, 68 * e),
                a.bezierCurveTo(210 * e, 72 * e, 210 * e, 72 * e, 189 * e, 69 * e),
                he(a, t[2], t[3], 12 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(222 * e, 96 * e),
                a.bezierCurveTo(196 * e, 97 * e, 193 * e, 97 * e, 177 * e, 92 * e),
                he(a, t[2], t[3], 12 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(207 * e, 124 * e),
                a.bezierCurveTo(179 * e, 123 * e, 177 * e, 124 * e, 161 * e, 119 * e),
                he(a, t[2], t[3], 12 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(115 * e, 183 * e),
                a.bezierCurveTo(184 * e, 185 * e, 203 * e, 198 * e, 219 * e, 221 * e),
                he(a, t[2], t[3], 12 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(98 * e, 213 * e),
                a.bezierCurveTo(161 * e, 214 * e, 193 * e, 227 * e, 201 * e, 249 * e),
                he(a, t[2], t[3], 12 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(399 * e, 257 * e),
                a.bezierCurveTo(287 * e, 215 * e, 280 * e, 215 * e, 263 * e, 222 * e),
                a.bezierCurveTo(253 * e, 238 * e, 247 * e, 245 * e, 243 * e, 254 * e),
                a.bezierCurveTo(267 * e, 236 * e, 292 * e, 263 * e, 377 * e, 284 * e),
                he(a, t[3], t[3], 12 * e),
                n
            }
            function Hn(e, t, i, n) {
                var a = window.document.createElement("canvas")
                  , I = a.getContext("2d");
                return a.width = 170 * e,
                a.height = 200 * e,
                I.translate(5 * e, 15 * e),
                1 == n && (I.translate(0, -5 * e),
                Re(I, 77.00003051757812 * e, 104.49432373046875 * e, 71.84010022264724 * e),
                he(I, i[1], i[5], 20 * e),
                Re(I, 77.00003051757812 * e, 104.22160339355469 * e, 61.554853586049575 * e),
                he(I, i[1], i[5], 20 * e),
                I.save(),
                I.translate(77.00003051757812 * e, 31.267044067382812 * e),
                ye(I, -6 * e, -12.5 * e, 12 * e, 25 * e, 10 * e),
                I.restore(),
                he(I, i[1], i[5], 20 * e),
                I.save(),
                I.translate(77.00003051757812 * e, 13.267044067382812 * e),
                ye(I, -15 * e, -10.5 * e, 30 * e, 21 * e, 10 * e),
                I.restore(),
                he(I, i[1], i[5], 20 * e)),
                Re(I, 77.00003051757812 * e, 104.49432373046875 * e, 71.84010022264724 * e),
                he(I, i[1], i[2], 7 * e),
                Re(I, 77.00003051757812 * e, 104.22160339355469 * e, 61.554853586049575 * e),
                he(I, i[1], i[2], 7 * e),
                I.beginPath(),
                I.lineCap = "round",
                I.lineJoin = "round",
                I.moveTo(18.000030517578125 * e, 105.85795593261719 * e),
                I.bezierCurveTo(134.00003051757812 * e, 104.85795593261719 * e, 77.00003051757812 * e, 104.85795593261719 * e, 136.00003051757812 * e, 103.85795593261719 * e),
                I.closePath(),
                he(I, i[1], i[2], 8 * e),
                Re(I, 77.00003051757812 * e, 104.6761474609375 * e, 32.55764119219941 * e),
                he(I, i[1], i[2], 8 * e),
                I.beginPath(),
                I.lineCap = "round",
                I.lineJoin = "round",
                I.moveTo(78.00003051757812 * e, 112.03977966308594 * e),
                I.bezierCurveTo(78.00003051757812 * e, 87.03977966308594 * e, 78.00003051757812 * e, 87.03977966308594 * e, 78.00003051757812 * e, 62.03977966308594 * e),
                I.closePath(),
                he(I, i[3], i[2], 8 * e),
                I.beginPath(),
                I.lineCap = "round",
                I.lineJoin = "round",
                I.moveTo(78.00003051757812 * e, 48.03977966308594 * e),
                I.bezierCurveTo(82.00003051757812 * e, 55.53977966308594 * e, 82.00003051757812 * e, 55.53977966308594 * e, 86.00003051757812 * e, 63.03977966308594 * e),
                I.bezierCurveTo(78.00003051757812 * e, 63.03977966308594 * e, 78.00003051757812 * e, 63.03977966308594 * e, 70.00003051757812 * e, 63.03977966308594 * e),
                I.closePath(),
                he(I, i[3], i[2], 4 * e),
                I.beginPath(),
                I.lineCap = "round",
                I.lineJoin = "round",
                I.moveTo(80.00003051757812 * e, 111.6761474609375 * e),
                I.bezierCurveTo(95.00003051757812 * e, 97.1761474609375 * e, 95.00003051757812 * e, 97.1761474609375 * e, 110.00003051757812 * e, 82.6761474609375 * e),
                I.closePath(),
                he(I, i[3], i[2], 8 * e),
                I.beginPath(),
                I.lineCap = "round",
                I.lineJoin = "round",
                I.moveTo(107.00003051757812 * e, 76.6761474609375 * e),
                I.bezierCurveTo(111.50003051757812 * e, 82.6761474609375 * e, 111.50003051757812 * e, 82.6761474609375 * e, 116.00003051757812 * e, 88.6761474609375 * e),
                I.bezierCurveTo(118.50003051757812 * e, 81.6761474609375 * e, 118.50003051757812 * e, 81.6761474609375 * e, 121.00003051757812 * e, 74.6761474609375 * e),
                I.closePath(),
                he(I, i[3], i[2], 4 * e),
                Re(I, 77.00003051757812 * e, 105.03977966308594 * e, 15.556349186104045 * e),
                he(I, i[3], i[2], 4 * e),
                I.save(),
                I.translate(77.00003051757812 * e, 31.267044067382812 * e),
                I.rotate(0),
                ye(I, -6 * e, -12.5 * e, 12 * e, 25 * e, 10 * e),
                I.restore(),
                he(I, i[1], i[2], 7 * e),
                I.save(),
                I.translate(77.00003051757812 * e, 13.267044067382812 * e),
                I.rotate(0),
                ye(I, -15 * e, -10.5 * e, 30 * e, 21 * e, 10 * e),
                I.restore(),
                he(I, i[1], i[2], 7 * e),
                a
            }
            function Kn(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                return n.width = 81 * e,
                n.height = 77 * e,
                a.translate(0, 10 * e),
                a.scale(.2, .2),
                a.translate(0, -30 * e),
                1 == i && (a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(36.5 * e, 278.0625 * e),
                a.bezierCurveTo(67.5 * e, 316.0625 * e, 134.5 * e, 334.0625 * e, 199.5 * e, 319.0625 * e),
                a.bezierCurveTo(254.5 * e, 304.0625 * e, 346.5 * e, 270.0625 * e, 348.5 * e, 237.0625 * e),
                a.bezierCurveTo(359.5 * e, 206.0625 * e, 318.5 * e, 129.0625 * e, 262.5 * e, 122.0625 * e),
                a.bezierCurveTo(213.5 * e, 115.0625 * e, 166.5 * e, 133.0625 * e, 104.5 * e, 166.0625 * e),
                a.bezierCurveTo(54.5 * e, 194.0625 * e, 23.5 * e, 241.0625 * e, 36.5 * e, 277.0625 * e),
                a.closePath(),
                he(a, t[0], t[3], 50 * e)),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(36.5 * e, 278.0625 * e),
                a.bezierCurveTo(67.5 * e, 316.0625 * e, 134.5 * e, 334.0625 * e, 199.5 * e, 319.0625 * e),
                a.bezierCurveTo(254.5 * e, 304.0625 * e, 346.5 * e, 270.0625 * e, 348.5 * e, 237.0625 * e),
                a.bezierCurveTo(359.5 * e, 206.0625 * e, 318.5 * e, 129.0625 * e, 262.5 * e, 122.0625 * e),
                a.bezierCurveTo(213.5 * e, 115.0625 * e, 166.5 * e, 133.0625 * e, 104.5 * e, 166.0625 * e),
                a.bezierCurveTo(54.5 * e, 194.0625 * e, 23.5 * e, 241.0625 * e, 36.5 * e, 277.0625 * e),
                a.closePath(),
                he(a, t[0], t[1], 19 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(214.5 * e, 124.0625 * e),
                a.bezierCurveTo(242.5 * e, 125.0625 * e, 272.5 * e, 159.0625 * e, 283.5 * e, 184.0625 * e),
                a.bezierCurveTo(277.5 * e, 161.0625 * e, 233.5 * e, 128.0625 * e, 219.5 * e, 122.0625 * e),
                a.closePath(),
                he(a, t[0], t[1], 19 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(157.5 * e, 145.0625 * e),
                a.bezierCurveTo(176.5 * e, 148.0625 * e, 205.5 * e, 176.0625 * e, 212.5 * e, 197.0625 * e),
                a.bezierCurveTo(205.5 * e, 178.0625 * e, 177.5 * e, 152.0625 * e, 156.5 * e, 142.0625 * e),
                a.closePath(),
                he(a, t[0], t[1], 19 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(103.5 * e, 169.0625 * e),
                a.bezierCurveTo(160.5 * e, 166.0625 * e, 228.5 * e, 312.0625 * e, 162.5 * e, 323.0625 * e),
                a.bezierCurveTo(128.5 * e, 330.0625 * e, 45.5 * e, 312.0625 * e, 34.5 * e, 268.0625 * e),
                a.bezierCurveTo(30.5 * e, 238.0625 * e, 44.5 * e, 222.0625 * e, 52.5 * e, 211.0625 * e),
                a.bezierCurveTo(82.5 * e, 174.0625 * e, 104.5 * e, 166.0625 * e, 119.5 * e, 172.0625 * e),
                a.closePath(),
                he(a, t[2], t[1], 19 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(194.5 * e, 313.0625 * e),
                a.bezierCurveTo(222.5 * e, 306.0625 * e, 319.5 * e, 271.0625 * e, 337.5 * e, 241.0625 * e),
                a.bezierCurveTo(274.5 * e, 270.0625 * e, 216.5 * e, 288.0625 * e, 199.5 * e, 287.0625 * e),
                a.bezierCurveTo(198.5 * e, 302.0625 * e, 195.5 * e, 311.0625 * e, 193.5 * e, 312.0625 * e),
                a.closePath(),
                he(a, t[1]),
                a.scale(3, 3),
                a.translate(15, 10 * e),
                1 == i && (a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(4 * e, 32 * e),
                a.bezierCurveTo(19 * e, 25 * e, 19 * e, 25 * e, 34 * e, 18 * e),
                a.bezierCurveTo(41.5 * e, 23.5 * e, 41.5 * e, 23.5 * e, 49 * e, 29 * e),
                a.bezierCurveTo(59.5 * e, 20 * e, 59.5 * e, 20 * e, 70 * e, 11 * e),
                he(a, void 0, t[3], 28 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(56 * e, 6 * e),
                a.bezierCurveTo(63.5 * e, 13.5 * e, 63.5 * e, 13.5 * e, 71 * e, 21 * e),
                a.bezierCurveTo(74.5 * e, 11.5 * e, 74.5 * e, 11.5 * e, 78 * e, 2 * e),
                a.closePath(),
                he(a, t[3], t[3], 28 * e)),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(4 * e, 32 * e),
                a.bezierCurveTo(19 * e, 25 * e, 19 * e, 25 * e, 34 * e, 18 * e),
                a.bezierCurveTo(41.5 * e, 23.5 * e, 41.5 * e, 23.5 * e, 49 * e, 29 * e),
                a.bezierCurveTo(59.5 * e, 20 * e, 59.5 * e, 20 * e, 70 * e, 11 * e),
                he(a, void 0, t[1], 17 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(56 * e, 6 * e),
                a.bezierCurveTo(63.5 * e, 13.5 * e, 63.5 * e, 13.5 * e, 71 * e, 21 * e),
                a.bezierCurveTo(74.5 * e, 11.5 * e, 74.5 * e, 11.5 * e, 78 * e, 2 * e),
                a.closePath(),
                he(a, t[1], t[1], 17 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(4 * e, 32 * e),
                a.bezierCurveTo(19 * e, 25 * e, 19 * e, 25 * e, 34 * e, 18 * e),
                a.bezierCurveTo(41.5 * e, 23.5 * e, 41.5 * e, 23.5 * e, 49 * e, 29 * e),
                a.bezierCurveTo(59.5 * e, 20 * e, 59.5 * e, 20 * e, 70 * e, 11 * e),
                he(a, void 0, t[2], 10 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(56 * e, 6 * e),
                a.bezierCurveTo(63.5 * e, 13.5 * e, 63.5 * e, 13.5 * e, 71 * e, 21 * e),
                a.bezierCurveTo(74.5 * e, 11.5 * e, 74.5 * e, 11.5 * e, 78 * e, 2 * e),
                a.closePath(),
                he(a, t[2], t[2], 10 * e),
                n
            }
            function Gn(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                return n.width = 144 * e,
                n.height = 280 * e,
                a.globalAlpha = t ? .5 : 1,
                a.translate(5 * e, 5 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(62 * e, 103.79999542236328 * e),
                a.bezierCurveTo(62.5 * e, 148.79999542236328 * e, 62.5 * e, 148.79999542236328 * e, 63 * e, 193.79999542236328 * e),
                a.bezierCurveTo(63 * e, 219.79999542236328 * e, 47 * e, 217.79999542236328 * e, 51 * e, 230.79999542236328 * e),
                a.bezierCurveTo(62 * e, 255.79999542236328 * e, 74 * e, 260.7999954223633 * e, 72 * e, 248.79999542236328 * e),
                a.bezierCurveTo(65 * e, 226.79999542236328 * e, 71 * e, 229.79999542236328 * e, 76 * e, 225.79999542236328 * e),
                a.bezierCurveTo(90 * e, 224.79999542236328 * e, 89 * e, 232.79999542236328 * e, 90 * e, 243.79999542236328 * e),
                a.bezierCurveTo(95 * e, 253.79999542236328 * e, 99 * e, 249.79999542236328 * e, 100 * e, 229.79999542236328 * e),
                a.bezierCurveTo(102 * e, 213.79999542236328 * e, 98 * e, 214.79999542236328 * e, 90 * e, 205.79999542236328 * e),
                a.bezierCurveTo(82 * e, 201.79999542236328 * e, 82 * e, 185.79999542236328 * e, 82 * e, 114.79999542236328 * e),
                a.bezierCurveTo(80 * e, 73 * e, 82 * e, 68 * e, 93 * e, 53 * e),
                a.bezierCurveTo(98 * e, 37 * e, 65 * e, 14 * e, 74 * e, 33 * e),
                a.bezierCurveTo(82 * e, 56 * e, 77 * e, 52 * e, 69 * e, 54 * e),
                a.bezierCurveTo(55 * e, 57 * e, 57 * e, 53 * e, 54 * e, 39 * e),
                a.bezierCurveTo(46 * e, 20 * e, 37 * e, 61 * e, 50 * e, 68 * e),
                a.bezierCurveTo(65 * e, 81 * e, 60 * e, 89 * e, 62 * e, 102 * e),
                a.closePath(),
                he(a, i[0]),
                a.globalAlpha = 1,
                a.translate(-5 * e, -5 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(62 * e, 103.79999542236328 * e),
                a.bezierCurveTo(62.5 * e, 148.79999542236328 * e, 62.5 * e, 148.79999542236328 * e, 63 * e, 193.79999542236328 * e),
                a.bezierCurveTo(63 * e, 219.79999542236328 * e, 47 * e, 217.79999542236328 * e, 51 * e, 230.79999542236328 * e),
                a.bezierCurveTo(62 * e, 255.79999542236328 * e, 74 * e, 260.7999954223633 * e, 72 * e, 248.79999542236328 * e),
                a.bezierCurveTo(65 * e, 226.79999542236328 * e, 71 * e, 229.79999542236328 * e, 76 * e, 225.79999542236328 * e),
                a.bezierCurveTo(90 * e, 224.79999542236328 * e, 89 * e, 232.79999542236328 * e, 90 * e, 243.79999542236328 * e),
                a.bezierCurveTo(95 * e, 253.79999542236328 * e, 99 * e, 249.79999542236328 * e, 100 * e, 229.79999542236328 * e),
                a.bezierCurveTo(102 * e, 213.79999542236328 * e, 98 * e, 214.79999542236328 * e, 90 * e, 205.79999542236328 * e),
                a.bezierCurveTo(82 * e, 201.79999542236328 * e, 82 * e, 185.79999542236328 * e, 82 * e, 114.79999542236328 * e),
                a.bezierCurveTo(80 * e, 73 * e, 82 * e, 68 * e, 93 * e, 53 * e),
                a.bezierCurveTo(98 * e, 37 * e, 65 * e, 14 * e, 74 * e, 33 * e),
                a.bezierCurveTo(82 * e, 56 * e, 77 * e, 52 * e, 69 * e, 54 * e),
                a.bezierCurveTo(55 * e, 57 * e, 57 * e, 53 * e, 54 * e, 39 * e),
                a.bezierCurveTo(46 * e, 20 * e, 37 * e, 61 * e, 50 * e, 68 * e),
                a.bezierCurveTo(65 * e, 81 * e, 60 * e, 89 * e, 62 * e, 102 * e),
                a.closePath(),
                he(a, i[1], i[2], 6 * e),
                n
            }
            function Wn(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                return n.width = 160 * e,
                n.height = 161 * e,
                a.globalAlpha = t ? .5 : 1,
                a.translate(0, 10 * e),
                a.save(),
                a.translate(80.5 * e, 78 * e),
                ye(a, -71.5 * e, -71 * e, 143 * e, 143 * e, 10 * e),
                a.restore(),
                he(a, i[0]),
                a.globalAlpha = 1,
                a.translate(0, -10 * e),
                a.save(),
                a.translate(80.5 * e, 78 * e),
                ye(a, -71.5 * e, -71 * e, 143 * e, 143 * e, 10 * e),
                a.restore(),
                he(a, i[1], i[2], 6 * e),
                a.save(),
                a.translate(80 * e, 78.5 * e),
                ye(a, -17 * e, -72.5 * e, 34 * e, 145 * e, 10 * e),
                a.restore(),
                he(a, i[3], i[4], 6 * e),
                a.globalAlpha = t ? .5 : 1,
                a.translate(0, 10 * e),
                a.save(),
                a.translate(80 * e, 79.5 * e),
                ye(a, -73 * e, -16.5 * e, 145 * e, 34 * e, 10 * e),
                a.restore(),
                he(a, i[0]),
                a.globalAlpha = 1,
                a.translate(0, -10 * e),
                a.save(),
                a.translate(80 * e, 79.5 * e),
                ye(a, -73 * e, -16.5 * e, 145 * e, 34 * e, 10 * e),
                a.restore(),
                he(a, i[3], i[4], 6 * e),
                a.globalAlpha = t ? .5 : 1,
                a.translate(0, 10 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(79 * e, 71 * e),
                a.bezierCurveTo(90 * e, 42 * e, 98 * e, 36 * e, 109 * e, 43 * e),
                a.bezierCurveTo(119 * e, 47 * e, 128 * e, 62 * e, 107 * e, 72 * e),
                a.bezierCurveTo(96 * e, 78.5 * e, 96 * e, 78.5 * e, 85 * e, 85 * e),
                a.closePath(),
                he(a, i[0]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(84 * e, 78 * e),
                a.bezierCurveTo(113 * e, 82 * e, 123 * e, 97 * e, 115 * e, 108 * e),
                a.bezierCurveTo(110 * e, 119 * e, 98 * e, 124 * e, 87 * e, 107 * e),
                a.bezierCurveTo(81.5 * e, 94.5 * e, 81.5 * e, 94.5 * e, 76 * e, 82 * e),
                a.closePath(),
                he(a, i[0]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(80 * e, 73 * e),
                a.bezierCurveTo(64 * e, 37 * e, 55 * e, 34 * e, 45 * e, 42 * e),
                a.bezierCurveTo(30 * e, 54 * e, 36 * e, 65 * e, 51 * e, 72 * e),
                a.bezierCurveTo(62.5 * e, 77 * e, 62.5 * e, 77 * e, 74 * e, 82 * e),
                a.closePath(),
                he(a, i[0]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(82 * e, 83 * e),
                a.bezierCurveTo(73 * e, 107 * e, 60 * e, 123 * e, 47 * e, 113 * e),
                a.bezierCurveTo(33 * e, 105 * e, 33 * e, 92 * e, 52 * e, 85 * e),
                a.bezierCurveTo(74 * e, 73 * e, 77 * e, 76 * e, 76 * e, 75 * e),
                a.closePath(),
                he(a, i[0]),
                a.globalAlpha = 1,
                a.translate(0, -10 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(79 * e, 71 * e),
                a.bezierCurveTo(90 * e, 42 * e, 98 * e, 36 * e, 109 * e, 43 * e),
                a.bezierCurveTo(119 * e, 47 * e, 128 * e, 62 * e, 107 * e, 72 * e),
                a.bezierCurveTo(96 * e, 78.5 * e, 96 * e, 78.5 * e, 85 * e, 85 * e),
                a.closePath(),
                he(a, i[3], i[4], 6 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(84 * e, 78 * e),
                a.bezierCurveTo(113 * e, 82 * e, 123 * e, 97 * e, 115 * e, 108 * e),
                a.bezierCurveTo(110 * e, 119 * e, 98 * e, 124 * e, 87 * e, 107 * e),
                a.bezierCurveTo(81.5 * e, 94.5 * e, 81.5 * e, 94.5 * e, 76 * e, 82 * e),
                a.closePath(),
                he(a, i[3], i[4], 6 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(80 * e, 73 * e),
                a.bezierCurveTo(64 * e, 37 * e, 55 * e, 34 * e, 45 * e, 42 * e),
                a.bezierCurveTo(30 * e, 54 * e, 36 * e, 65 * e, 51 * e, 72 * e),
                a.bezierCurveTo(62.5 * e, 77 * e, 62.5 * e, 77 * e, 74 * e, 82 * e),
                a.closePath(),
                he(a, i[3], i[4], 6 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(82 * e, 83 * e),
                a.bezierCurveTo(73 * e, 107 * e, 60 * e, 123 * e, 47 * e, 113 * e),
                a.bezierCurveTo(33 * e, 105 * e, 33 * e, 92 * e, 52 * e, 85 * e),
                a.bezierCurveTo(74 * e, 73 * e, 77 * e, 76 * e, 76 * e, 75 * e),
                a.closePath(),
                he(a, i[3], i[4], 6 * e),
                a.globalAlpha = t ? .5 : 1,
                a.translate(0, 10 * e),
                a.save(),
                a.translate(78.5 * e, 78 * e),
                ye(a, -13.5 * e, -14 * e, 27 * e, 27 * e, 6 * e),
                a.restore(),
                he(a, i[0]),
                a.globalAlpha = 1,
                a.translate(0, -10 * e),
                a.save(),
                a.translate(78.5 * e, 78 * e),
                ye(a, -13.5 * e, -14 * e, 27 * e, 27 * e, 6 * e),
                a.restore(),
                he(a, i[3], i[4], 6 * e),
                n
            }
            function Fn(e, t, i) {
                var n = window.document.createElement("canvas")
                  , a = n.getContext("2d");
                return n.width = 372 * e,
                n.height = 358 * e,
                a.translate(0 * e, 10 * e),
                a.globalAlpha = t ? .2 : 1,
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(247.00003051757812 * e, 115.76704406738281 * e),
                a.bezierCurveTo(305.0000305175781 * e, 124.76704406738281 * e, 335.0000305175781 * e, 112.76704406738281 * e, 359.0000305175781 * e, 93.76704406738281 * e),
                a.bezierCurveTo(359.5000305175781 * e, 113.26704406738281 * e, 359.5000305175781 * e, 113.26704406738281 * e, 360.0000305175781 * e, 132.7670440673828 * e),
                a.bezierCurveTo(339.0000305175781 * e, 177.7670440673828 * e, 281.0000305175781 * e, 178.7670440673828 * e, 243.00003051757812 * e, 183.7670440673828 * e),
                a.bezierCurveTo(214.50003051757812 * e, 214.2670440673828 * e, 214.50003051757812 * e, 214.2670440673828 * e, 186.00003051757812 * e, 244.7670440673828 * e),
                a.bezierCurveTo(155.00003051757812 * e, 214.2670440673828 * e, 155.00003051757812 * e, 214.2670440673828 * e, 124.00003051757812 * e, 183.7670440673828 * e),
                a.bezierCurveTo(51.000030517578125 * e, 180.7670440673828 * e, 21.000030517578125 * e, 161.7670440673828 * e, 9.000030517578125 * e, 129.7670440673828 * e),
                a.bezierCurveTo(8.500030517578125 * e, 110.76704406738281 * e, 8.500030517578125 * e, 110.76704406738281 * e, 8.000030517578125 * e, 91.76704406738281 * e),
                a.bezierCurveTo(31.000030517578125 * e, 112.76704406738281 * e, 87.00003051757812 * e, 119.76704406738281 * e, 116.00003051757812 * e, 117.76704406738281 * e),
                a.bezierCurveTo(175.00003051757812 * e, 18.767044067382812 * e, 170.00003051757812 * e, 23.767044067382812 * e, 181.00003051757812 * e, 14.767044067382812 * e),
                a.bezierCurveTo(199.00003051757812 * e, 34.76704406738281 * e, 203.00003051757812 * e, 54.76704406738281 * e, 247.00003051757812 * e, 115.76704406738281 * e),
                a.closePath(),
                he(a, i[0], i[0], 10 * e),
                a.translate(0 * e, -10 * e),
                a.globalAlpha = 1,
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(107.00003051757812 * e, 54.13069152832031 * e),
                a.bezierCurveTo(106.50003051757812 * e, 38.63069152832031 * e, 106.50003051757812 * e, 38.63069152832031 * e, 106.00003051757812 * e, 23.130691528320312 * e),
                a.bezierCurveTo(121.50003051757812 * e, 38.13069152832031 * e, 121.50003051757812 * e, 38.13069152832031 * e, 137.00003051757812 * e, 53.13069152832031 * e),
                a.closePath(),
                he(a, i[2], i[3], 10 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(233.00003051757812 * e, 53.6761474609375 * e),
                a.bezierCurveTo(247.00003051757812 * e, 37.1761474609375 * e, 247.00003051757812 * e, 37.1761474609375 * e, 261.0000305175781 * e, 20.6761474609375 * e),
                a.bezierCurveTo(261.0000305175781 * e, 36.1761474609375 * e, 261.0000305175781 * e, 36.1761474609375 * e, 261.0000305175781 * e, 51.6761474609375 * e),
                a.closePath(),
                he(a, i[2], i[3], 10 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(293.0000305175781 * e, 54.403411865234375 * e),
                a.bezierCurveTo(300.0000305175781 * e, 49.903411865234375 * e, 300.0000305175781 * e, 49.903411865234375 * e, 307.0000305175781 * e, 45.403411865234375 * e),
                a.bezierCurveTo(307.0000305175781 * e, 49.903411865234375 * e, 307.0000305175781 * e, 49.903411865234375 * e, 307.0000305175781 * e, 54.403411865234375 * e),
                a.closePath(),
                he(a, i[2], i[3], 10 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(77.00003051757812 * e, 54.403411865234375 * e),
                a.bezierCurveTo(70.00003051757812 * e, 50.403411865234375 * e, 70.00003051757812 * e, 50.403411865234375 * e, 63.000030517578125 * e, 46.403411865234375 * e),
                a.bezierCurveTo(62.500030517578125 * e, 50.903411865234375 * e, 62.500030517578125 * e, 50.903411865234375 * e, 62.000030517578125 * e, 55.403411865234375 * e),
                a.closePath(),
                he(a, i[2], i[3], 10 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(58.000030517578125 * e, 122.3125 * e),
                a.bezierCurveTo(59.500030517578125 * e, 97.3125 * e, 59.500030517578125 * e, 97.3125 * e, 61.000030517578125 * e, 72.3125 * e),
                a.bezierCurveTo(91.00003051757812 * e, 89.3125 * e, 91.00003051757812 * e, 89.3125 * e, 121.00003051757812 * e, 106.3125 * e),
                a.closePath(),
                he(a, i[1], i[1], 10 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(310.0000305175781 * e, 127.3125 * e),
                a.bezierCurveTo(308.0000305175781 * e, 98.3125 * e, 308.0000305175781 * e, 98.3125 * e, 306.0000305175781 * e, 69.3125 * e),
                a.bezierCurveTo(274.5000305175781 * e, 88.8125 * e, 274.5000305175781 * e, 88.8125 * e, 243.00003051757812 * e, 108.3125 * e),
                a.closePath(),
                he(a, i[1], i[1], 10 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(226.00003051757812 * e, 87.85795593261719 * e),
                a.bezierCurveTo(243.50003051757812 * e, 66.85795593261719 * e, 243.50003051757812 * e, 66.85795593261719 * e, 261.0000305175781 * e, 45.85795593261719 * e),
                a.bezierCurveTo(265.0000305175781 * e, 83.85795593261719 * e, 265.0000305175781 * e, 83.85795593261719 * e, 269.0000305175781 * e, 121.85795593261719 * e),
                a.bezierCurveTo(235.00003051757812 * e, 122.85795593261719 * e, 233.00003051757812 * e, 107.85795593261719 * e, 228.00003051757812 * e, 90.85795593261719 * e),
                a.closePath(),
                he(a, i[2], i[3], 10 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(105.00003051757812 * e, 128.8579559326172 * e),
                a.bezierCurveTo(104.50003051757812 * e, 87.85795593261719 * e, 104.50003051757812 * e, 87.85795593261719 * e, 104.00003051757812 * e, 46.85795593261719 * e),
                a.bezierCurveTo(126.50003051757812 * e, 69.35795593261719 * e, 126.50003051757812 * e, 69.35795593261719 * e, 149.00003051757812 * e, 91.85795593261719 * e),
                a.bezierCurveTo(130.00003051757812 * e, 123.85795593261719 * e, 123.00003051757812 * e, 132.8579559326172 * e, 107.00003051757812 * e, 130.8579559326172 * e),
                a.closePath(),
                he(a, i[1], i[1], 10 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(59.000030517578125 * e, 121.85795593261719 * e),
                a.bezierCurveTo(59.500030517578125 * e, 99.35795593261719 * e, 59.500030517578125 * e, 99.35795593261719 * e, 60.000030517578125 * e, 76.85795593261719 * e),
                a.bezierCurveTo(84.00003051757812 * e, 92.35795593261719 * e, 84.00003051757812 * e, 92.35795593261719 * e, 108.00003051757812 * e, 107.85795593261719 * e),
                a.bezierCurveTo(106.00003051757812 * e, 148.8579559326172 * e, 86.00003051757812 * e, 148.8579559326172 * e, 62.000030517578125 * e, 123.85795593261719 * e),
                a.closePath(),
                he(a, i[2], i[3], 10 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(105.00003051757812 * e, 132.8579559326172 * e),
                a.bezierCurveTo(104.50003051757812 * e, 93.35795593261719 * e, 104.50003051757812 * e, 93.35795593261719 * e, 104.00003051757812 * e, 53.85795593261719 * e),
                a.bezierCurveTo(126.50003051757812 * e, 75.85795593261719 * e, 126.50003051757812 * e, 75.85795593261719 * e, 149.00003051757812 * e, 97.85795593261719 * e),
                a.closePath(),
                he(a, i[2], i[3], 10 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(311.0000305175781 * e, 126.85795593261719 * e),
                a.bezierCurveTo(309.0000305175781 * e, 101.35795593261719 * e, 309.0000305175781 * e, 101.35795593261719 * e, 307.0000305175781 * e, 75.85795593261719 * e),
                a.bezierCurveTo(271.0000305175781 * e, 96.85795593261719 * e, 271.0000305175781 * e, 96.85795593261719 * e, 235.00003051757812 * e, 117.85795593261719 * e),
                a.closePath(),
                he(a, i[2], i[3], 10 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(228.00003051757812 * e, 96.85795593261719 * e),
                a.bezierCurveTo(244.50003051757812 * e, 74.85795593261719 * e, 244.50003051757812 * e, 74.85795593261719 * e, 261.0000305175781 * e, 52.85795593261719 * e),
                a.bezierCurveTo(265.5000305175781 * e, 89.85795593261719 * e, 265.5000305175781 * e, 89.85795593261719 * e, 270.0000305175781 * e, 126.85795593261719 * e),
                a.closePath(),
                he(a, i[2], i[3], 10 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(12.000030517578125 * e, 86.13069152832031 * e),
                a.bezierCurveTo(36.000030517578125 * e, 113.13069152832031 * e, 84.00003051757812 * e, 111.13069152832031 * e, 116.00003051757812 * e, 113.13069152832031 * e),
                a.bezierCurveTo(164.00003051757812 * e, 23.130691528320312 * e, 172.00003051757812 * e, 18.130691528320312 * e, 181.00003051757812 * e, 9.130691528320312 * e),
                a.bezierCurveTo(199.00003051757812 * e, 29.130691528320312 * e, 221.00003051757812 * e, 78.13069152832031 * e, 247.00003051757812 * e, 112.13069152832031 * e),
                a.bezierCurveTo(301.0000305175781 * e, 122.13069152832031 * e, 338.0000305175781 * e, 111.13069152832031 * e, 359.0000305175781 * e, 94.13069152832031 * e),
                a.bezierCurveTo(359.0000305175781 * e, 113.13069152832031 * e, 358.5000305175781 * e, 105.13069152832031 * e, 358.0000305175781 * e, 116.13069152832031 * e),
                a.bezierCurveTo(270.5000305175781 * e, 130.1306915283203 * e, 270.5000305175781 * e, 130.1306915283203 * e, 183.00003051757812 * e, 144.1306915283203 * e),
                a.bezierCurveTo(98.00003051757812 * e, 128.6306915283203 * e, 98.00003051757812 * e, 128.6306915283203 * e, 13.000030517578125 * e, 113.13069152832031 * e),
                a.closePath(),
                he(a, i[1], i[1], 10 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(247.00003051757812 * e, 115.76704406738281 * e),
                a.bezierCurveTo(305.0000305175781 * e, 124.76704406738281 * e, 335.0000305175781 * e, 112.76704406738281 * e, 359.0000305175781 * e, 93.76704406738281 * e),
                a.bezierCurveTo(359.5000305175781 * e, 113.26704406738281 * e, 359.5000305175781 * e, 113.26704406738281 * e, 360.0000305175781 * e, 132.7670440673828 * e),
                a.bezierCurveTo(339.0000305175781 * e, 177.7670440673828 * e, 281.0000305175781 * e, 178.7670440673828 * e, 243.00003051757812 * e, 183.7670440673828 * e),
                a.bezierCurveTo(214.50003051757812 * e, 214.2670440673828 * e, 214.50003051757812 * e, 214.2670440673828 * e, 186.00003051757812 * e, 244.7670440673828 * e),
                a.bezierCurveTo(155.00003051757812 * e, 214.2670440673828 * e, 155.00003051757812 * e, 214.2670440673828 * e, 124.00003051757812 * e, 183.7670440673828 * e),
                a.bezierCurveTo(51.000030517578125 * e, 180.7670440673828 * e, 21.000030517578125 * e, 161.7670440673828 * e, 9.000030517578125 * e, 129.7670440673828 * e),
                a.bezierCurveTo(8.500030517578125 * e, 110.76704406738281 * e, 8.500030517578125 * e, 110.76704406738281 * e, 8.000030517578125 * e, 91.76704406738281 * e),
                a.bezierCurveTo(31.000030517578125 * e, 112.76704406738281 * e, 87.00003051757812 * e, 119.76704406738281 * e, 116.00003051757812 * e, 117.76704406738281 * e),
                a.bezierCurveTo(175.00003051757812 * e, 18.767044067382812 * e, 170.00003051757812 * e, 23.767044067382812 * e, 181.00003051757812 * e, 14.767044067382812 * e),
                a.bezierCurveTo(199.00003051757812 * e, 34.76704406738281 * e, 203.00003051757812 * e, 54.76704406738281 * e, 247.00003051757812 * e, 115.76704406738281 * e),
                a.closePath(),
                he(a, i[2], i[3], 10 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(27.000030517578125 * e, 94.76704406738281 * e),
                a.bezierCurveTo(11.000030517578125 * e, 81.76704406738281 * e, 31.000030517578125 * e, 72.76704406738281 * e, 44.000030517578125 * e, 59.76704406738281 * e),
                a.bezierCurveTo(9.000030517578125 * e, 65.76704406738281 * e, 4.000030517578125 * e, 78.76704406738281 * e, 9.000030517578125 * e, 89.76704406738281 * e),
                a.closePath(),
                he(a, i[2], i[3], 10 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(352.0000305175781 * e, 100.76705932617188 * e),
                a.bezierCurveTo(362.0000305175781 * e, 92.76705932617188 * e, 352.0000305175781 * e, 84.76705932617188 * e, 340.0000305175781 * e, 68.76705932617188 * e),
                a.bezierCurveTo(360.0000305175781 * e, 69.76705932617188 * e, 364.0000305175781 * e, 79.76705932617188 * e, 364.0000305175781 * e, 94.76705932617188 * e),
                a.closePath(),
                he(a, i[1], i[1], 1 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(25.000030517578125 * e, 97.94886779785156 * e),
                a.bezierCurveTo(2.000030517578125 * e, 76.94886779785156 * e, 29.000030517578125 * e, 62.94886779785156 * e, 44.000030517578125 * e, 59.94886779785156 * e),
                a.bezierCurveTo(8.000030517578125 * e, 59.94886779785156 * e, -.999969482421875 * e, 81.94886779785156 * e, 4.000030517578125 * e, 92.94886779785156 * e),
                a.closePath(),
                he(a, i[3]),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(349.0000305175781 * e, 100.94886779785156 * e),
                a.bezierCurveTo(366.0000305175781 * e, 82.94886779785156 * e, 353.0000305175781 * e, 76.94886779785156 * e, 337.0000305175781 * e, 67.94886779785156 * e),
                a.bezierCurveTo(366.0000305175781 * e, 69.94886779785156 * e, 366.0000305175781 * e, 83.94886779785156 * e, 363.0000305175781 * e, 101.94886779785156 * e),
                a.closePath(),
                he(a, i[2], i[3], 10 * e),
                Re(a, 46.000030517578125 * e, 137.5852279663086 * e, 9.219544457292887 * e),
                he(a, i[4], i[5], 1 * e),
                Re(a, 308.0000305175781 * e, 141.5852279663086 * e, 8.54400374531753 * e),
                he(a, i[4], i[5], 1 * e),
                Re(a, 92.00003051757812 * e, 149.58523559570312 * e, 14.866068747318506 * e),
                he(a, i[4], i[5], 1 * e),
                Re(a, 262.0000305175781 * e, 148.8579559326172 * e, 15.620499351813308 * e),
                he(a, i[4], i[5], 1 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(184.00003051757812 * e, 68.85795593261719 * e),
                a.bezierCurveTo(203.00003051757812 * e, 108.85795593261719 * e, 203.00003051757812 * e, 108.85795593261719 * e, 222.00003051757812 * e, 148.8579559326172 * e),
                a.bezierCurveTo(202.50003051757812 * e, 177.8579559326172 * e, 202.50003051757812 * e, 177.8579559326172 * e, 183.00003051757812 * e, 206.8579559326172 * e),
                a.bezierCurveTo(162.00003051757812 * e, 178.8579559326172 * e, 162.00003051757812 * e, 178.8579559326172 * e, 141.00003051757812 * e, 150.8579559326172 * e),
                a.closePath(),
                he(a, i[4], i[5], 10 * e),
                a.beginPath(),
                a.lineCap = "round",
                a.lineJoin = "round",
                a.moveTo(183.00003051757812 * e, 104.94886779785156 * e),
                a.bezierCurveTo(192.50003051757812 * e, 125.44886779785156 * e, 192.50003051757812 * e, 125.44886779785156 * e, 202.00003051757812 * e, 145.94886779785156 * e),
                a.bezierCurveTo(192.00003051757812 * e, 163.94886779785156 * e, 192.00003051757812 * e, 163.94886779785156 * e, 182.00003051757812 * e, 181.94886779785156 * e),
                a.bezierCurveTo(172.50003051757812 * e, 164.44886779785156 * e, 172.50003051757812 * e, 164.44886779785156 * e, 163.00003051757812 * e, 146.94886779785156 * e),
                a.closePath(),
                he(a, i[6]),
                n
            }
            function xn() {
                (new window.Date).getTime();
                function e(e) {
                    for (var t = 0, i = 0, n = 0; i < e.length; i++) {
                        var a = e.charAt(i);
                        "_" !== a && 5 !== i && ("1" === a && (t += window.Math.pow(2, n)),
                        n++)
                    }
                    return t
                }
                for (var t in render_cosmetics(),
                Ie[SPRITE.RIVER_WAVE] = [P.RIVER_WAVED, P.RIVER_WAVEN],
                Ie[SPRITE.RIVER_DECO] = [],
                Ie[SPRITE.RIVER_DECO][SPRITE.DAY] = [],
                Ie[SPRITE.RIVER_DECO][SPRITE.DAY][e("000_010_000")] = [P.DAY_RIVER_COMPO21, P.DAY_RIVER_COMPO20],
                Ie[SPRITE.RIVER_DECO][SPRITE.DAY][e("000_010_010")] = Ie[SPRITE.RIVER_DECO][SPRITE.DAY][e("000_010_000")],
                Ie[SPRITE.RIVER_DECO][SPRITE.DAY][e("000_011_000")] = Ie[SPRITE.RIVER_DECO][SPRITE.DAY][e("000_010_000")],
                Ie[SPRITE.RIVER_DECO][SPRITE.DAY][e("000_011_010")] = [P.DAY_RIVER_COMPO5, P.DAY_RIVER_COMPO6, P.DAY_RIVER_COMPO20, P.DAY_RIVER_COMPO21, P.DAY_RIVER_COMPO22, P.DAY_RIVER_COMPO23, P.DAY_RIVER_COMPO24],
                Ie[SPRITE.RIVER_DECO][SPRITE.DAY][e("000_011_011")] = [P.DAY_RIVER_COMPO4, P.DAY_RIVER_COMPO5, P.DAY_RIVER_COMPO6, P.DAY_RIVER_COMPO20, P.DAY_RIVER_COMPO21, P.DAY_RIVER_COMPO22, P.DAY_RIVER_COMPO23, P.DAY_RIVER_COMPO24, P.DAY_RIVER_COMPO25],
                Ie[SPRITE.RIVER_DECO][SPRITE.DAY][e("000_110_000")] = [P.DAY_RIVER_COMPO11, P.DAY_RIVER_COMPO20],
                Ie[SPRITE.RIVER_DECO][SPRITE.DAY][e("000_110_010")] = [P.DAY_RIVER_COMPO7, P.DAY_RIVER_COMPO11, P.DAY_RIVER_COMPO17, P.DAY_RIVER_COMPO20, P.DAY_RIVER_COMPO21, P.DAY_RIVER_COMPO25, P.DAY_RIVER_COMPO26, P.DAY_RIVER_COMPO27],
                Ie[SPRITE.RIVER_DECO][SPRITE.DAY][e("000_110_110")] = [P.DAY_RIVER_COMPO7, P.DAY_RIVER_COMPO8, P.DAY_RIVER_COMPO9, P.DAY_RIVER_COMPO11, P.DAY_RIVER_COMPO17, P.DAY_RIVER_COMPO20, P.DAY_RIVER_COMPO25, P.DAY_RIVER_COMPO26, P.DAY_RIVER_COMPO27],
                Ie[SPRITE.RIVER_DECO][SPRITE.DAY][e("000_111_000")] = [P.DAY_RIVER_COMPO11, P.DAY_RIVER_COMPO17, P.DAY_RIVER_COMPO18, P.DAY_RIVER_COMPO19],
                Ie[SPRITE.RIVER_DECO][SPRITE.DAY][e("000_111_111")] = [P.DAY_RIVER_COMPO11, P.DAY_RIVER_COMPO9, P.DAY_RIVER_COMPO7, P.DAY_RIVER_COMPO6, P.DAY_RIVER_COMPO5, P.DAY_RIVER_COMPO4, P.DAY_RIVER_COMPO13],
                Ie[SPRITE.RIVER_DECO][SPRITE.DAY][e("010_010_000")] = [P.DAY_RIVER_COMPO20],
                Ie[SPRITE.RIVER_DECO][SPRITE.DAY][e("010_010_010")] = [P.DAY_RIVER_COMPO16, P.DAY_RIVER_COMPO20, P.DAY_RIVER_COMPO21],
                Ie[SPRITE.RIVER_DECO][SPRITE.DAY][e("010_011_000")] = [P.DAY_RIVER_COMPO3, P.DAY_RIVER_COMPO20, P.DAY_RIVER_COMPO21, P.DAY_RIVER_COMPO26],
                Ie[SPRITE.RIVER_DECO][SPRITE.DAY][e("010_110_000")] = [P.DAY_RIVER_COMPO11, P.DAY_RIVER_COMPO17, P.DAY_RIVER_COMPO20, P.DAY_RIVER_COMPO26, P.DAY_RIVER_COMPO28],
                Ie[SPRITE.RIVER_DECO][SPRITE.DAY][e("010_110_110")] = [P.DAY_RIVER_COMPO2, P.DAY_RIVER_COMPO3, P.DAY_RIVER_COMPO5, P.DAY_RIVER_COMPO6, P.DAY_RIVER_COMPO7, P.DAY_RIVER_COMPO9, P.DAY_RIVER_COMPO11, P.DAY_RIVER_COMPO13, P.DAY_RIVER_COMPO15, P.DAY_RIVER_COMPO16, P.DAY_RIVER_COMPO17, P.DAY_RIVER_COMPO18, P.DAY_RIVER_COMPO19, P.DAY_RIVER_COMPO20, P.DAY_RIVER_COMPO21, P.DAY_RIVER_COMPO22, P.DAY_RIVER_COMPO23, P.DAY_RIVER_COMPO24, P.DAY_RIVER_COMPO25, P.DAY_RIVER_COMPO26, P.DAY_RIVER_COMPO28],
                Ie[SPRITE.RIVER_DECO][SPRITE.DAY][e("010_011_010")] = Ie[SPRITE.RIVER_DECO][SPRITE.DAY][e("010_110_110")],
                Ie[SPRITE.RIVER_DECO][SPRITE.DAY][e("010_011_011")] = Ie[SPRITE.RIVER_DECO][SPRITE.DAY][e("010_110_110")],
                Ie[SPRITE.RIVER_DECO][SPRITE.DAY][e("000_111_011")] = Ie[SPRITE.RIVER_DECO][SPRITE.DAY][e("010_110_110")],
                Ie[SPRITE.RIVER_DECO][SPRITE.DAY][e("010_110_010")] = Ie[SPRITE.RIVER_DECO][SPRITE.DAY][e("010_110_110")],
                Ie[SPRITE.RIVER_DECO][SPRITE.DAY][e("010_111_000")] = Ie[SPRITE.RIVER_DECO][SPRITE.DAY][e("010_110_110")],
                Ie[SPRITE.RIVER_DECO][SPRITE.DAY][e("010_111_010")] = Ie[SPRITE.RIVER_DECO][SPRITE.DAY][e("010_110_110")],
                Ie[SPRITE.RIVER_DECO][SPRITE.DAY][e("010_111_011")] = Ie[SPRITE.RIVER_DECO][SPRITE.DAY][e("010_110_110")],
                Ie[SPRITE.RIVER_DECO][SPRITE.DAY][e("010_111_110")] = Ie[SPRITE.RIVER_DECO][SPRITE.DAY][e("010_110_110")],
                Ie[SPRITE.RIVER_DECO][SPRITE.DAY][e("010_111_111")] = Ie[SPRITE.RIVER_DECO][SPRITE.DAY][e("010_110_110")],
                Ie[SPRITE.RIVER_DECO][SPRITE.DAY][e("000_111_110")] = Ie[SPRITE.RIVER_DECO][SPRITE.DAY][e("010_110_110")],
                Ie[SPRITE.RIVER_DECO][SPRITE.DAY][e("000_111_010")] = Ie[SPRITE.RIVER_DECO][SPRITE.DAY][e("010_110_110")],
                Ie[SPRITE.RIVER_DECO][SPRITE.DAY][e("011_011_000")] = [P.DAY_RIVER_COMPO1, P.DAY_RIVER_COMPO2, P.DAY_RIVER_COMPO3, P.DAY_RIVER_COMPO20, P.DAY_RIVER_COMPO21, P.DAY_RIVER_COMPO26],
                Ie[SPRITE.RIVER_DECO][SPRITE.DAY][e("011_011_010")] = [P.DAY_RIVER_COMPO1, P.DAY_RIVER_COMPO2, P.DAY_RIVER_COMPO3, P.DAY_RIVER_COMPO11, P.DAY_RIVER_COMPO17, P.DAY_RIVER_COMPO18, P.DAY_RIVER_COMPO19, P.DAY_RIVER_COMPO20, P.DAY_RIVER_COMPO21, P.DAY_RIVER_COMPO26, P.DAY_RIVER_COMPO28],
                Ie[SPRITE.RIVER_DECO][SPRITE.DAY][e("011_011_011")] = [P.DAY_RIVER_COMPO6, P.DAY_RIVER_COMPO5, P.DAY_RIVER_COMPO4, P.DAY_RIVER_COMPO3, P.DAY_RIVER_COMPO2, P.DAY_RIVER_COMPO1, P.DAY_RIVER_COMPO15],
                Ie[SPRITE.RIVER_DECO][SPRITE.DAY][e("011_111_000")] = Ie[SPRITE.RIVER_DECO][SPRITE.DAY][e("011_011_010")],
                Ie[SPRITE.RIVER_DECO][SPRITE.DAY][e("011_111_010")] = [P.DAY_RIVER_COMPO1, P.DAY_RIVER_COMPO2, P.DAY_RIVER_COMPO3, P.DAY_RIVER_COMPO5, P.DAY_RIVER_COMPO6, P.DAY_RIVER_COMPO7, P.DAY_RIVER_COMPO11, P.DAY_RIVER_COMPO13, P.DAY_RIVER_COMPO15, P.DAY_RIVER_COMPO16, P.DAY_RIVER_COMPO17, P.DAY_RIVER_COMPO18, P.DAY_RIVER_COMPO19, P.DAY_RIVER_COMPO20, P.DAY_RIVER_COMPO21, P.DAY_RIVER_COMPO22, P.DAY_RIVER_COMPO23, P.DAY_RIVER_COMPO24, P.DAY_RIVER_COMPO25, P.DAY_RIVER_COMPO26, P.DAY_RIVER_COMPO28],
                Ie[SPRITE.RIVER_DECO][SPRITE.DAY][e("011_111_011")] = Ie[SPRITE.RIVER_DECO][SPRITE.DAY][e("011_111_010")],
                Ie[SPRITE.RIVER_DECO][SPRITE.DAY][e("011_111_110")] = Ie[SPRITE.RIVER_DECO][SPRITE.DAY][e("011_111_010")],
                Ie[SPRITE.RIVER_DECO][SPRITE.DAY][e("011_111_111")] = [P.DAY_RIVER_COMPO1, P.DAY_RIVER_COMPO2, P.DAY_RIVER_COMPO3, P.DAY_RIVER_COMPO4, P.DAY_RIVER_COMPO5, P.DAY_RIVER_COMPO6, P.DAY_RIVER_COMPO7, P.DAY_RIVER_COMPO9, P.DAY_RIVER_COMPO11, P.DAY_RIVER_COMPO13, P.DAY_RIVER_COMPO15, P.DAY_RIVER_COMPO16, P.DAY_RIVER_COMPO17, P.DAY_RIVER_COMPO18, P.DAY_RIVER_COMPO19, P.DAY_RIVER_COMPO20, P.DAY_RIVER_COMPO21, P.DAY_RIVER_COMPO22, P.DAY_RIVER_COMPO23, P.DAY_RIVER_COMPO24, P.DAY_RIVER_COMPO25, P.DAY_RIVER_COMPO26, P.DAY_RIVER_COMPO28],
                Ie[SPRITE.RIVER_DECO][SPRITE.DAY][e("110_110_000")] = [P.DAY_RIVER_COMPO10, P.DAY_RIVER_COMPO11, P.DAY_RIVER_COMPO12, P.DAY_RIVER_COMPO17, P.DAY_RIVER_COMPO20, P.DAY_RIVER_COMPO28],
                Ie[SPRITE.RIVER_DECO][SPRITE.DAY][e("110_110_010")] = [P.DAY_RIVER_COMPO7, P.DAY_RIVER_COMPO10, P.DAY_RIVER_COMPO11, P.DAY_RIVER_COMPO16, P.DAY_RIVER_COMPO17, P.DAY_RIVER_COMPO20, P.DAY_RIVER_COMPO25, P.DAY_RIVER_COMPO28],
                Ie[SPRITE.RIVER_DECO][SPRITE.DAY][e("110_110_110")] = [P.DAY_RIVER_COMPO7, P.DAY_RIVER_COMPO9, P.DAY_RIVER_COMPO10, P.DAY_RIVER_COMPO11, P.DAY_RIVER_COMPO16, P.DAY_RIVER_COMPO17, P.DAY_RIVER_COMPO20, P.DAY_RIVER_COMPO25, P.DAY_RIVER_COMPO28],
                Ie[SPRITE.RIVER_DECO][SPRITE.DAY][e("110_111_000")] = [P.DAY_RIVER_COMPO2, P.DAY_RIVER_COMPO3, P.DAY_RIVER_COMPO10, P.DAY_RIVER_COMPO11, P.DAY_RIVER_COMPO12, P.DAY_RIVER_COMPO14, P.DAY_RIVER_COMPO17, P.DAY_RIVER_COMPO18, P.DAY_RIVER_COMPO19, P.DAY_RIVER_COMPO20, P.DAY_RIVER_COMPO21, P.DAY_RIVER_COMPO26, P.DAY_RIVER_COMPO28],
                Ie[SPRITE.RIVER_DECO][SPRITE.DAY][e("110_111_110")] = [P.DAY_RIVER_COMPO2, P.DAY_RIVER_COMPO3, P.DAY_RIVER_COMPO5, P.DAY_RIVER_COMPO6, P.DAY_RIVER_COMPO7, P.DAY_RIVER_COMPO9, P.DAY_RIVER_COMPO10, P.DAY_RIVER_COMPO11, P.DAY_RIVER_COMPO13, P.DAY_RIVER_COMPO14, P.DAY_RIVER_COMPO15, P.DAY_RIVER_COMPO16, P.DAY_RIVER_COMPO17, P.DAY_RIVER_COMPO18, P.DAY_RIVER_COMPO19, P.DAY_RIVER_COMPO20, P.DAY_RIVER_COMPO21, P.DAY_RIVER_COMPO22, P.DAY_RIVER_COMPO23, P.DAY_RIVER_COMPO24, P.DAY_RIVER_COMPO25, P.DAY_RIVER_COMPO26, P.DAY_RIVER_COMPO28],
                Ie[SPRITE.RIVER_DECO][SPRITE.DAY][e("110_111_111")] = Ie[SPRITE.RIVER_DECO][SPRITE.DAY][e("110_111_110")],
                Ie[SPRITE.RIVER_DECO][SPRITE.DAY][e("110_111_011")] = Ie[SPRITE.RIVER_DECO][SPRITE.DAY][e("110_111_110")],
                Ie[SPRITE.RIVER_DECO][SPRITE.DAY][e("110_111_010")] = Ie[SPRITE.RIVER_DECO][SPRITE.DAY][e("110_111_110")],
                Ie[SPRITE.RIVER_DECO][SPRITE.DAY][e("111_111_110")] = [P.DAY_RIVER_COMPO28, P.DAY_RIVER_COMPO26, P.DAY_RIVER_COMPO25, P.DAY_RIVER_COMPO24, P.DAY_RIVER_COMPO23, P.DAY_RIVER_COMPO22, P.DAY_RIVER_COMPO21, P.DAY_RIVER_COMPO20, P.DAY_RIVER_COMPO19, P.DAY_RIVER_COMPO18, P.DAY_RIVER_COMPO17, P.DAY_RIVER_COMPO16, P.DAY_RIVER_COMPO15, P.DAY_RIVER_COMPO14, P.DAY_RIVER_COMPO13, P.DAY_RIVER_COMPO11, P.DAY_RIVER_COMPO10, P.DAY_RIVER_COMPO7, P.DAY_RIVER_COMPO6, P.DAY_RIVER_COMPO5, P.DAY_RIVER_COMPO3, P.DAY_RIVER_COMPO2, P.DAY_RIVER_COMPO1],
                Ie[SPRITE.RIVER_DECO][SPRITE.DAY][e("111_111_011")] = Ie[SPRITE.RIVER_DECO][SPRITE.DAY][e("111_111_110")],
                Ie[SPRITE.RIVER_DECO][SPRITE.DAY][e("111_111_000")] = [P.DAY_RIVER_COMPO12, P.DAY_RIVER_COMPO11, P.DAY_RIVER_COMPO10, P.DAY_RIVER_COMPO3, P.DAY_RIVER_COMPO2, P.DAY_RIVER_COMPO1, P.DAY_RIVER_COMPO14],
                Ie[SPRITE.RIVER_DECO][SPRITE.DAY][e("111_111_111")] = [P.DAY_RIVER_COMPO1, P.DAY_RIVER_COMPO2, P.DAY_RIVER_COMPO3, P.DAY_RIVER_COMPO4, P.DAY_RIVER_COMPO5, P.DAY_RIVER_COMPO6, P.DAY_RIVER_COMPO7, P.DAY_RIVER_COMPO9, P.DAY_RIVER_COMPO10, P.DAY_RIVER_COMPO11, P.DAY_RIVER_COMPO13, P.DAY_RIVER_COMPO15, P.DAY_RIVER_COMPO16, P.DAY_RIVER_COMPO17, P.DAY_RIVER_COMPO18, P.DAY_RIVER_COMPO19, P.DAY_RIVER_COMPO20, P.DAY_RIVER_COMPO21, P.DAY_RIVER_COMPO22, P.DAY_RIVER_COMPO23, P.DAY_RIVER_COMPO24, P.DAY_RIVER_COMPO25, P.DAY_RIVER_COMPO26, P.DAY_RIVER_COMPO28],
                Ie[SPRITE.RIVER_DECO][SPRITE.DAY][e("111_111_010")] = Ie[SPRITE.RIVER_DECO][SPRITE.DAY][e("111_111_110")],
                Ie[SPRITE.RIVER_DECO][SPRITE.NIGHT] = [],
                Ie[SPRITE.RIVER_DECO][SPRITE.NIGHT][e("000_010_000")] = [P.NIGHT_RIVER_COMPO21, P.NIGHT_RIVER_COMPO20],
                Ie[SPRITE.RIVER_DECO][SPRITE.NIGHT][e("000_010_010")] = Ie[SPRITE.RIVER_DECO][SPRITE.NIGHT][e("000_010_000")],
                Ie[SPRITE.RIVER_DECO][SPRITE.NIGHT][e("000_011_000")] = Ie[SPRITE.RIVER_DECO][SPRITE.NIGHT][e("000_010_000")],
                Ie[SPRITE.RIVER_DECO][SPRITE.NIGHT][e("000_011_010")] = [P.NIGHT_RIVER_COMPO5, P.NIGHT_RIVER_COMPO6, P.NIGHT_RIVER_COMPO20, P.NIGHT_RIVER_COMPO21, P.NIGHT_RIVER_COMPO22, P.NIGHT_RIVER_COMPO23, P.NIGHT_RIVER_COMPO24],
                Ie[SPRITE.RIVER_DECO][SPRITE.NIGHT][e("000_011_011")] = [P.NIGHT_RIVER_COMPO4, P.NIGHT_RIVER_COMPO5, P.NIGHT_RIVER_COMPO6, P.NIGHT_RIVER_COMPO20, P.NIGHT_RIVER_COMPO21, P.NIGHT_RIVER_COMPO22, P.NIGHT_RIVER_COMPO23, P.NIGHT_RIVER_COMPO24, P.NIGHT_RIVER_COMPO25],
                Ie[SPRITE.RIVER_DECO][SPRITE.NIGHT][e("000_110_000")] = [P.NIGHT_RIVER_COMPO11, P.NIGHT_RIVER_COMPO20],
                Ie[SPRITE.RIVER_DECO][SPRITE.NIGHT][e("000_110_010")] = [P.NIGHT_RIVER_COMPO7, P.NIGHT_RIVER_COMPO11, P.NIGHT_RIVER_COMPO17, P.NIGHT_RIVER_COMPO20, P.NIGHT_RIVER_COMPO21, P.NIGHT_RIVER_COMPO25, P.NIGHT_RIVER_COMPO26, P.NIGHT_RIVER_COMPO27],
                Ie[SPRITE.RIVER_DECO][SPRITE.NIGHT][e("000_110_110")] = [P.NIGHT_RIVER_COMPO7, P.NIGHT_RIVER_COMPO8, P.NIGHT_RIVER_COMPO9, P.NIGHT_RIVER_COMPO11, P.NIGHT_RIVER_COMPO17, P.NIGHT_RIVER_COMPO20, P.NIGHT_RIVER_COMPO25, P.NIGHT_RIVER_COMPO26, P.NIGHT_RIVER_COMPO27],
                Ie[SPRITE.RIVER_DECO][SPRITE.NIGHT][e("000_111_000")] = [P.NIGHT_RIVER_COMPO11, P.NIGHT_RIVER_COMPO17, P.NIGHT_RIVER_COMPO18, P.NIGHT_RIVER_COMPO19],
                Ie[SPRITE.RIVER_DECO][SPRITE.NIGHT][e("000_111_111")] = [P.NIGHT_RIVER_COMPO11, P.NIGHT_RIVER_COMPO9, P.NIGHT_RIVER_COMPO7, P.NIGHT_RIVER_COMPO6, P.NIGHT_RIVER_COMPO5, P.NIGHT_RIVER_COMPO4, P.NIGHT_RIVER_COMPO13],
                Ie[SPRITE.RIVER_DECO][SPRITE.NIGHT][e("010_010_000")] = [P.NIGHT_RIVER_COMPO20],
                Ie[SPRITE.RIVER_DECO][SPRITE.NIGHT][e("010_010_010")] = [P.NIGHT_RIVER_COMPO16, P.NIGHT_RIVER_COMPO20, P.NIGHT_RIVER_COMPO21],
                Ie[SPRITE.RIVER_DECO][SPRITE.NIGHT][e("010_011_000")] = [P.NIGHT_RIVER_COMPO3, P.NIGHT_RIVER_COMPO20, P.NIGHT_RIVER_COMPO21, P.NIGHT_RIVER_COMPO26],
                Ie[SPRITE.RIVER_DECO][SPRITE.NIGHT][e("010_110_000")] = [P.NIGHT_RIVER_COMPO11, P.NIGHT_RIVER_COMPO17, P.NIGHT_RIVER_COMPO20, P.NIGHT_RIVER_COMPO26, P.NIGHT_RIVER_COMPO28],
                Ie[SPRITE.RIVER_DECO][SPRITE.NIGHT][e("010_110_110")] = [P.NIGHT_RIVER_COMPO2, P.NIGHT_RIVER_COMPO3, P.NIGHT_RIVER_COMPO5, P.NIGHT_RIVER_COMPO6, P.NIGHT_RIVER_COMPO7, P.NIGHT_RIVER_COMPO9, P.NIGHT_RIVER_COMPO11, P.NIGHT_RIVER_COMPO13, P.NIGHT_RIVER_COMPO15, P.NIGHT_RIVER_COMPO16, P.NIGHT_RIVER_COMPO17, P.NIGHT_RIVER_COMPO18, P.NIGHT_RIVER_COMPO19, P.NIGHT_RIVER_COMPO20, P.NIGHT_RIVER_COMPO21, P.NIGHT_RIVER_COMPO22, P.NIGHT_RIVER_COMPO23, P.NIGHT_RIVER_COMPO24, P.NIGHT_RIVER_COMPO25, P.NIGHT_RIVER_COMPO26, P.NIGHT_RIVER_COMPO28],
                Ie[SPRITE.RIVER_DECO][SPRITE.NIGHT][e("010_011_010")] = Ie[SPRITE.RIVER_DECO][SPRITE.NIGHT][e("010_110_110")],
                Ie[SPRITE.RIVER_DECO][SPRITE.NIGHT][e("010_011_011")] = Ie[SPRITE.RIVER_DECO][SPRITE.NIGHT][e("010_110_110")],
                Ie[SPRITE.RIVER_DECO][SPRITE.NIGHT][e("000_111_011")] = Ie[SPRITE.RIVER_DECO][SPRITE.NIGHT][e("010_110_110")],
                Ie[SPRITE.RIVER_DECO][SPRITE.NIGHT][e("010_110_010")] = Ie[SPRITE.RIVER_DECO][SPRITE.NIGHT][e("010_110_110")],
                Ie[SPRITE.RIVER_DECO][SPRITE.NIGHT][e("010_111_000")] = Ie[SPRITE.RIVER_DECO][SPRITE.NIGHT][e("010_110_110")],
                Ie[SPRITE.RIVER_DECO][SPRITE.NIGHT][e("010_111_010")] = Ie[SPRITE.RIVER_DECO][SPRITE.NIGHT][e("010_110_110")],
                Ie[SPRITE.RIVER_DECO][SPRITE.NIGHT][e("010_111_011")] = Ie[SPRITE.RIVER_DECO][SPRITE.NIGHT][e("010_110_110")],
                Ie[SPRITE.RIVER_DECO][SPRITE.NIGHT][e("010_111_110")] = Ie[SPRITE.RIVER_DECO][SPRITE.NIGHT][e("010_110_110")],
                Ie[SPRITE.RIVER_DECO][SPRITE.NIGHT][e("010_111_111")] = Ie[SPRITE.RIVER_DECO][SPRITE.NIGHT][e("010_110_110")],
                Ie[SPRITE.RIVER_DECO][SPRITE.NIGHT][e("000_111_110")] = Ie[SPRITE.RIVER_DECO][SPRITE.NIGHT][e("010_110_110")],
                Ie[SPRITE.RIVER_DECO][SPRITE.NIGHT][e("000_111_010")] = Ie[SPRITE.RIVER_DECO][SPRITE.NIGHT][e("010_110_110")],
                Ie[SPRITE.RIVER_DECO][SPRITE.NIGHT][e("011_011_000")] = [P.NIGHT_RIVER_COMPO1, P.NIGHT_RIVER_COMPO2, P.NIGHT_RIVER_COMPO3, P.NIGHT_RIVER_COMPO20, P.NIGHT_RIVER_COMPO21, P.NIGHT_RIVER_COMPO26],
                Ie[SPRITE.RIVER_DECO][SPRITE.NIGHT][e("011_011_010")] = [P.NIGHT_RIVER_COMPO1, P.NIGHT_RIVER_COMPO2, P.NIGHT_RIVER_COMPO3, P.NIGHT_RIVER_COMPO11, P.NIGHT_RIVER_COMPO17, P.NIGHT_RIVER_COMPO18, P.NIGHT_RIVER_COMPO19, P.NIGHT_RIVER_COMPO20, P.NIGHT_RIVER_COMPO21, P.NIGHT_RIVER_COMPO26, P.NIGHT_RIVER_COMPO28],
                Ie[SPRITE.RIVER_DECO][SPRITE.NIGHT][e("011_011_011")] = [P.NIGHT_RIVER_COMPO6, P.NIGHT_RIVER_COMPO5, P.NIGHT_RIVER_COMPO4, P.NIGHT_RIVER_COMPO3, P.NIGHT_RIVER_COMPO2, P.NIGHT_RIVER_COMPO1, P.NIGHT_RIVER_COMPO15],
                Ie[SPRITE.RIVER_DECO][SPRITE.NIGHT][e("011_111_000")] = Ie[SPRITE.RIVER_DECO][SPRITE.NIGHT][e("011_011_010")],
                Ie[SPRITE.RIVER_DECO][SPRITE.NIGHT][e("011_111_010")] = [P.NIGHT_RIVER_COMPO1, P.NIGHT_RIVER_COMPO2, P.NIGHT_RIVER_COMPO3, P.NIGHT_RIVER_COMPO5, P.NIGHT_RIVER_COMPO6, P.NIGHT_RIVER_COMPO7, P.NIGHT_RIVER_COMPO11, P.NIGHT_RIVER_COMPO13, P.NIGHT_RIVER_COMPO15, P.NIGHT_RIVER_COMPO16, P.NIGHT_RIVER_COMPO17, P.NIGHT_RIVER_COMPO18, P.NIGHT_RIVER_COMPO19, P.NIGHT_RIVER_COMPO20, P.NIGHT_RIVER_COMPO21, P.NIGHT_RIVER_COMPO22, P.NIGHT_RIVER_COMPO23, P.NIGHT_RIVER_COMPO24, P.NIGHT_RIVER_COMPO25, P.NIGHT_RIVER_COMPO26, P.NIGHT_RIVER_COMPO28],
                Ie[SPRITE.RIVER_DECO][SPRITE.NIGHT][e("011_111_011")] = Ie[SPRITE.RIVER_DECO][SPRITE.NIGHT][e("011_111_010")],
                Ie[SPRITE.RIVER_DECO][SPRITE.NIGHT][e("011_111_110")] = Ie[SPRITE.RIVER_DECO][SPRITE.NIGHT][e("011_111_010")],
                Ie[SPRITE.RIVER_DECO][SPRITE.NIGHT][e("011_111_111")] = [P.NIGHT_RIVER_COMPO1, P.NIGHT_RIVER_COMPO2, P.NIGHT_RIVER_COMPO3, P.NIGHT_RIVER_COMPO4, P.NIGHT_RIVER_COMPO5, P.NIGHT_RIVER_COMPO6, P.NIGHT_RIVER_COMPO7, P.NIGHT_RIVER_COMPO9, P.NIGHT_RIVER_COMPO11, P.NIGHT_RIVER_COMPO13, P.NIGHT_RIVER_COMPO15, P.NIGHT_RIVER_COMPO16, P.NIGHT_RIVER_COMPO17, P.NIGHT_RIVER_COMPO18, P.NIGHT_RIVER_COMPO19, P.NIGHT_RIVER_COMPO20, P.NIGHT_RIVER_COMPO21, P.NIGHT_RIVER_COMPO22, P.NIGHT_RIVER_COMPO23, P.NIGHT_RIVER_COMPO24, P.NIGHT_RIVER_COMPO25, P.NIGHT_RIVER_COMPO26, P.NIGHT_RIVER_COMPO28],
                Ie[SPRITE.RIVER_DECO][SPRITE.NIGHT][e("110_110_000")] = [P.NIGHT_RIVER_COMPO10, P.NIGHT_RIVER_COMPO11, P.NIGHT_RIVER_COMPO12, P.NIGHT_RIVER_COMPO17, P.NIGHT_RIVER_COMPO20, P.NIGHT_RIVER_COMPO28],
                Ie[SPRITE.RIVER_DECO][SPRITE.NIGHT][e("110_110_010")] = [P.NIGHT_RIVER_COMPO7, P.NIGHT_RIVER_COMPO10, P.NIGHT_RIVER_COMPO11, P.NIGHT_RIVER_COMPO16, P.NIGHT_RIVER_COMPO17, P.NIGHT_RIVER_COMPO20, P.NIGHT_RIVER_COMPO25, P.NIGHT_RIVER_COMPO28],
                Ie[SPRITE.RIVER_DECO][SPRITE.NIGHT][e("110_110_110")] = [P.NIGHT_RIVER_COMPO7, P.NIGHT_RIVER_COMPO9, P.NIGHT_RIVER_COMPO10, P.NIGHT_RIVER_COMPO11, P.NIGHT_RIVER_COMPO16, P.NIGHT_RIVER_COMPO17, P.NIGHT_RIVER_COMPO20, P.NIGHT_RIVER_COMPO25, P.NIGHT_RIVER_COMPO28],
                Ie[SPRITE.RIVER_DECO][SPRITE.NIGHT][e("110_111_000")] = [P.NIGHT_RIVER_COMPO2, P.NIGHT_RIVER_COMPO3, P.NIGHT_RIVER_COMPO10, P.NIGHT_RIVER_COMPO11, P.NIGHT_RIVER_COMPO12, P.NIGHT_RIVER_COMPO14, P.NIGHT_RIVER_COMPO17, P.NIGHT_RIVER_COMPO18, P.NIGHT_RIVER_COMPO19, P.NIGHT_RIVER_COMPO20, P.NIGHT_RIVER_COMPO21, P.NIGHT_RIVER_COMPO26, P.NIGHT_RIVER_COMPO28],
                Ie[SPRITE.RIVER_DECO][SPRITE.NIGHT][e("110_111_110")] = [P.NIGHT_RIVER_COMPO2, P.NIGHT_RIVER_COMPO3, P.NIGHT_RIVER_COMPO5, P.NIGHT_RIVER_COMPO6, P.NIGHT_RIVER_COMPO7, P.NIGHT_RIVER_COMPO9, P.NIGHT_RIVER_COMPO10, P.NIGHT_RIVER_COMPO11, P.NIGHT_RIVER_COMPO13, P.NIGHT_RIVER_COMPO14, P.NIGHT_RIVER_COMPO15, P.NIGHT_RIVER_COMPO16, P.NIGHT_RIVER_COMPO17, P.NIGHT_RIVER_COMPO18, P.NIGHT_RIVER_COMPO19, P.NIGHT_RIVER_COMPO20, P.NIGHT_RIVER_COMPO21, P.NIGHT_RIVER_COMPO22, P.NIGHT_RIVER_COMPO23, P.NIGHT_RIVER_COMPO24, P.NIGHT_RIVER_COMPO25, P.NIGHT_RIVER_COMPO26, P.NIGHT_RIVER_COMPO28],
                Ie[SPRITE.RIVER_DECO][SPRITE.NIGHT][e("110_111_111")] = Ie[SPRITE.RIVER_DECO][SPRITE.NIGHT][e("110_111_110")],
                Ie[SPRITE.RIVER_DECO][SPRITE.NIGHT][e("110_111_011")] = Ie[SPRITE.RIVER_DECO][SPRITE.NIGHT][e("110_111_110")],
                Ie[SPRITE.RIVER_DECO][SPRITE.NIGHT][e("110_111_010")] = Ie[SPRITE.RIVER_DECO][SPRITE.NIGHT][e("110_111_110")],
                Ie[SPRITE.RIVER_DECO][SPRITE.NIGHT][e("111_111_110")] = [P.NIGHT_RIVER_COMPO28, P.NIGHT_RIVER_COMPO26, P.NIGHT_RIVER_COMPO25, P.NIGHT_RIVER_COMPO24, P.NIGHT_RIVER_COMPO23, P.NIGHT_RIVER_COMPO22, P.NIGHT_RIVER_COMPO21, P.NIGHT_RIVER_COMPO20, P.NIGHT_RIVER_COMPO19, P.NIGHT_RIVER_COMPO18, P.NIGHT_RIVER_COMPO17, P.NIGHT_RIVER_COMPO16, P.NIGHT_RIVER_COMPO15, P.NIGHT_RIVER_COMPO14, P.NIGHT_RIVER_COMPO13, P.NIGHT_RIVER_COMPO11, P.NIGHT_RIVER_COMPO10, P.NIGHT_RIVER_COMPO7, P.NIGHT_RIVER_COMPO6, P.NIGHT_RIVER_COMPO5, P.NIGHT_RIVER_COMPO3, P.NIGHT_RIVER_COMPO2, P.NIGHT_RIVER_COMPO1],
                Ie[SPRITE.RIVER_DECO][SPRITE.NIGHT][e("111_111_011")] = Ie[SPRITE.RIVER_DECO][SPRITE.NIGHT][e("111_111_110")],
                Ie[SPRITE.RIVER_DECO][SPRITE.NIGHT][e("111_111_000")] = [P.NIGHT_RIVER_COMPO12, P.NIGHT_RIVER_COMPO11, P.NIGHT_RIVER_COMPO10, P.NIGHT_RIVER_COMPO3, P.NIGHT_RIVER_COMPO2, P.NIGHT_RIVER_COMPO1, P.NIGHT_RIVER_COMPO14],
                Ie[SPRITE.RIVER_DECO][SPRITE.NIGHT][e("111_111_111")] = [P.NIGHT_RIVER_COMPO1, P.NIGHT_RIVER_COMPO2, P.NIGHT_RIVER_COMPO3, P.NIGHT_RIVER_COMPO4, P.NIGHT_RIVER_COMPO5, P.NIGHT_RIVER_COMPO6, P.NIGHT_RIVER_COMPO7, P.NIGHT_RIVER_COMPO9, P.NIGHT_RIVER_COMPO10, P.NIGHT_RIVER_COMPO11, P.NIGHT_RIVER_COMPO13, P.NIGHT_RIVER_COMPO15, P.NIGHT_RIVER_COMPO16, P.NIGHT_RIVER_COMPO17, P.NIGHT_RIVER_COMPO18, P.NIGHT_RIVER_COMPO19, P.NIGHT_RIVER_COMPO20, P.NIGHT_RIVER_COMPO21, P.NIGHT_RIVER_COMPO22, P.NIGHT_RIVER_COMPO23, P.NIGHT_RIVER_COMPO24, P.NIGHT_RIVER_COMPO25, P.NIGHT_RIVER_COMPO26, P.NIGHT_RIVER_COMPO28],
                Ie[SPRITE.RIVER_DECO][SPRITE.NIGHT][e("111_111_010")] = Ie[SPRITE.RIVER_DECO][SPRITE.NIGHT][e("111_111_110")],
                Ie[SPRITE.RIVER] = [],
                Ie[SPRITE.RIVER][SPRITE.DAY] = [],
                Ie[SPRITE.RIVER][SPRITE.DAY][e("000_010_000")] = P.DAY_RIVER_000_010_000,
                Ie[SPRITE.RIVER][SPRITE.DAY][e("000_010_010")] = P.DAY_RIVER_000_010_010,
                Ie[SPRITE.RIVER][SPRITE.DAY][e("000_011_000")] = P.DAY_RIVER_000_011_000,
                Ie[SPRITE.RIVER][SPRITE.DAY][e("000_011_010")] = P.DAY_RIVER_000_011_010,
                Ie[SPRITE.RIVER][SPRITE.DAY][e("000_011_011")] = P.DAY_RIVER_000_011_011,
                Ie[SPRITE.RIVER][SPRITE.DAY][e("000_110_000")] = P.DAY_RIVER_000_110_000,
                Ie[SPRITE.RIVER][SPRITE.DAY][e("000_110_010")] = P.DAY_RIVER_000_110_010,
                Ie[SPRITE.RIVER][SPRITE.DAY][e("000_110_110")] = P.DAY_RIVER_000_110_110,
                Ie[SPRITE.RIVER][SPRITE.DAY][e("000_111_000")] = P.DAY_RIVER_000_111_000,
                Ie[SPRITE.RIVER][SPRITE.DAY][e("000_111_010")] = P.DAY_RIVER_000_111_010,
                Ie[SPRITE.RIVER][SPRITE.DAY][e("000_111_011")] = P.DAY_RIVER_000_111_011,
                Ie[SPRITE.RIVER][SPRITE.DAY][e("000_111_110")] = P.DAY_RIVER_000_111_110,
                Ie[SPRITE.RIVER][SPRITE.DAY][e("000_111_111")] = P.DAY_RIVER_000_111_111,
                Ie[SPRITE.RIVER][SPRITE.DAY][e("010_010_000")] = P.DAY_RIVER_010_010_000,
                Ie[SPRITE.RIVER][SPRITE.DAY][e("010_010_010")] = P.DAY_RIVER_010_010_010,
                Ie[SPRITE.RIVER][SPRITE.DAY][e("010_011_000")] = P.DAY_RIVER_010_011_000,
                Ie[SPRITE.RIVER][SPRITE.DAY][e("010_011_010")] = P.DAY_RIVER_010_011_010,
                Ie[SPRITE.RIVER][SPRITE.DAY][e("010_011_011")] = P.DAY_RIVER_010_011_011,
                Ie[SPRITE.RIVER][SPRITE.DAY][e("010_110_000")] = P.DAY_RIVER_010_110_000,
                Ie[SPRITE.RIVER][SPRITE.DAY][e("010_110_010")] = P.DAY_RIVER_010_110_010,
                Ie[SPRITE.RIVER][SPRITE.DAY][e("010_110_110")] = P.DAY_RIVER_010_110_110,
                Ie[SPRITE.RIVER][SPRITE.DAY][e("010_111_000")] = P.DAY_RIVER_010_111_000,
                Ie[SPRITE.RIVER][SPRITE.DAY][e("010_111_010")] = P.DAY_RIVER_010_111_010,
                Ie[SPRITE.RIVER][SPRITE.DAY][e("010_111_011")] = P.DAY_RIVER_010_111_011,
                Ie[SPRITE.RIVER][SPRITE.DAY][e("010_111_110")] = P.DAY_RIVER_010_111_110,
                Ie[SPRITE.RIVER][SPRITE.DAY][e("010_111_111")] = P.DAY_RIVER_010_111_111,
                Ie[SPRITE.RIVER][SPRITE.DAY][e("011_011_000")] = P.DAY_RIVER_011_011_000,
                Ie[SPRITE.RIVER][SPRITE.DAY][e("011_011_010")] = P.DAY_RIVER_011_011_010,
                Ie[SPRITE.RIVER][SPRITE.DAY][e("011_011_011")] = P.DAY_RIVER_011_011_011,
                Ie[SPRITE.RIVER][SPRITE.DAY][e("011_111_000")] = P.DAY_RIVER_011_111_000,
                Ie[SPRITE.RIVER][SPRITE.DAY][e("011_111_010")] = P.DAY_RIVER_011_111_010,
                Ie[SPRITE.RIVER][SPRITE.DAY][e("011_111_011")] = P.DAY_RIVER_011_111_011,
                Ie[SPRITE.RIVER][SPRITE.DAY][e("011_111_110")] = P.DAY_RIVER_011_111_110,
                Ie[SPRITE.RIVER][SPRITE.DAY][e("011_111_111")] = P.DAY_RIVER_011_111_111,
                Ie[SPRITE.RIVER][SPRITE.DAY][e("110_110_000")] = P.DAY_RIVER_110_110_000,
                Ie[SPRITE.RIVER][SPRITE.DAY][e("110_110_010")] = P.DAY_RIVER_110_110_010,
                Ie[SPRITE.RIVER][SPRITE.DAY][e("110_110_110")] = P.DAY_RIVER_110_110_110,
                Ie[SPRITE.RIVER][SPRITE.DAY][e("110_111_000")] = P.DAY_RIVER_110_111_000,
                Ie[SPRITE.RIVER][SPRITE.DAY][e("110_111_010")] = P.DAY_RIVER_110_111_010,
                Ie[SPRITE.RIVER][SPRITE.DAY][e("110_111_011")] = P.DAY_RIVER_110_111_011,
                Ie[SPRITE.RIVER][SPRITE.DAY][e("110_111_110")] = P.DAY_RIVER_110_111_110,
                Ie[SPRITE.RIVER][SPRITE.DAY][e("110_111_111")] = P.DAY_RIVER_110_111_111,
                Ie[SPRITE.RIVER][SPRITE.DAY][e("111_111_011")] = P.DAY_RIVER_111_111_011,
                Ie[SPRITE.RIVER][SPRITE.DAY][e("111_111_110")] = P.DAY_RIVER_111_111_110,
                Ie[SPRITE.RIVER][SPRITE.DAY][e("111_111_011")] = P.DAY_RIVER_111_111_011,
                Ie[SPRITE.RIVER][SPRITE.DAY][e("111_111_000")] = P.DAY_RIVER_111_111_000,
                Ie[SPRITE.RIVER][SPRITE.DAY][e("111_111_111")] = P.DAY_RIVER_111_111_111,
                Ie[SPRITE.RIVER][SPRITE.DAY][e("111_111_010")] = P.DAY_RIVER_111_111_010,
                Ie[SPRITE.RIVER][SPRITE.NIGHT] = [],
                Ie[SPRITE.RIVER][SPRITE.NIGHT][e("000_010_000")] = P.NIGHT_RIVER_000_010_000,
                Ie[SPRITE.RIVER][SPRITE.NIGHT][e("000_010_010")] = P.NIGHT_RIVER_000_010_010,
                Ie[SPRITE.RIVER][SPRITE.NIGHT][e("000_011_000")] = P.NIGHT_RIVER_000_011_000,
                Ie[SPRITE.RIVER][SPRITE.NIGHT][e("000_011_010")] = P.NIGHT_RIVER_000_011_010,
                Ie[SPRITE.RIVER][SPRITE.NIGHT][e("000_011_011")] = P.NIGHT_RIVER_000_011_011,
                Ie[SPRITE.RIVER][SPRITE.NIGHT][e("000_110_000")] = P.NIGHT_RIVER_000_110_000,
                Ie[SPRITE.RIVER][SPRITE.NIGHT][e("000_110_010")] = P.NIGHT_RIVER_000_110_010,
                Ie[SPRITE.RIVER][SPRITE.NIGHT][e("000_110_110")] = P.NIGHT_RIVER_000_110_110,
                Ie[SPRITE.RIVER][SPRITE.NIGHT][e("000_111_000")] = P.NIGHT_RIVER_000_111_000,
                Ie[SPRITE.RIVER][SPRITE.NIGHT][e("000_111_010")] = P.NIGHT_RIVER_000_111_010,
                Ie[SPRITE.RIVER][SPRITE.NIGHT][e("000_111_011")] = P.NIGHT_RIVER_000_111_011,
                Ie[SPRITE.RIVER][SPRITE.NIGHT][e("000_111_110")] = P.NIGHT_RIVER_000_111_110,
                Ie[SPRITE.RIVER][SPRITE.NIGHT][e("000_111_111")] = P.NIGHT_RIVER_000_111_111,
                Ie[SPRITE.RIVER][SPRITE.NIGHT][e("010_010_000")] = P.NIGHT_RIVER_010_010_000,
                Ie[SPRITE.RIVER][SPRITE.NIGHT][e("010_010_010")] = P.NIGHT_RIVER_010_010_010,
                Ie[SPRITE.RIVER][SPRITE.NIGHT][e("010_011_000")] = P.NIGHT_RIVER_010_011_000,
                Ie[SPRITE.RIVER][SPRITE.NIGHT][e("010_011_010")] = P.NIGHT_RIVER_010_011_010,
                Ie[SPRITE.RIVER][SPRITE.NIGHT][e("010_011_011")] = P.NIGHT_RIVER_010_011_011,
                Ie[SPRITE.RIVER][SPRITE.NIGHT][e("010_110_000")] = P.NIGHT_RIVER_010_110_000,
                Ie[SPRITE.RIVER][SPRITE.NIGHT][e("010_110_010")] = P.NIGHT_RIVER_010_110_010,
                Ie[SPRITE.RIVER][SPRITE.NIGHT][e("010_110_110")] = P.NIGHT_RIVER_010_110_110,
                Ie[SPRITE.RIVER][SPRITE.NIGHT][e("010_111_000")] = P.NIGHT_RIVER_010_111_000,
                Ie[SPRITE.RIVER][SPRITE.NIGHT][e("010_111_010")] = P.NIGHT_RIVER_010_111_010,
                Ie[SPRITE.RIVER][SPRITE.NIGHT][e("010_111_011")] = P.NIGHT_RIVER_010_111_011,
                Ie[SPRITE.RIVER][SPRITE.NIGHT][e("010_111_110")] = P.NIGHT_RIVER_010_111_110,
                Ie[SPRITE.RIVER][SPRITE.NIGHT][e("010_111_111")] = P.NIGHT_RIVER_010_111_111,
                Ie[SPRITE.RIVER][SPRITE.NIGHT][e("011_011_000")] = P.NIGHT_RIVER_011_011_000,
                Ie[SPRITE.RIVER][SPRITE.NIGHT][e("011_011_010")] = P.NIGHT_RIVER_011_011_010,
                Ie[SPRITE.RIVER][SPRITE.NIGHT][e("011_011_011")] = P.NIGHT_RIVER_011_011_011,
                Ie[SPRITE.RIVER][SPRITE.NIGHT][e("011_111_000")] = P.NIGHT_RIVER_011_111_000,
                Ie[SPRITE.RIVER][SPRITE.NIGHT][e("011_111_010")] = P.NIGHT_RIVER_011_111_010,
                Ie[SPRITE.RIVER][SPRITE.NIGHT][e("011_111_011")] = P.NIGHT_RIVER_011_111_011,
                Ie[SPRITE.RIVER][SPRITE.NIGHT][e("011_111_110")] = P.NIGHT_RIVER_011_111_110,
                Ie[SPRITE.RIVER][SPRITE.NIGHT][e("011_111_111")] = P.NIGHT_RIVER_011_111_111,
                Ie[SPRITE.RIVER][SPRITE.NIGHT][e("110_110_000")] = P.NIGHT_RIVER_110_110_000,
                Ie[SPRITE.RIVER][SPRITE.NIGHT][e("110_110_010")] = P.NIGHT_RIVER_110_110_010,
                Ie[SPRITE.RIVER][SPRITE.NIGHT][e("110_110_110")] = P.NIGHT_RIVER_110_110_110,
                Ie[SPRITE.RIVER][SPRITE.NIGHT][e("110_111_000")] = P.NIGHT_RIVER_110_111_000,
                Ie[SPRITE.RIVER][SPRITE.NIGHT][e("110_111_010")] = P.NIGHT_RIVER_110_111_010,
                Ie[SPRITE.RIVER][SPRITE.NIGHT][e("110_111_011")] = P.NIGHT_RIVER_110_111_011,
                Ie[SPRITE.RIVER][SPRITE.NIGHT][e("110_111_110")] = P.NIGHT_RIVER_110_111_110,
                Ie[SPRITE.RIVER][SPRITE.NIGHT][e("110_111_111")] = P.NIGHT_RIVER_110_111_111,
                Ie[SPRITE.RIVER][SPRITE.NIGHT][e("111_111_011")] = P.NIGHT_RIVER_111_111_011,
                Ie[SPRITE.RIVER][SPRITE.NIGHT][e("111_111_110")] = P.NIGHT_RIVER_111_111_110,
                Ie[SPRITE.RIVER][SPRITE.NIGHT][e("111_111_011")] = P.NIGHT_RIVER_111_111_011,
                Ie[SPRITE.RIVER][SPRITE.NIGHT][e("111_111_000")] = P.NIGHT_RIVER_111_111_000,
                Ie[SPRITE.RIVER][SPRITE.NIGHT][e("111_111_111")] = P.NIGHT_RIVER_111_111_111,
                Ie[SPRITE.RIVER][SPRITE.NIGHT][e("111_111_010")] = P.NIGHT_RIVER_111_111_010,
                Ie[ItemType.REIDITE_PICK] = [],
                Ie[ItemType.REIDITE_PICK][SPRITE.DAY] = P.PICK_REIDITED,
                Ie[ItemType.REIDITE_PICK][SPRITE.NIGHT] = P.PICK_REIDITEN,
                Ie[ItemType.CARROT] = [],
                Ie[ItemType.CARROT][SPRITE.DAY] = P.CARROTD,
                Ie[ItemType.CARROT][SPRITE.NIGHT] = P.CARROTN,
                Ie[SPRITE.TOMATO_MINI] = [],
                Ie[SPRITE.TOMATO_MINI][SPRITE.DAY] = P.TOMATO_MINID,
                Ie[SPRITE.TOMATO_MINI][SPRITE.NIGHT] = P.TOMATO_MININ,
                Ie[ItemType.TOMATO] = [],
                Ie[ItemType.TOMATO][SPRITE.DAY] = P.TOMATOD,
                Ie[ItemType.TOMATO][SPRITE.NIGHT] = P.TOMATON,
                Ie[SPRITE.DRIED_CARROT] = [],
                Ie[SPRITE.DRIED_CARROT][SPRITE.DAY] = P.CARROT_DRIEDD,
                Ie[SPRITE.DRIED_CARROT][SPRITE.NIGHT] = P.CARROT_DRIEDN,
                Ie[SPRITE.DRIED_TOMATO_MINI] = [],
                Ie[SPRITE.DRIED_TOMATO_MINI][SPRITE.DAY] = P.TOMATO_MINI_DRIEDD,
                Ie[SPRITE.DRIED_TOMATO_MINI][SPRITE.NIGHT] = P.TOMATO_MINI_DRIEDN,
                Ie[ItemType.WATERMELON] = [],
                Ie[ItemType.WATERMELON][SPRITE.DAY] = P.WATERMELOND,
                Ie[ItemType.WATERMELON][SPRITE.NIGHT] = P.WATERMELONN,
                Ie[SPRITE.DRIED_WATERMELON] = [],
                Ie[SPRITE.DRIED_WATERMELON][SPRITE.DAY] = P.DRIED_WATERMELOND,
                Ie[SPRITE.DRIED_WATERMELON][SPRITE.NIGHT] = P.DRIED_WATERMELONN,
                Ie[ItemType.ALOE_VERA] = [],
                Ie[ItemType.ALOE_VERA][SPRITE.DAY] = P.ALOE_VERA_GROWND,
                Ie[ItemType.ALOE_VERA][SPRITE.NIGHT] = P.ALOE_VERA_GROWNN,
                Ie[SPRITE.DRIED_ALOE_VERA] = [],
                Ie[SPRITE.DRIED_ALOE_VERA][SPRITE.DAY] = P.ALOE_VERA_DRIEDD,
                Ie[SPRITE.DRIED_ALOE_VERA][SPRITE.NIGHT] = P.ALOE_VERAN_DRIEDN,
                Ie[SPRITE.CACTUS] = [],
                Ie[SPRITE.CACTUS][SPRITE.DAY] = [P.CACTUSD],
                Ie[SPRITE.CACTUS][SPRITE.NIGHT] = [P.CACTUSN],
                Ie[ItemType.REIDITE_WALL] = [],
                Ie[ItemType.REIDITE_WALL][SPRITE.DAY] = P.REIDITE_WALLD,
                Ie[ItemType.REIDITE_WALL][SPRITE.NIGHT] = P.REIDITE_WALLN,
                Ie[ItemType.REIDITE_SPIKE] = [],
                Ie[ItemType.REIDITE_SPIKE][SPRITE.DAY] = P.REIDITE_SPIKED,
                Ie[ItemType.REIDITE_SPIKE][SPRITE.NIGHT] = P.REIDITE_SPIKEN,
                Ie[ItemType.REIDITE_DOOR] = [],
                Ie[ItemType.REIDITE_DOOR][SPRITE.DAY] = P.REIDITE_DOORD,
                Ie[ItemType.REIDITE_DOOR][SPRITE.NIGHT] = P.REIDITE_DOORN,
                Ie[ItemType.WOOD_DOOR_SPIKE] = [],
                Ie[ItemType.WOOD_DOOR_SPIKE][SPRITE.DAY] = P.WOOD_DOOR_SPIKED,
                Ie[ItemType.WOOD_DOOR_SPIKE][SPRITE.NIGHT] = P.WOOD_DOOR_SPIKEN,
                Ie[ItemType.STONE_DOOR_SPIKE] = [],
                Ie[ItemType.STONE_DOOR_SPIKE][SPRITE.DAY] = P.STONE_DOOR_SPIKED,
                Ie[ItemType.STONE_DOOR_SPIKE][SPRITE.NIGHT] = P.STONE_DOOR_SPIKEN,
                Ie[ItemType.GOLD_DOOR_SPIKE] = [],
                Ie[ItemType.GOLD_DOOR_SPIKE][SPRITE.DAY] = P.GOLD_DOOR_SPIKED,
                Ie[ItemType.GOLD_DOOR_SPIKE][SPRITE.NIGHT] = P.GOLD_DOOR_SPIKEN,
                Ie[ItemType.DIAMOND_DOOR_SPIKE] = [],
                Ie[ItemType.DIAMOND_DOOR_SPIKE][SPRITE.DAY] = P.DIAMOND_DOOR_SPIKED,
                Ie[ItemType.DIAMOND_DOOR_SPIKE][SPRITE.NIGHT] = P.DIAMOND_DOOR_SPIKEN,
                Ie[ItemType.AMETHYST_DOOR_SPIKE] = [],
                Ie[ItemType.AMETHYST_DOOR_SPIKE][SPRITE.DAY] = P.AMETHYST_DOOR_SPIKED,
                Ie[ItemType.AMETHYST_DOOR_SPIKE][SPRITE.NIGHT] = P.AMETHYST_DOOR_SPIKEN,
                Ie[ItemType.REIDITE_DOOR_SPIKE] = [],
                Ie[ItemType.REIDITE_DOOR_SPIKE][SPRITE.DAY] = P.REIDITE_DOOR_SPIKED,
                Ie[ItemType.REIDITE_DOOR_SPIKE][SPRITE.NIGHT] = P.REIDITE_DOOR_SPIKEN,
                Ie[SPRITE.GOLDEN_HEN] = [],
                Ie[SPRITE.GOLDEN_HEN][SPRITE.DAY] = P.HEND,
                Ie[SPRITE.GOLDEN_HEN][SPRITE.NIGHT] = P.HENN,
                Ie[SPRITE.GOLDEN_CHICKEN] = [],
                Ie[SPRITE.GOLDEN_CHICKEN][SPRITE.DAY] = P.CHICKEND,
                Ie[SPRITE.GOLDEN_CHICKEN][SPRITE.NIGHT] = P.CHICKENN,
                Ie[ItemType.REIDITE_HAMMER] = [],
                Ie[ItemType.REIDITE_HAMMER][SPRITE.DAY] = P.HAMMER_REIDITED,
                Ie[ItemType.REIDITE_HAMMER][SPRITE.NIGHT] = P.HAMMER_REIDITEN,
                Ie[SPRITE.HURT_GOLDEN_HEN] = P.HURT_GOLDEN_HEN,
                Ie[SPRITE.HURT_GOLDEN_CHICKEN] = P.HURT_GOLDEN_CHICKEN,
                Ie[SPRITE.FOG] = [],
                Ie[SPRITE.FOG][SPRITE.DAY] = [],
                Ie[SPRITE.FOG][SPRITE.NIGHT] = [],
                Ie[SPRITE.FOG][SPRITE.DAY].push(P.FOG0D),
                Ie[SPRITE.FOG][SPRITE.DAY].push(P.FOG1D),
                Ie[SPRITE.FOG][SPRITE.DAY].push(P.FOG2D),
                Ie[SPRITE.FOG][SPRITE.NIGHT].push(P.FOG0N),
                Ie[SPRITE.FOG][SPRITE.NIGHT].push(P.FOG1N),
                Ie[SPRITE.FOG][SPRITE.NIGHT].push(P.FOG2N),
                Ie[SPRITE.FOD] = [],
                Ie[SPRITE.FOD][SPRITE.DAY] = [],
                Ie[SPRITE.FOD][SPRITE.NIGHT] = [],
                Ie[SPRITE.FOD][SPRITE.DAY].push(P.FOD0D),
                Ie[SPRITE.FOD][SPRITE.DAY].push(P.FOD1D),
                Ie[SPRITE.FOD][SPRITE.DAY].push(P.FOD2D),
                Ie[SPRITE.FOD][SPRITE.NIGHT].push(P.FOD0N),
                Ie[SPRITE.FOD][SPRITE.NIGHT].push(P.FOD1N),
                Ie[SPRITE.FOD][SPRITE.NIGHT].push(P.FOD2N),
                Ie[SPRITE.MARKER] = [],
                Ie[SPRITE.MARKER][SPRITE.DAY] = [],
                Ie[SPRITE.MARKER][SPRITE.NIGHT] = [],
                Ie[SPRITE.MARKER][SPRITE.DAY].push(P.MARKER0D),
                Ie[SPRITE.MARKER][SPRITE.DAY].push(P.MARKER1D),
                Ie[SPRITE.MARKER][SPRITE.DAY].push(P.MARKER2D),
                Ie[SPRITE.MARKER][SPRITE.DAY].push(P.MARKER3D),
                Ie[SPRITE.MARKER][SPRITE.NIGHT].push(P.MARKER0N),
                Ie[SPRITE.MARKER][SPRITE.NIGHT].push(P.MARKER1N),
                Ie[SPRITE.MARKER][SPRITE.NIGHT].push(P.MARKER2N),
                Ie[SPRITE.MARKER][SPRITE.NIGHT].push(P.MARKER3N),
                Ie[SPRITE.LAVA_DRAGON] = [],
                Ie[SPRITE.LAVA_DRAGON][SPRITE.DAY] = P.LAVA_DRAGOND,
                Ie[SPRITE.LAVA_DRAGON][SPRITE.NIGHT] = P.LAVA_DRAGONN,
                Ie[SPRITE.LAVA_WING_LEFT] = [],
                Ie[SPRITE.LAVA_WING_LEFT][SPRITE.DAY] = P.LAVA_WING_LEFTD,
                Ie[SPRITE.LAVA_WING_LEFT][SPRITE.NIGHT] = P.LAVA_WING_LEFTN,
                Ie[SPRITE.LAVA_WING_RIGHT] = [],
                Ie[SPRITE.LAVA_WING_RIGHT][SPRITE.DAY] = P.LAVA_WING_RIGHTD,
                Ie[SPRITE.LAVA_WING_RIGHT][SPRITE.NIGHT] = P.LAVA_WING_RIGHTN,
                Ie[SPRITE.HURT_LAVA_DRAGON] = P.HURT_LAVA_DRAGON,
                Ie[SPRITE.HURT_LAVA_WING_LEFT] = P.HURT_LAVA_WING_LEFT,
                Ie[SPRITE.HURT_LAVA_WING_RIGHT] = P.HURT_LAVA_WING_RIGHT,
                Ie[ItemType.DIAMOND_PROTECTION] = [],
                Ie[ItemType.DIAMOND_PROTECTION][SPRITE.DAY] = P.DIAMOND_PROTECTIOND,
                Ie[ItemType.DIAMOND_PROTECTION][SPRITE.NIGHT] = P.DIAMOND_PROTECTIONN,
                Ie[SPRITE.GLOVES_DIAMOND_PROTECTION] = [],
                Ie[SPRITE.GLOVES_DIAMOND_PROTECTION][SPRITE.DAY] = P.HAND_DIAMOND_PROTECTIOND,
                Ie[SPRITE.GLOVES_DIAMOND_PROTECTION][SPRITE.NIGHT] = P.HAND_DIAMOND_PROTECTIONN,
                Ie[ItemType.AMETHYST_PROTECTION] = [],
                Ie[ItemType.AMETHYST_PROTECTION][SPRITE.DAY] = P.AMETHYST_PROTECTIOND,
                Ie[ItemType.AMETHYST_PROTECTION][SPRITE.NIGHT] = P.AMETHYST_PROTECTIONN,
                Ie[SPRITE.GLOVES_AMETHYST_PROTECTION] = [],
                Ie[SPRITE.GLOVES_AMETHYST_PROTECTION][SPRITE.DAY] = P.HAND_DIAMOND_PROTECTIOND,
                Ie[SPRITE.GLOVES_AMETHYST_PROTECTION][SPRITE.NIGHT] = P.HAND_DIAMOND_PROTECTIONN,
                Ie[ItemType.REIDITE_HELMET] = [],
                Ie[ItemType.REIDITE_HELMET][SPRITE.DAY] = P.REIDITE_HELMETD,
                Ie[ItemType.REIDITE_HELMET][SPRITE.NIGHT] = P.REIDITE_HELMETN,
                Ie[ItemType.REIDITE_SWORD] = [],
                Ie[ItemType.REIDITE_SWORD][SPRITE.DAY] = P.REIDITE_SWORDD,
                Ie[ItemType.REIDITE_SWORD][SPRITE.NIGHT] = P.REIDITE_SWORDN,
                Ie[ItemType.REIDITE_SPEAR] = [],
                Ie[ItemType.REIDITE_SPEAR][SPRITE.DAY] = P.REIDITE_SPEARD,
                Ie[ItemType.REIDITE_SPEAR][SPRITE.NIGHT] = P.REIDITE_SPEARN,
                Ie[ItemType.LAVA_SPEAR] = [],
                Ie[ItemType.LAVA_SPEAR][SPRITE.DAY] = P.LAVA_SPEARD,
                Ie[ItemType.LAVA_SPEAR][SPRITE.NIGHT] = P.LAVA_SPEARN,
                Ie[ItemType.LAVA_SWORD] = [],
                Ie[ItemType.LAVA_SWORD][SPRITE.DAY] = P.LAVA_SWORDD,
                Ie[ItemType.LAVA_SWORD][SPRITE.NIGHT] = P.LAVA_SWORDN,
                Ie[ItemType.LAVA_HELMET] = [],
                Ie[ItemType.LAVA_HELMET][SPRITE.DAY] = P.LAVA_HELMETD,
                Ie[ItemType.LAVA_HELMET][SPRITE.NIGHT] = P.LAVA_HELMETN,
                Ie[ItemType.WITCH_HAT] = [],
                Ie[ItemType.WITCH_HAT][SPRITE.DAY] = P.WITCHD,
                Ie[ItemType.WITCH_HAT][SPRITE.NIGHT] = P.WITCHN,
                Ie[ItemType.NIMBUS] = [],
                Ie[ItemType.NIMBUS][SPRITE.DAY] = P.NIMBUSD,
                Ie[ItemType.NIMBUS][SPRITE.NIGHT] = P.NIMBUSN,
                Ie[ItemType.WOOD_SHIELD] = [],
                Ie[ItemType.WOOD_SHIELD][SPRITE.DAY] = P.WOOD_SHIELDD,
                Ie[ItemType.WOOD_SHIELD][SPRITE.NIGHT] = P.WOOD_SHIELDN,
                Ie[ItemType.STONE_SHIELD] = [],
                Ie[ItemType.STONE_SHIELD][SPRITE.DAY] = P.STONE_SHIELDD,
                Ie[ItemType.STONE_SHIELD][SPRITE.NIGHT] = P.STONE_SHIELDN,
                Ie[ItemType.GOLD_SHIELD] = [],
                Ie[ItemType.GOLD_SHIELD][SPRITE.DAY] = P.GOLD_SHIELDD,
                Ie[ItemType.GOLD_SHIELD][SPRITE.NIGHT] = P.GOLD_SHIELDN,
                Ie[ItemType.DIAMOND_SHIELD] = [],
                Ie[ItemType.DIAMOND_SHIELD][SPRITE.DAY] = P.DIAMOND_SHIELDD,
                Ie[ItemType.DIAMOND_SHIELD][SPRITE.NIGHT] = P.DIAMOND_SHIELDN,
                Ie[ItemType.AMETHYST_SHIELD] = [],
                Ie[ItemType.AMETHYST_SHIELD][SPRITE.DAY] = P.AMETHYST_SHIELDD,
                Ie[ItemType.AMETHYST_SHIELD][SPRITE.NIGHT] = P.AMETHYST_SHIELDN,
                Ie[ItemType.REIDITE_SHIELD] = [],
                Ie[ItemType.REIDITE_SHIELD][SPRITE.DAY] = P.REIDITE_SHIELDD,
                Ie[ItemType.REIDITE_SHIELD][SPRITE.NIGHT] = P.REIDITE_SHIELDN,
                Ie[ItemType.WOOD_ARROW] = [],
                Ie[ItemType.WOOD_ARROW][SPRITE.DAY] = P.WOOD_ARROWD,
                Ie[ItemType.WOOD_ARROW][SPRITE.NIGHT] = P.WOOD_ARROWN,
                Ie[ItemType.WOOD_BOW] = [],
                Ie[ItemType.WOOD_BOW][SPRITE.DAY] = P.WOOD_BOWD,
                Ie[ItemType.WOOD_BOW][SPRITE.NIGHT] = P.WOOD_BOWN,
                Ie[ItemType.STONE_ARROW] = [],
                Ie[ItemType.STONE_ARROW][SPRITE.DAY] = P.STONE_ARROWD,
                Ie[ItemType.STONE_ARROW][SPRITE.NIGHT] = P.STONE_ARROWN,
                Ie[ItemType.STONE_BOW] = [],
                Ie[ItemType.STONE_BOW][SPRITE.DAY] = P.STONE_BOWD,
                Ie[ItemType.STONE_BOW][SPRITE.NIGHT] = P.STONE_BOWN,
                Ie[ItemType.GOLD_ARROW] = [],
                Ie[ItemType.GOLD_ARROW][SPRITE.DAY] = P.GOLD_ARROWD,
                Ie[ItemType.GOLD_ARROW][SPRITE.NIGHT] = P.GOLD_ARROWN,
                Ie[ItemType.GOLD_BOW] = [],
                Ie[ItemType.GOLD_BOW][SPRITE.DAY] = P.GOLD_BOWD,
                Ie[ItemType.GOLD_BOW][SPRITE.NIGHT] = P.GOLD_BOWN,
                Ie[ItemType.DIAMOND_ARROW] = [],
                Ie[ItemType.DIAMOND_ARROW][SPRITE.DAY] = P.DIAMOND_ARROWD,
                Ie[ItemType.DIAMOND_ARROW][SPRITE.NIGHT] = P.DIAMOND_ARROWN,
                Ie[ItemType.DIAMOND_BOW] = [],
                Ie[ItemType.DIAMOND_BOW][SPRITE.DAY] = P.DIAMOND_BOWD,
                Ie[ItemType.DIAMOND_BOW][SPRITE.NIGHT] = P.DIAMOND_BOWN,
                Ie[ItemType.AMETHYST_ARROW] = [],
                Ie[ItemType.AMETHYST_ARROW][SPRITE.DAY] = P.AMETHYST_ARROWD,
                Ie[ItemType.AMETHYST_ARROW][SPRITE.NIGHT] = P.AMETHYST_ARROWN,
                Ie[ItemType.AMETHYST_BOW] = [],
                Ie[ItemType.AMETHYST_BOW][SPRITE.DAY] = P.AMETHYST_BOWD,
                Ie[ItemType.AMETHYST_BOW][SPRITE.NIGHT] = P.AMETHYST_BOWN,
                Ie[ItemType.REIDITE_ARROW] = [],
                Ie[ItemType.REIDITE_ARROW][SPRITE.DAY] = P.REIDITE_ARROWD,
                Ie[ItemType.REIDITE_ARROW][SPRITE.NIGHT] = P.REIDITE_ARROWN,
                Ie[ItemType.REIDITE_BOW] = [],
                Ie[ItemType.REIDITE_BOW][SPRITE.DAY] = P.REIDITE_BOWD,
                Ie[ItemType.REIDITE_BOW][SPRITE.NIGHT] = P.REIDITE_BOWN,
                Ie[ItemType.DRAGON_ARROW] = [],
                Ie[ItemType.DRAGON_ARROW][SPRITE.DAY] = P.DRAGON_ARROWD,
                Ie[ItemType.DRAGON_ARROW][SPRITE.NIGHT] = P.DRAGON_ARROWN,
                Ie[ItemType.DRAGON_BOW] = [],
                Ie[ItemType.DRAGON_BOW][SPRITE.DAY] = P.DRAGON_BOWD,
                Ie[ItemType.DRAGON_BOW][SPRITE.NIGHT] = P.DRAGON_BOWN,
                Ie[ItemType.TURBAN1] = [],
                Ie[ItemType.TURBAN1][SPRITE.DAY] = P.TURBAN1D,
                Ie[ItemType.TURBAN1][SPRITE.NIGHT] = P.TURBAN1N,
                Ie[ItemType.TURBAN2] = [],
                Ie[ItemType.TURBAN2][SPRITE.DAY] = P.TURBAN2D,
                Ie[ItemType.TURBAN2][SPRITE.NIGHT] = P.TURBAN2N,
                Ie[ItemType.REIDITE_PROTECTION] = [],
                Ie[ItemType.REIDITE_PROTECTION][SPRITE.DAY] = P.REIDITE_PROTECTIOND,
                Ie[ItemType.REIDITE_PROTECTION][SPRITE.NIGHT] = P.REIDITE_PROTECTIONN,
                Ie[SPRITE.GLOVES_REIDITE_PROTECTION] = [],
                Ie[SPRITE.GLOVES_REIDITE_PROTECTION][SPRITE.DAY] = P.HAND_REIDITE_PROTECTIOND,
                Ie[SPRITE.GLOVES_REIDITE_PROTECTION][SPRITE.NIGHT] = P.HAND_REIDITE_PROTECTIONN,
                Ie[SPRITE.LAVA_BUBBLE] = [],
                Ie[SPRITE.LAVA_BUBBLE][SPRITE.DAY] = [],
                Ie[SPRITE.LAVA_BUBBLE][SPRITE.NIGHT] = [],
                Ie[SPRITE.LAVA_BUBBLE][SPRITE.DAY].push(P.LAVA_BUBLE0D),
                Ie[SPRITE.LAVA_BUBBLE][SPRITE.DAY].push(P.LAVA_BUBLE1D),
                Ie[SPRITE.LAVA_BUBBLE][SPRITE.DAY].push(P.LAVA_BUBLE2D),
                Ie[SPRITE.LAVA_BUBBLE][SPRITE.NIGHT].push(P.LAVA_BUBLE0N),
                Ie[SPRITE.LAVA_BUBBLE][SPRITE.NIGHT].push(P.LAVA_BUBLE1N),
                Ie[SPRITE.LAVA_BUBBLE][SPRITE.NIGHT].push(P.LAVA_BUBLE2N),
                Ie[ItemType.PITCHFORK] = [],
                Ie[ItemType.PITCHFORK][SPRITE.DAY] = P.PITCHFORKD,
                Ie[ItemType.PITCHFORK][SPRITE.NIGHT] = P.PITCHFORKN,
                Ie[ItemType.GOLD_PITCHFORK] = [],
                Ie[ItemType.GOLD_PITCHFORK][SPRITE.DAY] = P.PITCHFORK2D,
                Ie[ItemType.GOLD_PITCHFORK][SPRITE.NIGHT] = P.PITCHFORK2N,
                Ie[ItemType.YUSUKEDAO_ITEM1] = [],
                Ie[ItemType.YUSUKEDAO_ITEM1][SPRITE.DAY] = P.YUSUKEDAO_ITEM1D,
                Ie[ItemType.YUSUKEDAO_ITEM1][SPRITE.NIGHT] = P.YUSUKEDAO_ITEM1N,
                Ie[ItemType.YUSUKEDAO_ITEM2] = [],
                Ie[ItemType.YUSUKEDAO_ITEM2][SPRITE.DAY] = P.YUSUKEDAO_ITEM2D,
                Ie[ItemType.YUSUKEDAO_ITEM2][SPRITE.NIGHT] = P.YUSUKEDAO_ITEM2N,
                Ie[ItemType.EMERALD] = [],
                Ie[ItemType.EMERALD][SPRITE.DAY] = [],
                Ie[ItemType.EMERALD][SPRITE.NIGHT] = [],
                Ie[ItemType.EMERALD][SPRITE.DAY].push(P.EMERALD0D),
                Ie[ItemType.EMERALD][SPRITE.DAY].push(P.EMERALD1D),
                Ie[ItemType.EMERALD][SPRITE.DAY].push(P.EMERALD2D),
                Ie[ItemType.EMERALD][SPRITE.NIGHT].push(P.EMERALD0N),
                Ie[ItemType.EMERALD][SPRITE.NIGHT].push(P.EMERALD1N),
                Ie[ItemType.EMERALD][SPRITE.NIGHT].push(P.EMERALD2N),
                Ie[ItemType.REIDITE] = [],
                Ie[ItemType.REIDITE][SPRITE.DAY] = [],
                Ie[ItemType.REIDITE][SPRITE.NIGHT] = [],
                Ie[ItemType.REIDITE][SPRITE.DAY].push(P.REIDITE0D),
                Ie[ItemType.REIDITE][SPRITE.DAY].push(P.REIDITE1D),
                Ie[ItemType.REIDITE][SPRITE.DAY].push(P.REIDITE2D),
                Ie[ItemType.REIDITE][SPRITE.NIGHT].push(P.REIDITE0N),
                Ie[ItemType.REIDITE][SPRITE.NIGHT].push(P.REIDITE1N),
                Ie[ItemType.REIDITE][SPRITE.NIGHT].push(P.REIDITE2N),
                Ie[SPRITE.MAGMA] = [],
                Ie[SPRITE.MAGMA][SPRITE.DAY] = [],
                Ie[SPRITE.MAGMA][SPRITE.NIGHT] = [],
                Ie[SPRITE.MAGMA][SPRITE.DAY].push(P.MAGMA1D),
                Ie[SPRITE.MAGMA][SPRITE.DAY].push(P.MAGMA2D),
                Ie[SPRITE.MAGMA][SPRITE.DAY].push(P.MAGMA3D),
                Ie[SPRITE.MAGMA][SPRITE.DAY].push(P.MAGMA4D),
                Ie[SPRITE.MAGMA][SPRITE.DAY].push(P.MAGMA5D),
                Ie[SPRITE.MAGMA][SPRITE.DAY].push(P.MAGMA6D),
                Ie[SPRITE.MAGMA][SPRITE.NIGHT].push(P.MAGMA1N),
                Ie[SPRITE.MAGMA][SPRITE.NIGHT].push(P.MAGMA2N),
                Ie[SPRITE.MAGMA][SPRITE.NIGHT].push(P.MAGMA3N),
                Ie[SPRITE.MAGMA][SPRITE.NIGHT].push(P.MAGMA4N),
                Ie[SPRITE.MAGMA][SPRITE.NIGHT].push(P.MAGMA5N),
                Ie[SPRITE.MAGMA][SPRITE.NIGHT].push(P.MAGMA6N),
                Ie[SPRITE.LAVA_GROUND] = [],
                Ie[SPRITE.LAVA_GROUND][SPRITE.DAY] = [],
                Ie[SPRITE.LAVA_GROUND][SPRITE.NIGHT] = [],
                Ie[SPRITE.LAVA_GROUND][SPRITE.DAY].push(P.LAVA_GROUND1D),
                Ie[SPRITE.LAVA_GROUND][SPRITE.DAY].push(P.LAVA_GROUND2D),
                Ie[SPRITE.LAVA_GROUND][SPRITE.DAY].push(P.LAVA_GROUND3D),
                Ie[SPRITE.LAVA_GROUND][SPRITE.DAY].push(P.LAVA_GROUND4D),
                Ie[SPRITE.LAVA_GROUND][SPRITE.DAY].push(P.LAVA_GROUND5D),
                Ie[SPRITE.LAVA_GROUND][SPRITE.DAY].push(P.LAVA_GROUND6D),
                Ie[SPRITE.LAVA_GROUND][SPRITE.NIGHT].push(P.LAVA_GROUND1N),
                Ie[SPRITE.LAVA_GROUND][SPRITE.NIGHT].push(P.LAVA_GROUND2N),
                Ie[SPRITE.LAVA_GROUND][SPRITE.NIGHT].push(P.LAVA_GROUND3N),
                Ie[SPRITE.LAVA_GROUND][SPRITE.NIGHT].push(P.LAVA_GROUND4N),
                Ie[SPRITE.LAVA_GROUND][SPRITE.NIGHT].push(P.LAVA_GROUND5N),
                Ie[SPRITE.LAVA_GROUND][SPRITE.NIGHT].push(P.LAVA_GROUND6N),
                Ie[SPRITE.FIRE_MOB] = [],
                Ie[SPRITE.FIRE_MOB][SPRITE.DAY] = P.FIRE_MOBD,
                Ie[SPRITE.FIRE_MOB][SPRITE.NIGHT] = P.FIRE_MOBN,
                Ie[SPRITE.HURT_FIRE_MOB] = P.FIRE_MOB_HURT,
                Ie[ItemType.MACHETE] = [],
                Ie[ItemType.MACHETE][SPRITE.DAY] = P.MACHETED,
                Ie[ItemType.MACHETE][SPRITE.NIGHT] = P.MACHETEN,
                Ie[ItemType.BOAT] = [],
                Ie[ItemType.BOAT][SPRITE.DAY] = P.BOATD,
                Ie[ItemType.BOAT][SPRITE.NIGHT] = P.BOATN,
                Ie[ItemType.SLED] = [],
                Ie[ItemType.SLED][SPRITE.DAY] = P.SLEDD,
                Ie[ItemType.SLED][SPRITE.NIGHT] = P.SLEDN,
                Ie[ItemType.PLANE] = [],
                Ie[ItemType.PLANE][SPRITE.DAY] = P.PLANED,
                Ie[ItemType.PLANE][SPRITE.NIGHT] = P.PLANEN,
                Ie[SPRITE.PENGUIN] = [],
                Ie[SPRITE.PENGUIN][SPRITE.DAY] = P.PENGUIND,
                Ie[SPRITE.PENGUIN][SPRITE.NIGHT] = P.PENGUINN,
                Ie[SPRITE.HURT_PENGUIN] = P.HURT_PENGUIN,
                Ie[SPRITE.SAND_WORM1] = [],
                Ie[SPRITE.SAND_WORM1][SPRITE.DAY] = P.SAND_WORM1D,
                Ie[SPRITE.SAND_WORM1][SPRITE.NIGHT] = P.SAND_WORM1N,
                Ie[SPRITE.SAND_WORM2] = [],
                Ie[SPRITE.SAND_WORM2][SPRITE.DAY] = P.SAND_WORM2D,
                Ie[SPRITE.SAND_WORM2][SPRITE.NIGHT] = P.SAND_WORM2N,
                Ie[SPRITE.HURT_SAND_WORM0] = P.HURT_SAND_WORM0,
                Ie[SPRITE.HURT_SAND_WORM1] = P.HURT_SAND_WORM1,
                Ie[SPRITE.HURT_SAND_WORM2] = P.HURT_SAND_WORM2,
                Ie[SPRITE.SCORPION] = [],
                Ie[SPRITE.SCORPION][SPRITE.DAY] = P.SCORPIOND,
                Ie[SPRITE.SCORPION][SPRITE.NIGHT] = P.SCORPIONN,
                Ie[SPRITE.SCORPION_HAND_LEFT] = [],
                Ie[SPRITE.SCORPION_HAND_LEFT][SPRITE.DAY] = P.SCORPION_HAND_LEFTD,
                Ie[SPRITE.SCORPION_HAND_LEFT][SPRITE.NIGHT] = P.SCORPION_HAND_LEFTN,
                Ie[SPRITE.SCORPION_HAND_RIGHT] = [],
                Ie[SPRITE.SCORPION_HAND_RIGHT][SPRITE.DAY] = P.SCORPION_HAND_RIGHTD,
                Ie[SPRITE.SCORPION_HAND_RIGHT][SPRITE.NIGHT] = P.SCORPION_HAND_RIGHTN,
                Ie[SPRITE.HURT_SCORPION] = P.HURT_SCORPION,
                Ie[SPRITE.HURT_SCORPION_HAND_RIGHT] = P.HURT_SCORPION_HAND_RIGHT,
                Ie[SPRITE.HURT_SCORPION_HAND_LEFT] = P.HURT_SCORPION_HAND_LEFT,
                Ie[SPRITE.CRAB_BOSS_ATTACK] = [],
                Ie[SPRITE.CRAB_BOSS_ATTACK][SPRITE.DAY] = P.CRAB_BOSS_ATTACKD,
                Ie[SPRITE.CRAB_BOSS_ATTACK][SPRITE.NIGHT] = P.CRAB_BOSS_ATTACKN,
                Ie[SPRITE.CRAB_BOSS_TAMED] = [],
                Ie[SPRITE.CRAB_BOSS_TAMED][SPRITE.DAY] = P.CRAB_BOSS_TAMEDD,
                Ie[SPRITE.CRAB_BOSS_TAMED][SPRITE.NIGHT] = P.CRAB_BOSS_TAMEDN,
                Ie[SPRITE.CRAB_BOSS] = [],
                Ie[SPRITE.CRAB_BOSS][SPRITE.DAY] = P.CRAB_BOSSD,
                Ie[SPRITE.CRAB_BOSS][SPRITE.NIGHT] = P.CRAB_BOSSN,
                Ie[SPRITE.CRAB_BOSS_CLAW_LEFT] = [],
                Ie[SPRITE.CRAB_BOSS_CLAW_LEFT][SPRITE.DAY] = P.CRAB_BOSS_CLAW_LEFTD,
                Ie[SPRITE.CRAB_BOSS_CLAW_LEFT][SPRITE.NIGHT] = P.CRAB_BOSS_CLAW_LEFTN,
                Ie[SPRITE.CRAB_BOSS_CLAW_RIGHT] = [],
                Ie[SPRITE.CRAB_BOSS_CLAW_RIGHT][SPRITE.DAY] = P.CRAB_BOSS_CLAW_RIGHTD,
                Ie[SPRITE.CRAB_BOSS_CLAW_RIGHT][SPRITE.NIGHT] = P.CRAB_BOSS_CLAW_RIGHTN,
                Ie[SPRITE.CRAB_BOSS_CLAW_LEFT_ATTACK] = [],
                Ie[SPRITE.CRAB_BOSS_CLAW_LEFT_ATTACK][SPRITE.DAY] = P.CRAB_BOSS_CLAW_LEFT_ATTACKD,
                Ie[SPRITE.CRAB_BOSS_CLAW_LEFT_ATTACK][SPRITE.NIGHT] = P.CRAB_BOSS_CLAW_LEFT_ATTACKN,
                Ie[SPRITE.CRAB_BOSS_CLAW_RIGHT_ATTACK] = [],
                Ie[SPRITE.CRAB_BOSS_CLAW_RIGHT_ATTACK][SPRITE.DAY] = P.CRAB_BOSS_CLAW_RIGHT_ATTACKD,
                Ie[SPRITE.CRAB_BOSS_CLAW_RIGHT_ATTACK][SPRITE.NIGHT] = P.CRAB_BOSS_CLAW_RIGHT_ATTACKN,
                Ie[SPRITE.HURT_CRAB_BOSS] = P.HURT_CRAB_BOSS,
                Ie[SPRITE.HURT_CRAB_BOSS_CLAW_LEFT] = P.HURT_CRAB_BOSS_CLAW_LEFT,
                Ie[SPRITE.HURT_CRAB_BOSS_CLAW_RIGHT] = P.HURT_CRAB_BOSS_CLAW_RIGHT,
                Ie[SPRITE.HEAL_CRAB_BOSS] = P.HEAL_CRAB_BOSS,
                Ie[SPRITE.HEAL_CRAB_BOSS_CLAW_LEFT] = P.HEAL_CRAB_BOSS_CLAW_LEFT,
                Ie[SPRITE.HEAL_CRAB_BOSS_CLAW_RIGHT] = P.HEAL_CRAB_BOSS_CLAW_RIGHT,
                Ie[SPRITE.BABY_MAMMOTH_ATTACK] = [],
                Ie[SPRITE.BABY_MAMMOTH_ATTACK][SPRITE.DAY] = P.BABY_MAMMOTH_ATTACKD,
                Ie[SPRITE.BABY_MAMMOTH_ATTACK][SPRITE.NIGHT] = P.BABY_MAMMOTH_ATTACKN,
                Ie[SPRITE.BABY_MAMMOTH] = [],
                Ie[SPRITE.BABY_MAMMOTH][SPRITE.DAY] = P.BABY_MAMMOTHD,
                Ie[SPRITE.BABY_MAMMOTH][SPRITE.NIGHT] = P.BABY_MAMMOTHN,
                Ie[SPRITE.MAMMOTH] = [],
                Ie[SPRITE.MAMMOTH][SPRITE.DAY] = P.MAMMOTHD,
                Ie[SPRITE.MAMMOTH][SPRITE.NIGHT] = P.MAMMOTHN,
                Ie[SPRITE.BABY_MAMMOTH_TAMED] = [],
                Ie[SPRITE.BABY_MAMMOTH_TAMED][SPRITE.DAY] = P.BABY_MAMMOTH_TAMEDD,
                Ie[SPRITE.BABY_MAMMOTH_TAMED][SPRITE.NIGHT] = P.BABY_MAMMOTH_TAMEDN,
                Ie[SPRITE.HURT_BABY_MAMMOTH] = P.HURT_BABY_MAMMOTH,
                Ie[SPRITE.HURT_MAMMOTH] = P.HURT_MAMMOTH,
                Ie[SPRITE.BABY_DRAGON_ATTACK] = [],
                Ie[SPRITE.BABY_DRAGON_ATTACK][SPRITE.DAY] = P.BABY_DRAGON_ATTACKD,
                Ie[SPRITE.BABY_DRAGON_ATTACK][SPRITE.NIGHT] = P.BABY_DRAGON_ATTACKN,
                Ie[SPRITE.BABY_DRAGON] = [],
                Ie[SPRITE.BABY_DRAGON][SPRITE.DAY] = P.BABY_DRAGOND,
                Ie[SPRITE.BABY_DRAGON][SPRITE.NIGHT] = P.BABY_DRAGONN,
                Ie[SPRITE.BABY_DRAGON_TAMED] = [],
                Ie[SPRITE.BABY_DRAGON_TAMED][SPRITE.DAY] = P.BABY_DRAGON_TAMEDD,
                Ie[SPRITE.BABY_DRAGON_TAMED][SPRITE.NIGHT] = P.BABY_DRAGON_TAMEDN,
                Ie[SPRITE.BABY_DRAGON_WING_LEFT] = [],
                Ie[SPRITE.BABY_DRAGON_WING_LEFT][SPRITE.DAY] = P.BABY_DRAGON_WING_LEFTD,
                Ie[SPRITE.BABY_DRAGON_WING_LEFT][SPRITE.NIGHT] = P.BABY_DRAGON_WING_LEFTN,
                Ie[SPRITE.BABY_DRAGON_WING_RIGHT] = [],
                Ie[SPRITE.BABY_DRAGON_WING_RIGHT][SPRITE.DAY] = P.BABY_DRAGON_WING_RIGHTD,
                Ie[SPRITE.BABY_DRAGON_WING_RIGHT][SPRITE.NIGHT] = P.BABY_DRAGON_WING_RIGHTN,
                Ie[SPRITE.BABY_DRAGON_WING_LEFT_ATTACK] = [],
                Ie[SPRITE.BABY_DRAGON_WING_LEFT_ATTACK][SPRITE.DAY] = P.BABY_DRAGON_WING_LEFT_ATTACKD,
                Ie[SPRITE.BABY_DRAGON_WING_LEFT_ATTACK][SPRITE.NIGHT] = P.BABY_DRAGON_WING_LEFT_ATTACKN,
                Ie[SPRITE.BABY_DRAGON_WING_RIGHT_ATTACK] = [],
                Ie[SPRITE.BABY_DRAGON_WING_RIGHT_ATTACK][SPRITE.DAY] = P.BABY_DRAGON_WING_RIGHT_ATTACKD,
                Ie[SPRITE.BABY_DRAGON_WING_RIGHT_ATTACK][SPRITE.NIGHT] = P.BABY_DRAGON_WING_RIGHT_ATTACKN,
                Ie[SPRITE.BABY_DRAGON_WING_LEFT_TAMED] = [],
                Ie[SPRITE.BABY_DRAGON_WING_LEFT_TAMED][SPRITE.DAY] = P.BABY_DRAGON_WING_LEFT_TAMEDD,
                Ie[SPRITE.BABY_DRAGON_WING_LEFT_TAMED][SPRITE.NIGHT] = P.BABY_DRAGON_WING_LEFT_TAMEDN,
                Ie[SPRITE.BABY_DRAGON_WING_RIGHT_TAMED] = [],
                Ie[SPRITE.BABY_DRAGON_WING_RIGHT_TAMED][SPRITE.DAY] = P.BABY_DRAGON_WING_RIGHT_TAMEDD,
                Ie[SPRITE.BABY_DRAGON_WING_RIGHT_TAMED][SPRITE.NIGHT] = P.BABY_DRAGON_WING_RIGHT_TAMEDN,
                Ie[SPRITE.HURT_BABY_DRAGON] = P.HURT_BABY_DRAGON,
                Ie[SPRITE.HURT_BABY_DRAGON_WING_LEFT] = P.HURT_BABY_DRAGON_WING_LEFT,
                Ie[SPRITE.HURT_BABY_DRAGON_WING_RIGHT] = P.HURT_BABY_DRAGON_WING_RIGHT,
                Ie[SPRITE.BABY_LAVA_ATTACK] = [],
                Ie[SPRITE.BABY_LAVA_ATTACK][SPRITE.DAY] = P.BABY_LAVA_ATTACKD,
                Ie[SPRITE.BABY_LAVA_ATTACK][SPRITE.NIGHT] = P.BABY_LAVA_ATTACKN,
                Ie[SPRITE.BABY_LAVA] = [],
                Ie[SPRITE.BABY_LAVA][SPRITE.DAY] = P.BABY_LAVAD,
                Ie[SPRITE.BABY_LAVA][SPRITE.NIGHT] = P.BABY_LAVAN,
                Ie[SPRITE.BABY_LAVA_TAMED] = [],
                Ie[SPRITE.BABY_LAVA_TAMED][SPRITE.DAY] = P.BABY_LAVA_TAMEDD,
                Ie[SPRITE.BABY_LAVA_TAMED][SPRITE.NIGHT] = P.BABY_LAVA_TAMEDN,
                Ie[SPRITE.BABY_LAVA_WING_LEFT] = [],
                Ie[SPRITE.BABY_LAVA_WING_LEFT][SPRITE.DAY] = P.BABY_LAVA_WING_LEFTD,
                Ie[SPRITE.BABY_LAVA_WING_LEFT][SPRITE.NIGHT] = P.BABY_LAVA_WING_LEFTN,
                Ie[SPRITE.BABY_LAVA_WING_RIGHT] = [],
                Ie[SPRITE.BABY_LAVA_WING_RIGHT][SPRITE.DAY] = P.BABY_LAVA_WING_RIGHTD,
                Ie[SPRITE.BABY_LAVA_WING_RIGHT][SPRITE.NIGHT] = P.BABY_LAVA_WING_RIGHTN,
                Ie[SPRITE.BABY_LAVA_WING_LEFT_ATTACK] = [],
                Ie[SPRITE.BABY_LAVA_WING_LEFT_ATTACK][SPRITE.DAY] = P.BABY_LAVA_WING_LEFT_ATTACKD,
                Ie[SPRITE.BABY_LAVA_WING_LEFT_ATTACK][SPRITE.NIGHT] = P.BABY_LAVA_WING_LEFT_ATTACKN,
                Ie[SPRITE.BABY_LAVA_WING_RIGHT_ATTACK] = [],
                Ie[SPRITE.BABY_LAVA_WING_RIGHT_ATTACK][SPRITE.DAY] = P.BABY_LAVA_WING_RIGHT_ATTACKD,
                Ie[SPRITE.BABY_LAVA_WING_RIGHT_ATTACK][SPRITE.NIGHT] = P.BABY_LAVA_WING_RIGHT_ATTACKN,
                Ie[SPRITE.BABY_LAVA_WING_LEFT_TAMED] = [],
                Ie[SPRITE.BABY_LAVA_WING_LEFT_TAMED][SPRITE.DAY] = P.BABY_LAVA_WING_LEFT_TAMEDD,
                Ie[SPRITE.BABY_LAVA_WING_LEFT_TAMED][SPRITE.NIGHT] = P.BABY_LAVA_WING_LEFT_TAMEDN,
                Ie[SPRITE.BABY_LAVA_WING_RIGHT_TAMED] = [],
                Ie[SPRITE.BABY_LAVA_WING_RIGHT_TAMED][SPRITE.DAY] = P.BABY_LAVA_WING_RIGHT_TAMEDD,
                Ie[SPRITE.BABY_LAVA_WING_RIGHT_TAMED][SPRITE.NIGHT] = P.BABY_LAVA_WING_RIGHT_TAMEDN,
                Ie[SPRITE.HURT_BABY_LAVA] = P.HURT_BABY_LAVA,
                Ie[SPRITE.HURT_BABY_LAVA_WING_LEFT] = P.HURT_BABY_LAVA_WING_LEFT,
                Ie[SPRITE.HURT_BABY_LAVA_WING_RIGHT] = P.HURT_BABY_LAVA_WING_RIGHT,
                Ie[SPRITE.HAWK_ATTACK] = [],
                Ie[SPRITE.HAWK_ATTACK][SPRITE.DAY] = P.HAWK_ATTACKD,
                Ie[SPRITE.HAWK_ATTACK][SPRITE.NIGHT] = P.HAWK_ATTACKN,
                Ie[SPRITE.HAWK] = [],
                Ie[SPRITE.HAWK][SPRITE.DAY] = P.HAWKD,
                Ie[SPRITE.HAWK][SPRITE.NIGHT] = P.HAWKN,
                Ie[SPRITE.HURT_HAWK_GROUND] = P.HURT_HAWK_GROUND,
                Ie[SPRITE.HAWK_GROUND] = [],
                Ie[SPRITE.HAWK_GROUND][SPRITE.DAY] = P.HAWK_GROUNDD,
                Ie[SPRITE.HAWK_GROUND][SPRITE.NIGHT] = P.HAWK_GROUNDN,
                Ie[SPRITE.HAWK_GROUND_ATTACK] = [],
                Ie[SPRITE.HAWK_GROUND_ATTACK][SPRITE.DAY] = P.HAWK_GROUND_ATTACKD,
                Ie[SPRITE.HAWK_GROUND_ATTACK][SPRITE.NIGHT] = P.HAWK_GROUND_ATTACKN,
                Ie[SPRITE.HAWK_TAMED] = [],
                Ie[SPRITE.HAWK_TAMED][SPRITE.DAY] = P.HAWK_TAMEDD,
                Ie[SPRITE.HAWK_TAMED][SPRITE.NIGHT] = P.HAWK_TAMEDN,
                Ie[SPRITE.HAWK_WING_LEFT] = [],
                Ie[SPRITE.HAWK_WING_LEFT][SPRITE.DAY] = P.HAWK_WING_LEFTD,
                Ie[SPRITE.HAWK_WING_LEFT][SPRITE.NIGHT] = P.HAWK_WING_LEFTN,
                Ie[SPRITE.HAWK_WING_RIGHT] = [],
                Ie[SPRITE.HAWK_WING_RIGHT][SPRITE.DAY] = P.HAWK_WING_RIGHTD,
                Ie[SPRITE.HAWK_WING_RIGHT][SPRITE.NIGHT] = P.HAWK_WING_RIGHTN,
                Ie[SPRITE.HAWK_WING_LEFT_ATTACK] = [],
                Ie[SPRITE.HAWK_WING_LEFT_ATTACK][SPRITE.DAY] = P.HAWK_WING_LEFT_ATTACKD,
                Ie[SPRITE.HAWK_WING_LEFT_ATTACK][SPRITE.NIGHT] = P.HAWK_WING_LEFT_ATTACKN,
                Ie[SPRITE.HAWK_WING_RIGHT_ATTACK] = [],
                Ie[SPRITE.HAWK_WING_RIGHT_ATTACK][SPRITE.DAY] = P.HAWK_WING_RIGHT_ATTACKD,
                Ie[SPRITE.HAWK_WING_RIGHT_ATTACK][SPRITE.NIGHT] = P.HAWK_WING_RIGHT_ATTACKN,
                Ie[SPRITE.HAWK_WING_LEFT_TAMED] = [],
                Ie[SPRITE.HAWK_WING_LEFT_TAMED][SPRITE.DAY] = P.HAWK_WING_LEFT_TAMEDD,
                Ie[SPRITE.HAWK_WING_LEFT_TAMED][SPRITE.NIGHT] = P.HAWK_WING_LEFT_TAMEDN,
                Ie[SPRITE.HAWK_WING_RIGHT_TAMED] = [],
                Ie[SPRITE.HAWK_WING_RIGHT_TAMED][SPRITE.DAY] = P.HAWK_WING_RIGHT_TAMEDD,
                Ie[SPRITE.HAWK_WING_RIGHT_TAMED][SPRITE.NIGHT] = P.HAWK_WING_RIGHT_TAMEDN,
                Ie[SPRITE.HURT_HAWK] = P.HURT_HAWK,
                Ie[SPRITE.HURT_HAWK_WING_LEFT] = P.HURT_HAWK_WING_LEFT,
                Ie[SPRITE.HURT_HAWK_WING_RIGHT] = P.HURT_HAWK_WING_RIGHT,
                Ie[SPRITE.VULTURE_ATTACK] = [],
                Ie[SPRITE.VULTURE_ATTACK][SPRITE.DAY] = P.VULTURE_ATTACKD,
                Ie[SPRITE.VULTURE_ATTACK][SPRITE.NIGHT] = P.VULTURE_ATTACKN,
                Ie[SPRITE.VULTURE] = [],
                Ie[SPRITE.VULTURE][SPRITE.DAY] = P.VULTURED,
                Ie[SPRITE.VULTURE][SPRITE.NIGHT] = P.VULTUREN,
                Ie[SPRITE.HURT_VULTURE_GROUND] = P.HURT_VULTURE_GROUND,
                Ie[SPRITE.VULTURE_GROUND] = [],
                Ie[SPRITE.VULTURE_GROUND][SPRITE.DAY] = P.VULTURE_GROUNDD,
                Ie[SPRITE.VULTURE_GROUND][SPRITE.NIGHT] = P.VULTURE_GROUNDN,
                Ie[SPRITE.VULTURE_GROUND_ATTACK] = [],
                Ie[SPRITE.VULTURE_GROUND_ATTACK][SPRITE.DAY] = P.VULTURE_GROUND_ATTACKD,
                Ie[SPRITE.VULTURE_GROUND_ATTACK][SPRITE.NIGHT] = P.VULTURE_GROUND_ATTACKN,
                Ie[SPRITE.VULTURE_TAMED] = [],
                Ie[SPRITE.VULTURE_TAMED][SPRITE.DAY] = P.VULTURE_TAMEDD,
                Ie[SPRITE.VULTURE_TAMED][SPRITE.NIGHT] = P.VULTURE_TAMEDN,
                Ie[SPRITE.VULTURE_WING_LEFT] = [],
                Ie[SPRITE.VULTURE_WING_LEFT][SPRITE.DAY] = P.VULTURE_WING_LEFTD,
                Ie[SPRITE.VULTURE_WING_LEFT][SPRITE.NIGHT] = P.VULTURE_WING_LEFTN,
                Ie[SPRITE.VULTURE_WING_RIGHT] = [],
                Ie[SPRITE.VULTURE_WING_RIGHT][SPRITE.DAY] = P.VULTURE_WING_RIGHTD,
                Ie[SPRITE.VULTURE_WING_RIGHT][SPRITE.NIGHT] = P.VULTURE_WING_RIGHTN,
                Ie[SPRITE.VULTURE_WING_LEFT_ATTACK] = [],
                Ie[SPRITE.VULTURE_WING_LEFT_ATTACK][SPRITE.DAY] = P.VULTURE_WING_LEFT_ATTACKD,
                Ie[SPRITE.VULTURE_WING_LEFT_ATTACK][SPRITE.NIGHT] = P.VULTURE_WING_LEFT_ATTACKN,
                Ie[SPRITE.VULTURE_WING_RIGHT_ATTACK] = [],
                Ie[SPRITE.VULTURE_WING_RIGHT_ATTACK][SPRITE.DAY] = P.VULTURE_WING_RIGHT_ATTACKD,
                Ie[SPRITE.VULTURE_WING_RIGHT_ATTACK][SPRITE.NIGHT] = P.VULTURE_WING_RIGHT_ATTACKN,
                Ie[SPRITE.VULTURE_WING_LEFT_TAMED] = [],
                Ie[SPRITE.VULTURE_WING_LEFT_TAMED][SPRITE.DAY] = P.VULTURE_WING_LEFT_TAMEDD,
                Ie[SPRITE.VULTURE_WING_LEFT_TAMED][SPRITE.NIGHT] = P.VULTURE_WING_LEFT_TAMEDN,
                Ie[SPRITE.VULTURE_WING_RIGHT_TAMED] = [],
                Ie[SPRITE.VULTURE_WING_RIGHT_TAMED][SPRITE.DAY] = P.VULTURE_WING_RIGHT_TAMEDD,
                Ie[SPRITE.VULTURE_WING_RIGHT_TAMED][SPRITE.NIGHT] = P.VULTURE_WING_RIGHT_TAMEDN,
                Ie[SPRITE.HURT_VULTURE] = P.HURT_VULTURE,
                Ie[SPRITE.HURT_VULTURE_WING_LEFT] = P.HURT_VULTURE_WING_LEFT,
                Ie[SPRITE.HURT_VULTURE_WING_RIGHT] = P.HURT_VULTURE_WING_RIGHT,
                Ie[SPRITE.BOAR] = [],
                Ie[SPRITE.BOAR][SPRITE.DAY] = P.BOARD,
                Ie[SPRITE.BOAR][SPRITE.NIGHT] = P.BOARN,
                Ie[SPRITE.BOAR_TAMED] = [],
                Ie[SPRITE.BOAR_TAMED][SPRITE.DAY] = P.BOAR_TAMEDD,
                Ie[SPRITE.BOAR_TAMED][SPRITE.NIGHT] = P.BOAR_TAMEDN,
                Ie[SPRITE.BOAR_ATTACK] = [],
                Ie[SPRITE.BOAR_ATTACK][SPRITE.DAY] = P.BOAR_ANGRYD,
                Ie[SPRITE.BOAR_ATTACK][SPRITE.NIGHT] = P.BOAR_ANGRYN,
                Ie[SPRITE.BOAR_STEP] = [],
                Ie[SPRITE.BOAR_STEP][SPRITE.DAY] = P.BOAR_STEP,
                Ie[SPRITE.BOAR_STEP][SPRITE.NIGHT] = P.BOAR_STEP,
                Ie[SPRITE.CRAB_STEP] = [],
                Ie[SPRITE.CRAB_STEP][SPRITE.DAY] = P.CRAB_STEP,
                Ie[SPRITE.CRAB_STEP][SPRITE.NIGHT] = P.CRAB_STEP,
                Ie[SPRITE.BABY_MAMMOTH_STEP] = [],
                Ie[SPRITE.BABY_MAMMOTH_STEP][SPRITE.DAY] = P.BABY_MAMMOTH_STEP,
                Ie[SPRITE.BABY_MAMMOTH_STEP][SPRITE.NIGHT] = P.BABY_MAMMOTH_STEP,
                Ie[SPRITE.HURT_BOAR] = P.HURT_BOAR,
                Ie[ItemType.SADDLE] = [],
                Ie[ItemType.SADDLE][SPRITE.DAY] = P.SADDLED,
                Ie[ItemType.SADDLE][SPRITE.NIGHT] = P.SADDLEN,
                Ie[ItemType.WAND1] = [],
                Ie[ItemType.WAND1][SPRITE.DAY] = P.WAND1D,
                Ie[ItemType.WAND1][SPRITE.NIGHT] = P.WAND1N,
                Ie[SPRITE.SPELL] = [],
                Ie[SPRITE.SPELL][SPRITE.DAY] = [P.LIGHT_WAND0D, P.LIGHT_WAND1D, P.WOOD_ARROWD, P.STONE_ARROWD, P.GOLD_ARROWD, P.DIAMOND_ARROWD, P.AMETHYST_ARROWD, P.REIDITE_ARROWD, P.DRAGON_ARROWD],
                Ie[SPRITE.SPELL][SPRITE.NIGHT] = [P.LIGHT_WAND0N, P.LIGHT_WAND1N, P.WOOD_ARROWN, P.STONE_ARROWN, P.GOLD_ARROWN, P.DIAMOND_ARROWN, P.AMETHYST_ARROWN, P.REIDITE_ARROWD, P.DRAGON_ARROWN],
                Ie[ItemType.WAND2] = [],
                Ie[ItemType.WAND2][SPRITE.DAY] = P.WAND2D,
                Ie[ItemType.WAND2][SPRITE.NIGHT] = P.WAND2N,
                Ie[SPRITE.BOAT_WAVE] = [],
                Ie[SPRITE.BOAT_WAVE][SPRITE.DAY] = P.BOAT_WAVED,
                Ie[SPRITE.BOAT_WAVE][SPRITE.NIGHT] = P.BOAT_WAVEN,
                Ie[SPRITE.SLED_WAVE] = [],
                Ie[SPRITE.SLED_WAVE][SPRITE.DAY] = P.SLED_WAVED,
                Ie[SPRITE.SLED_WAVE][SPRITE.NIGHT] = P.SLED_WAVEN,
                Ie[ItemType.PIRATE_HAT] = [],
                Ie[ItemType.PIRATE_HAT][SPRITE.DAY] = P.PIRATE_HATD,
                Ie[ItemType.PIRATE_HAT][SPRITE.NIGHT] = P.PIRATE_HATN,
                Ie[ItemType.FUR_HAT] = [],
                Ie[ItemType.FUR_HAT][SPRITE.DAY] = P.FUR_HATD,
                Ie[ItemType.FUR_HAT][SPRITE.NIGHT] = P.FUR_HATN,
                Ie[ItemType.FLOWER_HAT] = [],
                Ie[ItemType.FLOWER_HAT][SPRITE.DAY] = P.FLOWER_HATD,
                Ie[ItemType.FLOWER_HAT][SPRITE.NIGHT] = P.FLOWER_HATN,
                Ie[ItemType.PILOT_HAT] = [],
                Ie[ItemType.PILOT_HAT][SPRITE.DAY] = P.PILOT_HELMETD,
                Ie[ItemType.PILOT_HAT][SPRITE.NIGHT] = P.PILOT_HELMETN,
                oe.g = [],
                oe.g[0] = [P.MAPDAY_GOLD1, P.MAPNIGHT_GOLD1],
                oe.g[1] = oe.g[0],
                oe.g[2] = [P.MAPDAY_GOLD2, P.MAPNIGHT_GOLD2],
                oe.m = [],
                oe.m[0] = [P.MAPDAY_EMERALD1, P.MAPNIGHT_EMERALD1],
                oe.m[1] = oe.m[0],
                oe.m[2] = [P.MAPDAY_EMERALD2, P.MAPNIGHT_EMERALD2],
                oe.la = [],
                oe.la[0] = [P.MAPDAY_MAGMA, P.MAPNIGHT_MAGMA],
                oe.la[1] = oe.la[0],
                oe.la[2] = oe.la[0],
                oe.la[3] = oe.la[0],
                oe.la[4] = oe.la[0],
                oe.la[5] = oe.la[0],
                oe.s = [],
                oe.s[0] = [P.MAPDAY_STONE1, P.MAPNIGHT_STONE1],
                oe.s[1] = oe.s[0],
                oe.s[2] = [P.MAPDAY_STONE2, P.MAPNIGHT_STONE2],
                oe.p = [],
                oe.p[0] = [P.MAPDAY_BERRY, P.MAPDAY_BERRY],
                oe.a = [],
                oe.a[0] = [P.MAPDAY_AMETHYST, P.MAPNIGHT_AMETHYST],
                oe.a[1] = oe.a[0],
                oe.a[2] = oe.a[0],
                oe.d = [],
                oe.d[0] = [P.MAPDAY_DIAMOND, P.MAPNIGHT_DIAMOND],
                oe.d[1] = oe.d[0],
                oe.d[2] = oe.d[0],
                oe.re = [],
                oe.re[0] = [P.MAPDAY_REIDITE, P.MAPNIGHT_REIDITE],
                oe.re[1] = oe.re[0],
                oe.re[2] = oe.re[0],
                oe.f = [],
                oe.f[0] = [P.MAPDAY_FIR_TREE, P.MAPNIGHT_FIR_TREE],
                oe.f[1] = oe.f[0],
                oe.f[2] = oe.f[0],
                oe.isl = [],
                oe.isl[0] = [P.MAPDAY_ISLAND, P.MAPNIGHT_ISLAND],
                oe.isl[1] = oe.isl[0],
                oe.isl[2] = oe.isl[0],
                oe.c = [],
                oe.c[0] = [P.MAPDAY_CACTUS, P.MAPNIGHT_CACTUS],
                oe.c[1] = oe.c[0],
                oe.c[2] = oe.c[0],
                oe.wtb = [],
                oe.wtb[0] = [P.MAPDAY_RIVER, P.MAPNIGHT_RIVER],
                oe.PIRANHA = [P.MAPDAY_PIRANHA, P.MAPNIGHT_PIRANHA],
                oe.KRAKEN = [P.MAPDAY_KRAKEN, P.MAPNIGHT_KRAKEN],
                oe.FOX = [P.MAPDAY_FOX, P.MAPNIGHT_FOX],
                oe.WOLF = [P.MAPDAY_WOLF, P.MAPNIGHT_WOLF],
                oe.SPIDER = [P.MAPDAY_SPIDER, P.MAPNIGHT_SPIDER],
                oe.BEAR = [P.MAPDAY_BEAR, P.MAPNIGHT_BEAR],
                oe.CAVE = [P.MAPDAY_CAVE, P.MAPNIGHT_CAVE],
                oe.MAP = [P.BIGDAY, P.BIGNIGHT],
                oe.FOREST = [P.MAPDAY_FOREST, P.MAPNIGHT_FOREST],
                oe.WINTER = [P.MAPDAY_WINTER, P.MAPNIGHT_WINTER],
                oe.DESERT = [P.MAPDAY_DESERT, P.MAPNIGHT_DESERT],
                oe.LAVA = [P.MAPDAY_LAVA, P.MAPNIGHT_LAVA],
                oe)
                    for (var i = oe[t], n = 0; n < i.length; n++) {
                        var a = i[n];
                        if (void 0 !== a.tryLoad)
                            a.tryLoad();
                        else if (a.length > 0)
                            for (var I = 0; I < a.length; I++)
                                void 0 !== a[I].tryLoad && a[I].tryLoad()
                    }
            }
            function Vn() {
                (new window.Date).getTime();
                xn(),
                function() {
                    Ie[SPRITE.INV_PUMPKIN] = Xe(1, [{
                        f: ln,
                        x: 0,
                        y: 0,
                        a: 1,
                        r: 0,
                        c: ["#352b10", "#c06937", "#cd733b", "#b25e34", "#244e2b", "#214224", "#6f4424", "#3c3009"]
                    }], .2, ["#3ba578", "#4eb687", "#3da34d"], .5),
                    Ie[SPRITE.CHEST_PUMPKIN] = Ie[SPRITE.INV_PUMPKIN],
                    Ie[SPRITE.INV_CARROT] = [],
                    Ie[SPRITE.INV_CARROT][0] = P.INV_CARROT_OUT,
                    Ie[SPRITE.INV_CARROT][1] = P.INV_CARROT_IN,
                    Ie[SPRITE.INV_CARROT][2] = P.INV_CARROT_CLICK,
                    Ie[SPRITE.CHEST_CARROT] = Ie[SPRITE.INV_CARROT],
                    Ie[SPRITE.INV_WATERMELON] = [],
                    Ie[SPRITE.INV_WATERMELON][0] = P.INV_WATERMELON_OUT,
                    Ie[SPRITE.INV_WATERMELON][1] = P.INV_WATERMELON_IN,
                    Ie[SPRITE.INV_WATERMELON][2] = P.INV_WATERMELON_CLICK,
                    Ie[SPRITE.CHEST_WATERMELON] = Ie[SPRITE.INV_WATERMELON],
                    Ie[SPRITE.INV_ALOE_VERA] = [],
                    Ie[SPRITE.INV_ALOE_VERA][0] = P.INV_ALOE_VERA_OUT,
                    Ie[SPRITE.INV_ALOE_VERA][1] = P.INV_ALOE_VERA_IN,
                    Ie[SPRITE.INV_ALOE_VERA][2] = P.INV_ALOE_VERA_CLICK,
                    Ie[SPRITE.CHEST_ALOE_VERA] = Ie[SPRITE.INV_ALOE_VERA],
                    Ie[SPRITE.INV_CACTUS] = [],
                    Ie[SPRITE.INV_CACTUS][0] = P.INV_CACTUS_OUT,
                    Ie[SPRITE.INV_CACTUS][1] = P.INV_CACTUS_IN,
                    Ie[SPRITE.INV_CACTUS][2] = P.INV_CACTUS_CLICK,
                    Ie[SPRITE.CHEST_CACTUS] = Ie[SPRITE.INV_CACTUS],
                    Ie[SPRITE.INV_TOMATO] = [],
                    Ie[SPRITE.INV_TOMATO][0] = P.INV_TOMATO_OUT,
                    Ie[SPRITE.INV_TOMATO][1] = P.INV_TOMATO_IN,
                    Ie[SPRITE.INV_TOMATO][2] = P.INV_TOMATO_CLICK,
                    Ie[SPRITE.CHEST_TOMATO] = Ie[SPRITE.INV_TOMATO],
                    Ie[SPRITE.INV_BOAT] = [],
                    Ie[SPRITE.INV_BOAT][0] = P.INV_BOAT_OUT,
                    Ie[SPRITE.INV_BOAT][1] = P.INV_BOAT_IN,
                    Ie[SPRITE.INV_BOAT][2] = P.INV_BOAT_CLICK,
                    Ie[SPRITE.CHEST_BOAT] = Ie[SPRITE.INV_BOAT],
                    Ie[SPRITE.CRAFT_BOAT] = Ie[SPRITE.INV_BOAT],
                    Ie[SPRITE.INV_MACHETE] = [],
                    Ie[SPRITE.INV_MACHETE][0] = P.INV_MACHETE_OUT,
                    Ie[SPRITE.INV_MACHETE][1] = P.INV_MACHETE_IN,
                    Ie[SPRITE.INV_MACHETE][2] = P.INV_MACHETE_CLICK,
                    Ie[SPRITE.CHEST_MACHETE] = Ie[SPRITE.INV_MACHETE],
                    Ie[SPRITE.CRAFT_MACHETE] = Ie[SPRITE.INV_MACHETE],
                    Ie[SPRITE.INV_SLED] = [],
                    Ie[SPRITE.INV_SLED][0] = P.INV_SLED_OUT,
                    Ie[SPRITE.INV_SLED][1] = P.INV_SLED_IN,
                    Ie[SPRITE.INV_SLED][2] = P.INV_SLED_CLICK,
                    Ie[SPRITE.CHEST_SLED] = Ie[SPRITE.INV_SLED],
                    Ie[SPRITE.CRAFT_SLED] = Ie[SPRITE.INV_SLED],
                    Ie[SPRITE.INV_PIRATE_HAT] = [],
                    Ie[SPRITE.INV_PIRATE_HAT][0] = P.INV_PIRATE_HAT_OUT,
                    Ie[SPRITE.INV_PIRATE_HAT][1] = P.INV_PIRATE_HAT_IN,
                    Ie[SPRITE.INV_PIRATE_HAT][2] = P.INV_PIRATE_HAT_CLICK,
                    Ie[SPRITE.CHEST_PIRATE_HAT] = Ie[SPRITE.INV_PIRATE_HAT],
                    Ie[SPRITE.CRAFT_PIRATE_HAT] = Ie[SPRITE.INV_PIRATE_HAT],
                    Ie[SPRITE.INV_FUR_MAMMOTH] = [],
                    Ie[SPRITE.INV_FUR_MAMMOTH][0] = P.INV_FUR_MAMMOTH_OUT,
                    Ie[SPRITE.INV_FUR_MAMMOTH][1] = P.INV_FUR_MAMMOTH_IN,
                    Ie[SPRITE.INV_FUR_MAMMOTH][2] = P.INV_FUR_MAMMOTH_CLICK,
                    Ie[SPRITE.CHEST_FUR_MAMMOTH] = Ie[SPRITE.INV_FUR_MAMMOTH],
                    Ie[SPRITE.INV_FUR_HAT] = [],
                    Ie[SPRITE.INV_FUR_HAT][0] = P.INV_FUR_HAT_OUT,
                    Ie[SPRITE.INV_FUR_HAT][1] = P.INV_FUR_HAT_IN,
                    Ie[SPRITE.INV_FUR_HAT][2] = P.INV_FUR_HAT_CLICK,
                    Ie[SPRITE.CHEST_FUR_HAT] = Ie[SPRITE.INV_FUR_HAT],
                    Ie[SPRITE.CRAFT_FUR_HAT] = Ie[SPRITE.INV_FUR_HAT],
                    Ie[SPRITE.INV_WOOD_BOW] = [],
                    Ie[SPRITE.INV_WOOD_BOW][0] = P.INV_WOOD_BOW_OUT,
                    Ie[SPRITE.INV_WOOD_BOW][1] = P.INV_WOOD_BOW_IN,
                    Ie[SPRITE.INV_WOOD_BOW][2] = P.INV_WOOD_BOW_CLICK,
                    Ie[SPRITE.CHEST_WOOD_BOW] = Ie[SPRITE.INV_WOOD_BOW],
                    Ie[SPRITE.CRAFT_WOOD_BOW] = Ie[SPRITE.INV_WOOD_BOW],
                    Ie[SPRITE.INV_WOOD_ARROW] = [],
                    Ie[SPRITE.INV_WOOD_ARROW][0] = P.INV_WOOD_ARROW_OUT,
                    Ie[SPRITE.INV_WOOD_ARROW][1] = P.INV_WOOD_ARROW_IN,
                    Ie[SPRITE.INV_WOOD_ARROW][2] = P.INV_WOOD_ARROW_CLICK,
                    Ie[SPRITE.CHEST_WOOD_ARROW] = Ie[SPRITE.INV_WOOD_ARROW],
                    Ie[SPRITE.CRAFT_WOOD_ARROW] = Ie[SPRITE.INV_WOOD_ARROW],
                    Ie[SPRITE.INV_STONE_BOW] = [],
                    Ie[SPRITE.INV_STONE_BOW][0] = P.INV_STONE_BOW_OUT,
                    Ie[SPRITE.INV_STONE_BOW][1] = P.INV_STONE_BOW_IN,
                    Ie[SPRITE.INV_STONE_BOW][2] = P.INV_STONE_BOW_CLICK,
                    Ie[SPRITE.CHEST_STONE_BOW] = Ie[SPRITE.INV_STONE_BOW],
                    Ie[SPRITE.CRAFT_STONE_BOW] = Ie[SPRITE.INV_STONE_BOW],
                    Ie[SPRITE.INV_STONE_ARROW] = [],
                    Ie[SPRITE.INV_STONE_ARROW][0] = P.INV_STONE_ARROW_OUT,
                    Ie[SPRITE.INV_STONE_ARROW][1] = P.INV_STONE_ARROW_IN,
                    Ie[SPRITE.INV_STONE_ARROW][2] = P.INV_STONE_ARROW_CLICK,
                    Ie[SPRITE.CHEST_STONE_ARROW] = Ie[SPRITE.INV_STONE_ARROW],
                    Ie[SPRITE.CRAFT_STONE_ARROW] = Ie[SPRITE.INV_STONE_ARROW],
                    Ie[SPRITE.INV_GOLD_BOW] = [],
                    Ie[SPRITE.INV_GOLD_BOW][0] = P.INV_GOLD_BOW_OUT,
                    Ie[SPRITE.INV_GOLD_BOW][1] = P.INV_GOLD_BOW_IN,
                    Ie[SPRITE.INV_GOLD_BOW][2] = P.INV_GOLD_BOW_CLICK,
                    Ie[SPRITE.CHEST_GOLD_BOW] = Ie[SPRITE.INV_GOLD_BOW],
                    Ie[SPRITE.CRAFT_GOLD_BOW] = Ie[SPRITE.INV_GOLD_BOW],
                    Ie[SPRITE.INV_GOLD_ARROW] = [],
                    Ie[SPRITE.INV_GOLD_ARROW][0] = P.INV_GOLD_ARROW_OUT,
                    Ie[SPRITE.INV_GOLD_ARROW][1] = P.INV_GOLD_ARROW_IN,
                    Ie[SPRITE.INV_GOLD_ARROW][2] = P.INV_GOLD_ARROW_CLICK,
                    Ie[SPRITE.CHEST_GOLD_ARROW] = Ie[SPRITE.INV_GOLD_ARROW],
                    Ie[SPRITE.CRAFT_GOLD_ARROW] = Ie[SPRITE.INV_GOLD_ARROW],
                    Ie[SPRITE.INV_DIAMOND_BOW] = [],
                    Ie[SPRITE.INV_DIAMOND_BOW][0] = P.INV_DIAMOND_BOW_OUT,
                    Ie[SPRITE.INV_DIAMOND_BOW][1] = P.INV_DIAMOND_BOW_IN,
                    Ie[SPRITE.INV_DIAMOND_BOW][2] = P.INV_DIAMOND_BOW_CLICK,
                    Ie[SPRITE.CHEST_DIAMOND_BOW] = Ie[SPRITE.INV_DIAMOND_BOW],
                    Ie[SPRITE.CRAFT_DIAMOND_BOW] = Ie[SPRITE.INV_DIAMOND_BOW],
                    Ie[SPRITE.INV_DIAMOND_ARROW] = [],
                    Ie[SPRITE.INV_DIAMOND_ARROW][0] = P.INV_DIAMOND_ARROW_OUT,
                    Ie[SPRITE.INV_DIAMOND_ARROW][1] = P.INV_DIAMOND_ARROW_IN,
                    Ie[SPRITE.INV_DIAMOND_ARROW][2] = P.INV_DIAMOND_ARROW_CLICK,
                    Ie[SPRITE.CHEST_DIAMOND_ARROW] = Ie[SPRITE.INV_DIAMOND_ARROW],
                    Ie[SPRITE.CRAFT_DIAMOND_ARROW] = Ie[SPRITE.INV_DIAMOND_ARROW],
                    Ie[SPRITE.INV_AMETHYST_BOW] = [],
                    Ie[SPRITE.INV_AMETHYST_BOW][0] = P.INV_AMETHYST_BOW_OUT,
                    Ie[SPRITE.INV_AMETHYST_BOW][1] = P.INV_AMETHYST_BOW_IN,
                    Ie[SPRITE.INV_AMETHYST_BOW][2] = P.INV_AMETHYST_BOW_CLICK,
                    Ie[SPRITE.CHEST_AMETHYST_BOW] = Ie[SPRITE.INV_AMETHYST_BOW],
                    Ie[SPRITE.CRAFT_AMETHYST_BOW] = Ie[SPRITE.INV_AMETHYST_BOW],
                    Ie[SPRITE.INV_AMETHYST_ARROW] = [],
                    Ie[SPRITE.INV_AMETHYST_ARROW][0] = P.INV_AMETHYST_ARROW_OUT,
                    Ie[SPRITE.INV_AMETHYST_ARROW][1] = P.INV_AMETHYST_ARROW_IN,
                    Ie[SPRITE.INV_AMETHYST_ARROW][2] = P.INV_AMETHYST_ARROW_CLICK,
                    Ie[SPRITE.CHEST_AMETHYST_ARROW] = Ie[SPRITE.INV_AMETHYST_ARROW],
                    Ie[SPRITE.CRAFT_AMETHYST_ARROW] = Ie[SPRITE.INV_AMETHYST_ARROW],
                    Ie[SPRITE.INV_REIDITE_BOW] = [],
                    Ie[SPRITE.INV_REIDITE_BOW][0] = P.INV_REIDITE_BOW_OUT,
                    Ie[SPRITE.INV_REIDITE_BOW][1] = P.INV_REIDITE_BOW_IN,
                    Ie[SPRITE.INV_REIDITE_BOW][2] = P.INV_REIDITE_BOW_CLICK,
                    Ie[SPRITE.CHEST_REIDITE_BOW] = Ie[SPRITE.INV_REIDITE_BOW],
                    Ie[SPRITE.CRAFT_REIDITE_BOW] = Ie[SPRITE.INV_REIDITE_BOW],
                    Ie[SPRITE.INV_REIDITE_ARROW] = [],
                    Ie[SPRITE.INV_REIDITE_ARROW][0] = P.INV_REIDITE_ARROW_OUT,
                    Ie[SPRITE.INV_REIDITE_ARROW][1] = P.INV_REIDITE_ARROW_IN,
                    Ie[SPRITE.INV_REIDITE_ARROW][2] = P.INV_REIDITE_ARROW_CLICK,
                    Ie[SPRITE.CHEST_REIDITE_ARROW] = Ie[SPRITE.INV_REIDITE_ARROW],
                    Ie[SPRITE.CRAFT_REIDITE_ARROW] = Ie[SPRITE.INV_REIDITE_ARROW],
                    Ie[SPRITE.INV_DRAGON_BOW] = [],
                    Ie[SPRITE.INV_DRAGON_BOW][0] = P.INV_DRAGON_BOW_OUT,
                    Ie[SPRITE.INV_DRAGON_BOW][1] = P.INV_DRAGON_BOW_IN,
                    Ie[SPRITE.INV_DRAGON_BOW][2] = P.INV_DRAGON_BOW_CLICK,
                    Ie[SPRITE.CHEST_DRAGON_BOW] = Ie[SPRITE.INV_DRAGON_BOW],
                    Ie[SPRITE.CRAFT_DRAGON_BOW] = Ie[SPRITE.INV_DRAGON_BOW],
                    Ie[SPRITE.INV_DRAGON_ARROW] = [],
                    Ie[SPRITE.INV_DRAGON_ARROW][0] = P.INV_DRAGON_ARROW_OUT,
                    Ie[SPRITE.INV_DRAGON_ARROW][1] = P.INV_DRAGON_ARROW_IN,
                    Ie[SPRITE.INV_DRAGON_ARROW][2] = P.INV_DRAGON_ARROW_CLICK,
                    Ie[SPRITE.CHEST_DRAGON_ARROW] = Ie[SPRITE.INV_DRAGON_ARROW],
                    Ie[SPRITE.CRAFT_DRAGON_ARROW] = Ie[SPRITE.INV_DRAGON_ARROW],
                    Ie[SPRITE.INV_WOOD_SHIELD] = [],
                    Ie[SPRITE.INV_WOOD_SHIELD][0] = P.INV_WOOD_SHIELD_OUT,
                    Ie[SPRITE.INV_WOOD_SHIELD][1] = P.INV_WOOD_SHIELD_IN,
                    Ie[SPRITE.INV_WOOD_SHIELD][2] = P.INV_WOOD_SHIELD_CLICK,
                    Ie[SPRITE.CHEST_WOOD_SHIELD] = Ie[SPRITE.INV_WOOD_SHIELD],
                    Ie[SPRITE.CRAFT_WOOD_SHIELD] = Ie[SPRITE.INV_WOOD_SHIELD],
                    Ie[SPRITE.INV_STONE_SHIELD] = [],
                    Ie[SPRITE.INV_STONE_SHIELD][0] = P.INV_STONE_SHIELD_OUT,
                    Ie[SPRITE.INV_STONE_SHIELD][1] = P.INV_STONE_SHIELD_IN,
                    Ie[SPRITE.INV_STONE_SHIELD][2] = P.INV_STONE_SHIELD_CLICK,
                    Ie[SPRITE.CHEST_STONE_SHIELD] = Ie[SPRITE.INV_STONE_SHIELD],
                    Ie[SPRITE.CRAFT_STONE_SHIELD] = Ie[SPRITE.INV_STONE_SHIELD],
                    Ie[SPRITE.INV_GOLD_SHIELD] = [],
                    Ie[SPRITE.INV_GOLD_SHIELD][0] = P.INV_GOLD_SHIELD_OUT,
                    Ie[SPRITE.INV_GOLD_SHIELD][1] = P.INV_GOLD_SHIELD_IN,
                    Ie[SPRITE.INV_GOLD_SHIELD][2] = P.INV_GOLD_SHIELD_CLICK,
                    Ie[SPRITE.CHEST_GOLD_SHIELD] = Ie[SPRITE.INV_GOLD_SHIELD],
                    Ie[SPRITE.CRAFT_GOLD_SHIELD] = Ie[SPRITE.INV_GOLD_SHIELD],
                    Ie[SPRITE.INV_DIAMOND_SHIELD] = [],
                    Ie[SPRITE.INV_DIAMOND_SHIELD][0] = P.INV_DIAMOND_SHIELD_OUT,
                    Ie[SPRITE.INV_DIAMOND_SHIELD][1] = P.INV_DIAMOND_SHIELD_IN,
                    Ie[SPRITE.INV_DIAMOND_SHIELD][2] = P.INV_DIAMOND_SHIELD_CLICK,
                    Ie[SPRITE.CHEST_DIAMOND_SHIELD] = Ie[SPRITE.INV_DIAMOND_SHIELD],
                    Ie[SPRITE.CRAFT_DIAMOND_SHIELD] = Ie[SPRITE.INV_DIAMOND_SHIELD],
                    Ie[SPRITE.INV_AMETHYST_SHIELD] = [],
                    Ie[SPRITE.INV_AMETHYST_SHIELD][0] = P.INV_AMETHYST_SHIELD_OUT,
                    Ie[SPRITE.INV_AMETHYST_SHIELD][1] = P.INV_AMETHYST_SHIELD_IN,
                    Ie[SPRITE.INV_AMETHYST_SHIELD][2] = P.INV_AMETHYST_SHIELD_CLICK,
                    Ie[SPRITE.CHEST_AMETHYST_SHIELD] = Ie[SPRITE.INV_AMETHYST_SHIELD],
                    Ie[SPRITE.CRAFT_AMETHYST_SHIELD] = Ie[SPRITE.INV_AMETHYST_SHIELD],
                    Ie[SPRITE.INV_REIDITE_SHIELD] = [],
                    Ie[SPRITE.INV_REIDITE_SHIELD][0] = P.INV_REIDITE_SHIELD_OUT,
                    Ie[SPRITE.INV_REIDITE_SHIELD][1] = P.INV_REIDITE_SHIELD_IN,
                    Ie[SPRITE.INV_REIDITE_SHIELD][2] = P.INV_REIDITE_SHIELD_CLICK,
                    Ie[SPRITE.CHEST_REIDITE_SHIELD] = Ie[SPRITE.INV_REIDITE_SHIELD],
                    Ie[SPRITE.CRAFT_REIDITE_SHIELD] = Ie[SPRITE.INV_REIDITE_SHIELD],
                    Ie[SPRITE.INV_FLOWER_HAT] = [],
                    Ie[SPRITE.INV_FLOWER_HAT][0] = P.INV_FLOWER_HAT_OUT,
                    Ie[SPRITE.INV_FLOWER_HAT][1] = P.INV_FLOWER_HAT_IN,
                    Ie[SPRITE.INV_FLOWER_HAT][2] = P.INV_FLOWER_HAT_CLICK,
                    Ie[SPRITE.CHEST_FLOWER_HAT] = Ie[SPRITE.INV_FLOWER_HAT],
                    Ie[SPRITE.CRAFT_FLOWER_HAT] = Ie[SPRITE.INV_FLOWER_HAT],
                    Ie[SPRITE.INV_SANDWORM_JUICE] = [],
                    Ie[SPRITE.INV_SANDWORM_JUICE][0] = P.INV_SANDWORM_JUICE_OUT,
                    Ie[SPRITE.INV_SANDWORM_JUICE][1] = P.INV_SANDWORM_JUICE_IN,
                    Ie[SPRITE.INV_SANDWORM_JUICE][2] = P.INV_SANDWORM_JUICE_CLICK,
                    Ie[SPRITE.CHEST_SANDWORM_JUICE] = Ie[SPRITE.INV_SANDWORM_JUICE],
                    Ie[SPRITE.INV_GARLIC] = Xe(1, [{
                        f: pe,
                        x: 0,
                        y: 0,
                        a: 1,
                        r: 0,
                        c: ["#352b10", "#e8e8e8", "#bbbbbb", "#e0e1e0", "#c4c4c4"]
                    }], .22, ["#3ba578", "#4eb687", "#3da34d"], .5),
                    Ie[SPRITE.CHEST_GARLIC] = Ie[SPRITE.INV_GARLIC],
                    Ie[SPRITE.INV_THORNBUSH] = Xe(1, [{
                        f: An,
                        x: 0,
                        y: 0,
                        a: 1,
                        r: 0,
                        c: ["#352b10", "#349970", "#245c45", "#348361", "#e8e8e8", "#bbbbbb"]
                    }], .2, ["#3ba578", "#4eb687", "#3da34d"], .5),
                    Ie[SPRITE.CHEST_THORNBUSH] = Ie[SPRITE.INV_THORNBUSH],
                    Ie[SPRITE.INV_WINDMILL] = Xe(1, [{
                        f: We,
                        x: -1,
                        y: 0,
                        a: 1,
                        r: 0,
                        c: ["#0d1b1c", "#596560", "#394841", "#67766F", "#46554D", "#4C3B19", "#674C2A", "#7C5A29", "#596560", "#394841"]
                    }, {
                        f: Fe,
                        x: -1,
                        y: 0,
                        a: 1,
                        r: 0,
                        c: ["#0d1b1c", "#596560", "#394841", "#67766F", "#46554D", "#4C3B19", "#674C2A", "#7C5A29", "#596560", "#394841"]
                    }, {
                        f: xe,
                        x: -1,
                        y: 0,
                        a: 1,
                        r: 0,
                        c: ["#0d1b1c", "#596560", "#394841", "#67766F", "#46554D", "#4C3B19", "#674C2A", "#7C5A29", "#596560", "#394841"]
                    }], .4, ["#3ba578", "#4eb687", "#3da34d"], .5),
                    Ie[SPRITE.CRAFT_WINDMILL] = Ie[SPRITE.INV_WINDMILL],
                    Ie[SPRITE.INV_WILD_WHEAT] = Xe(1, [{
                        f: Ge,
                        x: 0,
                        y: 0,
                        a: 1,
                        r: 0,
                        c: ["#A89F67", "#9E8456"]
                    }], 1.2, ["#3ba578", "#4eb687", "#3da34d"], .5),
                    Ie[SPRITE.INV_WHEAT_SEED] = Xe(1, [{
                        f: _t,
                        x: 0,
                        y: 0,
                        a: 1,
                        r: 0,
                        c: ["#A89F67", "#9E8456"]
                    }], .6, ["#3ba578", "#4eb687", "#3da34d"], .5),
                    Ie[SPRITE.CRAFT_WHEAT_SEED] = Ie[SPRITE.INV_WHEAT_SEED],
                    Ie[SPRITE.INV_SEED] = Xe(1, [{
                        f: _t,
                        x: 0,
                        y: 0,
                        a: 1,
                        r: 0,
                        c: ["#493d36", "#332b28"]
                    }], .7, ["#3ba578", "#4eb687", "#3da34d"], .5),
                    Ie[SPRITE.CRAFT_SEED] = Ie[SPRITE.INV_SEED],
                    Ie[SPRITE.INV_PUMPKIN_SEED] = Xe(1, [{
                        f: _t,
                        x: 0,
                        y: 0,
                        a: 1,
                        r: 0,
                        c: ["#c67933", "#b17238"]
                    }], .6, ["#3ba578", "#4eb687", "#3da34d"], .5),
                    Ie[SPRITE.CRAFT_PUMPKIN_SEED] = Ie[SPRITE.INV_PUMPKIN_SEED],
                    Ie[SPRITE.INV_GARLIC_SEED] = Xe(1, [{
                        f: _t,
                        x: 0,
                        y: 0,
                        a: 1,
                        r: 0,
                        c: ["#e8e8e8", "#bbbbbb"]
                    }], .6, ["#3ba578", "#4eb687", "#3da34d"], .5),
                    Ie[SPRITE.CRAFT_GARLIC_SEED] = Ie[SPRITE.INV_GARLIC_SEED],
                    Ie[SPRITE.INV_THORNBUSH_SEED] = Xe(1, [{
                        f: _t,
                        x: 0,
                        y: 0,
                        a: 1,
                        r: 0,
                        c: ["#328a56", "#449573"]
                    }], .6, ["#3ba578", "#4eb687", "#3da34d"], .5),
                    Ie[SPRITE.CRAFT_THORNBUSH_SEED] = Ie[SPRITE.INV_THORNBUSH_SEED],
                    Ie[SPRITE.INV_CARROT_SEED] = Xe(1, [{
                        f: _t,
                        x: 0,
                        y: 0,
                        a: 1,
                        r: 0,
                        c: ["#c98e2f", "#a36b11"]
                    }], .6, ["#3ba578", "#4eb687", "#3da34d"], .5),
                    Ie[SPRITE.CRAFT_CARROT_SEED] = Ie[SPRITE.INV_CARROT_SEED],
                    Ie[SPRITE.CHEST_CARROT_SEED] = Ie[SPRITE.INV_CARROT_SEED],
                    Ie[SPRITE.INV_WATERMELON_SEED] = Xe(1, [{
                        f: _t,
                        x: 0,
                        y: 0,
                        a: 1,
                        r: 0,
                        c: ["#13a56d", "#098a58"]
                    }], .6, ["#3ba578", "#4eb687", "#3da34d"], .5),
                    Ie[SPRITE.CRAFT_WATERMELON_SEED] = Ie[SPRITE.INV_WATERMELON_SEED],
                    Ie[SPRITE.CHEST_WATERMELON_SEED] = Ie[SPRITE.INV_WATERMELON_SEED],
                    Ie[SPRITE.INV_ALOE_VERA_SEED] = Xe(1, [{
                        f: _t,
                        x: 0,
                        y: 0,
                        a: 1,
                        r: 0,
                        c: ["#3a8214", "#4a9c1e"]
                    }], .6, ["#3ba578", "#4eb687", "#3da34d"], .5),
                    Ie[SPRITE.CRAFT_ALOE_VERA_SEED] = Ie[SPRITE.INV_ALOE_VERA_SEED],
                    Ie[SPRITE.CHEST_ALOE_VERA_SEED] = Ie[SPRITE.INV_ALOE_VERA_SEED],
                    Ie[SPRITE.INV_TOMATO_SEED] = Xe(1, [{
                        f: _t,
                        x: 0,
                        y: 0,
                        a: 1,
                        r: 0,
                        c: ["#b22419", "#99110e"]
                    }], .6, ["#3ba578", "#4eb687", "#3da34d"], .5),
                    Ie[SPRITE.CRAFT_TOMATO_SEED] = Ie[SPRITE.INV_TOMATO_SEED],
                    Ie[SPRITE.CHEST_TOMATO_SEED] = Ie[SPRITE.INV_TOMATO_SEED],
                    Ie[SPRITE.INV_FIRE] = Xe(1, [{
                        f: je,
                        x: -2,
                        y: -2,
                        a: 1,
                        r: -window.Math.PI / 7,
                        c: ["#4d2d14", "#432516"]
                    }, {
                        f: ze,
                        x: -2,
                        y: -2,
                        a: 1,
                        r: -window.Math.PI / 7,
                        c: ["#efd435", "#ec8d35", "#e96132"]
                    }], .3, ["#3ba578", "#4eb687", "#3da34d"], .5),
                    Ie[SPRITE.CRAFT_FIRE] = Ie[SPRITE.INV_FIRE],
                    Ie[SPRITE.INV_BIG_FIRE] = Xe(1, [{
                        f: qe,
                        x: -2,
                        y: -1,
                        a: 1,
                        r: -window.Math.PI / 7,
                        c: ["#4d2d14", "#432516", "#58645F", "#75827D", "#0c2c2e"]
                    }, {
                        f: ze,
                        x: -2,
                        y: -1,
                        a: 1,
                        r: -window.Math.PI / 7,
                        c: ["#efd435", "#ec8d35", "#e96132"]
                    }], .3, ["#3ba578", "#4eb687", "#3da34d"], .5),
                    Ie[SPRITE.CRAFT_BIG_FIRE] = Ie[SPRITE.INV_BIG_FIRE],
                    Ie[SPRITE.INV_PIRATE_SWORD] = Xe(1, [{
                        f: rt,
                        x: 2,
                        y: 0,
                        a: 1,
                        r: window.Math.PI / 5,
                        c: ["#0d1b1c", "#4a3a22", "#362818", "#c7c7c7", "#909090", "#eceaea", "#bbbbbb", "#d6d1d1"]
                    }], .1, ["#35b1b5", "#46c2c9", "#33b4e4"], .5),
                    Ie[SPRITE.INV_SUGAR_CAN] = Xe(1, [{
                        f: ut,
                        x: 2,
                        y: 0,
                        a: 1,
                        r: window.Math.PI / 5,
                        c: ["#0d1b1c", "#ffffff", "#5f6061", "#eb2933", "#57b74e", "#42a54d", "#ac222a", "#e6636a"]
                    }], .3, ["#35b1b5", "#46c2c9", "#33b4e4"], .5),
                    Ie[SPRITE.INV_SWORD_WOOD] = Xe(1, [{
                        f: ot,
                        x: 2,
                        y: 0,
                        a: 1,
                        r: window.Math.PI / 5,
                        c: ["#252525", "#73583e", "#493425", "#7d6144", "#5e4530", "#563e2b"]
                    }], .15, ["#35b1b5", "#46c2c9", "#33b4e4"], .5),
                    Ie[SPRITE.INV_SWORD] = Xe(1, [{
                        f: dt,
                        x: 2,
                        y: 0,
                        a: 1,
                        r: window.Math.PI / 5,
                        c: ["#0d1b1c", "#939393", "#5f6061", "#b1afaf", "#493d36", "#332b28"]
                    }], .15, ["#35b1b5", "#46c2c9", "#33b4e4"], .5),
                    Ie[SPRITE.INV_SWORD_GOLD] = Xe(1, [{
                        f: mt,
                        x: 2,
                        y: 0,
                        a: 1,
                        r: window.Math.PI / 5,
                        c: ["#0d1b1c", "#c4bc51", "#b29c32", "#c4bc51", "#493e26", "#382e19"]
                    }], .15, ["#35b1b5", "#46c2c9", "#33b4e4"], .5),
                    Ie[SPRITE.INV_SWORD_DIAMOND] = Xe(1, [{
                        f: St,
                        x: 2,
                        y: 0,
                        a: 1,
                        r: window.Math.PI / 5,
                        c: ["#0d1b1c", "#6ad9e8", "#29aaa1", "#95e9f5", "#022320", "#011e19", "#FFFFFF"]
                    }], .15, ["#35b1b5", "#46c2c9", "#33b4e4"], .5),
                    Ie[SPRITE.INV_SWORD_AMETHYST] = Xe(1, [{
                        f: ct,
                        x: 2,
                        y: 0,
                        a: 1,
                        r: window.Math.PI / 5,
                        c: ["#0d1b1c", "#b864d6", "#8c29aa", "#cc81e7", "#262114", "#211108", "#FFFFFF"]
                    }], .15, ["#35b1b5", "#46c2c9", "#33b4e4"], .5),
                    Ie[SPRITE.INV_PICK_WOOD] = Xe(1, [{
                        f: Tt,
                        x: -2,
                        y: 5,
                        a: 1,
                        r: -window.Math.PI / 5,
                        c: ["#0d1b1c", "#000000", "#0d1b1c", "#4d2d14", "#432516", "#4d2d14", "#432516"]
                    }], .45, ["#35b1b5", "#46c2c9", "#33b4e4"], .5),
                    Ie[SPRITE.INV_PICK] = Xe(1, [{
                        f: Tt,
                        x: -2,
                        y: 5,
                        a: 1,
                        r: -window.Math.PI / 5,
                        c: ["#0d1b1c", "#000000", "#0d1b1c", "#4d2d14", "#432516", "#939393", "#5f6061"]
                    }], .45, ["#35b1b5", "#46c2c9", "#33b4e4"], .5),
                    Ie[SPRITE.INV_PICK_GOLD] = Xe(1, [{
                        f: Tt,
                        x: -2,
                        y: 5,
                        a: 1,
                        r: -window.Math.PI / 5,
                        c: ["#0d1b1c", "#000000", "#0d1b1c", "#493e26", "#382e19", "#c4bc51", "#b29c32"]
                    }], .45, ["#35b1b5", "#46c2c9", "#33b4e4"], .5),
                    Ie[SPRITE.INV_PICK_DIAMOND] = Xe(1, [{
                        f: Tt,
                        x: -2,
                        y: 5,
                        a: 1,
                        r: -window.Math.PI / 5,
                        c: ["#0d1b1c", "#000000", "#0d1b1c", "#262114", "#211108", "#63c9d6", "#29aaa1"]
                    }], .45, ["#35b1b5", "#46c2c9", "#33b4e4"], .5),
                    Ie[SPRITE.INV_PICK_AMETHYST] = Xe(1, [{
                        f: Tt,
                        x: -2,
                        y: 5,
                        a: 1,
                        r: -window.Math.PI / 5,
                        c: ["#0d1b1c", "#000000", "#0d1b1c", "#262114", "#211108", "#b864d6", "#8c29aa"]
                    }], .45, ["#35b1b5", "#46c2c9", "#33b4e4"], .5),
                    Ie[SPRITE.INV_PICK_REIDITE] = [],
                    Ie[SPRITE.INV_PICK_REIDITE][0] = P.INV_PICK_REIDITE_OUT,
                    Ie[SPRITE.INV_PICK_REIDITE][1] = P.INV_PICK_REIDITE_IN,
                    Ie[SPRITE.INV_PICK_REIDITE][2] = P.INV_PICK_REIDITE_CLICK,
                    Ie[SPRITE.CRAFT_PICK_REIDITE] = Ie[SPRITE.INV_PICK_REIDITE],
                    Ie[SPRITE.CHEST_PICK_REIDITE] = Ie[SPRITE.INV_PICK_REIDITE],
                    Ie[SPRITE.INV_STONE] = Xe(1, [{
                        f: gt,
                        x: -5,
                        y: -5,
                        a: 1,
                        r: 0,
                        c: ["#252B28", "#58645F", "#75827D"]
                    }], .23, ["#2b5c48", "#2b5c48", "#2b5c48"], .5),
                    Ie[SPRITE.INV_GOLD] = Xe(1, [{
                        f: At,
                        x: -5,
                        y: -5,
                        a: 1,
                        r: 0,
                        c: ["#282823", "#877c2d", "#c4bc51"]
                    }], .43, ["#2b5c48", "#2b5c48", "#2b5c48"], .5),
                    Ie[SPRITE.INV_DIAMOND] = Xe(1, [{
                        f: bt,
                        x: -5,
                        y: -5,
                        a: 1,
                        r: 0,
                        c: ["#232828", "#3fc9c9", "#74ede6"]
                    }], .33, ["#2b5c48", "#2b5c48", "#2b5c48"], .5),
                    Ie[SPRITE.INV_WOOD] = Xe(1, [{
                        f: je,
                        x: 0,
                        y: -5,
                        a: 1,
                        r: window.Math.PI / 2.5,
                        c: ["#4d2d14", "#432516"]
                    }], .3, ["#2b5c48", "#2b5c48", "#2b5c48"], .5),
                    Ie[SPRITE.CRAFT_SWORD_WOOD] = Ie[SPRITE.INV_SWORD_WOOD],
                    Ie[SPRITE.CRAFT_SWORD] = Ie[SPRITE.INV_SWORD],
                    Ie[SPRITE.CRAFT_SWORD_GOLD] = Ie[SPRITE.INV_SWORD_GOLD],
                    Ie[SPRITE.CRAFT_SWORD_DIAMOND] = Ie[SPRITE.INV_SWORD_DIAMOND],
                    Ie[SPRITE.CRAFT_SWORD_AMETHYST] = Ie[SPRITE.INV_SWORD_AMETHYST],
                    Ie[SPRITE.CRAFT_PICK_WOOD] = Ie[SPRITE.INV_PICK_WOOD],
                    Ie[SPRITE.CRAFT_PICK] = Ie[SPRITE.INV_PICK],
                    Ie[SPRITE.CRAFT_PICK_GOLD] = Ie[SPRITE.INV_PICK_GOLD],
                    Ie[SPRITE.CRAFT_PICK_DIAMOND] = Ie[SPRITE.INV_PICK_DIAMOND],
                    Ie[SPRITE.CRAFT_PICK_AMETHYST] = Ie[SPRITE.INV_PICK_AMETHYST],
                    Ie[SPRITE.INV_PLANT] = Xe(1, [{
                        f: ve,
                        x: 0,
                        y: 0,
                        a: 1,
                        r: 0
                    }], .4, ["#3ba578", "#4eb687", "#3da34d"], .5),
                    Ie[SPRITE.INV_WORK] = Xe(1, [{
                        f: ke,
                        x: 0,
                        y: 0,
                        a: 1,
                        r: 0,
                        c: ["#0d1b1c", "#4d2d14", "#432516", "#756e52", "#663f22", "#9e9577"]
                    }], .45, ["#3ba578", "#4eb687", "#3da34d"], .5),
                    Ie[SPRITE.CRAFT_WORK] = Ie[SPRITE.INV_WORK],
                    Ie[SPRITE.INV_STONE_WALL] = Xe(1, [{
                        f: Ft,
                        x: -2,
                        y: -2,
                        a: 1,
                        r: 0,
                        c: ["#0d1b1c", "#6a7570", "#939995", "#9baaa3", "#adbcb5", "#8a938e"]
                    }], .4, ["#3ba578", "#4eb687", "#3da34d"], .5),
                    Ie[SPRITE.CRAFT_STONE_WALL] = Ie[SPRITE.INV_STONE_WALL],
                    Ie[SPRITE.INV_DIAMOND_WALL] = Xe(1, [{
                        f: Kt,
                        x: 0,
                        y: 0,
                        a: 1,
                        r: 0,
                        c: ["#0d1b1c", "#5cc5ce", "#89d1d4", "#86d0d1", "#95d5d8", "#e0f2f6", "#b3e0e3"]
                    }], .4, ["#3ba578", "#4eb687", "#3da34d"], .5),
                    Ie[SPRITE.CRAFT_DIAMOND_WALL] = Ie[SPRITE.INV_DIAMOND_WALL],
                    Ie[SPRITE.INV_AMETHYST_WALL] = Xe(1, [{
                        f: Ft,
                        x: 0,
                        y: 0,
                        a: 1,
                        r: 0,
                        c: ["#0d1b1c", "#b15ecf", "#8c29aa", "#c26de0", "#af59cd", "#d588f1"]
                    }], .4, ["#3ba578", "#4eb687", "#3da34d"], .5),
                    Ie[SPRITE.CRAFT_AMETHYST_WALL] = Ie[SPRITE.INV_AMETHYST_WALL],
                    Ie[SPRITE.INV_GOLD_WALL] = Xe(1, [{
                        f: xt,
                        x: 0,
                        y: 0,
                        a: 1,
                        r: 0,
                        c: ["#0d1b1c", "#877d36", "#a08f47", "#a7983c", "#b29e4d", "#c1b06b"]
                    }], .4, ["#3ba578", "#4eb687", "#3da34d"], .5),
                    Ie[SPRITE.CRAFT_GOLD_WALL] = Ie[SPRITE.INV_GOLD_WALL],
                    Ie[SPRITE.INV_WALL] = Xe(1, [{
                        f: Ht,
                        x: 0,
                        y: 0,
                        a: 1,
                        r: 0,
                        c: ["#0d1b1c", "#4c3a15", "#634828", "#564021", "#634828", "#4c3a15"]
                    }], .45, ["#3ba578", "#4eb687", "#3da34d"], .5),
                    Ie[SPRITE.CRAFT_WALL] = Ie[SPRITE.INV_WALL],
                    Ie[SPRITE.INV_SPIKE] = Xe(1, [{
                        f: Ri,
                        x: 0,
                        y: 0,
                        a: 1,
                        r: 0,
                        c: ["#0d1b1c", "#5f6061", "#939393", "#4c3a15", "#634828", "#564021", "#634828", "#4c3a15"]
                    }], .35, ["#3ba578", "#4eb687", "#3da34d"], .5),
                    Ie[SPRITE.CRAFT_SPIKE] = Ie[SPRITE.INV_SPIKE],
                    Ie[SPRITE.INV_GOLD_SPIKE] = Xe(1, [{
                        f: mi,
                        x: 0,
                        y: 0,
                        a: 1,
                        r: 0,
                        c: ["#0d1b1c", "#5f6061", "#939393", "#877d36", "#a08f47", "#a7983c", "#b29e4d", "#c1b06b"]
                    }], .35, ["#3ba578", "#4eb687", "#3da34d"], .5),
                    Ie[SPRITE.CRAFT_GOLD_SPIKE] = Ie[SPRITE.INV_GOLD_SPIKE],
                    Ie[SPRITE.INV_DIAMOND_SPIKE] = Xe(1, [{
                        f: mi,
                        x: 0,
                        y: 0,
                        a: 1,
                        r: 0,
                        c: ["#0d1b1c", "#7d8b90", "#9facaa", "#5cc5ce", "#89d1d4", "#86d0d1", "#95d5d8", "#e0f2f6", "#b3e0e3"]
                    }], .35, ["#3ba578", "#4eb687", "#3da34d"], .5),
                    Ie[SPRITE.CRAFT_DIAMOND_SPIKE] = Ie[SPRITE.INV_DIAMOND_SPIKE],
                    Ie[SPRITE.INV_STONE_SPIKE] = Xe(1, [{
                        f: Ei,
                        x: 0,
                        y: 0,
                        a: 1,
                        r: 0,
                        c: ["#0d1b1c", "#5f6061", "#939393", "#6a7570", "#939995", "#9baaa3", "#adbcb5", "#8a938e"]
                    }], .35, ["#3ba578", "#4eb687", "#3da34d"], .5),
                    Ie[SPRITE.CRAFT_STONE_SPIKE] = Ie[SPRITE.INV_STONE_SPIKE],
                    Ie[SPRITE.INV_AMETHYST_SPIKE] = Xe(1, [{
                        f: Ei,
                        x: 0,
                        y: 0,
                        a: 1,
                        r: 0,
                        c: ["#0d1b1c", "#5f6061", "#939393", "#b15ecf", "#8c29aa", "#c26de0", "#af59cd", "#d588f1"]
                    }], .35, ["#3ba578", "#4eb687", "#3da34d"], .5),
                    Ie[SPRITE.CRAFT_AMETHYST_SPIKE] = Ie[SPRITE.INV_AMETHYST_SPIKE],
                    Ie[SPRITE.INV_DOOR_WOOD_CLOSE] = Xe(1, [{
                        f: Vt,
                        x: 0,
                        y: 0,
                        a: 1,
                        r: 0,
                        c: ["#0d1b1c", "#4c3b19", "#574122", "#644928", "#574122", "#735534"]
                    }], .6, ["#3ba578", "#4eb687", "#3da34d"], .5),
                    Ie[SPRITE.CRAFT_DOOR_WOOD_CLOSE] = Ie[SPRITE.INV_DOOR_WOOD_CLOSE],
                    Ie[SPRITE.INV_DOOR_STONE_CLOSE] = Xe(1, [{
                        f: Ut,
                        x: 0,
                        y: 0,
                        a: 1,
                        r: 0,
                        c: ["#0d1b1c", "#6a7570", "#939995", "#9baaa3", "#8a938e", "#adbcb5"]
                    }], .6, ["#3ba578", "#4eb687", "#3da34d"], .5),
                    Ie[SPRITE.CRAFT_DOOR_STONE_CLOSE] = Ie[SPRITE.INV_DOOR_STONE_CLOSE],
                    Ie[SPRITE.INV_DOOR_AMETHYST_CLOSE] = Xe(1, [{
                        f: Ut,
                        x: 0,
                        y: 0,
                        a: 1,
                        r: 0,
                        c: ["#0d1b1c", "#b15ecf", "#8c29aa", "#c26de0", "#af59cd", "#d588f1"]
                    }], .6, ["#3ba578", "#4eb687", "#3da34d"], .5),
                    Ie[SPRITE.CRAFT_DOOR_AMETHYST_CLOSE] = Ie[SPRITE.INV_DOOR_AMETHYST_CLOSE],
                    Ie[SPRITE.INV_DOOR_GOLD_CLOSE] = Xe(1, [{
                        f: Xt,
                        x: 0,
                        y: 0,
                        a: 1,
                        r: 0,
                        c: ["#0d1b1c", "#877d36", "#a08f47", "#a7983c", "#9a8636", "#c1b06b"]
                    }], .6, ["#3ba578", "#4eb687", "#3da34d"], .5),
                    Ie[SPRITE.CRAFT_DOOR_GOLD_CLOSE] = Ie[SPRITE.INV_DOOR_GOLD_CLOSE],
                    Ie[SPRITE.INV_DOOR_DIAMOND_CLOSE] = Xe(1, [{
                        f: jt,
                        x: 0,
                        y: 0,
                        a: 1,
                        r: 0,
                        c: ["#0d1b1c", "#5cc5ce", "#89d1d4", "#86d0d1", "#95d5d8", "#e0f2f6", "#b3e0e3"]
                    }], .6, ["#3ba578", "#4eb687", "#3da34d"], .5),
                    Ie[SPRITE.CRAFT_DOOR_DIAMOND_CLOSE] = Ie[SPRITE.INV_DOOR_DIAMOND_CLOSE],
                    Ie[SPRITE.INV_CHEST] = Xe(1, [{
                        f: di,
                        x: 0,
                        y: 2,
                        a: 1,
                        r: 0,
                        c: ["#133a2b", "#9e8838", "#c4a23a", "#4c3b19", "#614627", "#614627", "#614627", "#c4a23a", "#c4a23a", "#c4a23a"]
                    }], .35, ["#3ba578", "#4eb687", "#3da34d"], .5),
                    Ie[SPRITE.CRAFT_CHEST] = Ie[SPRITE.INV_CHEST],
                    Ie[SPRITE.INV_MEAT] = Xe(1, [{
                        f: Be,
                        x: 0,
                        y: -3,
                        a: 1,
                        r: 0,
                        c: ["#dd5d57", "#ffffff", "#5e5d5e", "#ffffff"]
                    }], 1.4, ["#3ba578", "#4eb687", "#3da34d"], .5),
                    Ie[SPRITE.INV_COOKED_MEAT] = Xe(1, [{
                        f: Be,
                        x: 0,
                        y: -3,
                        a: 1,
                        r: 0,
                        c: ["#602920", "#844f49", "#5e5d5e", "#d3ccc7"]
                    }], 1.4, ["#3ba578", "#4eb687", "#3da34d"], .5),
                    Ie[SPRITE.CRAFT_COOKED_MEAT] = Ie[SPRITE.INV_COOKED_MEAT],
                    Ie[SPRITE.INV_CORD] = Xe(1, [{
                        f: Ve,
                        x: -3,
                        y: -3,
                        a: 1,
                        r: 0,
                        c: ["#cec0c4", "#ffffff", "#6d6768"]
                    }], .9, ["#3ba578", "#4eb687", "#3da34d"], .5),
                    Ie[SPRITE.INV_BLUE_CORD] = Xe(1, [{
                        f: Ve,
                        x: -3,
                        y: -3,
                        a: 1,
                        r: 0,
                        c: ["#d4e9ec", "#37b1d7", "#506c71"]
                    }], .9, ["#3ba578", "#4eb687", "#3da34d"], .5),
                    Ie[SPRITE.CRAFT_BLUE_CORD] = Ie[SPRITE.INV_BLUE_CORD],
                    Ie[SPRITE.INV_FUR] = Xe(1, [{
                        f: si,
                        x: -3,
                        y: -3,
                        a: 1,
                        r: 0,
                        c: ["#ef96be", "#ffffff"]
                    }], .5, ["#2b5c48", "#2b5c48", "#2b5c48"], .5),
                    Ie[SPRITE.INV_FUR_BOAR] = Xe(1, [{
                        f: si,
                        x: -3,
                        y: -3,
                        a: 1,
                        r: 0,
                        c: ["#55423e", "#ffffff"]
                    }], .5, ["#2b5c48", "#2b5c48", "#2b5c48"], .5),
                    Ie[ItemType.WINTER_HOOD_FUR] = Xe(1, [{
                        f: Wt,
                        x: 0,
                        y: 0,
                        a: 1,
                        r: 0,
                        c: ["#ffffff", "#e7e2e2", "#b35c46", "#a34d37"]
                    }], .25, ["#2b5c48", "#2b5c48", "#2b5c48"], .5),
                    Ie[ItemType.WINTER_PEASANT_FUR] = Xe(1, [{
                        f: Wt,
                        x: 0,
                        y: 0,
                        a: 1,
                        r: 0,
                        c: ["#14151b", "#000000", "#b35c46", "#a34d37"]
                    }], .25, ["#2b5c48", "#2b5c48", "#2b5c48"], .5),
                    Ie[SPRITE.INV_KRAKEN_SKIN] = Xe(1, [{
                        f: si,
                        x: 0,
                        y: 0,
                        a: 1,
                        r: 0,
                        c: ["#201851", "#b6222a"]
                    }], .5, ["#2b5c48", "#2b5c48", "#2b5c48"], .5),
                    Ie[SPRITE.INV_FUR_WOLF] = Xe(1, [{
                        f: si,
                        x: -3,
                        y: -3,
                        a: 1,
                        r: 0,
                        c: ["#231f20", "#b6222a"]
                    }], .5, ["#2b5c48", "#2b5c48", "#2b5c48"], .5),
                    Ie[SPRITE.INV_FUR_WINTER] = Xe(1, [{
                        f: si,
                        x: -3,
                        y: -3,
                        a: 1,
                        r: 0,
                        c: ["#ffffff", "#b6222a"]
                    }], .5, ["#2b5c48", "#2b5c48", "#2b5c48"], .5),
                    Ie[SPRITE.INV_EARMUFFS] = Xe(1, [{
                        f: hi,
                        x: 0,
                        y: 0,
                        a: 1,
                        r: 0,
                        c: ["#f9efeb", "#dfd1cb", "#3e3c25", "#4d4a2e"]
                    }], .4, ["#35b1b5", "#46c2c9", "#33b4e4"], .5),
                    Ie[SPRITE.CRAFT_EARMUFFS] = Ie[SPRITE.INV_EARMUFFS],
                    Ie[SPRITE.INV_COAT] = Xe(1, [{
                        f: $t,
                        x: 0,
                        y: 0,
                        a: 1,
                        r: 0,
                        c: ["#3e3c25", "#4d4a2e", "#f9efeb", "#dfd1cb"]
                    }], .4, ["#35b1b5", "#46c2c9", "#33b4e4"], .5),
                    Ie[SPRITE.CRAFT_COAT] = Ie[SPRITE.INV_COAT],
                    Ie[SPRITE.INV_CAP_SCARF] = Xe(1, [{
                        f: yi,
                        x: 0,
                        y: 0,
                        a: 1,
                        r: 0,
                        c: ["#171a19", "#dee7e7", "#b8cccb", "#ffffff", "#e3e8e8"]
                    }], .4, ["#35b1b5", "#46c2c9", "#33b4e4"], .5),
                    Ie[SPRITE.CRAFT_CAP_SCARF] = Ie[SPRITE.INV_CAP_SCARF],
                    Ie[SPRITE.INV_CHRISTMAS_HAT] = Xe(1, [{
                        f: Qe,
                        x: 0,
                        y: 5,
                        a: 1,
                        r: 0,
                        c: ["#171a19", "#c5232c", "#84191d", "#a72027", "#fef4f4", "#e9dad9"]
                    }], .35, ["#35b1b5", "#46c2c9", "#33b4e4"], .5),
                    Ie[SPRITE.CHEST_CHRISTMAS_HAT] = Ie[SPRITE.INV_CHRISTMAS_HAT],
                    Ie[SPRITE.INV_ELF_HAT] = Xe(1, [{
                        f: Je,
                        x: 0,
                        y: 5,
                        a: 1,
                        r: 0,
                        c: ["#171a19", "#0f964c", "#106e3b", "#138344", "#fef4f4", "#e9dad9", "#C5232C", "#A92D2D"]
                    }], .35, ["#35b1b5", "#46c2c9", "#33b4e4"], .5),
                    Ie[SPRITE.CHEST_ELF_HAT] = Ie[SPRITE.INV_ELF_HAT],
                    Ie[SPRITE.INV_BANDAGE] = Xe(1, [{
                        f: Ue,
                        x: -2,
                        y: -2,
                        a: 1,
                        r: 0,
                        c: ["#ffffff", "#cec0c4"]
                    }], .35, ["#3ba578", "#4eb687", "#3da34d"], .5),
                    Ie[SPRITE.CRAFT_BANDAGE] = Ie[SPRITE.INV_BANDAGE],
                    Ie[SPRITE.INV_BAG] = [],
                    Ie[SPRITE.INV_BAG][0] = P.INV_BAG_OUT,
                    Ie[SPRITE.INV_BAG][1] = P.INV_BAG_IN,
                    Ie[SPRITE.INV_BAG][2] = P.INV_BAG_CLICK,
                    Ie[SPRITE.CRAFT_BAG] = Ie[SPRITE.INV_BAG],
                    Ie[SPRITE.INV_PITCHFORK] = [],
                    Ie[SPRITE.INV_PITCHFORK][0] = P.INV_PITCHFORK_OUT,
                    Ie[SPRITE.INV_PITCHFORK][1] = P.INV_PITCHFORK_IN,
                    Ie[SPRITE.INV_PITCHFORK][2] = P.INV_PITCHFORK_CLICK,
                    Ie[SPRITE.CRAFT_PITCHFORK] = Ie[SPRITE.INV_PITCHFORK],
                    Ie[SPRITE.CHEST_PITCHFORK] = Ie[SPRITE.INV_PITCHFORK],
                    Ie[SPRITE.INV_PITCHFORK2] = [],
                    Ie[SPRITE.INV_PITCHFORK2][0] = P.INV_PITCHFORK2_OUT,
                    Ie[SPRITE.INV_PITCHFORK2][1] = P.INV_PITCHFORK2_IN,
                    Ie[SPRITE.INV_PITCHFORK2][2] = P.INV_PITCHFORK2_CLICK,
                    Ie[SPRITE.CRAFT_PITCHFORK2] = Ie[SPRITE.INV_PITCHFORK2],
                    Ie[SPRITE.CHEST_PITCHFORK2] = Ie[SPRITE.INV_PITCHFORK2],
                    Ie[SPRITE.INV_YUSUKEDAO_ITEM1] = [],
                    Ie[SPRITE.INV_YUSUKEDAO_ITEM1][0] = P.INV_YUSUKEDAO_ITEM1_OUT,
                    Ie[SPRITE.INV_YUSUKEDAO_ITEM1][1] = P.INV_YUSUKEDAO_ITEM1_IN,
                    Ie[SPRITE.INV_YUSUKEDAO_ITEM1][2] = P.INV_YUSUKEDAO_ITEM1_CLICK,
                    Ie[SPRITE.CRAFT_YUSUKEDAO_ITEM1] = Ie[SPRITE.INV_YUSUKEDAO_ITEM1],
                    Ie[SPRITE.CHEST_YUSUKEDAO_ITEM1] = Ie[SPRITE.INV_YUSUKEDAO_ITEM1],
                    Ie[SPRITE.INV_YUSUKEDAO_ITEM2] = [],
                    Ie[SPRITE.INV_YUSUKEDAO_ITEM2][0] = P.INV_YUSUKEDAO_ITEM2_OUT,
                    Ie[SPRITE.INV_YUSUKEDAO_ITEM2][1] = P.INV_YUSUKEDAO_ITEM2_IN,
                    Ie[SPRITE.INV_YUSUKEDAO_ITEM2][2] = P.INV_YUSUKEDAO_ITEM2_CLICK,
                    Ie[SPRITE.CRAFT_YUSUKEDAO_ITEM2] = Ie[SPRITE.INV_YUSUKEDAO_ITEM2],
                    Ie[SPRITE.CHEST_YUSUKEDAO_ITEM2] = Ie[SPRITE.INV_YUSUKEDAO_ITEM2],
                    Ie[SPRITE.INV_PITCHFORK_PART] = [],
                    Ie[SPRITE.INV_PITCHFORK_PART][0] = P.INV_PITCHFORK_PART_CLICK,
                    Ie[SPRITE.INV_PITCHFORK_PART][1] = P.INV_PITCHFORK_PART_CLICK,
                    Ie[SPRITE.INV_PITCHFORK_PART][2] = P.INV_PITCHFORK_PART_CLICK,
                    Ie[SPRITE.CHEST_PITCHFORK_PART] = Ie[SPRITE.INV_PITCHFORK_PART],
                    Ie[SPRITE.INV_PILOT_HELMET] = [],
                    Ie[SPRITE.INV_PILOT_HELMET][0] = P.INV_PILOT_HELMET_OUT,
                    Ie[SPRITE.INV_PILOT_HELMET][1] = P.INV_PILOT_HELMET_IN,
                    Ie[SPRITE.INV_PILOT_HELMET][2] = P.INV_PILOT_HELMET_CLICK,
                    Ie[SPRITE.CRAFT_PILOT_HELMET] = Ie[SPRITE.INV_PILOT_HELMET],
                    Ie[SPRITE.CHEST_PILOT_HELMET] = Ie[SPRITE.INV_PILOT_HELMET],
                    Ie[SPRITE.INV_PILOT_GLASSES] = [],
                    Ie[SPRITE.INV_PILOT_GLASSES][0] = P.INV_PILOT_GLASSES_CLICK,
                    Ie[SPRITE.INV_PILOT_GLASSES][1] = P.INV_PILOT_GLASSES_CLICK,
                    Ie[SPRITE.INV_PILOT_GLASSES][2] = P.INV_PILOT_GLASSES_CLICK,
                    Ie[SPRITE.CHEST_PILOT_GLASSES] = Ie[SPRITE.INV_PILOT_GLASSES],
                    Ie[SPRITE.INV_WOOD_TOWER] = [],
                    Ie[SPRITE.INV_WOOD_TOWER][0] = P.INV_WOOD_TOWER_OUT,
                    Ie[SPRITE.INV_WOOD_TOWER][1] = P.INV_WOOD_TOWER_IN,
                    Ie[SPRITE.INV_WOOD_TOWER][2] = P.INV_WOOD_TOWER_CLICK,
                    Ie[SPRITE.CRAFT_WOOD_TOWER] = Ie[SPRITE.INV_WOOD_TOWER],
                    Ie[SPRITE.CHEST_WOOD_TOWER] = Ie[SPRITE.INV_WOOD_TOWER],
                    Ie[SPRITE.INV_WOOD_DOOR_SPIKE] = [],
                    Ie[SPRITE.INV_WOOD_DOOR_SPIKE][0] = P.INV_WOOD_DOOR_SPIKE_OUT,
                    Ie[SPRITE.INV_WOOD_DOOR_SPIKE][1] = P.INV_WOOD_DOOR_SPIKE_IN,
                    Ie[SPRITE.INV_WOOD_DOOR_SPIKE][2] = P.INV_WOOD_DOOR_SPIKE_CLICK,
                    Ie[SPRITE.CRAFT_WOOD_DOOR_SPIKE] = Ie[SPRITE.INV_WOOD_DOOR_SPIKE],
                    Ie[SPRITE.CHEST_WOOD_DOOR_SPIKE] = Ie[SPRITE.INV_WOOD_DOOR_SPIKE],
                    Ie[SPRITE.INV_STONE_DOOR_SPIKE] = [],
                    Ie[SPRITE.INV_STONE_DOOR_SPIKE][0] = P.INV_STONE_DOOR_SPIKE_OUT,
                    Ie[SPRITE.INV_STONE_DOOR_SPIKE][1] = P.INV_STONE_DOOR_SPIKE_IN,
                    Ie[SPRITE.INV_STONE_DOOR_SPIKE][2] = P.INV_STONE_DOOR_SPIKE_CLICK,
                    Ie[SPRITE.CRAFT_STONE_DOOR_SPIKE] = Ie[SPRITE.INV_STONE_DOOR_SPIKE],
                    Ie[SPRITE.CHEST_STONE_DOOR_SPIKE] = Ie[SPRITE.INV_STONE_DOOR_SPIKE],
                    Ie[SPRITE.INV_GOLD_DOOR_SPIKE] = [],
                    Ie[SPRITE.INV_GOLD_DOOR_SPIKE][0] = P.INV_GOLD_DOOR_SPIKE_OUT,
                    Ie[SPRITE.INV_GOLD_DOOR_SPIKE][1] = P.INV_GOLD_DOOR_SPIKE_IN,
                    Ie[SPRITE.INV_GOLD_DOOR_SPIKE][2] = P.INV_GOLD_DOOR_SPIKE_CLICK,
                    Ie[SPRITE.CRAFT_GOLD_DOOR_SPIKE] = Ie[SPRITE.INV_GOLD_DOOR_SPIKE],
                    Ie[SPRITE.CHEST_GOLD_DOOR_SPIKE] = Ie[SPRITE.INV_GOLD_DOOR_SPIKE],
                    Ie[SPRITE.INV_DIAMOND_DOOR_SPIKE] = [],
                    Ie[SPRITE.INV_DIAMOND_DOOR_SPIKE][0] = P.INV_DIAMOND_DOOR_SPIKE_OUT,
                    Ie[SPRITE.INV_DIAMOND_DOOR_SPIKE][1] = P.INV_DIAMOND_DOOR_SPIKE_IN,
                    Ie[SPRITE.INV_DIAMOND_DOOR_SPIKE][2] = P.INV_DIAMOND_DOOR_SPIKE_CLICK,
                    Ie[SPRITE.CRAFT_DIAMOND_DOOR_SPIKE] = Ie[SPRITE.INV_DIAMOND_DOOR_SPIKE],
                    Ie[SPRITE.CHEST_DIAMOND_DOOR_SPIKE] = Ie[SPRITE.INV_DIAMOND_DOOR_SPIKE],
                    Ie[SPRITE.INV_AMETHYST_DOOR_SPIKE] = [],
                    Ie[SPRITE.INV_AMETHYST_DOOR_SPIKE][0] = P.INV_AMETHYST_DOOR_SPIKE_OUT,
                    Ie[SPRITE.INV_AMETHYST_DOOR_SPIKE][1] = P.INV_AMETHYST_DOOR_SPIKE_IN,
                    Ie[SPRITE.INV_AMETHYST_DOOR_SPIKE][2] = P.INV_AMETHYST_DOOR_SPIKE_CLICK,
                    Ie[SPRITE.CRAFT_AMETHYST_DOOR_SPIKE] = Ie[SPRITE.INV_AMETHYST_DOOR_SPIKE],
                    Ie[SPRITE.CHEST_AMETHYST_DOOR_SPIKE] = Ie[SPRITE.INV_AMETHYST_DOOR_SPIKE],
                    Ie[SPRITE.INV_REIDITE_DOOR_SPIKE] = [],
                    Ie[SPRITE.INV_REIDITE_DOOR_SPIKE][0] = P.INV_REIDITE_DOOR_SPIKE_OUT,
                    Ie[SPRITE.INV_REIDITE_DOOR_SPIKE][1] = P.INV_REIDITE_DOOR_SPIKE_IN,
                    Ie[SPRITE.INV_REIDITE_DOOR_SPIKE][2] = P.INV_REIDITE_DOOR_SPIKE_CLICK,
                    Ie[SPRITE.CRAFT_REIDITE_DOOR_SPIKE] = Ie[SPRITE.INV_REIDITE_DOOR_SPIKE],
                    Ie[SPRITE.CHEST_REIDITE_DOOR_SPIKE] = Ie[SPRITE.INV_REIDITE_DOOR_SPIKE],
                    Ie[SPRITE.INV_REIDITE_DOOR] = [],
                    Ie[SPRITE.INV_REIDITE_DOOR][0] = P.INV_REIDITE_DOOR_OUT,
                    Ie[SPRITE.INV_REIDITE_DOOR][1] = P.INV_REIDITE_DOOR_IN,
                    Ie[SPRITE.INV_REIDITE_DOOR][2] = P.INV_REIDITE_DOOR_CLICK,
                    Ie[SPRITE.CRAFT_REIDITE_DOOR] = Ie[SPRITE.INV_REIDITE_DOOR],
                    Ie[SPRITE.CHEST_REIDITE_DOOR] = Ie[SPRITE.INV_REIDITE_DOOR],
                    Ie[SPRITE.INV_REIDITE_SPIKE] = [],
                    Ie[SPRITE.INV_REIDITE_SPIKE][0] = P.INV_REIDITE_SPIKE_OUT,
                    Ie[SPRITE.INV_REIDITE_SPIKE][1] = P.INV_REIDITE_SPIKE_IN,
                    Ie[SPRITE.INV_REIDITE_SPIKE][2] = P.INV_REIDITE_SPIKE_CLICK,
                    Ie[SPRITE.CRAFT_REIDITE_SPIKE] = Ie[SPRITE.INV_REIDITE_SPIKE],
                    Ie[SPRITE.CHEST_REIDITE_SPIKE] = Ie[SPRITE.INV_REIDITE_SPIKE],
                    Ie[SPRITE.INV_REIDITE_WALL] = [],
                    Ie[SPRITE.INV_REIDITE_WALL][0] = P.INV_REIDITE_WALL_OUT,
                    Ie[SPRITE.INV_REIDITE_WALL][1] = P.INV_REIDITE_WALL_IN,
                    Ie[SPRITE.INV_REIDITE_WALL][2] = P.INV_REIDITE_WALL_CLICK,
                    Ie[SPRITE.CRAFT_REIDITE_WALL] = Ie[SPRITE.INV_REIDITE_WALL],
                    Ie[SPRITE.CHEST_REIDITE_WALL] = Ie[SPRITE.INV_REIDITE_WALL],
                    Ie[SPRITE.INV_PENGUIN_FEATHER] = [],
                    Ie[SPRITE.INV_PENGUIN_FEATHER][0] = P.INV_PENGUIN_FEATHER,
                    Ie[SPRITE.INV_PENGUIN_FEATHER][1] = P.INV_PENGUIN_FEATHER,
                    Ie[SPRITE.INV_PENGUIN_FEATHER][2] = P.INV_PENGUIN_FEATHER,
                    Ie[SPRITE.CHEST_PENGUIN_FEATHER] = Ie[SPRITE.INV_PENGUIN_FEATHER],
                    Ie[SPRITE.INV_HAWK_FEATHER] = [],
                    Ie[SPRITE.INV_HAWK_FEATHER][0] = P.INV_HAWK_FEATHER,
                    Ie[SPRITE.INV_HAWK_FEATHER][1] = P.INV_HAWK_FEATHER,
                    Ie[SPRITE.INV_HAWK_FEATHER][2] = P.INV_HAWK_FEATHER,
                    Ie[SPRITE.CHEST_HAWK_FEATHER] = Ie[SPRITE.INV_HAWK_FEATHER],
                    Ie[SPRITE.INV_VULTURE_FEATHER] = [],
                    Ie[SPRITE.INV_VULTURE_FEATHER][0] = P.INV_VULTURE_FEATHER,
                    Ie[SPRITE.INV_VULTURE_FEATHER][1] = P.INV_VULTURE_FEATHER,
                    Ie[SPRITE.INV_VULTURE_FEATHER][2] = P.INV_VULTURE_FEATHER,
                    Ie[SPRITE.CHEST_VULTURE_FEATHER] = Ie[SPRITE.INV_VULTURE_FEATHER],
                    Ie[SPRITE.INV_EMERALD] = [],
                    Ie[SPRITE.INV_EMERALD][0] = P.INV_EMERALD,
                    Ie[SPRITE.INV_EMERALD][1] = P.INV_EMERALD,
                    Ie[SPRITE.INV_EMERALD][2] = P.INV_EMERALD,
                    Ie[SPRITE.CHEST_EMERALD] = Ie[SPRITE.INV_EMERALD],
                    Ie[SPRITE.INV_SADDLE] = [],
                    Ie[SPRITE.INV_SADDLE][0] = P.INV_SADDLE_OUT,
                    Ie[SPRITE.INV_SADDLE][1] = P.INV_SADDLE_IN,
                    Ie[SPRITE.INV_SADDLE][2] = P.INV_SADDLE_CLICK,
                    Ie[SPRITE.CRAFT_SADDLE] = Ie[SPRITE.INV_SADDLE],
                    Ie[SPRITE.CHEST_SADDLE] = Ie[SPRITE.INV_SADDLE],
                    Ie[SPRITE.INV_WAND1] = [],
                    Ie[SPRITE.INV_WAND1][0] = P.INV_WAND1_OUT,
                    Ie[SPRITE.INV_WAND1][1] = P.INV_WAND1_IN,
                    Ie[SPRITE.INV_WAND1][2] = P.INV_WAND1_CLICK,
                    Ie[SPRITE.CRAFT_WAND1] = Ie[SPRITE.INV_WAND1],
                    Ie[SPRITE.CHEST_WAND1] = Ie[SPRITE.INV_WAND1],
                    Ie[SPRITE.INV_WAND2] = [],
                    Ie[SPRITE.INV_WAND2][0] = P.INV_WAND2_OUT,
                    Ie[SPRITE.INV_WAND2][1] = P.INV_WAND2_IN,
                    Ie[SPRITE.INV_WAND2][2] = P.INV_WAND2_CLICK,
                    Ie[SPRITE.CRAFT_WAND2] = Ie[SPRITE.INV_WAND2],
                    Ie[SPRITE.CHEST_WAND2] = Ie[SPRITE.INV_WAND2],
                    Ie[SPRITE.INV_MOUNT_BOAR] = [],
                    Ie[SPRITE.INV_MOUNT_BOAR][0] = P.INV_MOUNT_BOAR_OUT,
                    Ie[SPRITE.INV_MOUNT_BOAR][1] = P.INV_MOUNT_BOAR_IN,
                    Ie[SPRITE.INV_MOUNT_BOAR][2] = P.INV_MOUNT_BOAR_CLICK,
                    Ie[SPRITE.CRAFT_MOUNT_BOAR] = Ie[SPRITE.INV_MOUNT_BOAR],
                    Ie[SPRITE.CHEST_MOUNT_BOAR] = Ie[SPRITE.INV_MOUNT_BOAR],
                    Ie[SPRITE.INV_CRAB_BOSS] = [],
                    Ie[SPRITE.INV_CRAB_BOSS][0] = P.INV_CRAB_BOSS_OUT,
                    Ie[SPRITE.INV_CRAB_BOSS][1] = P.INV_CRAB_BOSS_IN,
                    Ie[SPRITE.INV_CRAB_BOSS][2] = P.INV_CRAB_BOSS_CLICK,
                    Ie[SPRITE.CRAFT_CRAB_BOSS] = Ie[SPRITE.INV_CRAB_BOSS],
                    Ie[SPRITE.CHEST_CRAB_BOSS] = Ie[SPRITE.INV_CRAB_BOSS],
                    Ie[SPRITE.INV_HAWK] = [],
                    Ie[SPRITE.INV_HAWK][0] = P.INV_HAWK_OUT,
                    Ie[SPRITE.INV_HAWK][1] = P.INV_HAWK_IN,
                    Ie[SPRITE.INV_HAWK][2] = P.INV_HAWK_CLICK,
                    Ie[SPRITE.CRAFT_HAWK] = Ie[SPRITE.INV_HAWK],
                    Ie[SPRITE.CHEST_HAWK] = Ie[SPRITE.INV_HAWK],
                    Ie[SPRITE.INV_VULTURE] = [],
                    Ie[SPRITE.CRAFT_VULTURE] = Ie[SPRITE.INV_VULTURE],
                    Ie[SPRITE.CHEST_VULTURE] = Ie[SPRITE.INV_VULTURE],
                    Ie[SPRITE.INV_TURBAN1] = [],
                    Ie[SPRITE.INV_TURBAN1][0] = P.INV_TURBAN1_OUT,
                    Ie[SPRITE.INV_TURBAN1][1] = P.INV_TURBAN1_IN,
                    Ie[SPRITE.INV_TURBAN1][2] = P.INV_TURBAN1_CLICK,
                    Ie[SPRITE.CRAFT_TURBAN1] = Ie[SPRITE.INV_TURBAN1],
                    Ie[SPRITE.CHEST_TURBAN1] = Ie[SPRITE.INV_TURBAN1],
                    Ie[SPRITE.INV_TURBAN2] = [],
                    Ie[SPRITE.INV_TURBAN2][0] = P.INV_TURBAN2_OUT,
                    Ie[SPRITE.INV_TURBAN2][1] = P.INV_TURBAN2_IN,
                    Ie[SPRITE.INV_TURBAN2][2] = P.INV_TURBAN2_CLICK,
                    Ie[SPRITE.CRAFT_TURBAN2] = Ie[SPRITE.INV_TURBAN2],
                    Ie[SPRITE.CHEST_TURBAN2] = Ie[SPRITE.INV_TURBAN2],
                    Ie[SPRITE.INV_PLANE] = [],
                    Ie[SPRITE.INV_PLANE][0] = P.INV_PLANE_OUT,
                    Ie[SPRITE.INV_PLANE][1] = P.INV_PLANE_IN,
                    Ie[SPRITE.INV_PLANE][2] = P.INV_PLANE_CLICK,
                    Ie[SPRITE.CRAFT_PLANE] = Ie[SPRITE.INV_PLANE],
                    Ie[SPRITE.CHEST_PLANE] = Ie[SPRITE.INV_PLANE],
                    Ie[SPRITE.INV_BABY_DRAGON] = [],
                    Ie[SPRITE.INV_BABY_DRAGON][0] = P.INV_BABY_DRAGON_OUT,
                    Ie[SPRITE.INV_BABY_DRAGON][1] = P.INV_BABY_DRAGON_IN,
                    Ie[SPRITE.INV_BABY_DRAGON][2] = P.INV_BABY_DRAGON_CLICK,
                    Ie[SPRITE.CRAFT_BABY_DRAGON] = Ie[SPRITE.INV_BABY_DRAGON],
                    Ie[SPRITE.CHEST_BABY_DRAGON] = Ie[SPRITE.INV_BABY_DRAGON],
                    Ie[SPRITE.INV_BABY_MAMMOTH] = [],
                    Ie[SPRITE.INV_BABY_MAMMOTH][0] = P.INV_BABY_MAMMOTH_OUT,
                    Ie[SPRITE.INV_BABY_MAMMOTH][1] = P.INV_BABY_MAMMOTH_IN,
                    Ie[SPRITE.INV_BABY_MAMMOTH][2] = P.INV_BABY_MAMMOTH_CLICK,
                    Ie[SPRITE.CRAFT_BABY_MAMMOTH] = Ie[SPRITE.INV_BABY_MAMMOTH],
                    Ie[SPRITE.CHEST_BABY_MAMMOTH] = Ie[SPRITE.INV_BABY_MAMMOTH],
                    Ie[SPRITE.INV_BABY_LAVA] = [],
                    Ie[SPRITE.INV_BABY_LAVA][0] = P.INV_BABY_LAVA_OUT,
                    Ie[SPRITE.INV_BABY_LAVA][1] = P.INV_BABY_LAVA_IN,
                    Ie[SPRITE.INV_BABY_LAVA][2] = P.INV_BABY_LAVA_CLICK,
                    Ie[SPRITE.CRAFT_BABY_LAVA] = Ie[SPRITE.INV_BABY_LAVA],
                    Ie[SPRITE.CHEST_BABY_LAVA] = Ie[SPRITE.INV_BABY_LAVA],
                    Ie[SPRITE.INV_BREAD_OVEN] = Xe(1, [{
                        f: mn,
                        x: 0,
                        y: 0,
                        a: 1,
                        r: 0,
                        c: ["#0d1b1c", "#515C57", "#3A4942", "#68736F", "#C1C0C0", "#be8d50", "#7d5234", "#222825", "#4D5752", "#e48727", "#d4a872", "#232a27"]
                    }, {
                        f: Sn,
                        x: 0,
                        y: 0,
                        a: 1,
                        r: 0,
                        c: ["#e4c027"]
                    }], .14, ["#3ba578", "#4eb687", "#3da34d"], .5),
                    Ie[SPRITE.CRAFT_BREAD_OVEN] = Ie[SPRITE.INV_BREAD_OVEN],
                    Ie[SPRITE.INV_FURNACE] = Xe(1, [{
                        f: qt,
                        x: 0,
                        y: 0,
                        a: 1,
                        r: 0,
                        c: ["#0d1b1c", "#939393", "#5f6061", "#c0c0c0", "#ffad22", "#fffdd5", "#fee764"]
                    }], .18, ["#3ba578", "#4eb687", "#3da34d"], .5),
                    Ie[SPRITE.CRAFT_FURNACE] = Ie[SPRITE.INV_FURNACE],
                    Ie[SPRITE.INV_BED] = Xe(1, [{
                        f: Qt,
                        x: 0,
                        y: 0,
                        a: 1,
                        r: 0,
                        c: ["#0d1b1c", "#554139", "#3f332a", "#261912", "#eee6c5", "#d1c599", "#554139", "#3f332a", "#86509b", "#703a99", "#ded4b4", "#d6ceab", "#c796c2", "#bc83b7", "#ffffff", "#87519c", "#703e94", "#3eb67f", "#218f65", "#efe7c5", "#d093c4"]
                    }], .32, ["#3ba578", "#4eb687", "#3da34d"], .5),
                    Ie[SPRITE.CRAFT_BED] = Ie[SPRITE.INV_BED],
                    Ie[SPRITE.CHEST_BED] = Ie[SPRITE.INV_BED],
                    Ie[SPRITE.INV_CRAB_LOOT] = Xe(1, [{
                        f: Jt,
                        x: 0,
                        y: 0,
                        a: 1,
                        r: 0,
                        c: ["#0d1b1c", "#c04933", "#a33e2b", "#ee593d", "#c04933"]
                    }], .17, ["#3ba578", "#4eb687", "#3da34d"], .5),
                    Ie[SPRITE.CHEST_CRAB_LOOT] = Ie[SPRITE.INV_CRAB_LOOT],
                    Ie[SPRITE.INV_CRAB_SPEAR] = Xe(1, [{
                        f: ti,
                        x: 2,
                        y: 0,
                        a: 1,
                        r: window.Math.PI / 5,
                        c: ["#0d1b1c", "#58452b", "#47341d", "#ee593d", "#c04933", "#c04933", "#a33e2b", "#c3be9a", "#7f6d52"]
                    }], .12, ["#35b1b5", "#46c2c9", "#33b4e4"], .5),
                    Ie[SPRITE.CRAFT_CRAB_SPEAR] = Ie[SPRITE.INV_CRAB_SPEAR],
                    Ie[SPRITE.CHEST_CRAB_SPEAR] = Ie[SPRITE.INV_CRAB_SPEAR],
                    Ie[SPRITE.INV_WOOD_SPEAR] = Xe(1, [{
                        f: ii,
                        x: 2,
                        y: 0,
                        a: 1,
                        r: window.Math.PI / 5,
                        c: ["#0d1b1c", "#58452b", "#47341d", "#765d42", "#c3be9a", "#7f6d52"]
                    }], .12, ["#35b1b5", "#46c2c9", "#33b4e4"], .5),
                    Ie[SPRITE.CRAFT_WOOD_SPEAR] = Ie[SPRITE.INV_WOOD_SPEAR],
                    Ie[SPRITE.INV_SPEAR] = Xe(1, [{
                        f: ni,
                        x: 2,
                        y: 0,
                        a: 1,
                        r: window.Math.PI / 5,
                        c: ["#0d1b1c", "#4d2d14", "#432516", "#c3be9a", "#7f6d52", "#7a7575", "#454749", "#8c8787", "#939393", "#5f6061", "#aaa6a6"]
                    }], .12, ["#35b1b5", "#46c2c9", "#33b4e4"], .5),
                    Ie[SPRITE.CRAFT_SPEAR] = Ie[SPRITE.INV_SPEAR],
                    Ie[SPRITE.INV_GOLD_SPEAR] = Xe(1, [{
                        f: ai,
                        x: 2,
                        y: 0,
                        a: 1,
                        r: window.Math.PI / 5,
                        c: ["#0d1b1c", "#493e26", "#382e19", "#a69e39", "#9c8828", "#bab143", "#c4bc51", "#b29c32", "#d2ca59"]
                    }], .12, ["#35b1b5", "#46c2c9", "#33b4e4"], .5),
                    Ie[SPRITE.CRAFT_GOLD_SPEAR] = Ie[SPRITE.INV_GOLD_SPEAR],
                    Ie[SPRITE.INV_DIAMOND_SPEAR] = Xe(1, [{
                        f: Ii,
                        x: 2,
                        y: 0,
                        a: 1,
                        r: window.Math.PI / 5,
                        c: ["#0d1b1c", "#262114", "#211108", "#4ba8b4", "#198a82", "#6ccad7", "#63c9d6", "#29aaa1", "#7bd9e6"]
                    }], .12, ["#35b1b5", "#46c2c9", "#33b4e4"], .5),
                    Ie[SPRITE.CRAFT_DIAMOND_SPEAR] = Ie[SPRITE.INV_DIAMOND_SPEAR],
                    Ie[SPRITE.INV_AMETHYST_SPEAR] = Xe(1, [{
                        f: Ti,
                        x: 2,
                        y: 0,
                        a: 1,
                        r: window.Math.PI / 5,
                        c: ["#0d1b1c", "#262114", "#211108", "#9443b1", "#6f1988", "#a752c6", "#9e35be", "#8c29aa", "#b864d6"]
                    }], .12, ["#35b1b5", "#46c2c9", "#33b4e4"], .5),
                    Ie[SPRITE.CRAFT_AMETHYST_SPEAR] = Ie[SPRITE.INV_AMETHYST_SPEAR],
                    Ie[SPRITE.INV_DRAGON_SPEAR] = Xe(1, [{
                        f: oi,
                        x: 2,
                        y: 0,
                        a: 1,
                        r: window.Math.PI / 5,
                        c: ["#0d1b1c", "#1e2b34", "#151c24", "#99d7dd", "#7dcbd1", "#c6e8eb", "#aadee8", "#b7e2e5"]
                    }], .38, ["#35b1b5", "#46c2c9", "#33b4e4"], .5),
                    Ie[SPRITE.CRAFT_DRAGON_SPEAR] = Ie[SPRITE.INV_DRAGON_SPEAR],
                    Ie[SPRITE.CHEST_DRAGON_SPEAR] = Ie[SPRITE.INV_DRAGON_SPEAR],
                    Ie[SPRITE.INV_HAMMER] = Xe(1, [{
                        f: ci,
                        x: 2,
                        y: 0,
                        a: 1,
                        r: window.Math.PI / 5,
                        c: ["#0d1b1c", "#4d2d14", "#432516", "#939393", "#5f6061"]
                    }], .52, ["#35b1b5", "#46c2c9", "#33b4e4"], .5),
                    Ie[SPRITE.CRAFT_HAMMER] = Ie[SPRITE.INV_HAMMER],
                    Ie[SPRITE.INV_SPANNER] = Xe(1, [{
                        f: Gn,
                        x: 0,
                        y: 0,
                        a: 1,
                        r: window.Math.PI / 5,
                        c: ["#0d1b1c", "#939393", "#5f6061"]
                    }], .3, ["#35b1b5", "#46c2c9", "#33b4e4"], .5),
                    Ie[SPRITE.CRAFT_SPANNER] = Ie[SPRITE.INV_SPANNER],
                    Ie[SPRITE.INV_GOLD_WRENCH] = Xe(1, [{
                        f: Gn,
                        x: 0,
                        y: 0,
                        a: 1,
                        r: window.Math.PI / 5,
                        c: ["#0d1b1c", "#939393", "#5f6061"]
                    }], .3, ["#35b1b5", "#46c2c9", "#33b4e4"], .5),
                    Ie[SPRITE.INV_SUPER_HAMMER] = Xe(1, [{
                        f: Tn,
                        x: 2,
                        y: 0,
                        a: 1,
                        r: window.Math.PI / 5,
                        c: ["#0d1b1c", "#9b5927", "#7a3610", "#1e0302", "#0d825b", "#6bd16e", "#17915d", "#89e5aa", "#16935d", "#a0efc4", "#28b26d", "#cdf4cb", "#42cc90"]
                    }], .52, ["#35b1b5", "#46c2c9", "#33b4e4"], .5),
                    Ie[SPRITE.CRAFT_SUPER_HAMMER] = Ie[SPRITE.INV_SUPER_HAMMER],
                    Ie[SPRITE.INV_HAMMER_GOLD] = Xe(1, [{
                        f: ci,
                        x: 2,
                        y: 0,
                        a: 1,
                        r: window.Math.PI / 5,
                        c: ["#0d1b1c", "#493e26", "#382e19", "#c4bc51", "#b29c32"]
                    }], .52, ["#35b1b5", "#46c2c9", "#33b4e4"], .5),
                    Ie[SPRITE.CRAFT_HAMMER_GOLD] = Ie[SPRITE.INV_HAMMER_GOLD],
                    Ie[SPRITE.INV_HAMMER_DIAMOND] = Xe(1, [{
                        f: ci,
                        x: 2,
                        y: 0,
                        a: 1,
                        r: window.Math.PI / 5,
                        c: ["#0d1b1c", "#262114", "#211108", "#63c9d6", "#29aaa1"]
                    }], .52, ["#35b1b5", "#46c2c9", "#33b4e4"], .5),
                    Ie[SPRITE.CRAFT_HAMMER_DIAMOND] = Ie[SPRITE.INV_HAMMER_DIAMOND],
                    Ie[SPRITE.INV_HAMMER_AMETHYST] = Xe(1, [{
                        f: ci,
                        x: 2,
                        y: 0,
                        a: 1,
                        r: window.Math.PI / 5,
                        c: ["#0d1b1c", "#262114", "#211108", "#b864d6", "#8c29aa"]
                    }], .52, ["#35b1b5", "#46c2c9", "#33b4e4"], .5),
                    Ie[SPRITE.CRAFT_HAMMER_AMETHYST] = Ie[SPRITE.INV_HAMMER_AMETHYST],
                    Ie[SPRITE.INV_HAMMER_REIDITE] = [],
                    Ie[SPRITE.INV_HAMMER_REIDITE][0] = P.INV_HAMMER_REIDITE_OUT,
                    Ie[SPRITE.INV_HAMMER_REIDITE][1] = P.INV_HAMMER_REIDITE_IN,
                    Ie[SPRITE.INV_HAMMER_REIDITE][2] = P.INV_HAMMER_REIDITE_CLICK,
                    Ie[SPRITE.CHEST_HAMMER_REIDITE] = Ie[SPRITE.INV_HAMMER_REIDITE],
                    Ie[SPRITE.CRAFT_HAMMER_REIDITE] = Ie[SPRITE.INV_HAMMER_REIDITE],
                    Ie[SPRITE.INV_EMERALD_MACHINE] = [],
                    Ie[SPRITE.INV_EMERALD_MACHINE][0] = P.INV_EMERALD_MACHINE_OUT,
                    Ie[SPRITE.INV_EMERALD_MACHINE][1] = P.INV_EMERALD_MACHINE_IN,
                    Ie[SPRITE.INV_EMERALD_MACHINE][2] = P.INV_EMERALD_MACHINE_CLICK,
                    Ie[SPRITE.CHEST_EMERALD_MACHINE] = Ie[SPRITE.INV_EMERALD_MACHINE],
                    Ie[SPRITE.CRAFT_EMERALD_MACHINE] = Ie[SPRITE.INV_EMERALD_MACHINE],
                    Ie[SPRITE.INV_EXTRACTOR_MACHINE_STONE] = [],
                    Ie[SPRITE.INV_EXTRACTOR_MACHINE_STONE][0] = P.INV_EXTRACTOR_MACHINE_STONE_OUT,
                    Ie[SPRITE.INV_EXTRACTOR_MACHINE_STONE][1] = P.INV_EXTRACTOR_MACHINE_STONE_IN,
                    Ie[SPRITE.INV_EXTRACTOR_MACHINE_STONE][2] = P.INV_EXTRACTOR_MACHINE_STONE_CLICK,
                    Ie[SPRITE.CHEST_EXTRACTOR_MACHINE_STONE] = Ie[SPRITE.INV_EXTRACTOR_MACHINE_STONE],
                    Ie[SPRITE.CRAFT_EXTRACTOR_MACHINE_STONE] = Ie[SPRITE.INV_EXTRACTOR_MACHINE_STONE],
                    Ie[SPRITE.INV_EXTRACTOR_MACHINE_GOLD] = [],
                    Ie[SPRITE.INV_EXTRACTOR_MACHINE_GOLD][0] = P.INV_EXTRACTOR_MACHINE_GOLD_OUT,
                    Ie[SPRITE.INV_EXTRACTOR_MACHINE_GOLD][1] = P.INV_EXTRACTOR_MACHINE_GOLD_IN,
                    Ie[SPRITE.INV_EXTRACTOR_MACHINE_GOLD][2] = P.INV_EXTRACTOR_MACHINE_GOLD_CLICK,
                    Ie[SPRITE.CHEST_EXTRACTOR_MACHINE_GOLD] = Ie[SPRITE.INV_EXTRACTOR_MACHINE_GOLD],
                    Ie[SPRITE.CRAFT_EXTRACTOR_MACHINE_GOLD] = Ie[SPRITE.INV_EXTRACTOR_MACHINE_GOLD],
                    Ie[SPRITE.INV_DIAMOND_EXTRACTOR] = [],
                    Ie[SPRITE.INV_DIAMOND_EXTRACTOR][0] = P.INV_DIAMOND_EXTRACTOR_OUT,
                    Ie[SPRITE.INV_DIAMOND_EXTRACTOR][1] = P.INV_DIAMOND_EXTRACTOR_IN,
                    Ie[SPRITE.INV_DIAMOND_EXTRACTOR][2] = P.INV_DIAMOND_EXTRACTOR_CLICK,
                    Ie[SPRITE.CHEST_DIAMOND_EXTRACTOR] = Ie[SPRITE.INV_DIAMOND_EXTRACTOR],
                    Ie[SPRITE.CRAFT_DIAMOND_EXTRACTOR] = Ie[SPRITE.INV_DIAMOND_EXTRACTOR],
                    Ie[SPRITE.INV_EXTRACTOR_MACHINE_AMETHYST] = [],
                    Ie[SPRITE.INV_EXTRACTOR_MACHINE_AMETHYST][0] = P.INV_EXTRACTOR_MACHINE_AMETHYST_OUT,
                    Ie[SPRITE.INV_EXTRACTOR_MACHINE_AMETHYST][1] = P.INV_EXTRACTOR_MACHINE_AMETHYST_IN,
                    Ie[SPRITE.INV_EXTRACTOR_MACHINE_AMETHYST][2] = P.INV_EXTRACTOR_MACHINE_AMETHYST_CLICK,
                    Ie[SPRITE.CHEST_EXTRACTOR_MACHINE_AMETHYST] = Ie[SPRITE.INV_EXTRACTOR_MACHINE_AMETHYST],
                    Ie[SPRITE.CRAFT_EXTRACTOR_MACHINE_AMETHYST] = Ie[SPRITE.INV_EXTRACTOR_MACHINE_AMETHYST],
                    Ie[SPRITE.INV_EXTRACTOR_MACHINE_REIDITE] = [],
                    Ie[SPRITE.INV_EXTRACTOR_MACHINE_REIDITE][0] = P.INV_EXTRACTOR_MACHINE_REIDITE_OUT,
                    Ie[SPRITE.INV_EXTRACTOR_MACHINE_REIDITE][1] = P.INV_EXTRACTOR_MACHINE_REIDITE_IN,
                    Ie[SPRITE.INV_EXTRACTOR_MACHINE_REIDITE][2] = P.INV_EXTRACTOR_MACHINE_REIDITE_CLICK,
                    Ie[SPRITE.CHEST_EXTRACTOR_MACHINE_REIDITE] = Ie[SPRITE.INV_EXTRACTOR_MACHINE_REIDITE],
                    Ie[SPRITE.CRAFT_EXTRACTOR_MACHINE_REIDITE] = Ie[SPRITE.INV_EXTRACTOR_MACHINE_REIDITE],
                    Ie[SPRITE.INV_LOCK] = Xe(1, [{
                        f: Xi,
                        x: -2,
                        y: -2,
                        a: 1,
                        r: 0,
                        c: ["#141414", "#816511", "#c4a23a", "#3a3a3a"]
                    }], .8, ["#2b5c48", "#2b5c48", "#2b5c48"], .5),
                    Ie[SPRITE.CRAFT_LOCK] = Ie[SPRITE.INV_LOCK],
                    Ie[SPRITE.INV_LOCKPICK] = Xe(1, [{
                        f: Ji,
                        x: -2,
                        y: -2,
                        a: 1,
                        r: -window.Math.PI / 5,
                        c: ["#141414", "#c4a23a", "#816511"]
                    }], .08, ["#2b5c48", "#2b5c48", "#2b5c48"], .5),
                    Ie[SPRITE.CRAFT_LOCKPICK] = Ie[SPRITE.INV_LOCKPICK],
                    Ie[SPRITE.INV_DRAGON_HEART] = Xe(1, [{
                        f: an,
                        x: -2,
                        y: -2,
                        a: 1,
                        r: 0,
                        c: ["#141414", "#178a99", "#0a6372", "#03282e"]
                    }], .3, ["#2b5c48", "#2b5c48", "#2b5c48"], .7),
                    Ie[SPRITE.INV_LAVA_HEART] = Xe(1, [{
                        f: an,
                        x: -2,
                        y: -2,
                        a: 1,
                        r: 0,
                        c: ["#120202", "#991616", "#750a0a", "#120202"]
                    }], .3, ["#2b5c48", "#2b5c48", "#2b5c48"], .7),
                    Ie[SPRITE.INV_RESURRECTION] = Xe(1, [{
                        f: Qi,
                        x: 0,
                        y: 0,
                        a: 1,
                        r: 0,
                        c: ["#347f93", "#54a4ba"]
                    }, {
                        f: nn,
                        x: 0,
                        y: 0,
                        a: 1,
                        r: 0,
                        c: ["#347f93", "#54a4ba", "#1c2528", "#a9e4ed", "#86d4e0", "#959da0", "#697072", "#929da0", "#afb9bc", "#418ba5", "#59b8ce"]
                    }, {
                        f: tn,
                        x: 0,
                        y: 0,
                        a: 1,
                        r: 0,
                        c: ["#a9e4ed", "#86d4e0"]
                    }, {
                        f: en,
                        x: 0,
                        y: 0,
                        a: 1,
                        r: 0,
                        c: ["#a9e4ed", "#86d4e0", "#418ba5", "#59b8ce"]
                    }], .3, ["#3ba578", "#4eb687", "#3da34d"], .5),
                    Ie[SPRITE.CRAFT_RESURRECTION] = Ie[SPRITE.INV_RESURRECTION],
                    Ie[SPRITE.INV_TOTEM] = Xe(1, [{
                        f: qi,
                        x: 45,
                        y: 70,
                        a: 1,
                        r: 0,
                        c: ["#0d1b1c", "#4c3a15", "#634828", "#564021"]
                    }], .6, ["#3ba578", "#4eb687", "#3da34d"], .5),
                    Ie[SPRITE.CRAFT_TOTEM] = Ie[SPRITE.INV_TOTEM],
                    Ie[SPRITE.INV_AMETHYST_HELMET] = Xe(1, [{
                        f: xi,
                        x: 0,
                        y: 0,
                        a: 1,
                        r: 0,
                        c: ["#0d1b1c", "#8c55b7", "#652d8e", "#79359e", "#5eccd1", "#4badad", "#9e6ac6"]
                    }], .52, ["#35b1b5", "#46c2c9", "#33b4e4"], .5),
                    Ie[SPRITE.CRAFT_AMETHYST_HELMET] = Ie[SPRITE.INV_AMETHYST_HELMET],
                    Ie[SPRITE.INV_WINTER_HOOD] = Xe(1, [{
                        f: Nn,
                        x: 0,
                        y: 0,
                        a: 1,
                        r: 0,
                        c: ["#2a2938", "#242330", "#313041", "#1b1a25"]
                    }], .12, ["#35b1b5", "#46c2c9", "#33b4e4"], .5),
                    Ie[SPRITE.CRAFT_WINTER_HOOD] = Ie[SPRITE.INV_WINTER_HOOD],
                    Ie[SPRITE.INV_HOOD] = Xe(1, [{
                        f: bn,
                        x: 0,
                        y: 0,
                        a: 1,
                        r: 0,
                        c: ["#2a2938", "#242330", "#313041"]
                    }], .25, ["#35b1b5", "#46c2c9", "#33b4e4"], .5),
                    Ie[SPRITE.CRAFT_HOOD] = Ie[SPRITE.INV_HOOD],
                    Ie[SPRITE.INV_WINTER_PEASANT] = Xe(1, [{
                        f: vn,
                        x: 0,
                        y: 3,
                        a: 1,
                        r: 0,
                        c: ["#1d1d22", "#e2e1e1", "#d2cbcb", "#cfcbc8", "#beb5b5", "#ada0a0"]
                    }], .39, ["#35b1b5", "#46c2c9", "#33b4e4"], .5),
                    Ie[SPRITE.CRAFT_WINTER_PEASANT] = Ie[SPRITE.INV_WINTER_PEASANT],
                    Ie[SPRITE.INV_PEASANT] = Xe(1, [{
                        f: vn,
                        x: 0,
                        y: 3,
                        a: 1,
                        r: 0,
                        c: ["#1d1d22", "#8c7654", "#785f4c", "#a88e6c", "#785f4c", "#705845"]
                    }], .39, ["#35b1b5", "#46c2c9", "#33b4e4"], .5),
                    Ie[SPRITE.CRAFT_PEASANT] = Ie[SPRITE.INV_PEASANT],
                    Ie[SPRITE.INV_CROWN_GREEN] = Xe(1, [{
                        f: Fn,
                        x: 0,
                        y: 10,
                        a: 1,
                        r: 0,
                        c: ["#0d1b1c", "#A5A244", "#D8DC74", "#C0BF55", "#49B669", "#19994C", "#71C187"]
                    }], .15, ["#35b1b5", "#46c2c9", "#33b4e4"], .5),
                    Ie[SPRITE.CRAFT_CROWN_GREEN] = Ie[SPRITE.INV_CROWN_GREEN],
                    Ie[SPRITE.INV_CROWN_ORANGE] = Xe(1, [{
                        f: Fn,
                        x: 0,
                        y: 10,
                        a: 1,
                        r: 0,
                        c: ["#0d1b1c", "#A5A244", "#D8DC74", "#C0BF55", "#C45727", "#994617", "#DB9358"]
                    }], .15, ["#35b1b5", "#46c2c9", "#33b4e4"], .5),
                    Ie[SPRITE.CRAFT_CROWN_ORANGE] = Ie[SPRITE.INV_CROWN_ORANGE],
                    Ie[SPRITE.INV_CROWN_BLUE] = Xe(1, [{
                        f: Fn,
                        x: 0,
                        y: 10,
                        a: 1,
                        r: 0,
                        c: ["#0d1b1c", "#A5A244", "#D8DC74", "#C0BF55", "#2792C1", "#196599", "#59C0D8"]
                    }], .15, ["#35b1b5", "#46c2c9", "#33b4e4"], .5),
                    Ie[SPRITE.CRAFT_CROWN_BLUE] = Ie[SPRITE.INV_CROWN_BLUE],
                    Ie[SPRITE.INV_CROWN_CRAB] = Xe(1, [{
                        f: Zt,
                        x: -1,
                        y: 0,
                        a: 1,
                        r: 0,
                        c: ["#000000", "#b03431", "#94312d", "#bd3c33", "#de5445"]
                    }], .15, ["#35b1b5", "#46c2c9", "#33b4e4"], .5),
                    Ie[SPRITE.CRAFT_CROWN_CRAB] = Ie[SPRITE.INV_CROWN_CRAB],
                    Ie[SPRITE.CHEST_CROWN_CRAB] = Ie[SPRITE.INV_CROWN_CRAB],
                    Ie[SPRITE.INV_DRAGON_HELMET] = Xe(1, [{
                        f: pi,
                        x: 0,
                        y: 0,
                        a: 1,
                        r: 0,
                        c: ["#0d1b1c", "#cae9eb", "#75bcae", "#ffffff", "#51736d", "#2b4d48", "#1b3a3a", "#80ccca", "#59ada7"]
                    }], .2, ["#35b1b5", "#46c2c9", "#33b4e4"], .5),
                    Ie[SPRITE.CRAFT_DRAGON_HELMET] = Ie[SPRITE.INV_DRAGON_HELMET],
                    Ie[SPRITE.INV_DRAGON_SWORD] = Xe(1, [{
                        f: on,
                        x: 0,
                        y: 0,
                        a: 1,
                        r: window.Math.PI / 5,
                        c: ["#0d1b1c", "#284c4a", "#193533", "#c7efef", "#7fccca"]
                    }], .75, ["#35b1b5", "#46c2c9", "#33b4e4"], .5),
                    Ie[SPRITE.CRAFT_DRAGON_SWORD] = Ie[SPRITE.INV_DRAGON_SWORD],
                    Ie[SPRITE.INV_DRAGON_CUBE] = Xe(1, [{
                        f: hn,
                        x: 0,
                        y: 0,
                        a: 1,
                        r: 0,
                        c: ["#44bae0", "#9fdae9", "#7dd1ea", "#c6e8ef"]
                    }], .55, ["#2b5c48", "#2b5c48", "#2b5c48"], .5),
                    Ie[SPRITE.INV_DRAGON_ORB] = Xe(1, [{
                        f: sn,
                        x: 0,
                        y: 0,
                        a: 1,
                        r: 0,
                        c: ["#44bae0", "#9fdae9", "#7dd1ea", "#c6e8ef"]
                    }], .55, ["#2b5c48", "#2b5c48", "#2b5c48"], .5),
                    Ie[SPRITE.INV_LAVA_CUBE] = Xe(1, [{
                        f: hn,
                        x: 0,
                        y: 0,
                        a: 1,
                        r: 0,
                        c: ["#e04444", "#e99f9f", "#eb7e7e", "#eec6c6"]
                    }], .55, ["#2b5c48", "#2b5c48", "#2b5c48"], .5),
                    Ie[SPRITE.INV_LAVA_ORB] = Xe(1, [{
                        f: sn,
                        x: 0,
                        y: 0,
                        a: 1,
                        r: 0,
                        c: ["#e04444", "#e99f9f", "#eb7e7e", "#eec6c6"]
                    }], .55, ["#2b5c48", "#2b5c48", "#2b5c48"], .5),
                    Ie[ItemType.GEM_GREEN] = Xe(1, [{
                        f: In,
                        x: 0,
                        y: 0,
                        a: 1,
                        r: 0,
                        c: ["#59ba72", "#94d966", "#5aa628", "#0d1b1c", "#38874d"]
                    }], .35, ["#2b5c48", "#2b5c48", "#2b5c48"], .5),
                    Ie[ItemType.GEM_ORANGE] = Xe(1, [{
                        f: In,
                        x: 0,
                        y: 0,
                        a: 1,
                        r: 0,
                        c: ["#C45727", "#de7d46", "#DB9358", "#0d1b1c", "#994617"]
                    }], .35, ["#2b5c48", "#2b5c48", "#2b5c48"], .5),
                    Ie[ItemType.GEM_BLUE] = Xe(1, [{
                        f: In,
                        x: 0,
                        y: 0,
                        a: 1,
                        r: 0,
                        c: ["#3a9dbd", "#59C0D8", "#48abcb", "#0d1b1c", "#196599"]
                    }], .35, ["#2b5c48", "#2b5c48", "#2b5c48"], .5),
                    Ie[SPRITE.INV_SHOVEL] = Xe(1, [{
                        f: Bn,
                        x: 0,
                        y: 0,
                        a: 1,
                        r: window.Math.PI / 5,
                        c: ["#0d1b1c", "#6d5041", "#4f3d35", "#939393", "#5f6061", "#757575"]
                    }], .45, ["#35b1b5", "#46c2c9", "#33b4e4"], .5),
                    Ie[SPRITE.CRAFT_SHOVEL] = Ie[SPRITE.INV_SHOVEL],
                    Ie[SPRITE.INV_SHOVEL_GOLD] = Xe(1, [{
                        f: Bn,
                        x: 0,
                        y: 0,
                        a: 1,
                        r: window.Math.PI / 5,
                        c: ["#0d1b1c", "#493e26", "#382e19", "#c4bc51", "#b29c32", "#b4ac45"]
                    }], .45, ["#35b1b5", "#46c2c9", "#33b4e4"], .5),
                    Ie[SPRITE.CRAFT_SHOVEL_GOLD] = Ie[SPRITE.INV_SHOVEL_GOLD],
                    Ie[SPRITE.INV_SHOVEL_DIAMOND] = Xe(1, [{
                        f: Bn,
                        x: 0,
                        y: 0,
                        a: 1,
                        r: window.Math.PI / 5,
                        c: ["#0d1b1c", "#262114", "#211108", "#63c9d6", "#29aaa1", "#42aab8"]
                    }], .45, ["#35b1b5", "#46c2c9", "#33b4e4"], .5),
                    Ie[SPRITE.CRAFT_SHOVEL_DIAMOND] = Ie[SPRITE.INV_SHOVEL_DIAMOND],
                    Ie[SPRITE.INV_SHOVEL_AMETHYST] = Xe(1, [{
                        f: Bn,
                        x: 0,
                        y: 0,
                        a: 1,
                        r: window.Math.PI / 5,
                        c: ["#0d1b1c", "#262114", "#211108", "#b864d6", "#8c29aa", "#a853c7"]
                    }], .45, ["#35b1b5", "#46c2c9", "#33b4e4"], .5),
                    Ie[SPRITE.CRAFT_SHOVEL_AMETHYST] = Ie[SPRITE.INV_SHOVEL_AMETHYST],
                    Ie[SPRITE.INV_SHOVEL_REIDITE] = Xe(1, [{
                        f: Bn,
                        x: 0,
                        y: 0,
                        a: 1,
                        r: window.Math.PI / 5,
                        c: ["#0d1b1c", "#6c6464", "#524d4d", "#c24c3a", "#8f392a", "#a03e30"]
                    }], .45, ["#35b1b5", "#46c2c9", "#33b4e4"], .5),
                    Ie[SPRITE.CRAFT_SHOVEL_REIDITE] = Ie[SPRITE.INV_SHOVEL_REIDITE],
                    Ie[SPRITE.INV_EXPLORER_HAT] = Xe(1, [{
                        f: Hi,
                        x: 0,
                        y: 0,
                        a: 1,
                        r: 0,
                        c: ["#c9a65f", "#ae863f", "#655530", "#4a391c", "#ebdd79", "#4a421c"]
                    }], .35, ["#35b1b5", "#46c2c9", "#33b4e4"], .5),
                    Ie[SPRITE.CRAFT_EXPLORER_HAT] = Ie[SPRITE.INV_EXPLORER_HAT],
                    Ie[SPRITE.INV_WOOD_HELMET] = Xe(1, [{
                        f: Ki,
                        x: 0,
                        y: 0,
                        a: 1,
                        r: 0,
                        c: ["#252525", "#73583e", "#493425", "#7d6144"]
                    }], .35, ["#35b1b5", "#46c2c9", "#33b4e4"], .5),
                    Ie[SPRITE.CRAFT_WOOD_HELMET] = Ie[SPRITE.INV_WOOD_HELMET],
                    Ie[SPRITE.INV_STONE_HELMET] = Xe(1, [{
                        f: Gi,
                        x: 0,
                        y: -2,
                        a: 1,
                        r: 0,
                        c: ["#252525", "#808080", "#4a4a4a", "#9e9c8b", "#615c53", "#686969", "#8a8776", "#555555", "#747474", "#969696", "#454545"]
                    }], .4, ["#35b1b5", "#46c2c9", "#33b4e4"], .5),
                    Ie[SPRITE.CRAFT_STONE_HELMET] = Ie[SPRITE.INV_STONE_HELMET],
                    Ie[SPRITE.INV_GOLD_HELMET] = Xe(1, [{
                        f: Wi,
                        x: 0,
                        y: 0,
                        a: 1,
                        r: 0,
                        c: ["#dbce71", "#b29c32", "#c4bc51"]
                    }], .35, ["#35b1b5", "#46c2c9", "#33b4e4"], .5),
                    Ie[SPRITE.CRAFT_GOLD_HELMET] = Ie[SPRITE.INV_GOLD_HELMET],
                    Ie[SPRITE.INV_DIAMOND_HELMET] = Xe(1, [{
                        f: Fi,
                        x: 0,
                        y: 0,
                        a: 1,
                        r: 0,
                        c: ["#717171", "#485252", "#555555", "#65c7cd", "#4aadad", "#358d8b", "#c1e6ea", "#a6dce4"]
                    }], .45, ["#35b1b5", "#46c2c9", "#33b4e4"], .5),
                    Ie[SPRITE.CRAFT_DIAMOND_HELMET] = Ie[SPRITE.INV_DIAMOND_HELMET],
                    Ie[SPRITE.INV_BOOK] = Xe(1, [{
                        f: Vi,
                        x: 0,
                        y: 0,
                        a: 1,
                        r: 0,
                        c: ["#511f00", "#2f1300", "#ffffff", "#d4d4d4", "#5b2400", "#984e21"]
                    }], .15, ["#35b1b5", "#46c2c9", "#33b4e4"], .5),
                    Ie[SPRITE.CRAFT_BOOK] = Ie[SPRITE.INV_BOOK],
                    Ie[SPRITE.INV_PAPER] = Xe(1, [{
                        f: Ui,
                        x: 0,
                        y: 0,
                        a: 1,
                        r: 0,
                        c: ["#221e1b", "#ffffff", "#f6f0e7"]
                    }], .3, ["#2b5c48", "#2b5c48", "#2b5c48"], .5),
                    Ie[SPRITE.CRAFT_PAPER] = Ie[SPRITE.INV_PAPER],
                    Ie[SPRITE.INV_AMETHYST] = Xe(1, [{
                        f: fi,
                        x: -5,
                        y: -5,
                        a: 1,
                        r: 0,
                        c: ["#1d051e", "#c27add", "#cd98e5"]
                    }], .31, ["#2b5c48", "#2b5c48", "#2b5c48"], .5),
                    Ie[ItemType.SAND] = Xe(1, [{
                        f: pn,
                        x: 0,
                        y: 0,
                        a: 1,
                        r: 0,
                        c: ["#D7C393", "#a48c6c"]
                    }], .22, ["#2b5c48", "#2b5c48", "#2b5c48"], .5),
                    Ie[ItemType.ICE] = Xe(1, [{
                        f: Pn,
                        x: 0,
                        y: 0,
                        a: 1,
                        r: 0,
                        c: ["#93CBCE", "#E9F6F6"]
                    }], .3, ["#35b1b5", "#46c2c9", "#33b4e4"], .5),
                    Ie[ItemType.GROUND] = Xe(1, [{
                        f: pn,
                        x: 0,
                        y: 0,
                        a: 1,
                        r: 0,
                        c: ["#866432", "#6b4f25"]
                    }], .22, ["#2b5c48", "#2b5c48", "#2b5c48"], .5),
                    Ie[ItemType.BUCKET_FULL] = Xe(1, [{
                        f: Ln,
                        x: 3,
                        y: 2,
                        a: 1,
                        r: 0,
                        c: ["#1e2021", "#674C2A", "#4C3B19", "#2f2211", "#785931", "#1678a2"]
                    }], .22, ["#2b5c48", "#2b5c48", "#2b5c48"], .5),
                    Ie[ItemType.BUCKET_EMPTY] = Xe(1, [{
                        f: Cn,
                        x: 3,
                        y: 2,
                        a: 1,
                        r: 0,
                        c: ["#1e2021", "#674C2A", "#4C3B19", "#2f2211", "#785931", "#1678a2"]
                    }], .22, ["#2b5c48", "#2b5c48", "#2b5c48"], .5),
                    Ie[SPRITE.CRAFT_BUCKET_FULL] = Ie[ItemType.BUCKET_FULL],
                    Ie[SPRITE.CRAFT_BUCKET_EMPTY] = Ie[ItemType.BUCKET_EMPTY],
                    Ie[SPRITE.INV_WELL] = Xe(1, [{
                        f: un,
                        x: 0,
                        y: 0,
                        a: 1,
                        r: 0,
                        c: ["#1e2021", "#717273", "#606162", "#a09f9f", "#878787", "#454545"]
                    }], .1, ["#3ba578", "#4eb687", "#3da34d"], .5),
                    Ie[SPRITE.CRAFT_WELL] = Ie[SPRITE.INV_WELL],
                    Ie[SPRITE.INV_BOTTLE_FULL] = Xe(1, [{
                        f: On,
                        x: 0,
                        y: 0,
                        a: 1,
                        r: window.Math.PI / 5,
                        c: ["#C6AF81", "#C98435", "#B26F31", "#53A4D5", "#388AC7", "#C1C0C0", "#EAEAEA"]
                    }], .18, ["#3ba578", "#4eb687", "#3da34d"], .5),
                    Ie[SPRITE.INV_BOTTLE_EMPTY] = Xe(1, [{
                        f: kn,
                        x: 0,
                        y: 0,
                        a: 1,
                        r: window.Math.PI / 5,
                        c: ["#C6AF81", "#C98435", "#B26F31", "#53A4D5", "#388AC7", "#C1C0C0", "#EAEAEA"]
                    }], .18, ["#2b5c48", "#2b5c48", "#2b5c48"], .5),
                    Ie[SPRITE.CRAFT_BOTTLE_FULL] = Ie[SPRITE.INV_BOTTLE_FULL],
                    Ie[SPRITE.CRAFT_BOTTLE_EMPTY] = Ie[SPRITE.INV_BOTTLE_EMPTY],
                    Ie[SPRITE.INV_COOKIE] = Xe(1, [{
                        f: pt,
                        x: 0,
                        y: 0,
                        a: 1,
                        r: 0,
                        c: ["#eedacc", "#dfbda7", "#dab094", "#63391a", "#523124"]
                    }], .3, ["#3ba578", "#4eb687", "#3da34d"], .5),
                    Ie[SPRITE.CRAFT_COOKIE] = Ie[SPRITE.INV_COOKIE],
                    Ie[ItemType.CANDY] = Xe(1, [{
                        f: Pt,
                        x: 0,
                        y: 0,
                        a: 1,
                        r: 0,
                        c: ["#1a1011", "#e29c2b", "#b76413", "#d6c418", "#e0bf32", "#b78a1a", "#aa1a17", "#cc9f2f", "#cc741d", "#b51524", "#bc1522", "#991922", "#a01ed5", "#d51e81"]
                    }], .3, ["#3ba578", "#4eb687", "#3da34d"], .5),
                    Ie[SPRITE.INV_FERRERO] = Xe(1, [{
                        f: wt,
                        x: 0,
                        y: 0,
                        a: 1,
                        r: 0,
                        c: ["#1a1011", "#693c2a", "#54311f", "#9f7a3d", "#492d1d", "#dbb175", "#54311f", "#9f7a3d", "#604720"]
                    }], .6, ["#3ba578", "#4eb687", "#3da34d"], .5),
                    Ie[ItemType.BREAD] = Xe(1, [{
                        f: Rn,
                        x: 0,
                        y: -2,
                        a: 1,
                        r: 0,
                        c: ["#1d051e", "#bf8d51", "#7d5133", "#e8d6bf", "#e0c8a9", "#ab7a3f"]
                    }], .17, ["#3ba578", "#4eb687", "#3da34d"], .5),
                    Ie[SPRITE.CRAFT_BREAD] = Ie[ItemType.BREAD],
                    Ie[SPRITE.INV_FOODFISH] = Xe(1, [{
                        f: Mt,
                        x: -3,
                        y: -5,
                        a: 1,
                        r: 0,
                        c: ["#1d051e", "#63767c", "#424f51", "#6c8288", "#536468", "#202020", "#ffffff", "#806f60", "#514942", "#756557"]
                    }], .23, ["#3ba578", "#4eb687", "#3da34d"], .5),
                    Ie[SPRITE.INV_FOODFISH_COOKED] = Xe(1, [{
                        f: Yt,
                        x: 0,
                        y: 0,
                        a: 1,
                        r: 0,
                        c: ["#1d051e", "#42261A", "#281818"]
                    }], .23, ["#3ba578", "#4eb687", "#3da34d"], .5),
                    Ie[SPRITE.CRAFT_FOODFISH_COOKED] = Ie[SPRITE.INV_FOODFISH_COOKED],
                    Ie[SPRITE.INV_DIVING_MASK] = Xe(1, [{
                        f: Ct,
                        x: -3,
                        y: 0,
                        a: 1,
                        r: 0,
                        c: ["#1e2021", "#65A8B7", "#2E85A0", "#14275B", "#081826", "#1A3163", "#0C1944", "#89C4CE", "#2E85A0"]
                    }], .2, ["#35b1b5", "#46c2c9", "#33b4e4"], .5),
                    Ie[SPRITE.CRAFT_DIVING_MASK] = Ie[SPRITE.INV_DIVING_MASK],
                    Ie[SPRITE.INV_SCALES] = Xe(1, [{
                        f: Ke,
                        x: 0,
                        y: 0,
                        a: 1,
                        r: 0,
                        c: ["#1e2021", "#961B1B", "#702727", "#C43B3B"]
                    }], .15, ["#2b5c48", "#2b5c48", "#2b5c48"], .5),
                    Ie[SPRITE.INV_SUPER_DIVING_SUIT] = Xe(1, [{
                        f: Lt,
                        x: 0,
                        y: 0,
                        a: 1,
                        r: 0,
                        c: ["#F0D200", "#B09A00", "#79359E", "#652D8E", "#1e2021"]
                    }], .3, ["#35b1b5", "#46c2c9", "#33b4e4"], .5),
                    Ie[SPRITE.CRAFT_SUPER_DIVING_SUIT] = Ie[SPRITE.INV_SUPER_DIVING_SUIT],
                    Ie[SPRITE.INV_PLOT] = Xe(1, [{
                        f: wn,
                        x: 0,
                        y: 0,
                        a: 1,
                        r: 0,
                        c: ["#1e2021", "#352E1E", "#4C3B19", "#574122"]
                    }], .3, ["#3ba578", "#4eb687", "#3da34d"], .5),
                    Ie[SPRITE.CRAFT_PLOT] = Ie[SPRITE.INV_PLOT],
                    Ie[SPRITE.INV_GARLAND] = Xe(1, [{
                        f: Pe,
                        x: -5,
                        y: -5,
                        a: 1,
                        r: 0,
                        c: ["#e2d63b", "#ee71a9", "#42b672"]
                    }], 1, ["#3ba578", "#4eb687", "#3da34d"], .5),
                    Ie[SPRITE.CHEST_GARLAND] = Ie[SPRITE.INV_GARLAND],
                    Ie[SPRITE.INV_BRIDGE] = Xe(1, [{
                        f: cn,
                        x: 0,
                        y: 0,
                        a: 1,
                        r: 0,
                        c: ["#1e2021", "#332715", "#4C3B19", "#574122"]
                    }], .5, ["#3ba578", "#4eb687", "#3da34d"], .5),
                    Ie[SPRITE.CRAFT_BRIDGE] = Ie[SPRITE.INV_BRIDGE],
                    Ie[SPRITE.INV_ROOF] = Xe(1, [{
                        f: _e,
                        x: 0,
                        y: 0,
                        a: 1,
                        r: 0,
                        c: ["#1e2021", "#352618", "#402b18", "#4c3b19", "#574122", "#52391e"]
                    }], .3, ["#3ba578", "#4eb687", "#3da34d"], .5),
                    Ie[SPRITE.CRAFT_ROOF] = Ie[SPRITE.INV_ROOF],
                    Ie[SPRITE.INV_WATERING_CAN_FULL] = Xe(1, [{
                        f: _n,
                        x: -1,
                        y: 0,
                        a: 1,
                        r: -window.Math.PI / 5,
                        c: ["#1e2021", "#674C2A", "#4C3B19", "#594225", "#1678a2"]
                    }], .4, ["#35b1b5", "#46c2c9", "#33b4e4"], .7),
                    Ie[SPRITE.CRAFT_WATERING_CAN_FULL] = Ie[SPRITE.INV_WATERING_CAN_FULL],
                    Ie[SPRITE.INV_WATERING_CAN] = Xe(1, [{
                        f: _n,
                        x: -1,
                        y: 0,
                        a: 1,
                        r: -window.Math.PI / 5,
                        c: ["#1e2021", "#674C2A", "#4C3B19", "#594225", "#3F2D18", "#2D2112"]
                    }], .4, ["#2b5c48", "#2b5c48", "#2b5c48"], .5),
                    Ie[SPRITE.CRAFT_WATERING_CAN] = Ie[SPRITE.INV_WATERING_CAN],
                    Ie[SPRITE.INV_FLOUR] = Xe(1, [{
                        f: gn,
                        x: 0,
                        y: 0,
                        a: 1,
                        r: 0,
                        c: ["#B3AA8E", "#817961", "#EBEAE2", "#E0DFD8"]
                    }], .25, ["#2b5c48", "#2b5c48", "#2b5c48"], .5),
                    Ie[SPRITE.INV_CRAB_STICK] = Xe(1, [{
                        f: Et,
                        x: 0,
                        y: 0,
                        a: 1,
                        r: 0,
                        c: ["#1e2021", "#ed5f4f", "#ce4545", "#ffffff", "#e2dad7"]
                    }], .2, ["#3ba578", "#4eb687", "#3da34d"], .5),
                    Ie[SPRITE.CHEST_CRAB_STICK] = Ie[SPRITE.INV_CRAB_STICK],
                    Ie[SPRITE.INV_CAKE] = Xe(1, [{
                        f: Bt,
                        x: 0,
                        y: 0,
                        a: 1,
                        r: 0,
                        c: ["#1e2021", "#63391a", "#523124", "#d2c4b9", "#c1aca2", "#d8cbc2", "#c8b5ac", "#ac222a", "#e6636a"]
                    }], .25, ["#3ba578", "#4eb687", "#3da34d"], .5),
                    Ie[SPRITE.CRAFT_CAKE] = Ie[SPRITE.INV_CAKE],
                    Ie[ItemType.SANDWICH] = Xe(1, [{
                        f: He,
                        x: -2,
                        y: -8,
                        a: 1,
                        r: 0,
                        c: ["#dfd6bc", "#7b5139", "#bf8d50", "#834e49", "#602820", "#d7ccaa"]
                    }], .25, ["#3ba578", "#4eb687", "#3da34d"], .5),
                    Ie[SPRITE.CRAFT_SANDWICH] = Ie[ItemType.SANDWICH],
                    Ie[SPRITE.INV_LAVA_SWORD] = [],
                    Ie[SPRITE.INV_LAVA_SWORD][0] = P.INV_LAVA_SWORD_OUT,
                    Ie[SPRITE.INV_LAVA_SWORD][1] = P.INV_LAVA_SWORD_IN,
                    Ie[SPRITE.INV_LAVA_SWORD][2] = P.INV_LAVA_SWORD_CLICK,
                    Ie[SPRITE.CRAFT_LAVA_SWORD] = Ie[SPRITE.INV_LAVA_SWORD],
                    Ie[SPRITE.CHEST_LAVA_SWORD] = Ie[SPRITE.INV_LAVA_SWORD],
                    Ie[SPRITE.INV_LAVA_SPEAR] = [],
                    Ie[SPRITE.INV_LAVA_SPEAR][0] = P.INV_LAVA_SPEAR_OUT,
                    Ie[SPRITE.INV_LAVA_SPEAR][1] = P.INV_LAVA_SPEAR_IN,
                    Ie[SPRITE.INV_LAVA_SPEAR][2] = P.INV_LAVA_SPEAR_CLICK,
                    Ie[SPRITE.CRAFT_LAVA_SPEAR] = Ie[SPRITE.INV_LAVA_SPEAR],
                    Ie[SPRITE.CHEST_LAVA_SPEAR] = Ie[SPRITE.INV_LAVA_SPEAR],
                    Ie[SPRITE.CRAFT_REIDITE_SWORD] = Ie[SPRITE.INV_REIDITE_SWORD],
                    Ie[SPRITE.CHEST_REIDITE_SWORD] = Ie[SPRITE.INV_REIDITE_SWORD],
                    Ie[SPRITE.INV_REIDITE_SWORD] = [],
                    Ie[SPRITE.INV_REIDITE_SWORD][0] = P.INV_REIDITE_SWORD_OUT,
                    Ie[SPRITE.INV_REIDITE_SWORD][1] = P.INV_REIDITE_SWORD_IN,
                    Ie[SPRITE.INV_REIDITE_SWORD][2] = P.INV_REIDITE_SWORD_CLICK,
                    Ie[SPRITE.CRAFT_REIDITE_SWORD] = Ie[SPRITE.INV_REIDITE_SWORD],
                    Ie[SPRITE.CHEST_REIDITE_SWORD] = Ie[SPRITE.INV_REIDITE_SWORD],
                    Ie[SPRITE.INV_REIDITE_SPEAR] = [],
                    Ie[SPRITE.INV_REIDITE_SPEAR][0] = P.INV_REIDITE_SPEAR_OUT,
                    Ie[SPRITE.INV_REIDITE_SPEAR][1] = P.INV_REIDITE_SPEAR_IN,
                    Ie[SPRITE.INV_REIDITE_SPEAR][2] = P.INV_REIDITE_SPEAR_CLICK,
                    Ie[SPRITE.CRAFT_REIDITE_SPEAR] = Ie[SPRITE.INV_REIDITE_SPEAR],
                    Ie[SPRITE.CHEST_REIDITE_SPEAR] = Ie[SPRITE.INV_REIDITE_SPEAR],
                    Ie[SPRITE.INV_DIAMOND_PROTECTION] = [],
                    Ie[SPRITE.INV_DIAMOND_PROTECTION][0] = P.INV_DIAMOND_PROTECTION_OUT,
                    Ie[SPRITE.INV_DIAMOND_PROTECTION][1] = P.INV_DIAMOND_PROTECTION_IN,
                    Ie[SPRITE.INV_DIAMOND_PROTECTION][2] = P.INV_DIAMOND_PROTECTION_CLICK,
                    Ie[SPRITE.CRAFT_DIAMOND_PROTECTION] = Ie[SPRITE.INV_DIAMOND_PROTECTION],
                    Ie[SPRITE.CHEST_DIAMOND_PROTECTION] = Ie[SPRITE.INV_DIAMOND_PROTECTION],
                    Ie[SPRITE.INV_AMETHYST_PROTECTION] = [],
                    Ie[SPRITE.INV_AMETHYST_PROTECTION][0] = P.INV_AMETHYST_PROTECTION_OUT,
                    Ie[SPRITE.INV_AMETHYST_PROTECTION][1] = P.INV_AMETHYST_PROTECTION_IN,
                    Ie[SPRITE.INV_AMETHYST_PROTECTION][2] = P.INV_AMETHYST_PROTECTION_CLICK,
                    Ie[SPRITE.CRAFT_AMETHYST_PROTECTION] = Ie[SPRITE.INV_AMETHYST_PROTECTION],
                    Ie[SPRITE.CHEST_AMETHYST_PROTECTION] = Ie[SPRITE.INV_AMETHYST_PROTECTION],
                    Ie[SPRITE.INV_REIDITE_PROTECTION] = [],
                    Ie[SPRITE.INV_REIDITE_PROTECTION][0] = P.INV_REIDITE_PROTECTION_OUT,
                    Ie[SPRITE.INV_REIDITE_PROTECTION][1] = P.INV_REIDITE_PROTECTION_IN,
                    Ie[SPRITE.INV_REIDITE_PROTECTION][2] = P.INV_REIDITE_PROTECTION_CLICK,
                    Ie[SPRITE.CRAFT_REIDITE_PROTECTION] = Ie[SPRITE.INV_REIDITE_PROTECTION],
                    Ie[SPRITE.CHEST_REIDITE_PROTECTION] = Ie[SPRITE.INV_REIDITE_PROTECTION],
                    Ie[SPRITE.INV_REIDITE_HELMET] = [],
                    Ie[SPRITE.INV_REIDITE_HELMET][0] = P.INV_REIDITE_HELMET_OUT,
                    Ie[SPRITE.INV_REIDITE_HELMET][1] = P.INV_REIDITE_HELMET_IN,
                    Ie[SPRITE.INV_REIDITE_HELMET][2] = P.INV_REIDITE_HELMET_CLICK,
                    Ie[SPRITE.CRAFT_REIDITE_HELMET] = Ie[SPRITE.INV_REIDITE_HELMET],
                    Ie[SPRITE.CHEST_REIDITE_HELMET] = Ie[SPRITE.INV_REIDITE_HELMET],
                    Ie[SPRITE.INV_LAVA_HELMET] = [],
                    Ie[SPRITE.INV_LAVA_HELMET][0] = P.INV_LAVA_HELMET_OUT,
                    Ie[SPRITE.INV_LAVA_HELMET][1] = P.INV_LAVA_HELMET_IN,
                    Ie[SPRITE.INV_LAVA_HELMET][2] = P.INV_LAVA_HELMET_CLICK,
                    Ie[SPRITE.CRAFT_LAVA_HELMET] = Ie[SPRITE.INV_LAVA_HELMET],
                    Ie[SPRITE.CHEST_LAVA_HELMET] = Ie[SPRITE.INV_LAVA_HELMET],
                    Ie[SPRITE.INV_FIREFLY] = [],
                    Ie[SPRITE.INV_FIREFLY][0] = P.INV_FIREFLY_OUT,
                    Ie[SPRITE.INV_FIREFLY][1] = P.INV_FIREFLY_IN,
                    Ie[SPRITE.INV_FIREFLY][2] = P.INV_FIREFLY_CLICK,
                    Ie[SPRITE.CHEST_FIREFLY] = Ie[SPRITE.INV_FIREFLY],
                    Ie[SPRITE.INV_WITCH] = [],
                    Ie[SPRITE.INV_WITCH][0] = P.INV_WITCH_OUT,
                    Ie[SPRITE.INV_WITCH][1] = P.INV_WITCH_IN,
                    Ie[SPRITE.INV_WITCH][2] = P.INV_WITCH_CLICK,
                    Ie[SPRITE.CRAFT_WITCH] = Ie[SPRITE.INV_WITCH],
                    Ie[SPRITE.CHEST_WITCH] = Ie[SPRITE.INV_WITCH],
                    Ie[SPRITE.INV_NIMBUS] = [],
                    Ie[SPRITE.INV_NIMBUS][0] = P.INV_NIMBUS_OUT,
                    Ie[SPRITE.INV_NIMBUS][1] = P.INV_NIMBUS_IN,
                    Ie[SPRITE.INV_NIMBUS][2] = P.INV_NIMBUS_CLICK,
                    Ie[SPRITE.CRAFT_NIMBUS] = Ie[SPRITE.INV_NIMBUS],
                    Ie[SPRITE.CHEST_NIMBUS] = Ie[SPRITE.INV_NIMBUS],
                    Ie[SPRITE.INV_REIDITE] = [],
                    Ie[SPRITE.INV_REIDITE][0] = P.INV_REIDITE_OUT,
                    Ie[SPRITE.INV_REIDITE][1] = P.INV_REIDITE_IN,
                    Ie[SPRITE.INV_REIDITE][2] = P.INV_REIDITE_CLICK,
                    Ie[SPRITE.CHEST_REIDITE] = Ie[SPRITE.INV_REIDITE],
                    Ie[SPRITE.INV_FLAME] = [],
                    Ie[SPRITE.INV_FLAME][0] = P.INV_FLAME_OUT,
                    Ie[SPRITE.INV_FLAME][1] = P.INV_FLAME_IN,
                    Ie[SPRITE.INV_FLAME][2] = P.INV_FLAME_CLICK,
                    Ie[SPRITE.CHEST_FLAME] = Ie[SPRITE.INV_FLAME],
                    Ie[SPRITE.CHEST_SHOVEL] = Ie[SPRITE.INV_SHOVEL],
                    Ie[SPRITE.CHEST_SHOVEL_GOLD] = Ie[SPRITE.INV_SHOVEL_GOLD],
                    Ie[SPRITE.CHEST_SHOVEL_DIAMOND] = Ie[SPRITE.INV_SHOVEL_DIAMOND],
                    Ie[SPRITE.CHEST_SHOVEL_AMETHYST] = Ie[SPRITE.INV_SHOVEL_AMETHYST],
                    Ie[SPRITE.CHEST_SHOVEL_REIDITE] = Ie[SPRITE.INV_SHOVEL_REIDITE],
                    Ie[SPRITE.CHEST_SEED] = Ie[SPRITE.INV_SEED],
                    Ie[SPRITE.CHEST_WHEAT_SEED] = Ie[SPRITE.INV_WHEAT_SEED],
                    Ie[SPRITE.CHEST_WINDMILL] = Ie[SPRITE.INV_WINDMILL];
                    Ie[SPRITE.CHEST_WILD_WHEAT] = Ie[SPRITE.INV_WILD_WHEAT],
                    Ie[SPRITE.CHEST_FIRE] = Ie[SPRITE.INV_FIRE],
                    Ie[SPRITE.CHEST_DRAGON_ORB] = Ie[SPRITE.INV_DRAGON_ORB],
                    Ie[SPRITE.CHEST_DRAGON_CUBE] = Ie[SPRITE.INV_DRAGON_CUBE],
                    Ie[SPRITE.CHEST_LAVA_ORB] = Ie[SPRITE.INV_LAVA_ORB],
                    Ie[SPRITE.CHEST_LAVA_CUBE] = Ie[SPRITE.INV_LAVA_CUBE],
                    Ie[SPRITE.CHEST_BIG_FIRE] = Ie[SPRITE.INV_BIG_FIRE],
                    Ie[SPRITE.CHEST_SUGAR_CAN] = Ie[SPRITE.INV_SUGAR_CAN],
                    Ie[SPRITE.CHEST_PIRATE_SWORD] = Ie[SPRITE.INV_PIRATE_SWORD],
                    Ie[SPRITE.CHEST_SWORD_WOOD] = Ie[SPRITE.INV_SWORD_WOOD],
                    Ie[SPRITE.CHEST_SWORD] = Ie[SPRITE.INV_SWORD],
                    Ie[SPRITE.CHEST_SWORD_GOLD] = Ie[SPRITE.INV_SWORD_GOLD],
                    Ie[SPRITE.CHEST_SWORD_DIAMOND] = Ie[SPRITE.INV_SWORD_DIAMOND],
                    Ie[SPRITE.CHEST_SWORD_AMETHYST] = Ie[SPRITE.INV_SWORD_AMETHYST],
                    Ie[SPRITE.CHEST_PICK_WOOD] = Ie[SPRITE.INV_PICK_WOOD],
                    Ie[SPRITE.CHEST_PICK] = Ie[SPRITE.INV_PICK],
                    Ie[SPRITE.CHEST_PICK_GOLD] = Ie[SPRITE.INV_PICK_GOLD],
                    Ie[SPRITE.CHEST_PICK_DIAMOND] = Ie[SPRITE.INV_PICK_DIAMOND],
                    Ie[SPRITE.CHEST_PICK_AMETHYST] = Ie[SPRITE.INV_PICK_AMETHYST],
                    Ie[SPRITE.CHEST_STONE] = Ie[SPRITE.INV_STONE],
                    Ie[SPRITE.CHEST_GOLD] = Ie[SPRITE.INV_GOLD],
                    Ie[SPRITE.CHEST_DIAMOND] = Ie[SPRITE.INV_DIAMOND],
                    Ie[SPRITE.CHEST_WOOD] = Ie[SPRITE.INV_WOOD],
                    Ie[SPRITE.CHEST_PLANT] = Ie[SPRITE.INV_PLANT],
                    Ie[SPRITE.CHEST_WORKBENCH] = Ie[SPRITE.INV_WORK],
                    Ie[SPRITE.CHEST_STONE_WALL] = Ie[SPRITE.INV_STONE_WALL],
                    Ie[SPRITE.CHEST_DIAMOND_WALL] = Ie[SPRITE.INV_DIAMOND_WALL],
                    Ie[SPRITE.CHEST_GOLD_WALL] = Ie[SPRITE.INV_GOLD_WALL],
                    Ie[SPRITE.CHEST_AMETHYST_WALL] = Ie[SPRITE.INV_AMETHYST_WALL],
                    Ie[SPRITE.CHEST_WALL] = Ie[SPRITE.INV_WALL],
                    Ie[SPRITE.CHEST_SPIKE] = Ie[SPRITE.INV_SPIKE],
                    Ie[SPRITE.CHEST_MEAT] = Ie[SPRITE.INV_MEAT],
                    Ie[SPRITE.CHEST_COOKED_MEAT] = Ie[SPRITE.INV_COOKED_MEAT],
                    Ie[SPRITE.CHEST_CORD] = Ie[SPRITE.INV_CORD],
                    Ie[SPRITE.CHEST_BLUE_CORD] = Ie[SPRITE.INV_BLUE_CORD],
                    Ie[SPRITE.CHEST_BANDAGE] = Ie[SPRITE.INV_BANDAGE],
                    Ie[SPRITE.CHEST_LOCK] = Ie[SPRITE.INV_LOCK],
                    Ie[SPRITE.CHEST_LOCKPICK] = Ie[SPRITE.INV_LOCKPICK],
                    Ie[SPRITE.CHEST_RESURRECTION] = Ie[SPRITE.INV_RESURRECTION],
                    Ie[SPRITE.CHEST_DRAGON_HEART] = Ie[SPRITE.INV_DRAGON_HEART],
                    Ie[SPRITE.CHEST_LAVA_HEART] = Ie[SPRITE.INV_LAVA_HEART],
                    Ie[SPRITE.CHEST_DRAGON_SWORD] = Ie[SPRITE.INV_DRAGON_SWORD],
                    Ie[SPRITE.CHEST_TOTEM] = Ie[SPRITE.INV_TOTEM],
                    Ie[SPRITE.CHEST_DOOR_WOOD_CLOSE] = Ie[SPRITE.INV_DOOR_WOOD_CLOSE],
                    Ie[SPRITE.CHEST_CHEST] = Ie[SPRITE.INV_CHEST],
                    Ie[SPRITE.CHEST_SLOT] = F(function(e, t, i) {
                        var n = window.document.createElement("canvas")
                          , a = n.getContext("2d");
                        return n.width = 118 * e,
                        n.height = 129 * e,
                        a.save(),
                        a.translate(90 * e, 90 * e),
                        ye(a, -86.5 * e, -86 * e, 110 * e, 110 * e, 15 * e),
                        a.restore(),
                        he(a, i[0], i[1], 4),
                        a.save(),
                        ye(a, 30 * e, 115 * e, 60 * e, 5 * e, 15 * e),
                        a.restore(),
                        he(a, i[2], i[3], 4),
                        a.save(),
                        ye(a, 50 * e, 117 * e, 20 * e, 10 * e, 15 * e),
                        a.restore(),
                        he(a, i[2]),
                        n
                    }(.8, 0, ["#4c3b19", "#c4a23a", "#c4a23a", "#c4a23a"])),
                    Ie[SPRITE.CHEST_PLUS] = Xe(.5, [{
                        f: ri,
                        x: 0,
                        y: 2,
                        a: 1,
                        r: 0,
                        c: ["#ffffff"]
                    }], .16, ["#c4a23a", "#d0ad41", "#b89733"], .9),
                    Ie[SPRITE.CHEST_STONE_SPIKE] = Ie[SPRITE.INV_STONE_SPIKE],
                    Ie[SPRITE.CHEST_GOLD_SPIKE] = Ie[SPRITE.INV_GOLD_SPIKE],
                    Ie[SPRITE.CHEST_DIAMOND_SPIKE] = Ie[SPRITE.INV_DIAMOND_SPIKE],
                    Ie[SPRITE.CHEST_AMETHYST_SPIKE] = Ie[SPRITE.INV_AMETHYST_SPIKE],
                    Ie[SPRITE.CHEST_BAG] = Ie[SPRITE.INV_BAG],
                    Ie[SPRITE.CHEST_SPECIAL_FUR] = Ie[ItemType.WINTER_HOOD_FUR],
                    Ie[SPRITE.CHEST_SPECIAL_FUR_2] = Ie[ItemType.WINTER_PEASANT_FUR],
                    Ie[SPRITE.CHEST_FUR] = Ie[SPRITE.INV_FUR],
                    Ie[SPRITE.CHEST_KRAKEN_SKIN] = Ie[SPRITE.INV_KRAKEN_SKIN],
                    Ie[SPRITE.CHEST_FUR_WOLF] = Ie[SPRITE.INV_FUR_WOLF],
                    Ie[SPRITE.CHEST_FUR_BOAR] = Ie[SPRITE.INV_FUR_BOAR],
                    Ie[SPRITE.CHEST_FUR_WINTER] = Ie[SPRITE.INV_FUR_WINTER],
                    Ie[SPRITE.CHEST_EARMUFFS] = Ie[SPRITE.INV_EARMUFFS],
                    Ie[SPRITE.CHEST_CAP_SCARF] = Ie[SPRITE.INV_CAP_SCARF],
                    Ie[SPRITE.CHEST_DOOR_STONE_CLOSE] = Ie[SPRITE.INV_DOOR_STONE_CLOSE],
                    Ie[SPRITE.CHEST_DOOR_GOLD_CLOSE] = Ie[SPRITE.INV_DOOR_GOLD_CLOSE],
                    Ie[SPRITE.CHEST_DOOR_DIAMOND_CLOSE] = Ie[SPRITE.INV_DOOR_DIAMOND_CLOSE],
                    Ie[SPRITE.CHEST_DOOR_AMETHYST_CLOSE] = Ie[SPRITE.INV_DOOR_AMETHYST_CLOSE],
                    Ie[SPRITE.CHEST_COAT] = Ie[SPRITE.INV_COAT],
                    Ie[SPRITE.CHEST_WOOD_SPEAR] = Ie[SPRITE.INV_WOOD_SPEAR],
                    Ie[SPRITE.CHEST_SPEAR] = Ie[SPRITE.INV_SPEAR],
                    Ie[SPRITE.CHEST_GOLD_SPEAR] = Ie[SPRITE.INV_GOLD_SPEAR],
                    Ie[SPRITE.CHEST_DIAMOND_SPEAR] = Ie[SPRITE.INV_DIAMOND_SPEAR],
                    Ie[SPRITE.CHEST_AMETHYST_SPEAR] = Ie[SPRITE.INV_AMETHYST_SPEAR],
                    Ie[SPRITE.CHEST_DRAGON_SPEAR] = Ie[SPRITE.INV_DRAGON_SPEAR],
                    Ie[SPRITE.CHEST_SUPER_HAMMER] = Ie[SPRITE.INV_SUPER_HAMMER],
                    Ie[SPRITE.CHEST_SPANNER] = Ie[SPRITE.INV_SPANNER],
                    Ie[SPRITE.CHEST_HAMMER] = Ie[SPRITE.INV_HAMMER],
                    Ie[SPRITE.CHEST_HAMMER_GOLD] = Ie[SPRITE.INV_HAMMER_GOLD],
                    Ie[SPRITE.CHEST_HAMMER_DIAMOND] = Ie[SPRITE.INV_HAMMER_DIAMOND],
                    Ie[SPRITE.CHEST_HAMMER_AMETHYST] = Ie[SPRITE.INV_HAMMER_AMETHYST],
                    Ie[SPRITE.CHEST_FURNACE] = Ie[SPRITE.INV_FURNACE],
                    Ie[SPRITE.CHEST_BREAD_OVEN] = Ie[SPRITE.INV_BREAD_OVEN],
                    Ie[SPRITE.CHEST_EXPLORER_HAT] = Ie[SPRITE.INV_EXPLORER_HAT],
                    Ie[SPRITE.CHEST_STONE_HELMET] = Ie[SPRITE.INV_STONE_HELMET],
                    Ie[SPRITE.CHEST_GOLD_HELMET] = Ie[SPRITE.INV_GOLD_HELMET],
                    Ie[SPRITE.CHEST_DIAMOND_HELMET] = Ie[SPRITE.INV_DIAMOND_HELMET],
                    Ie[SPRITE.CHEST_AMETHYST_HELMET] = Ie[SPRITE.INV_AMETHYST_HELMET],
                    Ie[SPRITE.CHEST_DRAGON_HELMET] = Ie[SPRITE.INV_DRAGON_HELMET],
                    Ie[SPRITE.CHEST_BOOK] = Ie[SPRITE.INV_BOOK],
                    Ie[SPRITE.CHEST_PAPER] = Ie[SPRITE.INV_PAPER],
                    Ie[SPRITE.CHEST_AMETHYST] = Ie[SPRITE.INV_AMETHYST],
                    Ie[SPRITE.CHEST_BRIDGE] = Ie[SPRITE.INV_BRIDGE],
                    Ie[SPRITE.CHEST_ROOF] = Ie[SPRITE.INV_ROOF],
                    Ie[SPRITE.CHEST_PLOT] = Ie[SPRITE.INV_PLOT],
                    Ie[SPRITE.CHEST_SAND] = Ie[ItemType.SAND],
                    Ie[SPRITE.CHEST_BREAD] = Ie[ItemType.BREAD],
                    Ie[SPRITE.CHEST_ICE] = Ie[ItemType.ICE],
                    Ie[SPRITE.CHEST_GROUND] = Ie[ItemType.GROUND],
                    Ie[SPRITE.CHEST_BOTTLE_FULL] = Ie[SPRITE.INV_BOTTLE_FULL],
                    Ie[SPRITE.CHEST_BOTTLE_EMPTY] = Ie[SPRITE.INV_BOTTLE_EMPTY],
                    Ie[SPRITE.CHEST_WATERING_CAN] = Ie[SPRITE.INV_WATERING_CAN],
                    Ie[SPRITE.CHEST_FLOUR] = Ie[SPRITE.INV_FLOUR],
                    Ie[SPRITE.CHEST_COOKIE] = Ie[SPRITE.INV_COOKIE],
                    Ie[SPRITE.CHEST_CANDY] = Ie[ItemType.CANDY],
                    Ie[SPRITE.CHEST_FERRERO] = Ie[SPRITE.INV_FERRERO],
                    Ie[SPRITE.CHEST_SUPER_DIVING_SUIT] = Ie[SPRITE.INV_SUPER_DIVING_SUIT],
                    Ie[SPRITE.CHEST_DIVING_MASK] = Ie[SPRITE.INV_DIVING_MASK],
                    Ie[SPRITE.CHEST_WATERING_CAN_FULL] = Ie[SPRITE.INV_WATERING_CAN_FULL],
                    Ie[SPRITE.CHEST_CAKE] = Ie[SPRITE.INV_CAKE],
                    Ie[SPRITE.CHEST_CRAB_STICK] = Ie[SPRITE.INV_CRAB_STICK],
                    Ie[SPRITE.CHEST_FOODFISH] = Ie[SPRITE.INV_FOODFISH],
                    Ie[SPRITE.CHEST_FOODFISH_COOKED] = Ie[SPRITE.INV_FOODFISH_COOKED],
                    Ie[SPRITE.CHEST_SCALES] = Ie[SPRITE.INV_SCALES],
                    Ie[SPRITE.CHEST_SANDWICH] = Ie[ItemType.SANDWICH],
                    Ie[SPRITE.CHEST_CROWN_GREEN] = Ie[SPRITE.INV_CROWN_GREEN],
                    Ie[SPRITE.CHEST_GEMME_GREEN] = Ie[ItemType.GEM_GREEN],
                    Ie[SPRITE.CHEST_CROWN_ORANGE] = Ie[SPRITE.INV_CROWN_ORANGE],
                    Ie[SPRITE.CHEST_GEMME_ORANGE] = Ie[ItemType.GEM_ORANGE],
                    Ie[SPRITE.CHEST_CROWN_BLUE] = Ie[SPRITE.INV_CROWN_BLUE],
                    Ie[SPRITE.CHEST_GEMME_BLUE] = Ie[ItemType.GEM_BLUE],
                    Ie[SPRITE.CHEST_HOOD] = Ie[SPRITE.INV_HOOD],
                    Ie[SPRITE.CHEST_PEASANT] = Ie[SPRITE.INV_PEASANT],
                    Ie[SPRITE.CHEST_WINTER_PEASANT] = Ie[SPRITE.INV_WINTER_PEASANT],
                    Ie[SPRITE.CHEST_WINTER_HOOD] = Ie[SPRITE.INV_WINTER_HOOD],
                    Ie[SPRITE.CHEST_BUCKET_EMPTY] = Ie[ItemType.BUCKET_EMPTY],
                    Ie[SPRITE.CHEST_BUCKET_FULL] = Ie[ItemType.BUCKET_FULL],
                    Ie[SPRITE.CHEST_WELL] = Ie[SPRITE.INV_WELL],
                    Ie[SPRITE.CHEST_PUMPKIN_SEED] = Ie[SPRITE.INV_PUMPKIN_SEED],
                    Ie[SPRITE.CHEST_GARLIC_SEED] = Ie[SPRITE.INV_GARLIC_SEED],
                    Ie[SPRITE.CHEST_THORNBUSH_SEED] = Ie[SPRITE.INV_THORNBUSH_SEED],
                    Ie[SPRITE.CHEST_WOOD_HELMET] = Ie[SPRITE.INV_WOOD_HELMET]
                }(),
                Ie[SPRITE.BUBBLES] = [],
                Ie[SPRITE.BUBBLES][SPRITE.DAY] = [],
                Ie[SPRITE.BUBBLES][SPRITE.NIGHT] = [];
                for (var e = 0; e < SPRITE.BUBBLES_SIZES; e++)
                    Ie[SPRITE.BUBBLES][SPRITE.DAY].push(F(kt(1, 4 + e, "#59B8CE"))),
                    Ie[SPRITE.BUBBLES][SPRITE.NIGHT].push(F(kt(1, 4 + e, "#90DDD9")));
                Ie[SPRITE.FLAKES] = [],
                Ie[SPRITE.FLAKES][SPRITE.DAY] = [],
                Ie[SPRITE.FLAKES][SPRITE.NIGHT] = [];
                for (e = 0; e < SPRITE.FLAKES_SIZES; e++)
                    Ie[SPRITE.FLAKES][SPRITE.DAY].push(F(kt(1, 4 + e, "#ffffff"))),
                    Ie[SPRITE.FLAKES][SPRITE.NIGHT].push(F(kt(1, 4 + e, "#ffffff")));
                Ie[SPRITE.DESERT] = [],
                Ie[SPRITE.DESERT][SPRITE.DAY] = [],
                Ie[SPRITE.DESERT][SPRITE.NIGHT] = [];
                for (e = 0; e < SPRITE.FLAKES_SIZES; e++)
                    Ie[SPRITE.DESERT][SPRITE.DAY].push(F(kt(1, 6 + e, "#DDCD8A"))),
                    Ie[SPRITE.DESERT][SPRITE.NIGHT].push(F(kt(1, 6 + e, "#155E57")));
                Ie[SPRITE.ASHES] = [],
                Ie[SPRITE.ASHES][SPRITE.DAY] = [],
                Ie[SPRITE.ASHES][SPRITE.NIGHT] = [];
                for (e = 0; e < SPRITE.ASHES_SIZES; e++)
                    Ie[SPRITE.ASHES][SPRITE.DAY].push(F(kt(1, 4 + e, "#353326"))),
                    Ie[SPRITE.ASHES][SPRITE.NIGHT].push(F(kt(1, 4 + e, "#1D2526")));
                Ie[ItemType.GARLAND] = [],
                Ie[ItemType.GARLAND][SPRITE.DAY] = F(we(1.5, 0, ["#ee71a9"])),
                Ie[ItemType.GARLAND][SPRITE.NIGHT] = F(we(1.5, 0, ["#ee71a9"])),
                Ie[SPRITE.GARLANDS] = [Ie[ItemType.GARLAND]],
                Ie[SPRITE.GARLANDS][1] = [],
                Ie[SPRITE.GARLANDS][2] = [],
                Ie[SPRITE.GARLANDS][3] = [],
                Ie[SPRITE.GARLANDS][4] = [],
                Ie[SPRITE.GARLANDS][1][SPRITE.DAY] = F(we(1.5, 0, ["#e2d63b"])),
                Ie[SPRITE.GARLANDS][1][SPRITE.NIGHT] = F(we(1.5, 0, ["#e2d63b"])),
                Ie[SPRITE.GARLANDS][2][SPRITE.DAY] = F(we(1.5, 0, ["#309cbd"])),
                Ie[SPRITE.GARLANDS][2][SPRITE.NIGHT] = F(we(1.5, 0, ["#309cbd"])),
                Ie[SPRITE.GARLANDS][3][SPRITE.DAY] = F(we(1.5, 0, ["#cd232d"])),
                Ie[SPRITE.GARLANDS][3][SPRITE.NIGHT] = F(we(1.5, 0, ["#cd232d"])),
                Ie[SPRITE.GARLANDS][4][SPRITE.DAY] = F(we(1.5, 0, ["#42b672"])),
                Ie[SPRITE.GARLANDS][4][SPRITE.NIGHT] = F(we(1.5, 0, ["#42b672"])),
                N.gup("cti", window.location.href) ? window.document.getElementById("version").innerHTML += "[CTI]" : F = function(e) {
                    return e.loaded = 1,
                    e
                }
                ,
                Ie[SPRITE.MARKET_BGD] = F(function() {
                    var e = window.document.createElement("canvas")
                      , t = e.getContext("2d");
                    e.width = 460,
                    e.height = 220,
                    t.fillStyle = "#3a2a0d",
                    t.fillRect(0, 0, e.width, e.height),
                    t.lineWidth = 4,
                    t.beginPath(),
                    t.strokeStyle = "#513810";
                    for (var i = 20; i < 220; i += 20)
                        t.moveTo(0, i),
                        t.lineTo(460, i),
                        t.closePath(),
                        t.stroke();
                    return e
                }()),
                Ie[ItemType.STONE] = [],
                Ie[ItemType.STONE][SPRITE.DAY] = [],
                Ie[ItemType.STONE][SPRITE.NIGHT] = [],
                Ie[ItemType.STONE][SPRITE.DAY].push(F(gt(1.1, 0, ["#0a2d18", "#c3d1cb", "#e4efe8"]))),
                Ie[ItemType.STONE][SPRITE.DAY].push(F(gt(.9, 0, ["#0a2d18", "#c3d1cb", "#e4efe8"]))),
                Ie[ItemType.STONE][SPRITE.DAY].push(F(gt(.6, 0, ["#0a2d18", "#c3d1cb", "#e4efe8"]))),
                Ie[ItemType.STONE][SPRITE.NIGHT].push(F(gt(1.1, 0, ["#0a2728", "#3c8e88", "#40a39b"]))),
                Ie[ItemType.STONE][SPRITE.NIGHT].push(F(gt(.9, 0, ["#0a2728", "#3c8e88", "#40a39b"]))),
                Ie[ItemType.STONE][SPRITE.NIGHT].push(F(gt(.6, 0, ["#0a2728", "#3c8e88", "#40a39b"]))),
                Ie[ItemType.GOLD] = [],
                Ie[ItemType.GOLD][SPRITE.DAY] = [],
                Ie[ItemType.GOLD][SPRITE.NIGHT] = [],
                Ie[ItemType.GOLD][SPRITE.DAY].push(F(At(1.5, 0, ["#2b280a", "#ddcf8a", "#f4efc6"]))),
                Ie[ItemType.GOLD][SPRITE.DAY].push(F(At(1.3, 0, ["#2b280a", "#ddcf8a", "#f4efc6"]))),
                Ie[ItemType.GOLD][SPRITE.DAY].push(F(At(1.1, 0, ["#2b280a", "#ddcf8a", "#f4efc6"]))),
                Ie[ItemType.GOLD][SPRITE.NIGHT].push(F(At(1.5, 0, ["#030d14", "#1b4444", "#16605a"]))),
                Ie[ItemType.GOLD][SPRITE.NIGHT].push(F(At(1.3, 0, ["#030d14", "#1b4444", "#16605a"]))),
                Ie[ItemType.GOLD][SPRITE.NIGHT].push(F(At(1.1, 0, ["#030d14", "#1b4444", "#16605a"]))),
                Ie[ItemType.DIAMOND] = [],
                Ie[ItemType.DIAMOND][SPRITE.DAY] = [],
                Ie[ItemType.DIAMOND][SPRITE.NIGHT] = [],
                Ie[ItemType.DIAMOND][SPRITE.DAY].push(F(bt(1.1, 0, ["#232828", "#3fc9c9", "#74ede6"]))),
                Ie[ItemType.DIAMOND][SPRITE.DAY].push(F(bt(.9, 0, ["#232828", "#3fc9c9", "#74ede6"]))),
                Ie[ItemType.DIAMOND][SPRITE.DAY].push(F(bt(.7, 0, ["#232828", "#3fc9c9", "#74ede6"]))),
                Ie[ItemType.DIAMOND][SPRITE.NIGHT].push(F(bt(1.1, 0, ["#030d14", "#2b9390", "#57bcb5"]))),
                Ie[ItemType.DIAMOND][SPRITE.NIGHT].push(F(bt(.9, 0, ["#030d14", "#2b9390", "#57bcb5"]))),
                Ie[ItemType.DIAMOND][SPRITE.NIGHT].push(F(bt(.7, 0, ["#030d14", "#2b9390", "#57bcb5"]))),
                Ie[ItemType.ALOE_VERA] = [],
                Ie[ItemType.ALOE_VERA][SPRITE.DAY] = P.ALOE_VERAD,
                Ie[ItemType.ALOE_VERA][SPRITE.NIGHT] = P.ALOE_VERAN,
                Ie[SPRITE.HAND_SHADOW] = [],
                Ie[SPRITE.HAND_SHADOW][SPRITE.DAY] = F(it(.6, ["#0d1b1c"])),
                Ie[SPRITE.HAND_SHADOW][SPRITE.NIGHT] = F(it(.6, ["#030d14"])),
                Ie[SPRITE.GLOVES_HOOD] = [],
                Ie[SPRITE.GLOVES_HOOD][SPRITE.DAY] = F(tt(.6, ["#2a2938", "#242330"])),
                Ie[SPRITE.GLOVES_HOOD][SPRITE.NIGHT] = F(tt(.6, ["#1b1e30", "#161921"])),
                Ie[SPRITE.ZOMBIE_BODY] = [],
                Ie[SPRITE.ZOMBIE_BODY][SPRITE.DAY] = F(Ae(.6, 0, ["#0d1b1c", "#759e6e", "#55604b", "#7d7252", "#575043"])),
                Ie[SPRITE.ZOMBIE_BODY][SPRITE.NIGHT] = F(Ae(.6, 0, ["#030d14", "#11635e", "#02373e", "#0b524d", "#07423f"])),
                Ie[SPRITE.ZOMBIE_HEAD] = [],
                Ie[SPRITE.ZOMBIE_HEAD][SPRITE.DAY] = F(le(.6, 0, ["#0d1b1c", "#759e6e", "#55604b", "#f9ccd4", "#891a1e", "#da232e", "#a52026", "#a02d28", "#721819", "#FFFFFF"])),
                Ie[SPRITE.ZOMBIE_HEAD][SPRITE.NIGHT] = F(le(.6, 0, ["#030d14", "#11635e", "#02373e", "#167771", "#0c5752", "#401d49", "#2e1336", "#261336", "#23163c", "#FFFFFF"])),
                Ie[SPRITE.ZOMBIE_HAND] = [],
                Ie[SPRITE.ZOMBIE_HAND][SPRITE.DAY] = F(et(.4, ["#0d1b1c", "#759e6e", "#55604b"])),
                Ie[SPRITE.ZOMBIE_HAND][SPRITE.NIGHT] = F(et(.4, ["#030d14", "#11635e", "#02373e"])),
                Ie[SPRITE.ZOMBIE_HURT] = F(be(.6, ["#BB0000"])),
                Ie[SPRITE.ZOMBIE_HUNGER] = F(be(.6, ["#DBE71C"])),
                Ie[SPRITE.ZOMBIE_HEAL] = F(be(.6, ["#00BB00"])),
                Ie[ItemType.WOOD] = [],
                Ie[ItemType.WOOD][SPRITE.DAY] = [],
                Ie[ItemType.WOOD][SPRITE.NIGHT] = [],
                Ie[ItemType.WOOD][SPRITE.DAY].push(nt(1.1, ["#13402d", "#0f9862", "#0b8750", "#26ab6e"], !1, 0)),
                Ie[ItemType.WOOD][SPRITE.DAY].push(nt(1.1, ["#0e3022", "#0f9862", "#0b8750", "#26ab6e"], !0, 0)),
                Ie[ItemType.WOOD][SPRITE.DAY].push(nt(.9, ["#0e3022", "#0e7d4c", "#258a4d", "#248c4d"], !1, 0)),
                Ie[ItemType.WOOD][SPRITE.DAY].push(nt(.9, ["#0e3022", "#096d41", "#1f7b43", "#1f7b43"], !0, 0)),
                Ie[ItemType.WOOD][SPRITE.DAY].push(nt(.7, ["#0e3022", "#124c34", "#0E3D26", "#155136"], !1, 0)),
                Ie[ItemType.WOOD][SPRITE.DAY].push(nt(.7, ["#0e3022", "#124c34", "#0E3D26", "#155136"], !0, 0)),
                Ie[ItemType.WOOD][SPRITE.NIGHT].push(nt(1.1, ["#030d14", "#124949", "#0e3838", "#15514f"], !1, 0)),
                Ie[ItemType.WOOD][SPRITE.NIGHT].push(nt(1.1, ["#030d14", "#124949", "#0e3838", "#15514f"], !0, 0)),
                Ie[ItemType.WOOD][SPRITE.NIGHT].push(nt(.9, ["#030d14", "#0b3534", "#144443", "#174240"], !1, 0)),
                Ie[ItemType.WOOD][SPRITE.NIGHT].push(nt(.9, ["#030d14", "#0b3534", "#144443", "#174240"], !0, 0)),
                Ie[ItemType.WOOD][SPRITE.NIGHT].push(nt(.7, ["#030d14", "#082b29", "#073332", "#073332"], !1, 0)),
                Ie[ItemType.WOOD][SPRITE.NIGHT].push(nt(.7, ["#030d14", "#082b29", "#073332", "#073332"], !0, 0)),
                Ie[SPRITE.TREE_BRANCH] = [],
                Ie[SPRITE.TREE_BRANCH][SPRITE.DAY] = [],
                Ie[SPRITE.TREE_BRANCH][SPRITE.NIGHT] = [],
                Ie[SPRITE.TREE_BRANCH][SPRITE.DAY].push(F(It(at(1.1, ["#0e3022", "#4d2d14", "#432516", "#096d41", "#08562e", "#107746"], !1), Ie[ItemType.WOOD][SPRITE.DAY][0]))),
                Ie[SPRITE.TREE_BRANCH][SPRITE.DAY].push(F(It(at(1.1, ["#0e3022", "#4d2d14", "#432516", "#096d41", "#08562e", "#107746"], !0), Ie[ItemType.WOOD][SPRITE.DAY][1]))),
                Ie[SPRITE.TREE_BRANCH][SPRITE.NIGHT].push(F(It(at(1.1, ["#030d14", "#031619", "#041c21", "#0a3333", "#113f3c", "#113f3c"], !1), Ie[ItemType.WOOD][SPRITE.NIGHT][0]))),
                Ie[SPRITE.TREE_BRANCH][SPRITE.NIGHT].push(F(It(at(1.1, ["#030d14", "#031619", "#041c21", "#0a3333", "#113f3c", "#113f3c"], !0), Ie[ItemType.WOOD][SPRITE.NIGHT][1]))),
                Ie[SPRITE.TREE_BRANCH][SPRITE.DAY].push(F(It(at(.9, ["#0e3022", "#4d2d14", "#432516", "#096d41", "#107746", "#107746"], !1), Ie[ItemType.WOOD][SPRITE.DAY][2]))),
                Ie[SPRITE.TREE_BRANCH][SPRITE.DAY].push(F(It(at(.9, ["#0e3022", "#4d2d14", "#432516", "#096d41", "#107746", "#107746"], !0), Ie[ItemType.WOOD][SPRITE.DAY][2]))),
                Ie[SPRITE.TREE_BRANCH][SPRITE.NIGHT].push(F(It(at(.9, ["#030d14", "#031619", "#041c21", "#082b29", "#083b3a", "#083b3a"], !1), Ie[ItemType.WOOD][SPRITE.NIGHT][2]))),
                Ie[SPRITE.TREE_BRANCH][SPRITE.NIGHT].push(F(It(at(.9, ["#030d14", "#031619", "#041c21", "#082b29", "#083b3a", "#083b3a"], !0), Ie[ItemType.WOOD][SPRITE.NIGHT][3]))),
                Ie[ItemType.WOOD][SPRITE.DAY][5] = F(Ie[ItemType.WOOD][SPRITE.DAY][5]),
                Ie[ItemType.WOOD][SPRITE.DAY][4] = F(Ie[ItemType.WOOD][SPRITE.DAY][4]),
                Ie[ItemType.WOOD][SPRITE.DAY][3] = F(Ie[ItemType.WOOD][SPRITE.DAY][3]),
                Ie[ItemType.WOOD][SPRITE.DAY][2] = F(Ie[ItemType.WOOD][SPRITE.DAY][2]),
                Ie[ItemType.WOOD][SPRITE.DAY][1] = F(Ie[ItemType.WOOD][SPRITE.DAY][1]),
                Ie[ItemType.WOOD][SPRITE.DAY][0] = F(Ie[ItemType.WOOD][SPRITE.DAY][0]),
                Ie[ItemType.WOOD][SPRITE.NIGHT][5] = F(Ie[ItemType.WOOD][SPRITE.NIGHT][5]),
                Ie[ItemType.WOOD][SPRITE.NIGHT][4] = F(Ie[ItemType.WOOD][SPRITE.NIGHT][4]),
                Ie[ItemType.WOOD][SPRITE.NIGHT][3] = F(Ie[ItemType.WOOD][SPRITE.NIGHT][3]),
                Ie[ItemType.WOOD][SPRITE.NIGHT][2] = F(Ie[ItemType.WOOD][SPRITE.NIGHT][2]),
                Ie[ItemType.WOOD][SPRITE.NIGHT][1] = F(Ie[ItemType.WOOD][SPRITE.NIGHT][1]),
                Ie[ItemType.WOOD][SPRITE.NIGHT][0] = F(Ie[ItemType.WOOD][SPRITE.NIGHT][0]),
                Ie[ItemType.WOOD_PICK] = [],
                Ie[ItemType.WOOD_PICK][SPRITE.DAY] = F(Se(4, Tt(.75, !0, ["#0d1b1c", "#000000", "#0d1b1c", "#4d2d14", "#432516", "#4d2d14", "#432516"]))),
                Ie[ItemType.WOOD_PICK][SPRITE.NIGHT] = F(Se(4, Tt(.75, !0, ["#030d14", "#000000", "#030d14", "#0d2e33", "#0b2326", "#0d2e33", "#0b2326"]))),
                Ie[ItemType.STONE_PICK] = [],
                Ie[ItemType.STONE_PICK][SPRITE.DAY] = F(Se(4, Tt(.75, !0, ["#0d1b1c", "#000000", "#0d1b1c", "#4d2d14", "#432516", "#939393", "#5f6061"]))),
                Ie[ItemType.STONE_PICK][SPRITE.NIGHT] = F(Se(4, Tt(.75, !0, ["#030d14", "#000000", "#030d14", "#0d2e33", "#0b2326", "#485e66", "#1f343f"]))),
                Ie[ItemType.GOLD_PICK] = [],
                Ie[ItemType.GOLD_PICK][SPRITE.DAY] = F(Se(4, Tt(.75, !0, ["#0d1b1c", "#000000", "#0d1b1c", "#493e26", "#382e19", "#c4bc51", "#b29c32"]))),
                Ie[ItemType.GOLD_PICK][SPRITE.NIGHT] = F(Se(4, Tt(.75, !0, ["#030d14", "#000000", "#030d14", "#263947", "#263947", "#43aa82", "#29997c"]))),
                Ie[ItemType.DIAMOND_PICK] = [],
                Ie[ItemType.DIAMOND_PICK][SPRITE.DAY] = F(Se(4, Tt(.75, !0, ["#0d1b1c", "#000000", "#0d1b1c", "#262114", "#211108", "#63c9d6", "#29aaa1"]))),
                Ie[ItemType.DIAMOND_PICK][SPRITE.NIGHT] = F(Se(4, Tt(.75, !0, ["#030d14", "#000000", "#030d14", "#111316", "#0a0b0c", "#73dde5", "#3dc4c0"]))),
                Ie[ItemType.AMETHYST_PICK] = [],
                Ie[ItemType.AMETHYST_PICK][SPRITE.DAY] = F(Se(4, Tt(.75, !0, ["#0d1b1c", "#000000", "#0d1b1c", "#262114", "#211108", "#b864d6", "#8c29aa"]))),
                Ie[ItemType.AMETHYST_PICK][SPRITE.NIGHT] = F(Se(4, Tt(.75, !0, ["#030d14", "#000000", "#030d14", "#111316", "#0a0b0c", "#8359d3", "#764eb5"]))),
                Ie[ItemType.PIRATE_SWORD] = [],
                Ie[ItemType.PIRATE_SWORD][SPRITE.DAY] = F(Se(3, rt(.17, !0, ["#0d1b1c", "#4a3a22", "#362818", "#c7c7c7", "#909090", "#eceaea", "#bbbbbb", "#d6d1d1"]))),
                Ie[ItemType.PIRATE_SWORD][SPRITE.NIGHT] = F(Se(3, rt(.17, !0, ["#0d1b1c", "#0d2e33", "#0b2326", "#59737d", "#364f59", "#618395", "#4d768c", "#54859f"]))),
                Ie[ItemType.SUGAR_CAN] = [],
                Ie[ItemType.SUGAR_CAN][SPRITE.DAY] = F(Se(3, ut(.32, !0, ["#0d1b1c", "#ffffff", "#5f6061", "#eb2933", "#57b74e", "#42a54d", "#ac222a", "#e6636a"]))),
                Ie[ItemType.SUGAR_CAN][SPRITE.NIGHT] = F(Se(3, ut(.42, !0, ["#0d1b1c", "#485e66", "#1f343f", "#0d2e33", "#0b2326"]))),
                Ie[ItemType.WOOD_SWORD] = [],
                Ie[ItemType.WOOD_SWORD][SPRITE.DAY] = F(Se(3, ot(.4, !0, ["#0d1b1c", "#73583e", "#493425", "#7d6144", "#5e4530", "#473221", "#745840"]))),
                Ie[ItemType.WOOD_SWORD][SPRITE.NIGHT] = F(Se(3, ot(.4, !0, ["#0d1b1c", "#0b3d3a", "#092b2a", "#144642", "#082927", "#092b29"]))),
                Ie[ItemType.STONE_SWORD] = [],
                Ie[ItemType.STONE_SWORD][SPRITE.DAY] = F(Se(3, dt(.4, !0, ["#0d1b1c", "#939393", "#5f6061", "#b1afaf", "#493d36", "#332b28"]))),
                Ie[ItemType.STONE_SWORD][SPRITE.NIGHT] = F(Se(3, dt(.4, !0, ["#0d1b1c", "#485e66", "#1f343f", "#5d757e", "#0d2e33", "#0b2326"]))),
                Ie[ItemType.GOLD_SWORD] = [],
                Ie[ItemType.GOLD_SWORD][SPRITE.DAY] = F(Se(3, mt(.4, !0, ["#0d1b1c", "#c4bc51", "#b29c32", "#c4bc51", "#493e26", "#382e19"]))),
                Ie[ItemType.GOLD_SWORD][SPRITE.NIGHT] = F(Se(3, mt(.4, !0, ["#0d1b1c", "#43aa82", "#29997c", "#54bf96", "#263947", "#182935"]))),
                Ie[ItemType.DIAMOND_SWORD] = [],
                Ie[ItemType.DIAMOND_SWORD][SPRITE.DAY] = F(Se(3, St(.4, !0, ["#0d1b1c", "#6ad9e8", "#29aaa1", "#95e9f5", "#022320", "#011e19", "#FFFFFF"]))),
                Ie[ItemType.DIAMOND_SWORD][SPRITE.NIGHT] = F(Se(3, St(.4, !0, ["#0d1b1c", "#73dde5", "#3dc4c0", "#93eaf1", "#111316", "#0a0b0c"]))),
                Ie[ItemType.AMETHYST_SWORD] = [],
                Ie[ItemType.AMETHYST_SWORD][SPRITE.DAY] = F(Se(3, ct(.4, !0, ["#0d1b1c", "#b864d6", "#8c29aa", "#cc81e7", "#262114", "#211108", "#FFFFFF"]))),
                Ie[ItemType.AMETHYST_SWORD][SPRITE.NIGHT] = F(Se(3, ct(.4, !0, ["#0d1b1c", "#8359d3", "#764eb5", "#966de6", "#111316", "#0a0b0c"]))),
                Ie[SPRITE.HERB] = [],
                Ie[SPRITE.HERB][SPRITE.DAY] = [],
                Ie[SPRITE.HERB][SPRITE.NIGHT] = [],
                Ie[SPRITE.HERB][SPRITE.DAY].push(F(Ot(.9, 0, ["#0d4f35"], 0))),
                Ie[SPRITE.HERB][SPRITE.DAY].push(F(Ot(.9, 0, ["#0d4f35"], 1))),
                Ie[SPRITE.HERB][SPRITE.DAY].push(F(Ot(.9, 0, ["#0d4f35"], 2))),
                Ie[SPRITE.HERB][SPRITE.NIGHT].push(F(Ot(.9, 0, ["#053339"], 0))),
                Ie[SPRITE.HERB][SPRITE.NIGHT].push(F(Ot(.9, 0, ["#053339"], 1))),
                Ie[SPRITE.HERB][SPRITE.NIGHT].push(F(Ot(.9, 0, ["#053339"], 2))),
                Ie[SPRITE.HERB][SPRITE.DAY].push(F(Dt(.8, ["#241301", "#ba6b0e", "#6d3f04"]))),
                Ie[SPRITE.HERB][SPRITE.DAY].push(F(Dt(.8, ["#292002", "#ba930e", "#6d5704"]))),
                Ie[SPRITE.HERB][SPRITE.NIGHT].push(F(Dt(.9, ["#052919", "#0a4738", "#06321f"]))),
                Ie[SPRITE.HERB][SPRITE.NIGHT].push(F(Dt(.8, ["#052918", "#08491c", "#063417"]))),
                Ie[ItemType.BERRY] = [],
                Ie[ItemType.BERRY][SPRITE.DAY] = [F(Nt(1.2, !0, ["#0e3022", "#0b8052", "#077b49"]))],
                Ie[ItemType.BERRY][SPRITE.NIGHT] = [F(Nt(1.2, !0, ["#030d14", "#084442", "#0a4049"]))],
                Ie[SPRITE.DRIED_PLANT] = [],
                Ie[SPRITE.DRIED_PLANT][SPRITE.DAY] = F(Nt(.8, !0, ["#0e3022", "#68622D", "#665329"])),
                Ie[SPRITE.DRIED_PLANT][SPRITE.NIGHT] = F(Nt(.8, !0, ["#030d14", "#0F3A24", "#083326"])),
                Ie[ItemType.PUMPKIN] = [],
                Ie[ItemType.PUMPKIN][SPRITE.DAY] = F(ln(.5, !0, ["#1b170c", "#c67933", "#a6692f", "#bd7533", "#86683e", "#6e502d"])),
                Ie[ItemType.PUMPKIN][SPRITE.NIGHT] = F(ln(.5, !0, ["#030d14", "#0a3429", "#0a2f2b", "#082f25", "#082925", "#0a3630"])),
                Ie[ItemType.GARLIC] = [],
                Ie[ItemType.GARLIC][SPRITE.DAY] = F(pe(.5, !0, ["#1b170c", "#e8e8e8", "#d2cfcf", "#e0e1e0", "#c4c4c4"])),
                Ie[ItemType.GARLIC][SPRITE.NIGHT] = F(pe(.5, !0, ["#030d14", "#2b5254", "#264a46", "#396260", "#244743"])),
                Ie[ItemType.THORNBUSH] = [],
                Ie[ItemType.THORNBUSH][SPRITE.DAY] = F(An(.5, !0, ["#1b170c", "#349970", "#245c45", "#348361", "#e8e8e8", "#bbbbbb"])),
                Ie[ItemType.THORNBUSH][SPRITE.NIGHT] = F(An(.5, !0, ["#030d14", "#0d5551", "#074440", "#0f5c58", "#4e8784", "#3f7572"])),
                Ie[SPRITE.PLANT_MINI] = [],
                Ie[SPRITE.PLANT_MINI][SPRITE.DAY] = F(Nt(.8, !0, ["#1b170c", "#0b8052", "#077b49"])),
                Ie[SPRITE.PLANT_MINI][SPRITE.NIGHT] = F(Nt(.8, !0, ["#030d14", "#084442", "#0a4049"])),
                Ie[SPRITE.DRIED_PUMPKIN] = [],
                Ie[SPRITE.DRIED_PUMPKIN][SPRITE.DAY] = F(ln(.5, !0, ["#1b170c", "#68622D", "#665329", "#5e5823", "#86683e", "#6e502d"])),
                Ie[SPRITE.DRIED_PUMPKIN][SPRITE.NIGHT] = F(ln(.5, !0, ["#030d14", "#0F3A24", "#083326", "#0c301e", "#062a1f", "#083b2b"])),
                Ie[SPRITE.DRIED_GARLIC] = [],
                Ie[SPRITE.DRIED_GARLIC][SPRITE.DAY] = F(pe(.5, !0, ["#1b170c", "#adbe9e", "#7e9178", "#84aa84", "#527556"])),
                Ie[SPRITE.DRIED_GARLIC][SPRITE.NIGHT] = F(pe(.5, !0, ["#030d14", "#164a44", "#124244", "#13373b", "#133e3e"])),
                Ie[SPRITE.DRIED_THORNBUSH] = [],
                Ie[SPRITE.DRIED_THORNBUSH][SPRITE.DAY] = F(An(.5, !0, ["#1b170c", "#7a9160", "#4a5e3c", "#637e5a", "#c5cfc0", "#8a9685"])),
                Ie[SPRITE.DRIED_THORNBUSH][SPRITE.NIGHT] = F(An(.5, !0, ["#030d14", "#3e5d5b", "#2f4442", "#354e4c", "#637d7c", "#556b6a"])),
                Ie[SPRITE.GIFT] = [],
                Ie[SPRITE.GIFT][SPRITE.DAY] = F(Wn(.45, !0, ["#0e3022", "#ac222a", "#98171e", "#22a84f", "#1f924a"])),
                Ie[SPRITE.GIFT][SPRITE.NIGHT] = F(Wn(.45, !0, ["#0e3022", "#19386e", "#0b2752", "#124252", "#0d3441"])),
                Ie[SPRITE.HURT_GIFT] = F(Wn(.65, !0, ["rgba(14, 48, 34, 0)", "#BB0000", "#BB0000", "#BB0000", "#BB0000"])),
                Ie[SPRITE.FRUIT] = [],
                Ie[SPRITE.FRUIT][SPRITE.DAY] = F(vt(1.4, 0, ["#ac222a", "#e6636a"])),
                Ie[SPRITE.FRUIT][SPRITE.NIGHT] = F(vt(1.4, 0, ["#46195e", "#744188"])),
                Ie[SPRITE.FIRE] = [],
                Ie[SPRITE.FIRE][SPRITE.DAY] = F(ze(.9, 0, ["#efd435", "#ec8d35", "#e96132"])),
                Ie[SPRITE.FIRE][SPRITE.NIGHT] = F(ze(.9, 0, ["#efdb7b", "#efe854", "#e8ef62"])),
                Ie[ItemType.BIG_FIRE] = [],
                Ie[ItemType.BIG_FIRE][SPRITE.DAY] = F(qe(.9, 0, ["#4d2d14", "#432516"])),
                Ie[ItemType.BIG_FIRE][SPRITE.NIGHT] = F(qe(.9, 0, ["#282404", "#0a0a01"])),
                Ie[ItemType.FIRE] = [],
                Ie[ItemType.FIRE][SPRITE.DAY] = F(je(.9, 0, ["#4d2d14", "#432516"])),
                Ie[ItemType.FIRE][SPRITE.NIGHT] = F(je(.9, 0, ["#282404", "#0a0a01"])),
                Ie[SPRITE.HALO_FIRE] = [],
                Ie[SPRITE.HALO_FIRE][SPRITE.DAY] = F(Ze(.9, 0, ["#efd435"])),
                Ie[SPRITE.HALO_FIRE][SPRITE.NIGHT] = F(Ze(.9, 0, ["#fffabb"])),
                Ie[SPRITE.GROUND_FIRE] = [],
                Ie[SPRITE.GROUND_FIRE][SPRITE.DAY] = F($e(.9, 0, ["#efd435"])),
                Ie[SPRITE.GROUND_FIRE][SPRITE.NIGHT] = F($e(.9, 0, ["#fffabb"])),
                Ie[SPRITE.HALO_FIRE_PUMPKIN] = [],
                Ie[SPRITE.HALO_FIRE_PUMPKIN][SPRITE.DAY] = F(Ze(.9, 0, ["#efd435"])),
                Ie[SPRITE.HALO_FIRE_PUMPKIN][SPRITE.NIGHT] = F(Ze(.9, 0, ["rgba(255, 84, 0, 1)"])),
                Ie[SPRITE.GROUND_FIRE_PUMPKIN] = [],
                Ie[SPRITE.GROUND_FIRE_PUMPKIN][SPRITE.DAY] = F($e(.9, 0, ["#efd435"])),
                Ie[SPRITE.GROUND_FIRE_PUMPKIN][SPRITE.NIGHT] = F($e(.9, 0, ["#ff5704"])),
                Ie[SPRITE.GEAR] = F(De(1, "#ffffff")),
                Ie[SPRITE.GEAR2] = F(De(1.5, "#ffffff")),
                Ie[SPRITE.YOUR_SCORE] = F(ft(1, "Your score:", 15, "#FFF")),
                Ie[SPRITE.WINDMILL_CASES] = F(function(e, t) {
                    var i = window.document.createElement("canvas")
                      , n = i.getContext("2d");
                    return i.width = 243 * e,
                    i.height = 172 * e,
                    Re(n, 119.5 * e, 140.125 * e, 19 * e),
                    he(n, void 0, t[1], 5 * e),
                    n.beginPath(),
                    n.lineCap = "round",
                    n.lineJoin = "round",
                    n.moveTo(36.5 * e, 20.125 * e),
                    n.bezierCurveTo(119.5 * e, 20.625 * e, 119.5 * e, 20.625 * e, 202.5 * e, 21.125 * e),
                    n.bezierCurveTo(214.5 * e, 22.125 * e, 216.5 * e, 26.125 * e, 217.5 * e, 35.125 * e),
                    n.bezierCurveTo(221 * e, 76.125 * e, 221 * e, 76.125 * e, 224.5 * e, 117.125 * e),
                    n.bezierCurveTo(225.5 * e, 127.125 * e, 221.5 * e, 131.125 * e, 210.5 * e, 132.125 * e),
                    n.bezierCurveTo(117.5 * e, 132.125 * e, 117.5 * e, 132.125 * e, 24.5 * e, 132.125 * e),
                    n.bezierCurveTo(14.5 * e, 131.125 * e, 13.5 * e, 126.125 * e, 16.5 * e, 111.125 * e),
                    n.bezierCurveTo(19.5 * e, 73.125 * e, 19.5 * e, 73.125 * e, 22.5 * e, 35.125 * e),
                    n.bezierCurveTo(23.5 * e, 23.125 * e, 29.5 * e, 21.125 * e, 36.5 * e, 20.125 * e),
                    n.closePath(),
                    he(n, t[0], t[1], 4 * e),
                    n.beginPath(),
                    n.lineCap = "round",
                    n.lineJoin = "round",
                    n.moveTo(15.5 * e, 138.625 * e),
                    n.bezierCurveTo(120 * e, 138.625 * e, 120 * e, 138.625 * e, 224.5 * e, 138.625 * e),
                    n.closePath(),
                    he(n, void 0, t[2], 10 * e),
                    n.beginPath(),
                    n.lineCap = "round",
                    n.lineJoin = "round",
                    n.moveTo(13.5 * e, 131.625 * e),
                    n.bezierCurveTo(119.5 * e, 131.625 * e, 119.5 * e, 131.625 * e, 225.5 * e, 131.625 * e),
                    n.closePath(),
                    he(n, void 0, t[3], 10 * e),
                    Re(n, 119.5 * e, 140.125 * e, 14.866068747318506 * e),
                    he(n, t[4], t[5], 4 * e),
                    n.beginPath(),
                    n.lineCap = "round",
                    n.lineJoin = "round",
                    n.moveTo(106.5 * e, 146.625 * e),
                    n.bezierCurveTo(116.5 * e, 137.625 * e, 118.5 * e, 136.625 * e, 123.5 * e, 138.625 * e),
                    n.bezierCurveTo(131.5 * e, 145.625 * e, 133.5 * e, 148.625 * e, 127.5 * e, 152.625 * e),
                    n.bezierCurveTo(115.5 * e, 158.625 * e, 111.5 * e, 153.625 * e, 106.5 * e, 147.625 * e),
                    n.closePath(),
                    he(n, t[6], t[7], 2 * e),
                    n.beginPath(),
                    n.lineCap = "round",
                    n.lineJoin = "round",
                    n.moveTo(105.5 * e, 146.625 * e),
                    n.bezierCurveTo(116.5 * e, 159.625 * e, 124.5 * e, 156.625 * e, 132.5 * e, 146.625 * e),
                    he(n, void 0, t[8], 5 * e),
                    n.save(),
                    n.translate(75.5 * e, 80.125 * e),
                    ye(n, -39 * e, -40 * e, 78 * e, 78 * e, 10 * e),
                    n.restore(),
                    he(n, t[9]),
                    n.save(),
                    n.translate(167 * e, 80.125 * e),
                    ye(n, -38.5 * e, -39 * e, 78 * e, 78 * e, 10 * e),
                    n.restore(),
                    he(n, t[9]),
                    i
                }(.9, ["#596560", "#394841", "#543B1C", "#694D28", "#4D3C1A", "#694D28", "#DEE2E0", "#CDCCCC", "#7B5A31", "#7E8A85"])),
                Ie[SPRITE.EXTRACTOR_CASES] = P.EXTRACTOR_CASES,
                Ie[ItemType.WINDMILL] = [],
                Ie[ItemType.WINDMILL][SPRITE.DAY] = F(We(1.5, !0, ["#0d1b1c", "#596560", "#394841", "#67766F", "#46554D", "#4C3B19", "#674C2A", "#7C5A29", "#596560", "#394841"])),
                Ie[ItemType.WINDMILL][SPRITE.NIGHT] = F(We(1.5, !0, ["#030d14", "#163A3A", "#214C4B", "#1a4545", "#225755", "#07393D", "#07454a", "#0c484d", "#163A3A", "#214C4B"])),
                Ie[SPRITE.WINDMILL_WINGS] = [],
                Ie[SPRITE.WINDMILL_WINGS][SPRITE.DAY] = F(Fe(2, !0, ["#0d1b1c", "#596560", "#394841", "#67766F", "#46554D", "#4C3B19", "#674C2A", "#7C5A29", "#596560", "#394841"])),
                Ie[SPRITE.WINDMILL_WINGS][SPRITE.NIGHT] = F(Fe(2, !0, ["#030d14", "#163A3A", "#214C4B", "#1a4545", "#225755", "#07393D", "#07454a", "#0c484d", "#163A3A", "#214C4B"])),
                Ie[SPRITE.WINDMILL_HEAD] = [],
                Ie[SPRITE.WINDMILL_HEAD][SPRITE.DAY] = F(xe(1.5, !0, ["#0d1b1c", "#596560", "#394841", "#67766F", "#46554D", "#4C3B19", "#674C2A", "#7C5A29", "#596560", "#394841"])),
                Ie[SPRITE.WINDMILL_HEAD][SPRITE.NIGHT] = F(xe(1.5, !0, ["#030d14", "#163A3A", "#214C4B", "#1a4545", "#225755", "#07393D", "#07454a", "#0c484d", "#163A3A", "#214C4B"])),
                Ie[ItemType.WHEAT] = [],
                Ie[ItemType.WHEAT][SPRITE.DAY] = F(Ge(2.2, 0, ["#A89F67", "#9E8456"])),
                Ie[ItemType.WHEAT][SPRITE.NIGHT] = F(Ge(2.2, 0, ["#0B4049", "#08383D"])),
                Ie[SPRITE.DRIED_WHEAT] = [],
                Ie[SPRITE.DRIED_WHEAT][SPRITE.DAY] = F(Ge(2.2, 0, ["#68622D", "#665329"])),
                Ie[SPRITE.DRIED_WHEAT][SPRITE.NIGHT] = F(Ge(2.2, 0, ["#0F3A24", "#083326"])),
                Ie[SPRITE.WHEAT_MOB] = [],
                Ie[SPRITE.WHEAT_MOB][SPRITE.DAY] = F(_t(.8, 0, ["#A89F67", "#9E8456"])),
                Ie[SPRITE.WHEAT_MOB][SPRITE.NIGHT] = F(_t(.8, 0, ["#15514F", "#0F3F3D"])),
                Ie[SPRITE.PUMPKIN_SEED_MOB] = [],
                Ie[SPRITE.PUMPKIN_SEED_MOB][SPRITE.DAY] = F(_t(.8, 0, ["#c67933", "#b17238"])),
                Ie[SPRITE.PUMPKIN_SEED_MOB][SPRITE.NIGHT] = F(_t(.8, 0, ["#043c37", "#032b23"])),
                Ie[SPRITE.ALOE_VERA_SEED_MOB] = [],
                Ie[SPRITE.ALOE_VERA_SEED_MOB][SPRITE.DAY] = F(_t(.8, 0, ["#3a8214", "#4a9c1e"])),
                Ie[SPRITE.ALOE_VERA_SEED_MOB][SPRITE.NIGHT] = F(_t(.8, 0, ["#032d29", "#044640"])),
                Ie[SPRITE.GARLIC_SEED_MOB] = [],
                Ie[SPRITE.GARLIC_SEED_MOB][SPRITE.DAY] = F(_t(.8, 0, ["#e8e8e8", "#bbbbbb"])),
                Ie[SPRITE.GARLIC_SEED_MOB][SPRITE.NIGHT] = F(_t(.8, 0, ["#1c6161", "#07413f"])),
                Ie[SPRITE.THORNBUSH_SEED_MOB] = [],
                Ie[SPRITE.THORNBUSH_SEED_MOB][SPRITE.DAY] = F(_t(.8, 0, ["#328a56", "#449573"])),
                Ie[SPRITE.THORNBUSH_SEED_MOB][SPRITE.NIGHT] = F(_t(.8, 0, ["#043c37", "#032b23"])),
                Ie[SPRITE.CARROT_SEED_MOB] = [],
                Ie[SPRITE.CARROT_SEED_MOB][SPRITE.DAY] = F(_t(.8, 0, ["#c98e2f", "#a36b11"])),
                Ie[SPRITE.CARROT_SEED_MOB][SPRITE.NIGHT] = F(_t(.8, 0, ["#043c37", "#032b23"])),
                Ie[SPRITE.TOMATO_SEED_MOB] = [],
                Ie[SPRITE.TOMATO_SEED_MOB][SPRITE.DAY] = F(_t(.8, 0, ["#b22419", "#99110e"])),
                Ie[SPRITE.TOMATO_SEED_MOB][SPRITE.NIGHT] = F(_t(.8, 0, ["#04323c", "#03222b"])),
                Ie[SPRITE.WATERMELON_SEED_MOB] = [],
                Ie[SPRITE.WATERMELON_SEED_MOB][SPRITE.DAY] = F(_t(.8, 0, ["#13a56d", "#098a58"])),
                Ie[SPRITE.WATERMELON_SEED_MOB][SPRITE.NIGHT] = F(_t(.8, 0, ["#043c37", "#032b23"])),
                Ie[SPRITE.WINDMILL_WHEAT_SEED] = Xe(1, [{
                    f: Ge,
                    x: 0,
                    y: 0,
                    a: 1,
                    r: 0,
                    c: ["#A89F67", "#9E8456"]
                }], 1.2, ["#d2c77b", "#e7dc8f", "#bfb360"], .7),
                Ie[SPRITE.BREAD_OVEN_WOOD] = Xe(1, [{
                    f: je,
                    x: 0,
                    y: 0,
                    a: 1,
                    r: -window.Math.PI / 5,
                    c: ["#4d2d14", "#432516"]
                }], .3, ["#d2c77b", "#e7dc8f", "#bfb360"], .7),
                Ie[SPRITE.BREAD_OVEN_BREAD] = Xe(1, [{
                    f: Rn,
                    x: 0,
                    y: -5,
                    a: 1,
                    r: 0,
                    c: ["#1d051e", "#bf8d51", "#7d5133", "#e8d6bf", "#e0c8a9", "#ab7a3f"]
                }], .15, ["#d2c77b", "#e7dc8f", "#bfb360"], .7),
                Ie[SPRITE.EMPTY_SLOT] = Xe(.9, [], .3, ["#2b5c48", "#2b5c48", "#2b5c48"], .5),
                Ie[ItemType.BERRY_SEED] = [],
                Ie[ItemType.BERRY_SEED][SPRITE.DAY] = F(Ne(.9, 0, ["#7d613e", "#9e7e5a"])),
                Ie[ItemType.BERRY_SEED][SPRITE.NIGHT] = F(Ne(.9, 0, ["#084442", "#125e5a"])),
                Ie[ItemType.WHEAT_SEED] = [],
                Ie[ItemType.WHEAT_SEED][SPRITE.DAY] = F(Ne(.9, 0, ["#9E8456", "#A89F67"])),
                Ie[ItemType.WHEAT_SEED][SPRITE.NIGHT] = F(Ne(.9, 0, ["#1b6f6a", "#0d4e4c"])),
                Ie[SPRITE.WHEAT_SEED_DRIED] = [],
                Ie[SPRITE.WHEAT_SEED_DRIED][SPRITE.DAY] = F(Ne(.9, 0, ["#665329", "#68622D"])),
                Ie[SPRITE.WHEAT_SEED_DRIED][SPRITE.NIGHT] = F(Ne(.9, 0, ["#083326", "#0F3A24"])),
                Ie[ItemType.PUMPKIN_SEED] = [],
                Ie[ItemType.PUMPKIN_SEED][SPRITE.DAY] = F(Ne(.9, 0, ["#c67933", "#ec952d"])),
                Ie[ItemType.PUMPKIN_SEED][SPRITE.NIGHT] = F(Ne(.9, 0, ["#0e6553", "#094437"])),
                Ie[ItemType.ALOE_VERA_SEED] = [],
                Ie[ItemType.ALOE_VERA_SEED][SPRITE.DAY] = F(Ne(.9, 0, ["#375809", "#4b770e"])),
                Ie[ItemType.ALOE_VERA_SEED][SPRITE.NIGHT] = F(Ne(.9, 0, ["#09542d", "#0d5d2f"])),
                Ie[SPRITE.PLANT_ALOE_VERA_DRIED] = [],
                Ie[SPRITE.PLANT_ALOE_VERA_DRIED][SPRITE.DAY] = F(Ne(.9, 0, ["#585809", "#72770e"])),
                Ie[SPRITE.PLANT_ALOE_VERA_DRIED][SPRITE.NIGHT] = F(Ne(.9, 0, ["#295209", "#305d0d"])),
                Ie[ItemType.GARLIC_SEED] = [],
                Ie[ItemType.GARLIC_SEED][SPRITE.DAY] = F(Ne(.9, 0, ["#b9b094", "#e2d2c0"])),
                Ie[ItemType.GARLIC_SEED][SPRITE.NIGHT] = F(Ne(.9, 0, ["#126366", "#0d484b"])),
                Ie[ItemType.THORNBUSH_SEED] = [],
                Ie[ItemType.THORNBUSH_SEED][SPRITE.DAY] = F(Ne(.9, 0, ["#3f8662", "#30915d"])),
                Ie[ItemType.THORNBUSH_SEED][SPRITE.NIGHT] = F(Ne(.9, 0, ["#0e6553", "#094437"])),
                Ie[SPRITE.PLANT_PUMPKIN_DRIED] = [],
                Ie[SPRITE.PLANT_PUMPKIN_DRIED][SPRITE.DAY] = F(Ne(.9, 0, ["#c79153", "#dfa868"])),
                Ie[SPRITE.PLANT_PUMPKIN_DRIED][SPRITE.NIGHT] = F(Ne(.9, 0, ["#073927", "#075040"])),
                Ie[SPRITE.PLANT_GARLIC_DRIED] = [],
                Ie[SPRITE.PLANT_GARLIC_DRIED][SPRITE.DAY] = F(Ne(.9, 0, ["#768b5b", "#819984"])),
                Ie[SPRITE.PLANT_GARLIC_DRIED][SPRITE.NIGHT] = F(Ne(.9, 0, ["#0c4540", "#0e5153"])),
                Ie[SPRITE.PLANT_THORNBUSH_DRIED] = [],
                Ie[SPRITE.PLANT_THORNBUSH_DRIED][SPRITE.DAY] = F(Ne(.9, 0, ["#567465", "#627c6e"])),
                Ie[SPRITE.PLANT_THORNBUSH_DRIED][SPRITE.NIGHT] = F(Ne(.9, 0, ["#073927", "#075040"])),
                Ie[ItemType.CARROT_SEED] = [],
                Ie[ItemType.CARROT_SEED][SPRITE.DAY] = F(Ne(.9, 0, ["#996b3a", "#bf956b"])),
                Ie[ItemType.CARROT_SEED][SPRITE.NIGHT] = F(Ne(.9, 0, ["#0e6553", "#094437"])),
                Ie[SPRITE.PLANT_CARROT_DRIED] = [],
                Ie[SPRITE.PLANT_CARROT_DRIED][SPRITE.DAY] = F(Ne(.9, 0, ["#7a634a", "#a68f77"])),
                Ie[SPRITE.PLANT_CARROT_DRIED][SPRITE.NIGHT] = F(Ne(.9, 0, ["#1e4d43", "#113c32"])),
                Ie[ItemType.TOMATO_SEED] = [],
                Ie[ItemType.TOMATO_SEED][SPRITE.DAY] = F(Ne(.9, 0, ["#99403c", "#bc796c"])),
                Ie[ItemType.TOMATO_SEED][SPRITE.NIGHT] = F(Ne(.9, 0, ["#1e434d", "#11303c"])),
                Ie[SPRITE.PLANT_TOMATO_DRIED] = [],
                Ie[SPRITE.PLANT_TOMATO_DRIED][SPRITE.DAY] = F(Ne(.9, 0, ["#88504e", "#b3857c"])),
                Ie[SPRITE.PLANT_TOMATO_DRIED][SPRITE.NIGHT] = F(Ne(.9, 0, ["#253b41", "#162930"])),
                Ie[ItemType.WATERMELON_SEED] = [],
                Ie[ItemType.WATERMELON_SEED][SPRITE.DAY] = F(Ne(.9, 0, ["#0f8870", "#23af93"])),
                Ie[ItemType.WATERMELON_SEED][SPRITE.NIGHT] = F(Ne(.9, 0, ["#032829", "#083233"])),
                Ie[SPRITE.PLANT_WATERMELON_DRIED] = [],
                Ie[SPRITE.PLANT_WATERMELON_DRIED][SPRITE.DAY] = F(Ne(.9, 0, ["#618a20", "#84a74e"])),
                Ie[SPRITE.PLANT_WATERMELON_DRIED][SPRITE.NIGHT] = F(Ne(.9, 0, ["#1f4632", "#335d47"])),
                Ie[ItemType.WORKBENCH] = [],
                Ie[ItemType.WORKBENCH][SPRITE.DAY] = F(ke(1.2, !0, ["#0d1b1c", "#4d2d14", "#432516", "#756e52", "#663f22", "#9e9577"])),
                Ie[ItemType.WORKBENCH][SPRITE.NIGHT] = F(ke(1.2, !0, ["#030d14", "#0d2e33", "#072322", "#3e706b", "#123d3f", "#4e827c"])),
                Ie[ItemType.WOOD_WALL] = [],
                Ie[ItemType.WOOD_WALL][SPRITE.DAY] = F(Ht(1, !0, ["#0d1b1c", "#4c3a15", "#634828", "#564021", "#634828", "#4c3a15"])),
                Ie[ItemType.WOOD_WALL][SPRITE.NIGHT] = F(Ht(1, !0, ["#030d14", "#0d2e33", "#184747", "#123b3f", "#0d2e33", "#174444"])),
                Ie[ItemType.DIAMOND_WALL] = [],
                Ie[ItemType.DIAMOND_WALL][SPRITE.DAY] = F(Kt(1, !0, ["#0d1b1c", "#5cc5ce", "#89d1d4", "#86d0d1", "#95d5d8", "#e0f2f6", "#b3e0e3"])),
                Ie[ItemType.DIAMOND_WALL][SPRITE.NIGHT] = F(Kt(1, !0, ["#030d14", "#2b9390", "#43b5af", "#43b5af", "#4bbcb4", "#83ddd4", "#59c9c0"])),
                Ie[ItemType.AMETHYST_WALL] = [],
                Ie[ItemType.AMETHYST_WALL][SPRITE.DAY] = F(Ft(1, !0, ["#0d1b1c", "#b15ecf", "#8c29aa", "#c26de0", "#af59cd", "#d588f1"])),
                Ie[ItemType.AMETHYST_WALL][SPRITE.NIGHT] = F(Ft(1, !0, ["#030d14", "#8359d3", "#764eb5", "#8f65de", "#7f55cc", "#9d77e6"])),
                Ie[ItemType.STONE_WALL] = [],
                Ie[ItemType.STONE_WALL][SPRITE.DAY] = F(Ft(1, !0, ["#0d1b1c", "#6a7570", "#939995", "#9baaa3", "#adbcb5", "#8a938e"])),
                Ie[ItemType.STONE_WALL][SPRITE.NIGHT] = F(Ft(1, !0, ["#030d14", "#163a3a", "#214c4b", "#1f4948", "#295957", "#1f5955"])),
                Ie[ItemType.GOLD_WALL] = [],
                Ie[ItemType.GOLD_WALL][SPRITE.DAY] = F(xt(1, !0, ["#0d1b1c", "#877d36", "#a08f47", "#a7983c", "#b29e4d", "#c1b06b"])),
                Ie[ItemType.GOLD_WALL][SPRITE.NIGHT] = F(xt(1, !0, ["#030d14", "#1f4948", "#215e55", "#1f6058", "#2a7773", "#2c7a70"])),
                Ie[ItemType.WOOD_SPIKE] = [],
                Ie[ItemType.WOOD_SPIKE][SPRITE.DAY] = F(Ri(.8, !0, ["#0d1b1c", "#5f6061", "#939393", "#4c3a15", "#634828", "#564021", "#634828", "#4c3a15"])),
                Ie[ItemType.WOOD_SPIKE][SPRITE.NIGHT] = F(Ri(.8, !0, ["#030d14", "#1f343f", "#485e66", "#0d2e33", "#184747", "#123b3f", "#0d2e33", "#174444"])),
                Ie[ItemType.GOLD_SPIKE] = [],
                Ie[ItemType.GOLD_SPIKE][SPRITE.DAY] = F(mi(.8, !0, ["#0d1b1c", "#69685a", "#9c9683", "#877d36", "#a08f47", "#a7983c", "#b29e4d", "#c1b06b"])),
                Ie[ItemType.GOLD_SPIKE][SPRITE.NIGHT] = F(mi(.8, !0, ["#030d14", "#1a3732", "#1e544c", "#1f4948", "#215e55", "#1f6058", "#2a7773", "#2c7a70"])),
                Ie[ItemType.DIAMOND_SPIKE] = [],
                Ie[ItemType.DIAMOND_SPIKE][SPRITE.DAY] = F(Si(.8, !0, ["#0d1b1c", "#7d8b90", "#9facaa", "#5cc5ce", "#89d1d4", "#86d0d1", "#95d5d8", "#e0f2f6", "#b3e0e3"])),
                Ie[ItemType.DIAMOND_SPIKE][SPRITE.NIGHT] = F(Si(.8, !0, ["#030d14", "#2c4b55", "#546d77", "#2b9390", "#43b5af", "#43b5af", "#4bbcb4", "#83ddd4", "#59c9c0"])),
                Ie[ItemType.STONE_SPIKE] = [],
                Ie[ItemType.STONE_SPIKE][SPRITE.DAY] = F(Ei(.8, !0, ["#0d1b1c", "#6a7570", "#939393", "#6a7570", "#939995", "#9baaa3", "#adbcb5", "#8a938e"])),
                Ie[ItemType.STONE_SPIKE][SPRITE.NIGHT] = F(Ei(.8, !0, ["#030d14", "#1f343f", "#485e66", "#163a3a", "#214c4b", "#1f4948", "#295957", "#1f5955"])),
                Ie[ItemType.AMETHYST_SPIKE] = [],
                Ie[ItemType.AMETHYST_SPIKE][SPRITE.DAY] = F(Ei(.8, !0, ["#0d1b1c", "#6a7570", "#939393", "#b15ecf", "#8c29aa", "#c26de0", "#af59cd", "#d588f1"])),
                Ie[ItemType.AMETHYST_SPIKE][SPRITE.NIGHT] = F(Ei(.8, !0, ["#030d14", "#1f343f", "#485e66", "#8359d3", "#764eb5", "#8f65de", "#7f55cc", "#9d77e6"])),
                Ie[ItemType.WOOD_DOOR] = [],
                Ie[ItemType.WOOD_DOOR][SPRITE.DAY] = F(Vt(1.5, 0, ["#0d1b1c", "#4c3b19", "#574122", "#644928", "#574122", "#735534", "#23a54e", "#1f934a", "#208e48", "#b12c2a", "#9c2625", "#ebd6a4", "#cca73f"])),
                Ie[ItemType.WOOD_DOOR][SPRITE.NIGHT] = F(Vt(1.5, 0, ["#030d14", "#0d2e33", "#184747", "#123b3f", "#0d2e33", "#174444"])),
                Ie[ItemType.STONE_DOOR] = [],
                Ie[ItemType.STONE_DOOR][SPRITE.DAY] = F(Ut(1.5, 0, ["#0d1b1c", "#6a7570", "#939995", "#9baaa3", "#8a938e", "#adbcb5"])),
                Ie[ItemType.STONE_DOOR][SPRITE.NIGHT] = F(Ut(1.5, 0, ["#030d14", "#163a3a", "#214c4b", "#1f4948", "#164542", "#295957"])),
                Ie[ItemType.GOLD_DOOR] = [],
                Ie[ItemType.GOLD_DOOR][SPRITE.DAY] = F(Xt(1.5, !0, ["#0d1b1c", "#877d36", "#a08f47", "#a7983c", "#9a8636", "#c1b06b"])),
                Ie[ItemType.GOLD_DOOR][SPRITE.NIGHT] = F(Xt(1.5, !0, ["#030d14", "#1f4948", "#215e55", "#1f6058", "#1f605c", "#2c7a70"])),
                Ie[ItemType.DIAMOND_DOOR] = [],
                Ie[ItemType.DIAMOND_DOOR][SPRITE.DAY] = F(jt(1.5, 0, ["#0d1b1c", "#5cc5ce", "#89d1d4", "#86d0d1", "#95d5d8", "#e0f2f6", "#b3e0e3"])),
                Ie[ItemType.DIAMOND_DOOR][SPRITE.NIGHT] = F(jt(1.5, 0, ["#030d14", "#2b9390", "#43b5af", "#43b5af", "#4bbcb4", "#83ddd4", "#59c9c0"])),
                Ie[ItemType.AMETHYST_DOOR] = [],
                Ie[ItemType.AMETHYST_DOOR][SPRITE.DAY] = F(Ut(1.5, 0, ["#0d1b1c", "#b15ecf", "#8c29aa", "#c26de0", "#af59cd", "#d588f1"])),
                Ie[ItemType.AMETHYST_DOOR][SPRITE.NIGHT] = F(Ut(1.5, 0, ["#030d14", "#8359d3", "#764eb5", "#8f65de", "#7f55cc", "#9d77e6"])),
                Ie[ItemType.CHEST] = [],
                Ie[ItemType.CHEST][SPRITE.DAY] = F(di(.5, 0, ["#133a2b", "#9e8838", "#c4a23a", "#4c3b19", "#614627", "#614627", "#614627", "#c4a23a", "#c4a23a", "#c4a23a"])),
                Ie[ItemType.CHEST][SPRITE.NIGHT] = F(di(.5, 0, ["#032428", "#266161", "#2b6664", "#123335", "#1f5453", "#1f5453", "#1f5453", "#2b6664", "#2b6664", "#2b6664"])),
                Ie[ItemType.CHEST][2] = F(di(.5, 0, "#4d0000 #4d0000 #4d0000 #4d0000 #4d0000 #614627 #614627 #c4a23a #c4a23a #c4a23a".split(" "))),
                Ie[SPRITE.TREASURE_CHEST] = [],
                Ie[SPRITE.TREASURE_CHEST][SPRITE.DAY] = F(Dn(.5, ["#133a2b", "#9e8838", "#c4a23a", "#4c3b19", "#614627"])),
                Ie[SPRITE.TREASURE_CHEST][SPRITE.NIGHT] = F(Dn(.5, ["#032428", "#266161", "#2b6664", "#123335", "#1f5453"])),
                Ie[SPRITE.RABBIT] = [],
                Ie[SPRITE.RABBIT][SPRITE.DAY] = F(Ce(.9, ["#0e3022", "#ee97bf", "#FFFFFF", "#000000", "#ffffff"])),
                Ie[SPRITE.RABBIT][SPRITE.NIGHT] = F(Ce(.9, ["#030d14", "#4d1b59", "#5d3f77", "#220e26", "#ffffff"])),
                Ie[SPRITE.SPIDER] = [],
                Ie[SPRITE.SPIDER][SPRITE.DAY] = F(Se(window.Math.PI, Me(.9, ["#000000", "#b7252c", "#b7252c", "#b7252c", "#FFFFFF", "#000000"]))),
                Ie[SPRITE.SPIDER][SPRITE.NIGHT] = F(Se(window.Math.PI, Me(.9, ["#030d14", "#401d49", "#b7252c", "#401d49", "#FFFFFF", "#000000"]))),
                Ie[SPRITE.WEB] = F(function(e, t) {
                    var i = window.document.createElement("canvas")
                      , n = i.getContext("2d");
                    return i.width = 450 * e,
                    i.height = 470 * e,
                    n.beginPath(),
                    n.lineCap = "round",
                    n.lineJoin = "round",
                    n.moveTo(226.5 * e, 91.546875 * e),
                    n.bezierCurveTo(254.5 * e, 115.546875 * e, 261.5 * e, 115.546875 * e, 294.5 * e, 109.546875 * e),
                    n.bezierCurveTo(299.5 * e, 141.546875 * e, 315.5 * e, 151.546875 * e, 344.5 * e, 158.546875 * e),
                    n.bezierCurveTo(330.5 * e, 195.546875 * e, 341.5 * e, 207.546875 * e, 361.5 * e, 226.546875 * e),
                    n.bezierCurveTo(331.5 * e, 251.546875 * e, 335.5 * e, 270.546875 * e, 342.5 * e, 295.546875 * e),
                    n.bezierCurveTo(300.5 * e, 296.546875 * e, 293.5 * e, 325.546875 * e, 292.5 * e, 344.546875 * e),
                    n.bezierCurveTo(257.5 * e, 326.546875 * e, 242.5 * e, 338.546875 * e, 224.5 * e, 361.546875 * e),
                    n.bezierCurveTo(200.5 * e, 329.546875 * e, 180.5 * e, 334.546875 * e, 155.5 * e, 341.546875 * e),
                    n.bezierCurveTo(146.5 * e, 307.546875 * e, 140.5 * e, 302.546875 * e, 107.5 * e, 292.546875 * e),
                    n.bezierCurveTo(117.5 * e, 253.546875 * e, 109.5 * e, 244.546875 * e, 89.5 * e, 224.546875 * e),
                    n.bezierCurveTo(118.5 * e, 191.546875 * e, 114.5 * e, 182.546875 * e, 108.5 * e, 156.546875 * e),
                    n.bezierCurveTo(143.5 * e, 149.546875 * e, 150.5 * e, 136.546875 * e, 157.5 * e, 106.546875 * e),
                    n.bezierCurveTo(202.5 * e, 120.546875 * e, 211.5 * e, 103.546875 * e, 228.5 * e, 91.546875 * e),
                    n.closePath(),
                    he(n, void 0, t[0], 4),
                    n.beginPath(),
                    n.lineCap = "round",
                    n.lineJoin = "round",
                    n.moveTo(224.5 * e, 129.546875 * e),
                    n.bezierCurveTo(247.5 * e, 147.546875 * e, 252.5 * e, 143.546875 * e, 274.5 * e, 141.546875 * e),
                    n.bezierCurveTo(279.5 * e, 163.546875 * e, 289.5 * e, 168.546875 * e, 311.5 * e, 178.546875 * e),
                    n.bezierCurveTo(301.5 * e, 199.546875 * e, 307.5 * e, 213.546875 * e, 323.5 * e, 226.546875 * e),
                    n.bezierCurveTo(303.5 * e, 240.546875 * e, 303.5 * e, 255.546875 * e, 312.5 * e, 275.546875 * e),
                    n.bezierCurveTo(281.5 * e, 278.546875 * e, 276.5 * e, 291.546875 * e, 272.5 * e, 313.546875 * e),
                    n.bezierCurveTo(248.5 * e, 301.546875 * e, 239.5 * e, 310.546875 * e, 224.5 * e, 324.546875 * e),
                    n.bezierCurveTo(211.5 * e, 304.546875 * e, 199.5 * e, 301.546875 * e, 176.5 * e, 309.546875 * e),
                    n.bezierCurveTo(165.5 * e, 276.546875 * e, 159.5 * e, 275.546875 * e, 138.5 * e, 274.546875 * e),
                    n.bezierCurveTo(148.5 * e, 248.546875 * e, 140.5 * e, 237.546875 * e, 125.5 * e, 225.546875 * e),
                    n.bezierCurveTo(145.5 * e, 205.546875 * e, 146.5 * e, 195.546875 * e, 142.5 * e, 176.546875 * e),
                    n.bezierCurveTo(173.5 * e, 164.546875 * e, 173.5 * e, 155.546875 * e, 178.5 * e, 140.546875 * e),
                    n.bezierCurveTo(214.5 * e, 143.546875 * e, 214.5 * e, 135.546875 * e, 226.5 * e, 129.546875 * e),
                    n.closePath(),
                    he(n, void 0, t[0], 4),
                    n.beginPath(),
                    n.lineCap = "round",
                    n.lineJoin = "round",
                    n.moveTo(224.5 * e, 160.546875 * e),
                    n.bezierCurveTo(236.5 * e, 168.546875 * e, 239.5 * e, 168.546875 * e, 258.5 * e, 168.546875 * e),
                    n.bezierCurveTo(261.5 * e, 185.546875 * e, 268.5 * e, 187.546875 * e, 282.5 * e, 192.546875 * e),
                    n.bezierCurveTo(277.5 * e, 208.546875 * e, 283.5 * e, 216.546875 * e, 289.5 * e, 228.546875 * e),
                    n.bezierCurveTo(277.5 * e, 243.546875 * e, 280.5 * e, 253.546875 * e, 281.5 * e, 260.546875 * e),
                    n.bezierCurveTo(264.5 * e, 260.546875 * e, 259.5 * e, 269.546875 * e, 256.5 * e, 283.546875 * e),
                    n.bezierCurveTo(244.5 * e, 276.546875 * e, 232.5 * e, 283.546875 * e, 223.5 * e, 291.546875 * e),
                    n.bezierCurveTo(213.5 * e, 276.546875 * e, 205.5 * e, 278.546875 * e, 190.5 * e, 281.546875 * e),
                    n.bezierCurveTo(181.5 * e, 262.546875 * e, 173.5 * e, 259.546875 * e, 165.5 * e, 258.546875 * e),
                    n.bezierCurveTo(169.5 * e, 239.546875 * e, 167.5 * e, 233.546875 * e, 157.5 * e, 225.546875 * e),
                    n.bezierCurveTo(169.5 * e, 208.546875 * e, 170.5 * e, 203.546875 * e, 168.5 * e, 192.546875 * e),
                    n.bezierCurveTo(181.5 * e, 187.546875 * e, 188.5 * e, 179.546875 * e, 192.5 * e, 168.546875 * e),
                    n.bezierCurveTo(216.5 * e, 170.546875 * e, 218.5 * e, 163.546875 * e, 225.5 * e, 160.546875 * e),
                    n.closePath(),
                    he(n, void 0, t[0], 4),
                    n.beginPath(),
                    n.lineCap = "round",
                    n.lineJoin = "round",
                    n.moveTo(205.5 * e, 194.546875 * e),
                    n.bezierCurveTo(216.5 * e, 192.546875 * e, 219.5 * e, 191.546875 * e, 225.5 * e, 185.546875 * e),
                    n.bezierCurveTo(232.5 * e, 193.546875 * e, 237.5 * e, 191.546875 * e, 246.5 * e, 192.546875 * e),
                    n.bezierCurveTo(249.5 * e, 202.546875 * e, 253.5 * e, 205.546875 * e, 258.5 * e, 207.546875 * e),
                    n.bezierCurveTo(259.5 * e, 222.546875 * e, 256.5 * e, 223.546875 * e, 265.5 * e, 226.546875 * e),
                    n.bezierCurveTo(256.5 * e, 231.546875 * e, 255.5 * e, 241.546875 * e, 259.5 * e, 248.546875 * e),
                    n.bezierCurveTo(250.5 * e, 245.546875 * e, 245.5 * e, 252.546875 * e, 243.5 * e, 260.546875 * e),
                    n.bezierCurveTo(234.5 * e, 256.546875 * e, 229.5 * e, 258.546875 * e, 223.5 * e, 265.546875 * e),
                    n.bezierCurveTo(218.5 * e, 255.546875 * e, 213.5 * e, 257.546875 * e, 204.5 * e, 261.546875 * e),
                    n.bezierCurveTo(203.5 * e, 251.546875 * e, 198.5 * e, 248.546875 * e, 189.5 * e, 244.546875 * e),
                    n.bezierCurveTo(194.5 * e, 237.546875 * e, 192.5 * e, 231.546875 * e, 184.5 * e, 225.546875 * e),
                    n.bezierCurveTo(191.5 * e, 211.546875 * e, 192.5 * e, 209.546875 * e, 190.5 * e, 204.546875 * e),
                    n.bezierCurveTo(200.5 * e, 204.546875 * e, 204.5 * e, 198.546875 * e, 207.5 * e, 194.546875 * e),
                    n.closePath(),
                    he(n, void 0, t[0], 4),
                    n.beginPath(),
                    n.lineCap = "round",
                    n.lineJoin = "round",
                    n.moveTo(149.5 * e, 93.546875 * e),
                    n.bezierCurveTo(287.5 * e, 332.546875 * e, 226 * e, 225.546875 * e, 302.5 * e, 357.546875 * e),
                    n.closePath(),
                    he(n, void 0, t[0], 4),
                    n.beginPath(),
                    n.lineCap = "round",
                    n.lineJoin = "round",
                    n.moveTo(224.5 * e, 66.546875 * e),
                    n.bezierCurveTo(224.5 * e, 223.546875 * e, 224.5 * e, 223.546875 * e, 224.5 * e, 380.546875 * e),
                    n.closePath(),
                    he(n, void 0, t[0], 4),
                    n.beginPath(),
                    n.lineCap = "round",
                    n.lineJoin = "round",
                    n.moveTo(302.5 * e, 88.546875 * e),
                    n.bezierCurveTo(222.5 * e, 227.546875 * e, 222.5 * e, 227.546875 * e, 142.5 * e, 366.546875 * e),
                    n.closePath(),
                    he(n, void 0, t[0], 4),
                    n.beginPath(),
                    n.lineCap = "round",
                    n.lineJoin = "round",
                    n.moveTo(361.5 * e, 147.546875 * e),
                    n.bezierCurveTo(223 * e, 226.546875 * e, 223 * e, 226.546875 * e, 84.5 * e, 305.546875 * e),
                    n.closePath(),
                    he(n, void 0, t[0], 4),
                    n.beginPath(),
                    n.lineCap = "round",
                    n.lineJoin = "round",
                    n.moveTo(379.5 * e, 225.546875 * e),
                    n.bezierCurveTo(221 * e, 225.546875 * e, 221 * e, 225.546875 * e, 62.5 * e, 225.546875 * e),
                    n.closePath(),
                    he(n, void 0, t[0], 4),
                    n.beginPath(),
                    n.lineCap = "round",
                    n.lineJoin = "round",
                    n.moveTo(90.5 * e, 147.546875 * e),
                    n.bezierCurveTo(226.5 * e, 226.546875 * e, 226.5 * e, 226.546875 * e, 362.5 * e, 305.546875 * e),
                    n.closePath(),
                    he(n, void 0, t[0], 4),
                    i
                }(.6, ["#FFFFFF"])),
                Ie[SPRITE.WOLF] = [],
                Ie[SPRITE.WOLF][SPRITE.DAY] = F(Le(1.1, ["#0e3022", "#231f20", "#b7252c", "#7d7679", "#ffffff"])),
                Ie[SPRITE.WOLF][SPRITE.NIGHT] = F(Le(1.1, ["#030d14", "#1e181c", "#462966", "#3e3e4a", "#ffffff"])),
                Ie[ItemType.EARMUFFS] = [],
                Ie[ItemType.EARMUFFS][SPRITE.DAY] = F(hi(.6, 0, ["#f9efeb", "#dfd1cb", "#3e3c25", "#4d4a2e"])),
                Ie[ItemType.EARMUFFS][SPRITE.NIGHT] = F(hi(.6, 0, ["#478e8b", "#327e73", "#073030", "#08403f"])),
                Ie[ItemType.COAT] = [],
                Ie[ItemType.COAT][SPRITE.DAY] = F($t(.6, 0, ["#3e3c25", "#4d4a2e", "#f9efeb", "#dfd1cb"])),
                Ie[ItemType.COAT][SPRITE.NIGHT] = F($t(.6, 0, ["#073030", "#08403f", "#478e8b", "#327e73"])),
                Ie[ItemType.CAP_SCARF] = [],
                Ie[ItemType.CAP_SCARF][SPRITE.DAY] = F(yi(.63, !0, ["#171a19", "#dee7e7", "#b8cccb", "#ffffff", "#e3e8e8"])),
                Ie[ItemType.CAP_SCARF][SPRITE.NIGHT] = F(yi(.63, !0, ["#073030", "#368981", "#1c635e", "#7bbab4", "#469e95"])),
                Ie[ItemType.CHRISTMAS_HAT] = [],
                Ie[ItemType.CHRISTMAS_HAT][SPRITE.DAY] = F(Qe(.6, 0, ["#171a19", "#c5232c", "#84191d", "#a72027", "#fef4f4", "#e9dad9"])),
                Ie[ItemType.CHRISTMAS_HAT][SPRITE.NIGHT] = F(Qe(.6, 0, ["#073030", "#392966", "#2a194f", "#433379", "#66aaa3", "#469e95"])),
                Ie[ItemType.ELF_HAT] = [],
                Ie[ItemType.ELF_HAT][SPRITE.DAY] = F(Je(.6, 0, ["#171a19", "#0f964c", "#106e3b", "#138344", "#fef4f4", "#e9dad9", "#C5232C", "#A92D2D"])),
                Ie[ItemType.ELF_HAT][SPRITE.NIGHT] = F(Je(.6, 0, ["#073030", "#124949", "#0e3838", "#15514f", "#66aaa3", "#469e95", "#292f66", "#202559"])),
                Ie[SPRITE.BREAD_OVEN_ON] = [],
                Ie[SPRITE.BREAD_OVEN_ON][SPRITE.DAY] = F(mn(.42, !0, ["#0d1b1c", "#515C57", "#3A4942", "#68736F", "#C1C0C0", "#be8d50", "#7d5234", "#222825", "#4D5752", "#e48727", "#d4a872", "#343d39"])),
                Ie[SPRITE.BREAD_OVEN_ON][SPRITE.NIGHT] = F(mn(.42, !0, ["#0d1b1c", "#485E66", "#1F343F", "#60757D", "#C1C0C0", "#be8d50", "#7d5234", "#1F343F", "#344B51", "#D8E57F", "#dfa64e", "#192225"])),
                Ie[SPRITE.BREAD_LIGHT_UP] = [],
                Ie[SPRITE.BREAD_LIGHT_UP][SPRITE.DAY] = F(Sn(.9, ["#e4c027"])),
                Ie[SPRITE.BREAD_LIGHT_UP][SPRITE.NIGHT] = F(Sn(.9, ["#D8E57F"])),
                Ie[ItemType.BREAD_OVEN] = [],
                Ie[ItemType.BREAD_OVEN][SPRITE.DAY] = F(En(.42, !0, ["#0d1b1c", "#515C57", "#3A4942", "#68736F", "#C1C0C0", "#be8d50", "#7d5234", "#222825", "#4D5752", "#e48727", "#d4a872", "#232a27"])),
                Ie[ItemType.BREAD_OVEN][SPRITE.NIGHT] = F(En(.42, !0, ["#0d1b1c", "#485E66", "#1F343F", "#60757D", "#C1C0C0", "#be8d50", "#7d5234", "#1F343F", "#344B51", "#D8E57F", "#dfa64e", "#1b2529"])),
                Ie[SPRITE.BREAD_OVEN_UI] = F(function(e, t) {
                    var i = window.document.createElement("canvas")
                      , n = i.getContext("2d");
                    return i.width = 149 * e,
                    i.height = 356 * e,
                    n.save(),
                    n.translate(74.5 * e, 177.5 * e),
                    ye(n, -57.5 * e, -161.5 * e, 100 * e, 323 * e, 10 * e),
                    n.restore(),
                    he(n, t[0], t[1], 4 * e),
                    n.save(),
                    n.translate(74.5 * e, 177.5 * e),
                    ye(n, -57.5 * e, 50.5 * e, 100 * e, 105 * e, 10 * e),
                    n.restore(),
                    he(n, t[6], t[1], 4 * e),
                    n.beginPath(),
                    n.lineCap = "round",
                    n.lineJoin = "round",
                    n.moveTo(16 * e, 125 * e),
                    n.bezierCurveTo(74.5 * e, 125 * e, 118 * e, 125 * e, 118 * e, 125 * e),
                    n.closePath(),
                    he(n, t[2], t[2], 10 * e),
                    n.beginPath(),
                    n.lineCap = "round",
                    n.lineJoin = "round",
                    n.moveTo(16 * e, 120 * e),
                    n.bezierCurveTo(74.5 * e, 120 * e, 74.5 * e, 120 * e, 118 * e, 120 * e),
                    n.closePath(),
                    he(n, t[3], t[3], 10 * e),
                    n.beginPath(),
                    n.lineCap = "round",
                    n.lineJoin = "round",
                    n.moveTo(16 * e, 228 * e),
                    n.bezierCurveTo(75 * e, 228.5 * e, 118 * e, 228.5 * e, 118 * e, 229 * e),
                    n.closePath(),
                    he(n, t[2], t[2], 10 * e),
                    n.beginPath(),
                    n.lineCap = "round",
                    n.lineJoin = "round",
                    n.moveTo(16 * e, 224 * e),
                    n.bezierCurveTo(75 * e, 224 * e, 118 * e, 224 * e, 118 * e, 224 * e),
                    n.closePath(),
                    he(n, t[3], t[3], 10 * e),
                    n.save(),
                    n.translate(72 * e, 68.5 * e),
                    ye(n, -41.5 * e, -36.5 * e, 73 * e, 73 * e, 13 * e),
                    n.restore(),
                    he(n, t[4]),
                    n.save(),
                    n.translate(72 * e, 175.5 * e),
                    ye(n, -41.5 * e, -38.5 * e, 73 * e, 73 * e, 13 * e),
                    n.restore(),
                    he(n, t[4]),
                    n.save(),
                    n.translate(72 * e, 279.5 * e),
                    ye(n, -41.5 * e, -40.5 * e, 73 * e, 73 * e, 13 * e),
                    n.restore(),
                    he(n, t[4]),
                    n.beginPath(),
                    n.lineCap = "round",
                    n.lineJoin = "round",
                    n.moveTo(16 * e, 338 * e),
                    n.bezierCurveTo(75 * e, 338 * e, 118 * e, 338 * e, 118 * e, 338 * e),
                    n.closePath(),
                    he(n, t[2], t[2], 10 * e),
                    n.beginPath(),
                    n.lineCap = "round",
                    n.lineJoin = "round",
                    n.moveTo(16 * e, 333 * e),
                    n.bezierCurveTo(75 * e, 333 * e, 118 * e, 333 * e, 118 * e, 333 * e),
                    n.closePath(),
                    he(n, t[3], t[3], 10 * e),
                    i
                }(1, ["#596560", "#394841", "#543B1C", "#694D28", "#7E8A85", "#384740", "#525956"])),
                Ie[SPRITE.FURNACE_ON] = [],
                Ie[SPRITE.FURNACE_ON][SPRITE.DAY] = F(qt(.5, !0, ["#0d1b1c", "#939393", "#5f6061", "#c0c0c0", "#ffad22", "#fffdd5", "#fee764"])),
                Ie[SPRITE.FURNACE_ON][SPRITE.NIGHT] = F(qt(.5, !0, ["#0d1b1c", "#485e66", "#1f343f", "#60757d", "#ffdc73", "#fffce2", "#fef259"])),
                Ie[ItemType.FURNACE] = [],
                Ie[ItemType.FURNACE][SPRITE.DAY] = F(zt(.5, !0, ["#0d1b1c", "#939393", "#5f6061", "#c0c0c0", "#4f4f4f", "#6c6c6c", "#454545"])),
                Ie[ItemType.FURNACE][SPRITE.NIGHT] = F(zt(.5, !0, ["#0d1b1c", "#485e66", "#1f343f", "#60757d", "#152229", "#0c1113", "#0c1113"])),
                Ie[SPRITE.FURNACE_SLOT] = F(function(e, t, i) {
                    var n = window.document.createElement("canvas")
                      , a = n.getContext("2d");
                    return n.width = 118 * e,
                    n.height = 129 * e,
                    a.save(),
                    a.translate(90 * e, 90 * e),
                    ye(a, -86.5 * e, -86 * e, 110 * e, 110 * e, 15 * e),
                    a.restore(),
                    he(a, i[0], i[1], 4),
                    n
                }(.8, 0, ["#5f6061", "#939393"])),
                Ie[SPRITE.FURNACE_BUTTON] = Xe(1, [{
                    f: je,
                    x: 0,
                    y: 0,
                    a: 1,
                    r: window.Math.PI / 2.5,
                    c: ["#4d2d14", "#432516"]
                }], .3, ["#494949", "#5b5858", "#3d3b3b"], 1),
                Ie[ItemType.BED] = [],
                Ie[ItemType.BED][SPRITE.DAY] = F(Qt(1, 0, ["#0d1b1c", "#554139", "#3f332a", "#261912", "#eee6c5", "#d1c599", "#554139", "#3f332a", "#86509b", "#703a99"])),
                Ie[ItemType.BED][SPRITE.NIGHT] = F(Qt(1, 0, ["#0d1b1c", "#0b3432", "#092b29", "#052120", "#104d5b", "#0b424f", "#0b3432", "#092b29", "#2b0b4a", "#23073e"])),
                Ie[SPRITE.BED_TOP] = [],
                Ie[SPRITE.BED_TOP][SPRITE.DAY] = F(ei(1, 0, ["#0d1b1c", "#554139", "#3f332a", "#261912", "#eee6c5", "#d1c599", "#554139", "#3f332a", "#86509b", "#703a99"])),
                Ie[SPRITE.BED_TOP][SPRITE.NIGHT] = F(ei(1, 0, ["#0d1b1c", "#0b3432", "#092b29", "#052120", "#104d5b", "#083b37", "#0b3432", "#092b29", "#2b0b4a", "#23073e"])),
                Ie[ItemType.CRAB_SPEAR] = [],
                Ie[ItemType.CRAB_SPEAR][SPRITE.DAY] = F(Se(3, ti(.7, !0, ["#0d1b1c", "#58452b", "#47341d", "#ee593d", "#c04933", "#c04933", "#a33e2b", "#c3be9a", "#7f6d52"]))),
                Ie[ItemType.CRAB_SPEAR][SPRITE.NIGHT] = F(Se(3, ti(.7, !0, ["#0d1b1c", "#0b3432", "#092b29", "#34255d", "#281b4e", "#2f2157", "#281b4e", "#104d5b", "#083b37"]))),
                Ie[ItemType.WOOD_SPEAR] = [],
                Ie[ItemType.WOOD_SPEAR][SPRITE.DAY] = F(Se(3, ii(.7, !0, ["#0d1b1c", "#58452b", "#47341d", "#765d42", "#c3be9a", "#7f6d52"]))),
                Ie[ItemType.WOOD_SPEAR][SPRITE.NIGHT] = F(Se(3, ii(.7, !0, ["#0d1b1c", "#0b3432", "#092b29", "#0e4d49", "#1a6c67", "#07322f"]))),
                Ie[ItemType.STONE_SPEAR] = [],
                Ie[ItemType.STONE_SPEAR][SPRITE.DAY] = F(Se(3, ni(.65, !0, ["#0d1b1c", "#4d2d14", "#432516", "#c3be9a", "#7f6d52", "#7a7575", "#454749", "#8c8787", "#939393", "#5f6061", "#aaa6a6"]))),
                Ie[ItemType.STONE_SPEAR][SPRITE.NIGHT] = F(Se(3, ni(.65, !0, ["#0d1b1c", "#0d2e33", "#0b2326", "#1a6c67", "#07322f", "#374950", "#101f26", "#2c3c42", "#485e66", "#1f343f", "#546e78"]))),
                Ie[ItemType.GOLD_SPEAR] = [],
                Ie[ItemType.GOLD_SPEAR][SPRITE.DAY] = F(Se(3, ai(.67, !0, ["#0d1b1c", "#493e26", "#382e19", "#a69e39", "#9c8828", "#bab143", "#c4bc51", "#b29c32", "#d2ca59"]))),
                Ie[ItemType.GOLD_SPEAR][SPRITE.NIGHT] = F(Se(3, ai(.67, !0, ["#030d14", "#263947", "#182935", "#33916d", "#197c62", "#3eab81", "#43aa82", "#29997c", "#52be94"]))),
                Ie[ItemType.DIAMOND_SPEAR] = [],
                Ie[ItemType.DIAMOND_SPEAR][SPRITE.DAY] = F(Se(3, Ii(.67, !0, ["#0d1b1c", "#262114", "#211108", "#4ba8b4", "#198a82", "#6ccad7", "#63c9d6", "#29aaa1", "#7bd9e6"]))),
                Ie[ItemType.DIAMOND_SPEAR][SPRITE.NIGHT] = F(Se(3, Ii(.67, !0, ["#0d1b1c", "#111316", "#0a0b0c", "#4bbbc3", "#23a19d", "#54c5cd", "#4ad2ce", "#3dc4c0", "#73dde5"]))),
                Ie[ItemType.AMETHYST_SPEAR] = [],
                Ie[ItemType.AMETHYST_SPEAR][SPRITE.DAY] = F(Se(3, Ti(.67, !0, ["#0d1b1c", "#262114", "#211108", "#9443b1", "#6f1988", "#a752c6", "#9e35be", "#8c29aa", "#b864d6"]))),
                Ie[ItemType.AMETHYST_SPEAR][SPRITE.NIGHT] = F(Se(3, Ti(.67, !0, ["#0d1b1c", "#111316", "#0a0b0c", "#6e43bf", "#673fa4", "#784bcc", "#845bc6", "#764eb5", "#966be7"]))),
                Ie[ItemType.DRAGON_SPEAR] = [],
                Ie[ItemType.DRAGON_SPEAR][SPRITE.DAY] = F(Se(3, oi(1, !0, ["#0d1b1c", "#1e2b34", "#151c24", "#99d7dd", "#7dcbd1", "#c6e8eb", "#aadee8", "#b7e2e5"]))),
                Ie[ItemType.DRAGON_SPEAR][SPRITE.NIGHT] = F(Se(3, oi(1, !0, ["#0d1b1c", "#1c2026", "#0a0b0c", "#7dc6d9", "#6cbacf", "#87d2e6", "#49b2cf", "#87d2e6"]))),
                Ie[ItemType.STONE_HAMMER] = [],
                Ie[ItemType.STONE_HAMMER][SPRITE.DAY] = F(Se(3, ci(1, !0, ["#0d1b1c", "#4d2d14", "#432516", "#939393", "#5f6061"]))),
                Ie[ItemType.STONE_HAMMER][SPRITE.NIGHT] = F(Se(3, ci(1, !0, ["#030d14", "#263947", "#182935", "#485e66", "#1f343f"]))),
                Ie[ItemType.WRENCH] = [],
                Ie[ItemType.WRENCH][SPRITE.DAY] = F(Se(3, Gn(.5, !0, ["#0d1b1c", "#939393", "#5f6061"]))),
                Ie[ItemType.WRENCH][SPRITE.NIGHT] = F(Se(3, Gn(.5, !0, ["#030d14", "#485e66", "#1f343f"]))),
                Ie[ItemType.GOLD_WRENCH] = [],
                Ie[ItemType.GOLD_WRENCH][SPRITE.DAY] = F(Se(3, Gn(.5, !0, ["#0d1b1c", "#939393", "#5f6061"]))),
                Ie[ItemType.GOLD_WRENCH][SPRITE.NIGHT] = F(Se(3, Gn(.5, !0, ["#030d14", "#485e66", "#1f343f"]))),
                Ie[ItemType.SUPER_HAMMER] = [],
                Ie[ItemType.SUPER_HAMMER][SPRITE.DAY] = F(Se(3, Tn(1, !0, ["#0d1b1c", "#9b5927", "#7a3610", "#1e0302", "#0d825b", "#6bd16e", "#17915d", "#89e5aa", "#16935d", "#a0efc4", "#28b26d", "#cdf4cb"]))),
                Ie[ItemType.SUPER_HAMMER][SPRITE.NIGHT] = F(Se(3, Tn(1, !0, ["#0d1b1c", "#2a4f4a", "#1e423d", "#1e0302", "#096b3f", "#3db76f", "#118254", "#40c696", "#0c7a50", "#59d8a4", "#249376", "#80d8c7"]))),
                Ie[ItemType.GOLD_HAMMER] = [],
                Ie[ItemType.GOLD_HAMMER][SPRITE.DAY] = F(Se(3, ci(1, !0, ["#0d1b1c", "#493e26", "#382e19", "#c4bc51", "#b29c32"]))),
                Ie[ItemType.GOLD_HAMMER][SPRITE.NIGHT] = F(Se(3, ci(1, !0, ["#0d1b1c", "#0d2e33", "#0b2326", "#43aa82", "#29997c"]))),
                Ie[ItemType.DIAMOND_HAMMER] = [],
                Ie[ItemType.DIAMOND_HAMMER][SPRITE.DAY] = F(Se(3, ci(1, !0, ["#0d1b1c", "#262114", "#211108", "#63c9d6", "#29aaa1"]))),
                Ie[ItemType.DIAMOND_HAMMER][SPRITE.NIGHT] = F(Se(3, ci(1, !0, ["#0d1b1c", "#111316", "#0a0b0c", "#73dde5", "#3dc4c0"]))),
                Ie[ItemType.AMETHYST_HAMMER] = [],
                Ie[ItemType.AMETHYST_HAMMER][SPRITE.DAY] = F(Se(3, ci(1, !0, ["#0d1b1c", "#262114", "#211108", "#b864d6", "#8c29aa"]))),
                Ie[ItemType.AMETHYST_HAMMER][SPRITE.NIGHT] = F(Se(3, ci(1, !0, ["#0d1b1c", "#111316", "#0a0b0c", "#8359d3", "#764eb5"]))),
                Ie[ItemType.LOCK] = [],
                Ie[ItemType.LOCK][SPRITE.DAY] = F(Xi(.55, 0, ["#141414", "#816511", "#c4a23a", "#3a3a3a"])),
                Ie[ItemType.LOCK][SPRITE.NIGHT] = F(Xi(.55, 0, ["#080707", "#133d3c", "#2b6664", "#1b2529"])),
                Ie[SPRITE.PADLOCK] = [],
                Ie[SPRITE.PADLOCK].push(F(Xi(.8, 0, ["#141414", "#816511", "#c4a23a", "#3a3a3a"]))),
                Ie[SPRITE.PADLOCK].push(F(Xi(.8, 0, ["#141414", "#9f7d17", "#dab33c", "#474545"]))),
                Ie[SPRITE.PADLOCK].push(F(Xi(.8, 0, ["#141414", "#73590d", "#a88a2c", "#2a2828"]))),
                Ie[SPRITE.LOCKED] = [],
                Ie[SPRITE.LOCKED].push(Ie[SPRITE.PADLOCK][0]),
                Ie[SPRITE.LOCKED].push(Ie[SPRITE.PADLOCK][0]),
                Ie[SPRITE.LOCKED].push(Ie[SPRITE.PADLOCK][0]),
                Ie[ItemType.LOCK_PICK] = [],
                Ie[ItemType.LOCK_PICK][SPRITE.DAY] = F(Ji(.06, 0, ["#141414", "#c4a23a", "#816511"])),
                Ie[ItemType.LOCK_PICK][SPRITE.NIGHT] = F(Ji(.06, 0, ["#030d14", "#2b6664", "#133d3c"])),
                Ie[SPRITE.KEY] = [],
                Ie[SPRITE.KEY].push(F(Ji(.08, 0, ["#141414", "#c4a23a", "#816511"]))),
                Ie[SPRITE.KEY].push(F(Ji(.08, 0, ["#141414", "#e2bd4e", "#a38018"]))),
                Ie[SPRITE.KEY].push(F(Ji(.08, 0, ["#141414", "#b0902e", "#634d09"]))),
                Ie[ItemType.DRAGON_HEART] = Xe(1.5, [{
                    f: an,
                    x: 0,
                    y: 0,
                    a: 1,
                    r: 0,
                    c: ["#141414", "#178a99", "#0a6372", "#03282e"]
                }], .45, ["#5bbcc9", "#73d2df", "#4daab6"], .9),
                Ie[SPRITE.RESURRECTION_GROUND] = [],
                Ie[SPRITE.RESURRECTION_GROUND][SPRITE.DAY] = F(Qi(.8, 0, ["#347f93", "#54a4ba"])),
                Ie[SPRITE.RESURRECTION_GROUND][SPRITE.NIGHT] = F(Qi(.8, 0, ["#98ede3", "#94f2e7"])),
                Ie[SPRITE.RESURRECTION_HOLE] = [],
                Ie[SPRITE.RESURRECTION_HOLE][SPRITE.DAY] = F(en(.8, 0, ["#a9e4ed", "#86d4e0", "#418ba5", "#59b8ce"])),
                Ie[SPRITE.RESURRECTION_HOLE][SPRITE.NIGHT] = F(en(.8, 0, ["#59c9c0", "#83ddd4", "#3fa097", "#90ddd9"])),
                Ie[SPRITE.RESURRECTION_ROTATE] = [],
                Ie[SPRITE.RESURRECTION_ROTATE][SPRITE.DAY] = F(tn(.8, 0, ["#a9e4ed", "#86d4e0"])),
                Ie[SPRITE.RESURRECTION_ROTATE][SPRITE.NIGHT] = F(tn(.8, 0, ["#83ddd4", "#485e66"])),
                Ie[ItemType.RESURRECTION] = [],
                Ie[ItemType.RESURRECTION][SPRITE.DAY] = F(nn(.8, !0, ["#347f93", "#54a4ba", "#1c2528", "#a9e4ed", "#86d4e0", "#959da0", "#697072", "#929da0", "#afb9bc"])),
                Ie[ItemType.RESURRECTION][SPRITE.NIGHT] = F(nn(.8, !0, ["#98ede3", "#94f2e7", "#1f343f", "#59c9c0", "#83ddd4", "#485e66", "#2d484f", "#546d6d", "#597b84"])),
                Ie[SPRITE.EMERALD_MACHINE_GROUND] = [],
                Ie[SPRITE.EMERALD_MACHINE_GROUND][SPRITE.DAY] = P.EMERALD_MACHINE_GROUNDD,
                Ie[SPRITE.EMERALD_MACHINE_GROUND][SPRITE.NIGHT] = P.EMERALD_MACHINE_GROUNDN,
                Ie[SPRITE.EMERALD_MACHINE_HOLE] = [],
                Ie[SPRITE.EMERALD_MACHINE_HOLE][SPRITE.DAY] = P.EMERALD_MACHINE_HOLED,
                Ie[SPRITE.EMERALD_MACHINE_HOLE][SPRITE.NIGHT] = P.EMERALD_MACHINE_HOLEN,
                Ie[SPRITE.EMERALD_MACHINE_ROTATE] = [],
                Ie[SPRITE.EMERALD_MACHINE_ROTATE][SPRITE.DAY] = P.EMERALD_MACHINE_ROTATED,
                Ie[SPRITE.EMERALD_MACHINE_ROTATE][SPRITE.NIGHT] = P.EMERALD_MACHINE_ROTATEN,
                Ie[ItemType.EMERALD_MACHINE] = [],
                Ie[ItemType.EMERALD_MACHINE][SPRITE.DAY] = P.EMERALD_MACHINED,
                Ie[ItemType.EMERALD_MACHINE][SPRITE.NIGHT] = P.EMERALD_MACHINEN,
                Ie[SPRITE.EXTRACTOR_MACHINE0_STONE] = [],
                Ie[SPRITE.EXTRACTOR_MACHINE0_STONE][SPRITE.DAY] = P.EXTRACTOR_MACHINE0_STONED,
                Ie[SPRITE.EXTRACTOR_MACHINE0_STONE][SPRITE.NIGHT] = P.EXTRACTOR_MACHINE0_STONEN,
                Ie[ItemType.STONE_EXTRACTOR] = [],
                Ie[ItemType.STONE_EXTRACTOR][SPRITE.DAY] = P.EXTRACTOR_MACHINE_STONED,
                Ie[ItemType.STONE_EXTRACTOR][SPRITE.NIGHT] = P.EXTRACTOR_MACHINE_STONEN,
                Ie[SPRITE.EXTRACTOR_MACHINE0_GOLD] = [],
                Ie[SPRITE.EXTRACTOR_MACHINE0_GOLD][SPRITE.DAY] = P.EXTRACTOR_MACHINE0_GOLDD,
                Ie[SPRITE.EXTRACTOR_MACHINE0_GOLD][SPRITE.NIGHT] = P.EXTRACTOR_MACHINE0_GOLDN,
                Ie[ItemType.GOLD_EXTRACTOR] = [],
                Ie[ItemType.GOLD_EXTRACTOR][SPRITE.DAY] = P.EXTRACTOR_MACHINE_GOLDD,
                Ie[ItemType.GOLD_EXTRACTOR][SPRITE.NIGHT] = P.EXTRACTOR_MACHINE_GOLDN,
                Ie[SPRITE.EXTRACTOR_MACHINE0_DIAMOND] = [],
                Ie[SPRITE.EXTRACTOR_MACHINE0_DIAMOND][SPRITE.DAY] = P.EXTRACTOR_MACHINE0_DIAMONDD,
                Ie[SPRITE.EXTRACTOR_MACHINE0_DIAMOND][SPRITE.NIGHT] = P.EXTRACTOR_MACHINE0_DIAMONDN,
                Ie[ItemType.DIAMOND_EXTRACTOR] = [],
                Ie[ItemType.DIAMOND_EXTRACTOR][SPRITE.DAY] = P.DIAMOND_EXTRACTORD,
                Ie[ItemType.DIAMOND_EXTRACTOR][SPRITE.NIGHT] = P.DIAMOND_EXTRACTORN,
                Ie[SPRITE.EXTRACTOR_MACHINE0_AMETHYST] = [],
                Ie[SPRITE.EXTRACTOR_MACHINE0_AMETHYST][SPRITE.DAY] = P.EXTRACTOR_MACHINE0_AMETHYSTD,
                Ie[SPRITE.EXTRACTOR_MACHINE0_AMETHYST][SPRITE.NIGHT] = P.EXTRACTOR_MACHINE0_AMETHYSTN,
                Ie[ItemType.AMETHYST_EXTRACTOR] = [],
                Ie[ItemType.AMETHYST_EXTRACTOR][SPRITE.DAY] = P.EXTRACTOR_MACHINE_AMETHYSTD,
                Ie[ItemType.AMETHYST_EXTRACTOR][SPRITE.NIGHT] = P.EXTRACTOR_MACHINE_AMETHYSTN,
                Ie[SPRITE.EXTRACTOR_MACHINE0_REIDITE] = [],
                Ie[SPRITE.EXTRACTOR_MACHINE0_REIDITE][SPRITE.DAY] = P.EXTRACTOR_MACHINE0_REIDITED,
                Ie[SPRITE.EXTRACTOR_MACHINE0_REIDITE][SPRITE.NIGHT] = P.EXTRACTOR_MACHINE0_REIDITEN,
                Ie[ItemType.REIDITE_EXTRACTOR] = [],
                Ie[ItemType.REIDITE_EXTRACTOR][SPRITE.DAY] = P.EXTRACTOR_MACHINE_REIDITED,
                Ie[ItemType.REIDITE_EXTRACTOR][SPRITE.NIGHT] = P.EXTRACTOR_MACHINE_REIDITEN,
                Ie[SPRITE.FIREFLY] = [],
                Ie[SPRITE.FIREFLY][SPRITE.DAY] = P.FIREFLYD,
                Ie[SPRITE.FIREFLY][SPRITE.NIGHT] = P.FIREFLYN,
                Ie[SPRITE.HURT_FIREFLY] = P.HURT_FIREFLY,
                Ie[ItemType.TOTEM] = [],
                Ie[ItemType.TOTEM][SPRITE.DAY] = F(Zi(.75, !0, ["#0d1b1c", "#4c3a15", "#634828", "#564021"])),
                Ie[ItemType.TOTEM][SPRITE.NIGHT] = F(Zi(.75, !0, ["#030d14", "#0d2e33", "#184747", "#123b3f"])),
                Ie[SPRITE.ICON_MEMBER] = F(zi(.3, ["#092813", "#1f773d"], 0)),
                Ie[SPRITE.ICON_LEADER] = F(zi(.3, ["#092813", "#1f773d"], 1)),
                Ie[SPRITE.VERIFIED] = F(function(e, t) {
                    var i = window.document.createElement("canvas")
                      , n = i.getContext("2d");
                    return i.width = 60 * e,
                    i.height = 60 * e,
                    n.translate(-25 * e, -25 * e),
                    n.translate(0, 5 * e),
                    n.beginPath(),
                    n.lineCap = "round",
                    n.lineJoin = "round",
                    n.moveTo(24 * e, 50 * e),
                    n.bezierCurveTo(32.5 * e, 54.5 * e, 32.5 * e, 54.5 * e, 41 * e, 59 * e),
                    n.bezierCurveTo(57 * e, 47 * e, 57 * e, 47 * e, 73 * e, 35 * e),
                    n.bezierCurveTo(57 * e, 53 * e, 57 * e, 53 * e, 41 * e, 71 * e),
                    n.closePath(),
                    he(n, t[0]),
                    n.translate(0, -5 * e),
                    n.beginPath(),
                    n.lineCap = "round",
                    n.lineJoin = "round",
                    n.moveTo(24 * e, 50 * e),
                    n.bezierCurveTo(32.5 * e, 54.5 * e, 32.5 * e, 54.5 * e, 41 * e, 59 * e),
                    n.bezierCurveTo(57 * e, 47 * e, 57 * e, 47 * e, 73 * e, 35 * e),
                    n.bezierCurveTo(57 * e, 53 * e, 57 * e, 53 * e, 41 * e, 71 * e),
                    n.closePath(),
                    he(n, t[1]),
                    i
                }(.6, ["#092813", "#1f773d"])),
                Ie[SPRITE.TEAM_BUTTON] = [],
                Ie[SPRITE.TEAM_BUTTON].push(F(ji(.7, ["#092813", "#1f773d", "#165b2b", "#4c3a15", "#1f773d"], 0))),
                Ie[SPRITE.TEAM_BUTTON].push(F(ji(.7, ["#0b3719", "#228745", "#1a7034", "#614a1a", "#238845"], 0))),
                Ie[SPRITE.TEAM_BUTTON].push(F(ji(.7, ["#092a14", "#186733", "#124a23", "#4c3a15", "#1b6735"], 0))),
                Ie[SPRITE.FULL_TEAM_BUTTON] = [];
                var t = F(ji(.7, ["#280e09", "#77371f", "#280e09", "#2e2410", "#77371f"], 0));
                Ie[SPRITE.FULL_TEAM_BUTTON].push(t),
                Ie[SPRITE.FULL_TEAM_BUTTON].push(t),
                Ie[SPRITE.FULL_TEAM_BUTTON].push(t),
                Ie[SPRITE.MANAGE_TEAM_BUTTON] = [],
                Ie[SPRITE.MANAGE_TEAM_BUTTON].push(F(ji(.7, ["#092813", "#1f773d", "#165b2b", "#4c3a15", "#1f773d"], 1))),
                Ie[SPRITE.MANAGE_TEAM_BUTTON].push(F(ji(.7, ["#0b3719", "#228745", "#1a7034", "#614a1a", "#238845"], 1))),
                Ie[SPRITE.MANAGE_TEAM_BUTTON].push(F(ji(.7, ["#092a14", "#186733", "#124a23", "#4c3a15", "#1b6735"], 1))),
                Ie[SPRITE.DELAY_SPIKE] = F(function(e, t) {
                    var i = window.document.createElement("canvas")
                      , n = i.getContext("2d")
                      , a = 170 * e
                      , I = 172 * e
                      , T = a / 2
                      , o = I / 2;
                    i.width = a,
                    i.height = I,
                    n.translate(T, o),
                    n.save();
                    for (var r = 0; r < 10; r++)
                        n.rotate(window.Math.PI / 5),
                        n.save(),
                        n.translate(65 * e, 0),
                        me(n, 3, 18 * e, 4 * e),
                        he(n, t[0]),
                        n.restore();
                    return n.restore(),
                    Re(n, 0, 0, 40 * e),
                    he(n, void 0, t[0], 6 * e),
                    Re(n, 0, 0, 20 * e),
                    he(n, t[0]),
                    i
                }(.3, ["#FFFFFF"])),
                Ie[SPRITE.DELAY_WALL] = F(function(e, t) {
                    var i = window.document.createElement("canvas")
                      , n = i.getContext("2d")
                      , a = 130 * e
                      , I = 142 * e
                      , T = a / 2
                      , o = I / 2;
                    return i.width = a,
                    i.height = I,
                    Re(n, T, o, 40 * e),
                    he(n, void 0, t[0], 7 * e),
                    Re(n, T, o, 30 * e),
                    he(n, void 0, t[0], 7 * e),
                    Re(n, T, o, 20 * e),
                    he(n, t[0]),
                    i
                }(.3, ["#FFFFFF"])),
                Ie[SPRITE.DELAY_TEAM] = F(zi(.4, ["rgba(255, 255, 255, 0)", "#FFFFFF"], 0)),
                Ie[SPRITE.DELAY_DRINK] = F(Se(window.Math.PI / 5, function(e, t) {
                    var i = window.document.createElement("canvas")
                      , n = i.getContext("2d");
                    return i.width = 316 * e,
                    i.height = 365 * e,
                    n.save(),
                    n.translate(156.07142639160156 * e, 51.81248474121094 * e),
                    n.rotate(0),
                    ye(n, -21.5 * e, -34 * e, 43 * e, 68 * e, 8 * e),
                    n.restore(),
                    he(n, t[0], t[0], 15 * e),
                    n.beginPath(),
                    n.lineCap = "round",
                    n.lineJoin = "round",
                    n.moveTo(126.57142639160156 * e, 67.38392639160156 * e),
                    n.bezierCurveTo(126.57142639160156 * e, 57.38392639160156 * e, 132.57142639160156 * e, 54.38392639160156 * e, 140.57142639160156 * e, 54.38392639160156 * e),
                    n.bezierCurveTo(177.57142639160156 * e, 55.38392639160156 * e, 158.07142639160156 * e, 54.38392639160156 * e, 175.57142639160156 * e, 54.38392639160156 * e),
                    n.bezierCurveTo(185.57142639160156 * e, 56.38392639160156 * e, 185.57142639160156 * e, 57.38392639160156 * e, 184.57142639160156 * e, 66.38392639160156 * e),
                    n.bezierCurveTo(184.57142639160156 * e, 78.38392639160156 * e, 184.57142639160156 * e, 89.38392639160156 * e, 184.57142639160156 * e, 90.38392639160156 * e),
                    n.bezierCurveTo(177.57142639160156 * e, 107.38392639160156 * e, 180.57142639160156 * e, 112.38392639160156 * e, 189.57142639160156 * e, 116.38392639160156 * e),
                    n.bezierCurveTo(212.57142639160156 * e, 127.38392639160156 * e, 212.57142639160156 * e, 132.38392639160156 * e, 211.57142639160156 * e, 150.38392639160156 * e),
                    n.bezierCurveTo(211.57142639160156 * e, 227.59821128845215 * e, 211.57142639160156 * e, 227.59821128845215 * e, 211.57142639160156 * e, 304.81249618530273 * e),
                    n.bezierCurveTo(212.57142639160156 * e, 328.81249618530273 * e, 209.57142639160156 * e, 330.81249618530273 * e, 188.57142639160156 * e, 333.81249618530273 * e),
                    n.bezierCurveTo(155.07142639160156 * e, 333.31249618530273 * e, 155.07142639160156 * e, 333.31249618530273 * e, 121.57142639160156 * e, 332.81249618530273 * e),
                    n.bezierCurveTo(104.57142639160156 * e, 327.81249618530273 * e, 105.57142639160156 * e, 328.81249618530273 * e, 104.57142639160156 * e, 312.81249618530273 * e),
                    n.bezierCurveTo(104.57142639160156 * e, 228.16963958740234 * e, 104.57142639160156 * e, 228.16963958740234 * e, 104.57142639160156 * e, 143.52678298950195 * e),
                    n.bezierCurveTo(106.57142639160156 * e, 124.52678298950195 * e, 110.57142639160156 * e, 123.52678298950195 * e, 123.57142639160156 * e, 116.52678298950195 * e),
                    n.bezierCurveTo(136.57142639160156 * e, 110.52678298950195 * e, 130.57142639160156 * e, 106.52678298950195 * e, 126.57142639160156 * e, 98.52678298950195 * e),
                    n.closePath(),
                    he(n, t[0], t[0], 15 * e),
                    n.beginPath(),
                    n.lineCap = "round",
                    n.lineJoin = "round",
                    n.moveTo(125.57142639160156 * e, 156.66963958740234 * e),
                    n.bezierCurveTo(125.57142639160156 * e, 182.66963958740234 * e, 125.57142639160156 * e, 182.66963958740234 * e, 125.57142639160156 * e, 208.66963958740234 * e),
                    n.closePath(),
                    he(n, t[0], t[0], 15 * e),
                    i
                }(.2, ["#FFFFFF"]))),
                Ie[ItemType.AMETHYST_HELMET] = [],
                Ie[ItemType.AMETHYST_HELMET][SPRITE.DAY] = F(xi(.85, 0, ["#0d1b1c", "#8c55b7", "#652d8e", "#79359e", "#5eccd1", "#4badad", "#9e6ac6"])),
                Ie[ItemType.AMETHYST_HELMET][SPRITE.NIGHT] = F(xi(.85, 0, ["#0d1b1c", "#4e4e93", "#393977", "#444187", "#2b9390", "#277a74", "#7da8db"])),
                Ie[SPRITE.SHOW_TEAM_BUTTON] = [],
                Ie[SPRITE.SHOW_TEAM_BUTTON].push(F(ji(.7, ["#280e09", "#77371f", "#280e09", "#2e2410", "#77371f"], 1))),
                Ie[SPRITE.SHOW_TEAM_BUTTON].push(F(ji(.7, ["#38130C", "#853D22", "#391402", "#3D3016", "#873E22"], 1))),
                Ie[SPRITE.SHOW_TEAM_BUTTON].push(F(ji(.7, ["#1C0A06", "#6B3019", "#1D0A06", "#251D0C", "#6A301A"], 1))),
                Ie[ItemType.HOOD] = [],
                Ie[ItemType.HOOD][SPRITE.DAY] = F(bn(.37, 0, ["#2a2938", "#242330", "#313041"])),
                Ie[ItemType.HOOD][SPRITE.NIGHT] = F(bn(.37, 0, ["#1b1e30", "#161921", "#252f3e"])),
                Ie[ItemType.WINTER_HOOD] = [],
                Ie[ItemType.WINTER_HOOD][SPRITE.DAY] = F(Nn(.17, 0, ["#2a2938", "#242330", "#313041", "#1b1a25", "#d62c0e"])),
                Ie[ItemType.WINTER_HOOD][SPRITE.NIGHT] = F(Nn(.17, 0, ["#1b1e30", "#161921", "#252f3e", "#0a0c11", "#d62c0e"])),
                Ie[ItemType.WINTER_PEASANT] = [],
                Ie[ItemType.WINTER_PEASANT][SPRITE.DAY] = F(vn(.55, !0, ["#1d1d22", "#e2e1e1", "#d2cbcb", "#cfcbc8", "#beb5b5", "#ada0a0"], 1)),
                Ie[ItemType.WINTER_PEASANT][SPRITE.NIGHT] = F(vn(.55, !0, ["#1d1d22", "#216661", "#134945", "#2b8079", "#17504c"], 1)),
                Ie[ItemType.PEASANT] = [],
                Ie[ItemType.PEASANT][SPRITE.DAY] = F(vn(.55, !0, ["#1d1d22", "#8c7654", "#785f4c", "#a88e6c", "#785f4c", "#705845"], 0)),
                Ie[ItemType.PEASANT][SPRITE.NIGHT] = F(vn(.55, !0, ["#1d1d22", "#1b5752", "#0e3b37", "#23706a", "#11413e", "#0b322f"], 0)),
                Ie[ItemType.CROWN_GREEN] = [],
                Ie[ItemType.CROWN_GREEN][SPRITE.DAY] = F(Fn(.2, !0, ["#0d1b1c", "#A5A244", "#D8DC74", "#C0BF55", "#49B669", "#19994C", "#71C187"])),
                Ie[ItemType.CROWN_GREEN][SPRITE.NIGHT] = F(Fn(.2, !0, ["#2b7c57", "#114933", "#1b6656", "#1a7961", "#3db76f", "#118254", "#40c696"])),
                Ie[ItemType.CROWN_ORANGE] = [],
                Ie[ItemType.CROWN_ORANGE][SPRITE.DAY] = F(Fn(.2, !0, ["#0d1b1c", "#A5A244", "#D8DC74", "#C0BF55", "#C45727", "#994617", "#DB9358"])),
                Ie[ItemType.CROWN_ORANGE][SPRITE.NIGHT] = F(Fn(.2, !0, ["#2b7c57", "#114933", "#1b6656", "#1a7961", "#69b681", "#509a75", "#7ec387"])),
                Ie[ItemType.CROWN_BLUE] = [],
                Ie[ItemType.CROWN_BLUE][SPRITE.DAY] = F(Fn(.2, !0, ["#0d1b1c", "#A5A244", "#D8DC74", "#C0BF55", "#2792C1", "#196599", "#59C0D8"])),
                Ie[ItemType.CROWN_BLUE][SPRITE.NIGHT] = F(Fn(.2, !0, ["#2b7c57", "#114933", "#1b6656", "#1a7961", "#19899e", "#16688b", "#4ea3c7"])),
                Ie[ItemType.CRAB_HELMET] = [],
                Ie[ItemType.CRAB_HELMET][SPRITE.DAY] = F(Zt(.24, !0, ["#000000", "#b03431", "#94312d", "#bd3c33", "#e45936"])),
                Ie[ItemType.CRAB_HELMET][SPRITE.NIGHT] = F(Zt(.24, !0, ["#000000", "#1b103e", "#190f3b", "#261a4e", "#34255d"])),
                Ie[ItemType.DRAGON_HELMET] = [],
                Ie[ItemType.DRAGON_HELMET][SPRITE.DAY] = F(pi(.32, 0, ["#0d1b1c", "#cae9eb", "#75bcae", "#ffffff", "#51736d", "#2b4d48", "#1b3a3a", "#80ccca", "#59ada7"])),
                Ie[ItemType.DRAGON_HELMET][SPRITE.NIGHT] = F(pi(.32, 0, ["#0d1b1c", "#70c1d6", "#49b2cf", "#87cad9", "#367c93", "#113743", "#0c2c36", "#51a2b8", "#3a8ea4"])),
                Ie[ItemType.DRAGON_SWORD] = [],
                Ie[ItemType.DRAGON_SWORD][SPRITE.DAY] = F(Se(3, on(.9, !0, ["#0d1b1c", "#284c4a", "#193533", "#c8efef", "#7eccbb"]))),
                Ie[ItemType.DRAGON_SWORD][SPRITE.NIGHT] = F(Se(3, on(.9, !0, ["#0d1b1c", "#18332e", "#112320", "#87d2e6", "#49b2cf"]))),
                Ie[SPRITE.DRAGON_SWORD_HALO] = [],
                Ie[SPRITE.DRAGON_SWORD_HALO][SPRITE.DAY] = F(Se(3, on(1, !0, [void 0, void 0, void 0, "#c8efef", "#c8efef"]))),
                Ie[SPRITE.DRAGON_SWORD_HALO][SPRITE.NIGHT] = F(Se(3, on(1, !0, [void 0, void 0, void 0, "#87d2e6", "#87d2e6"]))),
                Ie[SPRITE.QUEST_BUTTON] = [],
                Ie[SPRITE.QUEST_BUTTON].push(F(Hn(.3, 0, ["#0d1b1c", "#392C16", "#5E3E1A", "#704821", "#654320", "#eda80d"], 0))),
                Ie[SPRITE.QUEST_BUTTON].push(F(Hn(.3, 0, ["#0d1b1c", "#392C16", "#5E3E1A", "#704821", "#654320", "#eda80d"], 1))),
                Ie[SPRITE.QUEST_BUTTON].push(F(Hn(.3, 0, ["#0d1b1c", "#392C16", "#5E3E1A", "#704821", "#654320", "#d7990c"], 1))),
                Ie[SPRITE.MARKET_BUTTON] = [],
                Ie[SPRITE.MARKET_BUTTON].push(F(Kn(.7, ["#392C16", "#5E3E1A", "#85592c", "#eda80d"], 0))),
                Ie[SPRITE.MARKET_BUTTON].push(F(Kn(.7, ["#392C16", "#5E3E1A", "#85592c", "#eda80d"], 1))),
                Ie[SPRITE.MARKET_BUTTON].push(F(Kn(.7, ["#392C16", "#5E3E1A", "#85592c", "#eda80d"], 1))),
                Ie[ItemType.CURSED_SWORD] = [],
                Ie[ItemType.CURSED_SWORD][SPRITE.DAY] = F(Se(3, rn(.8, !0, ["#0d1b1c", "#b70404", "#ff0000", "#fc5e5e", "#2b0714", "#050c28"]))),
                Ie[ItemType.CURSED_SWORD][SPRITE.NIGHT] = F(Se(3, rn(.8, !0, ["#0d1b1c", "#b70404", "#ff0000", "#fc5e5e", "#2b0714", "#050c28"]))),
                Ie[SPRITE.INV_CURSED_SWORD] = Xe(1, [{
                    f: rn,
                    x: 0,
                    y: 0,
                    a: 1,
                    r: window.Math.PI / 5,
                    c: ["#0d1b1c", "#b70404", "#ff0000", "#fc5e5e", "#2b0714", "#050c28"]
                }], .55, ["#3ba578", "#4eb687", "#3da34d"], .5),
                Ie[SPRITE.CRAFT_CURSED_SWORD] = Ie[SPRITE.INV_CURSED_SWORD],
                Ie[SPRITE.CHEST_CURSED_SWORD] = Ie[SPRITE.INV_CURSED_SWORD],
                Ie[ItemType.STONE_SHOVEL] = [],
                Ie[ItemType.STONE_SHOVEL][SPRITE.DAY] = F(Se(3, Bn(.7, !0, ["#0d1b1c", "#6d5041", "#4f3d35", "#939393", "#5f6061", "#757575"]))),
                Ie[ItemType.STONE_SHOVEL][SPRITE.NIGHT] = F(Se(3, Bn(.7, !0, ["#0d1b1c", "#0d2e33", "#0b2326", "#485e66", "#1f343f", "#274352"]))),
                Ie[ItemType.GOLD_SHOVEL] = [],
                Ie[ItemType.GOLD_SHOVEL][SPRITE.DAY] = F(Se(3, Bn(.7, !0, ["#0d1b1c", "#493e26", "#382e19", "#c4bc51", "#b29c32", "#ada437"]))),
                Ie[ItemType.GOLD_SHOVEL][SPRITE.NIGHT] = F(Se(3, Bn(.7, !0, ["#0d1b1c", "#263947", "#182935", "#43aa82", "#29997c", "#32916c"]))),
                Ie[ItemType.DIAMOND_SHOVEL] = [],
                Ie[ItemType.DIAMOND_SHOVEL][SPRITE.DAY] = F(Se(3, Bn(.7, !0, ["#0d1b1c", "#262114", "#211108", "#63c9d6", "#29aaa1", "#42aab8"]))),
                Ie[ItemType.DIAMOND_SHOVEL][SPRITE.NIGHT] = F(Se(3, Bn(.7, !0, ["#0d1b1c", "#111316", "#0a0b0c", "#73dde5", "#3dc4c0", "#49bdc6"]))),
                Ie[ItemType.AMETHYST_SHOVEL] = [],
                Ie[ItemType.AMETHYST_SHOVEL][SPRITE.DAY] = F(Se(3, Bn(.7, !0, ["#0d1b1c", "#262114", "#211108", "#b864d6", "#8c29aa", "#9641b5"]))),
                Ie[ItemType.AMETHYST_SHOVEL][SPRITE.NIGHT] = F(Se(3, Bn(.7, !0, ["#0d1b1c", "#111316", "#0a0b0c", "#8359d3", "#764eb5", "#6f45c2"]))),
                Ie[ItemType.REIDITE_SHOVEL] = [],
                Ie[ItemType.REIDITE_SHOVEL][SPRITE.DAY] = F(Se(3, Bn(.7, !0, ["#0d1b1c", "#6c6464", "#524d4d", "#c24c3a", "#8f392a", "#a03e30"]))),
                Ie[ItemType.REIDITE_SHOVEL][SPRITE.NIGHT] = F(Se(3, Bn(.7, !0, ["#0d1b1c", "#41254b", "#311c42", "#973b29", "#6e1d4f", "#6a1d3e"]))),
                Ie[SPRITE.SHOP] = [],
                Ie[SPRITE.SHOP].push(F(dn(.7, ["#3b330d", "#b5a118", "#c8ac16"]))),
                Ie[SPRITE.SHOP].push(F(dn(.7, ["#524712", "#c7b11c", "#d9ba18"]))),
                Ie[SPRITE.SHOP].push(F(dn(.7, ["#2a2409", "#9f8e14", "#ad9511"]))),
                Ie[SPRITE.HURT_WOLF] = F(function(e, t) {
                    var i = window.document.createElement("canvas")
                      , n = i.getContext("2d");
                    return i.width = 188 * e,
                    i.height = 190 * e,
                    n.beginPath(),
                    n.lineCap = "round",
                    n.lineJoin = "round",
                    n.moveTo(33.00567626953125 * e, 95.44320678710938 * e),
                    n.bezierCurveTo(42.00567626953125 * e, 87.44320678710938 * e, 48.00567626953125 * e, 51.443206787109375 * e, 74.00567626953125 * e, 47.443206787109375 * e),
                    n.bezierCurveTo(100.00567626953125 * e, 42.443206787109375 * e, 118.00567626953125 * e, 49.443206787109375 * e, 131.00567626953125 * e, 55.443206787109375 * e),
                    n.bezierCurveTo(140.00567626953125 * e, 70.44320678710938 * e, 145.00567626953125 * e, 87.44320678710938 * e, 152.00567626953125 * e, 94.44320678710938 * e),
                    n.bezierCurveTo(149.00567626953125 * e, 99.44320678710938 * e, 147.00567626953125 * e, 98.44320678710938 * e, 141.00567626953125 * e, 101.44320678710938 * e),
                    n.bezierCurveTo(147.00567626953125 * e, 108.44320678710938 * e, 147.00567626953125 * e, 111.44320678710938 * e, 147.00567626953125 * e, 112.44320678710938 * e),
                    n.bezierCurveTo(143.00567626953125 * e, 112.44320678710938 * e, 141.00567626953125 * e, 112.44320678710938 * e, 137.00567626953125 * e, 111.44320678710938 * e),
                    n.bezierCurveTo(138.00567626953125 * e, 117.44320678710938 * e, 138.00567626953125 * e, 120.44320678710938 * e, 138.00567626953125 * e, 124.44320678710938 * e),
                    n.bezierCurveTo(125.00567626953125 * e, 107.44320678710938 * e, 121.00567626953125 * e, 124.44320678710938 * e, 110.00567626953125 * e, 141.44320678710938 * e),
                    n.bezierCurveTo(102.00567626953125 * e, 158.44320678710938 * e, 89.00567626953125 * e, 158.44320678710938 * e, 80.00567626953125 * e, 144.44320678710938 * e),
                    n.bezierCurveTo(61.00567626953125 * e, 111.44320678710938 * e, 56.00567626953125 * e, 117.44320678710938 * e, 48.00567626953125 * e, 120.44320678710938 * e),
                    n.bezierCurveTo(46.00567626953125 * e, 118.44320678710938 * e, 47.00567626953125 * e, 112.44320678710938 * e, 48.00567626953125 * e, 107.44320678710938 * e),
                    n.bezierCurveTo(43.00567626953125 * e, 111.44320678710938 * e, 40.00567626953125 * e, 111.44320678710938 * e, 37.00567626953125 * e, 110.44320678710938 * e),
                    n.bezierCurveTo(39.50567626953125 * e, 104.94320678710938 * e, 39.50567626953125 * e, 104.94320678710938 * e, 42.00567626953125 * e, 99.44320678710938 * e),
                    n.bezierCurveTo(33.00567626953125 * e, 99.44320678710938 * e, 33.00567626953125 * e, 98.44320678710938 * e, 33.00567626953125 * e, 96.44320678710938 * e),
                    n.closePath(),
                    he(n, t[0], t[0], 4 * e),
                    n.beginPath(),
                    n.lineCap = "round",
                    n.lineJoin = "round",
                    n.moveTo(51.00567626953125 * e, 72.53409576416016 * e),
                    n.bezierCurveTo(48.00567626953125 * e, 56.534095764160156 * e, 48.00567626953125 * e, 49.534095764160156 * e, 54.00567626953125 * e, 35.534095764160156 * e),
                    n.bezierCurveTo(58.00567626953125 * e, 26.534095764160156 * e, 65.00567626953125 * e, 27.534095764160156 * e, 73.00567626953125 * e, 40.534095764160156 * e),
                    n.bezierCurveTo(81.00567626953125 * e, 49.534095764160156 * e, 82.00567626953125 * e, 50.534095764160156 * e, 83.00567626953125 * e, 51.534095764160156 * e),
                    n.bezierCurveTo(77.00567626953125 * e, 71.53409576416016 * e, 64.00567626953125 * e, 75.53409576416016 * e, 51.00567626953125 * e, 72.53409576416016 * e),
                    n.closePath(),
                    he(n, t[0], t[0], 2 * e),
                    n.beginPath(),
                    n.lineCap = "round",
                    n.lineJoin = "round",
                    n.moveTo(105.00567626953125 * e, 50.53410339355469 * e),
                    n.bezierCurveTo(112.00567626953125 * e, 48.53410339355469 * e, 125.00567626953125 * e, 21.534103393554688 * e, 132.00567626953125 * e, 33.53410339355469 * e),
                    n.bezierCurveTo(138.00567626953125 * e, 42.53410339355469 * e, 140.00567626953125 * e, 64.53410339355469 * e, 136.00567626953125 * e, 75.53410339355469 * e),
                    n.closePath(),
                    he(n, t[0], t[0], 2 * e),
                    i
                }(1.1, ["#BB0000"])),
                Ie[SPRITE.HURT_SPIDER] = F(Se(window.Math.PI, function(e, t) {
                    var i = window.document.createElement("canvas")
                      , n = i.getContext("2d");
                    return i.width = 238 * e,
                    i.height = 230 * e,
                    n.translate(-93 * e, -110 * e),
                    Re(n, 213.5 * e, 256.75 * e, 75 * e),
                    he(n, t),
                    Re(n, 213.5 * e, 175.75 * e, 25 * e),
                    he(n, t),
                    n.beginPath(),
                    n.lineCap = "round",
                    n.lineJoin = "round",
                    n.moveTo(156.5 * e, 137.75 * e),
                    n.bezierCurveTo(170.5 * e, 173.75 * e, 195.5 * e, 177.75 * e, 209.5 * e, 177.75 * e),
                    n.lineWidth = 17 * e,
                    n.strokeStyle = t,
                    n.stroke(),
                    n.beginPath(),
                    n.lineCap = "round",
                    n.lineJoin = "round",
                    n.moveTo(217.5 * e, 178.75 * e),
                    n.bezierCurveTo(251.5 * e, 177.75 * e, 263.5 * e, 153.75 * e, 270.5 * e, 140.75 * e),
                    n.lineWidth = 17 * e,
                    n.strokeStyle = t,
                    n.stroke(),
                    n.beginPath(),
                    n.lineCap = "round",
                    n.lineJoin = "round",
                    n.moveTo(130.5 * e, 124.75 * e),
                    n.bezierCurveTo(153.5 * e, 185.75 * e, 198.5 * e, 185.75 * e, 213.5 * e, 185.75 * e),
                    n.lineWidth = 17 * e,
                    n.strokeStyle = t,
                    n.stroke(),
                    n.beginPath(),
                    n.lineCap = "round",
                    n.lineJoin = "round",
                    n.moveTo(214.5 * e, 183.75 * e),
                    n.bezierCurveTo(265.5 * e, 192.75 * e, 293.5 * e, 141.75 * e, 297.5 * e, 124.75 * e),
                    n.lineWidth = 17 * e,
                    n.strokeStyle = t,
                    n.stroke(),
                    n.beginPath(),
                    n.lineCap = "round",
                    n.lineJoin = "round",
                    n.moveTo(107.5 * e, 213.75 * e),
                    n.bezierCurveTo(151.5 * e, 190.75 * e, 198.5 * e, 184.75 * e, 210.5 * e, 184.75 * e),
                    n.lineWidth = 17 * e,
                    n.strokeStyle = t,
                    n.stroke(),
                    n.beginPath(),
                    n.lineCap = "round",
                    n.lineJoin = "round",
                    n.moveTo(212.5 * e, 187.75 * e),
                    n.bezierCurveTo(258.5 * e, 182.75 * e, 286.5 * e, 194.75 * e, 314.5 * e, 206.75 * e),
                    n.lineWidth = 17 * e,
                    n.strokeStyle = t,
                    n.stroke(),
                    n.beginPath(),
                    n.lineCap = "round",
                    n.lineJoin = "round",
                    n.moveTo(102.5 * e, 258.75 * e),
                    n.bezierCurveTo(142.5 * e, 200.75 * e, 193.5 * e, 194.75 * e, 211.5 * e, 185.75 * e),
                    n.lineWidth = 17 * e,
                    n.strokeStyle = t,
                    n.stroke(),
                    n.beginPath(),
                    n.lineCap = "round",
                    n.lineJoin = "round",
                    n.moveTo(214.5 * e, 192.75 * e),
                    n.bezierCurveTo(276.5 * e, 194.75 * e, 306.5 * e, 233.75 * e, 316.5 * e, 246.75 * e),
                    n.lineWidth = 17 * e,
                    n.strokeStyle = t,
                    n.stroke(),
                    n.beginPath(),
                    n.lineCap = "round",
                    n.lineJoin = "round",
                    n.moveTo(219.5 * e, 158.75 * e),
                    n.bezierCurveTo(226.5 * e, 159.75 * e, 227.5 * e, 147.75 * e, 219.5 * e, 145.75 * e),
                    n.closePath(),
                    n.lineWidth = 10 * e,
                    n.strokeStyle = t,
                    n.stroke(),
                    n.beginPath(),
                    n.lineCap = "round",
                    n.lineJoin = "round",
                    n.moveTo(210.5 * e, 160.75 * e),
                    n.bezierCurveTo(203.5 * e, 159.75 * e, 199.5 * e, 146.75 * e, 210.5 * e, 145.75 * e),
                    n.closePath(),
                    n.lineWidth = 10 * e,
                    n.strokeStyle = t,
                    n.stroke(),
                    i
                }(.9, "#BB0000"))),
                Ie[ItemType.EXPLORER_HAT] = [],
                Ie[ItemType.EXPLORER_HAT][SPRITE.DAY] = F(Hi(.55, !0, ["#c9a65f", "#ae863f", "#655530", "#4a391c", "#ebdd79", "#4a421c"])),
                Ie[ItemType.EXPLORER_HAT][SPRITE.NIGHT] = F(Hi(.55, !0, ["#15514f", "#0f3f3d", "#123335", "#0d2d2b", "#2b6664", "#070d16"])),
                Ie[ItemType.WOOD_HELMET] = [],
                Ie[ItemType.WOOD_HELMET][SPRITE.DAY] = F(Ki(.55, !0, ["#252525", "#73583e", "#573f29", "#7d6144"])),
                Ie[ItemType.WOOD_HELMET][SPRITE.NIGHT] = F(Ki(.55, !0, ["#0d3b39", "#144642", "#0b3230", "#154f4b"])),
                Ie[ItemType.STONE_HELMET] = [],
                Ie[ItemType.STONE_HELMET][SPRITE.DAY] = F(Gi(.6, !0, ["#252525", "#808080", "#4a4a4a", "#9e9c8b", "#615c53", "#686969", "#8a8776", "#555555", "#747474", "#969696", "#454545"])),
                Ie[ItemType.STONE_HELMET][SPRITE.NIGHT] = F(Gi(.6, !0, ["#030d14", "#1c4a4a", "#102d2d", "#255756", "#163d3c", "#194544", "#1f5252", "#184141", "#1c4a4a", "#255756", "#163a3a"])),
                Ie[ItemType.GOLD_HELMET] = [],
                Ie[ItemType.GOLD_HELMET][SPRITE.DAY] = F(Wi(.58, 0, ["#dbce71", "#b29c32", "#c4bc51"])),
                Ie[ItemType.GOLD_HELMET][SPRITE.NIGHT] = F(Wi(.58, 0, ["#2b7c57", "#15543c", "#1a7961"])),
                Ie[ItemType.DIAMOND_HELMET] = [],
                Ie[ItemType.DIAMOND_HELMET][SPRITE.DAY] = F(Fi(.69, 0, ["#717171", "#485252", "#555555", "#65c7cd", "#4aadad", "#358d8b", "#c1e6ea", "#a6dce4"])),
                Ie[ItemType.DIAMOND_HELMET][SPRITE.NIGHT] = F(Fi(.69, 0, ["#183f3f", "#092121", "#123335", "#2b9390", "#277a74", "#1f665f", "#83ddd4", "#59c9c0"])),
                Ie[SPRITE.FIR] = [],
                Ie[SPRITE.FIR][SPRITE.DAY] = [],
                Ie[SPRITE.FIR][SPRITE.NIGHT] = [],
                Ie[SPRITE.FIR][SPRITE.DAY].push(F(_i(1.3, ["#0a2d18", "#124c34", "#227248", "#ccedd9", "#2d7a55", "#3c9660", "#afddc1", "#bbefd0", "#0a2d18", "#e4efe8"]))),
                Ie[SPRITE.FIR][SPRITE.DAY].push(F(wi(1.5, ["#191919", "#134d35", "#247349", "#afddc1", "#bbefd0", "#e4efe8"]))),
                Ie[SPRITE.FIR][SPRITE.DAY].push(F(Pi(1.5, ["#191919", "#134d35", "#247349", "#cde7d6", "#122d1c", "#e3eee7"]))),
                Ie[SPRITE.FIR][SPRITE.NIGHT].push(F(_i(1.3, ["#000000", "#0e3638", "#174a51", "#328587", "#174a51", "#1d5559", "#328587", "#48a8aa", "#0a2728", "#56afac"]))),
                Ie[SPRITE.FIR][SPRITE.NIGHT].push(F(wi(1.5, ["#000000", "#0e3638", "#174a51", "#328587", "#48a8aa", "#56afac"]))),
                Ie[SPRITE.FIR][SPRITE.NIGHT].push(F(Pi(1.5, ["#000000", "#0e3638", "#174a51", "#328587", "#0a2728", "#56afac"]))),
                Ie[SPRITE.DRAGON] = [],
                Ie[SPRITE.DRAGON][SPRITE.DAY] = F(Bi(1, ["#292b2b", "#57aba6", "#80ccca", "#c42333", "#a4dad9", "#3e8294", "#ffffff", "#57aba6", "#ffffff"])),
                Ie[SPRITE.DRAGON][SPRITE.NIGHT] = F(Bi(1, ["#050505", "#1d3a38", "#0b514a", "#200333", "#327570", "#1d3a38", "#ffffff", "#0b514a", "#63afa9"])),
                Ie[SPRITE.WING_LEFT] = [],
                Ie[SPRITE.WING_LEFT][SPRITE.DAY] = F(Mi(1, ["#292b2b", "#a4dad9", "#1f3f3f", "#c1233b"])),
                Ie[SPRITE.WING_LEFT][SPRITE.NIGHT] = F(Mi(1, ["#050505", "#327570", "#021724", "#200333"])),
                Ie[SPRITE.WING_RIGHT] = [],
                Ie[SPRITE.WING_RIGHT][SPRITE.DAY] = F(Yi(1, ["#292b2b", "#a4dad9", "#1f3f3f", "#c1233b"])),
                Ie[SPRITE.WING_RIGHT][SPRITE.NIGHT] = F(Yi(1, ["#050505", "#327570", "#021724", "#200333"])),
                Ie[SPRITE.DECORATION] = [],
                Ie[SPRITE.DECORATION][SPRITE.DAY] = [],
                Ie[SPRITE.DECORATION][SPRITE.NIGHT] = [],
                Ie[SPRITE.DECORATION][SPRITE.DAY] = [P.DECORATION_0D, P.DECORATION_1D, P.DECORATION_2D, P.DECORATION_3D, P.DECORATION_4D, P.DECORATION_5D, P.DECORATION_6D, P.DECORATION_7D, P.DECORATION_8D, P.DECORATION_9D, P.DECORATION_10D, P.DECORATION_11D, P.DECORATION_12D, P.DECORATION_13D, P.DECORATION_14D, P.DECORATION_15D, P.DECORATION_16D, P.DECORATION_17D, P.DECORATION_18D, P.DECORATION_19D, P.DECORATION_20D, P.DECORATION_21D, P.DECORATION_22D, P.DECORATION_23D, P.DECORATION_24D, P.DECORATION_25D, P.DECORATION_26D, P.DECORATION_27D, P.DECORATION_28D, P.DECORATION_29D, P.DECORATION_30D, P.DECORATION_31D, P.DECORATION_32D, P.DECORATION_33D, P.DECORATION_34D, P.DECORATION_35D, P.DECORATION_36D, P.DECORATION_37D, P.DECORATION_38D, P.DECORATION_39D, P.DECORATION_40D, P.DECORATION_41D, P.DECORATION_42D, P.DECORATION_43D, P.DECORATION_44D, P.DECORATION_45D, P.DECORATION_46D, P.DECORATION_47D, P.DECORATION_48D, P.DECORATION_49D, P.DECORATION_50D, P.DECORATION_51D, P.DECORATION_52D, P.DECORATION_53D, P.DECORATION_54D, P.DECORATION_55D],
                Ie[SPRITE.DECORATION][SPRITE.NIGHT] = [P.DECORATION_0N, P.DECORATION_1N, P.DECORATION_2N, P.DECORATION_3N, P.DECORATION_4N, P.DECORATION_5N, P.DECORATION_6N, P.DECORATION_7N, P.DECORATION_8N, P.DECORATION_9N, P.DECORATION_10N, P.DECORATION_11N, P.DECORATION_12N, P.DECORATION_13N, P.DECORATION_14N, P.DECORATION_15N, P.DECORATION_16N, P.DECORATION_17N, P.DECORATION_18N, P.DECORATION_19N, P.DECORATION_20N, P.DECORATION_21N, P.DECORATION_22N, P.DECORATION_23N, P.DECORATION_24N, P.DECORATION_25N, P.DECORATION_26N, P.DECORATION_27N, P.DECORATION_28N, P.DECORATION_29N, P.DECORATION_30N, P.DECORATION_31N, P.DECORATION_32N, P.DECORATION_33N, P.DECORATION_34N, P.DECORATION_35N, P.DECORATION_36N, P.DECORATION_37N, P.DECORATION_38N, P.DECORATION_39N, P.DECORATION_40N, P.DECORATION_41N, P.DECORATION_42N, P.DECORATION_43N, P.DECORATION_44N, P.DECORATION_45N, P.DECORATION_46N, P.DECORATION_47N, P.DECORATION_48N, P.DECORATION_49N, P.DECORATION_50N, P.DECORATION_51N, P.DECORATION_52N, P.DECORATION_53N, P.DECORATION_54N, P.DECORATION_55N],
                Ie[SPRITE.CAVE_STONES] = [],
                Ie[SPRITE.CAVE_STONES][SPRITE.DAY] = [],
                Ie[SPRITE.CAVE_STONES][SPRITE.NIGHT] = [],
                Ie[SPRITE.CAVE_STONES][SPRITE.DAY].push(F(lt(1.1, !1, ["#252B28", "#747471", "#83827e"], 0))),
                Ie[SPRITE.CAVE_STONES][SPRITE.DAY].push(F(lt(.9, !1, ["#252B28", "#747471", "#83827e"], 1))),
                Ie[SPRITE.CAVE_STONES][SPRITE.DAY].push(F(lt(1, !1, ["#252B28", "#747471", "#83827e"], 2))),
                Ie[SPRITE.CAVE_STONES][SPRITE.DAY].push(F(lt(.9, !1, ["#252B28", "#747471", "#83827e"], 2))),
                Ie[SPRITE.CAVE_STONES][SPRITE.NIGHT].push(F(lt(1.1, !1, ["#030d14", "#123335", "#183f3f"], 0))),
                Ie[SPRITE.CAVE_STONES][SPRITE.NIGHT].push(F(lt(.9, !1, ["#030d14", "#123335", "#183f3f"], 1))),
                Ie[SPRITE.CAVE_STONES][SPRITE.NIGHT].push(F(lt(1, !1, ["#030d14", "#123335", "#183f3f"], 2))),
                Ie[SPRITE.CAVE_STONES][SPRITE.NIGHT].push(F(lt(.9, !1, ["#030d14", "#123335", "#183f3f"], 2))),
                Ie[SPRITE.SHADOW_CAVE_STONES] = [],
                Ie[SPRITE.SHADOW_CAVE_STONES][SPRITE.DAY] = [],
                Ie[SPRITE.SHADOW_CAVE_STONES][SPRITE.NIGHT] = [],
                Ie[SPRITE.SHADOW_CAVE_STONES][SPRITE.DAY].push(F(lt(1.1, !0, ["#252B28", "#58645F", "#75827D"], 2))),
                Ie[SPRITE.SHADOW_CAVE_STONES][SPRITE.DAY].push(F(lt(.9, !0, ["#252B28", "#58645F", "#75827D"], 2))),
                Ie[SPRITE.SHADOW_CAVE_STONES][SPRITE.DAY].push(F(lt(1, !0, ["#252B28", "#58645F", "#75827D"], 2))),
                Ie[SPRITE.SHADOW_CAVE_STONES][SPRITE.DAY].push(F(lt(.9, !0, ["#252B28", "#58645F", "#75827D"], 2))),
                Ie[SPRITE.SHADOW_CAVE_STONES][SPRITE.NIGHT].push(F(lt(1.1, !0, ["#030d14", "#123335", "#183f3f"], 2))),
                Ie[SPRITE.SHADOW_CAVE_STONES][SPRITE.NIGHT].push(F(lt(.9, !0, ["#030d14", "#123335", "#183f3f"], 2))),
                Ie[SPRITE.SHADOW_CAVE_STONES][SPRITE.NIGHT].push(F(lt(1, !0, ["#030d14", "#123335", "#183f3f"], 2))),
                Ie[SPRITE.SHADOW_CAVE_STONES][SPRITE.NIGHT].push(F(lt(.9, !0, ["#030d14", "#123335", "#183f3f"], 2))),
                Ie[SPRITE.GOLD_WINTER] = [],
                Ie[SPRITE.GOLD_WINTER][SPRITE.DAY] = [],
                Ie[SPRITE.GOLD_WINTER][SPRITE.NIGHT] = [],
                Ie[SPRITE.GOLD_WINTER][SPRITE.DAY].push(F(At(1.5, 0, ["#2b280a", "#ddcf8a", "#f4efc6"]))),
                Ie[SPRITE.GOLD_WINTER][SPRITE.DAY].push(F(At(1.3, 0, ["#2b280a", "#ddcf8a", "#f4efc6"]))),
                Ie[SPRITE.GOLD_WINTER][SPRITE.DAY].push(F(At(1.1, 0, ["#2b280a", "#ddcf8a", "#f4efc6"]))),
                Ie[SPRITE.GOLD_WINTER][SPRITE.NIGHT].push(F(At(1.5, 0, ["#0a2728", "#3e8989", "#50a09c"]))),
                Ie[SPRITE.GOLD_WINTER][SPRITE.NIGHT].push(F(At(1.3, 0, ["#0a2728", "#3e8989", "#50a09c"]))),
                Ie[SPRITE.GOLD_WINTER][SPRITE.NIGHT].push(F(At(1.1, 0, ["#0a2728", "#3e8989", "#50a09c"]))),
                Ie[SPRITE.DIAMOND_WINTER] = [],
                Ie[SPRITE.DIAMOND_WINTER][SPRITE.DAY] = [],
                Ie[SPRITE.DIAMOND_WINTER][SPRITE.NIGHT] = [],
                Ie[SPRITE.DIAMOND_WINTER][SPRITE.DAY].push(F(bt(1.1, 0, ["#123d38", "#70e0dd", "#95efea"]))),
                Ie[SPRITE.DIAMOND_WINTER][SPRITE.DAY].push(F(bt(.9, 0, ["#123d38", "#70e0dd", "#95efea"]))),
                Ie[SPRITE.DIAMOND_WINTER][SPRITE.DAY].push(F(bt(.7, 0, ["#123d38", "#70e0dd", "#95efea"]))),
                Ie[SPRITE.DIAMOND_WINTER][SPRITE.NIGHT].push(F(bt(1.1, 0, ["#123d38", "#47b2ac", "#5cccc4"]))),
                Ie[SPRITE.DIAMOND_WINTER][SPRITE.NIGHT].push(F(bt(.9, 0, ["#123d38", "#47b2ac", "#5cccc4"]))),
                Ie[SPRITE.DIAMOND_WINTER][SPRITE.NIGHT].push(F(bt(.7, 0, ["#123d38", "#47b2ac", "#5cccc4"]))),
                Ie[ItemType.AMETHYST] = [],
                Ie[ItemType.AMETHYST][SPRITE.DAY] = [],
                Ie[ItemType.AMETHYST][SPRITE.NIGHT] = [],
                Ie[ItemType.AMETHYST][SPRITE.DAY].push(F(fi(1.7, !0, ["#1d051e", "#c27add", "#cd98e5"]))),
                Ie[ItemType.AMETHYST][SPRITE.DAY].push(F(fi(1.5, !0, ["#1d051e", "#c27add", "#cd98e5"]))),
                Ie[ItemType.AMETHYST][SPRITE.DAY].push(F(fi(1.3, !0, ["#1d051e", "#c27add", "#cd98e5"]))),
                Ie[ItemType.AMETHYST][SPRITE.NIGHT].push(F(fi(1.7, !0, ["#1d051e", "#41aaa0", "#5cccc4"]))),
                Ie[ItemType.AMETHYST][SPRITE.NIGHT].push(F(fi(1.5, !0, ["#1d051e", "#41aaa0", "#5cccc4"]))),
                Ie[ItemType.AMETHYST][SPRITE.NIGHT].push(F(fi(1.3, !0, ["#1d051e", "#41aaa0", "#5cccc4"]))),
                Ie[SPRITE.WATERBLOCK] = [],
                Ie[SPRITE.WATERBLOCK][SPRITE.DAY] = [],
                Ie[SPRITE.WATERBLOCK][SPRITE.NIGHT] = [],
                Ie[SPRITE.WATERBLOCK][SPRITE.DAY].push(F(gi(1, ["#2d53c4"]))),
                Ie[SPRITE.WATERBLOCK][SPRITE.NIGHT].push(F(gi(1, ["#2d53c4"]))),
                Ie[SPRITE.ISLAND_BLOCK] = [],
                Ie[SPRITE.ISLAND_BLOCK][SPRITE.DAY] = [],
                Ie[SPRITE.ISLAND_BLOCK][SPRITE.NIGHT] = [],
                Ie[SPRITE.ISLAND_BLOCK][SPRITE.DAY].push(F(gi(1, ["#c4912d"]))),
                Ie[SPRITE.ISLAND_BLOCK][SPRITE.NIGHT].push(F(gi(1, ["#c4912d"]))),
                Ie[SPRITE.CAVE_STEP] = [],
                Ie[SPRITE.CAVE_STEP][SPRITE.DAY] = F(ki(1, ["#414040"])),
                Ie[SPRITE.CAVE_STEP][SPRITE.NIGHT] = F(ki(1, ["#153635"])),
                Ie[SPRITE.FOX] = [],
                Ie[SPRITE.FOX][SPRITE.DAY] = F(Ci(.9, ["#1d051e", "#ffffff", "#c41c50", "#2c2e2d", "#c63450", "#f7e7f0"])),
                Ie[SPRITE.FOX][SPRITE.NIGHT] = F(Ci(.9, ["#123d38", "#1a847f", "#200333", "#131919", "#01333a", "#b6f2db"])),
                Ie[SPRITE.BEAR] = [],
                Ie[SPRITE.BEAR][SPRITE.DAY] = F(Li(.9, ["#1d051e", "#ffffff", "#c41c50", "#c63450", "#ffffff", "#f7e7f0", "#2b2d2d"])),
                Ie[SPRITE.BEAR][SPRITE.NIGHT] = F(Li(.9, ["#123d38", "#1a847f", "#200333", "#01333a", "#ffffff", "#b6f2db", "#2b2d2d"])),
                Ie[SPRITE.MINIMAP] = [],
                Ie[SPRITE.MINIMAP_CTX] = [],
                Ie[SPRITE.BIGMAP] = [],
                Ie[SPRITE.BIGMAP_CTX] = [];
                for (e = 0; e < 2; e++)
                    Ie[SPRITE.MINIMAP][e] = window.document.createElement("canvas"),
                    Ie[SPRITE.MINIMAP][e].width = 193,
                    Ie[SPRITE.MINIMAP][e].height = 193,
                    Ie[SPRITE.MINIMAP_CTX][e] = Ie[SPRITE.MINIMAP][e].getContext("2d"),
                    Ie[SPRITE.BIGMAP][e] = window.document.createElement("canvas"),
                    Ie[SPRITE.BIGMAP][e].width = 600,
                    Ie[SPRITE.BIGMAP][e].height = 600,
                    Ie[SPRITE.BIGMAP_CTX][e] = Ie[SPRITE.BIGMAP][e].getContext("2d");
                Ie[SPRITE.SNOW_STEP] = [],
                Ie[SPRITE.SNOW_STEP][SPRITE.DAY] = F(ki(1, ["#c8e0de"])),
                Ie[SPRITE.SNOW_STEP][SPRITE.NIGHT] = F(ki(1, ["#147071"])),
                Ie[SPRITE.LAVA_STEP] = [],
                Ie[SPRITE.LAVA_STEP][SPRITE.DAY] = F(ki(1, ["#231912"])),
                Ie[SPRITE.LAVA_STEP][SPRITE.NIGHT] = F(ki(1, ["#021719"])),
                Ie[SPRITE.HURT_TREASURE_CHEST] = F(function(e, t) {
                    var i = window.document.createElement("canvas")
                      , n = i.getContext("2d");
                    return i.width = 253 * e,
                    i.height = 192 * e,
                    n.save(),
                    n.translate(37 * e, 94 * e),
                    ye(n, -7 * e, -20 * e, 14 * e, 37 * e, 20 * e),
                    n.restore(),
                    he(n, t[0]),
                    n.save(),
                    n.translate(131 * e, 94 * e),
                    ye(n, -84 * e, -67 * e, 168 * e, 134 * e, 20 * e),
                    n.restore(),
                    he(n, t[0], t[0], 13 * e),
                    n.save(),
                    n.translate(223 * e, 94.5 * e),
                    ye(n, -5 * e, -18.5 * e, 10 * e, 37 * e, 20 * e),
                    n.restore(),
                    he(n, t[0]),
                    n.save(),
                    n.translate(128.5 * e, 170.5 * e),
                    ye(n, -22.5 * e, -6.5 * e, 45 * e, 13 * e, 20 * e),
                    n.restore(),
                    he(n, t[0]),
                    i
                }(.5, ["#BB0000"])),
                Ie[SPRITE.HURT_FOX] = F(function(e, t) {
                    var i = window.document.createElement("canvas")
                      , n = i.getContext("2d");
                    return i.width = 161 * e,
                    i.height = 190 * e,
                    n.beginPath(),
                    n.lineCap = "round",
                    n.lineJoin = "round",
                    n.moveTo(9 * e, 93 * e),
                    n.bezierCurveTo(17 * e, 95 * e, 19 * e, 95 * e, 21 * e, 95 * e),
                    n.bezierCurveTo(9 * e, 83 * e, 17 * e, 93 * e, 4 * e, 76 * e),
                    n.bezierCurveTo(11 * e, 75 * e, 11 * e, 75 * e, 18 * e, 75 * e),
                    n.bezierCurveTo(13 * e, 67 * e, 13 * e, 67 * e, 7 * e, 59 * e),
                    n.bezierCurveTo(14 * e, 59 * e, 14 * e, 59 * e, 21 * e, 59 * e),
                    n.bezierCurveTo(46 * e, 35 * e, 35 * e, 45 * e, 49 * e, 31 * e),
                    n.bezierCurveTo(53 * e, 24 * e, 51 * e, 21 * e, 51 * e, 16 * e),
                    n.bezierCurveTo(63 * e, 23 * e, 63 * e, 24 * e, 69 * e, 29 * e),
                    n.bezierCurveTo(76 * e, 7 * e, 75 * e, 11 * e, 76 * e, 6 * e),
                    n.bezierCurveTo(81 * e, 12 * e, 84 * e, 18 * e, 89 * e, 27 * e),
                    n.bezierCurveTo(95 * e, 25 * e, 100 * e, 16 * e, 105 * e, 14 * e),
                    n.bezierCurveTo(103 * e, 25 * e, 111 * e, 33 * e, 110 * e, 34 * e),
                    n.bezierCurveTo(123 * e, 48 * e, 123 * e, 48 * e, 136 * e, 62 * e),
                    n.bezierCurveTo(142 * e, 60 * e, 147 * e, 59 * e, 155 * e, 58 * e),
                    n.bezierCurveTo(147 * e, 65 * e, 147 * e, 65 * e, 139 * e, 73 * e),
                    n.bezierCurveTo(145 * e, 73 * e, 145 * e, 73 * e, 151 * e, 73 * e),
                    n.bezierCurveTo(145 * e, 80 * e, 145 * e, 80 * e, 138 * e, 87 * e),
                    n.bezierCurveTo(144 * e, 88 * e, 144 * e, 88 * e, 150 * e, 89 * e),
                    n.bezierCurveTo(125 * e, 103 * e, 125 * e, 125 * e, 113 * e, 141 * e),
                    n.bezierCurveTo(92 * e, 178 * e, 85 * e, 177 * e, 76 * e, 178 * e),
                    n.bezierCurveTo(64 * e, 179 * e, 51 * e, 164 * e, 35 * e, 131 * e),
                    n.bezierCurveTo(18 * e, 95 * e, 13 * e, 99 * e, 8 * e, 93 * e),
                    n.closePath(),
                    he(n, t, t, 4 * e),
                    n.beginPath(),
                    n.lineCap = "round",
                    n.lineJoin = "round",
                    n.moveTo(25 * e, 63 * e),
                    n.bezierCurveTo(16 * e, 58 * e, 17 * e, 51 * e, 17 * e, 33 * e),
                    n.bezierCurveTo(19 * e, 12 * e, 21 * e, 12 * e, 32 * e, 17 * e),
                    n.bezierCurveTo(63 * e, 31 * e, 66 * e, 45 * e, 66 * e, 54 * e),
                    he(n, t, t, 4 * e),
                    n.beginPath(),
                    n.lineCap = "round",
                    n.lineJoin = "round",
                    n.moveTo(91 * e, 53 * e),
                    n.bezierCurveTo(91 * e, 40 * e, 98 * e, 33 * e, 121 * e, 20 * e),
                    n.bezierCurveTo(137 * e, 12 * e, 137 * e, 16 * e, 139 * e, 27 * e),
                    n.bezierCurveTo(141 * e, 49 * e, 140 * e, 57 * e, 134 * e, 64 * e),
                    he(n, t, t, 4 * e),
                    i
                }(.9, "#BB0000")),
                Ie[SPRITE.HURT_BEAR] = F(function(e, t) {
                    var i = window.document.createElement("canvas")
                      , n = i.getContext("2d");
                    return i.width = 147 * e,
                    i.height = 172 * e,
                    n.beginPath(),
                    n.lineCap = "round",
                    n.lineJoin = "round",
                    n.moveTo(8 * e, 50 * e),
                    n.bezierCurveTo(15 * e, 16 * e, 49 * e, 6 * e, 67 * e, 6 * e),
                    n.bezierCurveTo(121 * e, 3 * e, 128 * e, 32 * e, 135 * e, 48 * e),
                    n.bezierCurveTo(146 * e, 96 * e, 124 * e, 131 * e, 96 * e, 135 * e),
                    n.bezierCurveTo(96 * e, 158 * e, 79 * e, 156 * e, 75 * e, 156 * e),
                    n.bezierCurveTo(50 * e, 154 * e, 53 * e, 150 * e, 52 * e, 135 * e),
                    n.bezierCurveTo(2 * e, 127 * e, 3 * e, 87 * e, 8 * e, 50 * e),
                    n.closePath(),
                    he(n, t, t, 4 * e),
                    n.beginPath(),
                    n.lineCap = "round",
                    n.lineJoin = "round",
                    n.moveTo(14 * e, 57 * e),
                    n.bezierCurveTo(2 * e, 50 * e, 5 * e, 22 * e, 24 * e, 22 * e),
                    n.bezierCurveTo(41 * e, 21 * e, 54 * e, 32 * e, 55 * e, 48 * e),
                    he(n, t, t, 4 * e),
                    n.beginPath(),
                    n.lineCap = "round",
                    n.lineJoin = "round",
                    n.moveTo(93 * e, 47 * e),
                    n.bezierCurveTo(94 * e, 24 * e, 116 * e, 21 * e, 120 * e, 20 * e),
                    n.bezierCurveTo(144 * e, 17 * e, 146 * e, 52 * e, 133 * e, 58 * e),
                    he(n, t, t, 4 * e),
                    i
                }(.9, "#BB0000")),
                Ie[SPRITE.HURT_DRAGON] = F(function(e, t) {
                    var i = window.document.createElement("canvas")
                      , n = i.getContext("2d");
                    return i.width = 271 * e,
                    i.height = 366 * e,
                    n.beginPath(),
                    n.lineCap = "round",
                    n.lineJoin = "round",
                    n.moveTo(133 * e, 99 * e),
                    n.bezierCurveTo(186 * e, 123 * e, 199 * e, 152 * e, 209 * e, 169 * e),
                    n.bezierCurveTo(228 * e, 205 * e, 224 * e, 245 * e, 190 * e, 276 * e),
                    n.bezierCurveTo(161 * e, 296 * e, 99 * e, 292 * e, 79 * e, 274 * e),
                    n.bezierCurveTo(49 * e, 253 * e, 47 * e, 214 * e, 50 * e, 197 * e),
                    n.bezierCurveTo(61 * e, 143 * e, 102 * e, 113 * e, 131 * e, 99 * e),
                    n.closePath(),
                    he(n, t[0]),
                    n.beginPath(),
                    n.lineCap = "round",
                    n.lineJoin = "round",
                    n.moveTo(73 * e, 270 * e),
                    n.bezierCurveTo(79 * e, 280 * e, 77 * e, 280 * e, 78 * e, 287 * e),
                    n.bezierCurveTo(78 * e, 290 * e, 83 * e, 291 * e, 82 * e, 299 * e),
                    n.bezierCurveTo(81 * e, 301 * e, 87 * e, 301 * e, 92 * e, 314 * e),
                    n.bezierCurveTo(94 * e, 319 * e, 100 * e, 321 * e, 107 * e, 320 * e),
                    n.bezierCurveTo(111 * e, 323 * e, 114 * e, 324 * e, 119 * e, 320 * e),
                    n.bezierCurveTo(137 * e, 321 * e, 146 * e, 323 * e, 139 * e, 320 * e),
                    n.bezierCurveTo(141 * e, 324 * e, 150 * e, 324 * e, 153 * e, 320 * e),
                    n.bezierCurveTo(168 * e, 319 * e, 171 * e, 316 * e, 173 * e, 307 * e),
                    n.bezierCurveTo(180 * e, 305 * e, 180 * e, 301 * e, 178 * e, 296 * e),
                    n.bezierCurveTo(183 * e, 296 * e, 185 * e, 289 * e, 188 * e, 279 * e),
                    n.bezierCurveTo(171 * e, 286 * e, 149 * e, 290 * e, 132 * e, 289 * e),
                    n.bezierCurveTo(101 * e, 290 * e, 86 * e, 280 * e, 74 * e, 271 * e),
                    n.closePath(),
                    he(n, t[0]),
                    n.beginPath(),
                    n.lineCap = "round",
                    n.lineJoin = "round",
                    n.moveTo(76 * e, 252 * e),
                    n.bezierCurveTo(85 * e, 294 * e, 96 * e, 314 * e, 103 * e, 314 * e),
                    n.bezierCurveTo(106 * e, 316 * e, 151 * e, 314 * e, 156 * e, 314 * e),
                    n.bezierCurveTo(169 * e, 317 * e, 182 * e, 285 * e, 191 * e, 256 * e),
                    n.bezierCurveTo(134.5 * e, 254 * e, 134.5 * e, 254 * e, 78 * e, 252 * e),
                    n.closePath(),
                    he(n, t[0]),
                    n.beginPath(),
                    n.lineCap = "round",
                    n.lineJoin = "round",
                    n.moveTo(84 * e, 257 * e),
                    n.bezierCurveTo(122 * e, 273 * e, 146 * e, 268 * e, 179 * e, 261 * e),
                    n.bezierCurveTo(190 * e, 258 * e, 187 * e, 266 * e, 178 * e, 272 * e),
                    n.bezierCurveTo(160 * e, 284 * e, 123 * e, 282 * e, 100 * e, 277 * e),
                    n.bezierCurveTo(73 * e, 260 * e, 79 * e, 257 * e, 84 * e, 257 * e),
                    n.closePath(),
                    he(n, t[0]),
                    n.beginPath(),
                    n.lineCap = "round",
                    n.lineJoin = "round",
                    n.moveTo(125 * e, 65 * e),
                    n.bezierCurveTo(133 * e, 45 * e, 136 * e, 42 * e, 141 * e, 55 * e),
                    n.bezierCurveTo(151 * e, 96 * e, 164 * e, 117 * e, 175 * e, 134 * e),
                    n.bezierCurveTo(203 * e, 181 * e, 207 * e, 182 * e, 208 * e, 215 * e),
                    n.bezierCurveTo(206 * e, 240 * e, 205 * e, 246 * e, 184 * e, 258 * e),
                    n.bezierCurveTo(161 * e, 267 * e, 131 * e, 272 * e, 86 * e, 258 * e),
                    n.bezierCurveTo(67 * e, 252 * e, 68 * e, 239 * e, 64 * e, 216 * e),
                    n.bezierCurveTo(62 * e, 194 * e, 72 * e, 169 * e, 92 * e, 142 * e),
                    n.bezierCurveTo(106 * e, 121 * e, 114 * e, 101 * e, 125 * e, 65 * e),
                    n.closePath(),
                    he(n, t[0]),
                    n.beginPath(),
                    n.lineCap = "round",
                    n.lineJoin = "round",
                    n.moveTo(115 * e, 37 * e),
                    n.bezierCurveTo(116 * e, 28 * e, 119 * e, 27 * e, 126 * e, 37 * e),
                    n.bezierCurveTo(134 * e, 48 * e, 134 * e, 49 * e, 132 * e, 59 * e),
                    n.bezierCurveTo(131 * e, 67 * e, 127 * e, 65 * e, 120 * e, 56 * e),
                    n.bezierCurveTo(114 * e, 49 * e, 113 * e, 43 * e, 115 * e, 38 * e),
                    n.closePath(),
                    he(n, t[0]),
                    n.beginPath(),
                    n.lineCap = "round",
                    n.lineJoin = "round",
                    n.moveTo(146 * e, 34 * e),
                    n.bezierCurveTo(152 * e, 28 * e, 155 * e, 27 * e, 157 * e, 39 * e),
                    n.bezierCurveTo(157 * e, 45 * e, 157 * e, 49 * e, 150 * e, 56 * e),
                    n.bezierCurveTo(141 * e, 66 * e, 138 * e, 66 * e, 138 * e, 57 * e),
                    n.bezierCurveTo(137 * e, 50 * e, 137 * e, 47 * e, 141 * e, 42 * e),
                    n.closePath(),
                    he(n, t[0]),
                    n.beginPath(),
                    n.lineCap = "round",
                    n.lineJoin = "round",
                    n.moveTo(143 * e, 69 * e),
                    n.bezierCurveTo(148 * e, 56 * e, 156 * e, 50 * e, 158 * e, 58 * e),
                    n.bezierCurveTo(159 * e, 64 * e, 160 * e, 67 * e, 153 * e, 77 * e),
                    n.bezierCurveTo(148 * e, 83 * e, 145 * e, 84 * e, 143 * e, 77 * e),
                    n.closePath(),
                    he(n, t[0]),
                    n.beginPath(),
                    n.lineCap = "round",
                    n.lineJoin = "round",
                    n.moveTo(149 * e, 92 * e),
                    n.bezierCurveTo(149 * e, 89 * e, 151 * e, 84 * e, 156 * e, 79 * e),
                    n.bezierCurveTo(161 * e, 73 * e, 163 * e, 78 * e, 162 * e, 86 * e),
                    n.bezierCurveTo(161 * e, 91 * e, 155 * e, 99 * e, 152 * e, 98 * e),
                    n.closePath(),
                    he(n, t[0]),
                    n.beginPath(),
                    n.lineCap = "round",
                    n.lineJoin = "round",
                    n.moveTo(111 * e, 61 * e),
                    n.bezierCurveTo(114 * e, 51 * e, 117 * e, 51 * e, 124 * e, 64 * e),
                    n.bezierCurveTo(128 * e, 68 * e, 128 * e, 76 * e, 126 * e, 79 * e),
                    n.bezierCurveTo(123 * e, 84 * e, 122 * e, 82 * e, 115 * e, 74 * e),
                    n.bezierCurveTo(112 * e, 67 * e, 115 * e, 74 * e, 115 * e, 74 * e),
                    n.bezierCurveTo(111 * e, 68 * e, 111 * e, 66 * e, 111 * e, 62 * e),
                    n.closePath(),
                    he(n, t[0]),
                    n.beginPath(),
                    n.lineCap = "round",
                    n.lineJoin = "round",
                    n.moveTo(107 * e, 81 * e),
                    n.bezierCurveTo(108 * e, 74 * e, 112 * e, 73 * e, 118 * e, 84 * e),
                    n.bezierCurveTo(122 * e, 88 * e, 122 * e, 93 * e, 121 * e, 98 * e),
                    n.bezierCurveTo(114 * e, 98 * e, 113 * e, 98 * e, 109 * e, 90 * e),
                    n.bezierCurveTo(107 * e, 87 * e, 106 * e, 85 * e, 107 * e, 82 * e),
                    n.closePath(),
                    he(n, t[0]),
                    i
                }(1, ["#BB0000"])),
                Ie[SPRITE.HURT_WING_LEFT] = F(function(e, t) {
                    var i = window.document.createElement("canvas")
                      , n = i.getContext("2d");
                    return i.width = 85 * e,
                    i.height = 145 * e,
                    n.translate(-20 * e, -95 * e),
                    n.beginPath(),
                    n.lineCap = "round",
                    n.lineJoin = "round",
                    n.moveTo(50 * e, 105 * e),
                    n.bezierCurveTo(52 * e, 119 * e, 64 * e, 137 * e, 71 * e, 146 * e),
                    n.bezierCurveTo(71 * e, 161 * e, 74 * e, 169 * e, 79 * e, 179 * e),
                    n.bezierCurveTo(68 * e, 192 * e, 70 * e, 204 * e, 69 * e, 216 * e),
                    n.bezierCurveTo(50 * e, 189.5 * e, 50 * e, 189.5 * e, 31 * e, 163 * e),
                    n.closePath(),
                    he(n, t),
                    n.beginPath(),
                    n.lineCap = "round",
                    n.lineJoin = "round",
                    n.moveTo(44 * e, 106 * e),
                    n.bezierCurveTo(49 * e, 90 * e, 58 * e, 104 * e, 51 * e, 121 * e),
                    n.bezierCurveTo(45 * e, 143 * e, 41 * e, 151 * e, 37 * e, 162 * e),
                    n.bezierCurveTo(48 * e, 180 * e, 58 * e, 188 * e, 76 * e, 205 * e),
                    n.bezierCurveTo(104 * e, 209 * e, 105 * e, 229 * e, 92 * e, 235 * e),
                    n.bezierCurveTo(76 * e, 239 * e, 75 * e, 232 * e, 56 * e, 213 * e),
                    n.bezierCurveTo(31 * e, 187 * e, 28 * e, 176 * e, 23 * e, 162 * e),
                    n.bezierCurveTo(38 * e, 131 * e, 40 * e, 120 * e, 44 * e, 106 * e),
                    n.closePath(),
                    he(n, t, t, 4 * e),
                    n.beginPath(),
                    n.lineCap = "round",
                    n.lineJoin = "round",
                    n.moveTo(30 * e, 159 * e),
                    n.bezierCurveTo(46 * e, 157 * e, 59 * e, 152 * e, 68 * e, 148 * e),
                    n.bezierCurveTo(63 * e, 155 * e, 52 * e, 160 * e, 44 * e, 164 * e),
                    n.bezierCurveTo(59 * e, 169 * e, 66 * e, 174 * e, 75 * e, 178 * e),
                    n.bezierCurveTo(58 * e, 178 * e, 49 * e, 175 * e, 37 * e, 174 * e),
                    n.closePath(),
                    he(n, t),
                    i
                }(.8, "#BB0000")),
                Ie[SPRITE.HURT_WING_RIGHT] = F(function(e, t) {
                    var i = window.document.createElement("canvas")
                      , n = i.getContext("2d");
                    return i.width = 85 * e,
                    i.height = 145 * e,
                    n.translate(-165 * e, -95 * e),
                    n.beginPath(),
                    n.lineCap = "round",
                    n.lineJoin = "round",
                    n.moveTo(217 * e, 103 * e),
                    n.bezierCurveTo(209 * e, 129 * e, 203 * e, 137 * e, 195 * e, 146 * e),
                    n.bezierCurveTo(195 * e, 159 * e, 194 * e, 167 * e, 189 * e, 178 * e),
                    n.bezierCurveTo(193 * e, 186 * e, 196 * e, 195 * e, 198 * e, 216 * e),
                    n.bezierCurveTo(217.5 * e, 189.5 * e, 217.5 * e, 189.5 * e, 237 * e, 163 * e),
                    n.closePath(),
                    he(n, t),
                    n.beginPath(),
                    n.lineCap = "round",
                    n.lineJoin = "round",
                    n.moveTo(231 * e, 163 * e),
                    n.bezierCurveTo(221 * e, 139 * e, 218 * e, 128 * e, 215 * e, 114 * e),
                    n.bezierCurveTo(213 * e, 102 * e, 220 * e, 92 * e, 222 * e, 107 * e),
                    n.bezierCurveTo(224 * e, 118 * e, 233 * e, 138 * e, 244 * e, 161 * e),
                    n.bezierCurveTo(235 * e, 188 * e, 224 * e, 198 * e, 204 * e, 221 * e),
                    n.bezierCurveTo(190 * e, 233 * e, 190 * e, 235 * e, 180 * e, 235 * e),
                    n.bezierCurveTo(167 * e, 235 * e, 164 * e, 216 * e, 175 * e, 211 * e),
                    n.bezierCurveTo(176 * e, 208 * e, 181 * e, 207 * e, 191 * e, 205 * e),
                    n.bezierCurveTo(213 * e, 186 * e, 218 * e, 180 * e, 230 * e, 163 * e),
                    n.closePath(),
                    he(n, t, t, 4 * e),
                    n.beginPath(),
                    n.lineCap = "round",
                    n.lineJoin = "round",
                    n.moveTo(234 * e, 154 * e),
                    n.bezierCurveTo(227 * e, 156 * e, 222 * e, 156 * e, 199 * e, 148 * e),
                    n.bezierCurveTo(201 * e, 151 * e, 216 * e, 159 * e, 224 * e, 162 * e),
                    n.bezierCurveTo(209 * e, 169.5 * e, 209 * e, 169.5 * e, 194 * e, 177 * e),
                    n.bezierCurveTo(213.5 * e, 175 * e, 213.5 * e, 175 * e, 233 * e, 173 * e),
                    n.closePath(),
                    he(n, t),
                    i
                }(.8, "#BB0000")),
                Ie[SPRITE.HURT_RABBIT] = F(function(e, t) {
                    var i = window.document.createElement("canvas")
                      , n = i.getContext("2d")
                      , a = 85 * e
                      , I = 115 * e
                      , T = 4 * e;
                    return i.width = a,
                    i.height = I,
                    n.translate(-130 * e, -60 * e),
                    n.globalAlpha = 1,
                    n.beginPath(),
                    n.bezierCurveTo(190 * e, 87 * e, 201 * e, 59 * e, 208 * e, 64 * e),
                    n.bezierCurveTo(213 * e, 68 * e, 204 * e, 93 * e, 195 * e, 109 * e),
                    n.bezierCurveTo(195 * e, 109 * e, 202 * e, 124 * e, 191 * e, 141 * e),
                    n.bezierCurveTo(182 * e, 151 * e, 164 * e, 155 * e, 148 * e, 144 * e),
                    n.bezierCurveTo(136 * e, 135 * e, 138 * e, 111 * e, 145 * e, 104 * e),
                    n.bezierCurveTo(140 * e, 92 * e, 131 * e, 67 * e, 138 * e, 63 * e),
                    n.bezierCurveTo(145 * e, 61 * e, 153 * e, 82 * e, 155 * e, 96 * e),
                    n.bezierCurveTo(167 * e, 91 * e, 178 * e, 92 * e, 187 * e, 98 * e),
                    n.closePath(),
                    he(n, t, t, T),
                    i
                }(.9, "#BB0000")),
                Ie[SPRITE.HURT] = F(ue(.6, "#BB0000")),
                Ie[SPRITE.COLD] = F(ue(.6, "#1CE7E0")),
                Ie[SPRITE.HUNGER] = F(ue(.6, "#DBE71C")),
                Ie[SPRITE.HEAL] = F(ue(.6, "#00BB00")),
                Ie[SPRITE.SAND_STEP] = [],
                Ie[SPRITE.SAND_STEP][SPRITE.DAY] = F(ki(1, ["#dac291"])),
                Ie[SPRITE.SAND_STEP][SPRITE.NIGHT] = F(ki(1, ["#0D423D"])),
                Ie[SPRITE.ISLAND_STEP] = [],
                Ie[SPRITE.ISLAND_STEP][SPRITE.DAY] = F(ki(1, ["#dac291"])),
                Ie[SPRITE.ISLAND_STEP][SPRITE.NIGHT] = F(ki(1, ["#0D423D"])),
                Ie[SPRITE.WELL_FULL] = [],
                Ie[SPRITE.WELL_FULL][SPRITE.DAY] = F(un(.3, !0, ["#1e2021", "#717273", "#606162", "#a09f9f", "#878787", "#1a6470"])),
                Ie[SPRITE.WELL_FULL][SPRITE.NIGHT] = F(un(.3, !0, ["#1e2021", "#1a4545", "#163a3a", "#245d5d", "#1f5454", "#09373F"])),
                Ie[ItemType.WELL] = [],
                Ie[ItemType.WELL][SPRITE.DAY] = F(un(.3, !0, ["#1e2021", "#717273", "#606162", "#a09f9f", "#878787", "#454545"])),
                Ie[ItemType.WELL][SPRITE.NIGHT] = F(un(.3, !0, ["#1e2021", "#1a4545", "#163a3a", "#245d5d", "#1f5454", "#0b2121"])),
                Ie[ItemType.BOTTLE_FULL] = [F(On(1, 0, ["#C6AF81", "#C98435", "#B26F31", "#53A4D5", "#388AC7", "#C1C0C0", "#EAEAEA"]))],
                Ie[ItemType.BOTTLE_EMPTY] = [F(On(1, 0, ["#C6AF81", "#C98435", "#B26F31", "#53A4D5", "#388AC7", "#C1C0C0", "#EAEAEA"]))],
                Ie[SPRITE.OCEAN] = [],
                Ie[SPRITE.OCEAN][SPRITE.DAY] = [],
                Ie[SPRITE.OCEAN][SPRITE.NIGHT] = [],
                Ie[SPRITE.OCEAN][SPRITE.DAY].push(F(li(1, ["#0B6A84"]))),
                Ie[SPRITE.OCEAN][SPRITE.DAY].push(F(Ai(1, ["#0B6A84"]))),
                Ie[SPRITE.OCEAN][SPRITE.DAY].push(F(bi(1, ["#0B6A84"]))),
                Ie[SPRITE.OCEAN][SPRITE.DAY].push(F(Ni(1, ["#0B6A84"]))),
                Ie[SPRITE.OCEAN][SPRITE.DAY].push(F(vi(1, ["#0B6A84"]))),
                Ie[SPRITE.OCEAN][SPRITE.DAY].push(F(Di(1, ["#0B6A84"]))),
                Ie[SPRITE.OCEAN][SPRITE.DAY].push(F(Oi(1, ["#0B6A84"]))),
                Ie[SPRITE.OCEAN][SPRITE.NIGHT].push(F(li(1, ["#09373F"]))),
                Ie[SPRITE.OCEAN][SPRITE.NIGHT].push(F(Ai(1, ["#09373F"]))),
                Ie[SPRITE.OCEAN][SPRITE.NIGHT].push(F(bi(1, ["#09373F"]))),
                Ie[SPRITE.OCEAN][SPRITE.NIGHT].push(F(Ni(1, ["#09373F"]))),
                Ie[SPRITE.OCEAN][SPRITE.NIGHT].push(F(vi(1, ["#09373F"]))),
                Ie[SPRITE.OCEAN][SPRITE.NIGHT].push(F(Di(1, ["#09373F"]))),
                Ie[SPRITE.OCEAN][SPRITE.NIGHT].push(F(Oi(1, ["#09373F"]))),
                Ie[SPRITE.ISLAND] = [],
                Ie[SPRITE.ISLAND][SPRITE.DAY] = [],
                Ie[SPRITE.ISLAND][SPRITE.NIGHT] = [],
                Ie[SPRITE.ISLAND][SPRITE.DAY].push(F(ui(1.7, ["#FBEFBC"], 0))),
                Ie[SPRITE.ISLAND][SPRITE.DAY].push(F(ui(1.9, ["#FBEFBC"], 1))),
                Ie[SPRITE.ISLAND][SPRITE.DAY].push(F(ui(1.7, ["#FBEFBC"], 2))),
                Ie[SPRITE.ISLAND][SPRITE.NIGHT].push(F(ui(1.7, ["#0F4C48"], 0))),
                Ie[SPRITE.ISLAND][SPRITE.NIGHT].push(F(ui(1.9, ["#0F4C48"], 1))),
                Ie[SPRITE.ISLAND][SPRITE.NIGHT].push(F(ui(1.7, ["#0F4C48"], 2))),
                Ie[SPRITE.WAVE_ONE] = [],
                Ie[SPRITE.WAVE_ONE][SPRITE.DAY] = [],
                Ie[SPRITE.WAVE_ONE][SPRITE.NIGHT] = [],
                Ie[SPRITE.WAVE_ONE][SPRITE.DAY].push(F(ui(1.8, ["#A9D6D3"], 0))),
                Ie[SPRITE.WAVE_ONE][SPRITE.DAY].push(F(ui(2, ["#A9D6D3"], 1))),
                Ie[SPRITE.WAVE_ONE][SPRITE.DAY].push(F(ui(1.8, ["#A9D6D3"], 2))),
                Ie[SPRITE.WAVE_ONE][SPRITE.NIGHT].push(F(ui(1.8, ["#115E60"], 0))),
                Ie[SPRITE.WAVE_ONE][SPRITE.NIGHT].push(F(ui(2, ["#115E60"], 1))),
                Ie[SPRITE.WAVE_ONE][SPRITE.NIGHT].push(F(ui(1.8, ["#115E60"], 2))),
                Ie[SPRITE.WAVE_TWO] = [],
                Ie[SPRITE.WAVE_TWO][SPRITE.DAY] = [],
                Ie[SPRITE.WAVE_TWO][SPRITE.NIGHT] = [],
                Ie[SPRITE.WAVE_TWO][SPRITE.DAY].push(F(ui(1.9, ["#2A8B9B"], 0))),
                Ie[SPRITE.WAVE_TWO][SPRITE.DAY].push(F(ui(2.1, ["#2A8B9B"], 1))),
                Ie[SPRITE.WAVE_TWO][SPRITE.DAY].push(F(ui(1.9, ["#2A8B9B"], 2))),
                Ie[SPRITE.WAVE_TWO][SPRITE.NIGHT].push(F(ui(1.9, ["#0F464C"], 0))),
                Ie[SPRITE.WAVE_TWO][SPRITE.NIGHT].push(F(ui(2.1, ["#0F464C"], 1))),
                Ie[SPRITE.WAVE_TWO][SPRITE.NIGHT].push(F(ui(1.9, ["#0F464C"], 2))),
                Ie[SPRITE.PALM] = [],
                Ie[SPRITE.PALM][SPRITE.DAY] = [],
                Ie[SPRITE.PALM][SPRITE.NIGHT] = [],
                Ie[SPRITE.PALM][SPRITE.DAY].push(F(Gt(.8, ["#231F20", "#0c8e5b", "#037542", "#077b49"]))),
                Ie[SPRITE.PALM][SPRITE.DAY].push(F(Gt(1, ["#231F20", "#0c8e5b", "#037542", "#077b49"]))),
                Ie[SPRITE.PALM][SPRITE.DAY].push(F(Gt(1.2, ["#231F20", "#0c8e5b", "#037542", "#077b49"]))),
                Ie[SPRITE.PALM][SPRITE.NIGHT].push(F(Gt(.8, ["#041e22", "#124949", "#0e3838", "#0a4049"]))),
                Ie[SPRITE.PALM][SPRITE.NIGHT].push(F(Gt(1, ["#041e22", "#124949", "#0e3838", "#0a4049"]))),
                Ie[SPRITE.PALM][SPRITE.NIGHT].push(F(Gt(1.2, ["#041e22", "#124949", "#0e3838", "#0a4049"]))),
                Ie[SPRITE.KRAKEN] = [],
                Ie[SPRITE.KRAKEN][SPRITE.DAY] = F(yn(.8, ["#1e2021", "#B6222A", "#201851", "#342C7C", "#F4F4F4", "#D3D3D3", "#6765CE", "#593CC6", "#433BAD", "#342C7C", "#052830", "#EAEAEA", "#B6222A", "#FFFFFF"])),
                Ie[SPRITE.KRAKEN][SPRITE.NIGHT] = F(yn(.8, ["#0c0c0d", "#462966", "#081B2D", "#342C7C", "#9AAAAD", "#72898C", "#133556", "#296D9B", "#25557C", "#133556", "#0D2A42", "#EAEAEA", "#462966", "#72898C"])),
                Ie[SPRITE.HURT_KRAKEN] = F(function(e, t) {
                    var i = window.document.createElement("canvas")
                      , n = i.getContext("2d");
                    return i.width = 376 * e,
                    i.height = 371 * e,
                    n.globalAlpha = 1,
                    n.beginPath(),
                    n.lineCap = "round",
                    n.lineJoin = "round",
                    n.moveTo(191.633544921875 * e, 123.98580932617188 * e),
                    n.bezierCurveTo(215.633544921875 * e, 85.98580932617188 * e, 187.633544921875 * e, 71.98580932617188 * e, 202.633544921875 * e, 19.985809326171875 * e),
                    n.bezierCurveTo(231.633544921875 * e, 68.98580932617188 * e, 253.633544921875 * e, 71.98580932617188 * e, 256.633544921875 * e, 93.98580932617188 * e),
                    n.bezierCurveTo(306.633544921875 * e, 64.98580932617188 * e, 319.633544921875 * e, 61.985809326171875 * e, 350.633544921875 * e, 58.985809326171875 * e),
                    n.bezierCurveTo(280.633544921875 * e, 86.98580932617188 * e, 281.633544921875 * e, 106.98580932617188 * e, 268.633544921875 * e, 130.98580932617188 * e),
                    n.bezierCurveTo(295.633544921875 * e, 158.98580932617188 * e, 328.633544921875 * e, 155.98580932617188 * e, 353.633544921875 * e, 90.98580932617188 * e),
                    n.bezierCurveTo(371.633544921875 * e, 158.98580932617188 * e, 337.633544921875 * e, 210.98580932617188 * e, 286.633544921875 * e, 209.98580932617188 * e),
                    n.bezierCurveTo(323.633544921875 * e, 230.98580932617188 * e, 317.633544921875 * e, 274.9858093261719 * e, 356.633544921875 * e, 305.9858093261719 * e),
                    n.bezierCurveTo(288.633544921875 * e, 297.9858093261719 * e, 288.633544921875 * e, 265.9858093261719 * e, 275.633544921875 * e, 266.9858093261719 * e),
                    n.bezierCurveTo(280.633544921875 * e, 294.9858093261719 * e, 315.633544921875 * e, 306.9858093261719 * e, 336.633544921875 * e, 316.9858093261719 * e),
                    n.bezierCurveTo(295.633544921875 * e, 318.9858093261719 * e, 264.633544921875 * e, 302.9858093261719 * e, 254.633544921875 * e, 289.9858093261719 * e),
                    n.bezierCurveTo(252.633544921875 * e, 301.9858093261719 * e, 224.633544921875 * e, 315.9858093261719 * e, 201.633544921875 * e, 356.9858093261719 * e),
                    n.bezierCurveTo(195.633544921875 * e, 313.9858093261719 * e, 195.633544921875 * e, 308.9858093261719 * e, 196.633544921875 * e, 307.9858093261719 * e),
                    n.bezierCurveTo(197.633544921875 * e, 289.9858093261719 * e, 207.633544921875 * e, 283.9858093261719 * e, 195.633544921875 * e, 258.9858093261719 * e),
                    n.bezierCurveTo(182.633544921875 * e, 282.9858093261719 * e, 190.633544921875 * e, 287.9858093261719 * e, 193.633544921875 * e, 297.9858093261719 * e),
                    n.bezierCurveTo(195.633544921875 * e, 306.9858093261719 * e, 191.633544921875 * e, 334.9858093261719 * e, 187.633544921875 * e, 354.9858093261719 * e),
                    n.bezierCurveTo(165.633544921875 * e, 320.9858093261719 * e, 138.633544921875 * e, 307.9858093261719 * e, 135.633544921875 * e, 288.9858093261719 * e),
                    n.bezierCurveTo(110.633544921875 * e, 318.9858093261719 * e, 68.633544921875 * e, 323.9858093261719 * e, 49.633544921875 * e, 320.9858093261719 * e),
                    n.bezierCurveTo(88.633544921875 * e, 308.9858093261719 * e, 108.633544921875 * e, 284.9858093261719 * e, 118.633544921875 * e, 258.9858093261719 * e),
                    n.bezierCurveTo(86.633544921875 * e, 264.9858093261719 * e, 75.633544921875 * e, 310.9858093261719 * e, 19.633544921875 * e, 304.9858093261719 * e),
                    n.bezierCurveTo(54.633544921875 * e, 276.9858093261719 * e, 59.633544921875 * e, 214.98580932617188 * e, 105.633544921875 * e, 205.98580932617188 * e),
                    n.bezierCurveTo(14.633544921875 * e, 201.98580932617188 * e, 24.633544921875 * e, 141.98580932617188 * e, 25.633544921875 * e, 82.98580932617188 * e),
                    n.bezierCurveTo(49.633544921875 * e, 168.98580932617188 * e, 87.633544921875 * e, 141.98580932617188 * e, 112.633544921875 * e, 123.98580932617188 * e),
                    n.bezierCurveTo(95.633544921875 * e, 75.98580932617188 * e, 70.633544921875 * e, 68.98580932617188 * e, 35.633544921875 * e, 50.985809326171875 * e),
                    n.bezierCurveTo(70.633544921875 * e, 53.985809326171875 * e, 102.633544921875 * e, 65.98580932617188 * e, 125.633544921875 * e, 84.98580932617188 * e),
                    n.bezierCurveTo(133.633544921875 * e, 69.98580932617188 * e, 166.633544921875 * e, 42.985809326171875 * e, 176.633544921875 * e, 21.985809326171875 * e),
                    n.bezierCurveTo(185.633544921875 * e, 49.985809326171875 * e, 168.633544921875 * e, 95.98580932617188 * e, 191.633544921875 * e, 121.98580932617188 * e),
                    n.closePath(),
                    he(n, t[0], t[0], 12 * e),
                    i
                }(.8, ["#B6222A"])),
                Ie[SPRITE.PIRANHA] = [],
                Ie[SPRITE.PIRANHA][SPRITE.DAY] = F(fn(.8, 0, ["#1e2021", "#961B1B", "#702727", "#C43B3B", "#d15151", "#B71C1C", "#E8E8E8", "#752E2E", "#891818"])),
                Ie[SPRITE.PIRANHA][SPRITE.NIGHT] = F(fn(.8, 0, ["#0c0c0d", "#21112D", "#281A49", "#462966", "#321C56", "#1C073D", "#FFFFFF", "#1C0833", "#1B1238"])),
                Ie[SPRITE.HURT_PIRANHA] = F(function(e, t) {
                    var i = window.document.createElement("canvas")
                      , n = i.getContext("2d");
                    return i.width = 158 * e,
                    i.height = 201 * e,
                    n.beginPath(),
                    n.lineCap = "round",
                    n.lineJoin = "round",
                    n.moveTo(96.5 * e, 76.421875 * e),
                    n.bezierCurveTo(100.5 * e, 64.421875 * e, 103.5 * e, 62.421875 * e, 110.5 * e, 65.421875 * e),
                    n.bezierCurveTo(116.5 * e, 66.421875 * e, 117.5 * e, 67.421875 * e, 112.5 * e, 73.421875 * e),
                    n.bezierCurveTo(107 * e, 79.921875 * e, 107 * e, 79.921875 * e, 101.5 * e, 86.421875 * e),
                    n.closePath(),
                    he(n, t[0], t[0], 10 * e),
                    n.beginPath(),
                    n.lineCap = "round",
                    n.lineJoin = "round",
                    n.moveTo(61.5 * e, 78.421875 * e),
                    n.bezierCurveTo(57.5 * e, 73.421875 * e, 51.5 * e, 66.421875 * e, 45.5 * e, 68.421875 * e),
                    n.bezierCurveTo(32.5 * e, 73.421875 * e, 38.5 * e, 75.421875 * e, 46.5 * e, 81.421875 * e),
                    n.bezierCurveTo(51.5 * e, 84.921875 * e, 51.5 * e, 84.921875 * e, 56.5 * e, 88.421875 * e),
                    n.closePath(),
                    he(n, t[0], t[0], 10 * e),
                    n.beginPath(),
                    n.lineCap = "round",
                    n.lineJoin = "round",
                    n.moveTo(116.5 * e, 127.421875 * e),
                    n.bezierCurveTo(124.5 * e, 108.421875 * e, 129.5 * e, 104.421875 * e, 141.5 * e, 107.421875 * e),
                    n.bezierCurveTo(156.5 * e, 112.421875 * e, 153.5 * e, 113.421875 * e, 132.5 * e, 134.421875 * e),
                    n.bezierCurveTo(123.5 * e, 141.921875 * e, 123.5 * e, 141.921875 * e, 114.5 * e, 149.421875 * e),
                    n.closePath(),
                    he(n, t[0], t[0], 10 * e),
                    n.beginPath(),
                    n.lineCap = "round",
                    n.lineJoin = "round",
                    n.moveTo(41.5 * e, 134.421875 * e),
                    n.bezierCurveTo(30.5 * e, 119.421875 * e, 25.5 * e, 111.421875 * e, 12.5 * e, 115.421875 * e),
                    n.bezierCurveTo(4.5 * e, 120.421875 * e, 4.5 * e, 121.421875 * e, 26.5 * e, 142.421875 * e),
                    n.bezierCurveTo(35 * e, 149.921875 * e, 35 * e, 149.921875 * e, 43.5 * e, 157.421875 * e),
                    n.closePath(),
                    he(n, t[0], t[0], 10 * e),
                    n.beginPath(),
                    n.lineCap = "round",
                    n.lineJoin = "round",
                    n.moveTo(78.5 * e, 51.921875 * e),
                    n.bezierCurveTo(99.5 * e, 75.921875 * e, 110.5 * e, 96.921875 * e, 118.5 * e, 120.921875 * e),
                    n.bezierCurveTo(121.5 * e, 140.921875 * e, 107.5 * e, 179.921875 * e, 75.5 * e, 183.921875 * e),
                    n.bezierCurveTo(30.5 * e, 169.921875 * e, 37.5 * e, 131.921875 * e, 34.5 * e, 120.921875 * e),
                    n.bezierCurveTo(41.5 * e, 89.921875 * e, 61.5 * e, 67.921875 * e, 78.5 * e, 51.921875 * e),
                    n.closePath(),
                    he(n, t[0], t[0], 10 * e),
                    n.beginPath(),
                    n.lineCap = "round",
                    n.lineJoin = "round",
                    n.moveTo(72.5 * e, 72.421875 * e),
                    n.bezierCurveTo(76.5 * e, 79.421875 * e, 79.5 * e, 80.421875 * e, 83.5 * e, 73.421875 * e),
                    n.bezierCurveTo(80.5 * e, 96.921875 * e, 79.5 * e, 114.421875 * e, 77.5 * e, 120.421875 * e),
                    n.closePath(),
                    he(n, t[0], t[0], 10 * e),
                    n.beginPath(),
                    n.lineCap = "round",
                    n.lineJoin = "round",
                    n.moveTo(42.5 * e, 163.421875 * e),
                    n.bezierCurveTo(62.5 * e, 185.421875 * e, 86.5 * e, 186.421875 * e, 111.5 * e, 165.421875 * e),
                    n.bezierCurveTo(107.5 * e, 176.421875 * e, 95.5 * e, 187.421875 * e, 75.5 * e, 188.421875 * e),
                    n.bezierCurveTo(53.5 * e, 188.421875 * e, 43.5 * e, 171.421875 * e, 42.5 * e, 164.421875 * e),
                    n.closePath(),
                    he(n, t[0], t[0], 10 * e),
                    n.beginPath(),
                    n.lineCap = "round",
                    n.lineJoin = "round",
                    n.moveTo(79.5 * e, 61.421875 * e),
                    n.bezierCurveTo(88.5 * e, 31.421875 * e, 81.5 * e, 16.421875 * e, 75.5 * e, 7.421875 * e),
                    n.bezierCurveTo(77.5 * e, 28.421875 * e, 77.5 * e, 37.421875 * e, 68.5 * e, 42.421875 * e),
                    n.bezierCurveTo(79.5 * e, 57.421875 * e, 79.5 * e, 58.421875 * e, 80.5 * e, 61.421875 * e),
                    n.closePath(),
                    he(n, t[0], t[0], 10 * e),
                    n.beginPath(),
                    n.lineCap = "round",
                    n.lineJoin = "round",
                    n.moveTo(72.5 * e, 72.421875 * e),
                    n.bezierCurveTo(76.5 * e, 79.421875 * e, 79.5 * e, 80.421875 * e, 83.5 * e, 73.421875 * e),
                    n.bezierCurveTo(80.5 * e, 96.921875 * e, 79.5 * e, 114.421875 * e, 77.5 * e, 120.421875 * e),
                    n.closePath(),
                    he(n, t[0], t[0], 10 * e),
                    i
                }(.8, ["#B6222A"])),
                Ie[ItemType.CRAB_LOOT] = F(Jt(.35, !0, ["#0d1b1c", "#c04933", "#a33e2b", "#ee593d", "#c04933"])),
                Ie[ItemType.CRAB_STICK] = F(Et(.35, !0, ["#1e2021", "#ed5f4f", "#ce4545", "#ffffff", "#e2dad7"])),
                Ie[SPRITE.CRAB_ATTACK] = [],
                Ie[SPRITE.CRAB_ATTACK][SPRITE.DAY] = F(st(.35, 0, ["#1e2021", "#e45936", "#B6222A", "#B6222A", "#FFFFFF"], 1)),
                Ie[SPRITE.CRAB_ATTACK][SPRITE.NIGHT] = F(st(.35, 0, ["#0c0c0d", "#613577", "#462966", "#1C073D", "#FFFFFF"], 1)),
                Ie[SPRITE.CRAB] = [],
                Ie[SPRITE.CRAB][SPRITE.DAY] = F(st(.35, 0, ["#1e2021", "#e45936", "#ffffff", "#181414", "#FFFFFF"], 0)),
                Ie[SPRITE.CRAB][SPRITE.NIGHT] = F(st(.35, 0, ["#0c0c0d", "#34255d", "#563f83", "#180f21", "#FFFFFF"], 0)),
                Ie[SPRITE.CRAB_CLAW_LEFT] = [],
                Ie[SPRITE.CRAB_CLAW_LEFT][SPRITE.DAY] = F(yt(.35, 0, ["#1e2021", "#e45936", "#ffffff"])),
                Ie[SPRITE.CRAB_CLAW_LEFT][SPRITE.NIGHT] = F(yt(.35, 0, ["#0c0c0d", "#34255d", "#563f83"])),
                Ie[SPRITE.CRAB_CLAW_RIGHT] = [],
                Ie[SPRITE.CRAB_CLAW_RIGHT][SPRITE.DAY] = F(Rt(.42, 0, ["#1e2021", "#e45936", "#ffffff"])),
                Ie[SPRITE.CRAB_CLAW_RIGHT][SPRITE.NIGHT] = F(Rt(.42, 0, ["#0c0c0d", "#34255d", "#563f83"])),
                Ie[SPRITE.CRAB_CLAW_LEFT_ATTACK] = [],
                Ie[SPRITE.CRAB_CLAW_LEFT_ATTACK][SPRITE.DAY] = F(yt(.35, 0, ["#1e2021", "#e45936", "#B6222A"])),
                Ie[SPRITE.CRAB_CLAW_LEFT_ATTACK][SPRITE.NIGHT] = F(yt(.35, 0, ["#0c0c0d", "#613577", "#462966"])),
                Ie[SPRITE.CRAB_CLAW_RIGHT_ATTACK] = [],
                Ie[SPRITE.CRAB_CLAW_RIGHT_ATTACK][SPRITE.DAY] = F(Rt(.42, 0, ["#1e2021", "#e45936", "#B6222A"])),
                Ie[SPRITE.CRAB_CLAW_RIGHT_ATTACK][SPRITE.NIGHT] = F(Rt(.42, 0, ["#0c0c0d", "#613577", "#462966"])),
                Ie[SPRITE.HURT_CRAB] = F(ht(.35, ["#B6222A"])),
                Ie[SPRITE.HURT_CRAB_CLAW_LEFT] = F(yt(.35, 0, [void 0, "#B6222A"])),
                Ie[SPRITE.HURT_CRAB_CLAW_RIGHT] = F(Rt(.35, 0, [void 0, "#B6222A"])),
                Ie[SPRITE.HEAL_CRAB] = F(ht(.35, ["#22E066"])),
                Ie[SPRITE.HEAL_CRAB_CLAW_LEFT] = F(yt(.35, 0, [void 0, "#22E066"])),
                Ie[SPRITE.HEAL_CRAB_CLAW_RIGHT] = F(Rt(.35, 0, [void 0, "#22E066"])),
                Ie[ItemType.DIVING_MASK] = [],
                Ie[ItemType.DIVING_MASK][SPRITE.DAY] = F(Ct(.3, !0, ["#1e2021", "#65A8B7", "#2E85A0", "#14275B", "#081826", "#1A3163", "#0C1944", "#89C4CE", "#2E85A0"])),
                Ie[ItemType.DIVING_MASK][SPRITE.NIGHT] = F(Ct(.3, !0, ["#0c0c0d", "#89C9C7", "#469E95", "#092C38", "#072021", "#0E343D", "#071F2D", "#9FD3D3", "#135367"])),
                Ie[ItemType.SUPER_DIVING_SUIT] = [],
                Ie[ItemType.SUPER_DIVING_SUIT][SPRITE.DAY] = F(Lt(.45, !0, ["#C4BC51", "#B29C32", "#201851", "#652D8E", "#1e2021", "#2E85A0"])),
                Ie[ItemType.SUPER_DIVING_SUIT][SPRITE.NIGHT] = F(Lt(.45, !0, ["#235050", "#357472", "#081B2D", "#342C7C", "#0c0c0d", "#135367"])),
                Ie[ItemType.PLOT] = [],
                Ie[ItemType.PLOT][SPRITE.DAY] = F(wn(.63, !0, ["#1e2021", "#352E1E", "#4C3B19", "#574122"])),
                Ie[ItemType.PLOT][SPRITE.NIGHT] = F(wn(.63, !0, ["#0c0c0d", "#071f22", "#0d2e33", "#184747"])),
                Ie[ItemType.BRIDGE] = [],
                Ie[ItemType.BRIDGE][SPRITE.DAY] = F(cn(1, !0, ["#1e2021", "#332715", "#4C3B19", "#574122"])),
                Ie[ItemType.BRIDGE][SPRITE.NIGHT] = F(cn(1, !0, ["#0c0c0d", "#071f22", "#0d2e33", "#184747"])),
                Ie[ItemType.TOWER] = [],
                Ie[ItemType.TOWER][SPRITE.DAY] = P.WOOD_TOWERD,
                Ie[ItemType.TOWER][SPRITE.NIGHT] = P.WOOD_TOWERN,
                Ie[ItemType.ROOF] = [],
                Ie[ItemType.ROOF][SPRITE.DAY] = F(_e(.59, 0, ["#0d1b1c", "#44301b", "#57442a", "#523e26"])),
                Ie[ItemType.ROOF][SPRITE.NIGHT] = F(_e(.59, 0, ["#0c0c0d", "#062124", "#10373d", "#0f3333"])),
                Ie[SPRITE.ROOFS] = [Ie[ItemType.ROOF]],
                Ie[SPRITE.ROOFS][1] = [],
                Ie[SPRITE.ROOFS][2] = [],
                Ie[SPRITE.ROOFS][1][SPRITE.DAY] = F(fe(.59, 0, ["#0d1b1c", "#44301b", "#57442a", "#523e26"])),
                Ie[SPRITE.ROOFS][1][SPRITE.NIGHT] = F(fe(.59, 0, ["#0c0c0d", "#062124", "#10373d", "#0f3333"])),
                Ie[SPRITE.ROOFS][2][SPRITE.DAY] = F(ge(.59, 0, ["#0d1b1c", "#44301b", "#57442a", "#523e26"])),
                Ie[SPRITE.ROOFS][2][SPRITE.NIGHT] = F(ge(.59, 0, ["#0c0c0d", "#062124", "#10373d", "#0f3333"])),
                Ie[ItemType.WATERING_CAN_FULL] = [],
                Ie[ItemType.WATERING_CAN_FULL][SPRITE.DAY] = F(Se(3 - window.Math.PI / 2, _n(.6, !0, ["#1e2021", "#674C2A", "#4C3B19", "#594225", "#1678a2"]))),
                Ie[ItemType.WATERING_CAN_FULL][SPRITE.NIGHT] = F(Se(3 - window.Math.PI / 2, _n(.6, !0, ["#0c0c0d", "#07383c", "#0c4e53", "#042b2e", "#0c5975", "#11546c"]))),
                Ie[SPRITE.DEAD_BOX] = [],
                Ie[SPRITE.DEAD_BOX][SPRITE.DAY] = F(Ye(.3, ["#ad8850", "#714f24", "#9f7d4a", "#b38e59", "#8b1008"], 0)),
                Ie[SPRITE.DEAD_BOX][SPRITE.NIGHT] = F(Ye(.3, ["#1F5453", "#123335", "#1D4947", "#1F5453", "#0c2629"], 0)),
                Ie[SPRITE.WINDMILL_FLOUR] = Xe(1, [{
                    f: gn,
                    x: 0,
                    y: 0,
                    a: 1,
                    r: 0,
                    c: ["#B3AA8E", "#817961", "#EBEAE2", "#E0DFD8"]
                }], .25, ["#d2c77b", "#e7dc8f", "#bfb360"], .7),
                Ie[ItemType.LAVA_HEART] = Xe(1.5, [{
                    f: an,
                    x: 0,
                    y: 0,
                    a: 1,
                    r: 0,
                    c: ["#120202", "#750a0a", "#991616", "#120202"]
                }], .45, ["#5bbcc9", "#73d2df", "#4daab6"], .9),
                Ie[SPRITE.HEART_SYMBOL_HUD] = Mn(.35, ["#072428", "#67A242", "#67A242"], 0),
                Ie[SPRITE.COLD_SYMBOL_HUD] = Mn(.35, ["#172130", "#649BB2", "#FFFFFF", "#FFFFFF", "#90C2D3", "#649BB2", "#84BDD1", "#2F5866"], 1),
                Ie[SPRITE.FOOD_SYMBOL_HUD] = Mn(.35, ["#3F0B11", "#B13424", "#FFFFFF", "#B13424", "#7e180b"], 2),
                Ie[SPRITE.WATER_SYMBOL_HUD] = Mn(.35, ["#1B2F4C", "#29488E", "#76c3e8", "#ffffff"], 3),
                Ie[SPRITE.LEADERBOARD] = F(function(e) {
                    var t = window.document.createElement("canvas")
                      , i = t.getContext("2d")
                      , n = 200 * e
                      , a = 270 * e
                      , I = 8 * e;
                    t.width = n,
                    t.height = a + 20,
                    i.beginPath(),
                    ye(i, 0, 0, n, a - I, I),
                    i.globalAlpha = .5,
                    he(i, "#1D6055"),
                    i.globalAlpha = 1;
                    var T = ft(e, "Leaderboard", 25, "#FFF");
                    return i.drawImage(T, (n - T.width) / 2, 5 * e),
                    t
                }(1)),
                Ie[SPRITE.GAUGES] = F(function(e) {
                    var t = window.document.createElement("canvas")
                      , i = t.getContext("2d")
                      , n = 950 * e
                      , a = 180 * e
                      , I = 50 * e
                      , T = 20 * e
                      , o = 240 * e
                      , r = 35 * e
                      , d = 1 * e
                      , s = 4 * e
                      , h = 4 * e;
                    t.width = n,
                    t.height = I,
                    i.translate(0, 15 * e),
                    ye(i, r, d, a, T, s),
                    he(i, null, "#69A148", h);
                    var y = Ie[SPRITE.HEART_SYMBOL_HUD];
                    return i.drawImage(y, 17, -8),
                    i.translate(o, 0),
                    ye(i, r, d, a, T, s),
                    he(i, null, "#AF352A", h),
                    y = Ie[SPRITE.FOOD_SYMBOL_HUD],
                    i.drawImage(y, 17, -9),
                    i.translate(o, 0),
                    ye(i, r, d, a, T, s),
                    he(i, null, "#669BB1", h),
                    y = Ie[SPRITE.COLD_SYMBOL_HUD],
                    i.drawImage(y, 17, -8),
                    i.translate(o, 0),
                    ye(i, r, d, a, T, s),
                    he(i, null, "#074A87", h),
                    y = Ie[SPRITE.WATER_SYMBOL_HUD],
                    i.drawImage(y, 17, -8),
                    t
                }(1)),
                Ie[SPRITE.OXYGEN] = F(function(e) {
                    var t = window.document.createElement("canvas")
                      , i = t.getContext("2d")
                      , n = 600 * e
                      , a = 22 * e
                      , I = 4 * e
                      , T = 4 * e;
                    return t.width = n,
                    t.height = a,
                    ye(i, 5 * e, 5 * e, n - 10 * e, a - 10 * e, I),
                    he(i, null, "#BBE8EF", T),
                    t
                }(1)),
                Ie[SPRITE.DELAY_HELMET] = F(Gi(.16, !0, ["rgba(0, 0, 0, 0)", "#FFFFFF", "#FFFFFF", "#FFFFFF", "#FFFFFF"])),
                Ie[SPRITE.DELAY_WEAPON] = F(Se(5.8, function(e, t, i) {
                    var n = window.document.createElement("canvas")
                      , a = n.getContext("2d");
                    return n.width = 100 * e,
                    n.height = 250 * e,
                    a.translate(-135 * e, -75 * e),
                    a.globalAlpha = t ? .8 : 1,
                    a.beginPath(),
                    a.lineCap = "round",
                    a.lineJoin = "round",
                    a.moveTo(178.5 * e, 238.03125 * e),
                    a.bezierCurveTo(177 * e, 175.03125 * e, 177 * e, 175.03125 * e, 175.5 * e, 112.03125 * e),
                    a.bezierCurveTo(184.5 * e, 100.53125 * e, 184.5 * e, 100.53125 * e, 193.5 * e, 89.03125 * e),
                    a.bezierCurveTo(202 * e, 100.03125 * e, 202 * e, 100.03125 * e, 210.5 * e, 111.03125 * e),
                    a.bezierCurveTo(209.5 * e, 174.03125 * e, 209.5 * e, 174.03125 * e, 208.5 * e, 237.03125 * e),
                    a.closePath(),
                    he(a, i[0]),
                    a.beginPath(),
                    a.lineCap = "round",
                    a.lineJoin = "round",
                    a.moveTo(193.5 * e, 91.03125 * e),
                    a.bezierCurveTo(193.5 * e, 163.03125 * e, 193.5 * e, 163.03125 * e, 193.5 * e, 235.03125 * e),
                    a.closePath(),
                    he(a, void 0, i[0]),
                    a.beginPath(),
                    a.lineCap = "round",
                    a.lineJoin = "round",
                    a.moveTo(155.5 * e, 239.03125 * e),
                    a.bezierCurveTo(194 * e, 238.53125 * e, 194 * e, 238.53125 * e, 232.5 * e, 238.03125 * e),
                    a.bezierCurveTo(232.5 * e, 243.03125 * e, 232.5 * e, 243.03125 * e, 232.5 * e, 248.03125 * e),
                    a.bezierCurveTo(194 * e, 248.53125 * e, 194 * e, 248.53125 * e, 155.5 * e, 249.03125 * e),
                    a.closePath(),
                    he(a, i[0]),
                    Re(a, 160.5 * e, 243.03125 * e, 7 * e),
                    he(a, i[0]),
                    Re(a, 227.5 * e, 242.03125 * e, 7 * e),
                    he(a, i[0]),
                    a.beginPath(),
                    a.lineCap = "round",
                    a.lineJoin = "round",
                    a.moveTo(185.5 * e, 253.03125 * e),
                    a.bezierCurveTo(193.5 * e, 253.03125 * e, 193.5 * e, 253.03125 * e, 201.5 * e, 253.03125 * e),
                    a.bezierCurveTo(201.5 * e, 276.03125 * e, 201.5 * e, 276.03125 * e, 201.5 * e, 299.03125 * e),
                    a.bezierCurveTo(194.5 * e, 299.03125 * e, 194.5 * e, 299.03125 * e, 187.5 * e, 299.03125 * e),
                    a.closePath(),
                    he(a, i[0], i[0], 5 * e),
                    Re(a, 194 * e, 298 * e, 9 * e),
                    he(a, i[0], i[0], 5 * e),
                    a.globalAlpha = 1,
                    a.translate(-10 * e, 10 * e),
                    a.beginPath(),
                    a.lineCap = "round",
                    a.lineJoin = "round",
                    a.moveTo(178.5 * e, 238.03125 * e),
                    a.bezierCurveTo(177 * e, 175.03125 * e, 177 * e, 175.03125 * e, 175.5 * e, 112.03125 * e),
                    a.bezierCurveTo(184.5 * e, 100.53125 * e, 184.5 * e, 100.53125 * e, 193.5 * e, 89.03125 * e),
                    a.bezierCurveTo(202 * e, 100.03125 * e, 202 * e, 100.03125 * e, 210.5 * e, 111.03125 * e),
                    a.bezierCurveTo(209.5 * e, 174.03125 * e, 209.5 * e, 174.03125 * e, 208.5 * e, 237.03125 * e),
                    a.closePath(),
                    he(a, i[3], i[4], 5 * e),
                    a.beginPath(),
                    a.lineCap = "round",
                    a.lineJoin = "round",
                    a.moveTo(155.5 * e, 239.03125 * e),
                    a.bezierCurveTo(194 * e, 238.53125 * e, 194 * e, 238.53125 * e, 232.5 * e, 238.03125 * e),
                    a.bezierCurveTo(232.5 * e, 243.03125 * e, 232.5 * e, 243.03125 * e, 232.5 * e, 248.03125 * e),
                    a.bezierCurveTo(194 * e, 248.53125 * e, 194 * e, 248.53125 * e, 155.5 * e, 249.03125 * e),
                    a.closePath(),
                    he(a, i[1], i[2], 5 * e),
                    Re(a, 160.5 * e, 243.03125 * e, 7 * e),
                    he(a, i[1], i[2], 5 * e),
                    Re(a, 227.5 * e, 242.03125 * e, 7 * e),
                    he(a, i[1], i[2], 5 * e),
                    a.beginPath(),
                    a.lineCap = "round",
                    a.lineJoin = "round",
                    a.moveTo(185.5 * e, 253.03125 * e),
                    a.bezierCurveTo(193.5 * e, 253.03125 * e, 193.5 * e, 253.03125 * e, 201.5 * e, 253.03125 * e),
                    a.bezierCurveTo(201.5 * e, 276.03125 * e, 201.5 * e, 276.03125 * e, 201.5 * e, 299.03125 * e),
                    a.bezierCurveTo(194.5 * e, 299.03125 * e, 194.5 * e, 299.03125 * e, 187.5 * e, 299.03125 * e),
                    a.closePath(),
                    he(a, i[1], i[2], 7 * e),
                    Re(a, 194 * e, 298 * e, 9 * e),
                    he(a, i[1], i[2], 7 * e),
                    n
                }(.15, !0, ["rgba(0, 0, 0, 0)", "#FFFFFF", "#FFFFFF", "#FFFFFF", "#FFFFFF"]))),
                Ie[SPRITE.COUNTER] = [],
                Ie[SPRITE.SLOT_NUMBER] = [];
                for (e = 0; e < WORLD.WITH_BAG + 2; e++)
                    Ie[SPRITE.SLOT_NUMBER][e] = ft(1, "" + (e + 1), 12, "#FFF");
                Ie[SPRITE.RECIPE_BUTTON] = [],
                Ie[SPRITE.RECIPE_BUTTON].push(F(Yn(.12, ["#442F19", "#2C2112", "#C09D6F", "#A37943", "#eda80d"]))),
                Ie[SPRITE.RECIPE_BUTTON].push(F(Yn(.12, ["#553b20", "#3e2f1a", "#d1ad7d", "#b3864c", "#eda80d"], 1))),
                Ie[SPRITE.RECIPE_BUTTON].push(F(Yn(.12, ["#30200f", "#20180c", "#a78559", "#855f2f", "#b37d08"], 1))),
                Ie[SPRITE.CLOCK] = [],
                Ie[SPRITE.CLOCK].push(F(function(e) {
                    var t = window.document.createElement("canvas")
                      , i = t.getContext("2d");
                    return t.width = 321 * e,
                    t.height = 345 * e,
                    i.translate(0, 5 * e),
                    i.translate(0, 20 * e),
                    Re(i, 160.5 * e, 159.5 * e, 156.39595138242822 * e),
                    he(i, "#322413", "#322413", 4 * e),
                    i.translate(0, -20 * e),
                    Re(i, 160.5 * e, 159.5 * e, 156.39595138242822 * e),
                    he(i, "#392C16", "#5E3E1A", 10 * e),
                    i.beginPath(),
                    i.lineCap = "round",
                    i.lineJoin = "round",
                    i.moveTo(31.999969482421875 * e, 163.07290649414062 * e),
                    i.bezierCurveTo(22.999969482421875 * e, 67.07290649414062 * e, 106 * e, 20.072906494140625 * e, 162 * e, 23.072906494140625 * e),
                    i.bezierCurveTo(269.9999694824219 * e, 31.072906494140625 * e, 292.9999694824219 * e, 120.07290649414062 * e, 294.9999694824219 * e, 161.07290649414062 * e),
                    i.bezierCurveTo(165.49996948242188 * e, 162.07290649414062 * e, 165.49996948242188 * e, 162.07290649414062 * e, 35.999969482421875 * e, 163.07290649414062 * e),
                    i.closePath(),
                    he(i, "#12432D"),
                    i.beginPath(),
                    i.lineCap = "round",
                    i.lineJoin = "round",
                    i.moveTo(32.999969482421875 * e, 165.07290649414062 * e),
                    i.bezierCurveTo(16.999969482421875 * e, 221.07290649414062 * e, 85 * e, 289.0729064941406 * e, 156 * e, 294.0729064941406 * e),
                    i.bezierCurveTo(263.9999694824219 * e, 293.0729064941406 * e, 295.9999694824219 * e, 199.07290649414062 * e, 294.9999694824219 * e, 159.07290649414062 * e),
                    i.closePath(),
                    he(i, "#3A2A0D"),
                    Re(i, 161 * e, 158.07290649414062 * e, 133.4053971921676 * e),
                    he(i, void 0, "#5E3E1A", 10 * e),
                    i.beginPath(),
                    i.lineCap = "round",
                    i.lineJoin = "round",
                    i.moveTo(31.999969482421875 * e, 161.62844848632812 * e),
                    i.bezierCurveTo(162.49996948242188 * e, 161.62844848632812 * e, 162.49996948242188 * e, 161.62844848632812 * e, 292.9999694824219 * e, 161.62844848632812 * e),
                    i.closePath(),
                    he(i, void 0, "#5E3E1A", 12 * e),
                    i.translate(0, 8 * e),
                    i.beginPath(),
                    i.lineCap = "round",
                    i.lineJoin = "round",
                    i.moveTo(66 * e, 158.29513549804688 * e),
                    i.bezierCurveTo(86 * e, 158.29513549804688 * e, 86 * e, 158.29513549804688 * e, 106 * e, 158.29513549804688 * e),
                    i.closePath(),
                    he(i, void 0, "#c7a726", 12 * e),
                    i.beginPath(),
                    i.lineCap = "round",
                    i.lineJoin = "round",
                    i.moveTo(57.999969482421875 * e, 117.29513549804688 * e),
                    i.bezierCurveTo(85 * e, 128.29513549804688 * e, 85 * e, 128.29513549804688 * e, 113 * e, 139.29513549804688 * e),
                    i.closePath(),
                    he(i, void 0, "#c7a726", 12 * e),
                    i.beginPath(),
                    i.lineCap = "round",
                    i.lineJoin = "round",
                    i.moveTo(95 * e, 90.29513549804688 * e),
                    i.bezierCurveTo(112 * e, 105.79513549804688 * e, 112 * e, 105.79513549804688 * e, 129 * e, 121.29513549804688 * e),
                    i.closePath(),
                    he(i, void 0, "#c7a726", 12 * e),
                    i.beginPath(),
                    i.lineCap = "round",
                    i.lineJoin = "round",
                    i.moveTo(116 * e, 52.850677490234375 * e),
                    i.bezierCurveTo(130 * e, 83.85067749023438 * e, 130 * e, 83.85067749023438 * e, 144 * e, 114.85067749023438 * e),
                    i.closePath(),
                    he(i, void 0, "#c7a726", 12 * e),
                    i.beginPath(),
                    i.lineCap = "round",
                    i.lineJoin = "round",
                    i.moveTo(159 * e, 61.295135498046875 * e),
                    i.bezierCurveTo(160.49996948242188 * e, 92.29513549804688 * e, 160.49996948242188 * e, 92.29513549804688 * e, 160 * e, 123.29513549804688 * e),
                    i.closePath(),
                    he(i, void 0, "#c7a726", 12 * e),
                    i.beginPath(),
                    i.lineCap = "round",
                    i.lineJoin = "round",
                    i.moveTo(203 * e, 51.295135498046875 * e),
                    i.bezierCurveTo(190.49996948242188 * e, 83.29513549804688 * e, 190.49996948242188 * e, 83.29513549804688 * e, 176 * e, 115.29513549804688 * e),
                    i.closePath(),
                    he(i, void 0, "#c7a726", 12 * e),
                    i.beginPath(),
                    i.lineCap = "round",
                    i.lineJoin = "round",
                    i.moveTo(225 * e, 89.29513549804688 * e),
                    i.bezierCurveTo(210.49996948242188 * e, 104.79513549804688 * e, 210.49996948242188 * e, 104.79513549804688 * e, 194 * e, 120.29513549804688 * e),
                    i.closePath(),
                    he(i, void 0, "#c7a726", 12 * e),
                    i.beginPath(),
                    i.lineCap = "round",
                    i.lineJoin = "round",
                    i.moveTo(266.9999694824219 * e, 112.29513549804688 * e),
                    i.bezierCurveTo(233.49996948242188 * e, 127.29513549804688 * e, 233.49996948242188 * e, 127.29513549804688 * e, 199 * e, 142.29513549804688 * e),
                    i.closePath(),
                    he(i, void 0, "#c7a726", 12 * e),
                    i.beginPath(),
                    i.lineCap = "round",
                    i.lineJoin = "round",
                    i.moveTo(256.9999694824219 * e, 155.29513549804688 * e),
                    i.bezierCurveTo(238.49996948242188 * e, 156.29513549804688 * e, 238.49996948242188 * e, 156.29513549804688 * e, 219 * e, 157.29513549804688 * e),
                    i.closePath(),
                    he(i, void 0, "#c7a726", 12 * e),
                    i.translate(0, -8 * e),
                    i.beginPath(),
                    i.lineCap = "round",
                    i.lineJoin = "round",
                    i.moveTo(66 * e, 158.29513549804688 * e),
                    i.bezierCurveTo(86 * e, 158.29513549804688 * e, 86 * e, 158.29513549804688 * e, 106 * e, 158.29513549804688 * e),
                    i.closePath(),
                    he(i, void 0, "#EDCE4F", 12 * e),
                    i.beginPath(),
                    i.lineCap = "round",
                    i.lineJoin = "round",
                    i.moveTo(57.999969482421875 * e, 117.29513549804688 * e),
                    i.bezierCurveTo(85 * e, 128.29513549804688 * e, 85 * e, 128.29513549804688 * e, 113 * e, 139.29513549804688 * e),
                    i.closePath(),
                    he(i, void 0, "#EDCE4F", 12 * e),
                    i.beginPath(),
                    i.lineCap = "round",
                    i.lineJoin = "round",
                    i.moveTo(95 * e, 90.29513549804688 * e),
                    i.bezierCurveTo(112 * e, 105.79513549804688 * e, 112 * e, 105.79513549804688 * e, 129 * e, 121.29513549804688 * e),
                    i.closePath(),
                    he(i, void 0, "#EDCE4F", 12 * e),
                    i.beginPath(),
                    i.lineCap = "round",
                    i.lineJoin = "round",
                    i.moveTo(116 * e, 52.850677490234375 * e),
                    i.bezierCurveTo(130 * e, 83.85067749023438 * e, 130 * e, 83.85067749023438 * e, 144 * e, 114.85067749023438 * e),
                    i.closePath(),
                    he(i, void 0, "#EDCE4F", 12 * e),
                    i.beginPath(),
                    i.lineCap = "round",
                    i.lineJoin = "round",
                    i.moveTo(159 * e, 61.295135498046875 * e),
                    i.bezierCurveTo(160.49996948242188 * e, 92.29513549804688 * e, 160.49996948242188 * e, 92.29513549804688 * e, 160 * e, 123.29513549804688 * e),
                    i.closePath(),
                    he(i, void 0, "#EDCE4F", 12 * e),
                    i.beginPath(),
                    i.lineCap = "round",
                    i.lineJoin = "round",
                    i.moveTo(203 * e, 51.295135498046875 * e),
                    i.bezierCurveTo(190.49996948242188 * e, 83.29513549804688 * e, 190.49996948242188 * e, 83.29513549804688 * e, 176 * e, 115.29513549804688 * e),
                    i.closePath(),
                    he(i, void 0, "#EDCE4F", 12 * e),
                    i.beginPath(),
                    i.lineCap = "round",
                    i.lineJoin = "round",
                    i.moveTo(225 * e, 89.29513549804688 * e),
                    i.bezierCurveTo(210.49996948242188 * e, 104.79513549804688 * e, 210.49996948242188 * e, 104.79513549804688 * e, 194 * e, 120.29513549804688 * e),
                    i.closePath(),
                    he(i, void 0, "#EDCE4F", 12 * e),
                    i.beginPath(),
                    i.lineCap = "round",
                    i.lineJoin = "round",
                    i.moveTo(266.9999694824219 * e, 112.29513549804688 * e),
                    i.bezierCurveTo(233.49996948242188 * e, 127.29513549804688 * e, 233.49996948242188 * e, 127.29513549804688 * e, 199 * e, 142.29513549804688 * e),
                    i.closePath(),
                    he(i, void 0, "#EDCE4F", 12 * e),
                    i.beginPath(),
                    i.lineCap = "round",
                    i.lineJoin = "round",
                    i.moveTo(256.9999694824219 * e, 155.29513549804688 * e),
                    i.bezierCurveTo(238.49996948242188 * e, 156.29513549804688 * e, 238.49996948242188 * e, 156.29513549804688 * e, 219 * e, 157.29513549804688 * e),
                    i.closePath(),
                    he(i, void 0, "#EDCE4F", 12 * e),
                    i.beginPath(),
                    i.lineCap = "round",
                    i.lineJoin = "round",
                    i.moveTo(94.00003051757812 * e, 164.40341186523438 * e),
                    i.bezierCurveTo(162.50003051757812 * e, 164.40341186523438 * e, 230.00003051757812 * e, 165.40341186523438 * e, 231.00003051757812 * e, 164.40341186523438 * e),
                    i.bezierCurveTo(214.00003051757812 * e, 267.4034118652344 * e, 92.00003051757812 * e, 243.40341186523438 * e, 93.00003051757812 * e, 165.40341186523438 * e),
                    i.closePath(),
                    he(i, "#704618", "#5D3D1A", 8 * e),
                    i.beginPath(),
                    i.lineCap = "round",
                    i.lineJoin = "round",
                    i.moveTo(96 * e, 166 * e),
                    i.bezierCurveTo(88 * e, 117 * e, 129 * e, 92 * e, 161 * e, 91 * e),
                    i.bezierCurveTo(201 * e, 90 * e, 223 * e, 121 * e, 230 * e, 161 * e),
                    i.closePath(),
                    he(i, "#ECBE35", "#EDCE4F", 8 * e),
                    Re(i, 160.00003051757812 * e, 166.49432373046875 * e, 28.30194339616981 * e),
                    he(i, "#392C16", "#5E3E1A", 10 * e),
                    t
                }(.22))),
                Ie[SPRITE.CLOCK].push(F(function(e) {
                    var t = window.document.createElement("canvas")
                      , i = t.getContext("2d");
                    return t.width = 321 * e,
                    t.height = 345 * e,
                    i.translate(0, 5 * e),
                    i.translate(0, 20 * e),
                    Re(i, 160.5 * e, 159.5 * e, 156.39595138242822 * e),
                    he(i, "#322413", "#322413", 4 * e),
                    i.translate(0, -20 * e),
                    Re(i, 160.5 * e, 159.5 * e, 156.39595138242822 * e),
                    he(i, "#392C16", "#5E3E1A", 10 * e),
                    i.beginPath(),
                    i.lineCap = "round",
                    i.lineJoin = "round",
                    i.moveTo(31.999969482421875 * e, 163.07290649414062 * e),
                    i.bezierCurveTo(22.999969482421875 * e, 67.07290649414062 * e, 106 * e, 20.072906494140625 * e, 162 * e, 23.072906494140625 * e),
                    i.bezierCurveTo(269.9999694824219 * e, 31.072906494140625 * e, 292.9999694824219 * e, 120.07290649414062 * e, 294.9999694824219 * e, 161.07290649414062 * e),
                    i.bezierCurveTo(165.49996948242188 * e, 162.07290649414062 * e, 165.49996948242188 * e, 162.07290649414062 * e, 35.999969482421875 * e, 163.07290649414062 * e),
                    i.closePath(),
                    he(i, "#3A2A0D"),
                    i.beginPath(),
                    i.lineCap = "round",
                    i.lineJoin = "round",
                    i.moveTo(32.999969482421875 * e, 165.07290649414062 * e),
                    i.bezierCurveTo(16.999969482421875 * e, 221.07290649414062 * e, 85 * e, 289.0729064941406 * e, 156 * e, 294.0729064941406 * e),
                    i.bezierCurveTo(263.9999694824219 * e, 293.0729064941406 * e, 295.9999694824219 * e, 199.07290649414062 * e, 294.9999694824219 * e, 159.07290649414062 * e),
                    i.closePath(),
                    he(i, "#071A1B"),
                    Re(i, 161 * e, 158.07290649414062 * e, 133.4053971921676 * e),
                    he(i, void 0, "#5E3E1A", 10 * e),
                    i.beginPath(),
                    i.lineCap = "round",
                    i.lineJoin = "round",
                    i.moveTo(31.999969482421875 * e, 161.62844848632812 * e),
                    i.bezierCurveTo(162.49996948242188 * e, 161.62844848632812 * e, 162.49996948242188 * e, 161.62844848632812 * e, 292.9999694824219 * e, 161.62844848632812 * e),
                    i.closePath(),
                    he(i, void 0, "#5E3E1A", 12 * e),
                    i.translate(0, 8 * e),
                    i.beginPath(),
                    i.lineCap = "round",
                    i.lineJoin = "round",
                    i.moveTo(66 * e, 158.29513549804688 * e),
                    i.bezierCurveTo(86 * e, 158.29513549804688 * e, 86 * e, 158.29513549804688 * e, 106 * e, 158.29513549804688 * e),
                    i.closePath(),
                    he(i, void 0, "#281C08", 12 * e),
                    i.beginPath(),
                    i.lineCap = "round",
                    i.lineJoin = "round",
                    i.moveTo(57.999969482421875 * e, 117.29513549804688 * e),
                    i.bezierCurveTo(85 * e, 128.29513549804688 * e, 85 * e, 128.29513549804688 * e, 113 * e, 139.29513549804688 * e),
                    i.closePath(),
                    he(i, void 0, "#281C08", 12 * e),
                    i.beginPath(),
                    i.lineCap = "round",
                    i.lineJoin = "round",
                    i.moveTo(95 * e, 90.29513549804688 * e),
                    i.bezierCurveTo(112 * e, 105.79513549804688 * e, 112 * e, 105.79513549804688 * e, 129 * e, 121.29513549804688 * e),
                    i.closePath(),
                    he(i, void 0, "#281C08", 12 * e),
                    i.beginPath(),
                    i.lineCap = "round",
                    i.lineJoin = "round",
                    i.moveTo(116 * e, 52.850677490234375 * e),
                    i.bezierCurveTo(130 * e, 83.85067749023438 * e, 130 * e, 83.85067749023438 * e, 144 * e, 114.85067749023438 * e),
                    i.closePath(),
                    he(i, void 0, "#281C08", 12 * e),
                    i.beginPath(),
                    i.lineCap = "round",
                    i.lineJoin = "round",
                    i.moveTo(159 * e, 61.295135498046875 * e),
                    i.bezierCurveTo(160.49996948242188 * e, 92.29513549804688 * e, 160.49996948242188 * e, 92.29513549804688 * e, 160 * e, 123.29513549804688 * e),
                    i.closePath(),
                    he(i, void 0, "#281C08", 12 * e),
                    i.beginPath(),
                    i.lineCap = "round",
                    i.lineJoin = "round",
                    i.moveTo(203 * e, 51.295135498046875 * e),
                    i.bezierCurveTo(190.49996948242188 * e, 83.29513549804688 * e, 190.49996948242188 * e, 83.29513549804688 * e, 176 * e, 115.29513549804688 * e),
                    i.closePath(),
                    he(i, void 0, "#281C08", 12 * e),
                    i.beginPath(),
                    i.lineCap = "round",
                    i.lineJoin = "round",
                    i.moveTo(225 * e, 89.29513549804688 * e),
                    i.bezierCurveTo(210.49996948242188 * e, 104.79513549804688 * e, 210.49996948242188 * e, 104.79513549804688 * e, 194 * e, 120.29513549804688 * e),
                    i.closePath(),
                    he(i, void 0, "#281C08", 12 * e),
                    i.beginPath(),
                    i.lineCap = "round",
                    i.lineJoin = "round",
                    i.moveTo(266.9999694824219 * e, 112.29513549804688 * e),
                    i.bezierCurveTo(233.49996948242188 * e, 127.29513549804688 * e, 233.49996948242188 * e, 127.29513549804688 * e, 199 * e, 142.29513549804688 * e),
                    i.closePath(),
                    he(i, void 0, "#281C08", 12 * e),
                    i.beginPath(),
                    i.lineCap = "round",
                    i.lineJoin = "round",
                    i.moveTo(256.9999694824219 * e, 155.29513549804688 * e),
                    i.bezierCurveTo(238.49996948242188 * e, 156.29513549804688 * e, 238.49996948242188 * e, 156.29513549804688 * e, 219 * e, 157.29513549804688 * e),
                    i.closePath(),
                    he(i, void 0, "#281C08", 12 * e),
                    i.translate(0, -8 * e),
                    i.beginPath(),
                    i.lineCap = "round",
                    i.lineJoin = "round",
                    i.moveTo(66 * e, 158.29513549804688 * e),
                    i.bezierCurveTo(86 * e, 158.29513549804688 * e, 86 * e, 158.29513549804688 * e, 106 * e, 158.29513549804688 * e),
                    i.closePath(),
                    he(i, void 0, "#5E3C10", 12 * e),
                    i.beginPath(),
                    i.lineCap = "round",
                    i.lineJoin = "round",
                    i.moveTo(57.999969482421875 * e, 117.29513549804688 * e),
                    i.bezierCurveTo(85 * e, 128.29513549804688 * e, 85 * e, 128.29513549804688 * e, 113 * e, 139.29513549804688 * e),
                    i.closePath(),
                    he(i, void 0, "#5E3C10", 12 * e),
                    i.beginPath(),
                    i.lineCap = "round",
                    i.lineJoin = "round",
                    i.moveTo(95 * e, 90.29513549804688 * e),
                    i.bezierCurveTo(112 * e, 105.79513549804688 * e, 112 * e, 105.79513549804688 * e, 129 * e, 121.29513549804688 * e),
                    i.closePath(),
                    he(i, void 0, "#5E3C10", 12 * e),
                    i.beginPath(),
                    i.lineCap = "round",
                    i.lineJoin = "round",
                    i.moveTo(116 * e, 52.850677490234375 * e),
                    i.bezierCurveTo(130 * e, 83.85067749023438 * e, 130 * e, 83.85067749023438 * e, 144 * e, 114.85067749023438 * e),
                    i.closePath(),
                    he(i, void 0, "#5E3C10", 12 * e),
                    i.beginPath(),
                    i.lineCap = "round",
                    i.lineJoin = "round",
                    i.moveTo(159 * e, 61.295135498046875 * e),
                    i.bezierCurveTo(160.49996948242188 * e, 92.29513549804688 * e, 160.49996948242188 * e, 92.29513549804688 * e, 160 * e, 123.29513549804688 * e),
                    i.closePath(),
                    he(i, void 0, "#5E3C10", 12 * e),
                    i.beginPath(),
                    i.lineCap = "round",
                    i.lineJoin = "round",
                    i.moveTo(203 * e, 51.295135498046875 * e),
                    i.bezierCurveTo(190.49996948242188 * e, 83.29513549804688 * e, 190.49996948242188 * e, 83.29513549804688 * e, 176 * e, 115.29513549804688 * e),
                    i.closePath(),
                    he(i, void 0, "#5E3C10", 12 * e),
                    i.beginPath(),
                    i.lineCap = "round",
                    i.lineJoin = "round",
                    i.moveTo(225 * e, 89.29513549804688 * e),
                    i.bezierCurveTo(210.49996948242188 * e, 104.79513549804688 * e, 210.49996948242188 * e, 104.79513549804688 * e, 194 * e, 120.29513549804688 * e),
                    i.closePath(),
                    he(i, void 0, "#5E3C10", 12 * e),
                    i.beginPath(),
                    i.lineCap = "round",
                    i.lineJoin = "round",
                    i.moveTo(266.9999694824219 * e, 112.29513549804688 * e),
                    i.bezierCurveTo(233.49996948242188 * e, 127.29513549804688 * e, 233.49996948242188 * e, 127.29513549804688 * e, 199 * e, 142.29513549804688 * e),
                    i.closePath(),
                    he(i, void 0, "#5E3C10", 12 * e),
                    i.beginPath(),
                    i.lineCap = "round",
                    i.lineJoin = "round",
                    i.moveTo(256.9999694824219 * e, 155.29513549804688 * e),
                    i.bezierCurveTo(238.49996948242188 * e, 156.29513549804688 * e, 238.49996948242188 * e, 156.29513549804688 * e, 219 * e, 157.29513549804688 * e),
                    i.closePath(),
                    he(i, void 0, "#5E3C10", 12 * e),
                    i.beginPath(),
                    i.lineCap = "round",
                    i.lineJoin = "round",
                    i.moveTo(96 * e, 166 * e),
                    i.bezierCurveTo(88 * e, 117 * e, 129 * e, 92 * e, 161 * e, 91 * e),
                    i.bezierCurveTo(201 * e, 90 * e, 223 * e, 121 * e, 230 * e, 161 * e),
                    i.closePath(),
                    he(i, "#704618", "#5D3D1A", 8 * e),
                    i.beginPath(),
                    i.lineCap = "round",
                    i.lineJoin = "round",
                    i.moveTo(94.00003051757812 * e, 164.40341186523438 * e),
                    i.bezierCurveTo(162.50003051757812 * e, 164.40341186523438 * e, 230.00003051757812 * e, 165.40341186523438 * e, 231.00003051757812 * e, 164.40341186523438 * e),
                    i.bezierCurveTo(214.00003051757812 * e, 267.4034118652344 * e, 92.00003051757812 * e, 243.40341186523438 * e, 93.00003051757812 * e, 165.40341186523438 * e),
                    i.closePath(),
                    he(i, "#E1DDD5", "#EAE7E4", 8 * e),
                    Re(i, 160.00003051757812 * e, 166.49432373046875 * e, 28.30194339616981 * e),
                    he(i, "#392C16", "#5E3E1A", 10 * e),
                    t
                }(.22))),
                Ie[SPRITE.ARROW_CLOCK] = F(function(e) {
                    var t = window.document.createElement("canvas")
                      , i = t.getContext("2d");
                    return t.width = 321 * e,
                    t.height = 345 * e,
                    i.translate(0, 5 * e),
                    Re(i, 161.00003051757812 * e, 165.40341186523438 * e, 20.808652046684813 * e),
                    he(i, "#C09D6F", "#A37943", 10 * e),
                    i.beginPath(),
                    i.lineCap = "round",
                    i.lineJoin = "round",
                    i.moveTo(162.00003051757812 * e, 48.403411865234375 * e),
                    i.bezierCurveTo(172.50003051757812 * e, 67.40341186523438 * e, 172.50003051757812 * e, 67.40341186523438 * e, 183.00003051757812 * e, 86.40341186523438 * e),
                    i.bezierCurveTo(160.50003051757812 * e, 86.40341186523438 * e, 160.50003051757812 * e, 86.40341186523438 * e, 138.00003051757812 * e, 86.40341186523438 * e),
                    i.closePath(),
                    he(i, "#C09D6F", "#A37943", 10 * e),
                    i.save(),
                    i.translate(161.50003051757812 * e, 117.90341186523438 * e),
                    ye(i, -5.5 * e, -37.5 * e, 11 * e, 75 * e, 10 * e),
                    i.restore(),
                    he(i, "#C09D6F", "#A37943", 10 * e),
                    i.save(),
                    i.translate(162.00003051757812 * e, 78.90341186523438 * e),
                    ye(i, -10 * e, -5.5 * e, 20 * e, 11 * e, 1 * e),
                    i.restore(),
                    he(i, "#C09D6F"),
                    Re(i, 161.00003051757812 * e, 163.6761474609375 * e, 17.08800749063506 * e),
                    he(i, "#C09D6F"),
                    t
                }(.22)),
                Ie[SPRITE.OPTION_BUTTON] = [],
                Ie[SPRITE.OPTION_BUTTON].push(F(Oe(1.5, ["#795026", "#654320", "#eda80d"], 0))),
                Ie[SPRITE.OPTION_BUTTON].push(F(Oe(1.5, ["#8f5e2c", "#7a5126", "#eda80d"], 1))),
                Ie[SPRITE.OPTION_BUTTON].push(F(Oe(1.5, ["#67441f", "#573819", "#9c6e08"], 1))),
                Ie[SPRITE.MICROPHONE] = P.MICROPHONE,
                Ie[SPRITE.AUTO_FEED] = P.AUTO_FEED,
                Ie[SPRITE.BANDAGE_ACTIVATED] = P.BANDAGE_ACTIVATED,
                Ie[SPRITE.STOP_REGENERATION] = P.STOP_REGENERATION,
                Ie[SPRITE.STOP_REGENERATION_BLIZZARD] = P.STOP_REGENERATION_BLIZZARD,
                Ie[SPRITE.RECONNECT] = ft(1, "Take ss dog ;D", 30, "#FFF")
            }
            function Un() {
                var e = YT.time;
                if (Ie[SPRITE.HERB] && (C.drawImage(Ie[SPRITE.HERB][e][1], M + 480, Y + 190),
                C.drawImage(Ie[SPRITE.HERB][e][2], M + 180, Y - 430),
                C.drawImage(Ie[SPRITE.HERB][e][1], M - 855, Y + 100),
                C.drawImage(Ie[SPRITE.HERB][e][0], M - 550, Y - 300),
                C.drawImage(Ie[SPRITE.HERB][e][0], M - 1020, Y - 520)),
                Ie[ItemType.STONE] && (C.drawImage(Ie[ItemType.STONE][e][1], M - 80, Y - 640),
                C.drawImage(Ie[ItemType.STONE][e][1], M + 80, Y + 490),
                C.drawImage(Ie[ItemType.STONE][e][2], M - 180, Y - 700),
                C.drawImage(Ie[ItemType.STONE][e][0], M + 550, Y + 100),
                C.drawImage(Ie[ItemType.STONE][e][1], M + 450, Y + 300),
                C.drawImage(Ie[ItemType.STONE][e][1], M + 780, Y + 300),
                C.drawImage(Ie[ItemType.STONE][e][2], M + 980, Y + 200),
                C.drawImage(Ie[ItemType.STONE][e][2], M + 680, Y + 600),
                C.drawImage(Ie[ItemType.STONE][e][2], M - 380, Y + 100),
                C.drawImage(Ie[ItemType.STONE][e][2], M + 280, Y + 250)),
                Ie[ItemType.BERRY] && (C.drawImage(Ie[ItemType.BERRY][e][0], M - 590, Y),
                C.drawImage(Ie[ItemType.BERRY][e][0], M + 120, Y - 390),
                C.drawImage(Ie[ItemType.BERRY][e][0], M - 270, Y + 340)),
                Ie[ItemType.WOOD] && (C.drawImage(Ie[ItemType.WOOD][e][4], M - 700, Y - 600),
                C.drawImage(Ie[ItemType.WOOD][e][2], M - 970, Y - 250),
                C.drawImage(Ie[ItemType.WOOD][e][5], M - 720, Y - 200),
                C.drawImage(Ie[ItemType.WOOD][e][2], M - 1020, Y + 340),
                C.drawImage(Ie[ItemType.WOOD][e][0], M - 1120, Y - 0),
                C.drawImage(Ie[ItemType.WOOD][e][1], M - 650, Y - 330),
                C.drawImage(Ie[ItemType.WOOD][e][4], M - 495, Y - 90),
                C.drawImage(Ie[ItemType.WOOD][e][3], M - 520, Y + 340),
                C.drawImage(Ie[ItemType.WOOD][e][2], M + 830, Y - 520)),
                user && world) {
                    var t = user.cam.x
                      , i = user.cam.y;
                    user.cam.x = M,
                    user.cam.y = Y;
                    var n = world.time;
                    world.time = YT.time;
                    var a, I = YT.items;
                    I[2].x = 400,
                    I[2].y = 100,
                    I[2].draw(ItemType.WORKBENCH),
                    (a = I[1]).x = -500,
                    a.y = 100,
                    a.fruits[0].x = a.x - 20.5,
                    a.fruits[0].y = a.y - 22.5,
                    a.fruits[1].x = a.x - 35.5,
                    a.fruits[1].y = a.y + 7.5,
                    a.fruits[2].x = a.x + 7.5,
                    a.fruits[2].y = a.y - 30,
                    a.fruits[3].x = a.x + 22.5,
                    a.fruits[3].y = a.y,
                    a.fruits[4].x = a.x - 7.5,
                    a.fruits[4].y = a.y + 14.5;
                    for (var T = 0; T < a.info; T++)
                        a.fruits[T].draw(SPRITE.FRUIT);
                    (a = I[3]).x = 210,
                    a.y = -290,
                    a.fruits[0].x = a.x - 20.5,
                    a.fruits[0].y = a.y - 22.5,
                    a.fruits[1].x = a.x - 35.5,
                    a.fruits[1].y = a.y + 7.5,
                    a.fruits[2].x = a.x + 7.5,
                    a.fruits[2].y = a.y - 30,
                    a.fruits[3].x = a.x + 22.5,
                    a.fruits[3].y = a.y,
                    a.fruits[4].x = a.x - 7.5,
                    a.fruits[4].y = a.y + 14.5;
                    for (T = 0; T < a.info; T++)
                        a.fruits[T].draw(SPRITE.FRUIT);
                    I[0].x = 450,
                    I[0].y = -100,
                    I[0].draw_bg(ItemType.FIRE),
                    I[0].draw_fg(),
                    user.cam.x = t,
                    user.cam.y = i,
                    world.time = n
                }
            }
            let Xn = []
              , qn = [];
            function drawCtxImage(e, t, i, n, a, I, T, o, r, d) {
                if(settings.Xray.enabled) e.globalAlpha = settings.Xray.o
                void 0 !== t.tryLoad && 1 !== t.tryLoad() || (void 0 !== d ? e.drawImage(t, i, n, window.Math.max(1, a), window.Math.max(1, I), T, o, r, d) : void 0 !== I ? e.drawImage(t, i, n, a, I) : e.drawImage(t, i, n))
            }
            function jn() {
                var e = game.info_box
                  , t = e.id;
                1 === e.activated && 1 === e.display && (void 0 === Xn[t] && (Xn[t] = function(e) {
                    var t = window.document.createElement("canvas")
                      , i = t.getContext("2d")
                      , n = te[e];
                    i.font = "20px Baloo Paaji";
                    var a = 0;
                    for (n.length >= 1 && (a = window.Math.max(0, i.measureText(n[0]).width)),
                    i.font = "17px Baloo Paaji",
                    n.length >= 2 && (a = window.Math.max(a, i.measureText(n[1]).width)),
                    i.font = "14px Baloo Paaji",
                    ne = 2; ne < n.length; ne++)
                        a = window.Math.max(a, i.measureText(n[ne]).width);
                    var I = a + 35
                      , T = 0;
                    if (T = 1 === n.length ? 55 : 2 === n.length ? 85 : 26 * (n.length - 2) + 85,
                    t.width = I,
                    t.height = T,
                    ye(i, 0, 0, I, T, 10),
                    i.fillStyle = "#000000",
                    i.globalAlpha = .5,
                    i.fill(),
                    n.length >= 1 && (i.textBaseline = "middle",
                    i.font = "20px Baloo Paaji",
                    i.globalAlpha = 1,
                    i.fillStyle = "#e2c340",
                    i.fillText(n[0], 15, 28)),
                    n.length >= 2 && (i.font = "17px Baloo Paaji",
                    i.fillStyle = "#ffffff",
                    i.fillText(n[1], 15, 55),
                    T = 55),
                    n.length >= 3)
                        for (i.font = "14px Baloo Paaji",
                        i.globalAlpha = .7,
                        ne = 2; ne < n.length; ne++)
                            i.fillText(n[ne], 15, T + 28),
                            T += 26;
                    return t
                }(t)),
                1 === e.craft ? drawCtxImage(C, Xn[t], e.x, e.y) : e.x - 80 + Xn[t].width > L ? drawCtxImage(C, Xn[t], L - Xn[t].width - 10, e.y - Xn[t].height - 10) : drawCtxImage(C, Xn[t], e.x - 80, e.y - Xn[t].height - 10))
            }
            function $n(e, t, i) {
                var n = Ie[SPRITE.SLOT_NUMBER][e]
                  , a = t.info.translate.x + 5 * K
                  , I = t.info.translate.y + 5 * K;
                (t.info.state == PT || i) && (I += 5 * K),
                drawCtxImage(C, n, a, I)
            }
            function Zn(e, t) {
                Ie[SPRITE.COUNTER][e] || (Ie[SPRITE.COUNTER][e] = ft(K, "x" + e, 17, "#FFF"));
                var i = Ie[SPRITE.COUNTER][e]
                  , n = t.info.translate.x + t.info.img[0].width - i.width - 14 * K
                  , a = t.info.translate.y + t.info.img[0].height - i.height - 19 * K;
                t.info.state == PT && (a += 5 * K),
                drawCtxImage(C, i, n, a)
            }
            function Jn() {
                if (!(user.よミ山にハねもんモロ.open || user.furnace.open || user.windmill.open || user.extractor.open)) {
                    user.bread_oven.open = !1;
                    var e = world.fast_units[user.id]
                      , t = WORLD.DIST_BREAD_OVEN;
                    if (e) {
                        for (var i = 0; i < world.units[ITEMS.BREAD_OVEN].length; i++) {
                            var n = world.units[ITEMS.BREAD_OVEN][i]
                              , a = N.dist(n, e);
                            a < t && (t = a,
                            user.bread_oven.open = !0,
                            user.bread_oven.amount_wood = 31 & n.info,
                            user.bread_oven.amount_flour = (992 & n.info) >> 5,
                            user.bread_oven.amount_bread = (31744 & n.info) >> 10,
                            user.bread_oven.pid = n.pid)
                        }
                        if (t < WORLD.DIST_BREAD_OVEN) {
                            var I = Ie[SPRITE.BREAD_OVEN_UI]
                              , T = (o = game.bread_oven_wood_button).info.translate.x - 32;
                            if (drawCtxImage(C, I, T, 0),
                            user.bread_oven.amount_wood > 0)
                                o.draw(C),
                                (r = user.bread_oven.amount_wood) > 1 && Zn(r, o);
                            var o = game.bread_oven_bread_button;
                            if (user.bread_oven.amount_bread > 0)
                                o.draw(C),
                                (r = user.bread_oven.amount_bread) > 1 && Zn(r, o);
                            var r;
                            o = game.bread_oven_flour_button;
                            if (user.bread_oven.amount_flour > 0)
                                o.draw(C),
                                (r = user.bread_oven.amount_flour) > 1 && Zn(r, o)
                        }
                    }
                }
            }
            function Qn() {
                if (!user.よミ山にハねもんモロ.open && !user.furnace.open) {
                    user.extractor.open = !1;
                    var e = world.fast_units[user.id]
                      , t = WORLD.DIST_EXTRACTOR_MACHINE;
                    if (e) {
                        for (var i = 0; i < bT.length; i++)
                            for (var n = bT[i][0], a = bT[i][1], I = 0; I < world.units[n].length; I++) {
                                var T = world.units[n][I]
                                  , o = N.dist(T, e);
                                o < t && (t = o,
                                user.extractor.mineral = a,
                                user.extractor.type = n,
                                user.extractor.open = !0,
                                user.extractor.amount_wood = 255 & T.info,
                                user.extractor.amount_mineral = (65280 & T.info) >> 8,
                                user.extractor.pid = T.pid)
                            }
                        if (t < WORLD.DIST_EXTRACTOR_MACHINE) {
                            var r, d = Ie[SPRITE.EXTRACTOR_CASES], s = (h = game.extractor_wood_button).info.translate.x - 33;
                            if (drawCtxImage(C, d, s, 0),
                            user.extractor.amount_wood > 0)
                                h.draw(C),
                                (r = user.extractor.amount_wood) > 1 && Zn(r, h);
                            switch (user.extractor.mineral) {
                            case ItemType.STONE:
                                var h = game.extractor_stone_button;
                                break;
                            case ItemType.GOLD:
                                h = game.extractor_gold_button;
                                break;
                            case ItemType.DIAMOND:
                                h = game.extractor_diamond_button;
                                break;
                            case ItemType.AMETHYST:
                                h = game.extractor_amethyst_button;
                                break;
                            case ItemType.REIDITE:
                                h = game.extractor_reidite_button
                            }
                            if (user.extractor.amount_mineral > 0)
                                h.draw(C),
                                (r = user.extractor.amount_mineral) > 1 && Zn(r, h)
                        }
                    }
                }
            }
            function ea() {
                if (!user.よミ山にハねもんモロ.open && !user.furnace.open) {
                    user.windmill.open = !1;
                    var e = world.fast_units[user.id]
                      , t = WORLD.DIST_WINDMILL;
                    if (e) {
                        for (var i = 0; i < world.units[ITEMS.WINDMILL].length; i++) {
                            var n = world.units[ITEMS.WINDMILL][i]
                              , a = N.dist(n, e);
                            a < t && (t = a,
                            user.windmill.open = !0,
                            user.windmill.amount_wheat = 255 & n.info,
                            user.windmill.amount_flour = (65280 & n.info) >> 8,
                            user.windmill.pid = n.pid)
                        }
                        if (t < WORLD.DIST_WINDMILL) {
                            var I = Ie[SPRITE.WINDMILL_CASES]
                              , T = (r = game.windmill_wheat_button).info.translate.x - 33;
                            if (drawCtxImage(C, I, T, 0),
                            user.windmill.amount_wheat > 0)
                                r.draw(C),
                                (o = user.windmill.amount_wheat) > 1 && Zn(o, r);
                            var o, r = game.windmill_flour_button;
                            if (user.windmill.amount_flour > 0)
                                r.draw(C),
                                (o = user.windmill.amount_flour) > 1 && Zn(o, r)
                        }
                    }
                }
            }
            function ta() {
                if (!user.よミ山にハねもんモロ.open) {
                    user.furnace.amount = 0,
                    user.furnace.open = !1;
                    var e = world.fast_units[user.id]
                      , t = WORLD.DIST_FURNACE;
                    if (e) {
                        for (var i = 0; i < world.units[ITEMS.FURNACE].length; i++) {
                            var n = world.units[ITEMS.FURNACE][i]
                              , a = N.dist(n, e);
                            a < t && (t = a,
                            user.furnace.open = !0,
                            user.furnace.amount = n.info,
                            user.furnace.pid = n.pid)
                        }
                        if (t < WORLD.DIST_FURNACE) {
                            var I = Ie[SPRITE.FURNACE_SLOT]
                              , T = game.furnace_button
                              , o = window.Math.floor(T.info.translate.x + (T.info.img[0].width - I.width) / 2)
                              , r = window.Math.floor(T.info.translate.y + (T.info.img[0].height - I.height) / 2) + 3;
                            if (drawCtxImage(C, I, o, r),
                            user.furnace.amount > 0) {
                                T.draw(C);
                                var d = user.furnace.amount;
                                d > 1 && Zn(d, T)
                            }
                        }
                    }
                }
            }
            function ia() {
                user.resurrection.open = !1;
                var e = world.fast_units[user.id]
                  , t = WORLD.DIST_RESURRECTION;
                if (e) {
                    for (var i = 0; i < world.units[ITEMS.RESURRECTION].length; i++) {
                        var n = world.units[ITEMS.RESURRECTION][i]
                          , a = N.dist(n, e);
                        a < t && (t = a,
                        user.resurrection.open = !0,
                        user.resurrection.pid = n.pid)
                    }
                    t < WORLD.DIST_RESURRECTION && game.resurrection.draw(C)
                }
            }
            function na() {
                if (user.totem.id = -1,
                user.totem.pid = -1,
                !user.totem.wait && !user.zombie) {
                    var e = world.fast_units[user.id]
                      , t = WORLD.DIST_TOTEM;
                    if (e)
                        for (var i = 0; i < world.units[ITEMS.TOTEM].length; i++) {
                            var n = world.units[ITEMS.TOTEM][i]
                              , a = N.dist(n, e);
                            a < t && (t = a,
                            user.totem.id = n.id,
                            user.totem.pid = n.pid,
                            user.totem.info = n.info,
                            user.totem.lock = n.info)
                        }
                    var I = game.team_buttons_id;
                    game.team_buttons_id = -1,
                    -1 == user.totem.pid || 0 != user.team.length && user.id != user.totem.pid ? 0 != user.team.length && user.team[0] != user.id ? game.team_buttons_id = CLIENT.TEAM_LEAVE : 0 != user.team.length && user.team[0] == user.id ? game.team_buttons_id = CLIENT.TEAM_SHOW : 0 != user.team.length && (game.team_buttons_id = CLIENT.TEAM_JOIN) : 0 == user.team.length && user.totem.info ? game.team_buttons_id = CLIENT.TEAM_FULL : 0 == user.team.length ? game.team_buttons_id = CLIENT.TEAM_JOIN : game.team_buttons_id = CLIENT.TEAM_MANAGE,
                    -1 != game.team_buttons_id && game.team_buttons[game.team_buttons_id].button.draw(C);
                    var T = window.document.getElementById("team_box").style;
                    -1 != game.team_buttons_id && game.team_buttons_id != I && "inline-block" == T.display && game.team_buttons[game.team_buttons_id].action()
                }
            }
            function aa() {
                user.よミ山にハねもんモロ.id = -1,
                user.よミ山にハねもんモロ.lock = !1,
                user.よミ山にハねもんモロ.locked = !1,
                user.よミ山にハねもんモロ.lockpick = !1,
                user.よミ山にハねもんモロ.padlock = !1,
                user.よミ山にハねもんモロ.open = !1;
                var e = world.fast_units[user.id]
                  , t = WORLD.DIST_CHEST;
                if (e) {
                    for (var i = 0; i < world.units[ITEMS.CHEST].length; i++) {
                        var n = world.units[ITEMS.CHEST][i]
                          , a = N.dist(n, e);
                        a < t && (t = a,
                        user.よミ山にハねもんモロ.open = !0,
                        user.よミ山にハねもんモロ.id = n.extra,
                        user.よミ山にハねもんモロ.amount = n.info,
                        user.よミ山にハねもんモロ.pid = n.pid,
                        user.よミ山にハねもんモロ.locked = n.lock,
                        user.よミ山にハねもんモロ.lock = !(!n.lock || user.id == n.pid || user.in_team(n.pid)),
                        user.よミ山にハねもんモロ.padlock = n.pid === user.id && !user.よミ山にハねもんモロ.locked && -1 != user.inv.find_item(ItemType.LOCK),
                        user.よミ山にハねもんモロ.locked && -1 != user.inv.find_item(ItemType.LOCK_PICK) && (user.よミ山にハねもんモロ.lockpick = !0))
                    }
                    if (t < WORLD.DIST_CHEST) {
                        var I = Ie[SPRITE.CHEST_SLOT]
                          , T = game.chest_buttons[ItemType.STONE_SWORD]
                          , o = window.Math.floor(T.info.translate.x + (T.info.img[0].width - I.width) / 2)
                          , r = window.Math.floor(T.info.translate.y + (T.info.img[0].height - I.height) / 2) + 3;
                        if (drawCtxImage(C, I, o, r),
                        (!user.よミ山にハねもんモロ.lock || user.よミ山にハねもんモロ.pid === user.id) && user.よミ山にハねもんモロ.id >= 1) {
                            (T = game.chest_buttons[user.よミ山にハねもんモロ.id]).draw(C);
                            var d = user.よミ山にハねもんモロ.amount;
                            d > 1 && Zn(d, T)
                        }
                        user.よミ山にハねもんモロ.lock ? game.chest_locked.draw(C) : user.よミ山にハねもんモロ.padlock && game.chest_padlock.draw(C),
                        user.よミ山にハねもんモロ.lockpick && game.chest_lockpick.draw(C)
                    }
                }
            }
            function Ia() {
                if (user.bigmap) {
                    C.globalAlpha = .5,
                    C.fillStyle = "#000000",
                    C.fillRect(0, 0, L, B),
                    C.globalAlpha = .8;
                    var e = Ie[SPRITE.BIGMAP][world.time]
                      , t = M - e.width / 2
                      , i = Y - e.height / 2;
                    drawCtxImage(C, e, t, i),
                    C.globalAlpha = 1,
                    game.minimap.marker.x > -1 && (C.fillStyle = "#660000",
                    Re(C, t + 3 * game.minimap.marker.x * K, i + 3 * game.minimap.marker.y * K, 14 * K),
                    C.fill());
                    for (var n = game.minimap.チとモやせタ月ヒけニ, a = 0; a < n.length; a++) {
                        var I = n[a];
                        C.fillStyle = (world.time,
                        "#ff0000"),
                        Re(C, t + I.x / (100 * world.nw) * 600 * K, i + I.y / (100 * world.nh) * 600 * K, 6 * K),
                        C.fill()
                    }
                    var T = world.fast_units[user.id];
                    T && (C.fillStyle = world.time ? "#ffffff" : "#e39716",
                    Re(C, t + T.x / (100 * world.nw) * 600 * K, i + T.y / (100 * world.nh) * 600 * K, 12 * K),
                    C.fill())
                }
            }
            function Ta() {
                if (user.reconnect.enabled) {
                    C.globalAlpha = .9,
                    C.fillStyle = "#000000",
                    ye(C, M - 150, Y - 90, 300, 180, 15),
                    C.fill(),
                    C.globalAlpha = 1;
                    var e = Ie[SPRITE.GEAR2];
                    C.save(),
                    user.reconnect.rotate = (user.reconnect.rotate + 2 * zT) % a,
                    C.translate(L / 2, B / 2 - 25),
                    C.rotate(user.reconnect.rotate),
                    drawCtxImage(C, e, -e.width / 2, -e.height / 2),
                    C.restore();
                    e = Ie[SPRITE.RECONNECT];
                    drawCtxImage(C, e, (L - e.width) / 2, (B - e.height) / 2 + 25)
                }
            }
            function oa() {
                if (user.inv.can_select.length > 0)
                    var e = {
                        x: game.minimap.translate.x,
                        y: game.minimap.translate.y - 120 * K
                    };
                else
                    e = {
                        x: game.minimap.translate.x,
                        y: game.minimap.translate.y - 50 * K
                    };
                C.globalAlpha = .8;
                var t = Ie[SPRITE.MINIMAP][world.time];
                drawCtxImage(C, t, e.x, e.y),
                C.globalAlpha = 1,
                game.minimap.marker.x > -1 && (C.fillStyle = "#660000",
                Re(C, e.x + game.minimap.marker.x * K, e.y + game.minimap.marker.y * K, 5 * K),
                C.fill());
                for (var i = K, n = game.minimap.チとモやせタ月ヒけニ, a = 0; a < n.length; a++) {
                    var I = n[a];
                    C.fillStyle = "#ff0000",
                    Re(C, e.x + I.x / (100 * world.nw) * 193 * K, e.y + I.y / (100 * world.nh) * 193 * K, 2 * K),
                    C.fill()
                }
                var T = world.fast_units[user.id];
                T && (C.fillStyle = world.time ? "#ffffff" : "#e39716",
                Re(C, e.x + T.x / (100 * world.nw) * 193 * K, e.y + T.y / (100 * world.nh) * 193 * K, 4 * K),
                C.fill()),
                K = i
            }
            var ra = [];
            function da() {
                var e = -8;
                if (user.auto_feed.enabled) {
                    var t = Ie[SPRITE.AUTO_FEED];
                    drawCtxImage(C, t, user.auto_feed.translate.x, user.auto_feed.translate.y + e),
                    e += 70
                }
                if (1 === user.blizzard) {
                    t = Ie[SPRITE.STOP_REGENERATION_BLIZZARD];
                    drawCtxImage(C, t, user.auto_feed.translate.x, user.auto_feed.translate.y + e),
                    e += 70
                } else if (user.gauges.cold.x < .25 || user.gauges.hunger.x < .25 || user.gauges.thirst.x < .25 || user.gauges.oxygen.x < .25 || user.gauges.warm.x < .25) {
                    t = Ie[SPRITE.STOP_REGENERATION];
                    drawCtxImage(C, t, user.auto_feed.translate.x, user.auto_feed.translate.y + e),
                    e += 70
                }
                if (C.save(),
                C.font = "30px Baloo Paaji",
                C.strokeStyle = "black",
                C.lineWidth = 7,
                C.strokeText(window.fpsdata + " FPS", user.auto_feed.translate.x + -120, user.auto_feed.translate.y + -50),
                C.fillStyle = "white",
                C.fillText(window.fpsdata + " FPS", user.auto_feed.translate.x + -120, user.auto_feed.translate.y + -50),
                C.restore(),
                C.save(),
                C.font = "30px Baloo Paaji",
                C.strokeStyle = "black",
                C.lineWidth = 7,
                C.strokeText(i + " Ping", user.auto_feed.translate.x + -120, user.auto_feed.translate.y - 20),
                C.fillStyle = "white",
                C.fillText(i + " Ping", user.auto_feed.translate.x + -120, user.auto_feed.translate.y - 20),
                C.restore(),
                user.bandage > 0) {
                    t = Ie[SPRITE.BANDAGE_ACTIVATED];
                    drawCtxImage(C, t, user.auto_feed.translate.x, user.auto_feed.translate.y + e);
                    var n = ra[user.bandage];
                    void 0 === n && (n = ft(K, user.bandage + "", 30, "#FDFDFD", null, null, null, null, null, "#C8BBBF", 6),
                    ra[user.bandage] = n),
                    user.bandage < 9 ? drawCtxImage(C, n, user.auto_feed.translate.x - 39, user.auto_feed.translate.y + e + 20) : drawCtxImage(C, n, user.auto_feed.translate.x - 46, user.auto_feed.translate.y + e + 20)
                }
            }
            function sa() {
                var e = user.ldb
                  , t = game.leaderboard;
                let i = "#FFF";
                if (e.update) {
                    e.update = !1;
                    var n = e.ids
                      , a = t.can.width
                      , I = t.can.height
                      , T = t.ctx
                      , o = world.チとモやせタ月ヒけニ
                      , r = !1;
                    T.clearRect(0, 0, a, I),
                    T.drawImage(t.img, 0, 0);
                    for (var d = 0; d < n.length; d++) {
                        var s = o[n[d]];
                        world.つせウ小り六ぬオキニ === WORLD.MODE_ZOMBIES && s.skin === WORLD.ZOMBIE_SKIN || (n[d] == user.id ? (r = !0,
                        i = world.つせウ小り六ぬオキニ === WORLD.MODE_VAMPIRES && s.skin === WORLD.VAMPIRE_SKIN ? "#FF0000" : "#FFF") : i = world.つせウ小り六ぬオキニ === WORLD.MODE_VAMPIRES && s.skin === WORLD.VAMPIRE_SKIN ? "#990000" : "#A1BDCD",
                        T.drawImage(ft(K, "" + (d + 1), 15 * K, i), 20 * K, (40 + 22 * d) * K),
                        s && !s.ldb_label && (s.ldb_label = ft(K, s.nickname, 15 * K, i, void 0, void 0, void 0, void 0, 110 * K)),
                        T.drawImage(s.ldb_label, 39 * K, (40 + 22 * d) * K),
                        T.drawImage(ft(K, N.simplify_number(s.score), 15 * K, i), 156 * K, (40 + 22 * d) * K))
                    }
                    r || (T.drawImage(Ie[SPRITE.YOUR_SCORE], 15 * K, (46 + 22 * d) * K),
                    T.drawImage(ft(K, N.simplify_number(world.チとモやせタ月ヒけニ[user.id].score), 15 * K, "#FFF"), 100 * K, (46 + 22 * d) * K))
                }
                drawCtxImage(C, t.can, t.translate.x, t.translate.y)
            }
            function ha() {
                var e = user.totem;
                if (e.wait) {
                    var t = e.timeout.update();
                    C.save();
                    var i = Ie[SPRITE.DELAY_TEAM]
                      , n = Ie[SPRITE.DELAY_WEAPON].height + 25 * K;
                    C.translate(i.width, game.gauges.translate.y - 188 * K - n);
                    var I = -i.width / 2 - 2
                      , T = -i.height / 2 - 4;
                    drawCtxImage(C, i, I + 2, T),
                    C.beginPath(),
                    C.lineWidth = 5 * K,
                    C.strokeStyle = SPRITE.WEAPON_LOADING[world.time],
                    C.lineCap = "round",
                    C.arc(0, T + i.height / 2, 25 * K, 0, a * e.timeout.v),
                    C.stroke(),
                    C.restore(),
                    t && (e.wait = !1,
                    e.timeout.v = 0,
                    e.timeout.o = !1)
                }
            }
            function ya() {
                var e = world.clock
                  , t = Ie[SPRITE.CLOCK][world.time];
                drawCtxImage(C, t, e.translate.x, e.translate.y),
                C.save(),
                C.translate(e.translate.x + t.width / 2, e.translate.y + t.height / 2),
                world.clock.now = ((new window.Date).getTime() - e.init + e.hour) % WORLD.DAY;
                var i = a * world.clock.now / WORLD.DAY - window.Math.PI / 2;
                C.rotate(i),
                drawCtxImage(C, Ie[SPRITE.ARROW_CLOCK], -t.width / 2, -t.height / 2),
                C.restore()
            }
            function Ra() {
                var e = user.す人八ウメユそしテく;
                if (e.wait) {
                    var t = e.timeout.update();
                    C.save();
                    var i = Ie[SPRITE.DELAY_WALL];
                    C.translate(i.width - 12 * K, game.gauges.translate.y - 190 * K);
                    var n = -i.width / 2 + 9
                      , I = -i.height / 2 - 4;
                    drawCtxImage(C, i, n, I),
                    C.beginPath(),
                    C.lineWidth = 5 * K,
                    C.strokeStyle = SPRITE.HELMET_LOADING[world.time],
                    C.lineCap = "round",
                    C.arc(9, I + i.height / 2, 25 * K, 0, a * e.timeout.v),
                    C.stroke(),
                    C.restore(),
                    t && (e.wait = !1,
                    e.timeout.v = 0,
                    e.timeout.o = !1)
                }
            }
            function Ea() {
                var e = user.helmet;
                if (e.wait) {
                    var t = e.timeout.update();
                    C.save();
                    var i = Ie[SPRITE.DELAY_HELMET];
                    C.translate(i.width - 2 * K, game.gauges.translate.y - 125 * K);
                    var n = -i.width / 2 + 10
                      , I = -i.height / 2 - 4;
                    drawCtxImage(C, i, n, I),
                    C.beginPath(),
                    C.lineWidth = 5 * K,
                    C.strokeStyle = SPRITE.HELMET_LOADING[world.time],
                    C.lineCap = "round",
                    C.arc(9, I + i.height / 2, 25 * K, 0, a * e.timeout.v),
                    C.stroke(),
                    C.restore(),
                    t && (e.wait = !1,
                    e.timeout.v = 0,
                    e.timeout.o = !1)
                }
            }
            function ma() {
                var e = user.weapon;
                if (e.wait) {
                    var t = e.timeout.update();
                    C.save();
                    var i = Ie[SPRITE.DELAY_WEAPON];
                    C.translate(i.width - 2 * K, game.gauges.translate.y - 60 * K);
                    var n = -i.width / 2 - 2
                      , I = -i.height / 2 - 4;
                    drawCtxImage(C, i, n, I),
                    C.beginPath(),
                    C.lineWidth = 5 * K,
                    C.strokeStyle = SPRITE.WEAPON_LOADING[world.time],
                    C.lineCap = "round",
                    C.arc(0, I + i.height / 2, 25 * K, 0, a * e.timeout.v),
                    C.stroke(),
                    C.restore(),
                    t && (e.wait = !1,
                    e.timeout.v = 0,
                    e.timeout.o = !1)
                }
            }
            function Sa() {
                var e = user.craft;
                if (e.crafting) {
                    var t = world.fast_units[user.id];
                    C.save(),
                    C.translate(user.cam.x + t.x, user.cam.y + t.y);
                    var i = Ie[SPRITE.GEAR]
                      , n = -i.width / 2
                      , I = -i.height / 2 - 125 * K;
                    drawCtxImage(C, i, n, I),
                    C.beginPath(),
                    C.lineWidth = 5 * K,
                    C.strokeStyle = SPRITE.CRAFT_LOADING[world.time],
                    C.lineCap = "round",
                    C.arc(0, I + i.height / 2, 25 * K, 0, a * e.timeout.v),
                    C.stroke(),
                    C.restore()
                }
            }
            function ca() {
                var e = user.craft;
                if (!e.crafting && -2 !== e.preview) {
                    var t = world.fast_units[user.id];
                    if (!t)
                        return;
                    if (C.save(),
                    0 === Q[e.preview].grid && 0 === e.つせウ小り六ぬオキニ)
                        C.translate(user.cam.x + t.x, user.cam.y + t.y),
                        C.rotate(t.angle),
                        C.translate(120, 0);
                    else {
                        var i = window.Math.floor(t.x + 120 * window.Math.cos(t.angle))
                          , n = window.Math.floor(t.y + 120 * window.Math.sin(t.angle));
                        i = user.cam.x + (i - i % 100 + 50),
                        n = user.cam.y + (n - n % 100 + 50),
                        C.translate(i, n)
                    }
                    var a = Ie[e.preview][world.time];
                    if (C.globalAlpha = .5,
                    drawCtxImage(C, a, -a.width / 2, -a.height / 2),
                    C.globalAlpha = 1,
                    C.restore(),
                    0 === Q[e.preview].grid) {
                        e.label[e.つせウ小り六ぬオキニ] || (0 === e.つせウ小り六ぬオキニ ? e.label[0] = ft(K, te[TEXT.MODE_FREE], 20, "#e2c340") : e.label[1] = ft(K, te[TEXT.MODE_GRID], 20, "#e2c340"));
                        a = e.label[e.つせウ小り六ぬオキニ];
                        drawCtxImage(C, a, M + -a.width / 2, game.gauges.y - 26)
                    }
                }
                if (e.crafting) {
                    for (var I = e.timeout.update(), T = 0; T < e.can_craft.length; T++) {
                        var o = e.can_craft[T];
                        if (e.id == o.id) {
                            var r = 42 * K
                              , d = 17 * K;
                            ye(C, o.info.translate.x, o.info.translate.y + r * (1 - e.timeout.v), o.info.width, r * e.timeout.v + d, 10 * K),
                            C.fillStyle = "#55B973",
                            C.fill(),
                            C.globalAlpha = .8,
                            o.draw(C)
                        } else
                            C.globalAlpha = .5,
                            o.draw(C);
                        C.globalAlpha = 1
                    }
                    return I && (e.crafting = !1,
                    e.timeout.v = 0,
                    e.timeout.o = !1),
                    !0
                }
                for (T = 0; T < e.can_craft.length; T++)
                    e.can_craft[T].draw(C);
                return !1
            }
            function ua() {
                for (var e = user.inv, t = world.fast_units[user.id], i = 0; i < e.can_select.length; i++) {
                    var n = e.can_select[i]
                      , a = !1;
                    (t = world.fast_units[user.id]) && (t.right == n.id || t.clothe == n.id && t.clothe > 0) ? (a = !0,
                    drawCtxImage(C, n.info.img[2], n.info.translate.x, n.info.translate.y, n.info.width, n.info.height)) : n.draw(C);
                    var I = user.inv.n[n.id];
                    I > 1 && Zn(I, n),
                    I > 0 && $n(i, n, a);
                    var T = user.よミ山にハねもんモロ;
                    !T.open || !(T.id < 1 || T.id == n.id) || T.lock && T.pid != user.id || game.plus_buttons[n.id].draw(C),
                    user.furnace.open && ItemType.WOOD == n.id && game.plus_buttons[n.id].draw(C),
                    user.ろヤたケ下四五火カス.open && ItemType.BUCKET_FULL == n.id && game.plus_buttons[n.id].draw(C),
                    user.windmill.open && ItemType.WHEAT == n.id && game.plus_buttons[n.id].draw(C),
                    user.extractor.open && ItemType.WOOD == n.id && game.plus_buttons[n.id].draw(C),
                    !user.bread_oven.open || ItemType.WOOD != n.id && ItemType.FLOUR != n.id || game.plus_buttons[n.id].draw(C)
                }
                if (n && i < e.max) {
                    var o = Ie[SPRITE.EMPTY_SLOT][2];
                    for (x = n.info.translate.x,
                    y = n.info.translate.y,
                    j = 1; i < e.max; i++,
                    j++)
                        drawCtxImage(C, o, x + j * (o.width + 5), y)
                }
            }
            function pa() {
                C.save();
                var e = K;
                user.gauges.life.x < .25 && (C.globalAlpha = user.gauges.warn_life.v);
                var t = user.inv.can_select.length > 0 ? -70 : 0;
                if ((user.よミ山にハねもんモロ.open || user.furnace.open && -1 != user.inv.find_item(ItemType.WOOD) || user.windmill.open && -1 != user.inv.find_item(ItemType.WHEAT) || user.extractor.open && -1 != user.inv.find_item(ItemType.WOOD) || user.ろヤたケ下四五火カス.open && -1 != user.inv.find_item(ItemType.BUCKET_FULL) || user.bread_oven.open && (-1 != user.inv.find_item(ItemType.WOOD) || -1 != user.inv.find_item(ItemType.FLOUR))) && (t -= 50 * K),
                C.translate((L - 950 * K) / 2, t),
                C.fillStyle = "#69A148",
                C.fillRect(this.translate.x + 37 * K, this.translate.y + 17 * K, 178 * user.gauges.life.x * K, 18 * K),
                C.globalAlpha = 1,
                user.gauges.hunger.x < .35 && (C.fillStyle = "#8F050A",
                C.globalAlpha = user.gauges.warn_hunger.v,
                C.fillRect(this.translate.x + 277 * K, this.translate.y + 17 * K, 178 * K, 18 * K),
                C.globalAlpha = 1),
                C.fillStyle = "#AF352A",
                C.fillRect(this.translate.x + 277 * K, this.translate.y + 17 * K, 178 * user.gauges.hunger.x * K, 18 * K),
                user.gauges.cold.x < .35 && (C.fillStyle = "#366B91",
                C.globalAlpha = user.gauges.warn_cold.v,
                C.fillRect(this.translate.x + 517 * K, this.translate.y + 17 * K, 178 * K, 18 * K),
                C.globalAlpha = 1),
                C.fillStyle = "#669BB1",
                C.fillRect(this.translate.x + 517 * K, this.translate.y + 17 * K, 178 * user.gauges.cold.x * K, 18 * K),
                user.gauges.cold.x > .99 && (user.gauges.warm.x < .35 && (C.fillStyle = "#6C4036",
                C.globalAlpha = user.gauges.warn_warm.v,
                C.fillRect(this.translate.x + 517 * K, this.translate.y + 17 * K, 178 * K, 18 * K),
                C.globalAlpha = 1),
                C.fillStyle = "#9C4036",
                C.fillRect(this.translate.x + 517 * K, this.translate.y + 17 * K, 178 * (1 - user.gauges.warm.x) * K, 18 * K)),
                user.gauges.thirst.x < .35 && (C.fillStyle = "#001A57",
                C.globalAlpha = user.gauges.warn_thirst.v,
                C.fillRect(this.translate.x + 757 * K, this.translate.y + 17 * K, 178 * K, 18 * K),
                C.globalAlpha = 1),
                C.fillStyle = "#074A87",
                C.fillRect(this.translate.x + 757 * K, this.translate.y + 17 * K, 178 * user.gauges.thirst.x * K, 18 * K),
                K = e,
                drawCtxImage(C, this.img, this.translate.x, this.translate.y),
                this.y = this.translate.y + t,
                C.restore(),
                user.gauges.oxygen.x < .99) {
                    var i = window.Math.floor(M - Ie[SPRITE.OXYGEN].width / 2);
                    t += this.translate.y - Ie[SPRITE.OXYGEN].height - 5 * K,
                    C.fillStyle = "#BBE8EF",
                    C.fillRect(i + 5, t + 5 * K, 588 * K * user.gauges.oxygen.x, 10 * K),
                    user.gauges.oxygen.x < .35 && (C.fillStyle = "#9BA8AF",
                    C.globalAlpha = user.gauges.warn_oxygen.v,
                    C.fillRect(i + 5, t + 5, 588 * K, 10 * K),
                    C.globalAlpha = 1),
                    drawCtxImage(C, Ie[SPRITE.OXYGEN], i, t),
                    this.y = t
                }
            }
            function Pa(e) {
                if (C.save(),
                C.translate(user.cam.x + this.x, user.cam.y + this.y),
                C.rotate(this.angle),
                this.hit.update) {
                    this.hit.anim.update() && 0 == this.hit.anim.o && (this.hit.update = !1);
                    var t = (1 - this.hit.anim.v) * zT * 600 * K
                      , i = window.Math.cos(this.hit.angle - this.angle) * t
                      , n = window.Math.sin(this.hit.angle - this.angle) * t
                } else
                    i = 0,
                    n = 0;
                1 & this.info && (C.globalAlpha = .3);
                var a = Ie[e][world.time];
                w = -a.width,
                h = -a.height,
                drawCtxImage(C, a, -w / 2 + i, -h / 2 + n, w, h),
                C.globalAlpha = 1,
                C.restore()
            }
            function wa() {
                if (C.save(),
                C.translate(user.cam.x + this.x, user.cam.y + this.y),
                C.rotate(this.angle),
                this.hit.update) {
                    this.hit.anim.update() && 0 == this.hit.anim.o && (this.hit.update = !1);
                    var e = (1 - this.hit.anim.v) * zT * 600 * K
                      , t = window.Math.cos(this.hit.angle - this.angle) * e
                      , i = window.Math.sin(this.hit.angle - this.angle) * e
                } else
                    t = 0,
                    i = 0;
                var n = Ie[ItemType.CHEST][world.time];
                if (w = -n.width,
                h = -n.height,
                drawCtxImage(C, n, -w / 2 + t, -h / 2 + i, w, h),
                this.lock) {
                    n = Ie[ItemType.LOCK][world.time];
                    w = -n.width,
                    h = -n.height,
                    drawCtxImage(C, n, -w / 2 + t - 1 * K, -h / 2 + i, w, h)
                }
                C.restore()
            }
            function _a() {
                C.save(),
                C.translate(user.cam.x + this.x, user.cam.y + this.y),
                C.rotate(this.angle);
                var e = Ie[SPRITE.THORNBUSH_SEED_MOB][world.time];
                w = -e.width,
                h = -e.height,
                drawCtxImage(C, e, -w / 2, -h / 2, w, h),
                C.restore()
            }
            function fa() {
                C.save(),
                C.translate(user.cam.x + this.x, user.cam.y + this.y),
                C.rotate(this.angle);
                var e = Ie[SPRITE.GARLIC_SEED_MOB][world.time];
                w = -e.width,
                h = -e.height,
                drawCtxImage(C, e, -w / 2, -h / 2, w, h),
                C.restore()
            }
            function ga() {
                C.save(),
                C.translate(user.cam.x + this.x, user.cam.y + this.y),
                C.rotate(this.angle);
                var e = Ie[SPRITE.PUMPKIN_SEED_MOB][world.time];
                w = -e.width,
                h = -e.height,
                drawCtxImage(C, e, -w / 2, -h / 2, w, h),
                C.restore()
            }
            function la() {
                C.save(),
                C.translate(user.cam.x + this.x, user.cam.y + this.y),
                C.rotate(this.angle);
                var e = Ie[ItemType.ALOE_VERA][world.time];
                w = -e.width,
                h = -e.height,
                drawCtxImage(C, e, -w / 2, -h / 2, w, h),
                C.restore()
            }
            function Aa() {
                C.save(),
                C.translate(user.cam.x + this.x, user.cam.y + this.y),
                C.rotate(this.angle);
                var e = Ie[SPRITE.WHEAT_MOB][world.time];
                w = -e.width,
                h = -e.height,
                drawCtxImage(C, e, -w / 2, -h / 2, w, h),
                C.restore()
            }
            function ba(e) {
                if (!((e = e / 100) > .8)) {
                    if (C.save(),
                    C.translate(user.cam.x + this.x, user.cam.y + this.y),
                    C.rotate(this.angle),
                    this.hit.update) {
                        this.hit.anim.update() && 0 == this.hit.anim.o && (this.hit.update = !1);
                        var t = (1 - this.hit.anim.v) * zT * 600 * K
                          , i = window.Math.cos(this.hit.angle - this.angle) * t
                          , n = window.Math.sin(this.hit.angle - this.angle) * t
                    } else
                        i = 0,
                        n = 0;
                    C.globalAlpha = .5,
                    Ee(C, i, n, 18 * K, e),
                    he(C, null, "#000000", 18 * K),
                    C.globalAlpha = 1,
                    Ee(C, i, n, 18 * K, e),
                    he(C, null, SPRITE.BROWN_LIFE[world.time], 6 * K),
                    C.restore()
                }
            }
            function Na(e) {
                if (!((e = e / 100) > .96)) {
                    if (C.save(),
                    C.translate(user.cam.x + this.x, user.cam.y + this.y),
                    C.rotate(this.angle),
                    this.hit.update) {
                        this.hit.anim.update() && 0 == this.hit.anim.o && (this.hit.update = !1);
                        var t = (1 - this.hit.anim.v) * zT * 600 * K
                          , i = window.Math.cos(this.hit.angle - this.angle) * t
                          , n = window.Math.sin(this.hit.angle - this.angle) * t
                    } else
                        i = 0,
                        n = 0;
                    C.globalAlpha = .5,
                    Ee(C, i, n, 28 * K, e),
                    he(C, null, "#000000", 18 * K),
                    C.globalAlpha = 1,
                    Ee(C, i, n, 28 * K, e),
                    he(C, null, SPRITE.CRAFT_LOADING[world.time], 6 * K),
                    C.restore()
                }
            }
            function va() {
                if (C.save(),
                C.translate(user.cam.x + this.x, user.cam.y + this.y),
                C.rotate(this.angle),
                this.hit.update) {
                    this.hit.anim.update() && 0 == this.hit.anim.o && (this.hit.update = !1);
                    var e = (1 - this.hit.anim.v) * zT * 600 * K
                      , t = window.Math.cos(this.hit.angle - this.angle) * e
                      , i = window.Math.sin(this.hit.angle - this.angle) * e
                } else
                    t = 0,
                    i = 0;
                var n = Ie[SPRITE.ROOFS].length
                  , a = Ie[SPRITE.ROOFS][(this.j + this.i % 2) % n][world.time];
                w = -a.width,
                h = -a.height;
                world.fast_units[user.id];
                C.globalAlpha = .4,
                drawCtxImage(C, a, -w / 2 + t, -h / 2 + i, w, h),
                C.globalAlpha = 1,
                C.restore()
            }
            function Da(e) {
                if (C.save(),
                C.translate(user.cam.x + this.x, user.cam.y + this.y),
                C.rotate(this.angle),
                this.hit.update) {
                    this.hit.anim.update() && 0 == this.hit.anim.o && (this.hit.update = !1);
                    var t = (1 - this.hit.anim.v) * zT * 600 * K
                      , i = window.Math.cos(this.hit.angle - this.angle) * t
                      , n = window.Math.sin(this.hit.angle - this.angle) * t
                } else
                    i = 0,
                    n = 0;
                this.halo.update() && (this.color += .2 + .3 * window.Math.random());
                var a = Ie[SPRITE.GARLANDS][window.Math.floor(this.id + this.color) % 5][world.time];
                w = -a.width * this.halo.v,
                h = -a.height * this.halo.v,
                drawCtxImage(C, a, -w / 2 + i, -h / 2 + n, w, h),
                C.restore()
            }
            function Oa(e) {
                if (C.save(),
                C.translate(user.cam.x + this.x, user.cam.y + this.y),
                C.rotate(this.angle),
                this.hit.update) {
                    this.hit.anim.update() && 0 == this.hit.anim.o && (this.hit.update = !1);
                    var t = (1 - this.hit.anim.v) * zT * 600 * K
                      , i = window.Math.cos(this.hit.angle - this.angle) * t
                      , n = window.Math.sin(this.hit.angle - this.angle) * t
                } else
                    i = 0,
                    n = 0;
                if (e === SPRITE.BED_TOP && !world.transition) {
                    for (var a = 0, I = world.units[ITEMS.PLAYERS], T = 0; T < I.length; T++) {
                        var o = N.dist(I[T], this);
                        if (o < 140 && o > 35) {
                            a = 0;
                            break
                        }
                        o <= 35 && (a = 1)
                    }
                    this.opacity = 0 === a ? window.Math.max(.5, this.opacity - zT / 1.5) : window.Math.min(1, this.opacity + zT / 1.5),
                    C.globalAlpha = this.opacity
                }
                var r = Ie[e][world.time];
                w = -r.width,
                h = -r.height,
                drawCtxImage(C, r, -w / 2 + i, -h / 2 + n, w, h),
                C.globalAlpha = 1,
                C.restore()
            }
            function ka(e) {
                if (C.save(),
                C.translate(user.cam.x + this.x, user.cam.y + this.y),
                C.rotate(this.angle),
                this.hit.update) {
                    this.hit.anim.update() && 0 == this.hit.anim.o && (this.hit.update = !1);
                    var t = (1 - this.hit.anim.v) * zT * 600 * K
                      , i = window.Math.cos(this.hit.angle - this.angle) * t
                      , n = window.Math.sin(this.hit.angle - this.angle) * t
                } else
                    i = 0,
                    n = 0;
                var a = Ie[e][world.time];
                w = -a.width,
                h = -a.height,
                drawCtxImage(C, a, -w / 2 + i, -h / 2 + n, w, h),
                C.restore()
            }
            var Ca = 0;
            function La(e, t, i, n, a, I, T, o=0, r) {
                void 0 === o && (o = 0);
                for (var d = e; d <= t; d++)
                    for (var s = i; s <= n; s++) {
                        var h = MT.tiles[d][s];
                        if (void 0 !== h && void 0 !== h[I]) {
                            var y = h[I]
                              , R = Ie[a][world.time][y.river];
                            if (drawCtxImage(C, R, user.cam.x + y.x - R.width / (4 * _scale_object), user.cam.y + y.y - R.height / (4 * _scale_object), R.width / (2 * _scale_object), R.height / (2 * _scale_object)),
                            UI.quality) {
                                var E = 2147483648
                                  , m = (1103515245 * (1e3 * d + s) + 12345) % E / E;
                                if (m < .2) {
                                    m = window.Math.floor(Ie[SPRITE.RIVER_DECO][world.time][y.river].length * (5 * m));
                                    R = Ie[SPRITE.RIVER_DECO][world.time][y.river][m];
                                    drawCtxImage(C, R, user.cam.x + y.x - R.width / (4 * _scale_object), user.cam.y + y.y - R.height / (4 * _scale_object), R.width / (2 * _scale_object), R.height / (2 * _scale_object))
                                } else if (0 !== y.current) {
                                    R = Ie[SPRITE.RIVER_WAVE][world.time];
                                    var S = (Ca + d % 2 * 30) % 60;
                                    C.globalAlpha = S < 30 ? S / 30 : 1 - (S - 30) / 30,
                                    drawCtxImage(C, R, user.cam.x + y.x - R.width / (4 * _scale_object), user.cam.y + y.y - R.height / (4 * _scale_object) - 30 + S, R.width / (2 * _scale_object), R.height / (2 * _scale_object)),
                                    C.globalAlpha = 1
                                }
                            }
                        }
                    }
            }
            function Ba() {
                if (1 & ~this.info) {
                    if (this.dig = window.Math.max(this.dig - zT, 0),
                    this.groundTimer += zT,
                    this.groundTimer > .1) {
                        this.groundTimer = 0;
                        var e = {
                            x: this.x + 60 * window.Math.random() - 30,
                            y: this.y + 60 * window.Math.random() - 30,
                            a: 0,
                            r: 30 * window.Math.random() + 30
                        };
                        this.ground.push(e)
                    }
                } else
                    this.dig = window.Math.min(this.dig + zT, 2.2);
                for (var t = 0; t < this.ground.length; t++) {
                    e = this.ground[t];
                    C.save(),
                    C.translate(user.cam.x + e.x, user.cam.y + e.y),
                    e.a = window.Math.min(1, e.a + zT / 2);
                    var i = e.a;
                    i < .2 ? i *= 5 : i = i > .8 ? 5 * (1 - i) : 1,
                    C.globalAlpha = .8 * i,
                    Re(C, 0, 0, e.r),
                    he(C, SPRITE.SAND_WORM_GROUND[world.time]),
                    C.restore(),
                    1 === e.a && (this.ground.splice(t, 1),
                    t--)
                }
            }
            function Ma() {
                var e = void 0
                  , t = void 0;
                if (C.save(),
                C.translate(user.cam.x + this.x, user.cam.y + this.y),
                C.rotate(this.angle),
                this.breath.update(),
                this.rotate.update(),
                this.dig >= .1 && this.dig <= 1.1) {
                    (i = window.Math.max(0, window.Math.min(1, this.dig - .1))) < .2 ? i *= 5 : i = i > .8 ? 5 * (1 - i) : 1;
                    e = Ie[SPRITE.SAND_WORM1][world.time];
                    w = -e.width * this.breath.v,
                    h = -e.height * this.breath.v,
                    C.globalAlpha = i,
                    drawCtxImage(C, e, -w / 4, -h / 4, w / 2, h / 2);
                    t = Ie[SPRITE.HURT_SAND_WORM1]
                }
                if (this.dig >= .9) {
                    var i;
                    (i = window.Math.max(0, window.Math.min(1, this.dig - .9))) < .2 ? i *= 5 : i = 1;
                    e = Ie[SPRITE.SAND_WORM2][world.time];
                    w = -e.width * this.breath.v,
                    h = -e.height * this.breath.v,
                    C.globalAlpha = i,
                    drawCtxImage(C, e, -w / 4, -h / 4, w / 2, h / 2);
                    t = Ie[SPRITE.HURT_SAND_WORM2]
                }
                this.action & STATE.HURT && void 0 !== t && (this.hit.update() && 0 == this.hit.o && (this.action -= STATE.HURT),
                C.globalAlpha = (.6 - this.hit.v) * i,
                w = -t.width * this.breath.v,
                h = -t.height * this.breath.v,
                drawCtxImage(C, t, -w / 4, -h / 4, w / 2, h / 2)),
                C.globalAlpha = 1,
                C.restore()
            }
            function Ya() {
                C.save(),
                C.translate(user.cam.x + this.x, user.cam.y + this.y),
                C.rotate(this.angle);
                var e = N.dist(this, this.r);
                this.scale = e > 350 ? window.Math.min(this.scale + zT / 2, 1.8) : window.Math.max(this.scale - zT, 1),
                this.breath.update(),
                this.rotate.update(),
                this._alpha = e < 350 ? window.Math.max(0, this._alpha - 2.2 * zT) : window.Math.min(1, this._alpha + 2.2 * zT);
                var t = Ie[SPRITE.VULTURE_GROUND_ATTACK][world.time];
                w = -t.width * this.breath.v * this.scale,
                h = -t.height * this.breath.v * this.scale,
                C.globalAlpha = 1 - this._alpha,
                drawCtxImage(C, t, -w / 4, -h / 4, w / 2, h / 2);
                t = Ie[SPRITE.VULTURE_ATTACK][world.time];
                if (w = -t.width * this.breath.v * this.scale,
                h = -t.height * this.breath.v * this.scale,
                C.globalAlpha = this._alpha,
                drawCtxImage(C, t, -w / 4, -h / 4, w / 2, h / 2),
                this.action & STATE.HURT) {
                    this.hit.update() && 0 == this.hit.o && (this.action -= STATE.HURT),
                    C.globalAlpha = (.6 - this.hit.v) * (1 - this._alpha);
                    t = Ie[SPRITE.HURT_VULTURE_GROUND];
                    w = -t.width * this.breath.v * this.scale,
                    h = -t.height * this.breath.v * this.scale,
                    drawCtxImage(C, t, -w / 4, -h / 4, w / 2, h / 2),
                    C.globalAlpha = (.6 - this.hit.v) * this._alpha;
                    t = Ie[SPRITE.HURT_VULTURE];
                    w = -t.width * this.breath.v * this.scale,
                    h = -t.height * this.breath.v * this.scale,
                    drawCtxImage(C, t, -w / 4, -h / 4, w / 2, h / 2),
                    C.globalAlpha = 1
                }
                t = Ie[SPRITE.VULTURE_WING_LEFT_ATTACK][world.time];
                if (w = -t.width * this.breath.v * this.scale,
                h = -t.height * this.breath.v * this.scale,
                C.save(),
                C.translate(-40 * K, 80 * K),
                C.rotate(this.rotate.v),
                C.globalAlpha = this._alpha,
                drawCtxImage(C, t, -w * K / 4, -h * K / 4, w / 2, h / 2),
                this.action & STATE.HURT) {
                    C.globalAlpha = (.6 - this.hit.v) * this._alpha;
                    t = Ie[SPRITE.HURT_VULTURE_WING_LEFT];
                    drawCtxImage(C, t, -w * K / 4, -h * K / 4, w / 2, h / 2),
                    C.globalAlpha = 1
                }
                C.restore();
                t = Ie[SPRITE.VULTURE_WING_RIGHT_ATTACK][world.time];
                if (C.save(),
                C.translate(40 * K, 80 * K),
                C.rotate(-this.rotate.v),
                C.globalAlpha = this._alpha,
                drawCtxImage(C, t, -w * K / 4, -h * K / 4, w / 2, h / 2),
                this.action & STATE.HURT) {
                    C.globalAlpha = (.6 - this.hit.v) * this._alpha;
                    t = Ie[SPRITE.HURT_VULTURE_WING_RIGHT];
                    drawCtxImage(C, t, -w * K / 4, -h * K / 4, w / 2, h / 2),
                    C.globalAlpha = 1
                }
                C.globalAlpha = 1,
                C.restore(),
                C.restore()
            }
            function Ha() {
                C.save(),
                C.translate(user.cam.x + this.x, user.cam.y + this.y),
                C.rotate(this.angle);
                var e = N.dist(this, this.r);
                if (this.scale = e > 350 ? window.Math.min(this.scale + zT / 2, 1.8) : window.Math.max(this.scale - zT, 1),
                this.breath.update(),
                this.rotate.update(),
                this._alpha = e < 350 ? window.Math.max(0, this._alpha - 2.2 * zT) : window.Math.min(1, this._alpha + 2.2 * zT),
                t = 1 & this.info ? Ie[SPRITE.HAWK_GROUND_ATTACK][world.time] : Ie[SPRITE.HAWK_GROUND][world.time],
                w = -t.width * this.breath.v * this.scale,
                h = -t.height * this.breath.v * this.scale,
                C.globalAlpha = 1 - this._alpha,
                drawCtxImage(C, t, -w / 4, -h / 4, w / 2, h / 2),
                t = 1 & this.info ? Ie[SPRITE.HAWK_ATTACK][world.time] : Ie[SPRITE.HAWK][world.time],
                w = -t.width * this.breath.v * this.scale,
                h = -t.height * this.breath.v * this.scale,
                C.globalAlpha = this._alpha,
                drawCtxImage(C, t, -w / 4, -h / 4, w / 2, h / 2),
                this.action & STATE.HURT) {
                    this.hit.update() && 0 == this.hit.o && (this.action -= STATE.HURT),
                    C.globalAlpha = (.6 - this.hit.v) * (1 - this._alpha);
                    var t = Ie[SPRITE.HURT_HAWK_GROUND];
                    w = -t.width * this.breath.v * this.scale,
                    h = -t.height * this.breath.v * this.scale,
                    drawCtxImage(C, t, -w / 4, -h / 4, w / 2, h / 2),
                    C.globalAlpha = (.6 - this.hit.v) * this._alpha;
                    t = Ie[SPRITE.HURT_HAWK];
                    w = -t.width * this.breath.v * this.scale,
                    h = -t.height * this.breath.v * this.scale,
                    drawCtxImage(C, t, -w / 4, -h / 4, w / 2, h / 2),
                    C.globalAlpha = 1
                }
                if (t = 1 & this.info ? Ie[SPRITE.HAWK_WING_LEFT_ATTACK][world.time] : Ie[SPRITE.HAWK_WING_LEFT][world.time],
                w = -t.width * this.breath.v * this.scale,
                h = -t.height * this.breath.v * this.scale,
                C.save(),
                C.translate(-20 * K, 0 * K),
                C.rotate(this.rotate.v),
                C.globalAlpha = this._alpha,
                drawCtxImage(C, t, -w * K / 4, -h * K / 4, w / 2, h / 2),
                this.action & STATE.HURT) {
                    C.globalAlpha = (.6 - this.hit.v) * this._alpha;
                    t = Ie[SPRITE.HURT_HAWK_WING_LEFT];
                    drawCtxImage(C, t, -w * K / 4, -h * K / 4, w / 2, h / 2),
                    C.globalAlpha = 1
                }
                if (C.restore(),
                t = 1 & this.info ? Ie[SPRITE.HAWK_WING_RIGHT_ATTACK][world.time] : Ie[SPRITE.HAWK_WING_RIGHT][world.time],
                C.save(),
                C.translate(20 * K, 0 * K),
                C.rotate(-this.rotate.v),
                C.globalAlpha = this._alpha,
                drawCtxImage(C, t, -w * K / 4, -h * K / 4, w / 2, h / 2),
                this.action & STATE.HURT) {
                    C.globalAlpha = (.6 - this.hit.v) * this._alpha;
                    t = Ie[SPRITE.HURT_HAWK_WING_RIGHT];
                    drawCtxImage(C, t, -w * K / 4, -h * K / 4, w / 2, h / 2),
                    C.globalAlpha = 1
                }
                C.globalAlpha = 1,
                C.restore(),
                C.restore()
            }
            function Ka() {
                if (C.save(),
                C.translate(user.cam.x + this.x, user.cam.y + this.y),
                C.rotate(this.angle),
                N.dist(this, this.r) > 300 ? this.scale = window.Math.min(this.scale + zT / 2, 1.8) : this.scale = window.Math.max(this.scale - zT, 1),
                this.breath.update(),
                this.rotate.update(),
                e = 0 === this.info ? Ie[SPRITE.BABY_LAVA][world.time] : Ie[SPRITE.BABY_LAVA_ATTACK][world.time],
                w = -e.width * this.breath.v * this.scale,
                h = -e.height * this.breath.v * this.scale,
                drawCtxImage(C, e, -w / 4, -h / 4, w / 2, h / 2),
                this.action & STATE.HURT) {
                    this.hit.update() && 0 == this.hit.o && (this.action -= STATE.HURT),
                    C.globalAlpha = .6 - this.hit.v;
                    var e = Ie[SPRITE.HURT_BABY_LAVA];
                    drawCtxImage(C, e, -w / 4, -h / 4, w / 2, h / 2),
                    C.globalAlpha = 1
                }
                if (e = 0 === this.info ? Ie[SPRITE.BABY_LAVA_WING_LEFT][world.time] : Ie[SPRITE.BABY_LAVA_WING_LEFT_ATTACK][world.time],
                w = -e.width * this.breath.v * this.scale,
                h = -e.height * this.breath.v * this.scale,
                C.save(),
                C.translate(-40 * K, 10 * K),
                C.rotate(this.rotate.v),
                drawCtxImage(C, e, -w * K / 4, -h * K / 4, w / 2, h / 2),
                this.action & STATE.HURT) {
                    C.globalAlpha = .6 - this.hit.v;
                    e = Ie[SPRITE.HURT_BABY_LAVA_WING_LEFT];
                    drawCtxImage(C, e, -w * K / 4, -h * K / 4, w / 2, h / 2),
                    C.globalAlpha = 1
                }
                if (C.restore(),
                e = 0 === this.info ? Ie[SPRITE.BABY_LAVA_WING_RIGHT][world.time] : Ie[SPRITE.BABY_LAVA_WING_RIGHT_ATTACK][world.time],
                C.save(),
                C.translate(40 * K, 10 * K),
                C.rotate(-this.rotate.v),
                drawCtxImage(C, e, -w * K / 4, -h * K / 4, w / 2, h / 2),
                this.action & STATE.HURT) {
                    C.globalAlpha = .6 - this.hit.v;
                    e = Ie[SPRITE.HURT_BABY_LAVA_WING_RIGHT];
                    drawCtxImage(C, e, -w * K / 4, -h * K / 4, w / 2, h / 2),
                    C.globalAlpha = 1
                }
                C.restore(),
                C.restore()
            }
            function Ga() {
                if (C.save(),
                C.translate(user.cam.x + this.x, user.cam.y + this.y),
                C.rotate(this.angle),
                N.dist(this, this.r) > 300 ? this.scale = window.Math.min(this.scale + zT / 2, 1.8) : this.scale = window.Math.max(this.scale - zT, 1),
                this.breath.update(),
                this.rotate.update(),
                e = 0 === this.info ? Ie[SPRITE.BABY_DRAGON][world.time] : Ie[SPRITE.BABY_DRAGON_ATTACK][world.time],
                w = -e.width * this.breath.v * this.scale,
                h = -e.height * this.breath.v * this.scale,
                drawCtxImage(C, e, -w / 4, -h / 4, w / 2, h / 2),
                this.action & STATE.HURT) {
                    this.hit.update() && 0 == this.hit.o && (this.action -= STATE.HURT),
                    C.globalAlpha = .6 - this.hit.v;
                    var e = Ie[SPRITE.HURT_BABY_DRAGON];
                    drawCtxImage(C, e, -w / 4, -h / 4, w / 2, h / 2),
                    C.globalAlpha = 1
                }
                if (e = 0 === this.info ? Ie[SPRITE.BABY_DRAGON_WING_LEFT][world.time] : Ie[SPRITE.BABY_DRAGON_WING_LEFT_ATTACK][world.time],
                w = -e.width * this.breath.v * this.scale,
                h = -e.height * this.breath.v * this.scale,
                C.save(),
                C.translate(-40 * K, 10 * K),
                C.rotate(this.rotate.v),
                drawCtxImage(C, e, -w * K / 4, -h * K / 4, w / 2, h / 2),
                this.action & STATE.HURT) {
                    C.globalAlpha = .6 - this.hit.v;
                    e = Ie[SPRITE.HURT_BABY_DRAGON_WING_LEFT];
                    drawCtxImage(C, e, -w * K / 4, -h * K / 4, w / 2, h / 2),
                    C.globalAlpha = 1
                }
                if (C.restore(),
                e = 0 === this.info ? Ie[SPRITE.BABY_DRAGON_WING_RIGHT][world.time] : Ie[SPRITE.BABY_DRAGON_WING_RIGHT_ATTACK][world.time],
                C.save(),
                C.translate(40 * K, 10 * K),
                C.rotate(-this.rotate.v),
                drawCtxImage(C, e, -w * K / 4, -h * K / 4, w / 2, h / 2),
                this.action & STATE.HURT) {
                    C.globalAlpha = .6 - this.hit.v;
                    e = Ie[SPRITE.HURT_BABY_DRAGON_WING_RIGHT];
                    drawCtxImage(C, e, -w * K / 4, -h * K / 4, w / 2, h / 2),
                    C.globalAlpha = 1
                }
                C.restore(),
                C.restore()
            }
            function Wa() {
                C.save(),
                C.translate(user.cam.x + this.x, user.cam.y + this.y),
                C.rotate(this.angle),
                N.dist(this, this.r) > 300 ? this.scale = window.Math.min(this.scale + zT / 2, 1.8) : this.scale = window.Math.max(this.scale - zT, 1),
                this.breath.update(),
                this.rotate.update();
                var e = Ie[SPRITE.LAVA_DRAGON][world.time];
                if (w = -e.width * this.breath.v * this.scale,
                h = -e.height * this.breath.v * this.scale,
                drawCtxImage(C, e, -w / 4, -h / 4, w / 2, h / 2),
                this.action & STATE.HURT) {
                    this.hit.update() && 0 == this.hit.o && (this.action -= STATE.HURT),
                    C.globalAlpha = .6 - this.hit.v;
                    e = Ie[SPRITE.HURT_LAVA_DRAGON];
                    drawCtxImage(C, e, -w / 4, -h / 4, w / 2, h / 2),
                    C.globalAlpha = 1
                }
                e = Ie[SPRITE.LAVA_WING_LEFT][world.time];
                if (w = -e.width * this.breath.v * this.scale,
                h = -e.height * this.breath.v * this.scale,
                C.save(),
                C.translate(-60 * K, 20 * K),
                C.rotate(this.rotate.v),
                drawCtxImage(C, e, -w * K / 4, -h * K / 4, w / 2, h / 2),
                this.action & STATE.HURT) {
                    C.globalAlpha = .6 - this.hit.v;
                    e = Ie[SPRITE.HURT_LAVA_WING_LEFT];
                    drawCtxImage(C, e, -w * K / 4, -h * K / 4, w / 2, h / 2),
                    C.globalAlpha = 1
                }
                C.restore();
                e = Ie[SPRITE.LAVA_WING_RIGHT][world.time];
                if (C.save(),
                C.translate(60 * K, 20 * K),
                C.rotate(-this.rotate.v),
                drawCtxImage(C, e, -w * K / 4, -h * K / 4, w / 2, h / 2),
                this.action & STATE.HURT) {
                    C.globalAlpha = .6 - this.hit.v;
                    e = Ie[SPRITE.HURT_LAVA_WING_RIGHT];
                    drawCtxImage(C, e, -w * K / 4, -h * K / 4, w / 2, h / 2),
                    C.globalAlpha = 1
                }
                C.restore(),
                C.restore()
            }
            function Fa() {
                C.save(),
                C.translate(user.cam.x + this.x, user.cam.y + this.y),
                C.rotate(this.angle),
                N.dist(this, this.r) > 300 ? this.scale = window.Math.min(this.scale + zT / 2, 1.8) : this.scale = window.Math.max(this.scale - zT, 1),
                this.breath.update(),
                this.rotate.update();
                var e = Ie[SPRITE.DRAGON][world.time];
                if (w = -e.width * this.breath.v * this.scale,
                h = -e.height * this.breath.v * this.scale,
                drawCtxImage(C, e, -w / 2, -h / 2, w, h),
                this.action & STATE.HURT) {
                    this.hit.update() && 0 == this.hit.o && (this.action -= STATE.HURT),
                    C.globalAlpha = .6 - this.hit.v;
                    e = Ie[SPRITE.HURT_DRAGON];
                    drawCtxImage(C, e, -w / 2, -h / 2, w, h),
                    C.globalAlpha = 1
                }
                e = Ie[SPRITE.WING_LEFT][world.time];
                if (w = -e.width * this.breath.v * this.scale,
                h = -e.height * this.breath.v * this.scale,
                C.save(),
                C.translate(-30 * K, 70 * K),
                C.rotate(this.rotate.v),
                drawCtxImage(C, e, -10 * K, -40 * K, w, h),
                this.action & STATE.HURT) {
                    C.globalAlpha = .6 - this.hit.v;
                    e = Ie[SPRITE.HURT_WING_LEFT];
                    drawCtxImage(C, e, -10 * K, -40 * K, w, h),
                    C.globalAlpha = 1
                }
                C.restore();
                e = Ie[SPRITE.WING_RIGHT][world.time];
                if (C.save(),
                C.translate(30 * K, 70 * K),
                C.rotate(-this.rotate.v),
                drawCtxImage(C, e, 10 * K - w, -40 * K, w, h),
                this.action & STATE.HURT) {
                    C.globalAlpha = .6 - this.hit.v;
                    e = Ie[SPRITE.HURT_WING_RIGHT];
                    drawCtxImage(C, e, 10 * K - w, -40 * K, w, h),
                    C.globalAlpha = 1
                }
                C.restore(),
                C.restore()
            }
            function xa(e, t) {
                if (void 0 !== Ie[e][this.info]) {
                    C.save(),
                    C.translate(user.cam.x + this.x, user.cam.y + this.y),
                    C.rotate(this.angle),
                    e === SPRITE.GIFT && (e = SPRITE.CRATE,
                    this.info = 36);
                    var i = Ie[e][this.info][world.time];
                    if (w = -i.width / 2,
                    h = -i.height / 2,
                    drawCtxImage(C, i, -w / 2, -h / 2, w, h),
                    this.action & STATE.HURT) {
                        this.hit.update() && 0 == this.hit.o && (this.action -= STATE.HURT),
                        C.globalAlpha = .6 - this.hit.v;
                        var n = BI(this.info, i, kI);
                        drawCtxImage(C, n, -w / 2, -h / 2, w, h),
                        C.globalAlpha = 1
                    }
                    C.restore()
                }
            }
            function Va(e, t) {
                C.save(),
                C.translate(user.cam.x + this.x, user.cam.y + this.y),
                C.rotate(this.angle);
                var i = Ie[e][world.time];
                if (w = -i.width,
                h = -i.height,
                drawCtxImage(C, i, -w / 2, -h / 2, w, h),
                this.action & STATE.HURT) {
                    this.hit.update() && 0 == this.hit.o && (this.action -= STATE.HURT),
                    C.globalAlpha = .6 - this.hit.v;
                    i = Ie[t];
                    drawCtxImage(C, i, -w / 2, -h / 2, w, h),
                    C.globalAlpha = 1
                }
                C.restore()
            }
            function Ua() {
                if (this.breath.update(),
                C.save(),
                C.translate(user.cam.x + this.x, user.cam.y + this.y),
                C.rotate(this.angle),
                e = 0 === this.info ? Ie[SPRITE.BABY_MAMMOTH][world.time] : Ie[SPRITE.BABY_MAMMOTH_ATTACK][world.time],
                w = -e.width * this.breath.v,
                h = -e.height * this.breath.v,
                drawCtxImage(C, e, -w / 2, -h / 2, w, h),
                this.action & STATE.HURT) {
                    this.hit.update() && 0 == this.hit.o && (this.action -= STATE.HURT),
                    C.globalAlpha = .6 - this.hit.v;
                    var e = Ie[SPRITE.HURT_BABY_MAMMOTH];
                    drawCtxImage(C, e, -w / 2, -h / 2, w, h),
                    C.globalAlpha = 1
                }
                C.restore()
            }
            function Xa() {
                if (this.breath.update(),
                C.save(),
                C.translate(user.cam.x + this.x, user.cam.y + this.y),
                C.rotate(this.angle),
                e = 0 === this.info ? Ie[SPRITE.BOAR][world.time] : Ie[SPRITE.BOAR_ATTACK][world.time],
                w = -e.width * this.breath.v,
                h = -e.height * this.breath.v,
                drawCtxImage(C, e, -w / 2, -h / 2, w, h),
                this.action & STATE.HURT) {
                    this.hit.update() && 0 == this.hit.o && (this.action -= STATE.HURT),
                    C.globalAlpha = .6 - this.hit.v;
                    var e = Ie[SPRITE.HURT_BOAR];
                    drawCtxImage(C, e, -w / 2, -h / 2, w, h),
                    C.globalAlpha = 1
                }
                C.restore()
            }
            function qa() {
                if (this.breath.update(),
                this.breathl.update(),
                this.breathr.update(),
                C.save(),
                C.translate(user.cam.x + this.x, user.cam.y + this.y),
                C.rotate(this.angle),
                e = 0 === this.info ? Ie[SPRITE.CRAB_BOSS][world.time] : Ie[SPRITE.CRAB_BOSS_ATTACK][world.time],
                w = -e.width * this.breath.v,
                h = -e.height * this.breath.v,
                drawCtxImage(C, e, -w / 2, -h / 2, w, h),
                this.action & STATE.HURT) {
                    this.hit.update() && 0 == this.hit.o && (this.action -= STATE.HURT),
                    C.globalAlpha = .6 - this.hit.v;
                    var e = Ie[SPRITE.HURT_CRAB_BOSS];
                    drawCtxImage(C, e, -w / 2, -h / 2, w, h),
                    C.globalAlpha = 1
                }
                if (this.action & STATE.COLD) {
                    this.heal.update() && 0 == this.heal.o && (this.action -= STATE.COLD),
                    C.globalAlpha = .6 - this.heal.v;
                    e = Ie[SPRITE.HEAL_CRAB_BOSS];
                    drawCtxImage(C, e, -w / 2, -h / 2, w, h),
                    C.globalAlpha = 1
                }
                if (C.restore(),
                C.save(),
                C.translate(user.cam.x + this.x, user.cam.y + this.y),
                C.rotate(this.angle + T),
                C.translate(100, 0),
                C.rotate(I),
                e = 0 === this.info ? Ie[SPRITE.CRAB_BOSS_CLAW_LEFT][world.time] : Ie[SPRITE.CRAB_BOSS_CLAW_LEFT_ATTACK][world.time],
                w = -e.width * this.breathl.v,
                h = -e.height * this.breathl.v,
                drawCtxImage(C, e, -w / 2, -h / 2, w, h),
                this.action & STATE.HURT) {
                    C.globalAlpha = .6 - this.hit.v;
                    e = Ie[SPRITE.HURT_CRAB_BOSS_CLAW_LEFT];
                    drawCtxImage(C, e, -w / 2, -h / 2, w, h),
                    C.globalAlpha = 1
                }
                if (this.action & STATE.COLD) {
                    C.globalAlpha = .6 - this.heal.v;
                    e = Ie[SPRITE.HEAL_CRAB_BOSS_CLAW_LEFT];
                    drawCtxImage(C, e, -w / 2, -h / 2, w, h),
                    C.globalAlpha = 1
                }
                if (C.restore(),
                C.save(),
                C.translate(user.cam.x + this.x, user.cam.y + this.y),
                C.rotate(this.angle + I + T),
                C.translate(100, 0),
                C.rotate(I),
                e = 0 === this.info ? Ie[SPRITE.CRAB_BOSS_CLAW_RIGHT][world.time] : Ie[SPRITE.CRAB_BOSS_CLAW_RIGHT_ATTACK][world.time],
                w = -e.width * this.breathr.v,
                h = -e.height * this.breathr.v,
                drawCtxImage(C, e, -w / 2, -h / 2, w, h),
                this.action & STATE.HURT) {
                    C.globalAlpha = .6 - this.hit.v;
                    e = Ie[SPRITE.HURT_CRAB_BOSS_CLAW_RIGHT];
                    drawCtxImage(C, e, -w / 2, -h / 2, w, h),
                    C.globalAlpha = 1
                }
                if (this.action & STATE.COLD) {
                    C.globalAlpha = .6 - this.heal.v;
                    e = Ie[SPRITE.HEAL_CRAB_BOSS_CLAW_RIGHT];
                    drawCtxImage(C, e, -w / 2, -h / 2, w, h),
                    C.globalAlpha = 1
                }
                C.restore()
            }
            function za() {
                if (this.breath.update(),
                this.breathl.update(),
                this.breathr.update(),
                C.save(),
                C.translate(user.cam.x + this.x, user.cam.y + this.y),
                C.rotate(this.angle),
                e = 0 === this.info ? Ie[SPRITE.CRAB][world.time] : Ie[SPRITE.CRAB_ATTACK][world.time],
                w = -e.width * this.breath.v,
                h = -e.height * this.breath.v,
                drawCtxImage(C, e, -w / 2, -h / 2, w, h),
                this.action & STATE.HURT) {
                    this.hit.update() && 0 == this.hit.o && (this.action -= STATE.HURT),
                    C.globalAlpha = .6 - this.hit.v;
                    var e = Ie[SPRITE.HURT_CRAB];
                    drawCtxImage(C, e, -w / 2, -h / 2, w, h),
                    C.globalAlpha = 1
                }
                if (this.action & STATE.COLD) {
                    this.heal.update() && 0 == this.heal.o && (this.action -= STATE.COLD),
                    C.globalAlpha = .6 - this.heal.v;
                    e = Ie[SPRITE.HEAL_CRAB];
                    drawCtxImage(C, e, -w / 2, -h / 2, w, h),
                    C.globalAlpha = 1
                }
                if (C.restore(),
                C.save(),
                C.translate(user.cam.x + this.x, user.cam.y + this.y),
                C.rotate(this.angle + T),
                C.translate(55, 0),
                C.rotate(I),
                e = 0 === this.info ? Ie[SPRITE.CRAB_CLAW_LEFT][world.time] : Ie[SPRITE.CRAB_CLAW_LEFT_ATTACK][world.time],
                w = -e.width * this.breathl.v,
                h = -e.height * this.breathl.v,
                drawCtxImage(C, e, -w / 2, -h / 2, w, h),
                this.action & STATE.HURT) {
                    C.globalAlpha = .6 - this.hit.v;
                    e = Ie[SPRITE.HURT_CRAB_CLAW_LEFT];
                    drawCtxImage(C, e, -w / 2, -h / 2, w, h),
                    C.globalAlpha = 1
                }
                if (this.action & STATE.COLD) {
                    C.globalAlpha = .6 - this.heal.v;
                    e = Ie[SPRITE.HEAL_CRAB_CLAW_LEFT];
                    drawCtxImage(C, e, -w / 2, -h / 2, w, h),
                    C.globalAlpha = 1
                }
                if (C.restore(),
                C.save(),
                C.translate(user.cam.x + this.x, user.cam.y + this.y),
                C.rotate(this.angle + I + T),
                C.translate(55, 0),
                C.rotate(I),
                e = 0 === this.info ? Ie[SPRITE.CRAB_CLAW_RIGHT][world.time] : Ie[SPRITE.CRAB_CLAW_RIGHT_ATTACK][world.time],
                w = -e.width * this.breathr.v,
                h = -e.height * this.breathr.v,
                drawCtxImage(C, e, -w / 2, -h / 2, w, h),
                this.action & STATE.HURT) {
                    C.globalAlpha = .6 - this.hit.v;
                    e = Ie[SPRITE.HURT_CRAB_CLAW_RIGHT];
                    drawCtxImage(C, e, -w / 2, -h / 2, w, h),
                    C.globalAlpha = 1
                }
                if (this.action & STATE.COLD) {
                    C.globalAlpha = .6 - this.heal.v;
                    e = Ie[SPRITE.HEAL_CRAB_CLAW_RIGHT];
                    drawCtxImage(C, e, -w / 2, -h / 2, w, h),
                    C.globalAlpha = 1
                }
                C.restore()
            }
            function ja() {
                C.save(),
                C.translate(user.cam.x + this.x, user.cam.y + this.y),
                C.rotate(this.angle),
                this.born = window.Math.min(1, this.born + 2 * zT),
                this.breath.update();
                var e = Ie[SPRITE.SPELL][world.time][this.spell];
                this.spell < 2 ? (w = -e.width * this.breath.v,
                h = -e.height * this.breath.v) : 0 === this.fly ? (w = -e.width,
                h = -e.height) : (w = 1.35 * -e.width,
                h = 1.35 * -e.height),
                drawCtxImage(C, e, -w / 2, -h / 2, w, h),
                C.globalAlpha = 1,
                C.restore()
            }
            function $a(e, t) {
                C.save(),
                C.translate(user.cam.x + this.x, user.cam.y + this.y),
                C.rotate(this.angle),
                this.breath.update();
                var i = Ie[e][world.time];
                if (w = -i.width * this.breath.v,
                h = -i.height * this.breath.v,
                drawCtxImage(C, i, -w / 2, -h / 2, w, h),
                this.action & STATE.HURT) {
                    this.hit.update() && 0 == this.hit.o && (this.action -= STATE.HURT),
                    C.globalAlpha = .6 - this.hit.v;
                    i = Ie[t];
                    drawCtxImage(C, i, -w / 2, -h / 2, w, h),
                    C.globalAlpha = 1
                }
                C.restore()
            }
            function Za(e, t) {
                C.save(),
                C.translate(user.cam.x + this.x, user.cam.y + this.y),
                C.rotate(this.angle),
                this.breath.update();
                var i = Ie[e][world.time];
                if (w = -i.width * this.breath.v,
                h = -i.height * this.breath.v,
                drawCtxImage(C, i, -w / 4, -h / 4, w / 2, h / 2),
                this.action & STATE.HURT) {
                    this.hit.update() && 0 == this.hit.o && (this.action -= STATE.HURT),
                    C.globalAlpha = .6 - this.hit.v;
                    i = Ie[t];
                    drawCtxImage(C, i, -w / 4, -h / 4, w / 2, h / 2),
                    C.globalAlpha = 1
                }
                C.restore()
            }
            function Ja(e, t, i) {
                C.save(),
                C.translate(user.cam.x + t, user.cam.y + i),
                C.rotate(this.angle),
                C.translate(this.x - t, this.y - i),
                this.breath.update();
                var n = Ie[e][world.time];
                w = -n.width * this.breath.v,
                h = -n.height * this.breath.v,
                drawCtxImage(C, n, -w / 2, -h / 2, w, h),
                C.restore()
            }
            function Qa(e) {
                C.save(),
                C.translate(user.cam.x + this.x, user.cam.y + this.y),
                C.rotate(this.angle),
                this.breath.update(),
                w = -Ie[e][world.time].width * this.breath.v,
                h = -Ie[e][world.time].height * this.breath.v,
                drawCtxImage(C, Ie[e][world.time], -w / 2, -h / 2, w, h),
                C.restore()
            }
            function eI() {
                if (C.save(),
                C.translate(user.cam.x + this.x, user.cam.y + this.y),
                this.hit.update) {
                    this.hit.anim.update() && 0 == this.hit.anim.o && (this.hit.update = !1);
                    var e = (1 - this.hit.anim.v) * zT * 600 * K
                      , t = window.Math.cos(this.hit.angle - this.angle) * e
                      , i = window.Math.sin(this.hit.angle - this.angle) * e
                } else
                    t = 0,
                    i = 0;
                var n = 15 & this.info;
                if (10 === this.info || 0 === n) {
                    if (C.rotate(this.angle),
                    this.ground.update(),
                    16 & this.info)
                        var a = Ie[SPRITE.PLANT_THORNBUSH_DRIED][world.time];
                    else
                        a = Ie[ItemType.THORNBUSH_SEED][world.time];
                    var I = -a.width * this.ground.v
                      , T = -a.height * this.ground.v;
                    drawCtxImage(C, a, -I / 2 + t, -T / 2 + i, I, T)
                } else {
                    if (16 & this.info)
                        a = Ie[SPRITE.DRIED_THORNBUSH][world.time];
                    else
                        a = Ie[ItemType.THORNBUSH][world.time];
                    C.translate(0, a.height / 2),
                    drawCtxImage(C, a, t - a.width / 2, -a.height + i)
                }
                C.restore()
            }
            function tI() {
                if (C.save(),
                C.translate(user.cam.x + this.x, user.cam.y + this.y),
                this.hit.update) {
                    this.hit.anim.update() && 0 == this.hit.anim.o && (this.hit.update = !1);
                    var e = (1 - this.hit.anim.v) * zT * 600 * K
                      , t = window.Math.cos(this.hit.angle - this.angle) * e
                      , i = window.Math.sin(this.hit.angle - this.angle) * e
                } else
                    t = 0,
                    i = 0;
                var n = 15 & this.info;
                if (10 === this.info || 0 === n) {
                    if (C.rotate(this.angle),
                    this.ground.update(),
                    16 & this.info)
                        var a = Ie[SPRITE.PLANT_GARLIC_DRIED][world.time];
                    else
                        a = Ie[ItemType.GARLIC_SEED][world.time];
                    var I = -a.width * this.ground.v
                      , T = -a.height * this.ground.v;
                    drawCtxImage(C, a, -I / 2 + t, -T / 2 + i, I, T)
                } else {
                    if (16 & this.info)
                        a = Ie[SPRITE.DRIED_GARLIC][world.time];
                    else
                        a = Ie[ItemType.GARLIC][world.time];
                    C.translate(0, a.height / 2),
                    drawCtxImage(C, a, t - a.width / 2, -a.height + i)
                }
                C.restore()
            }
            function iI() {
                if (C.save(),
                C.translate(user.cam.x + this.x, user.cam.y + this.y),
                this.hit.update) {
                    this.hit.anim.update() && 0 == this.hit.anim.o && (this.hit.update = !1);
                    var e = (1 - this.hit.anim.v) * zT * 600 * K
                      , t = window.Math.cos(this.hit.angle - this.angle) * e
                      , i = window.Math.sin(this.hit.angle - this.angle) * e
                } else
                    t = 0,
                    i = 0;
                var n = 15 & this.info;
                if (10 === this.info || 0 === n) {
                    if (C.rotate(this.angle),
                    this.ground.update(),
                    16 & this.info)
                        var a = Ie[SPRITE.PLANT_ALOE_VERA_DRIED][world.time];
                    else
                        a = Ie[ItemType.ALOE_VERA_SEED][world.time];
                    var I = -a.width * this.ground.v
                      , T = -a.height * this.ground.v;
                    drawCtxImage(C, a, -I / 2 + t, -T / 2 + i, I, T)
                } else {
                    if (16 & this.info)
                        a = Ie[SPRITE.DRIED_ALOE_VERA][world.time];
                    else
                        a = Ie[ItemType.ALOE_VERA][world.time];
                    C.translate(0, a.height / 2),
                    drawCtxImage(C, a, t - a.width / 2, -a.height + i)
                }
                C.restore()
            }
            function nI() {
                if (C.save(),
                C.translate(user.cam.x + this.x, user.cam.y + this.y),
                this.hit.update) {
                    this.hit.anim.update() && 0 == this.hit.anim.o && (this.hit.update = !1);
                    var e = (1 - this.hit.anim.v) * zT * 600 * K
                      , t = window.Math.cos(this.hit.angle - this.angle) * e
                      , i = window.Math.sin(this.hit.angle - this.angle) * e
                } else
                    t = 0,
                    i = 0;
                var n = 15 & this.info;
                if (10 === this.info || 0 === n) {
                    if (C.rotate(this.angle),
                    this.ground.update(),
                    16 & this.info)
                        var a = Ie[SPRITE.PLANT_WATERMELON_DRIED][world.time];
                    else
                        a = Ie[ItemType.WATERMELON_SEED][world.time];
                    var I = -a.width * this.ground.v
                      , T = -a.height * this.ground.v;
                    drawCtxImage(C, a, -I / 2 + t, -T / 2 + i, I, T)
                } else {
                    if (16 & this.info)
                        a = Ie[SPRITE.DRIED_WATERMELON][world.time];
                    else
                        a = Ie[ItemType.WATERMELON][world.time];
                    C.translate(0, a.height / 2),
                    drawCtxImage(C, a, t - a.width / 2, -a.height + i)
                }
                C.restore()
            }
            function aI() {
                if (C.save(),
                C.translate(user.cam.x + this.x, user.cam.y + this.y),
                this.hit.update) {
                    this.hit.anim.update() && 0 == this.hit.anim.o && (this.hit.update = !1);
                    var e = (1 - this.hit.anim.v) * zT * 600 * K
                      , t = window.Math.cos(this.hit.angle - this.angle) * e
                      , i = window.Math.sin(this.hit.angle - this.angle) * e
                } else
                    t = 0,
                    i = 0;
                var n = 15 & this.info;
                if (10 === this.info || 0 === n) {
                    if (C.rotate(this.angle),
                    this.ground.update(),
                    16 & this.info)
                        var a = Ie[SPRITE.PLANT_CARROT_DRIED][world.time];
                    else
                        a = Ie[ItemType.CARROT_SEED][world.time];
                    var I = -a.width * this.ground.v
                      , T = -a.height * this.ground.v;
                    drawCtxImage(C, a, -I / 2 + t, -T / 2 + i, I, T)
                } else {
                    if (16 & this.info)
                        a = Ie[SPRITE.DRIED_CARROT][world.time];
                    else
                        a = Ie[ItemType.CARROT][world.time];
                    C.translate(0, a.height / 2),
                    drawCtxImage(C, a, t - a.width / 2, -a.height + i)
                }
                C.restore()
            }
            function II() {
                if (C.save(),
                C.translate(user.cam.x + this.x, user.cam.y + this.y),
                this.hit.update) {
                    this.hit.anim.update() && 0 == this.hit.anim.o && (this.hit.update = !1);
                    var e = (1 - this.hit.anim.v) * zT * 600 * K
                      , t = window.Math.cos(this.hit.angle - this.angle) * e
                      , i = window.Math.sin(this.hit.angle - this.angle) * e
                } else
                    t = 0,
                    i = 0;
                var n = 15 & this.info;
                if (10 === this.info || 0 === n) {
                    if (C.rotate(this.angle),
                    this.ground.update(),
                    16 & this.info)
                        var a = Ie[SPRITE.PLANT_PUMPKIN_DRIED][world.time];
                    else
                        a = Ie[ItemType.PUMPKIN_SEED][world.time];
                    var I = -a.width * this.ground.v
                      , T = -a.height * this.ground.v;
                    drawCtxImage(C, a, -I / 2 + t, -T / 2 + i, I, T)
                } else {
                    if (16 & this.info)
                        a = Ie[SPRITE.DRIED_PUMPKIN][world.time];
                    else
                        a = Ie[ItemType.PUMPKIN][world.time];
                    C.translate(0, a.height / 2),
                    drawCtxImage(C, a, t - a.width / 2, -a.height + i)
                }
                C.restore()
            }
            function TI() {
                if (C.save(),
                C.translate(user.cam.x + this.x, user.cam.y + this.y),
                this.hit.update) {
                    this.hit.anim.update() && 0 == this.hit.anim.o && (this.hit.update = !1);
                    var e = (1 - this.hit.anim.v) * zT * 600 * K
                      , t = window.Math.cos(this.hit.angle - this.angle) * e
                      , i = window.Math.sin(this.hit.angle - this.angle) * e
                } else
                    t = 0,
                    i = 0;
                var n = 15 & this.info;
                if (10 === this.info || 0 === n) {
                    if (C.rotate(this.angle),
                    this.ground.update(),
                    16 & this.info)
                        var a = Ie[SPRITE.WHEAT_SEED_DRIED][world.time];
                    else
                        a = Ie[ItemType.WHEAT_SEED][world.time];
                    var I = -a.width * this.ground.v
                      , T = -a.height * this.ground.v;
                    drawCtxImage(C, a, -I / 2 + t, -T / 2 + i, I, T)
                } else {
                    if (this.wind.update(),
                    16 & this.info)
                        a = Ie[SPRITE.DRIED_WHEAT][world.time];
                    else
                        a = Ie[ItemType.WHEAT][world.time];
                    C.translate(0, a.height / 2),
                    C.rotate(this.wind.v),
                    drawCtxImage(C, a, t - a.width / 2, -a.height + i)
                }
                C.restore()
            }
            function oI() {
                if (!(this.info < 10)) {
                    if (C.save(),
                    C.translate(user.cam.x + this.x, user.cam.y + this.y),
                    C.rotate(this.angle),
                    this.hit.update) {
                        this.hit.anim.update() && 0 == this.hit.anim.o && (this.hit.update = !1);
                        var e = (1 - this.hit.anim.v) * zT * 600 * K
                          , t = window.Math.cos(this.hit.angle - this.angle) * e
                          , i = window.Math.sin(this.hit.angle - this.angle) * e
                    } else
                        t = 0,
                        i = 0;
                    this.ground.update();
                    var n = Ie[ItemType.BERRY_SEED][world.time]
                      , a = -n.width * this.ground.v
                      , I = -n.height * this.ground.v;
                    drawCtxImage(C, n, -a / 2 + t, -I / 2 + i, a, I),
                    C.restore()
                }
            }
            function rI() {
                if (10 !== this.info) {
                    if (C.save(),
                    C.translate(user.cam.x + this.x, user.cam.y + this.y),
                    C.rotate(this.angle),
                    this.hit.update) {
                        this.hit.anim.update() && 0 == this.hit.anim.o && (this.hit.update = !1);
                        var e = (1 - this.hit.anim.v) * zT * 600 * K
                          , t = window.Math.cos(this.hit.angle - this.angle) * e
                          , i = window.Math.sin(this.hit.angle - this.angle) * e
                    } else
                        t = 0,
                        i = 0;
                    if (16 & this.info)
                        var n = Ie[SPRITE.DRIED_PLANT][world.time];
                    else
                        n = Ie[SPRITE.PLANT_MINI][world.time];
                    drawCtxImage(C, n, -n.width / 2 + t, -n.width / 2 + i),
                    C.restore();
                    for (var a = 15 & this.info, I = 0; I < a; I++)
                        this.fruits[I].draw(SPRITE.FRUIT)
                }
            }
            function dI() {
                if (!(this.info < 10)) {
                    if (C.save(),
                    C.translate(user.cam.x + this.x, user.cam.y + this.y),
                    C.rotate(this.angle),
                    this.hit.update) {
                        this.hit.anim.update() && 0 == this.hit.anim.o && (this.hit.update = !1);
                        var e = (1 - this.hit.anim.v) * zT * 600 * K
                          , t = window.Math.cos(this.hit.angle - this.angle) * e
                          , i = window.Math.sin(this.hit.angle - this.angle) * e
                    } else
                        t = 0,
                        i = 0;
                    this.ground.update();
                    var n = Ie[ItemType.TOMATO_SEED][world.time]
                      , a = -n.width * this.ground.v
                      , I = -n.height * this.ground.v;
                    drawCtxImage(C, n, -a / 2 + t, -I / 2 + i, a, I),
                    C.restore()
                }
            }
            function sI() {
                if (10 !== this.info) {
                    for (var e = 15 & this.info, t = 0; t < e; t++)
                        this.fruits[t].draw(ItemType.TOMATO, this.x, this.y);
                    if (C.save(),
                    C.translate(user.cam.x + this.x, user.cam.y + this.y),
                    C.rotate(this.angle),
                    this.hit.update) {
                        this.hit.anim.update() && 0 == this.hit.anim.o && (this.hit.update = !1);
                        var i = (1 - this.hit.anim.v) * zT * 600 * K
                          , n = window.Math.cos(this.hit.angle - this.angle) * i
                          , a = window.Math.sin(this.hit.angle - this.angle) * i
                    } else
                        n = 0,
                        a = 0;
                    if (16 & this.info)
                        var I = Ie[SPRITE.DRIED_TOMATO_MINI][world.time];
                    else
                        I = Ie[SPRITE.TOMATO_MINI][world.time];
                    drawCtxImage(C, I, -I.width / 2 + n, -I.width / 2 + a),
                    C.restore()
                }
            }
            function hI() {
                if (C.save(),
                C.translate(user.cam.x + this.x, user.cam.y + this.y),
                C.rotate(this.angle),
                this.hit.update) {
                    this.hit.anim.update() && 0 == this.hit.anim.o && (this.hit.update = !1);
                    var e = (1 - this.hit.anim.v) * zT * 600 * K
                      , t = window.Math.cos(this.hit.angle - this.angle) * e
                      , i = window.Math.sin(this.hit.angle - this.angle) * e
                } else
                    t = 0,
                    i = 0;
                this.info ? img = Ie[SPRITE.FURNACE_ON][world.time] : img = Ie[ItemType.FURNACE][world.time],
                drawCtxImage(C, img, -img.width / 2 + t, -img.height / 2 + i),
                C.restore()
            }
            function yI() {
                C.save(),
                C.translate(user.cam.x + this.x, user.cam.y + this.y),
                C.rotate(this.angle),
                this.ground.update(),
                C.globalAlpha = .3;
                var e = Ie[SPRITE.GROUND_FIRE][world.time]
                  , t = -e.width * this.ground.v
                  , i = -e.height * this.ground.v;
                drawCtxImage(C, e, -t / 2, -i / 2, t, i),
                C.globalAlpha = 1,
                C.restore()
            }
            function RI() {
                C.save(),
                C.translate(user.cam.x + this.x, user.cam.y + this.y),
                C.rotate(this.angle),
                31 & this.info && 992 & this.info && 31744 & ~this.info && (0 == this.smog.length || this.smog[this.smog.length - 1] <= SPRITE.SMOG_PUSH) && this.smog.push(SPRITE.SMOG);
                for (var e = 0; e < this.smog.length; e++) {
                    this.smog[e] = window.Math.max(0, this.smog[e] - zT * SPRITE.SMOG_SPEED),
                    C.globalAlpha = this.smog[e] / 1.3;
                    var t = 40 * (1 - this.smog[e])
                      , i = 35 * (1 - this.smog[e]) + 10;
                    Re(C, -68 * K + window.Math.cos(-this.angle - window.Math.PI / 2) * t, -20 * K + window.Math.sin(-this.angle - window.Math.PI / 2) * t, i),
                    he(C, "#333333")
                }
                C.globalAlpha = 1,
                this.smog.length > 0 && 0 === this.smog[0] && this.smog.shift(),
                C.restore()
            }
            function EI(e) {
                C.save(),
                C.translate(user.cam.x + this.x, user.cam.y + this.y),
                C.rotate(this.angle),
                this.ground.update(),
                C.globalAlpha = .3;
                var t = -(T = Ie[SPRITE.GROUND_FIRE][world.time]).width * this.ground.v
                  , i = -T.height * this.ground.v;
                if (drawCtxImage(C, T, -t / 2, -i / 2, t, i),
                C.globalAlpha = 1,
                this.hit.update) {
                    this.hit.anim.update() && 0 == this.hit.anim.o && (this.hit.update = !1);
                    var n = (1 - this.hit.anim.v) * zT * 600 * K
                      , a = window.Math.cos(this.hit.angle - this.angle) * n
                      , I = window.Math.sin(this.hit.angle - this.angle) * n
                } else
                    a = 0,
                    I = 0;
                var T = Ie[e][world.time];
                drawCtxImage(C, T, -T.width / 2 + a, -T.height / 2 + I),
                C.restore()
            }
            function mI() {
                if (C.save(),
                C.translate(user.cam.x + this.x, user.cam.y + this.y),
                C.rotate(this.angle),
                this.hit.update) {
                    this.hit.anim.update() && 0 == this.hit.anim.o && (this.hit.update = !1);
                    var e = (1 - this.hit.anim.v) * zT * 600 * K
                      , t = window.Math.cos(this.hit.angle - this.angle) * e
                      , i = window.Math.sin(this.hit.angle - this.angle) * e
                } else
                    t = 0,
                    i = 0;
                if (31 & this.info && 992 & this.info && 31744 & ~this.info) {
                    var n = Ie[SPRITE.BREAD_OVEN_ON][world.time];
                    drawCtxImage(C, n, -n.width / 2 + t, -n.height / 2 + i),
                    this.up.update();
                    var a = -(n = Ie[SPRITE.BREAD_LIGHT_UP][world.time]).width * this.up.v
                      , I = -n.height * this.up.v;
                    drawCtxImage(C, n, -a / 2 + 1 * K, -I / 2 + 3 * K, a, I)
                } else {
                    n = Ie[ItemType.BREAD_OVEN][world.time];
                    drawCtxImage(C, n, -n.width / 2 + t, -n.height / 2 + i)
                }
                C.restore()
            }
            function SI() {
                if (this.hit.update)
                    var e = (1 - this.hit.anim.v) * zT * 600 * K
                      , t = window.Math.cos(this.hit.angle - this.angle) * e
                      , i = window.Math.sin(this.hit.angle - this.angle) * e;
                else
                    t = 0,
                    i = 0;
                255 & this.info && 65280 & ~this.info && (this.rotate = (this.rotate + .5 * zT) % a),
                C.save(),
                C.translate(user.cam.x + this.x + t, user.cam.y + this.y + i),
                C.save(),
                C.rotate(this.rotate);
                var n = Ie[SPRITE.WINDMILL_WINGS][world.time];
                drawCtxImage(C, n, -n.width / 2, -n.height / 2),
                C.restore(),
                C.save(),
                C.rotate(this.angl);
                n = Ie[SPRITE.WINDMILL_HEAD][world.time];
                drawCtxImage(C, n, -n.width / 2, -n.height / 2),
                C.restore(),
                C.restore()
            }
            function cI() {
                if (this.hit.update) {
                    this.hit.anim.update() && 0 == this.hit.anim.o && (this.hit.update = !1);
                    var e = (1 - this.hit.anim.v) * zT * 600 * K
                      , t = window.Math.cos(this.hit.angle - this.angle) * e
                      , i = window.Math.sin(this.hit.angle - this.angle) * e
                } else
                    t = 0,
                    i = 0;
                C.save(),
                255 & this.info && 65280 & ~this.info && (t += 2 * window.Math.random() - 1,
                i += 2 * window.Math.random() - 1),
                C.translate(user.cam.x + this.x + t, user.cam.y + this.y + i),
                C.rotate(this.angle);
                var n = Ie[ItemType.STONE_EXTRACTOR][world.time];
                drawCtxImage(C, n, -n.width / 2, -n.height / 2),
                255 & this.info && 65280 & ~this.info && (this.rotate = (this.rotate + 3 * zT) % a),
                C.rotate(this.rotate);
                n = Ie[SPRITE.EXTRACTOR_MACHINE0_STONE][world.time];
                drawCtxImage(C, n, -n.width / 2, -n.height / 2),
                C.restore()
            }
            function uI() {
                if (this.hit.update) {
                    this.hit.anim.update() && 0 == this.hit.anim.o && (this.hit.update = !1);
                    var e = (1 - this.hit.anim.v) * zT * 600 * K
                      , t = window.Math.cos(this.hit.angle - this.angle) * e
                      , i = window.Math.sin(this.hit.angle - this.angle) * e
                } else
                    t = 0,
                    i = 0;
                C.save(),
                255 & this.info && 65280 & ~this.info && (t += 2 * window.Math.random() - 1,
                i += 2 * window.Math.random() - 1),
                C.translate(user.cam.x + this.x + t, user.cam.y + this.y + i),
                C.rotate(this.angle);
                var n = Ie[ItemType.GOLD_EXTRACTOR][world.time];
                drawCtxImage(C, n, -n.width / 2, -n.height / 2),
                255 & this.info && 65280 & ~this.info && (this.rotate = (this.rotate + 3 * zT) % a),
                C.rotate(this.rotate);
                n = Ie[SPRITE.EXTRACTOR_MACHINE0_GOLD][world.time];
                drawCtxImage(C, n, -n.width / 2, -n.height / 2),
                C.restore()
            }
            function pI() {
                if (this.hit.update) {
                    this.hit.anim.update() && 0 == this.hit.anim.o && (this.hit.update = !1);
                    var e = (1 - this.hit.anim.v) * zT * 600 * K
                      , t = window.Math.cos(this.hit.angle - this.angle) * e
                      , i = window.Math.sin(this.hit.angle - this.angle) * e
                } else
                    t = 0,
                    i = 0;
                C.save(),
                255 & this.info && 65280 & ~this.info && (t += 2 * window.Math.random() - 1,
                i += 2 * window.Math.random() - 1),
                C.translate(user.cam.x + this.x + t, user.cam.y + this.y + i),
                C.rotate(this.angle);
                var n = Ie[ItemType.DIAMOND_EXTRACTOR][world.time];
                drawCtxImage(C, n, -n.width / 2, -n.height / 2),
                255 & this.info && 65280 & ~this.info && (this.rotate = (this.rotate + 3 * zT) % a),
                C.rotate(this.rotate);
                n = Ie[SPRITE.EXTRACTOR_MACHINE0_DIAMOND][world.time];
                drawCtxImage(C, n, -n.width / 2, -n.height / 2),
                C.restore()
            }
            function PI() {
                if (this.hit.update) {
                    this.hit.anim.update() && 0 == this.hit.anim.o && (this.hit.update = !1);
                    var e = (1 - this.hit.anim.v) * zT * 600 * K
                      , t = window.Math.cos(this.hit.angle - this.angle) * e
                      , i = window.Math.sin(this.hit.angle - this.angle) * e
                } else
                    t = 0,
                    i = 0;
                C.save(),
                255 & this.info && 65280 & ~this.info && (t += 2 * window.Math.random() - 1,
                i += 2 * window.Math.random() - 1),
                C.translate(user.cam.x + this.x + t, user.cam.y + this.y + i),
                C.rotate(this.angle);
                var n = Ie[ItemType.AMETHYST_EXTRACTOR][world.time];
                drawCtxImage(C, n, -n.width / 2, -n.height / 2),
                255 & this.info && 65280 & ~this.info && (this.rotate = (this.rotate + 3 * zT) % a),
                C.rotate(this.rotate);
                n = Ie[SPRITE.EXTRACTOR_MACHINE0_AMETHYST][world.time];
                drawCtxImage(C, n, -n.width / 2, -n.height / 2),
                C.restore()
            }
            function wI() {
                if (this.hit.update) {
                    this.hit.anim.update() && 0 == this.hit.anim.o && (this.hit.update = !1);
                    var e = (1 - this.hit.anim.v) * zT * 600 * K
                      , t = window.Math.cos(this.hit.angle - this.angle) * e
                      , i = window.Math.sin(this.hit.angle - this.angle) * e
                } else
                    t = 0,
                    i = 0;
                C.save(),
                255 & this.info && 65280 & ~this.info && (t += 2 * window.Math.random() - 1,
                i += 2 * window.Math.random() - 1),
                C.translate(user.cam.x + this.x + t, user.cam.y + this.y + i),
                C.rotate(this.angle);
                var n = Ie[ItemType.REIDITE_EXTRACTOR][world.time];
                drawCtxImage(C, n, -n.width / 2, -n.height / 2),
                255 & this.info && 65280 & ~this.info && (this.rotate = (this.rotate + 3 * zT) % a),
                C.rotate(this.rotate);
                n = Ie[SPRITE.EXTRACTOR_MACHINE0_REIDITE][world.time];
                drawCtxImage(C, n, -n.width / 2, -n.height / 2),
                C.restore()
            }
            function _I() {
                if (this.hit.update) {
                    this.hit.anim.update() && 0 == this.hit.anim.o && (this.hit.update = !1);
                    var e = (1 - this.hit.anim.v) * zT * 600 * K
                      , t = window.Math.cos(this.hit.angle - this.angle) * e
                      , i = window.Math.sin(this.hit.angle - this.angle) * e
                } else
                    t = 0,
                    i = 0;
                C.save(),
                C.translate(user.cam.x + this.x + t, user.cam.y + this.y + i),
                C.rotate(this.angle);
                var n = Ie[ItemType.WINDMILL][world.time];
                drawCtxImage(C, n, -n.width / 2, -n.height / 2),
                C.restore()
            }
            function fI(e, t, i) {
                if(window.logger)console.log(e)
                client.socket && 1 === client.socket.readyState && client.socket.send(window.msgpack.encode(function(e, t=window.Math.floor(256 * window.Math.random())) {
                    return [...e.map(( (i, n) => i ^ t ^ (user.id ? user.id : 0) ^ e.length)), t]
                }(window.msgpack.encode(e))))
            }
            window.send = fI;
            function gI() {
                if (this.hit.update) {
                    this.hit.anim.update() && 0 == this.hit.anim.o && (this.hit.update = !1);
                    var e = (1 - this.hit.anim.v) * zT * 600 * K
                      , t = window.Math.cos(this.hit.angle - this.angle) * e
                      , i = window.Math.sin(this.hit.angle - this.angle) * e
                } else
                    t = 0,
                    i = 0;
                this.rotate1 = (this.rotate1 + 3 * zT) % a,
                this.rotate2 = (this.rotate2 - 3 * zT) % a,
                C.save(),
                C.translate(user.cam.x + this.x + t, user.cam.y + this.y + i),
                C.save(),
                C.rotate(this.angle);
                var n = Ie[ItemType.EMERALD_MACHINE][world.time];
                drawCtxImage(C, n, -n.width / 2, -n.height / 2),
                C.restore(),
                C.save(),
                C.rotate(this.rotate1);
                n = Ie[SPRITE.EMERALD_MACHINE_ROTATE][world.time];
                drawCtxImage(C, n, -n.width / 2, -n.height / 2),
                C.restore(),
                C.save(),
                C.rotate(this.rotate2);
                n = Ie[SPRITE.EMERALD_MACHINE_HOLE][world.time];
                drawCtxImage(C, n, -n.width / 2, -n.height / 2),
                C.restore(),
                C.restore()
            }
            function lI() {
                if (this.hit.update) {
                    this.hit.anim.update() && 0 == this.hit.anim.o && (this.hit.update = !1);
                    var e = (1 - this.hit.anim.v) * zT * 600 * K
                      , t = window.Math.cos(this.hit.angle - this.angle) * e
                      , i = window.Math.sin(this.hit.angle - this.angle) * e
                } else
                    t = 0,
                    i = 0;
                this.rotate1 = (this.rotate1 + 3 * zT) % a,
                this.rotate2 = (this.rotate2 - 3 * zT) % a,
                C.save(),
                C.translate(user.cam.x + this.x + t, user.cam.y + this.y + i),
                C.save(),
                C.rotate(this.angle);
                var n = Ie[ItemType.RESURRECTION][world.time];
                drawCtxImage(C, n, -n.width / 2, -n.height / 2),
                C.restore(),
                C.save(),
                C.rotate(this.rotate1);
                n = Ie[SPRITE.RESURRECTION_ROTATE][world.time];
                drawCtxImage(C, n, -n.width / 2, -n.height / 2),
                C.restore(),
                C.save(),
                C.rotate(this.rotate2);
                n = Ie[SPRITE.RESURRECTION_HOLE][world.time];
                drawCtxImage(C, n, -n.width / 2, -n.height / 2),
                C.restore(),
                C.restore()
            }
            function AI() {
                C.save(),
                C.translate(user.cam.x + this.x, user.cam.y + this.y),
                C.rotate(this.angle),
                this.halo.update();
                var e = Ie[SPRITE.EMERALD_MACHINE_GROUND][world.time];
                w = -e.width * this.halo.v,
                h = -e.height * this.halo.v,
                drawCtxImage(C, e, -w / 2, -h / 2, w, h),
                C.restore()
            }
            function bI() {
                C.save(),
                C.translate(user.cam.x + this.x, user.cam.y + this.y),
                C.rotate(this.angle),
                this.halo.update();
                var e = Ie[SPRITE.RESURRECTION_GROUND][world.time];
                w = -e.width * this.halo.v,
                h = -e.height * this.halo.v,
                drawCtxImage(C, e, -w / 2, -h / 2, w, h),
                C.restore()
            }
            function NI() {
                C.save(),
                C.translate(user.cam.x + this.x, user.cam.y + this.y),
                C.rotate(this.angle),
                this.halo.update();
                var e = Ie[SPRITE.HALO_FIRE][world.time];
                w = -e.width * this.halo.v,
                h = -e.height * this.halo.v,
                drawCtxImage(C, e, -w / 2, -h / 2, w, h),
                C.restore()
            }
            function vI() {
                C.save(),
                C.translate(user.cam.x + this.x, user.cam.y + this.y),
                C.rotate(this.angle),
                this.fire.update();
                var e = Ie[SPRITE.FIRE][world.time];
                w = -e.width * this.fire.v,
                h = -e.height * this.fire.v,
                drawCtxImage(C, e, -w / 2, -h / 2, w, h),
                this.halo.update();
                e = Ie[SPRITE.HALO_FIRE][world.time];
                w = -e.width * this.halo.v,
                h = -e.height * this.halo.v,
                drawCtxImage(C, e, -w / 2, -h / 2, w, h),
                C.restore()
            }
            function DI(e, t, i) {
                if (e >= 0) {
                    var n = Ie[e][world.time];
                    switch (e) {
                    case ItemType.STONE_PICK:
                    case ItemType.GOLD_PICK:
                    case ItemType.DIAMOND_PICK:
                    case ItemType.WOOD_PICK:
                    case ItemType.AMETHYST_PICK:
                    case ItemType.REIDITE_PICK:
                        iT(e, n, -n.width / 2 - K * (45 + t), -n.height / 2 + K * (i + 22));
                        break;
                    case ItemType.WOOD_SWORD:
                    case ItemType.STONE_SWORD:
                    case ItemType.GOLD_SWORD:
                    case ItemType.DIAMOND_SWORD:
                        aT(e, n, -n.width / 4 - K * (47 + t), -n.height / 4 + K * (i + 45));
                        break;
                    case ItemType.AMETHYST_SWORD:
                        aT(e, n, -n.width / 4 - K * (52 + t), -n.height / 4 + K * (i + 45));
                        break;
                    case ItemType.REIDITE_SWORD:
                        aT(e, n, -n.width / 4 - K * (47 + t), -n.height / 4 + K * (i + 44));
                        break;
                    case ItemType.PIRATE_SWORD:
                        iT(e, n, -n.width / 2 - K * (47 + t), -n.height / 2 + K * (i + 44));
                        break;
                    case ItemType.DRAGON_SWORD:
                        iT(e, n, -n.width / 2 - K * (40 + t), -n.height / 2 + K * (i + 65));
                        break;
                    case ItemType.WOOD_SPEAR:
                    case ItemType.REIDITE_SPEAR:
                        aT(e, n, -n.width / 4 - K * (37 + t), -n.height / 4 + K * (i + 85));
                        break;
                    case ItemType.GOLD_PITCHFORK:
                    case ItemType.YUSUKEDAO_ITEM1:
                    case ItemType.YUSUKEDAO_ITEM2:
                    case ItemType.PITCHFORK:
                        aT(e, n, -n.width / 4 - K * (26 + t), -n.height / 4 + K * (i + 77));
                        break;
                    case ItemType.LAVA_SPEAR:
                        aT(e, n, -n.width / 4 - K * (37 + t), -n.height / 4 + K * (i + 85));
                        break;
                    case ItemType.LAVA_SWORD:
                        aT(e, n, -n.width / 4 - K * (47 + t), -n.height / 4 + K * (i + 44));
                        break;
                    case ItemType.CURSED_SWORD:
                        iT(e, n, -n.width / 2 - K * (47 + t), -n.height / 2 + K * (i + 44));
                        break;
                    case ItemType.WOOD_BOW:
                    case ItemType.STONE_BOW:
                    case ItemType.GOLD_BOW:
                    case ItemType.DIAMOND_BOW:
                    case ItemType.AMETHYST_BOW:
                    case ItemType.REIDITE_BOW:
                    case ItemType.DRAGON_BOW:
                        aT(e, n, -n.width / 4 - K * (37 + t), -n.height / 4 + K * (i + 30));
                        break;
                    case ItemType.MACHETE:
                        aT(e, n, -n.width / 4 - K * (47 + t), -n.height / 4 + K * (i + 35));
                        break;
                    case ItemType.WAND1:
                    case ItemType.WAND2:
                        aT(e, n, -n.width / 4 - K * (47 + t), -n.height / 4 + K * (i + 40));
                        break;
                    case ItemType.SADDLE:
                        aT(e, n, -n.width / 4 - K * (47 + t), -n.height / 4 + K * (i + 34));
                        break;
                    case ItemType.STONE_SPEAR:
                    case ItemType.GOLD_SPEAR:
                    case ItemType.DIAMOND_SPEAR:
                    case ItemType.AMETHYST_SPEAR:
                        aT(e, n, -n.width / 4 - K * (37 + t), -n.height / 4 + K * (i + 90));
                        break;
                    case ItemType.CRAB_SPEAR:
                        aT(e, n, -n.width / 4 - K * (40 + t), -n.height / 4 + K * (i + 85));
                        break;
                    case ItemType.DRAGON_SPEAR:
                        iT(e, n, -n.width / 2 - K * (39 + t), -n.height / 2 + K * (i + 90));
                        break;
                    case ItemType.STONE_HAMMER:
                    case ItemType.GOLD_HAMMER:
                    case ItemType.DIAMOND_HAMMER:
                    case ItemType.AMETHYST_HAMMER:
                    case ItemType.REIDITE_HAMMER:
                    case ItemType.SUPER_HAMMER:
                        iT(e, n, -n.width / 2 - K * (46 + t), -n.height / 2 + K * (i + 35));
                        break;
                    case ItemType.WATERING_CAN_FULL:
                        iT(e, n, -n.width / 2 - K * (47 + t), -n.height / 2 + K * (i + 54));
                        break;
                    case ItemType.STONE_SHOVEL:
                    case ItemType.GOLD_SHOVEL:
                    case ItemType.DIAMOND_SHOVEL:
                    case ItemType.AMETHYST_SHOVEL:
                    case ItemType.REIDITE_SHOVEL:
                        iT(e, n, -n.width / 2 - K * (46 + t), -n.height / 2 + K * (i + 35));
                        break;
                    case ItemType.GOLD_WRENCH:
                    case ItemType.WRENCH:
                        iT(e, n, -n.width / 2 - K * (47 + t), -n.height / 2 + K * (i + 20))
                    }
                }
            }
            // window.Object.defineProperty = function() {
            //     if (window.Error().stack.includes("at <anonymous>"))
            //         for (; ; )
            //             ;
            //     return $i.apply(this, arguments)
            // }
            ;
            function OI() {
                if (!this.ghost && 0 !== this.vehicle) {
                    if(settings.vehicle.enabled) C.globalAlpha = settings.vehicle.opacity
                    if (this.x != this.r.x || this.y != this.r.y) {
                        var e = (N.get_angle_2(this.x, this.y, this.r.x, this.r.y) + window.Math.PI / 2) % a;
                        this.vehicle_fx2 = N.reduceAngle(e, this.vehicle_fx2),
                        this.vehicle_fx2 = N.lerp(this.vehicle_fx2, e, .018)
                    }
                    if (C.save(),
                    C.translate(user.cam.x + this.x, user.cam.y + this.y),
                    C.rotate(this.vehicle_fx2),
                    this.vehicle === ItemType.BOAT) {
                        if (this.speed > 50 || this.vehicle_fx1 > 0) {
                            this.speed > 50 ? this.vehicle_fx1 = window.Math.min(1, this.vehicle_fx1 + zT) : this.vehicle_fx1 = window.Math.max(0, this.vehicle_fx1 - zT)
                            // C.globalAlpha = this.vehicle_fx1;
                            var t = Ie[SPRITE.BOAT_WAVE][world.time];
                            aT(SPRITE.BOAT_WAVE, t, -t.width / 4, -t.height / 4)
                            // C.globalAlpha = 1
                        }
                        t = Ie[ItemType.BOAT][world.time];
                        aT(ItemType.BOAT, t, -t.width / 4, -t.height / 4)
                    } else if (this.vehicle === ItemType.HAWK) {
                        this.vehicle_fx5 = N.lerp(this.vehicle_fx5, this.speed, .018),
                        this.vehicle_fx4.update(),
                        this.speed > 85 ? this.vehicle_fx1 = window.Math.min(1, this.vehicle_fx1 + zT / 4) : this.vehicle_fx1 = window.Math.max(.1, this.vehicle_fx1 - zT);
                        t = Ie[SPRITE.HAWK_TAMED][world.time];
                        aT(SPRITE.HAWK_TAMED, t, -t.width / 4, -t.height / 4);
                        t = Ie[SPRITE.HAWK_WING_LEFT_TAMED][world.time];
                        w = -t.width,
                        h = -t.height,
                        C.save(),
                        C.translate(-20 * K, -20 * K),
                        C.rotate(this.vehicle_fx4.v * this.vehicle_fx1),
                        drawCtxImage(C, t, -w / 4, -h / 4, w / 2, h / 2),
                        C.restore();
                        t = Ie[SPRITE.HAWK_WING_RIGHT_TAMED][world.time];
                        C.save(),
                        C.translate(20 * K, -20 * K),
                        C.rotate(-this.vehicle_fx4.v * this.vehicle_fx1),
                        drawCtxImage(C, t, -w / 4, -h / 4, w / 2, h / 2),
                        C.restore()
                    } else if (this.vehicle === ItemType.BABY_LAVA) {
                        this.vehicle_fx5 = N.lerp(this.vehicle_fx5, this.speed, .018),
                        this.vehicle_fx4.update(),
                        this.speed > 85 ? this.vehicle_fx1 = window.Math.min(1, this.vehicle_fx1 + zT / 4) : this.vehicle_fx1 = window.Math.max(.1, this.vehicle_fx1 - zT);
                        t = Ie[SPRITE.BABY_LAVA_TAMED][world.time];
                        aT(SPRITE.BABY_LAVA_TAMED, t, -t.width / 4, -t.height / 4);
                        t = Ie[SPRITE.BABY_LAVA_WING_LEFT_TAMED][world.time];
                        w = -t.width,
                        h = -t.height,
                        C.save(),
                        C.translate(-40 * K, -45 * K),
                        C.rotate(this.vehicle_fx4.v * this.vehicle_fx1),
                        drawCtxImage(C, t, -w / 4, -h / 4, w / 2, h / 2),
                        C.restore();
                        t = Ie[SPRITE.BABY_LAVA_WING_RIGHT_TAMED][world.time];
                        C.save(),
                        C.translate(40 * K, -45 * K),
                        C.rotate(-this.vehicle_fx4.v * this.vehicle_fx1),
                        drawCtxImage(C, t, -w / 4, -h / 4, w / 2, h / 2),
                        C.restore()
                    } else if (this.vehicle === ItemType.BABY_DRAGON) {

                        this.vehicle_fx5 = N.lerp(this.vehicle_fx5, this.speed, .018),
                        this.vehicle_fx4.update(),
                        this.speed > 85 ? this.vehicle_fx1 = window.Math.min(1, this.vehicle_fx1 + zT / 4) : this.vehicle_fx1 = window.Math.max(.1, this.vehicle_fx1 - zT);
                        t = Ie[SPRITE.BABY_DRAGON_TAMED][world.time];
                        aT(SPRITE.BABY_DRAGON_TAMED, t, -t.width / 4, -t.height / 4);
                        t = Ie[SPRITE.BABY_DRAGON_WING_LEFT_TAMED][world.time];
                        w = -t.width,
                        h = -t.height,
                        C.save(),
                        C.translate(-40 * K, -45 * K),
                        C.rotate(this.vehicle_fx4.v * this.vehicle_fx1),
                        drawCtxImage(C, t, -w / 4, -h / 4, w / 2, h / 2),
                        C.restore();
                        t = Ie[SPRITE.BABY_DRAGON_WING_RIGHT_TAMED][world.time];
                        C.save(),
                        C.translate(40 * K, -45 * K),
                        C.rotate(-this.vehicle_fx4.v * this.vehicle_fx1),
                        drawCtxImage(C, t, -w / 4, -h / 4, w / 2, h / 2),
                        C.restore()
                    } else if (this.vehicle === ItemType.NIMBUS) {
                        this.vehicle_fx5 = N.lerp(this.vehicle_fx5, this.speed, .018);
                        t = Ie[ItemType.NIMBUS][world.time];
                        aT(ItemType.NIMBUS, t, -t.width / 4, -t.height / 4)
                    } else if (this.vehicle === ItemType.PLANE) {
                        this.vehicle_fx5 = N.lerp(this.vehicle_fx5, this.speed, .018);
                        t = Ie[ItemType.PLANE][world.time];
                        aT(ItemType.PLANE, t, -t.width / 4, -t.height / 4)
                    } else if (this.vehicle === ItemType.SLED) {
                        t = Ie[ItemType.SLED][world.time];
                        aT(ItemType.SLED, t, -t.width / 4, -t.height / 4)
                    } else if (this.vehicle === ItemType.BABY_MAMMOTH) {
                        t = Ie[SPRITE.BABY_MAMMOTH_TAMED][world.time];
                        this.speed > 85 ? this.vehicle_fx1 = window.Math.min(1, this.vehicle_fx1 + zT / 4) : this.vehicle_fx1 = window.Math.max(0, this.vehicle_fx1 - zT),
                        this.vehicle_fx3 += 60 * zT,
                        this.vehicle_fx3 > 60 && (this.vehicle_fx3 -= 60);
                        var i = this.vehicle_fx1 * (12 * (this.vehicle_fx3 < 30 ? this.vehicle_fx3 / 30 : 1 - (this.vehicle_fx3 - 30) / 30) - 6);
                        aT(SPRITE.BABY_MAMMOTH_TAMED, t, -t.width / 4, -t.height / 4 + i)
                    } else if (this.vehicle === ItemType.BOAR) {
                        t = Ie[SPRITE.BOAR_TAMED][world.time];
                        this.speed > 85 ? this.vehicle_fx1 = window.Math.min(1, this.vehicle_fx1 + zT / 4) : this.vehicle_fx1 = window.Math.max(0, this.vehicle_fx1 - zT),
                        this.vehicle_fx3 += 60 * zT,
                        this.vehicle_fx3 > 60 && (this.vehicle_fx3 -= 60);
                        i = this.vehicle_fx1 * (12 * (this.vehicle_fx3 < 30 ? this.vehicle_fx3 / 30 : 1 - (this.vehicle_fx3 - 30) / 30) - 6);
                        aT(SPRITE.BOAR_TAMED, t, -t.width / 4, -t.height / 4 + i)
                    } else if (this.vehicle === ItemType.CRAB_BOSS) {
                        t = Ie[SPRITE.CRAB_BOSS_TAMED][world.time];
                        this.speed > 85 ? this.vehicle_fx1 = window.Math.min(1, this.vehicle_fx1 + zT / 4) : this.vehicle_fx1 = window.Math.max(0, this.vehicle_fx1 - zT),
                        this.vehicle_fx3 += 60 * zT,
                        this.vehicle_fx3 > 60 && (this.vehicle_fx3 -= 60);
                        i = this.vehicle_fx1 * (12 * (this.vehicle_fx3 < 30 ? this.vehicle_fx3 / 30 : 1 - (this.vehicle_fx3 - 30) / 30) - 6);
                        aT(SPRITE.CRAB_BOSS_TAMED, t, -t.width / 4 + i, -t.height / 4),
                        C.restore(),
                        C.save(),
                        C.translate(user.cam.x + this.x, user.cam.y + this.y),
                        C.rotate(window.Math.PI + this.vehicle_fx2 + T),
                        C.translate(120, i),
                        C.rotate(I);
                        t = Ie[SPRITE.CRAB_BOSS_CLAW_LEFT][world.time];
                        w = -t.width,
                        h = -t.height,
                        drawCtxImage(C, t, -w / 2, -h / 2, w, h),
                        C.restore(),
                        C.save(),
                        C.translate(user.cam.x + this.x, user.cam.y + this.y),
                        C.rotate(window.Math.PI + this.vehicle_fx2 + I + T),
                        C.translate(120, i),
                        C.rotate(I);
                        t = Ie[SPRITE.CRAB_BOSS_CLAW_RIGHT][world.time];
                        w = -t.width,
                        h = -t.height,
                        drawCtxImage(C, t, -w / 2, -h / 2, w, h)
                    }
                    C.restore()
                }
                if(settings.vehicle.enabled) C.globalAlpha = 1
            }
            const kI = 4
              , CI = [[], [], [], [], []]
              , LI = ["#BB0000", "#00BB00", "#1CE7E0", "#DBE71C", "#BB0000"];
            function BI(e, t, i) {
                if (1 !== t.tryLoad())
                    return t;
                var n = CI[i][e];
                if (void 0 === n) {
                    var a = (n = window.document.createElement("canvas")).getContext("2d")
                      , I = t.width
                      , T = t.height;
                    n.width = I,
                    n.height = T,
                    a.drawImage(t, 0, 0),
                    a.globalCompositeOperation = "source-in",
                    a.fillStyle = LI[i],
                    a.fillRect(0, 0, I, T),
                    CI[i][e] = n
                }
                return n
            }
            function MI() {
                var e = 0;
                switch (this.right) {
                case ItemType.WOOD_SHIELD:
                case ItemType.STONE_SHIELD:
                case ItemType.GOLD_SHIELD:
                case ItemType.DIAMOND_SHIELD:
                case ItemType.AMETHYST_SHIELD:
                case ItemType.REIDITE_SHIELD:
                    e = 1
                }
                if (this.ghost)
                    for (var t = 0; t < this.bubbles.length; t++) {
                        var i = this.bubbles[t];
                        if (i.life > .5)
                            var n = 1 - 2 * (i.life - .5);
                        else
                            n = 2 * i.life;
                        C.globalAlpha = n;
                        var a = Ie[SPRITE.BUBBLES][world.time][i.id];
                        drawCtxImage(C, a, user.cam.x + i.x - a.width / 2, user.cam.y + i.y - a.height / 2),
                        C.globalAlpha = 1
                    }
                else {
                    C.save(),
                    C.translate(user.cam.x + this.x, user.cam.y + this.y),
                    world.dist_from_biomes(this),
                    this.action & STATE.ATTACK && function(e) {
                        if (e.right >= 0)
                            switch (e.right) {
                            case ItemType.WATERING_CAN_FULL:
                                C.save();
                                var t = -3 * e.attack.v / window.Math.PI;
                                if (e.attack.o)
                                    var i = -window.Math.PI / 3 - (window.Math.PI / 3 + e.attack.v) / 3;
                                else
                                    i = e.attack.v;
                                C.rotate(e.angle - window.Math.PI / 2 + i),
                                C.globalAlpha = t / 1.2,
                                Re(C, -40 * K, 90 * K, 5 * K),
                                he(C, "#0B6A84"),
                                C.globalAlpha = t / 1.2,
                                Re(C, -52 * K, 100 * K, 8 * K),
                                he(C, "#0B6A84"),
                                C.globalAlpha = t / 1.2,
                                Re(C, -30 * K, 95 * K, 4 * K),
                                he(C, "#0B6A84"),
                                C.globalAlpha = 1,
                                C.restore();
                                break;
                            case ItemType.STONE_SHOVEL:
                            case ItemType.GOLD_SHOVEL:
                            case ItemType.DIAMOND_SHOVEL:
                            case ItemType.AMETHYST_SHOVEL:
                            case ItemType.REIDITE_SHOVEL:
                                if (1 === e.fly)
                                    break;
                                if (e.dist_winter > 0)
                                    var n = SPRITE.ICE_SHOVEL_CO[world.time];
                                else
                                    n = e.dist_sand > 0 || e.dist_desert > 0 ? SPRITE.SAND_SHOVEL_CO[world.time] : SPRITE.GRD_SHOVEL_CO[world.time];
                                t = -3 * e.attack.v / window.Math.PI,
                                0 === (i = e.attack.o ? window.Math.max(.5 - t / 2 + .5, 0) : window.Math.max(t / 2, 0)) && (e.angle_init = e.angle),
                                C.save(),
                                C.rotate(e.angle_init - window.Math.PI / 2),
                                C.globalAlpha = t;
                                var a = 25 * K + 25 * i;
                                Re(C, a, 80 * K, 15 * K),
                                he(C, n),
                                Re(C, -a, 80 * K, 15 * K),
                                he(C, n),
                                C.globalAlpha = 1,
                                C.restore()
                            }
                    }(this),
                    C.save(),
                    C.rotate(this.angle - window.Math.PI / 2),
                    this.action & STATE.ATTACK || (this.action & STATE.IDLE || 0 !== this.vehicle ? this.idle.update() : this.action & STATE.WALK && this.walk.update());
                    var I, T = this.idle.v, o = this.walk.v;
                    if (this.clothe === ItemType.WINTER_HOOD) {
                        a = Ie[SPRITE.GLOVES_HOOD][world.time];
                        I = SPRITE.GLOVES_HOOD
                    } else if (this.clothe === ItemType.DIAMOND_PROTECTION) {
                        a = Ie[SPRITE.GLOVES_DIAMOND_PROTECTION][world.time];
                        I = SPRITE.GLOVES_DIAMOND_PROTECTION
                    } else if (this.clothe === ItemType.AMETHYST_PROTECTION) {
                        a = Ie[SPRITE.GLOVES_AMETHYST_PROTECTION][world.time];
                        I = SPRITE.GLOVES_AMETHYST_PROTECTION
                    } else if (this.clothe === ItemType.REIDITE_PROTECTION) {
                        a = Ie[SPRITE.GLOVES_REIDITE_PROTECTION][world.time];
                        I = SPRITE.GLOVES_REIDITE_PROTECTION
                    } else if (this.superzombie) {
                        a = Ie[SPRITE.ZOMBIE_HAND][world.time];
                        I = SPRITE.ZOMBIE_HAND
                    } else
                        try {
                            a = Ie[ItemType.HAND][this.skin][world.time];
                            I = ItemType.HAND
                        } catch (e) {}
                    shadow = Ie[SPRITE.HAND_SHADOW][world.time];
                    var r = a
                      , d = I;
                    if (this.action & STATE.ATTACK) {
                        this.attack.update() && 0 == this.attack.o && (this.hand = !this.hand,
                        this.action -= STATE.ATTACK,
                        this.id == user.id && (user.control.mouse = 0)),
                        this.right >= 0 && (this.hand = !0);
                        var s = this.hand ? this.attack.v : -this.attack.v / 3
                          , h = this.hand ? this.attack.v / 3 : -this.attack.v;
                        if (this.superzombie)
                            C.save(),
                            C.rotate(s),
                            iT(I, a, -a.width / 2 - K * (66 + T), -a.height / 2 + (5 + o) * K),
                            C.restore(),
                            C.save(),
                            C.rotate(h),
                            iT(I, a, -a.width / 2 + K * (66 + T), -a.height / 2 + (5 + o) * K),
                            C.restore();
                        else if (0 === e) {
                            if (this.right === ItemType.WOOD_BOW && (s = -N.ease_out_quad(-s)),
                            C.save(),
                            C.rotate(s),
                            iT(SPRITE.HAND_SHADOW, shadow, -shadow.width / 2 - K * (49 + T), -shadow.height / 2 + (15 + o) * K),
                            this.right === ItemType.BOOK) {
                                var y = Ie[this.right][this.book][world.time];
                                nT(this.right, this.book, y, -y.width / 4 - K * (62 + T), -y.height / 4 + K * (o + 18))
                            } else
                                DI(this.right, T, o);
                            I >= SPRITE.GLOVES_DIAMOND_PROTECTION ? aT(I, a, -a.width / 4 - K * (49 + T), -a.height / 4 + (11 + o) * K) : I !== SPRITE.GLOVES_HOOD ? nT(I, this.skin, a, -a.width / 4 - K * (49 + T), -a.height / 4 + (11 + o) * K) : iT(I, a, -a.width / 2 - K * (49 + T), -a.height / 2 + (11 + o) * K),
                            C.restore(),
                            C.save(),
                            C.rotate(h),
                            iT(SPRITE.HAND_SHADOW, shadow, -shadow.width / 2 + K * (49 + T), -shadow.height / 2 + (15 + o) * K),
                            I >= SPRITE.GLOVES_DIAMOND_PROTECTION ? aT(I, a, -a.width / 4 + K * (49 + T), -a.height / 4 + (11 + o) * K) : I !== SPRITE.GLOVES_HOOD ? nT(I, this.skin, a, -a.width / 4 + K * (49 + T), -a.height / 4 + (11 + o) * K) : iT(I, a, -a.width / 2 + K * (49 + T), -a.height / 2 + (11 + o) * K),
                            C.restore()
                        }
                    } else if (this.superzombie)
                        iT(I, a, -a.width / 2 - K * (66 + T), -a.height / 2 + (5 + o) * K),
                        iT(I, a, -a.width / 2 + K * (66 + T), -a.height / 2 + (5 + o) * K);
                    else if (0 === e) {
                        if (iT(SPRITE.HAND_SHADOW, shadow, -shadow.width / 2 - K * (49 + T), -shadow.height / 2 + (15 + o) * K),
                        this.right === ItemType.BOOK) {
                            y = Ie[this.right][this.book][world.time];
                            nT(this.right, this.book, y, -y.width / 4 - K * (62 + T), -y.height / 4 + K * (o + 18))
                        } else
                            DI(this.right, T, o);
                        I >= SPRITE.GLOVES_DIAMOND_PROTECTION ? aT(I, a, -a.width / 4 - K * (49 + T), -a.height / 4 + (11 + o) * K) : I !== SPRITE.GLOVES_HOOD ? nT(I, this.skin, a, -a.width / 4 - K * (49 + T), -a.height / 4 + (11 + o) * K) : iT(I, a, -a.width / 2 - K * (49 + T), -a.height / 2 + (11 + o) * K),
                        iT(SPRITE.HAND_SHADOW, shadow, -shadow.width / 2 + K * (49 + T), -shadow.height / 2 + (15 + o) * K),
                        I >= SPRITE.GLOVES_DIAMOND_PROTECTION ? aT(I, a, -a.width / 4 + K * (49 + T), -a.height / 4 + (11 + o) * K) : I !== SPRITE.GLOVES_HOOD ? nT(I, this.skin, a, -a.width / 4 + K * (49 + T), -a.height / 4 + (11 + o) * K) : iT(I, a, -a.width / 2 + K * (49 + T), -a.height / 2 + (11 + o) * K)
                    }
                    if (this.bag && this.clothe < 1) {
                        a = Ie[ItemType.BAG][this.baglook][world.time];
                        nT(ItemType.BAG, this.baglook, a, -a.width / 4, -a.height / 4 - 39 * K)
                    }
                    if (this.superzombie) {
                        a = Ie[SPRITE.ZOMBIE_BODY][world.time];
                        iT(SPRITE.ZOMBIE_BODY, a, -a.width / 2, -a.height / 2),
                        this.move_head.update();
                        a = Ie[SPRITE.ZOMBIE_HEAD][world.time];
                        iT(SPRITE.ZOMBIE_HEAD, a, -a.width / 2, -a.height / 2 + this.move_head.v)
                    } else {
                        a = Ie[SPRITE.BODY][this.skin][world.time];
                        if (this.clothe !== ItemType.WINTER_HOOD && (nT(SPRITE.BODY, this.skin, a, -a.width / 4, -a.height / 4),
                        this.accessory > 0))
                            try {
                                a = Ie[SPRITE.ACCESSORY][this.accessory][world.time];
                                nT(SPRITE.ACCESSORY, this.accessory, a, -a.width / 4, -a.height / 4)
                            } catch (e) {}
                    }
                    if (this.action & STATE.HEAL) {
                        if (this.heal.update() && 0 == this.heal.o && (this.action -= STATE.HEAL),
                        C.globalAlpha = .6 - this.heal.v,
                        this.superzombie) {
                            a = Ie[SPRITE.ZOMBIE_HEAL];
                            drawCtxImage(C, a, -a.width / 2, -a.height / 2)
                        } else {
                            a = BI(this.skin, Ie[SPRITE.BODY][this.skin][0], 1);
                            drawCtxImage(C, a, a.width / 4, a.height / 4, -a.width / 2, -a.height / 2)
                        }
                        C.globalAlpha = 1
                    }
                    if (this.action & STATE.WEB) {
                        this.web.update() && 0 == this.web.o && (this.action -= STATE.WEB),
                        C.globalAlpha = .6 - this.web.v;
                        a = Ie[SPRITE.WEB];
                        drawCtxImage(C, a, -a.width / 2, -a.height / 2),
                        C.globalAlpha = 1
                    }
                    if (this.action & STATE.HURT) {
                        if (this.hit.update() && 0 == this.hit.o && (this.action -= STATE.HURT),
                        C.globalAlpha = .6 - this.hit.v,
                        this.superzombie) {
                            a = Ie[SPRITE.ZOMBIE_HURT];
                            drawCtxImage(C, a, -a.width / 2, -a.height / 2)
                        } else {
                            a = BI(this.skin, Ie[SPRITE.BODY][this.skin][0], 0);
                            drawCtxImage(C, a, a.width / 4, a.height / 4, -a.width / 2, -a.height / 2)
                        }
                        C.globalAlpha = 1
                    }
                    if (this.action & STATE.COLD) {
                        this.freeze.update() && 0 == this.freeze.o && (this.action -= STATE.COLD),
                        C.globalAlpha = .6 - this.freeze.v;
                        a = BI(this.skin, Ie[SPRITE.BODY][this.skin][0], 2);
                        drawCtxImage(C, a, a.width / 4, a.height / 4, -a.width / 2, -a.height / 2),
                        C.globalAlpha = 1
                    }
                    if (this.action & STATE.HUNGER) {
                        if (this.starve.update() && 0 == this.starve.o && (this.action -= STATE.HUNGER),
                        C.globalAlpha = .6 - this.starve.v,
                        this.superzombie) {
                            a = Ie[SPRITE.ZOMBIE_HUNGER];
                            drawCtxImage(C, a, -a.width / 2, -a.height / 2)
                        } else {
                            a = BI(this.skin, Ie[SPRITE.BODY][this.skin][0], 3);
                            drawCtxImage(C, a, a.width / 4, a.height / 4, -a.width / 2, -a.height / 2)
                        }
                        C.globalAlpha = 1
                    }
                    if (function(e) {
                        if (e > 0) {
                            var t = Ie[e][world.time];
                            switch (e) {
                            case ItemType.WOOD_HELMET:
                                iT(e, t, -t.width / 2 + 2 * K, -t.height / 2 - 5 * K);
                                break;
                            case ItemType.EARMUFFS:
                                iT(e, t, -t.width / 2, -t.height / 2 - 18 * K);
                                break;
                            case ItemType.COAT:
                                iT(e, t, -t.width / 2, -t.height / 2 - 10 * K);
                                break;
                            case ItemType.EXPLORER_HAT:
                                iT(e, t, -t.width / 2, -t.height / 2 - 19 * K);
                                break;
                            case ItemType.PIRATE_HAT:
                                aT(e, t, -t.width / 4, -t.height / 4 - 20 * K);
                                break;
                            case ItemType.STONE_HELMET:
                                iT(e, t, -t.width / 2 - 1 * K, -t.height / 2 - 23 * K);
                                break;
                            case ItemType.GOLD_HELMET:
                                iT(e, t, -t.width / 2, -t.height / 2 - 5 * K);
                                break;
                            case ItemType.DIAMOND_HELMET:
                                iT(e, t, -t.width / 2, -t.height / 2 - 2 * K);
                                break;
                            case ItemType.AMETHYST_HELMET:
                                iT(e, t, -t.width / 2 + 1.5 * K, -t.height / 2 - 1 * K);
                                break;
                            case ItemType.REIDITE_HELMET:
                            case ItemType.DIAMOND_PROTECTION:
                            case ItemType.AMETHYST_PROTECTION:
                            case ItemType.REIDITE_PROTECTION:
                            case ItemType.TURBAN1:
                            case ItemType.TURBAN2:
                            case ItemType.PILOT_HAT:
                            case ItemType.LAVA_HELMET:
                            case ItemType.WITCH_HAT:
                            case ItemType.FUR_HAT:
                            case ItemType.FLOWER_HAT:
                                aT(e, t, -t.width / 4, -t.height / 4 + 2 * K);
                                break;
                            case ItemType.CHRISTMAS_HAT:
                            case ItemType.ELF_HAT:
                                iT(e, t, -t.width / 2 - 5 * K, -t.height / 2 - 2 * K);
                                break;
                            case ItemType.CAP_SCARF:
                            case ItemType.WINTER_HOOD:
                            case ItemType.DIVING_MASK:
                                iT(e, t, -t.width / 2, -t.height / 2 - 2 * K);
                                break;
                            case ItemType.SUPER_DIVING_SUIT:
                                iT(e, t, -t.width / 2 + 2 * K, -t.height / 2);
                                break;
                            case ItemType.DRAGON_HELMET:
                                iT(e, t, -t.width / 2, -t.height / 2 - 5 * K);
                                break;
                            case ItemType.CROWN_GREEN:
                            case ItemType.CROWN_ORANGE:
                            case ItemType.CROWN_BLUE:
                                iT(e, t, -t.width / 2 - 1 * K, -t.height / 2);
                                break;
                            case ItemType.HOOD:
                                iT(e, t, -t.width / 2, -t.height / 2 + 2 * K);
                                break;
                            case ItemType.PEASANT:
                            case ItemType.WINTER_PEASANT:
                                iT(e, t, -t.width / 2, -t.height / 2 + 8 * K);
                                break;
                            case ItemType.CRAB_HELMET:
                                iT(e, t, -t.width / 2, -t.height / 2 - 4 * K)
                            }
                        }
                    }(this.clothe),
                    1 === e && (this.action & STATE.ATTACK && (T += 15 * this.attack.v),
                    iT(SPRITE.HAND_SHADOW, shadow, -shadow.width / 2 - 26 * K, -shadow.height / 2 + (31 + o + T) * K),
                    d >= SPRITE.GLOVES_DIAMOND_PROTECTION ? aT(d, r, -r.width / 4 - 26 * K, -r.height / 4 + (27 + o + T) * K) : d !== SPRITE.GLOVES_HOOD ? nT(d, this.skin, r, -r.width / 4 - 26 * K, -r.height / 4 + (27 + o + T) * K) : iT(d, r, -r.width / 2 - 26 * K, -r.height / 2 + (27 + o + T) * K),
                    iT(SPRITE.HAND_SHADOW, shadow, -shadow.width / 2 + 26 * K, -shadow.height / 2 + (31 + o + T) * K),
                    d >= SPRITE.GLOVES_DIAMOND_PROTECTION ? aT(d, r, -r.width / 4 + 26 * K, -r.height / 4 + (27 + o + T) * K) : d !== SPRITE.GLOVES_HOOD ? nT(d, this.skin, r, -r.width / 4 + 26 * K, -r.height / 4 + (27 + o + T) * K) : iT(d, r, -r.width / 2 + 26 * K, -r.height / 2 + (27 + o + T) * K),
                    function(e, t, i) {
                        if (e >= 0) {
                            var n = Ie[e][world.time];
                            switch (e) {
                            case ItemType.WOOD_SHIELD:
                            case ItemType.STONE_SHIELD:
                            case ItemType.GOLD_SHIELD:
                                aT(e, n, -n.width / 4 - K * (0 + t), -n.height / 4 + K * (i + 35));
                                break;
                            case ItemType.DIAMOND_SHIELD:
                                aT(e, n, -n.width / 4 - K * (1 + t), -n.height / 4 + K * (i + 45));
                                break;
                            case ItemType.AMETHYST_SHIELD:
                            case ItemType.REIDITE_SHIELD:
                                aT(e, n, -n.width / 4 - K * (1 + t), -n.height / 4 + K * (i + 40))
                            }
                        }
                    }(this.right, 0, o + T)),
                    C.restore(),
                    ((this.clothe !== ItemType.HOOD && this.clothe !== ItemType.WINTER_HOOD) || settings.showNames)) {
                        if (this.dist_winter > 0) {
                            this.player.label_winter || (this.player.label_winter = ft(K, this.player.nickname, 20, "#187484", "#000000", 2, null, null, 300 * K));
                            a = this.player.label_winter
                        } else {
                            this.player.label || (this.player.label = ft(K, this.player.nickname, 20, "#FFF", "#000000", 2, null, null, 300 * K));
                            a = this.player.label
                        }
                        world.day == SPRITE.NIGHT && (C.globalAlpha = .5);
                        T = window.Math.floor(-a.width / 2),
                        o = window.Math.floor(-a.height / 2 - 70 * K);
                        if (drawCtxImage(C, a, T, o),
                        this.player.level > 0) {
                            var R = T + a.width + 5;
                            a = Ie[SPRITE.VERIFIED];
                            let e = "";
                            this.player.level >= 4e3 && (e = "orange"),
                            this.player.level < 2500 && (e = "cyan"),
                            this.player.level < 2e3 && (e = "red"),
                            this.player.level < 1e3 && (e = "#720e9e"),
                            this.player.level < 500 && (e = "#007FFF"),
                            this.player.level < 200 && (e = "#32de84"),
                            this.player.level < 50 && (e = "#A9A9A9"),
                            void 0 === qn[this.player.level] && (qn[this.player.level] = ft(K, "[" + this.player.level + "]", 23, e, "#000000", 2, null, null, 50 * K)),
                            drawCtxImage(C, qn[this.player.level], R, o)
                        }
                        C.globalAlpha = 1
                    } else
                        o = window.Math.floor(-70 * K),
                        T = window.Math.floor(Ie[SPRITE.ICON_MEMBER].width / 1.5);
                    if (user.in_team(this.pid)) {
                        if (this.pid == user.team[0])
                            a = Ie[SPRITE.ICON_LEADER];
                        else
                            a = Ie[SPRITE.ICON_MEMBER];
                        drawCtxImage(C, a, T - a.width - 5, o - 6)
                    }
                    C.restore()
                }
            }
            function YI() {
                if (this.enabled && this.delay >= 0) {
                    var e = window.Date.now() - this.delay
                      , t = e % 1e3 / 1e3;
                    t > .5 ? t = 1 - 2 * (t - .5) : t *= 2,
                    (e = window.Math.floor(e / 1e3)) < world.ghost_delay && (e = world.ghost_delay - e,
                    this.label || (this.label = ft(K, " seconds before you die", 40, "#660000", null, null, null, null, null, "#000000", 10)),
                    this.now == e && this.sec || (this.now = e,
                    this.sec = ft(K, "" + e, 40, "#660000", null, null, null, null, null, "#000000", 10)),
                    drawCtxImage(C, this.label, (L - this.label.width) / 2, 100 * K),
                    C.globalAlpha = t,
                    drawCtxImage(C, this.sec, (L - this.label.width) / 2 - this.sec.width + 15 * K, 100 * K),
                    C.globalAlpha = 1)
                }
            }
            let HI = !0;
            function KI() {
                if (void 0 !== this.message && HI) {
                    var e = user.inv.can_select.length > 0 ? -95 : 0;
                    drawCtxImage(C, this.message, 0, B - this.message.height + e)
                }
            }
            function GI() {
                this.text && (this.timeout.o ? C.globalAlpha = 1 - this.timeout.v : C.globalAlpha = 1,
                this.label || (this.label = ft(K, this.text[0], 25, this.text[1], null, null, null, null, null, "#000000", 8)),
                drawCtxImage(C, this.label, (L - this.label.width) / 2, 50 * K),
                C.globalAlpha = 1,
                this.timeout.update() && 0 == this.timeout.o && (this.text = this.list.shift(),
                this.label = null))
            }
            function WI() {
                if (C.save(),
                C.translate(user.cam.x + this.x, user.cam.y + this.y),
                this.text.length > 0) {
                    for (var e = 0; e < this.text.length && e < 2; e++)
                        this.label[e] || (this.label[e] = ce(K, this.text[e]),
                        this.text_effect[e] = 0,
                        this.text_move[e] = 0),
                        1 === e && (this.text_move[0] = 30 * N.ease_in_out_quad(this.text_ease));
                    this.text_effect[0] += zT,
                    this.text.length > 1 && (this.text_ease = window.Math.min(this.text_ease + zT, 1),
                    this.text_effect[0] > 1 && this.text_ease > .5 && (this.text_effect[1] += zT));
                    for (e = 0; e < this.text.length && e < 2; e++) {
                        var t = this.text_effect[e];
                        t > 0 && (C.globalAlpha = t < .25 ? 4 * t : t > 3.75 ? window.Math.max(4 * (4 - t), 0) : 1,
                        drawCtxImage(C, this.label[e], -this.label[e].width / 2, -this.text_move[e] + -this.label[e].height / 2 - 110 * K))
                    }
                    this.text_effect[0] > 4 && (this.text_effect.shift(),
                    this.text.shift(),
                    this.text_move.shift(),
                    this.label.shift(),
                    this.text_ease = 0)
                }
                C.restore()
            }
            document.addEventListener("keydown", (function(e) {
                "ShiftRight" === e.code && (HI = !HI)
            }
            ));
            var FI = 0;
            function xI(e, t, i, n, a, I, T, o=0) {
                for (var r = T; r >= o; r--)
                    for (var d = e; d <= t; d++)
                        for (var s = i; s <= n; s++) {
                            var h = MT.tiles[d][s];
                            if (h && h[I]) {
                                var y = h[I][r];
                                if (void 0 !== y)
                                    for (var R = 0; R < y.length; R++) {
                                        var E = y[R]
                                          , m = Ie[a][world.time][r]
                                          , S = (FI + 3 * (d + s)) % 60
                                          , c = S < 30 ? S / 30 : 1 - (S - 30) / 30
                                          , u = -m.width * (1 + .9 * c / 30)
                                          , p = -m.height * (1 + .9 * c / 30);
                                        c = (S = (FI + 7 * (d + s)) % 60) < 30 ? S / 30 : 1 - (S - 30) / 30;
                                        var P = C.globalAlpha;
                                        C.globalAlpha = (.9 + .1 * c) * P,
                                        drawCtxImage(C, m, user.cam.x + E.x - u / 2, user.cam.y + E.y - p / 2, u, p),
                                        C.globalAlpha = P
                                    }
                            }
                        }
            }
            function VI(e, t, i, n, a, I, T, o=0) {
                world.breath[a].update();
                for (var r = T; r >= o; r--)
                    for (var d = e; d <= t; d++)
                        for (var s = i; s <= n; s++) {
                            var h = MT.tiles[d][s];
                            if (h && h[I]) {
                                var y = h[I][r];
                                if (void 0 !== y)
                                    for (var R = 0; R < y.length; R++) {
                                        var E = y[R];
                                        if (E.update) {
                                            E.hit.update() && 0 == E.hit.o && (E.update = !1);
                                            var m = (1 - E.hit.v) * zT * 600 * K
                                              , S = window.Math.cos(E.angle) * m
                                              , c = window.Math.sin(E.angle) * m
                                        } else
                                            S = 0,
                                            c = 0;
                                        var u = Ie[a][world.time][r]
                                          , p = -u.width * world.breath[a].v
                                          , P = -u.height * world.breath[a].v;
                                        drawCtxImage(C, u, user.cam.x + E.x - p / 2 + S, user.cam.y + E.y - P / 2 + c, p, P)
                                    }
                            }
                        }
            }
            var UI = [];
            for (ne = 0; ne < 100; ne++) {
                var XI = 1;
                window.Math.random() < .25 && (XI = 0),
                UI.push(XI)
            }
            function qI(e, t, i, n, a, I, T, o=0, r) {
                for (var d = T; d >= o; d--)
                    for (var s = e; s <= t; s++)
                        for (var h = i; h <= n; h++)
                            if (!(r > 0 && 1 === UI[(s + h * r) % UI.length])) {
                                var y = MT.tiles[s][h];
                                if (void 0 !== y && void 0 !== y[I]) {
                                    var R = y[I][d];
                                    if (void 0 !== R)
                                        for (var E = 0; E < R.length; E++) {
                                            var m = R[E];
                                            if (m.update) {
                                                m.hit.update() && 0 == m.hit.o && (m.update = !1);
                                                var S = (1 - m.hit.v) * zT * 600 * K
                                                  , c = window.Math.cos(m.angle) * S
                                                  , u = window.Math.sin(m.angle) * S
                                            } else
                                                c = 0,
                                                u = 0;
                                            var p = Ie[a][world.time][d];
                                            drawCtxImage(C, p, user.cam.x + m.x - p.width / (2 * _scale_object) + c, user.cam.y + m.y - p.height / (2 * _scale_object) + u, p.width / _scale_object, p.height / _scale_object)
                                        }
                                }
                            }
            }
            function zI(e, t, i, n, a, I, T, o=0, r) {
                for (var d = e; d <= t; d++)
                    for (var s = i; s <= n; s++) {
                        var h = MT.tiles[d][s];
                        if (void 0 !== h && void 0 !== h[I]) {
                            var y = h[I];
                            if (void 0 !== y)
                                if (1 === y.scale) {
                                    var R = Ie[a][world.time][y._id];
                                    C.save(),
                                    C.translate(user.cam.x + y.x, user.cam.y + y.y),
                                    C.rotate(y.angle),
                                    drawCtxImage(C, R, -R.width / 4, -R.height / 4, R.width / 2, R.height / 2),
                                    C.restore()
                                } else if (3 === y.scale)
                                    for (var E = 0; E < y.p.length; E++) {
                                        C.save(),
                                        C.translate(user.cam.x + y.x, user.cam.y + y.y),
                                        C.rotate(y.p[E].angle);
                                        R = Ie[a][world.time][y.p[E]._id];
                                        drawCtxImage(C, R, -R.width / 3 + y.p[E].x, -R.height / 3 + y.p[E].y, R.width / 1.5, R.height / 1.5),
                                        C.restore()
                                    }
                                else {
                                    R = Ie[a][world.time][y._id];
                                    C.save(),
                                    C.translate(user.cam.x + y.x, user.cam.y + y.y),
                                    C.rotate(y.angle),
                                    drawCtxImage(C, R, -R.width / 2, -R.height / 2, R.width, R.height),
                                    C.restore()
                                }
                        }
                    }
            }
            function jI(e, t, i, n, a, I, T, o=0, r) {
                for (var d = T; d >= o; d--)
                    for (var s = e; s <= t; s++)
                        for (var h = i; h <= n; h++) {
                            var y = MT.tiles[s][h];
                            if (void 0 !== y && void 0 !== y[I]) {
                                var R = y[I][d];
                                if (void 0 !== R)
                                    for (var E = 0; E < R.length; E++) {
                                        var m = R[E];
                                        if (m.update) {
                                            m.hit.update() && 0 == m.hit.o && (m.update = !1);
                                            var S = (1 - m.hit.v) * zT * 600 * K
                                              , c = window.Math.cos(m.angle) * S
                                              , u = window.Math.sin(m.angle) * S
                                        } else
                                            c = 0,
                                            u = 0;
                                        for (var p = 0; p < _bubble[d].amount; p++) {
                                            world.lava[p].last !== jT && (world.lava[p].update(),
                                            world.lava[p].last = jT);
                                            var P = Ie[SPRITE.LAVA_BUBBLE][world.time][_bubble[d].pos[p].t]
                                              , w = -P.width * world.lava[p].v
                                              , _ = -P.height * world.lava[p].v;
                                            drawCtxImage(C, P, user.cam.x + m.x - w / 4 + c + _bubble[d].pos[p].x, user.cam.y + m.y - _ / 4 + u + _bubble[d].pos[p].y, w / 2, _ / 2)
                                        }
                                    }
                            }
                        }
            }
            _scale_object = 1,
            _bubble = [{
                amount: 10,
                pos: [{
                    x: -128,
                    y: -20,
                    t: 0
                }, {
                    x: -86,
                    y: -4,
                    t: 1
                }, {
                    x: -60,
                    y: -74,
                    t: 2
                }, {
                    x: -22,
                    y: -144,
                    t: 0
                }, {
                    x: -58,
                    y: 86,
                    t: 0
                }, {
                    x: 3,
                    y: -30,
                    t: 0
                }, {
                    x: 65,
                    y: -115,
                    t: 1
                }, {
                    x: 118,
                    y: -50,
                    t: 0
                }, {
                    x: 73,
                    y: 15,
                    t: 1
                }, {
                    x: 67,
                    y: 79,
                    t: 0
                }]
            }, {
                amount: 5,
                pos: [{
                    x: -45,
                    y: -26,
                    t: 0
                }, {
                    x: -45,
                    y: 20,
                    t: 2
                }, {
                    x: 10,
                    y: -60,
                    t: 1
                }, {
                    x: 52,
                    y: -17,
                    t: 1
                }, {
                    x: 14,
                    y: 45,
                    t: 0
                }]
            }, {
                amount: 3,
                pos: [{
                    x: -30,
                    y: 3,
                    t: 2
                }, {
                    x: 7,
                    y: -38,
                    t: 2
                }, {
                    x: 37,
                    y: 5,
                    t: 2
                }]
            }, {
                amount: 11,
                pos: [{
                    x: -74,
                    y: -87,
                    t: 2
                }, {
                    x: -11,
                    y: -10,
                    t: 1
                }, {
                    x: -99,
                    y: 17,
                    t: 1
                }, {
                    x: -66,
                    y: 84,
                    t: 0
                }, {
                    x: -55,
                    y: 123,
                    t: 1
                }, {
                    x: 10,
                    y: 81,
                    t: 2
                }, {
                    x: 52,
                    y: 50,
                    t: 0
                }, {
                    x: 138,
                    y: 9,
                    t: 1
                }, {
                    x: 104,
                    y: -28,
                    t: 0
                }, {
                    x: 67,
                    y: -56,
                    t: 2
                }, {
                    x: 5,
                    y: -112,
                    t: 0
                }]
            }, {
                amount: 6,
                pos: [{
                    x: -33,
                    y: -66,
                    t: 2
                }, {
                    x: -58,
                    y: 10,
                    t: 0
                }, {
                    x: -19,
                    y: 44,
                    t: 1
                }, {
                    x: 44,
                    y: 20,
                    t: 0
                }, {
                    x: 53,
                    y: -36,
                    t: 2
                }, {
                    x: 7,
                    y: -62,
                    t: 0
                }]
            }, {
                amount: 3,
                pos: [{
                    x: -19,
                    y: -25,
                    t: 1
                }, {
                    x: -29,
                    y: 13,
                    t: 2
                }, {
                    x: 12,
                    y: 12,
                    t: 0
                }]
            }];
            var $I = 0
              , ZI = 0
              , JI = 0
              , QI = 0;
            function eT(e, t) {
                world.transition ? (C.globalAlpha = 1,
                e.draw_bg(t),
                world.time = world.time ? 0 : 1,
                C.globalAlpha = 1 - world.shade.v,
                e.draw_bg(t),
                world.time = world.time ? 0 : 1,
                C.globalAlpha = 1) : e.draw_bg(t)
            }
            function tT(e, t) {
                world.transition ? (C.globalAlpha = 1,
                e.draw_fg(t),
                world.time = world.time ? 0 : 1,
                C.globalAlpha = 1 - world.shade.v,
                e.draw_fg(t),
                world.time = world.time ? 0 : 1,
                C.globalAlpha = 1) : e.draw_fg(t)
            }
            function iT(e, t, i, n) {
                world.transition ? (C.globalAlpha = 1,
                drawCtxImage(C, Ie[e][world.time], i, n),
                world.time = world.time ? 0 : 1,
                C.globalAlpha = 1 - world.shade.v,
                drawCtxImage(C, Ie[e][world.time], i, n),
                world.time = world.time ? 0 : 1,
                C.globalAlpha = 1) : drawCtxImage(C, t, i, n)
            }
            function nT(e, t, i, n, a) {
                var I = i.width
                  , T = i.height
                  , o = window.Math.floor(I / 2)
                  , r = window.Math.floor(T / 2);
                world.transition ? (C.globalAlpha = 1,
                drawCtxImage(C, Ie[e][t][world.time], 0, 0, I, T, n, a, o, r),
                world.time = world.time ? 0 : 1,
                C.globalAlpha = 1 - world.shade.v,
                drawCtxImage(C, Ie[e][t][world.time], 0, 0, I, T, n, a, o, r),
                world.time = world.time ? 0 : 1,
                C.globalAlpha = 1) : drawCtxImage(C, Ie[e][t][world.time], 0, 0, I, T, n, a, o, r)
            }
            function aT(e, t, i, n) {
                var a = t.width
                  , I = t.height
                  , T = window.Math.floor(a / 2)
                  , o = window.Math.floor(I / 2);
                world.transition ? (
                drawCtxImage(C, Ie[e][world.time], 0, 0, a, I, i, n, T, o)
                , world.time = world.time ? 0 : 1
                ,world.shade.v,
                drawCtxImage(C, Ie[e][world.time], 0, 0, a, I, i, n, T, o),
                world.time = world.time ? 0 : 1) : drawCtxImage(C, t, 0, 0, a, I, i, n, T, o)
            }
            function IT(e) {
                C.globalAlpha = e.alpha,
                Re(C, e.x + user.cam.x, e.y + user.cam.y, e.r),
                he(C, SPRITE.SWIM_COLOR[world.time]),
                C.globalAlpha = 1
            }
            function TT(e) {
                C.save(),
                C.translate(user.cam.x + e.x, user.cam.y + e.y),
                C.rotate(e.angle),
                C.globalAlpha = e.alpha;
                var t = Ie[e.id][world.time];
                drawCtxImage(C, t, -t.width / 2, -t.height / 2),
                C.globalAlpha = 1,
                C.restore()
            }
            function oT(e, t, i, n, a) {
                world.transition && 1 == a ? (C.globalAlpha = 1,
                drawCtxImage(C, Ie[e][world.time][t], i, n),
                world.time = world.time ? 0 : 1,
                C.globalAlpha = 1 - world.shade.v,
                drawCtxImage(C, Ie[e][world.time][t], i, n),
                world.time = world.time ? 0 : 1,
                C.globalAlpha = 1) : (C.globalAlpha = a,
                drawCtxImage(C, Ie[e][world.time][t], i, n),
                C.globalAlpha = 1)
            }
            function rT(e, t, i) {
                world.transition ? (C.globalAlpha = 1,
                e.draw(t, i),
                world.time = world.time ? 0 : 1,
                C.globalAlpha = 1 - world.shade.v,
                e.draw(t, i),
                world.time = world.time ? 0 : 1,
                C.globalAlpha = 1) : e.draw(t, i)
            }
            function dT(e, t, i, n, a, I, T, o, r, d) {
                world.transition ? (C.globalAlpha = 1,
                e(t, i, n, a, I, T, o, r, d),
                world.time = world.time ? 0 : 1,
                C.globalAlpha = 1 - world.shade.v,
                e(t, i, n, a, I, T, o, r, d),
                world.time = world.time ? 0 : 1,
                C.globalAlpha = 1) : e(t, i, n, a, I, T, o, r, d)
            }
            function sT(e, t, i, n, a, I, T) {
                var o, r = "#";
                return r += (o = window.Math.floor(n * T + (1 - T) * e)) < 16 ? "0" + o.toString(16) : o.toString(16),
                r += (o = window.Math.floor(a * T + (1 - T) * t)) < 16 ? "0" + o.toString(16) : o.toString(16),
                r += (o = window.Math.floor(I * T + (1 - T) * i)) < 16 ? "0" + o.toString(16) : o.toString(16)
            }
            function hT(e, t, i, n, a, I) {
                var T = n.w1
                  , o = n.w2
                  , r = n.w3
                  , d = user.cam.x + e - 700
                  , s = window.Math.max(user.cam.y + t, 0)
                  , h = window.Math.max(-user.cam.y + B - i - 100, 0)
                  , y = s
                  , R = B - s - h;
                if (I)
                    var E = n.t(T).x;
                else
                    E = T.r.x;
                var m = d + WORLD.LW1SX;
                if (m += E + WORLD.W1SX - 2,
                I)
                    E = n.t(o).x;
                else
                    E = o.r.x;
                var S = d + WORLD.LW2SX - m + E
                  , c = (m += S - 2) - 2;
                if (I)
                    E = n.t(r).x;
                else
                    E = r.r.x;
                if (c < m + (S = d + WORLD.LW3SX - m + E) - 3 ? m += S - 2 : m = c,
                S = d + WORLD.LSANDX - m,
                I > 0 && 1 === a.isSand) {
                    if (world.transition) {
                        var u = world.time ? 1 - world.shade.v : world.shade.v;
                        C.fillStyle = sT(15, 77, 72, 252, 239, 187, u)
                    } else
                        C.fillStyle = SPRITE.SAND_COLOR[world.time];
                    C.fillRect(m, y, S, R)
                } else {
                    if (world.transition) {
                        u = world.time ? 1 - world.shade.v : world.shade.v;
                        C.fillStyle = sT(a.night[0], a.night[1], a.night[2], a.day[0], a.day[1], a.day[2], u)
                    } else
                        C.fillStyle = a._color[world.time];
                    C.fillRect(m, y, S, R)
                }
            }
            function yT(e, t, i, n, a, I) {
                var T = n.w1
                  , o = n.w2
                  , r = n.w3
                  , d = user.cam.x + e - 700
                  , s = window.Math.max(user.cam.y + t, 0)
                  , h = window.Math.max(-user.cam.y + B - i - 100, 0)
                  , y = s
                  , R = B - s - h;
                if (I)
                    var E = n.t(T);
                else
                    E = T.r;
                var m = d + WORLD.LW1SX
                  , S = m
                  , c = y
                  , u = E.x + WORLD.W1SX
                  , p = R
                  , P = m += E.x + WORLD.W1SX - 2;
                if (I)
                    E = n.t(o);
                else
                    E = o.r;
                var w = d + WORLD.LW2SX - m + E.x
                  , _ = m
                  , f = y
                  , g = w
                  , l = R
                  , A = (m += w - 2) - 2;
                if (I)
                    E = n.t(r);
                else
                    E = r.r;
                if (A < m + (w = d + WORLD.LW3SX - m + E.x) - 3)
                    var b = !0
                      , N = m
                      , v = y
                      , D = w
                      , O = R
                      , k = m += w - 2;
                else {
                    b = !1;
                    m = A;
                    k = -1
                }
                if (w = d + WORLD.LSANDX - m,
                world.transition) {
                    var L = world.time ? 1 - world.shade.v : world.shade.v;
                    C.fillStyle = sT(9, 55, 63, 11, 106, 132, L)
                } else
                    C.fillStyle = SPRITE.WATER_3_COLOR[world.time];
                if (C.fillRect(S, c, u, p),
                I)
                    if (world.transition) {
                        L = world.time ? 1 - world.shade.v : world.shade.v;
                        C.fillStyle = sT(15, 70, 76, 42, 139, 155, L)
                    } else
                        C.fillStyle = SPRITE.WATER_2_COLOR[world.time];
                else if (world.transition) {
                    L = world.time ? 1 - world.shade.v : world.shade.v;
                    C.fillStyle = sT(9, 55, 63, 11, 106, 132, L)
                } else
                    C.fillStyle = SPRITE.WATER_3_COLOR[world.time];
                if (C.fillRect(_, f, g, l),
                b) {
                    if (I)
                        if (world.transition) {
                            L = world.time ? 1 - world.shade.v : world.shade.v;
                            C.fillStyle = sT(17, 94, 96, 169, 214, 211, L)
                        } else
                            C.fillStyle = SPRITE.WATER_1_COLOR[world.time];
                    else if (world.transition) {
                        L = world.time ? 1 - world.shade.v : world.shade.v;
                        C.fillStyle = sT(9, 55, 63, 11, 106, 132, L)
                    } else
                        C.fillStyle = SPRITE.WATER_3_COLOR[world.time];
                    C.fillRect(N, v, D, O)
                }
                UI.quality && I && n.draw_foams_left(A, k, P, d, -user.cam.y + c, -user.cam.y + c + p)
            }
            function RT(e, t, i, n, a, I) {
                var T = n.w1
                  , o = n.w2
                  , r = n.w3
                  , d = user.cam.y + e - 700
                  , s = window.Math.max(user.cam.x + t, 0)
                  , h = window.Math.max(-user.cam.x + L - i - 100, 0)
                  , y = s
                  , R = L - s - h;
                if (I)
                    var E = n.t(T).x;
                else
                    E = T.r.x;
                var m = d + WORLD.LW1SX;
                if (m += E + WORLD.W1SX - 2,
                I)
                    E = n.t(o).x;
                else
                    E = o.r.x;
                var S = d + WORLD.LW2SX - m + E
                  , c = (m += S - 2) - 2;
                if (I)
                    E = n.t(r).x;
                else
                    E = r.r.x;
                if (c < m + (S = d + WORLD.LW3SX - m + E) - 3 ? m += S - 2 : m = c,
                S = d + WORLD.LSANDX - m,
                I > 0 && 1 === a.isSand) {
                    if (world.transition) {
                        var u = world.time ? 1 - world.shade.v : world.shade.v;
                        C.fillStyle = sT(15, 77, 72, 252, 239, 187, u)
                    } else
                        C.fillStyle = SPRITE.SAND_COLOR[world.time];
                    C.fillRect(y, m, R, S)
                } else {
                    if (world.transition) {
                        u = world.time ? 1 - world.shade.v : world.shade.v;
                        C.fillStyle = sT(a.night[0], a.night[1], a.night[2], a.day[0], a.day[1], a.day[2], u)
                    } else
                        C.fillStyle = a._color[world.time];
                    C.fillRect(y, m, R, S)
                }
            }
            function ET(e, t, i, n, a, I) {
                var T = n.w1
                  , o = n.w2
                  , r = n.w3
                  , d = user.cam.y + e - 700
                  , s = window.Math.max(user.cam.x + t, 0)
                  , h = window.Math.max(-user.cam.x + L - i - 100, 0)
                  , y = s
                  , R = L - s - h;
                if (I)
                    var E = n.t(T);
                else
                    E = T.r;
                var m = d + WORLD.LW1SX
                  , S = y
                  , c = m
                  , u = E.x + WORLD.W1SX
                  , p = R
                  , P = m += E.x + WORLD.W1SX - 2;
                if (I)
                    E = n.t(o);
                else
                    E = o.r;
                var w = d + WORLD.LW2SX - m + E.x
                  , _ = m
                  , f = y
                  , g = w
                  , l = R
                  , A = (m += w - 2) - 2;
                if (I)
                    E = n.t(r);
                else
                    E = r.r;
                if (A < m + (w = d + WORLD.LW3SX - m + E.x) - 3)
                    var b = !0
                      , N = m
                      , v = y
                      , D = w
                      , O = R
                      , k = m += w - 2;
                else {
                    b = !1;
                    m = A;
                    k = -1
                }
                if (w = d + WORLD.LSANDX - m,
                world.transition) {
                    var B = world.time ? 1 - world.shade.v : world.shade.v;
                    C.fillStyle = sT(9, 55, 63, 11, 106, 132, B)
                } else
                    C.fillStyle = SPRITE.WATER_3_COLOR[world.time];
                if (C.fillRect(S, c, p, u),
                I)
                    if (world.transition) {
                        B = world.time ? 1 - world.shade.v : world.shade.v;
                        C.fillStyle = sT(15, 70, 76, 42, 139, 155, B)
                    } else
                        C.fillStyle = SPRITE.WATER_2_COLOR[world.time];
                else if (world.transition) {
                    B = world.time ? 1 - world.shade.v : world.shade.v;
                    C.fillStyle = sT(9, 55, 63, 11, 106, 132, B)
                } else
                    C.fillStyle = SPRITE.WATER_3_COLOR[world.time];
                if (C.fillRect(f, _, l, g),
                b) {
                    if (I)
                        if (world.transition) {
                            B = world.time ? 1 - world.shade.v : world.shade.v;
                            C.fillStyle = sT(17, 94, 96, 169, 214, 211, B)
                        } else
                            C.fillStyle = SPRITE.WATER_1_COLOR[world.time];
                    else if (world.transition) {
                        B = world.time ? 1 - world.shade.v : world.shade.v;
                        C.fillStyle = sT(9, 55, 63, 11, 106, 132, B)
                    } else
                        C.fillStyle = SPRITE.WATER_3_COLOR[world.time];
                    C.fillRect(v, N, O, D)
                }
                UI.quality && I && n.draw_foams_top(A, k, P, d, -user.cam.x + S, -user.cam.x + S + p)
            }
            function mT(e, t, i, n, a, I) {
                var T = n.w1
                  , o = n.w2
                  , r = n.w3
                  , d = user.cam.x + e + 820
                  , s = window.Math.max(user.cam.y + t, 0)
                  , h = window.Math.max(-user.cam.y + B - i - 100, 0)
                  , y = s
                  , R = B - s - h;
                if (I)
                    var E = n.t(T).x;
                else
                    E = T.r.x;
                var m = d + WORLD.LW1SX;
                m += -E + WORLD.W1SX + 2;
                if (I)
                    E = n.t(o).x;
                else
                    E = o.r.x;
                var S = d - WORLD.LW2SX - m - E
                  , c = (m += S + 2) - 2;
                if (I)
                    E = n.t(r).x;
                else
                    E = r.r.x;
                if (c > m + (S = d - WORLD.LW3SX - m - E) ? m += S + 2 : m = c,
                S = d - WORLD.LSANDX - m,
                I > 0 && 1 === a.isSand) {
                    if (world.transition) {
                        var u = world.time ? 1 - world.shade.v : world.shade.v;
                        C.fillStyle = sT(15, 77, 72, 252, 239, 187, u)
                    } else
                        C.fillStyle = SPRITE.SAND_COLOR[world.time];
                    C.fillRect(m, y, S, R)
                } else {
                    if (world.transition) {
                        u = world.time ? 1 - world.shade.v : world.shade.v;
                        C.fillStyle = sT(a.night[0], a.night[1], a.night[2], a.day[0], a.day[1], a.day[2], u)
                    } else
                        C.fillStyle = a._color[world.time];
                    C.fillRect(m, y, S, R)
                }
            }
            function ST(e, t, i, n, a, I) {
                var T = n.w1
                  , o = n.w2
                  , r = n.w3
                  , d = user.cam.x + e + 820
                  , s = window.Math.max(user.cam.y + t, 0)
                  , h = window.Math.max(-user.cam.y + B - i - 100, 0)
                  , y = s
                  , R = B - s - h;
                if (I)
                    var E = n.t(T);
                else
                    E = T.r;
                var m = d + WORLD.LW1SX
                  , S = m
                  , c = y
                  , u = -E.x + WORLD.W1SX
                  , p = R
                  , P = m += -E.x + WORLD.W1SX + 2;
                if (I)
                    E = n.t(o);
                else
                    E = o.r;
                var w = d - WORLD.LW2SX - m - E.x
                  , _ = m
                  , f = y
                  , g = w
                  , l = R
                  , A = (m += w + 2) - 2;
                if (I)
                    E = n.t(r);
                else
                    E = r.r;
                if (A > m + (w = d - WORLD.LW3SX - m - E.x))
                    var b = !0
                      , N = m
                      , v = y
                      , D = w
                      , O = R
                      , k = m += w + 2;
                else {
                    b = !1;
                    m = A;
                    k = -1
                }
                if (w = d - WORLD.LSANDX - m,
                world.transition) {
                    var L = world.time ? 1 - world.shade.v : world.shade.v;
                    C.fillStyle = sT(9, 55, 63, 11, 106, 132, L)
                } else
                    C.fillStyle = SPRITE.WATER_3_COLOR[world.time];
                if (C.fillRect(S, c, u, p),
                I)
                    if (world.transition) {
                        L = world.time ? 1 - world.shade.v : world.shade.v;
                        C.fillStyle = sT(15, 70, 76, 42, 139, 155, L)
                    } else
                        C.fillStyle = SPRITE.WATER_2_COLOR[world.time];
                else if (world.transition) {
                    L = world.time ? 1 - world.shade.v : world.shade.v;
                    C.fillStyle = sT(9, 55, 63, 11, 106, 132, L)
                } else
                    C.fillStyle = SPRITE.WATER_3_COLOR[world.time];
                if (C.fillRect(_, f, g, l),
                b) {
                    if (I)
                        if (world.transition) {
                            L = world.time ? 1 - world.shade.v : world.shade.v;
                            C.fillStyle = sT(17, 94, 96, 169, 214, 211, L)
                        } else
                            C.fillStyle = SPRITE.WATER_1_COLOR[world.time];
                    else if (world.transition) {
                        L = world.time ? 1 - world.shade.v : world.shade.v;
                        C.fillStyle = sT(9, 55, 63, 11, 106, 132, L)
                    } else
                        C.fillStyle = SPRITE.WATER_3_COLOR[world.time];
                    C.fillRect(N, v, D, O)
                }
                UI.quality && I && n.draw_foams_right(A, k, P, d, -user.cam.y + c, -user.cam.y + c + p)
            }
            function cT(e, t, i, n, a, I) {
                var T = n.w1
                  , o = n.w2
                  , r = n.w3
                  , d = user.cam.y + e + 710
                  , s = window.Math.max(user.cam.x + t, 0)
                  , h = window.Math.max(-user.cam.x + L - i - 100, 0)
                  , y = s
                  , R = L - s - h;
                if (I)
                    var E = n.t(T).x;
                else
                    E = T.r.x;
                var m = d + WORLD.LW1SX;
                if (m += -E + WORLD.W1SX + 2,
                I)
                    E = n.t(o).x;
                else
                    E = o.r.x;
                var S = d - WORLD.LW2SX - m - E
                  , c = (m += S + 2) - 2;
                if (I)
                    E = n.t(r).x;
                else
                    E = r.r.x;
                if (c > m + (S = d - WORLD.LW3SX - m - E) ? m += S + 2 : m = c,
                S = d - WORLD.LSANDX - m,
                I > 0 && 1 === a.isSand) {
                    if (world.transition) {
                        var u = world.time ? 1 - world.shade.v : world.shade.v;
                        C.fillStyle = sT(15, 77, 72, 252, 239, 187, u)
                    } else
                        C.fillStyle = SPRITE.SAND_COLOR[world.time];
                    C.fillRect(y, m, R, S)
                } else {
                    if (world.transition) {
                        u = world.time ? 1 - world.shade.v : world.shade.v;
                        C.fillStyle = sT(a.night[0], a.night[1], a.night[2], a.day[0], a.day[1], a.day[2], u)
                    } else
                        C.fillStyle = a._color[world.time];
                    C.fillRect(y, m, R, S)
                }
            }
            function uT(e, t, i, n, a, I) {
                var T = n.w1
                  , o = n.w2
                  , r = n.w3
                  , d = user.cam.y + e + 710
                  , s = window.Math.max(user.cam.x + t, 0)
                  , h = window.Math.max(-user.cam.x + L - i - 100, 0)
                  , y = s
                  , R = L - s - h;
                if (I)
                    var E = n.t(T);
                else
                    E = T.r;
                var m = d + WORLD.LW1SX
                  , S = m
                  , c = y
                  , u = -E.x + WORLD.W1SX
                  , p = R
                  , P = m += -E.x + WORLD.W1SX + 2;
                if (I)
                    E = n.t(o);
                else
                    E = o.r;
                var w = d - WORLD.LW2SX - m - E.x
                  , _ = m
                  , f = y
                  , g = w
                  , l = R
                  , A = (m += w + 2) - 2;
                if (I)
                    E = n.t(r);
                else
                    E = r.r;
                if (A > m + (w = d - WORLD.LW3SX - m - E.x))
                    var b = !0
                      , N = m
                      , v = y
                      , D = w
                      , O = R
                      , k = m += w + 2;
                else {
                    b = !1;
                    m = A;
                    k = -1
                }
                if (w = d - WORLD.LSANDX - m,
                world.transition) {
                    var B = world.time ? 1 - world.shade.v : world.shade.v;
                    C.fillStyle = sT(9, 55, 63, 11, 106, 132, B)
                } else
                    C.fillStyle = SPRITE.WATER_3_COLOR[world.time];
                if (C.fillRect(c, S, p, u),
                I)
                    if (world.transition) {
                        B = world.time ? 1 - world.shade.v : world.shade.v;
                        C.fillStyle = sT(15, 70, 76, 42, 139, 155, B)
                    } else
                        C.fillStyle = SPRITE.WATER_2_COLOR[world.time];
                else if (world.transition) {
                    B = world.time ? 1 - world.shade.v : world.shade.v;
                    C.fillStyle = sT(9, 55, 63, 11, 106, 132, B)
                } else
                    C.fillStyle = SPRITE.WATER_3_COLOR[world.time];
                if (C.fillRect(f, _, l, g),
                b) {
                    if (I)
                        if (world.transition) {
                            B = world.time ? 1 - world.shade.v : world.shade.v;
                            C.fillStyle = sT(17, 94, 96, 169, 214, 211, B)
                        } else
                            C.fillStyle = SPRITE.WATER_1_COLOR[world.time];
                    else if (world.transition) {
                        B = world.time ? 1 - world.shade.v : world.shade.v;
                        C.fillStyle = sT(9, 55, 63, 11, 106, 132, B)
                    } else
                        C.fillStyle = SPRITE.WATER_3_COLOR[world.time];
                    C.fillRect(v, N, O, D)
                }
                UI.quality && I && n.draw_foams_bottom(A, k, P, d, -user.cam.x + c, -user.cam.x + c + p)
            }
            function pT() {
                if (C.globalAlpha = 1,
                world.transition)
                    var t = world.shade.update();
                world.update_dist_from_biomes(-user.cam.x, -user.cam.y),
                $I = window.Math.max(window.Math.floor(-user.cam.x / world.dw) - 5, 0),
                ZI = window.Math.min(window.Math.floor((-user.cam.x + L) / world.dw) + 4, world.nw - 1),
                JI = window.Math.max(window.Math.floor(-user.cam.y / world.dh) - 3, 0),
                QI = window.Math.min(window.Math.floor((-user.cam.y + B) / world.dh) + 3, world.nh - 1),
                function() {
                    for (var e = world.biomes.length - 1; e >= 0; e--)
                        if ((E = world.biomes[e]).t === world.BIOME_SEA) {
                            var t = world.BIOME[E.t];
                            if (-user.cam.x >= E.x1 - 230 - L && -user.cam.x <= E.x2 + 330 && -user.cam.y >= E.y1 - B && -user.cam.y <= E.y2 + 100) {
                                var i = E.x2;
                                E.t !== world.BIOME_SEA && (i -= 610);
                                var n = E.x1;
                                E.t !== world.BIOME_SEA && (n += 610);
                                var a = E.y2;
                                E.t !== world.BIOME_SEA && (a -= 610);
                                var I = E.y1;
                                if (E.t !== world.BIOME_SEA && (I += 610),
                                world.transition) {
                                    var T = world.time ? 1 - world.shade.v : world.shade.v;
                                    C.fillStyle = sT(t.night[0], t.night[1], t.night[2], t.day[0], t.day[1], t.day[1], T)
                                } else
                                    C.fillStyle = t._color[world.time];
                                var o = window.Math.max(user.cam.x + n - 2 - 230, 0)
                                  , r = window.Math.max(-user.cam.x + L - i - 330 - 2, 0)
                                  , d = window.Math.max(user.cam.y + I - 2, 0)
                                  , s = window.Math.max(-user.cam.y + B - a - 100 - 2, 0);
                                C.beginPath(),
                                C.fillRect(o, d, L - r - o, B - d - s)
                            }
                        }
                    for (e = world.biomes.length - 1; e >= 0; e--)
                        (E = world.biomes[e]).t !== world.BIOME_SEA && (i = E.x2,
                        E.t !== world.BIOME_SEA && (i -= 400),
                        n = E.x1,
                        E.t !== world.BIOME_SEA && (n += 400),
                        a = E.y2,
                        E.t !== world.BIOME_SEA && (a -= 300),
                        I = E.y1,
                        E.t !== world.BIOME_SEA && (I += 300),
                        !(E.v & WORLD.RIGHT) && -user.cam.x >= i - L + 120 && -user.cam.x <= i + 820 && -user.cam.y >= I + 88 - B && -user.cam.y <= a + 50 && (mT(i, I + 88, a - 88, user.beach[0], world.BIOME[E.t], E.v & WORLD.RIGHT),
                        ST(i, I + 88, a - 88, user.beach[0], world.BIOME[E.t], E.v & WORLD.RIGHT)),
                        !(E.v & WORLD.LEFT) && -user.cam.x >= n - L - 700 && -user.cam.x <= n - 20 && -user.cam.y >= I + 88 - B && -user.cam.y <= a + 50 && (hT(n, I + 88, a - 88, user.beach[1], world.BIOME[E.t], E.v & WORLD.LEFT),
                        yT(n, I + 88, a - 88, user.beach[1], world.BIOME[E.t], E.v & WORLD.LEFT)),
                        !(E.v & WORLD.BOTTOM) && -user.cam.x >= n - 235 - L && -user.cam.x <= i + 350 && -user.cam.y >= a - B - 275 && -user.cam.y <= a + 490 && (cT(a - 230, n - 230, i + 230, user.beach[2], world.BIOME[E.t], E.v & WORLD.BOTTOM),
                        uT(a - 230, n - 230, i + 230, user.beach[2], world.BIOME[E.t], E.v & WORLD.BOTTOM)),
                        !(E.v & WORLD.TOP) && -user.cam.x >= n - 235 - L && -user.cam.x <= i + 350 && -user.cam.y >= I - B - 390 && -user.cam.y <= I + 315 && (RT(I + 310, n - 230, i + 230, user.beach[3], world.BIOME[E.t], E.v & WORLD.TOP),
                        ET(I + 310, n - 230, i + 230, user.beach[3], world.BIOME[E.t], E.v & WORLD.TOP)));
                    for (e = world.biomes.length - 1; e >= 0; e--)
                        (E = world.biomes[e]).t !== world.BIOME_SEA && (i = E.x2,
                        E.t !== world.BIOME_SEA && (i -= 400),
                        n = E.x1,
                        E.t !== world.BIOME_SEA && (n += 400),
                        a = E.y2,
                        E.t !== world.BIOME_SEA && (a -= 300),
                        I = E.y1,
                        E.t !== world.BIOME_SEA && (I += 300),
                        E.v & WORLD.RIGHT && -user.cam.x >= i - L + 120 && -user.cam.x <= i + 820 && -user.cam.y >= I + 88 - B && -user.cam.y <= a + 50 && mT(i, I + 88, a - 88, user.beach[0], world.BIOME[E.t], E.v & WORLD.RIGHT),
                        E.v & WORLD.LEFT && -user.cam.x >= n - L - 700 && -user.cam.x <= n - 20 && -user.cam.y >= I + 88 - B && -user.cam.y <= a + 50 && hT(n, I + 88, a - 88, user.beach[1], world.BIOME[E.t], E.v & WORLD.LEFT),
                        E.v & WORLD.BOTTOM && -user.cam.x >= n - 235 - L && -user.cam.x <= i + 350 && -user.cam.y >= a - B - 275 && -user.cam.y <= a + 490 && cT(a - 230, n - 230, i + 230, user.beach[2], world.BIOME[E.t], E.v & WORLD.BOTTOM),
                        E.v & WORLD.TOP && -user.cam.x >= n - 235 - L && -user.cam.x <= i + 350 && -user.cam.y >= I - B - 390 && -user.cam.y <= I + 315 && RT(I + 310, n - 230, i + 230, user.beach[3], world.BIOME[E.t], E.v & WORLD.TOP));
                    for (e = world.biomes.length - 1; e >= 0; e--)
                        (E = world.biomes[e]).t !== world.BIOME_SEA && (t = world.BIOME[E.t],
                        -user.cam.x >= E.x1 - 230 - L && -user.cam.x <= E.x2 + 330 && -user.cam.y >= E.y1 - B && -user.cam.y <= E.y2 + 100 && (i = E.x2,
                        E.t !== world.BIOME_SEA && (E.v & WORLD.RIGHT ? i -= 610 : i -= 414),
                        n = E.x1,
                        E.t !== world.BIOME_SEA && (E.v & WORLD.LEFT ? n += 610 : n += 414),
                        a = E.y2,
                        E.t !== world.BIOME_SEA && (E.v & WORLD.BOTTOM ? a -= 610 : a -= 414),
                        I = E.y1,
                        E.t !== world.BIOME_SEA && (E.v & WORLD.TOP ? I += 610 : I += 414),
                        world.transition ? (T = world.time ? 1 - world.shade.v : world.shade.v,
                        C.fillStyle = sT(t.night[0], t.night[1], t.night[2], t.day[0], t.day[1], t.day[2], T)) : C.fillStyle = t._color[world.time],
                        0 === E.x1 && (n = 0),
                        0 === E.y1 && (I = 0),
                        o = window.Math.max(user.cam.x + n - 2 - 230, 0),
                        r = window.Math.max(-user.cam.x + L - i - 330 - 2, 0),
                        d = window.Math.max(user.cam.y + I - 2, 0),
                        s = window.Math.max(-user.cam.y + B - a - 100 - 2, 0),
                        C.beginPath(),
                        C.fillRect(o, d, L - r - o, B - d - s)));
                    UI.quality && (dT(VI, JI, QI, $I, ZI, SPRITE.WAVE_TWO, "isl", 2),
                    dT(VI, JI, QI, $I, ZI, SPRITE.WAVE_ONE, "isl", 2)),
                    dT(qI, JI, QI, $I, ZI, SPRITE.ISLAND, "isl", 2),
                    UI.quality && dT(zI, JI, QI, $I, ZI, SPRITE.DECORATION, "de");
                    var h = world.units[ITEMS.PLAYERS];
                    for (e = 0; e < h.length; e++)
                        for (var y = h[e], R = 0; R < y.foot.length; R++)
                            TT(y.foot[R]);
                    for ((Ca += 40 * zT) > 60 && (Ca -= 60),
                    dT(La, JI, QI, $I, ZI, SPRITE.RIVER, "r"),
                    e = 0; e < world.biomes.length; e++) {
                        var E;
                        (E = world.biomes[e]).t !== world.BIOME_SEA && (i = E.x2,
                        E.t !== world.BIOME_SEA && (i -= 400),
                        n = E.x1,
                        E.t !== world.BIOME_SEA && (n += 400),
                        a = E.y2,
                        E.t !== world.BIOME_SEA && (a -= 300),
                        I = E.y1,
                        E.t !== world.BIOME_SEA && (I += 300),
                        (E.v & WORLD.RIGHT) > 0 && -user.cam.x >= i - L + 120 && -user.cam.x <= i + 820 && -user.cam.y >= I + 88 - B && -user.cam.y <= a + 50 && ST(i, I + 88, a - 88, user.beach[0], world.BIOME[E.t], E.v & WORLD.RIGHT),
                        (E.v & WORLD.LEFT) > 0 && -user.cam.x >= n - L - 700 && -user.cam.x <= n - 20 && -user.cam.y >= I + 88 - B && -user.cam.y <= a + 50 && yT(n, I + 88, a - 88, user.beach[1], world.BIOME[E.t], E.v & WORLD.LEFT),
                        (E.v & WORLD.BOTTOM) > 0 && -user.cam.x >= n - 235 - L && -user.cam.x <= i + 350 && -user.cam.y >= a - B - 275 && -user.cam.y <= a + 490 && uT(a - 230, n - 230, i + 230, user.beach[2], world.BIOME[E.t], E.v & WORLD.BOTTOM),
                        (E.v & WORLD.TOP) > 0 && -user.cam.x >= n - 235 - L && -user.cam.x <= i + 350 && -user.cam.y >= I - B - 390 && -user.cam.y <= I + 315 && ET(I + 310, n - 230, i + 230, user.beach[3], world.BIOME[E.t], E.v & WORLD.TOP))
                    }
                }(),
                function() {
                    var t = $I
                      , i = ZI
                      , n = JI
                      , a = QI;
                    UI.quality && dT(qI, n, a, t, i, SPRITE.LAVA_GROUND, "la", 5),
                    dT(qI, n, a, t, i, SPRITE.MAGMA, "la", 5),
                    UI.quality && dT(jI, n, a, t, i, SPRITE.MAGMA, "la", 5),
                    dT(qI, n, a, t, i, SPRITE.MARKER, "ma", 3);
                    for (var I = world.units[ITEMS.SAND_WORM], T = 0; T < I.length; T++)
                        I[T].draw_ground();
                    var o = world.units[ITEMS.PLAYERS];
                    for (T = 0; T < o.length; T++)
                        for (var r = o[T], d = 0; d < r.swim.length; d++)
                            IT(r.swim[d]);
                    var s = world.units[ITEMS.BRIDGE];
                    for (T = 0; T < s.length; T++)
                        rT(s[T], ItemType.BRIDGE),
                        s[T].draw_life(s[T].info);
                    var h = world.units[ITEMS.FURNACE];
                    for (T = 0; T < h.length; T++)
                        h[T].info && eT(h[T]);
                    var y = world.units[ITEMS.FIRE];
                    for (T = 0; T < y.length; T++)
                        eT(y[T], ItemType.FIRE);
                    var R = world.units[ITEMS.RESURRECTION];
                    for (T = 0; T < R.length; T++)
                        eT(R[T]);
                    var E = world.units[ITEMS.EMERALD_MACHINE];
                    for (T = 0; T < E.length; T++)
                        eT(E[T]);
                    var m = world.units[ITEMS.BIG_FIRE];
                    for (T = 0; T < m.length; T++)
                        eT(m[T], ItemType.BIG_FIRE);
                    var plots = world.units[ITEMS.PLOT];
                    for (T = 0; T < plots.length; T++)
                        rT(plots[T], ItemType.PLOT);
                    var c = world.units[ITEMS.SEED];
                    for (T = 0; T < c.length; T++)
                        eT(c[T]);
                    for (c = world.units[ITEMS.TOMATO_SEED],
                    T = 0; T < c.length; T++)
                        eT(c[T]);
                    for (c = world.units[ITEMS.SEED],
                    T = 0; T < c.length; T++)
                        tT(c[T]);
                    var u = world.units[ITEMS.CARROT_SEED];
                    for (T = 0; T < u.length; T++)
                        15 & u[T].info && 10 !== u[T].info || rT(u[T]);
                    var p = world.units[ITEMS.WATERMELON_SEED];
                    for (T = 0; T < p.length; T++)
                        15 & p[T].info && 10 !== p[T].info || rT(p[T]);
                    var P = world.units[ITEMS.ALOE_VERA_SEED];
                    for (T = 0; T < P.length; T++)
                        15 & P[T].info && 10 !== P[T].info || rT(P[T]);
                    var w = world.units[ITEMS.WHEAT_MOB];
                    for (T = 0; T < w.length; T++)
                        rT(w[T], ItemType.WHEAT_SEED);
                    var _ = world.units[ITEMS.GARLIC_SEED];
                    for (T = 0; T < _.length; T++)
                        15 & _[T].info && 10 !== _[T].info || rT(_[T]);
                    var f = world.units[ITEMS.THORNBUSH_SEED];
                    for (T = 0; T < f.length; T++)
                        15 & f[T].info && 10 !== f[T].info || rT(f[T]);
                    var g = world.units[ITEMS.PUMPKIN_SEED];
                    for (T = 0; T < g.length; T++)
                        15 & g[T].info && 10 !== g[T].info || rT(g[T]);
                    for (w = world.units[ITEMS.WHEAT_SEED],
                    T = 0; T < w.length; T++)
                        rT(w[T]);
                    var l = world.units[ITEMS.GARLAND];
                    for (T = 0; T < l.length; T++)
                        rT(l[T], ItemType.GARLAND);
                    var A = world.units[ITEMS.CRATE];
                    for (T = 0; T < A.length; T++)
                        if(!settings.boxOnTop)rT(A[T], SPRITE.CRATE, SPRITE.HURT_DEAD_BOX);
                    var b = world.units[ITEMS.DEAD_BOX];
                    for (T = 0; T < b.length; T++)
                        if(!settings.boxOnTop)rT(b[T], SPRITE.CRATE, SPRITE.HURT_DEAD_BOX);
                    var v = world.units[ITEMS.GIFT];
                    for (T = 0; T < v.length; T++)
                        rT(v[T], SPRITE.GIFT, SPRITE.HURT_GIFT);
                    var D = world.units[ITEMS.RABBIT];
                    for (T = 0; T < D.length; T++)
                        rT(D[T], SPRITE.RABBIT, SPRITE.HURT_RABBIT);
                    var O = world.units[ITEMS.BED];
                    for (T = 0; T < O.length; T++)
                        rT(O[T], ItemType.BED);
                    for (I = world.units[ITEMS.SAND_WORM],
                    T = 0; T < I.length; T++)
                        rT(I[T], SPRITE.SAND_WORM1, SPRITE.HURT_SAND_WORM1);
                    var k = world.units[ITEMS.SPELL];
                    for (T = 0; T < k.length; T++)
                        0 === k[T].fly && rT(k[T]);
                    if (!settings.playerOnTop)
                    for (o = world.units[ITEMS.PLAYERS], T = 0; T < o.length; T++) {
                        if (!((r = o[T]).x + user.cam.x < -130 || r.y + user.cam.y < -130 || r.x + user.cam.x > window.innerWidth + 130 || r.y + user.cam.y > window.innerHeight + 130))
                            if (o[T].vehicle !== ItemType.BABY_DRAGON && o[T].vehicle !== ItemType.BABY_LAVA && o[T].vehicle !== ItemType.HAWK && o[T].vehicle !== ItemType.PLANE && o[T].vehicle !== ItemType.NIMBUS) {
                                if (0 === r.tower)
                                    if (r.tower_fx > 0.001) {
                                        r.tower_fx = N.lerp(r.tower_fx, 0, 0.018);
                                        var L = 1 + 0.18 * window.Math.min(1, window.Math.max(r.tower_fx, 0) / 100);
                                        C.save(),
                                            C.scale(L, L),
                                            (user.cam.x /= L),
                                            (user.cam.y /= L),
                                            (r.x /= L),
                                            (r.y /= L),
                                            (r.r.x /= L),
                                            (r.r.y /= L),
                                            r.draw_vehicle(),
                                            r.draw(),
                                            (user.cam.x *= L),
                                            (user.cam.y *= L),
                                            (r.x *= L),
                                            (r.y *= L),
                                            (r.r.x *= L),
                                            (r.r.y *= L),
                                            C.restore();
                                    } else (r.fly = 0), r.draw_vehicle(), r.draw();
                            } else
                                r.speed <= 180 &&
                                    (C.save(),
                                    (L = 1 + 0.35 * window.Math.min(1, window.Math.max(r.vehicle_fx5 - 30, 0) / 180)),
                                    C.scale(L, L),
                                    (user.cam.x /= L),
                                    (user.cam.y /= L),
                                    (r.x /= L),
                                    (r.y /= L),
                                    (r.r.x /= L),
                                    (r.r.y /= L),
                                    (r.fly = 0),
                                    r.draw_vehicle(),
                                    r.draw(),
                                    (user.cam.x *= L),
                                    (user.cam.y *= L),
                                    (r.x *= L),
                                    (r.y *= L),
                                    (r.r.x *= L),
                                    (r.r.y *= L),
                                    C.restore());
                    }
                    
                    for (O = world.units[ITEMS.BED],
                    T = 0; T < O.length; T++)
                        rT(O[T], SPRITE.BED_TOP);
                    var B = world.units[ITEMS.CRAB];
                    for (T = 0; T < B.length; T++)
                        rT(B[T]);
                    var M = world.units[ITEMS.FOX];
                    for (T = 0; T < M.length; T++)
                        rT(M[T], SPRITE.FOX, SPRITE.HURT_FOX);
                    var Y = world.units[ITEMS.BOAR];
                    for (T = 0; T < Y.length; T++)
                        rT(Y[T]);
                    var H = world.units[ITEMS.WOLF];
                    for (T = 0; T < H.length; T++)
                        rT(H[T], SPRITE.WOLF, SPRITE.HURT_WOLF);
                    var K = world.units[ITEMS.BABY_DRAGON];
                    for (T = 0; T < K.length; T++)
                        rT(K[T], SPRITE.BABY_DRAGON, SPRITE.HURT_BABY_DRAGON);
                    var G = world.units[ITEMS.BABY_LAVA];
                    for (T = 0; T < G.length; T++)
                        rT(G[T], SPRITE.BABY_LAVA, SPRITE.HURT_BABY_LAVA);
                    for (u = world.units[ITEMS.CARROT_SEED],
                    T = 0; T < u.length; T++)
                        15 & u[T].info && 10 !== u[T].info && rT(u[T]);
                    for (p = world.units[ITEMS.WATERMELON_SEED],
                    T = 0; T < p.length; T++)
                        15 & p[T].info && 10 !== p[T].info && rT(p[T]);
                    for (P = world.units[ITEMS.ALOE_VERA_MOB],
                    T = 0; T < P.length; T++)
                        rT(P[T], ItemType.ALOE_VERA);
                    for (P = world.units[ITEMS.ALOE_VERA_SEED],
                    T = 0; T < P.length; T++)
                        15 & P[T].info && 10 !== P[T].info && rT(P[T]);
                    for (c = world.units[ITEMS.TOMATO_SEED],
                    T = 0; T < c.length; T++)
                        tT(c[T]);
                    for (_ = world.units[ITEMS.GARLIC_SEED],
                    T = 0; T < _.length; T++)
                        15 & _[T].info && 10 !== _[T].info && rT(_[T]);
                    for (f = world.units[ITEMS.THORNBUSH_SEED],
                    T = 0; T < f.length; T++)
                        15 & f[T].info && 10 !== f[T].info && rT(f[T]);
                    for (g = world.units[ITEMS.PUMPKIN_SEED],
                    T = 0; T < g.length; T++)
                        15 & g[T].info && 10 !== g[T].info && rT(g[T]);
                    var W = world.units[ITEMS.TREASURE_CHEST];
                    for (T = 0; T < W.length; T++)
                        rT(W[T], SPRITE.TREASURE_CHEST, SPRITE.HURT_TREASURE_CHEST);
                    var F = world.units[ITEMS.KRAKEN];
                    for (T = 0; T < F.length; T++)
                        rT(F[T], SPRITE.KRAKEN, SPRITE.HURT_KRAKEN);
                    var x = world.units[ITEMS.PIRANHA];
                    for (T = 0; T < x.length; T++)
                        rT(x[T], SPRITE.PIRANHA, SPRITE.HURT_PIRANHA);
                    var V = world.units[ITEMS.SPIDER];
                    for (T = 0; T < V.length; T++)
                        rT(V[T], SPRITE.SPIDER, SPRITE.HURT_SPIDER);
                    var U = world.units[ITEMS.PENGUIN];
                    for (T = 0; T < U.length; T++)
                        rT(U[T], SPRITE.PENGUIN, SPRITE.HURT_PENGUIN);
                    var X = world.units[ITEMS.BEAR];
                    for (T = 0; T < X.length; T++)
                        rT(X[T], SPRITE.BEAR, SPRITE.HURT_BEAR);
                    var q = world.units[ITEMS.BABY_MAMMOTH];
                    for (T = 0; T < q.length; T++)
                        rT(q[T]);
                    var z = world.units[ITEMS.FLAME];
                    for (T = 0; T < z.length; T++)
                        rT(z[T], SPRITE.FIRE_MOB, SPRITE.HURT_FIRE_MOB);
                    var j = world.units[ITEMS.CRAB_BOSS];
                    for (T = 0; T < j.length; T++)
                        rT(j[T]);
                    var $ = world.units[ITEMS.MAMMOTH];
                    for (T = 0; T < $.length; T++)
                        rT($[T], SPRITE.MAMMOTH, SPRITE.HURT_MAMMOTH);
                    var Z = world.units[ITEMS.DRAGON];
                    for (T = 0; T < Z.length; T++)
                        1 === Z[T].scale && rT(Z[T], SPRITE.DRAGON, SPRITE.HURT_DRAGON);
                    for (Z = world.units[ITEMS.LAVA_DRAGON],
                    T = 0; T < Z.length; T++)
                        1 === Z[T].scale && rT(Z[T], SPRITE.LAVA_DRAGON, SPRITE.HURT_LAVA_DRAGON);
                    var J = world.units[ITEMS.CHEST];
                    for (T = 0; T < J.length; T++)
                        rT(J[T]);
                    var Q = world.units[ITEMS.WORKBENCH];
                    for (T = 0; T < Q.length; T++)
                        rT(Q[T], ItemType.WORKBENCH);
                    for (h = world.units[ITEMS.FURNACE],
                    T = 0; T < h.length; T++)
                        rT(h[T]);
                    var ee = world.units[ITEMS.BREAD_OVEN];
                    for (T = 0; T < ee.length; T++)
                        rT(ee[T]);
                    var te = world.units[ITEMS.WOOD_DOOR];
                    for (T = 0; T < te.length; T++)
                        te[T].info && rT(te[T], e.enabled ? user.team.includes(te[T].pid) || user.id == te[T].pid ? 10012 : 10013 : ItemType.WOOD_DOOR),
                        te[T].draw_life(te[T].info >> 1);
                    for (te = world.units[ITEMS.STONE_DOOR],
                    T = 0; T < te.length; T++)
                        te[T].info && rT(te[T], e.enabled ? user.team.includes(te[T].pid) || user.id == te[T].pid ? 10014 : 10015 : ItemType.STONE_DOOR),
                        te[T].draw_life(te[T].info >> 1);
                    for (te = world.units[ITEMS.GOLD_DOOR],
                    T = 0; T < te.length; T++)
                        te[T].info && rT(te[T], e.enabled ? user.team.includes(te[T].pid) || user.id == te[T].pid ? 10016 : 10017 : ItemType.GOLD_DOOR),
                        te[T].draw_life(te[T].info >> 1);
                    for (te = world.units[ITEMS.DIAMOND_DOOR],
                    T = 0; T < te.length; T++)
                        te[T].info && rT(te[T], e.enabled ? user.team.includes(te[T].pid) || user.id == te[T].pid ? 10018 : 10019 : ItemType.DIAMOND_DOOR),
                        te[T].draw_life(te[T].info >> 1);
                    for (te = world.units[ITEMS.AMETHYST_DOOR],
                    T = 0; T < te.length; T++)
                        te[T].info && rT(te[T], e.enabled ? user.team.includes(te[T].pid) || user.id == te[T].pid ? 10020 : 10021 : ItemType.AMETHYST_DOOR),
                        te[T].draw_life(te[T].info >> 1);
                    for (te = world.units[ITEMS.REIDITE_DOOR],
                    T = 0; T < te.length; T++)
                        te[T].info && rT(te[T], e.enabled ? user.team.includes(te[T].pid) || user.id == te[T].pid ? 10022 : 10023 : ItemType.REIDITE_DOOR),
                        te[T].draw_life(te[T].info >> 1);
                    for (te = world.units[ITEMS.WOOD_DOOR_SPIKE],
                    T = 0; T < te.length; T++)
                        te[T].info && rT(te[T], e.enabled ? user.team.includes(te[T].pid) || user.id == te[T].pid ? 10024 : 10025 : ItemType.WOOD_DOOR_SPIKE),
                        te[T].draw_life(te[T].info >> 1);
                    for (te = world.units[ITEMS.STONE_DOOR_SPIKE],
                    T = 0; T < te.length; T++)
                        te[T].info && rT(te[T], e.enabled ? user.team.includes(te[T].pid) || user.id == te[T].pid ? 10026 : 10027 : ItemType.STONE_DOOR_SPIKE),
                        te[T].draw_life(te[T].info >> 1);
                    for (te = world.units[ITEMS.GOLD_DOOR_SPIKE],
                    T = 0; T < te.length; T++)
                        te[T].info && rT(te[T], e.enabled ? user.team.includes(te[T].pid) || user.id == te[T].pid ? 10028 : 10029 : ItemType.GOLD_DOOR_SPIKE),
                        te[T].draw_life(te[T].info >> 1);
                    for (te = world.units[ITEMS.DIAMOND_DOOR_SPIKE],
                    T = 0; T < te.length; T++)
                        te[T].info && rT(te[T], e.enabled ? user.team.includes(te[T].pid) || user.id == te[T].pid ? 10030 : 10031 : ItemType.DIAMOND_DOOR_SPIKE),
                        te[T].draw_life(te[T].info >> 1);
                    for (te = world.units[ITEMS.AMETHYST_DOOR_SPIKE],
                    T = 0; T < te.length; T++)
                        te[T].info && rT(te[T], e.enabled ? user.team.includes(te[T].pid) || user.id == te[T].pid ? 10032 : 10033 : ItemType.AMETHYST_DOOR_SPIKE),
                        te[T].draw_life(te[T].info >> 1);
                    for (te = world.units[ITEMS.REIDITE_DOOR_SPIKE],
                    T = 0; T < te.length; T++)
                        te[T].info && rT(te[T], e.enabled ? user.team.includes(te[T].pid) || user.id == te[T].pid ? 10034 : 10035 : ItemType.REIDITE_DOOR_SPIKE),
                        te[T].draw_life(te[T].info >> 1);
                    var ie = world.units[ITEMS.WALL];
                    for (T = 0; T < ie.length; T++)
                        rT(ie[T], ItemType.WOOD_WALL),
                        ie[T].draw_life(ie[T].info);
                    for (ie = world.units[ITEMS.STONE_WALL],
                    T = 0; T < ie.length; T++)
                        rT(ie[T], ItemType.STONE_WALL),
                        ie[T].draw_life(ie[T].info);
                    for (ie = world.units[ITEMS.GOLD_WALL],
                    T = 0; T < ie.length; T++)
                        rT(ie[T], ItemType.GOLD_WALL),
                        ie[T].draw_life(ie[T].info);
                    for (ie = world.units[ITEMS.DIAMOND_WALL],
                    T = 0; T < ie.length; T++)
                        rT(ie[T], ItemType.DIAMOND_WALL),
                        ie[T].draw_life(ie[T].info);
                    for (ie = world.units[ITEMS.AMETHYST_WALL],
                    T = 0; T < ie.length; T++)
                        rT(ie[T], ItemType.AMETHYST_WALL),
                        ie[T].draw_life(ie[T].info);
                    for (ie = world.units[ITEMS.REIDITE_WALL],
                    T = 0; T < ie.length; T++)
                        rT(ie[T], ItemType.REIDITE_WALL),
                        ie[T].draw_life(ie[T].info);
                    var ne = world.units[ITEMS.SPIKE];
                    for (T = 0; T < ne.length; T++)
                        rT(ne[T], e.enabled ? user.team.includes(ne[T].pid) || user.id == ne[T].pid ? 10010 : 10011 : ItemType.WOOD_SPIKE),
                        ne[T].draw_life(ne[T].info);
                    for (ne = world.units[ITEMS.STONE_SPIKE],
                    T = 0; T < ne.length; T++)
                        rT(ne[T], e.enabled ? user.team.includes(ne[T].pid) || user.id == ne[T].pid ? 10008 : 10009 : ItemType.STONE_SPIKE),
                        ne[T].draw_life(ne[T].info);
                    for (ne = world.units[ITEMS.GOLD_SPIKE],
                    T = 0; T < ne.length; T++)
                        rT(ne[T], e.enabled ? user.team.includes(ne[T].pid) || user.id == ne[T].pid ? 10006 : 10007 : ItemType.GOLD_SPIKE),
                        ne[T].draw_life(ne[T].info);
                    for (ne = world.units[ITEMS.DIAMOND_SPIKE],
                    T = 0; T < ne.length; T++)
                        rT(ne[T], e.enabled ? user.team.includes(ne[T].pid) || user.id == ne[T].pid ? 10004 : 10005 : ItemType.DIAMOND_SPIKE),
                        ne[T].draw_life(ne[T].info);
                    for (ne = world.units[ITEMS.AMETHYST_SPIKE],
                    T = 0; T < ne.length; T++)
                        rT(ne[T], e.enabled ? user.team.includes(ne[T].pid) || user.id == ne[T].pid ? 10002 : 10003 : ItemType.AMETHYST_SPIKE),
                        ne[T].draw_life(ne[T].info);
                    for (ne = world.units[ITEMS.REIDITE_SPIKE],
                    T = 0; T < ne.length; T++)
                        rT(ne[T], e.enabled ? user.team.includes(ne[T].pid) || user.id == ne[T].pid ? 1e4 : 10001 : ItemType.REIDITE_SPIKE),
                        ne[T].draw_life(ne[T].info);
                    var ae = world.units[ITEMS.WELL];
                    for (T = 0; T < ae.length; T++) {
                        var Ie = ae[T];
                        Ie.info > 0 ? rT(Ie, SPRITE.WELL_FULL) : rT(Ie, ItemType.WELL)
                    }
                    var Te = world.units[ITEMS.TOTEM];
                    for (T = 0; T < Te.length; T++)
                        rT(Te[T], ItemType.TOTEM);
                    dT(qI, n, a, t, i, ItemType.GOLD, "g", 2),
                    dT(qI, n, a, t, i, ItemType.DIAMOND, "d", 2),
                    dT(qI, n, a, t, i, ItemType.BERRY, "p", 0),
                    dT(qI, n, a, t, i, ItemType.EMERALD, "m", 2),
                    dT(qI, n, a, t, i, ItemType.AMETHYST, "a", 2),
                    dT(qI, n, a, t, i, ItemType.REIDITE, "re", 2),
                    dT(qI, n, a, t, i, SPRITE.SHADOW_CAVE_STONES, "cs", 3, 3),
                    dT(qI, n, a, t, i, SPRITE.SHADOW_CAVE_STONES, "cs", 2, 2),
                    dT(qI, n, a, t, i, SPRITE.SHADOW_CAVE_STONES, "cs", 1, 1),
                    dT(qI, n, a, t, i, SPRITE.SHADOW_CAVE_STONES, "cs", 0, 0),
                    dT(qI, n, a, t, i, SPRITE.CAVE_STONES, "cs", 3, 3),
                    dT(qI, n, a, t, i, SPRITE.CAVE_STONES, "cs", 2, 2),
                    dT(qI, n, a, t, i, SPRITE.CAVE_STONES, "cs", 1, 1),
                    dT(qI, n, a, t, i, SPRITE.CAVE_STONES, "cs", 0, 0);
                    var oe = world.units[ITEMS.FRUIT];
                    for (T = 0; T < oe.length; T++)
                        for (d = 0; d < oe[T].info; d++)
                            rT(oe[T].fruits[d], SPRITE.FRUIT);
                    dT(qI, n, a, t, i, ItemType.STONE, "s", 2);
                    var re = world.units[ITEMS.EXTRACTOR_MACHINE_STONE];
                    for (T = 0; T < re.length; T++)
                        rT(re[T]);
                    for (re = world.units[ITEMS.EXTRACTOR_MACHINE_GOLD],
                    T = 0; T < re.length; T++)
                        rT(re[T]);
                    for (re = world.units[ITEMS.DIAMOND_EXTRACTOR],
                    T = 0; T < re.length; T++)
                        rT(re[T]);
                    for (re = world.units[ITEMS.EXTRACTOR_MACHINE_AMETHYST],
                    T = 0; T < re.length; T++)
                        rT(re[T]);
                    for (re = world.units[ITEMS.EXTRACTOR_MACHINE_REIDITE],
                    T = 0; T < re.length; T++)
                        rT(re[T]);
                    var de = world.units[ITEMS.WINDMILL];
                    for (T = 0; T < de.length; T++)
                        eT(de[T]);
                    for (y = world.units[ITEMS.FIRE],
                    T = 0; T < y.length; T++)
                        tT(y[T]);
                    for (y = world.units[ITEMS.BIG_FIRE],
                    T = 0; T < y.length; T++)
                        tT(y[T]);
                    for (h = world.units[ITEMS.FURNACE],
                    T = 0; T < h.length; T++)
                        h[T].info && tT(h[T]);
                    for (ee = world.units[ITEMS.BREAD_OVEN],
                    T = 0; T < ee.length; T++)
                        tT(ee[T]);
                    for (R = world.units[ITEMS.RESURRECTION],
                    T = 0; T < R.length; T++)
                        tT(R[T]);
                    for (E = world.units[ITEMS.EMERALD_MACHINE],
                    T = 0; T < E.length; T++)
                        tT(E[T]),
                        E[T].draw_life(E[T].info);
                    for (dT(qI, n, a, t, i, SPRITE.CACTUS, "c", 0),
                    dT(qI, n, a, t, i, ItemType.WOOD, "t", 5, 4),
                    dT(qI, n, a, t, i, SPRITE.FIR, "f", 2, 2),
                    dT(qI, n, a, t, i, SPRITE.PALM, "plm", 0, 0),
                    dT(qI, n, a, t, i, SPRITE.TREE_BRANCH, "b", 3, 2),
                    dT(qI, n, a, t, i, ItemType.WOOD, "t", 3, 2),
                    dT(qI, n, a, t, i, SPRITE.TREE_BRANCH, "b", 1, 0),
                    dT(qI, n, a, t, i, SPRITE.FIR, "f", 1, 1),
                    dT(qI, n, a, t, i, SPRITE.PALM, "plm", 1, 1),
                    dT(qI, n, a, t, i, ItemType.WOOD, "t", 1, 0),
                    dT(qI, n, a, t, i, SPRITE.FIR, "f", 0, 0),
                    dT(qI, n, a, t, i, SPRITE.PALM, "plm", 2, 2),
                    de = world.units[ITEMS.WINDMILL],
                    T = 0; T < de.length; T++)
                        tT(de[T]);
                    var se = world.units[ITEMS.WOOD_TOWER];
                    for (T = 0; T < se.length; T++)
                        rT(se[T], ItemType.TOWER);
                    for (o = world.units[ITEMS.PLAYERS],
                    T = 0; T < o.length; T++)
                        1 === (r = o[T]).tower && (r.speed < 180 || r.vehicle !== ItemType.BABY_DRAGON && r.vehicle !== ItemType.BABY_LAVA && r.vehicle !== ItemType.NIMBUS && r.vehicle !== ItemType.HAWK && r.vehicle !== ItemType.PLANE) && (r.tower_fx = N.lerp(r.tower_fx, 100, .018),
                        L = 1 + .18 * window.Math.min(1, window.Math.max(r.tower_fx, 0) / 100),
                        C.save(),
                        C.scale(L, L),
                        user.cam.x /= L,
                        user.cam.y /= L,
                        r.x /= L,
                        r.y /= L,
                        r.r.x /= L,
                        r.r.y /= L,
                        r.draw_vehicle(),
                        r.draw(),
                        user.cam.x *= L,
                        user.cam.y *= L,
                        r.x *= L,
                        r.y *= L,
                        r.r.x *= L,
                        r.r.y *= L,
                        C.restore());
                    var he = world.units[ITEMS.ROOF];
                    for (T = 0; T < he.length; T++)
                        rT(he[T], ItemType.ROOF),
                        he[T].draw_life(he[T].info);
                    var ye = world.units[ITEMS.FIREFLY];
                    for (T = 0; T < ye.length; T++)
                        rT(ye[T], SPRITE.FIREFLY, SPRITE.HURT_FIREFLY);
                    for (o = world.units[ITEMS.PLAYERS],
                    T = 0; T < o.length; T++)
                        ((r = o[T]).vehicle === ItemType.BABY_DRAGON || r.vehicle === ItemType.BABY_LAVA || r.vehicle === ItemType.NIMBUS || r.vehicle === ItemType.HAWK || r.vehicle === ItemType.PLANE) && r.speed > 180 && (r.fly = 1,
                        C.save(),
                        L = 1 + .35 * window.Math.min(1, window.Math.max(r.vehicle_fx5 - 30, 0) / 180),
                        C.scale(L, L),
                        user.cam.x /= L,
                        user.cam.y /= L,
                        r.x /= L,
                        r.y /= L,
                        r.r.x /= L,
                        r.r.y /= L,
                        r.draw_vehicle(),
                        r.draw(),
                        user.cam.x *= L,
                        user.cam.y *= L,
                        r.x *= L,
                        r.y *= L,
                        r.r.x *= L,
                        r.r.y *= L,
                        C.restore());
                    for (k = world.units[ITEMS.SPELL],
                    T = 0; T < k.length; T++)
                        1 === k[T].fly && rT(k[T]);
                    for (Z = world.units[ITEMS.DRAGON],
                    T = 0; T < Z.length; T++)
                        Z[T].scale > 1 && rT(Z[T], SPRITE.DRAGON, SPRITE.HURT_DRAGON);
                    for (Z = world.units[ITEMS.LAVA_DRAGON],
                    T = 0; T < Z.length; T++)
                        Z[T].scale > 1 && rT(Z[T], SPRITE.LAVA_DRAGON, SPRITE.HURT_LAVA_DRAGON);
                    var Re = world.units[ITEMS.HAWK];
                    for (T = 0; T < Re.length; T++)
                        rT(Re[T], SPRITE.HAWK, SPRITE.HURT_HAWK);
                    var Ee = world.units[ITEMS.VULTURE];
                    for (T = 0; T < Ee.length; T++)
                        rT(Ee[T], SPRITE.VULTURE, SPRITE.HURT_VULTURE);
                    (FI += 15 * zT) > 60 && (FI -= 60)
                    // dT(xI, n, a, t, i, SPRITE.FOG, "fo", 2),
                    // dT(xI, n, a, t, i, SPRITE.FOD, "fod", 2)
                    if (settings.playerOnTop)
                    for (o = world.units[ITEMS.PLAYERS], T = 0; T < o.length; T++) {
                        if (!((r = o[T]).x + user.cam.x < -130 || r.y + user.cam.y < -130 || r.x + user.cam.x > window.innerWidth + 130 || r.y + user.cam.y > window.innerHeight + 130))
                            if (o[T].vehicle !== ItemType.BABY_DRAGON && o[T].vehicle !== ItemType.BABY_LAVA && o[T].vehicle !== ItemType.HAWK && o[T].vehicle !== ItemType.PLANE && o[T].vehicle !== ItemType.NIMBUS) {
                                if (0 === r.tower)
                                    if (r.tower_fx > 0.001) {
                                        r.tower_fx = N.lerp(r.tower_fx, 0, 0.018);
                                        var L = 1 + 0.18 * window.Math.min(1, window.Math.max(r.tower_fx, 0) / 100);
                                        C.save(),
                                            C.scale(L, L),
                                            (user.cam.x /= L),
                                            (user.cam.y /= L),
                                            (r.x /= L),
                                            (r.y /= L),
                                            (r.r.x /= L),
                                            (r.r.y /= L),
                                            r.draw_vehicle(),
                                            r.draw(),
                                            (user.cam.x *= L),
                                            (user.cam.y *= L),
                                            (r.x *= L),
                                            (r.y *= L),
                                            (r.r.x *= L),
                                            (r.r.y *= L),
                                            C.restore();
                                    } else (r.fly = 0), r.draw_vehicle(), r.draw();
                            } else
                                r.speed <= 180 &&
                                    (C.save(),
                                    (L = 1 + 0.35 * window.Math.min(1, window.Math.max(r.vehicle_fx5 - 30, 0) / 180)),
                                    C.scale(L, L),
                                    (user.cam.x /= L),
                                    (user.cam.y /= L),
                                    (r.x /= L),
                                    (r.y /= L),
                                    (r.r.x /= L),
                                    (r.r.y /= L),
                                    (r.fly = 0),
                                    r.draw_vehicle(),
                                    r.draw(),
                                    (user.cam.x *= L),
                                    (user.cam.y *= L),
                                    (r.x *= L),
                                    (r.y *= L),
                                    (r.r.x *= L),
                                    (r.r.y *= L),
                                    C.restore());
                    }

                    var A = world.units[ITEMS.CRATE];
                    for (T = 0; T < A.length; T++)
                        if(settings.boxOnTop) rT(A[T], SPRITE.CRATE, SPRITE.HURT_DEAD_BOX);  
                    var b = world.units[ITEMS.DEAD_BOX];
                    for (T = 0; T < b.length; T++)
                        if(settings.boxOnTop) rT(b[T], SPRITE.CRATE, SPRITE.HURT_DEAD_BOX);
                    
                }(),
                UI.quality && world.つせウ小り六ぬオキニ !== WORLD.MODE_ZOMBIES && world.つせウ小り六ぬオキニ !== WORLD.MODE_LEGACY && world.つせウ小り六ぬオキニ !== WORLD.MODE_BR && (function() {
                    var e = user.desert;
                    0 === e.tempest ? e.tempest_speed = window.Math.max(0, e.tempest_speed - zT / 10) : e.tempest_speed = window.Math.min(1, e.tempest_speed + zT / 10);
                    for (var t = e.flakes, i = 0; i < t.length; i++) {
                        var n = t[i];
                        e.update(n),
                        oT(SPRITE.DESERT, n.id, user.cam.x + n.x, user.cam.y + n.y, n.alpha)
                    }
                    for (i = 0; i < t.length; i++)
                        ((n = t[i]).life <= 0 || n.x > -user.cam.x + L || n.x < -user.cam.x - L / 2 || n.y > -user.cam.y + B) && t.splice(i, 1);
                    var a = -user.cam.y;
                    world.dist_desert > -1e3 && e.add(a)
                }(),
                function() {
                    var e = user.winter;
                    0 === e.tempest ? e.tempest_speed = window.Math.max(0, e.tempest_speed - zT / 10) : e.tempest_speed = window.Math.min(1, e.tempest_speed + zT / 10);
                    for (var t = e.flakes, i = 0; i < t.length; i++) {
                        var n = t[i];
                        e.update(n),
                        oT(SPRITE.FLAKES, n.id, user.cam.x + n.x, user.cam.y + n.y, n.alpha)
                    }
                    for (i = 0; i < t.length; i++)
                        ((n = t[i]).life <= 0 || n.x > -user.cam.x + L || n.x < -user.cam.x || n.y > -user.cam.y + B) && t.splice(i, 1);
                    var a = -user.cam.y;
                    world.dist_winter > 300 && e.add(a)
                }(),
                function() {
                    for (var e = user.ash, t = e.flakes, i = 0; i < t.length; i++) {
                        var n = t[i];
                        e.update(n),
                        oT(SPRITE.ASHES, n.id, user.cam.x + n.x, user.cam.y + n.y, n.alpha)
                    }
                    for (i = 0; i < t.length; i++)
                        ((n = t[i]).life <= 0 || n.x > -user.cam.x + L || n.x < -user.cam.x || n.y > -user.cam.y + B) && t.splice(i, 1);
                    var a = -user.cam.y;
                    world.dist_lava > 300 && e.add(a)
                }()),
                world.transition && t && (world.transition = !1,
                world.shade.v = 0,
                world.shade.o = !1)
            }
            var PT = 2;
            function wT(e) {
                return {
                    x: e.clientX,
                    y: e.clientY
                }
            }
            function _T(e, t, i, n, a, I, T=0, o=0, r=0, d, s, h, y, R=0, E) {
                0 === e.length && (e = " ");
                var m = window.document.createElement("canvas")
                  , S = m.getContext("2d");
                return S.textBaseline = "middle",
                S.font = (void 0 !== E ? E + " " : "") + n + "px " + t,
                a = void 0 !== a ? window.Math.min(S.measureText(e).width, a) : S.measureText(e).width,
                m.width = a + T,
                m.height = n + o,
                void 0 !== I && (void 0 !== s && (S.globalAlpha = s),
                S.fillStyle = I,
                void 0 !== h ? (roundRect(S, r + 2, r, a + T - 2 * r - 4, n + o - 2 * r, h),
                S.fill()) : S.fillRect(r, r, a + T - 2 * r, n + o - 2 * r),
                S.globalAlpha = 1,
                0 !== r && (S.lineWidth = r,
                S.strokeStyle = d,
                S.stroke())),
                S.textBaseline = "middle",
                S.font = (void 0 !== E ? E + " " : "") + n + "px " + t,
                void 0 !== y && (S.strokeStyle = y,
                S.lineWidth = R,
                S.lineJoin = "miter",
                S.miterLimit = 2,
                S.strokeText(e, window.Math.floor(T / 2), window.Math.floor(o / 2) + window.Math.floor(n / 2), a)),
                S.fillStyle = i,
                S.fillText(e, window.Math.floor(T / 2), window.Math.floor(o / 2) + window.Math.floor(n / 2), a),
                m.w2 = m.width / 2,
                m.h2 = m.height / 2,
                m
            }
            function fT(e, t, i, n, a, I, T, o=0, r=0, d=0, s=1) {
                if (1 !== I && (I = 0),
                n)
                    var h = n;
                var y, R = {
                    width: e,
                    height: t,
                    img: h,
                    state: 0,
                    translate: {
                        x: o,
                        y: r,
                        _x: o,
                        _y: r
                    },
                    enable_breath: I,
                    breath: 0,
                    callback: T,
                    position: d,
                    active: s
                }, E = function() {
                    return R.img[R.state]
                }, m = function(e) {
                    var t = R.translate;
                    return 0 !== R.width && 0 !== R.height || (R.width = R.img[0].width,
                    R.height = R.img[0].height),
                    e.x > t.x && e.x < t.x + R.width / a && e.y > t.y && e.y < t.y + R.height / a
                };
                I = function() {
                    var e = 0;
                    return 1 === R.enable_breath && (1 === R.state || R.state === PT ? R.breath = (R.breath + 1e3 * zT) % 1e3 : R.breath > 0 && (R.breath = R.breath > 500 ? R.breath + 1e3 * zT : R.breath - 1e3 * zT,
                    (R.breath < 0 || R.breath > 1e3) && (R.breath = 0)),
                    e = .2 * N.ease_in_out_quad(R.breath > 500 ? (1e3 - R.breath) / 500 : R.breath / 500)),
                    e
                }
                ;
                return 2 === (a = 3 === a ? 3 : 1 === a ? 2 : 1) ? y = function(e) {
                    var t = 1 + I()
                      , i = E()
                      , n = R.width * t / 2
                      , a = R.height * t / 2
                      , T = (n - R.width / 2) / 2
                      , o = (a - R.height / 2) / 2;
                    drawCtxImage(e, i, R.translate.x - T, R.translate.y - o, n, a)
                }
                : 3 === a ? (y = function(e) {
                    var t = E()
                      , i = R.width
                      , n = R.height
                      , a = (i - R.width) / 2
                      , I = (n - R.height) / 2;
                    drawCtxImage(e, t, R.translate.x - a, R.translate.y - I, i, n)
                }
                ,
                a = 1) : y = function(e) {
                    drawCtxImage(e, E(), R.translate.x, R.translate.y)
                }
                ,
                {
                    info: R,
                    trigger: function(e, t, i) {
                        return m(t) ? (1 == i ? R.state = PT : (2 == i || 0 == i && R.state != PT) && (R.state = 1),
                        !0) : (R.state = 0,
                        !1)
                    },
                    draw: y,
                    in_button: m
                }
            }
            function gT(e, t, i, n, a) {
                var I = {
                    x: i,
                    y: n,
                    _x: i,
                    _y: n
                };
                return {
                    translate: I,
                    draw: function(t) {
                        drawCtxImage(t, e, I.x, I.y, e.width / 2, e.height / 2)
                    },
                    active: t,
                    position: a
                }
            }
            var lT = [];
            for (ne = 0; ne < 500; ne++)
                lT[ne] = 0;
            lT[ItemType.SUPER_DIVING_SUIT] = 1,
            lT[ItemType.WOOD_SWORD] = 1,
            lT[ItemType.STONE_SWORD] = 1,
            lT[ItemType.GOLD_SWORD] = 1,
            lT[ItemType.DIAMOND_SWORD] = 1,
            lT[ItemType.AMETHYST_SWORD] = 1,
            lT[ItemType.REIDITE_SWORD] = 1,
            lT[ItemType.PIRATE_SWORD] = 1,
            lT[ItemType.DRAGON_SWORD] = 1,
            lT[ItemType.LAVA_SWORD] = 1,
            lT[ItemType.CURSED_SWORD] = 1,
            lT[ItemType.STONE_SPEAR] = 1,
            lT[ItemType.GOLD_SPEAR] = 1,
            lT[ItemType.DIAMOND_SPEAR] = 1,
            lT[ItemType.AMETHYST_SPEAR] = 1,
            lT[ItemType.REIDITE_SPEAR] = 1,
            lT[ItemType.DRAGON_SPEAR] = 1,
            lT[ItemType.LAVA_SPEAR] = 1,
            lT[ItemType.WOOD_SPEAR] = 1,
            lT[ItemType.CRAB_SPEAR] = 1;
            var AT = [6 * WORLD.DAY, 3 * WORLD.DAY, 4 * WORLD.DAY, 3 * WORLD.DAY, 6 * WORLD.DAY, 5 * WORLD.DAY, 5 * WORLD.DAY, 10 * WORLD.DAY, 6 * WORLD.DAY, 7 * WORLD.DAY, 6 * WORLD.DAY, 8 * WORLD.DAY, 7 * WORLD.DAY]
              , bT = [[ITEMS.EXTRACTOR_MACHINE_STONE, ItemType.STONE], [ITEMS.EXTRACTOR_MACHINE_GOLD, ItemType.GOLD], [ITEMS.DIAMOND_EXTRACTOR, ItemType.DIAMOND], [ITEMS.EXTRACTOR_MACHINE_AMETHYST, ItemType.AMETHYST], [ITEMS.EXTRACTOR_MACHINE_REIDITE, ItemType.REIDITE]];
            class NT {
                constructor() {
                    this.nickname = "",
                    this.skin = 0,
                    this.accessory = 0,
                    this.bag = 0,
                    this.baglook = 0,
                    this.book = 0,
                    this.level = 0,
                    this.label = null,
                    this.label_winter = null,
                    this.ldb_label = null,
                    this.りゆわたにつシ千大先 = !1,
                    this.score = 0
                }
            }
            class vT {
                constructor(e, t, i, n, I, o, r, d, s, h) {
                    switch (this.type = e,
                    this.pid = t,
                    this.id = i,
                    this.x = n,
                    this.y = I,
                    this.angle = o,
                    this.nangle = o,
                    this.action = r,
                    this.info = d,
                    this.extra = h,
                    this.r = {
                        x: n,
                        y: I
                    },
                    this.speed = s,
                    e) {
                    case ITEMS.PLAYERS:
                        this.player = world.チとモやせタ月ヒけニ[this.pid],
                        this.skin = this.player.skin,
                        this.baglook = this.player.baglook,
                        this.book = this.player.book,
                        this.accessory = this.player.accessory,
                        this.dist_forest = -1e6,
                        this.dist_lava = -1e6,
                        this.dist_winter = -1e6,
                        this.dist_desert = -1e6,
                        this.dist_water = -1e6,
                        this.dist_sand = -1e6,
                        this.dist_dragon = -1e6,
                        this.zombie = world.つせウ小り六ぬオキニ === WORLD.MODE_ZOMBIES && this.skin === WORLD.ZOMBIE_SKIN,
                        this.vampire = world.つせウ小り六ぬオキニ === WORLD.MODE_VAMPIRES && this.skin === WORLD.VAMPIRE_SKIN,
                        this.superzombie = !(!this.zombie || "  " !== this.player.nickname),
                        this.foot = [],
                        this.tower = 0,
                        this.move_effect = !0,
                        this.id_foot = 0,
                        this.fly = 0,
                        this.swim = [],
                        this.r = {
                            x: n,
                            y: I
                        },
                        this.draw = MI,
                        this.draw_vehicle = OI,
                        this.vehicle_fx1 = 0,
                        this.vehicle_fx2 = 0,
                        this.vehicle_fx3 = 0,
                        this.vehicle_fx4 = new v(!1,0,0,-window.Math.PI / 6,.5,1),
                        this.vehicle_fx5 = 0,
                        this.tower_fx = 0,
                        this.hit = new v(!1,.6,.6,0,5,3),
                        this.heal = new v(!1,.6,.6,0,5,3),
                        this.freeze = new v(!1,.6,.6,0,5,3),
                        this.starve = new v(!1,.6,.6,0,5,3),
                        this.idle = new v(!0,0,2.25,-1.5,3.75,7.5),
                        this.walk = new v(!0,0,7.5,-3,22.5,33.75),
                        this.attack = new v(!1,0,0,-window.Math.PI / 3,6,9),
                        this.slow_attack = 0,
                        this.web = new v(!1,.6,.6,0,1,3),
                        this.move_head = this.superzombie ? new v(!0,0,2.25,-1.5,2.75,5.5) : 0,
                        this.angle_init = 0,
                        this.text_ease = 0,
                        this.text_effect = [],
                        this.text_move = [],
                        this.text = [],
                        this.label = [],
                        this.draw_text = WI,
                        this.hand = !0,
                        this.right = -1,
                        this.vehicle = -1,
                        this.action = STATE.IDLE,
                        this.clothe = 0,
                        this.ghost = !1,
                        this.bubbles = [],
                        this.bag = 0,
                        this.update = function(e) {
                            16384 & this.info ? (this.info = -16385 & this.info,
                            this.bag = 1) : this.bag = 0,
                            this.clothe = window.Math.floor(this.info / 128),
                            this.info -= 128 * this.clothe,
                            this.info === ItemType.HAND || this.superzombie ? this.right = -1 : this.right = this.info,
                            this.tower = world.find_tower(window.Math.floor(this.r.y / 100), window.Math.floor(this.r.x / 100)),
                            this.vehicle = 255 & this.extra,
                            this.extra === WORLD.GHOST ? this.ghost = !0 : this.ghost = !1,
                            lT[this.right] ? this.weapon = !0 : this.weapon = !1,
                            e & STATE.WEB ? (this.web.o = !1,
                            this.web.v = .6) : e & STATE.COLD ? (this.freeze.o = !1,
                            this.freeze.v = .6) : e & STATE.HEAL && (this.heal.o = !1,
                            this.heal.v = .6),
                            e & STATE.HUNGER && (this.starve.o = !1,
                            this.starve.v = .6),
                            e & STATE.HURT && (this.hit.o = !1,
                            this.hit.v = .6),
                            e & STATE.ATTACK && (this.slow_attack = CLIENT.SLOW_ATTACK)
                        }
                        ,
                        this.update();
                        break;
                    case ITEMS.EMERALD_MACHINE:
                        this.hit = {
                            anim: new v(!1,1,1,0,10,10),
                            update: !1,
                            "angle": 0
                        },
                        this.draw_bg = AI,
                        this.draw_fg = gI,
                        this.halo = new v(!1,1,1.23,1.18,.01,.01),
                        this.rotate1 = 0,
                        this.rotate2 = 0,
                        this.draw_life = Na;
                        break;
                    case ITEMS.RESURRECTION:
                        this.hit = {
                            anim: new v(!1,1,1,0,10,10),
                            update: !1,
                            "angle": 0
                        },
                        this.draw_bg = bI,
                        this.draw_fg = lI,
                        this.halo = new v(!1,1,1.23,1.18,.01,.01),
                        this.rotate1 = 0,
                        this.rotate2 = 0;
                        break;
                    case ITEMS.FIRE:
                    case ITEMS.BIG_FIRE:
                        this.draw_bg = EI,
                        this.draw_fg = vI,
                        this.fire = new v(!1,1,1.03,.98,.3,.3),
                        this.ground = new v(!1,1,1.23,1.18,.01,.01),
                        this.halo = new v(!1,1,1.23,1.18,.01,.01),
                        this.hit = {
                            anim: new v(!1,1,1,0,10,10),
                            update: !1,
                            "angle": 0
                        };
                        break;
                    case ITEMS.TOMATO_SEED:
                        this.draw_bg = dI,
                        this.draw_fg = sI,
                        this.ground = new v(!1,.9,1.05,.9,.2,.2),
                        this.hit = {
                            anim: new v(!1,1,1,0,10,10),
                            update: !1,
                            "angle": 0
                        },
                        this.fruits = [];
                        for (var y = 0; y < 3; y++)
                            this.fruits.push({
                                draw: Ja,
                                breath: new v(!1,.9 + .15 * window.Math.random(),1.05,.9,.2,.2)
                            });
                        this.fruits[0].x = this.x - 16.5,
                        this.fruits[0].y = this.y - 15.5,
                        this.fruits[0].angle = this.angle,
                        this.fruits[1].x = this.x + 36,
                        this.fruits[1].y = this.y + 17,
                        this.fruits[1].angle = this.angle,
                        this.fruits[2].x = this.x - 18.5,
                        this.fruits[2].y = this.y + 39,
                        this.fruits[2].angle = this.angle;
                        break;
                    case ITEMS.SEED:
                        this.draw_bg = oI,
                        this.draw_fg = rI,
                        this.ground = new v(!1,.9,1.05,.9,.2,.2),
                        this.hit = {
                            anim: new v(!1,1,1,0,10,10),
                            update: !1,
                            "angle": 0
                        },
                        this.fruits = [];
                        for (y = 0; y < 3; y++)
                            this.fruits.push({
                                draw: Qa,
                                breath: new v(!1,.9 + .15 * window.Math.random(),1.05,.9,.2,.2)
                            });
                        this.fruits[0].x = this.x - 16.5,
                        this.fruits[0].y = this.y - 15.5,
                        this.fruits[1].x = this.x - 5.5,
                        this.fruits[1].y = this.y + 7.5,
                        this.fruits[2].x = this.x + 18,
                        this.fruits[2].y = this.y - 5;
                        break;
                    case ITEMS.BABY_MAMMOTH:
                        this.draw = Ua,
                        this.breath = new v(!1,.9 + .15 * window.Math.random(),1.05,.9,.2,.2),
                        this.hit = new v(!1,.6,.6,0,5,3);
                        break;
                    case ITEMS.BOAR:
                        this.draw = Xa,
                        this.breath = new v(!1,.9 + .15 * window.Math.random(),1.05,.9,.2,.2),
                        this.hit = new v(!1,.6,.6,0,5,3);
                        break;
                    case ITEMS.CRAB_BOSS:
                        this.draw = qa,
                        this.breath = new v(!1,.9 + .15 * window.Math.random(),1.05,.9,.2,.2),
                        this.breathl = new v(!1,.9 + .15 * window.Math.random(),1.05,.9,.2,.2),
                        this.breathr = new v(!1,.9 + .15 * window.Math.random(),1.05,.9,.2,.2),
                        this.hit = new v(!1,.6,.6,0,5,3),
                        this.heal = new v(!1,.6,.6,0,5,3);
                        break;
                    case ITEMS.CRAB:
                        this.draw = za,
                        this.breath = new v(!1,.9 + .15 * window.Math.random(),1.05,.9,.2,.2),
                        this.breathl = new v(!1,.9 + .15 * window.Math.random(),1.05,.9,.2,.2),
                        this.breathr = new v(!1,.9 + .15 * window.Math.random(),1.05,.9,.2,.2),
                        this.hit = new v(!1,.6,.6,0,5,3),
                        this.heal = new v(!1,.6,.6,0,5,3);
                        break;
                    case ITEMS.FLAME:
                        this.draw = Za,
                        this.breath = new v(!1,.9 + .15 * window.Math.random(),1.05,.9,.2,.2),
                        this.hit = new v(!1,.6,.6,0,5,3);
                        break;
                    case ITEMS.FIREFLY:
                        this.draw = $a,
                        this.breath = new v(!1,.9 + .15 * window.Math.random(),1.05,.9,.5,.5),
                        this.hit = new v(!1,.6,.6,0,5,3);
                        break;
                    case ITEMS.SPELL:
                        this.spell = 15 & this.info,
                        this.fly = 1 & this.extra,
                        this.born = 0,
                        this.x = this.info,
                        this.y = this.extra,
                        this.draw = ja,
                        this.breath = new v(!1,.9 + .15 * window.Math.random(),1.05,.9,.6,.6);
                        break;
                    case ITEMS.RABBIT:
                    case ITEMS.WOLF:
                    case ITEMS.SPIDER:
                    case ITEMS.FOX:
                    case ITEMS.BEAR:
                    case ITEMS.MAMMOTH:
                    case ITEMS.PIRANHA:
                    case ITEMS.KRAKEN:
                    case ITEMS.PENGUIN:
                        this.draw = $a,
                        this.breath = new v(!1,.9 + .15 * window.Math.random(),1.05,.9,.2,.2),
                        this.hit = new v(!1,.6,.6,0,5,3);
                        break;
                    case ITEMS.BREAD_OVEN:
                        this.draw_fg = RI,
                        this.draw = mI,
                        this.hit = {
                            anim: new v(!1,1,1,0,10,10),
                            update: !1,
                            "angle": 0
                        },
                        this.up = new v(!1,1,1.03,.98,.1,.1),
                        this.smog = [];
                        break;
                    case ITEMS.GIFT:
                        this.angle = window.Math.random() * window.Math.PI / 2;
                    case ITEMS.CRATE:
                    case ITEMS.DEAD_BOX:
                        this.draw = xa,
                        this.hit = new v(!1,.6,.6,0,5,3);
                        break;
                    case ITEMS.TREASURE_CHEST:
                        this.draw = Va,
                        this.hit = new v(!1,.6,.6,0,5,3);
                        break;
                    case ITEMS.LAVA_DRAGON:
                        this.scale = 1,
                        this.draw = Wa,
                        this.breath = new v(!1,.9 + .15 * window.Math.random(),1.05,.9,.2,.2),
                        this.rotate = new v(!1,0,0,-window.Math.PI / 6,.5,1),
                        this.hit = new v(!1,.6,.6,0,5,3);
                        break;
                    case ITEMS.SAND_WORM:
                        this.dig = 0,
                        this.ground = [],
                        this.groundTimer = 0,
                        this.draw_ground = Ba,
                        this.draw = Ma,
                        this.breath = new v(!1,.9 + .15 * window.Math.random(),1.05,.9,.2,.2),
                        this.rotate = new v(!1,0,0,-window.Math.PI / 6,.5,1),
                        this.hit = new v(!1,.6,.6,0,5,3);
                        break;
                    case ITEMS.VULTURE:
                        this.x = this.info,
                        this.y = this.extra,
                        this.scale = 1,
                        this._alpha = 0,
                        this.draw = Ya,
                        this.breath = new v(!1,.9 + .15 * window.Math.random(),1.05,.9,.2,.2),
                        this.rotate = new v(!1,0,0,-window.Math.PI / 6,.5,1),
                        this.hit = new v(!1,.6,.6,0,5,3);
                        break;
                    case ITEMS.HAWK:
                        this.x = this.info,
                        this.y = this.extra,
                        this.scale = 1,
                        this._alpha = 0,
                        this.draw = Ha,
                        this.breath = new v(!1,.9 + .15 * window.Math.random(),1.05,.9,.2,.2),
                        this.rotate = new v(!1,0,0,-window.Math.PI / 6,.5,1),
                        this.hit = new v(!1,.6,.6,0,5,3);
                        break;
                    case ITEMS.BABY_LAVA:
                        this.scale = 1,
                        this.draw = Ka,
                        this.breath = new v(!1,.9 + .15 * window.Math.random(),1.05,.9,.2,.2),
                        this.rotate = new v(!1,0,0,-window.Math.PI / 6,.5,1),
                        this.hit = new v(!1,.6,.6,0,5,3);
                        break;
                    case ITEMS.BABY_DRAGON:
                        this.scale = 1,
                        this.draw = Ga,
                        this.breath = new v(!1,.9 + .15 * window.Math.random(),1.05,.9,.2,.2),
                        this.rotate = new v(!1,0,0,-window.Math.PI / 6,.5,1),
                        this.hit = new v(!1,.6,.6,0,5,3);
                        break;
                    case ITEMS.DRAGON:
                        this.scale = 1,
                        this.draw = Fa,
                        this.breath = new v(!1,.9 + .15 * window.Math.random(),1.05,.9,.2,.2),
                        this.rotate = new v(!1,0,0,-window.Math.PI / 6,.5,1),
                        this.hit = new v(!1,.6,.6,0,5,3);
                        break;
                    case ITEMS.FRUIT:
                        this.fruits = [];
                        for (y = 0; y < 5; y++)
                            this.fruits.push({
                                draw: Qa,
                                breath: new v(!1,.9 + .15 * window.Math.random(),1.05,.9,.2,.2)
                            });
                        switch (this.id % 3) {
                        case 0:
                            this.fruits[0].x = this.x - 20.5,
                            this.fruits[0].y = this.y - 22.5,
                            this.fruits[1].x = this.x - 35.5,
                            this.fruits[1].y = this.y + 7.5,
                            this.fruits[2].x = this.x + 7.5,
                            this.fruits[2].y = this.y - 30,
                            this.fruits[3].x = this.x + 22.5,
                            this.fruits[3].y = this.y,
                            this.fruits[4].x = this.x - 7.5,
                            this.fruits[4].y = this.y + 14.5;
                            break;
                        case 1:
                            this.fruits[0].x = this.x - 30.5,
                            this.fruits[0].y = this.y - 22.5,
                            this.fruits[1].x = this.x - 15.5,
                            this.fruits[1].y = this.y + 7.5,
                            this.fruits[2].x = this.x + 15.5,
                            this.fruits[2].y = this.y - 30,
                            this.fruits[3].x = this.x + 12.5,
                            this.fruits[3].y = this.y + 5,
                            this.fruits[4].x = this.x - 40.5,
                            this.fruits[4].y = this.y + 14.5;
                            break;
                        case 2:
                            this.fruits[0].x = this.x - 20.5,
                            this.fruits[0].y = this.y - 20.5,
                            this.fruits[1].x = this.x - 35.5,
                            this.fruits[1].y = this.y + 15.5,
                            this.fruits[2].x = this.x + 7.5,
                            this.fruits[2].y = this.y - 17,
                            this.fruits[3].x = this.x + 22.5,
                            this.fruits[3].y = this.y + 5,
                            this.fruits[4].x = this.x - 7.5,
                            this.fruits[4].y = this.y + 1.5
                        }
                        break;
                    case ITEMS.WHEAT_SEED:
                        this.hit = {
                            anim: new v(!1,1,1,0,10,10),
                            update: !1,
                            "angle": 0
                        },
                        this.draw = TI,
                        this.ground = new v(!1,.9,1.05,.9,.2,.2),
                        this.wind = new v(!1,0,window.Math.PI / 30,-window.Math.PI / 30,.06,.06);
                        break;
                    case ITEMS.THORNBUSH_SEED:
                        this.hit = {
                            anim: new v(!1,1,1,0,10,10),
                            update: !1,
                            "angle": 0
                        },
                        this.draw = eI,
                        this.ground = new v(!1,.9,1.05,.9,.2,.2);
                        break;
                    case ITEMS.GARLIC_SEED:
                        this.hit = {
                            anim: new v(!1,1,1,0,10,10),
                            update: !1,
                            "angle": 0
                        },
                        this.draw = tI,
                        this.ground = new v(!1,.9,1.05,.9,.2,.2);
                        break;
                    case ITEMS.CARROT_SEED:
                        this.hit = {
                            anim: new v(!1,1,1,0,10,10),
                            update: !1,
                            "angle": 0
                        },
                        this.draw = aI,
                        this.ground = new v(!1,.9,1.05,.9,.2,.2);
                        break;
                    case ITEMS.ALOE_VERA_SEED:
                        this.hit = {
                            anim: new v(!1,1,1,0,10,10),
                            update: !1,
                            "angle": 0
                        },
                        this.draw = iI,
                        this.ground = new v(!1,.9,1.05,.9,.2,.2);
                        break;
                    case ITEMS.WATERMELON_SEED:
                        this.hit = {
                            anim: new v(!1,1,1,0,10,10),
                            update: !1,
                            "angle": 0
                        },
                        this.draw = nI,
                        this.ground = new v(!1,.9,1.05,.9,.2,.2);
                        break;
                    case ITEMS.PUMPKIN_SEED:
                        this.hit = {
                            anim: new v(!1,1,1,0,10,10),
                            update: !1,
                            "angle": 0
                        },
                        this.draw = II,
                        this.ground = new v(!1,.9,1.05,.9,.2,.2);
                        break;
                    case ITEMS.EXTRACTOR_MACHINE_STONE:
                        this.draw = cI,
                        this.rotate = 0,
                        this.hit = {
                            anim: new v(!1,1,1,0,10,10),
                            update: !1,
                            "angle": 0
                        };
                        break;
                    case ITEMS.EXTRACTOR_MACHINE_GOLD:
                        this.draw = uI,
                        this.rotate = 0,
                        this.hit = {
                            anim: new v(!1,1,1,0,10,10),
                            update: !1,
                            "angle": 0
                        };
                        break;
                    case ITEMS.DIAMOND_EXTRACTOR:
                        this.draw = pI,
                        this.rotate = 0,
                        this.hit = {
                            anim: new v(!1,1,1,0,10,10),
                            update: !1,
                            "angle": 0
                        };
                        break;
                    case ITEMS.EXTRACTOR_MACHINE_AMETHYST:
                        this.draw = PI,
                        this.rotate = 0,
                        this.hit = {
                            anim: new v(!1,1,1,0,10,10),
                            update: !1,
                            "angle": 0
                        };
                        break;
                    case ITEMS.EXTRACTOR_MACHINE_REIDITE:
                        this.draw = wI,
                        this.rotate = 0,
                        this.hit = {
                            anim: new v(!1,1,1,0,10,10),
                            update: !1,
                            "angle": 0
                        };
                        break;
                    case ITEMS.WINDMILL:
                        this.draw_bg = _I,
                        this.draw_fg = SI,
                        this.rotate = 0,
                        this.hit = {
                            anim: new v(!1,1,1,0,10,10),
                            update: !1,
                            "angle": 0
                        };
                        break;
                    case ITEMS.ROOF:
                        this.draw = va,
                        this.j = window.Math.floor(this.x / 100),
                        this.i = window.Math.floor(this.y / 100),
                        this.hit = {
                            anim: new v(!1,1,1,0,10,10),
                            update: !1,
                            "angle": 0
                        },
                        this.opacity = 1,
                        this.draw_life = ba;
                        break;
                    case ITEMS.GARLAND:
                        this.draw = Da,
                        this.halo = new v(!1,1,1.15,1,.3,.3),
                        this.color = 0,
                        this.hit = {
                            anim: new v(!1,1,1,0,10,10),
                            update: !1,
                            "angle": 0
                        };
                        break;
                    case ITEMS.PLOT:
                    case ITEMS.WORKBENCH:
                    case ITEMS.WOOD_TOWER:
                    case ITEMS.WELL:
                    case ITEMS.TOTEM:
                        this.draw = ka,
                        this.hit = {
                            anim: new v(!1,1,1,0,10,10),
                            update: !1,
                            "angle": 0
                        };
                        break;
                    case ITEMS.BRIDGE:
                        this.draw = ka,
                        this.hit = {
                            anim: new v(!1,1,1,0,10,10),
                            update: !1,
                            "angle": 0
                        },
                        this.draw_life = ba;
                        break;
                    case ITEMS.WALL:
                    case ITEMS.STONE_WALL:
                    case ITEMS.GOLD_WALL:
                    case ITEMS.DIAMOND_WALL:
                    case ITEMS.AMETHYST_WALL:
                    case ITEMS.REIDITE_WALL:
                    case ITEMS.SPIKE:
                    case ITEMS.STONE_SPIKE:
                    case ITEMS.GOLD_SPIKE:
                    case ITEMS.DIAMOND_SPIKE:
                    case ITEMS.AMETHYST_SPIKE:
                    case ITEMS.REIDITE_SPIKE:
                        this.draw = ka,
                        this.hit = {
                            anim: new v(!1,1,1,0,10,10),
                            update: !1,
                            "angle": 0
                        },
                        this.draw_life = Na;
                        break;
                    case ITEMS.BED:
                        this.draw = Oa,
                        this.opacity = 1,
                        this.hit = {
                            anim: new v(!1,1,1,0,10,10),
                            update: !1,
                            "angle": 0
                        };
                        var R = this.angle % (window.Math.PI / 2);
                        R < T ? this.angle -= R : this.angle += window.Math.PI / 2 - R;
                        break;
                    case ITEMS.WHEAT_MOB:
                        this.draw = Aa,
                        this.angle = window.Math.random() * a;
                        break;
                    case ITEMS.ALOE_VERA_MOB:
                        this.draw = la,
                        this.angle = window.Math.random() * a;
                        break;
                    case ITEMS.PUMPKIN_MOB:
                        this.draw = ga,
                        this.angle = window.Math.random() * a;
                        break;
                    case ITEMS.GARLIC_MOB:
                        this.draw = fa,
                        this.angle = window.Math.random() * a;
                        break;
                    case ITEMS.THORNBUSH_MOB:
                        this.draw = _a,
                        this.angle = window.Math.random() * a;
                        break;
                    case ITEMS.CHEST:
                        this.update = function(e) {
                            this.lock = 8192 & this.info ? 1 : 0,
                            this.info = 8191 & this.info,
                            this.action = e
                        }
                        ,
                        this.draw = wa,
                        this.hit = {
                            anim: new v(!1,1,1,0,10,10),
                            update: !1,
                            "angle": 0
                        },
                        this.lock = 0,
                        this.update(this.action);
                        break;
                    case ITEMS.WOOD_DOOR_SPIKE:
                    case ITEMS.STONE_DOOR_SPIKE:
                    case ITEMS.GOLD_DOOR_SPIKE:
                    case ITEMS.DIAMOND_DOOR_SPIKE:
                    case ITEMS.AMETHYST_DOOR_SPIKE:
                    case ITEMS.REIDITE_DOOR_SPIKE:
                    case ITEMS.WOOD_DOOR:
                    case ITEMS.STONE_DOOR:
                    case ITEMS.GOLD_DOOR:
                    case ITEMS.DIAMOND_DOOR:
                    case ITEMS.AMETHYST_DOOR:
                    case ITEMS.REIDITE_DOOR:
                        this.draw = Pa,
                        this.hit = {
                            anim: new v(!1,1,1,0,10,10),
                            update: !1,
                            "angle": 0
                        },
                        this.draw_life = Na;
                        break;
                    case ITEMS.FURNACE:
                        this.draw_bg = yI,
                        this.draw = hI,
                        this.draw_fg = NI,
                        this.ground = new v(!1,1,1.23,1.18,.02,.02),
                        this.halo = new v(!1,1,1.23,1.18,.04,.04),
                        this.hit = {
                            anim: new v(!1,1,1,0,10,10),
                            update: !1,
                            "angle": 0
                        },
                        this.update = function(e) {
                            this.action = e
                        }
                    }
                }
            }
            class DT {
                constructor() {
                    function e(e, t, i, n, a) {
                        for (var I = t + window.Math.floor(world.RNG.get() * n), T = i + window.Math.floor(world.RNG.get() * n), o = 10 + window.Math.floor(world.RNG.get() * (world.nw - I - 20)), r = 10 + window.Math.floor(world.RNG.get() * (world.nh - T - 20)), d = o + I, s = r + T, h = 0; h < world.biomes.length; h++) {
                            var y = world.biomes[h];
                            if (1 === N.intersect_aabb(o, d, r, s, y.x1 / 100 - a, y.x2 / 100 + a, y.y1 / 100 - a, y.y2 / 100 + a))
                                return 0
                        }
                        return world.biomes.push(new A(e,o,r,I,T,15)),
                        1
                    }
                    function t(e, t, i) {
                        for (var n = t, a = i; a < world.nh; a++) {
                            for (var I = t; I < world.nw && (a === i && (n = window.Math.max(I, n)),
                            !(I > n)) && 1 !== e[a][I]; I++)
                                e[a][I] = 1;
                            if (I < n)
                                break
                        }
                        world.biomes.push(new A(world.BIOME_SEA,t,i,n - t + 1,a - i,15))
                    }
                    function i(t, i, n, a, I) {
                        for (var T = 0; T < I && 1 !== e(t, i, n, a, 8); T++)
                            ;
                        return T === I ? 0 : 1
                    }
                    function n(e, t, i, n, a, I, T, o) {
                        for (var r = window.Math.floor(T / 2), d = window.Math.max(1, window.Math.floor(T / 2)), s = window.Math.floor(o / 2), h = window.Math.max(1, window.Math.floor(o / 2)), y = 0; y < i; y++) {
                            for (var R = e - s; R < e + h; R++)
                                for (var E = t - r; E < t + d; E++)
                                    1 === u(R, E, "wtb", 0, 1) && I.push([R, E, 1]);
                            e += n,
                            t += a
                        }
                    }
                    function I(e, t) {
                        for (var i = world.biomes[e], a = window.Math.floor(i.y1 / 100), I = window.Math.floor(i.x1 / 100), T = window.Math.floor(i.h / 100), o = I + (m = window.Math.floor(i.w / 100)), r = 2, d = T, s = a, h = I + 10 + window.Math.floor((m - 20) * world.RNG.get()), y = h - 4; y < h + 4; y++)
                            u(a - 1, y, "wtb", 0, 1);
                        for (; d > 0; )
                            if (2 !== r)
                                if (d < 10)
                                    for (c = 1; d > 0; c++)
                                        n(s, h, 1, 1, 0, t, c, 1),
                                        d -= 1,
                                        s += 1;
                                else if (1 !== r) {
                                    r = 1;
                                    var R = window.Math.floor(1 + 2 * world.RNG.get())
                                      , E = 1 + window.Math.floor(4 * world.RNG.get());
                                    h < I + 16 ? (n(s, h, R, 0, 1, t, E, E),
                                    h += R) : h > o - 16 ? (n(s, h, R, 0, -1, t, E, E),
                                    h -= R) : world.RNG.get() > .5 ? (n(s, h, R, 0, 1, t, E, E),
                                    h += R) : (n(s, h, R, 0, -1, t, E, E),
                                    h -= R)
                                } else {
                                    var m, S = window.Math.min(d, window.Math.floor(1 + 4 * world.RNG.get()));
                                    n(s, h, S, 1, 0, t, m = 1 + window.Math.floor(4 * world.RNG.get()), m),
                                    r = 0,
                                    d -= S,
                                    s += S
                                }
                            else {
                                for (var c = 10; c > 1; c--)
                                    n(s, h, 1, 1, 0, t, c, 1),
                                    d -= 1,
                                    s += 1;
                                r = 0
                            }
                        for (y = h - 1; y < h + 2; y++)
                            u(s, y, "wtb", 0, 1)
                    }
                    function T(e, t) {
                        for (var i = 0; i < t.length; i++) {
                            S(t[i][0], t[i][1], e, t[i][2])
                        }
                    }
                    function o(e) {
                        for (var t = 0; t < 3; t++)
                            E(e, "s", t, 15);
                        for (t = 0; t < 3; t++)
                            E(e, "a", t, 1);
                        for (t = 0; t < 3; t++)
                            E(e, "d", t, 1);
                        R(e)
                    }
                    function r(e, t) {
                        for (var i = 0; i < 3; i++)
                            E(e, "s", i, window.Math.floor(18 * t));
                        for (i = 0; i < 3; i++)
                            E(e, "f", i, window.Math.floor(24 * t));
                        for (i = 0; i < 3; i++)
                            E(e, "d", i, window.Math.max(1, window.Math.floor(2 * t)), .3);
                        for (i = 0; i < 3; i++)
                            E(e, "g", i, window.Math.floor(6 * t));
                        R(e)
                    }
                    function d(e, t) {
                        for (var i = 0; i < 3; i++)
                            E(e, "s", i, window.Math.floor(12 * t));
                        for (i = 0; i < 3; i++)
                            E(e, "m", i, window.Math.max(1, window.Math.floor(1 * t)), .2);
                        E(e, "c", 0, window.Math.floor(36 * t));
                        var n = [];
                        !function(e, t) {
                            for (var i = world.biomes[e], n = window.Math.floor(i.y1 / 100), a = window.Math.floor(i.x1 / 100), I = window.Math.floor(i.h / 100), T = window.Math.floor(i.w / 100), o = n + window.Math.floor(I / 2), r = a + window.Math.floor(T / 2), d = 0; d < 3; d++)
                                u(s = window.Math.floor(o - 3 + 6 * world.RNG.get()), h = window.Math.floor(r - 3 + 6 * world.RNG.get()), "plm", d, 1);
                            for (d = 0; d < 80; d++) {
                                var s, h;
                                1 === u(s = window.Math.floor(o - 3 + 6 * world.RNG.get()), h = window.Math.floor(r - 3 + 6 * world.RNG.get()), "wtb", 0, 1) && t.push([s, h, 0])
                            }
                        }(e, n),
                        T(e, n),
                        n = []
                    }
                    function s(e, t) {
                        !function(e, t) {
                            for (var i = world.biomes[t], n = 0, a = 0; n < e && a < 1e4; a++) {
                                var I = i.y1 + world.RNG.get() * i.h
                                  , T = i.x1 + world.RNG.get() * i.w
                                  , o = window.Math.floor(I / 100)
                                  , r = window.Math.floor(T / 100);
                                if (!(world.dist_from_biome(t, 100 * r + 50, 100 * o + 50) < 600)) {
                                    for (var d = 1, s = o - 4; 1 === d && s <= o + 4; s++)
                                        for (var h = r - 4; 1 === d && h <= r + 4; h++)
                                            void 0 !== MT.tiles[s][h] && (d = 0);
                                    0 !== d && (u(o, r, "la", n % 6, 0),
                                    n++)
                                }
                            }
                        }(80 * t, e);
                        for (var i = 0; i < 3; i++)
                            E(e, "s", i, window.Math.floor(12 * t));
                        for (i = 0; i < 3; i++)
                            E(e, "g", i, window.Math.floor(6 * t));
                        for (i = 0; i < 3; i++)
                            E(e, "re", i, window.Math.max(1, window.Math.floor(1 * t)), .2);
                        for (i = 0; i < 3; i++)
                            E(e, "a", i, window.Math.max(1, window.Math.floor(2 * t)));
                        R(e)
                    }
                    function h(e, t) {
                        for (var i = 0; i < 6; i++)
                            E(e, "t", i, window.Math.floor(80 * t));
                        for (i = 0; i < 4; i++)
                            E(e, "b", i, window.Math.floor(80 * t));
                        for (i = 0; i < 3; i++)
                            E(e, "s", i, window.Math.floor(50 * t));
                        var n = [];
                        for (i = 0; i < 6; i++)
                            I(e, n);
                        T(e, n),
                        E(e, "p", 0, window.Math.floor(28 * t));
                        for (i = 0; i < 3; i++)
                            E(e, "g", i, window.Math.floor(7 * t));
                        for (i = 0; i < 3; i++)
                            E(e, "d", i, window.Math.floor(2 * t));
                        for (i = 0; i < 3; i++)
                            E(e, "a", i, window.Math.floor(1 * t));
                        for (i = 0; i < 3; i++)
                            E(e, "m", i, window.Math.floor(1 * t));
                        E(e, "a", 0, window.Math.floor(1 * t)),
                        R(e)
                    }
                    function y(e, t) {
                        for (var i = 0; i < 6; i++)
                            E(e, "t", i, window.Math.floor(20 * t));
                        for (i = 0; i < 4; i++)
                            E(e, "b", i, window.Math.floor(20 * t));
                        for (i = 0; i < 3; i++)
                            E(e, "s", i, window.Math.floor(20 * t));
                        var n = [];
                        I(e, n),
                        T(e, n),
                        n = [],
                        E(e, "p", 0, window.Math.floor(24 * t));
                        for (i = 0; i < 3; i++)
                            E(e, "g", i, window.Math.floor(5 * t));
                        if (world.つせウ小り六ぬオキニ === WORLD.MODE_ZOMBIES) {
                            for (i = 0; i < 3; i++)
                                E(e, "d", i, window.Math.floor(3 * t));
                            for (i = 0; i < 3; i++)
                                E(e, "a", i, window.Math.floor(2 * t))
                        }
                        R(e)
                    }
                    function R(e) {
                        var t = world.biomes[e];
                        u(-3 + window.Math.floor(t.y2 / 100), -1 + window.Math.floor(t.x2 / 100), "s", 0, 0),
                        u(3 + window.Math.floor(t.y1 / 100), -1 + window.Math.floor(t.x2 / 100), "s", 0, 0),
                        u(-3 + window.Math.floor(t.y2 / 100), 1 + window.Math.floor(t.x1 / 100), "s", 0, 0),
                        u(3 + window.Math.floor(t.y1 / 100), 1 + window.Math.floor(t.x1 / 100), "s", 0, 0)
                    }
                    function E(e, t, i, n, a) {
                        var I = world.biomes[e]
                          , T = window.Math.floor(I.x1 / 100)
                          , o = window.Math.floor(I.y1 / 100)
                          , r = window.Math.floor(I.w / 100)
                          , d = window.Math.floor(I.h / 100);
                        void 0 !== a && (a = 1 - a,
                        T += window.Math.floor(r * a / 2),
                        o += window.Math.floor(d * a / 2),
                        r -= window.Math.floor(r * a),
                        d -= window.Math.floor(d * a));
                        for (var s = MT.tiles, h = 0, y = 0; h < n && !(y > 5e4); y++) {
                            var R, E = o + window.Math.floor(world.RNG.get() * d), m = T + window.Math.floor(world.RNG.get() * r);
                            world.dist_from_biome(e, 100 * m + 50, 100 * E + 50) < 400 || void 0 !== (R = s[E][m + 1]) && void 0 !== R[t] && void 0 !== R[t][i] || void 0 !== (R = s[E][m - 1]) && void 0 !== R[t] && void 0 !== R[t][i] || void 0 !== (R = s[E + 1][m]) && void 0 !== R[t] && void 0 !== R[t][i] || void 0 !== (R = s[E - 1][m]) && void 0 !== R[t] && void 0 !== R[t][i] || void 0 !== (R = s[E + 1][m - 1]) && void 0 !== R[t] && void 0 !== R[t][i] || void 0 !== (R = s[E - 1][m + 1]) && void 0 !== R[t] && void 0 !== R[t][i] || void 0 !== (R = s[E + 1][m + 1]) && void 0 !== R[t] && void 0 !== R[t][i] || void 0 !== (R = s[E - 1][m - 1]) && void 0 !== R[t] && void 0 !== R[t][i] || void 0 === s[E][m] && (u(E, m, t, i, 1),
                            h++)
                        }
                    }
                    function m(e, t) {
                        return e >= 0 && t >= 0 && e < world.nh && t < world.nw
                    }
                    function S(e, t, i, n) {
                        if (m(e, t)) {
                            var a = MT.tiles;
                            if (void 0 === a[e][t] && (a[e][t] = {}),
                            void 0 === a[e][t].r) {
                                var I = 0;
                                m(e - 1, t) && void 0 !== a[e - 1][t] && void 0 !== a[e - 1][t].wtb && (I += 2),
                                m(e, t - 1) && void 0 !== a[e][t - 1] && void 0 !== a[e][t - 1].wtb && (I += 8),
                                m(e, t + 1) && void 0 !== a[e][t + 1] && void 0 !== a[e][t + 1].wtb && (I += 16),
                                m(e + 1, t) && void 0 !== a[e + 1][t] && void 0 !== a[e + 1][t].wtb && (I += 64),
                                !m(e - 1, t - 1) || 10 & ~I || void 0 === a[e - 1][t - 1] || void 0 === a[e - 1][t - 1].wtb || (I += 1),
                                !m(e - 1, t + 1) || 18 & ~I || void 0 === a[e - 1][t + 1] || void 0 === a[e - 1][t + 1].wtb || (I += 4),
                                !m(e + 1, t - 1) || 72 & ~I || void 0 === a[e + 1][t - 1] || void 0 === a[e + 1][t - 1].wtb || (I += 32),
                                !m(e + 1, t + 1) || 80 & ~I || void 0 === a[e + 1][t + 1] || void 0 === a[e + 1][t + 1].wtb || (I += 128),
                                a[e][t].r = {},
                                a[e][t].r.river = I,
                                a[e][t].r.current = n,
                                a[e][t].r.dist = world.dist_from_biome(i, 100 * t + 50, 100 * e + 50) - 400,
                                a[e][t].r.x = 100 * t + 50,
                                a[e][t].r.y = 100 * e + 50
                            }
                        }
                    }
                    function u(e, t, i, n, a) {
                        if (!(e < 0 || t < 0 || e >= world.nh || t >= world.nw)) {
                            var I = MT.tiles;
                            return void 0 === I[e][t] && (I[e][t] = {}),
                            void 0 !== I[e][t][i] ? 0 : (I[e][t][i] = [],
                            I[e][t][i][n] = [{
                                x: 100 * t + 50,
                                y: 100 * e + 50
                            }],
                            1 === a && function(e, t, i, n) {
                                re.push([e, t, i, n])
                            }(i, n, e, t),
                            1)
                        }
                    }
                    function p(e, t, i) {
                        if (e[t])
                            for (let n = 0; n < e[t].length; n++)
                                if (e[t][n])
                                    for (let a = 0; a < e[t][n].length; a++)
                                        e[t][n][a].hit = i,
                                        e[t][n][a].update = !1,
                                        e[t][n][a].time = 0,
                                        e[t][n][a].angle = 0
                    }
                    this.つせウ小り六ぬオキニ = WORLD.MODE_PVP,
                    this.子生左上うた田五チム = 0,
                    this.islands = 6,
                    this.ghost_delay = 60,
                    this.チとモやせタ月ヒけニ = [],
                    this.units = [],
                    this.units[ITEMS.PLAYERS] = [],
                    this.units[ITEMS.FRUIT] = [],
                    this.units[ITEMS.RABBIT] = [],
                    this.units[ITEMS.WOLF] = [],
                    this.units[ITEMS.CRAB] = [],
                    this.units[ITEMS.BOAR] = [],
                    this.units[ITEMS.BABY_MAMMOTH] = [],
                    this.units[ITEMS.CRAB_BOSS] = [],
                    this.units[ITEMS.BABY_DRAGON] = [],
                    this.units[ITEMS.BABY_LAVA] = [],
                    this.units[ITEMS.HAWK] = [],
                    this.units[ITEMS.PIRANHA] = [],
                    this.units[ITEMS.KRAKEN] = [],
                    this.units[ITEMS.FOX] = [],
                    this.units[ITEMS.PENGUIN] = [],
                    this.units[ITEMS.SPELL] = [],
                    this.units[ITEMS.FIREFLY] = [],
                    this.units[ITEMS.BEAR] = [],
                    this.units[ITEMS.MAMMOTH] = [],
                    this.units[ITEMS.DRAGON] = [],
                    this.units[ITEMS.LAVA_DRAGON] = [],
                    this.units[ITEMS.FLAME] = [],
                    this.units[ITEMS.WHEAT_MOB] = [],
                    this.units[ITEMS.ALOE_VERA_MOB] = [],
                    this.units[ITEMS.PUMPKIN_MOB] = [],
                    this.units[ITEMS.GARLIC_MOB] = [],
                    this.units[ITEMS.THORNBUSH_MOB] = [],
                    this.units[ITEMS.TREASURE_CHEST] = [],
                    this.units[ITEMS.DEAD_BOX] = [],
                    this.units[ITEMS.CRATE] = [],
                    this.units[ITEMS.BREAD_OVEN] = [],
                    this.units[ITEMS.SPIDER] = [],
                    this.units[ITEMS.WORKBENCH] = [],
                    this.units[ITEMS.FIRE] = [],
                    this.units[ITEMS.BIG_FIRE] = [],
                    this.units[ITEMS.SEED] = [],
                    this.units[ITEMS.SPIKE] = [],
                    this.units[ITEMS.STONE_SPIKE] = [],
                    this.units[ITEMS.GOLD_SPIKE] = [],
                    this.units[ITEMS.DIAMOND_SPIKE] = [],
                    this.units[ITEMS.AMETHYST_SPIKE] = [],
                    this.units[ITEMS.REIDITE_SPIKE] = [],
                    this.units[ITEMS.WALL] = [],
                    this.units[ITEMS.STONE_WALL] = [],
                    this.units[ITEMS.GOLD_WALL] = [],
                    this.units[ITEMS.DIAMOND_WALL] = [],
                    this.units[ITEMS.AMETHYST_WALL] = [],
                    this.units[ITEMS.REIDITE_WALL] = [],
                    this.units[ITEMS.BED] = [],
                    this.units[ITEMS.WOOD_DOOR] = [],
                    this.units[ITEMS.STONE_DOOR] = [],
                    this.units[ITEMS.GOLD_DOOR] = [],
                    this.units[ITEMS.DIAMOND_DOOR] = [],
                    this.units[ITEMS.AMETHYST_DOOR] = [],
                    this.units[ITEMS.REIDITE_DOOR] = [],
                    this.units[ITEMS.WOOD_DOOR_SPIKE] = [],
                    this.units[ITEMS.STONE_DOOR_SPIKE] = [],
                    this.units[ITEMS.GOLD_DOOR_SPIKE] = [],
                    this.units[ITEMS.DIAMOND_DOOR_SPIKE] = [],
                    this.units[ITEMS.AMETHYST_DOOR_SPIKE] = [],
                    this.units[ITEMS.REIDITE_DOOR_SPIKE] = [],
                    this.units[ITEMS.FURNACE] = [],
                    this.units[ITEMS.TOTEM] = [],
                    this.units[ITEMS.WOOD_TOWER] = [],
                    this.units[ITEMS.CHEST] = [],
                    this.units[ITEMS.RESURRECTION] = [],
                    this.units[ITEMS.EMERALD_MACHINE] = [],
                    this.units[ITEMS.BRIDGE] = [],
                    this.units[ITEMS.ROOF] = [],
                    this.units[ITEMS.PLOT] = [],
                    this.units[ITEMS.WHEAT_SEED] = [],
                    this.units[ITEMS.ALOE_VERA_SEED] = [],
                    this.units[ITEMS.PUMPKIN_SEED] = [],
                    this.units[ITEMS.TOMATO_SEED] = [],
                    this.units[ITEMS.CARROT_SEED] = [],
                    this.units[ITEMS.WATERMELON_SEED] = [],
                    this.units[ITEMS.GARLIC_SEED] = [],
                    this.units[ITEMS.THORNBUSH_SEED] = [],
                    this.units[ITEMS.WINDMILL] = [],
                    this.units[ITEMS.EXTRACTOR_MACHINE_STONE] = [],
                    this.units[ITEMS.EXTRACTOR_MACHINE_GOLD] = [],
                    this.units[ITEMS.DIAMOND_EXTRACTOR] = [],
                    this.units[ITEMS.EXTRACTOR_MACHINE_AMETHYST] = [],
                    this.units[ITEMS.EXTRACTOR_MACHINE_REIDITE] = [],
                    this.units[ITEMS.WELL] = [],
                    this.units[ITEMS.GIFT] = [],
                    this.units[ITEMS.GARLAND] = [],
                    this.fast_units = [],
                    this.nw = 260,
                    this.nh = 260,
                    this.dw = 100,
                    this.dh = 100,
                    this.w = this.nw * this.dw,
                    this.h = this.nh * this.dh,
                    this.RNG = new _,
                    this.biomes = [],
                    this.shade = new v(!1,0,1,0,1,1),
                    this.transition = !1,
                    this.BIOME = [],
                    this.BIOME_FOREST = 0,
                    this.BIOME_WINTER = 1,
                    this.BIOME_LAVA = 2,
                    this.BIOME_DRAGON = 3,
                    this.BIOME_SEA = 4,
                    this.BIOME_DESERT = 10,
                    this.BIOME[this.BIOME_FOREST] = {
                        isSand: 1,
                        day: [19, 58, 43],
                        night: [4, 43, 48],
                        _color: ["#133a2b", "#042b30"]
                    },
                    this.BIOME[this.BIOME_SEA] = {
                        isSand: 0,
                        day: [11, 106, 132],
                        night: [9, 55, 63],
                        _color: ["#0B6A84", "#09373F"]
                    },
                    this.BIOME[this.BIOME_WINTER] = {
                        isSand: 0,
                        day: [235, 242, 240],
                        night: [19, 97, 103],
                        _color: ["#EBF2F0", "#136167"]
                    },
                    this.BIOME[this.BIOME_LAVA] = {
                        isSand: 0,
                        day: [45, 32, 23],
                        night: [3, 28, 30],
                        _color: ["#2D2017", "#031C1E"]
                    },
                    this.BIOME[this.BIOME_DRAGON] = {
                        isSand: 0,
                        day: [74, 74, 74],
                        night: [24, 61, 60],
                        _color: ["#4A4A4A", "#183D3C"]
                    },
                    this.BIOME[this.BIOME_DESERT] = {
                        isSand: 0,
                        day: [235, 216, 166],
                        night: [9, 61, 56],
                        _color: ["#EBD8A6", "#093D38"]
                    },
                    this.MAX_DIST = -1e6,
                    this.dist_winter = this.MAX_DIST,
                    this.dist_desert = this.MAX_DIST,
                    this.dist_lava = this.MAX_DIST,
                    this.dist_forest = this.MAX_DIST,
                    this.dist_water = this.MAX_DIST,
                    this.dist_dragon = this.MAX_DIST,
                    this.dist_from_biomes = function(e) {
                        var t = e.r.x
                          , i = e.r.y
                          , n = window.Math.floor(i / 100)
                          , a = window.Math.floor(t / 100);
                        e.dist_winter = world.MAX_DIST,
                        e.dist_desert = world.MAX_DIST,
                        e.dist_lava = world.MAX_DIST,
                        e.dist_forest = world.MAX_DIST,
                        e.dist_dragon = world.MAX_DIST,
                        e.dist_sand = world.MAX_DIST;
                        for (var I = 0; world.biomes[I].t !== world.BIOME_SEA; I++)
                            if (world.biomes[I].t === world.BIOME_FOREST) {
                                var T = world.dist_from_biome(I, t, i);
                                e.dist_forest = window.Math.max(e.dist_forest, T),
                                T > 0 && 1 === world.dist_from_sand(I, t, i) && (e.dist_sand = 1)
                            } else
                                world.biomes[I].t === world.BIOME_WINTER ? e.dist_winter = window.Math.max(e.dist_winter, world.dist_from_biome(I, t, i)) : world.biomes[I].t === world.BIOME_DESERT ? e.dist_desert = window.Math.max(e.dist_desert, world.dist_from_biome(I, t, i)) : world.biomes[I].t === world.BIOME_LAVA ? e.dist_lava = window.Math.max(e.dist_lava, world.dist_from_biome(I, t, i)) : world.biomes[I].t === world.BIOME_DRAGON && (e.dist_dragon = window.Math.max(e.dist_dragon, world.dist_from_biome(I, t, i)));
                        MT.tiles[n][a].iblk && (e.dist_sand = 1),
                        world.find_bridge(a, n) ? e.dist_water = e.MAX_DIST : MT.tiles[n][a].wtb || e.dist_winter < 0 && e.dist_lava < 0 && e.dist_forest < 0 && e.dist_sand < 0 && e.dist_dragon < 0 && e.dist_desert < 0 ? e.dist_water = 1 : e.dist_water = e.MAX_DIST
                    }
                    ,
                    this.update_dist_from_biomes = function(e, t) {
                        world.dist_winter = world.MAX_DIST,
                        world.dist_desert = world.MAX_DIST,
                        world.dist_lava = world.MAX_DIST,
                        world.dist_dragon = world.MAX_DIST,
                        world.dist_forest = world.MAX_DIST;
                        for (var i = 0; world.biomes[i].t !== world.BIOME_SEA; i++)
                            world.biomes[i].t === world.BIOME_FOREST ? world.dist_forest = window.Math.max(world.dist_forest, world.dist_from_biome(i, e, t)) : world.biomes[i].t === world.BIOME_WINTER ? world.dist_winter = window.Math.max(world.dist_winter, world.dist_from_biome(i, e, t)) : world.biomes[i].t === world.BIOME_DESERT ? world.dist_desert = window.Math.max(world.dist_desert, world.dist_from_biome(i, e, t)) : world.biomes[i].t === world.BIOME_LAVA ? world.dist_lava = window.Math.max(world.dist_lava, world.dist_from_biome(i, e, t)) : world.biomes[i].t === world.BIOME_DRAGON && (world.dist_dragon = window.Math.max(world.dist_dragon, world.dist_from_biome(i, e, t)));
                        world.dist_winter < 0 && world.dist_dragon < 0 && world.dist_forest < 0 && world.dist_dragon < 0 && world.dist_desert < 0 ? world.dist_water = 1 : world.dist_water = world.MAX_DIST
                    }
                    ,
                    this.dist_from_sand = function(e, t, i) {
                        var n = world.biomes[e]
                          , a = 0;
                        let I = n.x1 + 30 + (n.v & WORLD.LEFT ? 0 : 150);
                        var T = t - I;
                        (n.v & WORLD.LEFT) > 0 && T > 0 && T < 320 && (a = 1);
                        let o = n.y1 + 250 + (n.v & WORLD.TOP ? 0 : 150);
                        T = i - o,
                        (n.v & WORLD.TOP) > 0 && T > 0 && T < 320 && (a = 1);
                        let r = n.x2 + 80 + (n.v & WORLD.RIGHT ? 0 : -200);
                        T = r - t,
                        (n.v & WORLD.RIGHT) > 0 && T > 0 && T < 320 && (a = 1);
                        let d = n.y2 - 200 + (n.v & WORLD.BOTTOM ? 0 : -200);
                        return T = d - i,
                        (n.v & WORLD.BOTTOM) > 0 && T > 0 && T < 320 && (a = 1),
                        t >= I && t <= r && i >= o && i <= d ? a : 0
                    }
                    ,
                    this.dist_from_biome = function(e, t, i) {
                        var n = world.biomes[e];
                        let a = n.x1 + 30
                          , I = n.y1 + 250
                          , T = n.x2 + 80
                          , o = n.y2 - 200;
                        if (0 === n.x1 && (a = 0),
                        0 === n.y1 && (I = 0),
                        t >= a && t <= T && i >= I && i <= o)
                            return window.Math.min(t - a, T - t, i - I, o - i);
                        var r = -1e6;
                        t - a < 0 ? r = window.Math.max(r, t - a) : T - t < 0 && (r = window.Math.max(r, T - t));
                        let d = -1e6;
                        return (i < I || i > o) && (d = i - I < 0 ? window.Math.max(d, i - I) : window.Math.max(d, o - i),
                        r = -1e6 !== r && -1e6 !== d ? window.Math.min(r, d) : d),
                        r
                    }
                    ,
                    this.add_island = function(e, t, i) {
                        var n = i
                          , a = t;
                        u(n, a, "isl", e, 1);
                        for (var I = 0; I < 4; I++)
                            for (var T = 0; T < 3; T++)
                                u(n - T, a - I, "iblk", 0),
                                u(n + T, a - I, "iblk", 0),
                                u(n + T, a + I, "iblk", 0),
                                u(n - T, a + I, "iblk", 0);
                        if (0 === e) {
                            for (I = 0; I < 2; I++)
                                u(n - I, a - 4, "iblk", 0),
                                u(n + I, a - 4, "iblk", 0),
                                u(n - I, a + 4, "iblk", 0),
                                u(n + I, a + 4, "iblk", 0);
                            for (I = 0; I < 3; I++)
                                u(n - 3, a + I, "iblk", 0),
                                u(n + 3, a + I, "iblk", 0),
                                u(n - 3, a - I, "iblk", 0),
                                u(n + 3, a - I, "iblk", 0);
                            u(n - 2, a - 4, "iblk", 0),
                            u(n - 3, a - 3, "iblk", 0),
                            u(n + 2, a + 4, "iblk", 0),
                            u(n + 3, a + 3, "iblk", 0)
                        } else if (1 === e) {
                            for (I = 0; I < 3; I++)
                                u(n - I, a - 4, "iblk", 0),
                                u(n + I, a - 4, "iblk", 0),
                                u(n - I, a + 4, "iblk", 0),
                                u(n + I, a + 4, "iblk", 0);
                            for (I = 0; I < 4; I++)
                                u(n - 3, a + I, "iblk", 0),
                                u(n + 3, a + I, "iblk", 0),
                                u(n - 3, a - I, "iblk", 0),
                                u(n + 3, a - I, "iblk", 0)
                        } else if (2 === e) {
                            for (I = 0; I < 3; I++)
                                u(n - I, a - 4, "iblk", 0),
                                u(n + I, a - 4, "iblk", 0),
                                u(n - I, a + 4, "iblk", 0),
                                u(n + I, a + 4, "iblk", 0);
                            for (I = 0; I < 3; I++)
                                u(n - 3, a + I, "iblk", 0),
                                u(n + 3, a + I, "iblk", 0),
                                u(n - 3, a - I, "iblk", 0),
                                u(n + 3, a - I, "iblk", 0)
                        }
                    }
                    ,
                    this.add_islands = function(e) {
                        for (var t = 0; t < world.biomes.length && e > 0; t++) {
                            var i = world.biomes[t];
                            if (i.t === world.BIOME_SEA && (i.w > 1800 && i.h > 1e3)) {
                                var n = window.Math.floor((i.x1 + i.w / 2) / 100)
                                  , a = window.Math.floor((i.y1 + i.h / 2) / 100);
                                world.add_island(e % 3, n, a);
                                for (var I = 0; I < 3; I++) {
                                    var T = a - 2 + window.Math.floor(4 * world.RNG.get())
                                      , o = n - 3 + window.Math.floor(6 * world.RNG.get());
                                    void 0 === MT.tiles[T][o].s && u(T, o, "plm", I);
                                    T = a - 2 + window.Math.floor(4 * world.RNG.get()),
                                    o = n - 3 + window.Math.floor(6 * world.RNG.get());
                                    void 0 === MT.tiles[T][o].plm && u(T, o, "s", I)
                                }
                                T = a - 2 + window.Math.floor(4 * world.RNG.get()),
                                o = n - 3 + window.Math.floor(6 * world.RNG.get());
                                void 0 === MT.tiles[T][o].plm && void 0 === MT.tiles[T][o].s && u(T, o, "p", 0, 1),
                                e--
                            }
                        }
                    }
                    ,
                    this.generate_world = function(e) {
                        world.RNG.init(e);
                        for (var n = 0; ; ) {
                            if (++n > 1e4)
                                return;
                            if (world.biomes = [],
                            0 !== world.子生左上うた田五チム || world.つせウ小り六ぬオキニ !== WORLD.MODE_VAMPIRES && world.つせウ小り六ぬオキニ !== WORLD.MODE_EXPERIMENTAL && world.つせウ小り六ぬオキニ !== WORLD.MODE_PVP || (world.子生左上うた田五チム = c),
                            world.つせウ小り六ぬオキニ === WORLD.MODE_ZOMBIES)
                                world.biomes.push(new A(world.BIOME_FOREST,2,2,80,80,15));
                            else if (world.つせウ小り六ぬオキニ === WORLD.MODE_LEGACY)
                                world.biomes.push(new A(world.BIOME_FOREST,2,2,150,150,15));
                            else if (0 !== world.子生左上うた田五チム && world.子生左上うた田五チム.length > 0 && world.子生左上うた田五チム[0].length > 3)
                                for (var a = 0; a < world.子生左上うた田五チム.length; a++) {
                                    if (0 !== (g = world.子生左上うた田五チム[a])[0])
                                        break;
                                    var I = world.BIOME_FOREST;
                                    switch (g[1]) {
                                    case "FOREST":
                                        I = world.BIOME_FOREST;
                                        break;
                                    case "WINTER":
                                        I = world.BIOME_WINTER;
                                        break;
                                    case "DESERT":
                                        I = world.BIOME_DESERT;
                                        break;
                                    case "LAVA":
                                        I = world.BIOME_LAVA;
                                        break;
                                    case "DRAGON":
                                        I = world.BIOME_DRAGON
                                    }
                                    world.biomes.push(new A(I,g[2],g[3],g[4],g[5],g[6],g[7]))
                                }
                            else if (0 !== world.子生左上うた田五チム) {
                                for (a = 0; a < world.子生左上うた田五チム.length; a++) {
                                    var R = world.子生左上うた田五チム[a];
                                    I = world.BIOME_FOREST;
                                    switch (R[0]) {
                                    case "FOREST":
                                        I = world.BIOME_FOREST;
                                        break;
                                    case "WINTER":
                                        I = world.BIOME_WINTER;
                                        break;
                                    case "DESERT":
                                        I = world.BIOME_DESERT;
                                        break;
                                    case "LAVA":
                                        I = world.BIOME_LAVA;
                                        break;
                                    case "DRAGON":
                                        I = world.BIOME_DRAGON
                                    }
                                    if (0 === i(I, R[1], R[2], 0, 10 * (a + 1)))
                                        break
                                }
                                if (a !== world.子生左上うた田五チム.length)
                                    continue
                            }
                            break
                        }
                        render_minimap();
                        for (var E = [], m = 0; m < world.nh; m++) {
                            E[m] = new Array(world.nw);
                            for (var S = 0; S < world.nw; S++)
                                E[m][S] = 0
                        }
                        for (m = 0; m < world.biomes.length; m++)
                            for (var p = (R = world.biomes[m]).x2 / 100, P = R.y2 / 100, w = R.x1 / 100; w <= p; w++)
                                for (var _ = R.y1 / 100; _ <= P; _++)
                                    try {
                                        E[_][w] = 1
                                    } catch (e) {}
                        for (_ = 0; _ < world.nh; _++)
                            for (w = 0; w < world.nw; w++)
                                0 === E[_][w] && t(E, w, _);
                        MT = {
                            w: world.nw,
                            h: world.nh,
                            tiles: []
                        };
                        for (m = 0; m < world.nh; m++)
                            MT.tiles[m] = [];
                        if (0 !== world.子生左上うた田五チム && world.子生左上うた田五チム.length > 0 && world.子生左上うた田五チム[0].length > 3)
                            for (a = 0; a < world.子生左上うた田五チム.length; a++) {
                                "isl" === (g = world.子生左上うた田五チム[a])[1] && world.add_island(g[2], g[3], g[4])
                            }
                        else
                            world.add_islands(world.islands);
                        if (0 !== world.子生左上うた田五チム && world.子生左上うた田五チム.length > 0 && world.子生左上うた田五チム[0].length > 3) {
                            var f = [];
                            for (a = 0; a < world.子生左上うた田五チム.length; a++) {
                                var g;
                                1 === (g = world.子生左上うた田五チム[a])[0] && ("r" === g[1] ? (u(g[3], g[2], "wtb", 0, 1),
                                f.push([g[3], g[2], g[4]])) : u(g[4], g[3], g[1], g[2], g[5]))
                            }
                            T(0, f),
                            f = []
                        } else
                            for (m = 0; m < world.biomes.length; m++) {
                                R = world.biomes[m];
                                world.つせウ小り六ぬオキニ === WORLD.MODE_LEGACY ? R.t === world.BIOME_FOREST && h(m, 1.5) : (R.t === world.BIOME_FOREST && y(m, R.w / 1e4),
                                R.t === world.BIOME_LAVA && s(m, R.w / 1e4),
                                R.t === world.BIOME_WINTER && r(m, R.w / 1e4),
                                R.t === world.BIOME_DESERT && d(m, R.w / 1e4),
                                R.t === world.BIOME_DRAGON && o(m))
                            }
                        de("isl", 1),
                        de("wtb", 20),
                        de("la", 1),
                        de("c", 1),
                        de("s", 1),
                        de("f", 1),
                        de("p", 1),
                        de("g", 1),
                        de("d", 1),
                        de("a", 1),
                        de("re", 1),
                        de("m", 1),
                        re = [],
                        world.map_wrapper(MT)
                    }
                    ,
                    this.render_single_resource = u,
                    this.map_wrapper = function(e) {
                        for (var t = 0; t < this.nh; t++)
                            for (var i = 0; i < this.nw; i++)
                                if (e.tiles[t] || (e.tiles[t] = []),
                                e.tiles[t][i]) {
                                    var n = e.tiles[t][i];
                                    if (n.de && n.de.length > 0)
                                        for (var I = 0; I < n.de.length; I++)
                                            if (n.de[I] && n.de[I].length > 0)
                                                if (n.de = n.de[I][0],
                                                I >= 41 && I <= 49) {
                                                    n.de.scale = 3;
                                                    var T = window.Math.floor(3 * window.Math.random() + 1);
                                                    n.de.p = [];
                                                    for (var o = 0; o < T; o++)
                                                        n.de.p.push({
                                                            x: 120 * window.Math.random() - 60,
                                                            y: 120 * window.Math.random() - 60,
                                                            "angle": window.Math.random() * a,
                                                            _id: 41 + window.Math.floor(9 * window.Math.random())
                                                        })
                                                } else if (I >= 19 && I <= 26) {
                                                    n.de.scale = 3;
                                                    T = window.Math.floor(3 * window.Math.random() + 1);
                                                    n.de.p = [];
                                                    for (o = 0; o < T; o++)
                                                        n.de.p.push({
                                                            x: 120 * window.Math.random() - 60,
                                                            y: 120 * window.Math.random() - 60,
                                                            "angle": window.Math.random() * a,
                                                            _id: 19 + window.Math.floor(8 * window.Math.random())
                                                        })
                                                } else
                                                    I <= 15 || I >= 27 && I <= 40 ? (n.de.angle = 0,
                                                    n.de.scale = 2,
                                                    n.de._id = I) : (n.de.angle = window.Math.random() * a,
                                                    n.de.scale = 1,
                                                    n.de._id = I);
                                    p(n, "p", new v(!1,1,1,0,10,10)),
                                    p(n, "t", new v(!1,1,1,0,10,10)),
                                    p(n, "s", new v(!1,1,1,0,10,10)),
                                    p(n, "g", new v(!1,1,1,0,10,10)),
                                    p(n, "d", new v(!1,1,1,0,10,10)),
                                    p(n, "b", new v(!1,1,1,0,10,10)),
                                    p(n, "f", new v(!1,1,1,0,10,10)),
                                    p(n, "a", new v(!1,1,1,0,10,10)),
                                    p(n, "cs", new v(!1,1,1,0,10,10)),
                                    p(n, "plm", new v(!1,1,1,0,10,10)),
                                    p(n, "re", new v(!1,1,1,0,10,10)),
                                    p(n, "c", new v(!1,1,1,0,10,10)),
                                    p(n, "m", new v(!1,1,1,0,10,10))
                                } else
                                    e.tiles[t][i] = []
                    }
                    ,
                    this.time = SPRITE.DAY,
                    this.clock = {
                        translate: {
                            x: 0,
                            y: 0
                        },
                        init: 0,
                        hour: 0,
                        now: 0
                    },
                    this.delete_all_units = function() {
                        this.fast_units = [],
                        this.units[ITEMS.PLAYERS] = [],
                        this.units[ITEMS.WORKBENCH] = [],
                        this.units[ITEMS.FIRE] = [],
                        this.units[ITEMS.BIG_FIRE] = [],
                        this.units[ITEMS.SEED] = [],
                        this.units[ITEMS.SPIKE] = [],
                        this.units[ITEMS.STONE_SPIKE] = [],
                        this.units[ITEMS.GOLD_SPIKE] = [],
                        this.units[ITEMS.DIAMOND_SPIKE] = [],
                        this.units[ITEMS.AMETHYST_SPIKE] = [],
                        this.units[ITEMS.REIDITE_SPIKE] = [],
                        this.units[ITEMS.BRIDGE] = [],
                        this.units[ITEMS.WOOD_TOWER] = [],
                        this.units[ITEMS.ROOF] = [],
                        this.units[ITEMS.PLOT] = [],
                        this.units[ITEMS.WHEAT_SEED] = [],
                        this.units[ITEMS.ALOE_VERA_SEED] = [],
                        this.units[ITEMS.PUMPKIN_SEED] = [],
                        this.units[ITEMS.TOMATO_SEED] = [],
                        this.units[ITEMS.CARROT_SEED] = [],
                        this.units[ITEMS.WATERMELON_SEED] = [],
                        this.units[ITEMS.GARLIC_SEED] = [],
                        this.units[ITEMS.THORNBUSH_SEED] = [],
                        this.units[ITEMS.WINDMILL] = [],
                        this.units[ITEMS.EXTRACTOR_MACHINE_STONE] = [],
                        this.units[ITEMS.EXTRACTOR_MACHINE_GOLD] = [],
                        this.units[ITEMS.DIAMOND_EXTRACTOR] = [],
                        this.units[ITEMS.EXTRACTOR_MACHINE_AMETHYST] = [],
                        this.units[ITEMS.EXTRACTOR_MACHINE_REIDITE] = [],
                        this.units[ITEMS.WELL] = [],
                        this.units[ITEMS.WALL] = [],
                        this.units[ITEMS.STONE_WALL] = [],
                        this.units[ITEMS.GOLD_WALL] = [],
                        this.units[ITEMS.DIAMOND_WALL] = [],
                        this.units[ITEMS.AMETHYST_WALL] = [],
                        this.units[ITEMS.REIDITE_WALL] = [],
                        this.units[ITEMS.BED] = [],
                        this.units[ITEMS.WOOD_DOOR] = [],
                        this.units[ITEMS.STONE_DOOR] = [],
                        this.units[ITEMS.GOLD_DOOR] = [],
                        this.units[ITEMS.DIAMOND_DOOR] = [],
                        this.units[ITEMS.AMETHYST_DOOR] = [],
                        this.units[ITEMS.REIDITE_DOOR] = [],
                        this.units[ITEMS.WOOD_DOOR_SPIKE] = [],
                        this.units[ITEMS.STONE_DOOR_SPIKE] = [],
                        this.units[ITEMS.GOLD_DOOR_SPIKE] = [],
                        this.units[ITEMS.DIAMOND_DOOR_SPIKE] = [],
                        this.units[ITEMS.AMETHYST_DOOR_SPIKE] = [],
                        this.units[ITEMS.REIDITE_DOOR_SPIKE] = [],
                        this.units[ITEMS.FURNACE] = [],
                        this.units[ITEMS.TOTEM] = [],
                        this.units[ITEMS.WOOD_TOWER] = [],
                        this.units[ITEMS.CHEST] = [],
                        this.units[ITEMS.RESURRECTION] = [],
                        this.units[ITEMS.EMERALD_MACHINE] = [],
                        this.units[ITEMS.FRUIT] = [],
                        this.units[ITEMS.RABBIT] = [],
                        this.units[ITEMS.WOLF] = [],
                        this.units[ITEMS.CRAB] = [],
                        this.units[ITEMS.BOAR] = [],
                        this.units[ITEMS.BABY_MAMMOTH] = [],
                        this.units[ITEMS.CRAB_BOSS] = [],
                        this.units[ITEMS.BABY_DRAGON] = [],
                        this.units[ITEMS.BABY_LAVA] = [],
                        this.units[ITEMS.HAWK] = [],
                        this.units[ITEMS.PIRANHA] = [],
                        this.units[ITEMS.KRAKEN] = [],
                        this.units[ITEMS.FOX] = [],
                        this.units[ITEMS.PENGUIN] = [],
                        this.units[ITEMS.SPELL] = [],
                        this.units[ITEMS.FIREFLY] = [],
                        this.units[ITEMS.BEAR] = [],
                        this.units[ITEMS.MAMMOTH] = [],
                        this.units[ITEMS.VULTURE] = [],
                        this.units[ITEMS.SAND_WORM] = [],
                        this.units[ITEMS.DRAGON] = [],
                        this.units[ITEMS.LAVA_DRAGON] = [],
                        this.units[ITEMS.FLAME] = [],
                        this.units[ITEMS.WHEAT_MOB] = [],
                        this.units[ITEMS.ALOE_VERA_MOB] = [],
                        this.units[ITEMS.PUMPKIN_MOB] = [],
                        this.units[ITEMS.GARLIC_MOB] = [],
                        this.units[ITEMS.THORNBUSH_MOB] = [],
                        this.units[ITEMS.TREASURE_CHEST] = [],
                        this.units[ITEMS.DEAD_BOX] = [],
                        this.units[ITEMS.CRATE] = [],
                        this.units[ITEMS.BREAD_OVEN] = [],
                        this.units[ITEMS.SPIDER] = [],
                        this.units[ITEMS.GIFT] = [],
                        this.units[ITEMS.GARLAND] = []
                    }
                    ,
                    this.delete_units = function(e) {
                        if (!this.fast_units[e]) return;
                        let t = this.fast_units[e].type;
                        this.fast_units[e] = null;
                        for (var i = this.units[t], n = 0; n < i.length; n++) {
                            if (i[n].id == e)
                                return void i.splice(n, 1);
                            if (t === ITEMS.PLAYERS && i[n].pid == e)
                                return void i.splice(n, 1)
                        }
                    }
                    ,
                    this.find_tower = function(e, t) {
                        for (var i = 0; i < this.units[ITEMS.WOOD_TOWER].length; i++) {
                            var n = this.units[ITEMS.WOOD_TOWER][i];
                            if (window.Math.floor(n.x / 100) === t && window.Math.floor(n.y / 100) === e)
                                return 1
                        }
                        return 0
                    }
                    ,
                    this.find_bridge = function(e, t) {
                        for (var i = 0; i < this.units[ITEMS.BRIDGE].length; i++) {
                            var n = this.units[ITEMS.BRIDGE][i];
                            if (window.Math.floor(n.x / 100) == e && window.Math.floor(n.y / 100) == t)
                                return !0
                        }
                        return !1
                    }
                    ,
                    this.move_units = function(e) {
                        for (var t = 0; t < e.length; t++) {
                            let v = e[t];
                            if (v.angle != v.nangle && (v.angle = (v.angle + a) % a,
                            v.nangle = (v.nangle + a) % a,
                            v.angle != v.nangle)) {
                                var i = v.nangle - v.angle
                                  , n = window.Math.abs(i);
                                n > window.Math.PI && (n = a - n);
                                var I = n / window.Math.PI * 3 * WORLD.ROTATE * zT;
                                i > window.Math.PI ? v.angle -= I : i < -window.Math.PI ? v.angle += I : i < 0 ? v.angle -= I : v.angle += I,
                                v.angle = (v.angle + a) % a,
                                window.Math.abs(v.angle - v.nangle) < I && (v.angle = v.nangle)
                            }
                            if (v.x != v.r.x || v.y != v.r.y) {
                                v.action & STATE.IDLE && (v.action -= STATE.IDLE),
                                v.action |= STATE.WALK;
                                var T = N.get_std_angle(v, v.r) + window.Math.PI
                                  , o = zT * v.speed
                                  , r = N.build_vector(o, T);
                                N.norm(r) < N.norm(N.get_vector(v, v.r)) ? N.add_vector(v, r) : (v.action & STATE.WALK && (v.action -= STATE.WALK),
                                v.action |= STATE.IDLE,
                                N.copy_vector(v.r, v))
                            }
                            if (v.ghost) {
                                var d = v.bubbles;
                                (0 === (R = d.length) || R < SPRITE.GHOST_BUBBLES && d[R - 1].life < .95) && d.push({
                                    id: window.Math.floor(window.Math.random() * Ie[SPRITE.BUBBLES][0].length),
                                    x: window.Math.floor(v.x + 80 * window.Math.random() - 40),
                                    y: window.Math.floor(v.y + 80 * window.Math.random() - 40),
                                    life: 1
                                });
                                for (var s = 0; s < R; s++)
                                    d[s].life = window.Math.max(0, d[s].life - zT);
                                for (s = 0; s < R; s++)
                                    if (0 === d[s].life) {
                                        d.splice(s, 1);
                                        break
                                    }
                            }
                            var h = 0;
                            if (v.move_effect && UI.quality) {
                                var y = v.swim
                                  , R = y.length;
                                if (v.dist_water > 0 && v.vehicle !== ItemType.BABY_DRAGON && v.vehicle !== ItemType.BABY_LAVA && v.vehicle !== ItemType.PLANE && v.vehicle !== ItemType.HAWK && v.vehicle !== ItemType.NIMBUS && !v.ghost && (h = 1,
                                0 === R || N.dist(y[R - 1], v) > SPRITE.SWIM_SPACE)) {
                                    var E = -v.angle
                                      , m = 45 * window.Math.sin(E) * K
                                      , S = 45 * window.Math.cos(E) * K;
                                    y.push({
                                        x: v.x + m,
                                        y: v.y + S,
                                        r: 8,
                                        alpha: .8
                                    }),
                                    y.push({
                                        x: v.x - m,
                                        y: v.y - S,
                                        r: 8,
                                        alpha: .8
                                    }),
                                    y.push({
                                        x: v.x,
                                        y: v.y,
                                        r: 24,
                                        alpha: 1
                                    })
                                }
                                for (s = 0; s < R; s++)
                                    y[s].alpha = window.Math.max(0, y[s].alpha - zT / 2.2),
                                    y[s].r += 20 * zT;
                                y.length > 0 && 0 === y[0].alpha && y.splice(0, 1);
                                var c = v.foot
                                  , u = (R = c.length,
                                -1)
                                  , p = window.Math.max(0, N.sign_(v.dist_sand))
                                  , P = window.Math.max(0, N.sign_(v.dist_winter))
                                  , w = (window.Math.max(0, N.sign_(v.dist_desert)),
                                window.Math.max(0, N.sign_(v.dist_lava)))
                                  , _ = window.Math.max(0, N.sign_(v.dist_dragon));
                                if (v.dist_sand > 0 || v.dist_desert > 0)
                                    u = SPRITE.SAND_STEP;
                                else if (v.dist_dragon > 0)
                                    u = SPRITE.CAVE_STEP;
                                else if (v.dist_winter > 0)
                                    u = SPRITE.SNOW_STEP;
                                else if (v.dist_lava > 0)
                                    u = SPRITE.LAVA_STEP;
                                if (v.vehicle === ItemType.BOAR && 1 == (p | P | w | _)) {
                                    u = SPRITE.BOAR_STEP;
                                    var f = v.vehicle_fx2 - window.Math.PI / 2
                                      , g = 15
                                      , l = 11
                                      , A = SPRITE.STEP_SPACE
                                } else if (v.vehicle === ItemType.BABY_MAMMOTH && 1 == (p | P | w | _)) {
                                    u = SPRITE.BABY_MAMMOTH_STEP;
                                    f = v.vehicle_fx2 - window.Math.PI / 2,
                                    g = 21,
                                    l = 16,
                                    A = SPRITE.STEP_SPACE
                                } else if (v.vehicle === ItemType.CRAB_BOSS && 1 == (p | P | w | _)) {
                                    u = SPRITE.CRAB_STEP;
                                    f = v.vehicle_fx2 - window.Math.PI / 2;
                                    var b = 50 * window.Math.random();
                                    g = 10 + b,
                                    l = 0 + b,
                                    A = .9 * SPRITE.STEP_SPACE
                                } else
                                    f = v.angle,
                                    g = 15,
                                    l = 11,
                                    A = SPRITE.STEP_SPACE;
                                if (v.vehicle === ItemType.BABY_DRAGON || v.vehicle === ItemType.BABY_LAVA || v.vehicle === ItemType.NIMBUS || v.vehicle === ItemType.HAWK || v.vehicle === ItemType.PLANE || v.ghost)
                                    ;
                                else if (v.vehicle === ItemType.SLED)
                                    (0 === R || N.dist(c[R - 1], v) > SPRITE.TRAIL_SPACE) && c.push({
                                        x: v.x,
                                        y: v.y,
                                        "angle": v.vehicle_fx2,
                                        alpha: 1,
                                        id: SPRITE.SLED_WAVE
                                    });
                                else if (-1 != u && 0 === h && (0 === R || N.dist(c[R - 1], v) > A)) {
                                    if (v.id_foot++,
                                    window.Math.abs(v.x - v.r.x) > 1 && window.Math.abs(v.y - v.r.y) > 1)
                                        if (v.r.x > v.x && v.r.y < v.y || v.r.x < v.x && v.r.y > v.y)
                                            if (v.id_foot % 2)
                                                m = -l * K,
                                                S = -l * K;
                                            else
                                                S = l * K,
                                                m = l * K;
                                        else if (v.id_foot % 2)
                                            m = l * K,
                                            S = -l * K;
                                        else
                                            S = l * K,
                                            m = -l * K;
                                    else if (v.id_foot % 2)
                                        m = window.Math.sin(f) * g * K,
                                        S = window.Math.cos(f) * g * K;
                                    else
                                        m = -window.Math.sin(f) * g * K,
                                        S = -window.Math.cos(f) * g * K;
                                    c.push({
                                        x: v.x + m,
                                        y: v.y + S,
                                        "angle": f + window.Math.PI / 2,
                                        alpha: 1,
                                        id: u
                                    })
                                }
                                for (s = 0; s < R; s++)
                                    c[s].id === SPRITE.SLED_WAVE ? c[s].alpha = window.Math.max(0, c[s].alpha - 1.5 * zT) : c[s].alpha = window.Math.max(0, c[s].alpha - zT / 2.85);
                                c.length > 0 && 0 === c[0].alpha && c.splice(0, 1)
                            }
                        }
                    }
                    ,
                    this.update = function() {
                        this.move_units(this.units[ITEMS.PLAYERS]),
                        this.move_units(this.units[ITEMS.RABBIT]),
                        this.move_units(this.units[ITEMS.WOLF]),
                        this.move_units(this.units[ITEMS.CRAB]),
                        this.move_units(this.units[ITEMS.BOAR]),
                        this.move_units(this.units[ITEMS.BABY_MAMMOTH]),
                        this.move_units(this.units[ITEMS.CRAB_BOSS]),
                        this.move_units(this.units[ITEMS.BABY_DRAGON]),
                        this.move_units(this.units[ITEMS.BABY_LAVA]),
                        this.move_units(this.units[ITEMS.HAWK]),
                        this.move_units(this.units[ITEMS.SPIDER]),
                        this.move_units(this.units[ITEMS.FOX]),
                        this.move_units(this.units[ITEMS.PENGUIN]),
                        this.move_units(this.units[ITEMS.SPELL]),
                        this.move_units(this.units[ITEMS.FIREFLY]),
                        this.move_units(this.units[ITEMS.BEAR]),
                        this.move_units(this.units[ITEMS.MAMMOTH]),
                        this.move_units(this.units[ITEMS.VULTURE]),
                        this.move_units(this.units[ITEMS.SAND_WORM]),
                        this.move_units(this.units[ITEMS.DRAGON]),
                        this.move_units(this.units[ITEMS.FLAME]),
                        this.move_units(this.units[ITEMS.PIRANHA]),
                        this.move_units(this.units[ITEMS.KRAKEN]),
                        this.move_units(this.units[ITEMS.LAVA_DRAGON])
                    }
                    ,
                    this.breath = [],
                    this.breath[SPRITE.WAVE_ONE] = new v(!1,1,1.02,1,.008,.008),
                    this.breath[SPRITE.WAVE_TWO] = new v(!1,1,1.08,1,.006,.006),
                    this.lava = [],
                    this.lava[0] = new v(!1,.1,1,0,.6,.6),
                    this.lava[1] = new v(!1,.4,1,0,.6,.6),
                    this.lava[2] = new v(!1,.3,1,0,.6,.6),
                    this.lava[3] = new v(!1,.8,1,0,.6,.6),
                    this.lava[4] = new v(!1,.3,1,0,.6,.6),
                    this.lava[5] = new v(!1,.8,1,0,.6,.6),
                    this.lava[6] = new v(!1,.5,1,0,.6,.6),
                    this.lava[7] = new v(!1,.9,1,0,.6,.6),
                    this.lava[8] = new v(!1,.6,1,0,.6,.6),
                    this.lava[9] = new v(!1,.2,1,0,.6,.6),
                    this.lava[10] = new v(!1,.6,1,0,.6,.6),
                    this.lava[11] = new v(!1,.4,1,0,.6,.6),
                    this.lava[12] = new v(!1,.8,1,0,.6,.6),
                    this.lava[13] = new v(!1,.2,1,0,.6,.6),
                    this.lava[14] = new v(!1,.7,1,0,.6,.6)
                }
            }
            class OT {
                constructor(e, t, i, n, a) {
                    this.id = e,
                    this.speed = 8 * (e + 5),
                    this.life = L / 1366,
                    this.size = a,
                    this.x = t,
                    this.y = i,
                    this.c = window.Math.cos(n),
                    this.s = window.Math.sin(n),
                    this.alpha = 0
                }
            }
            class kT {
                constructor() {
                    if (this.login = qT.get("starve_login") ?? "",
                    this.password = qT.get("starve_password") ?? "",
                    this.login) {
                        fetch("/login", {
                            method: "POST",
                            headers: {
                                "Content-type": "application/json"
                            },
                            body: window.JSON.stringify({
                                login: this.login,
                                password: this.password
                            })
                        }).then((e => e.text())).then((e => {
                            if ("{" !== e[0])
                                return client.new_alert(e, "#a60f1b");
                            UI.login_restore_data(window.JSON.parse(e)),
                            client.new_alert("Log in account", "#27ba36")
                        }
                        ))
                    }
                    this.resurrection = {
                        pid: 1,
                        open: !1
                    },
                    this.ろヤたケ下四五火カス = {
                        pid: 1,
                        open: !1
                    },
                    this.windmill = {
                        amount_wheat: 0,
                        amount_flour: 0,
                        pid: 1,
                        open: !1
                    },
                    this.extractor = {
                        amount_wood: 0,
                        amount_mineral: 0,
                        type: 0,
                        mineral: 0,
                        pid: 1,
                        open: !1
                    },
                    this.bread_oven = {
                        amount_wood: 0,
                        amount_bread: 0,
                        amount_flour: 0,
                        pid: 1,
                        open: !1
                    },
                    this.furnace = {
                        amount: 0,
                        pid: 1,
                        open: !1
                    },
                    this.ghost = {
                        enabled: !1,
                        delay: -1,
                        label: !1,
                        now: -1,
                        draw: YI
                    },
                    this.よミ山にハねもんモロ = {
                        id: -1,
                        amount: 0,
                        pid: 1,
                        open: !1,
                        lock: !1,
                        locked: !1,
                        lockpick: !1,
                        padlock: !1
                    },
                    this.りゆわたにつシ千大先 = !0,
                    this.reconnect = {
                        enabled: !1,
                        rotate: 0
                    },
                    this.key = N.gup("key", window.location.href);
                    var e = N.gup("egg", window.location.href);
                    function t() {
                        this.seed = 1,
                        this.seed2 = 2,
                        this.seed3 = 3,
                        this.seedv = 1,
                        this.seedv2 = 2,
                        this.seedv3 = 3,
                        this.new_seed = function(e) {
                            this.seed = 2 + window.Math.floor(window.Math.random() * WORLD.SEED)
                        }
                        ,
                        this.new_seed2 = function(e) {
                            this.seed2 = 2 + window.Math.floor(window.Math.random() * WORLD.SEED)
                        }
                        ,
                        this.new_seed3 = function(e) {
                            this.seed3 = 2 + window.Math.floor(window.Math.random() * WORLD.SEED)
                        }
                        ,
                        this.new_seedv = function(e) {
                            this.seedv = 2 + window.Math.floor(window.Math.random() * WORLD.SEED)
                        }
                        ,
                        this.new_seedv2 = function(e) {
                            this.seedv2 = 2 + window.Math.floor(window.Math.random() * WORLD.SEED)
                        }
                        ,
                        this.new_seedv3 = function(e) {
                            this.seedv3 = 2 + window.Math.floor(window.Math.random() * WORLD.SEED)
                        }
                        ,
                        this.draw_foam_vert = function(e, t, i, n, I, T, o) {
                            for (var r = 1; r < o; ) {
                                var d = r * i % f
                                  , s = g[d];
                                if (s < .1)
                                    h += 50,
                                    r += 50;
                                else {
                                    var h = window.Math.floor(s * n + I);
                                    if (r > T && r < o) {
                                        var y = window.Math.random() > .5 ? -10 * zT : 10 * zT
                                          , R = h * t;
                                        if (this.bxv[d] = window.Math.max(-WORLD.FLOAM_X, window.Math.min(WORLD.FLOAM_X, this.bxv[d] + y)),
                                        this.byv[d] = window.Math.max(-WORLD.FLOAM_Y, window.Math.min(WORLD.FLOAM_Y, this.byv[d] + y)),
                                        R > 0) {
                                            if (C.beginPath(),
                                            C.arc(r + user.cam.x + this.byv[d], e + this.bxv[d] - .8 * WORLD.FLOAM_X, R, 0, a),
                                            world.transition) {
                                                var E = world.time ? 1 - world.shade.v : world.shade.v;
                                                C.fillStyle = sT(83, 156, 160, 236, 247, 249, E)
                                            } else
                                                C.fillStyle = SPRITE.FLOAM_COLOR[world.time];
                                            C.fill()
                                        }
                                    }
                                    r += 2 * h
                                }
                            }
                        }
                        ,
                        this.draw_foam = function(e, t, i, n, I, T, o) {
                            for (var r = 1; r < o; ) {
                                var d = r * i % f
                                  , s = g[d];
                                if (s < .1)
                                    h += 50,
                                    r += 50;
                                else {
                                    var h = window.Math.floor(s * n + I);
                                    if (r > T && r < o) {
                                        var y = window.Math.random() > .5 ? -10 * zT : 10 * zT
                                          , R = h * t;
                                        if (this.bx[d] = window.Math.max(-WORLD.FLOAM_X, window.Math.min(WORLD.FLOAM_X, this.bx[d] + y)),
                                        this.by[d] = window.Math.max(-WORLD.FLOAM_Y, window.Math.min(WORLD.FLOAM_Y, this.by[d] + y)),
                                        R > 0) {
                                            if (C.beginPath(),
                                            C.arc(e + this.bx[d] - .8 * WORLD.FLOAM_X, r + user.cam.y + this.by[d], R, 0, a),
                                            world.transition) {
                                                var E = world.time ? 1 - world.shade.v : world.shade.v;
                                                C.fillStyle = sT(83, 156, 160, 236, 247, 249, E)
                                            } else
                                                C.fillStyle = SPRITE.FLOAM_COLOR[world.time];
                                            C.fill()
                                        }
                                    }
                                    r += 2 * h
                                }
                            }
                        }
                        ,
                        this.draw_foams_bottom = function(e, t, i, n, a, I) {
                            var T;
                            (a -= 30,
                            I += 30,
                            0 === (T = -(i - WORLD.LW1SX - n - 2) / WORLD.W1EX) && this.new_seed3(),
                            C.globalAlpha = N.ease_in_out_quad(T),
                            this.draw_foam_vert(i, T, this.seed3, 18, 16, a, I),
                            C.globalAlpha = 1,
                            0 === (T = -(e - WORLD.LW2SX - n + 500) / WORLD.W2EX) && this.new_seed(),
                            C.globalAlpha = N.ease_in_out_quad(T),
                            this.draw_foam_vert(e, T, this.seed, 12, 10, a, I),
                            C.globalAlpha = 1,
                            -1 !== t) && ((T = -(t - WORLD.LW3SX - n + 698) / WORLD.W3EX) <= .01 && this.new_seed2(),
                            C.globalAlpha = N.ease_in_out_quad(T),
                            this.draw_foam_vert(t, T, this.seed2, 6, 6, a, I),
                            C.globalAlpha = 1)
                        }
                        ,
                        this.draw_foams_top = function(e, t, i, n, a, I) {
                            var T;
                            (a -= 30,
                            I += 30,
                            0 === (T = -(-i + WORLD.LW1SX + n + 2) / WORLD.W1EX) && this.new_seed3(),
                            C.globalAlpha = N.ease_in_out_quad(T),
                            this.draw_foam_vert(i, T, this.seed3, 18, 16, a, I),
                            C.globalAlpha = 1,
                            0 === (T = -(-e + WORLD.LW2SX + n) / WORLD.W2EX) && this.new_seed(),
                            C.globalAlpha = N.ease_in_out_quad(T),
                            this.draw_foam_vert(e, T, this.seed, 12, 10, a, I),
                            C.globalAlpha = 1,
                            -1 !== t) && ((T = -(-t + WORLD.LW3SX + n) / WORLD.W3EX) <= .01 && this.new_seed2(),
                            C.globalAlpha = N.ease_in_out_quad(T),
                            this.draw_foam_vert(t, T, this.seed2, 6, 6, a, I),
                            C.globalAlpha = 1)
                        }
                        ,
                        this.draw_foams_left = function(e, t, i, n, a, I) {
                            var T;
                            (a -= 30,
                            I += 30,
                            0 === (T = -(-i + WORLD.LW1SX + n + 2) / WORLD.W1EX) && this.new_seed3(),
                            C.globalAlpha = N.ease_in_out_quad(T),
                            this.draw_foam(i, T, this.seed3, 18, 16, a, I),
                            C.globalAlpha = 1,
                            0 === (T = -(-e + WORLD.LW2SX + n) / WORLD.W2EX) && this.new_seed(),
                            C.globalAlpha = N.ease_in_out_quad(T),
                            this.draw_foam(e, T, this.seed, 12, 10, a, I),
                            C.globalAlpha = 1,
                            -1 !== t) && ((T = -(-t + WORLD.LW3SX + n) / WORLD.W3EX) <= .01 && this.new_seed2(),
                            C.globalAlpha = N.ease_in_out_quad(T),
                            this.draw_foam(t, T, this.seed2, 6, 6, a, I),
                            C.globalAlpha = 1)
                        }
                        ,
                        this.draw_foams_right = function(e, t, i, n, a, I) {
                            var T;
                            (a -= 30,
                            I += 30,
                            0 === (T = -(i - WORLD.LW1SX - n - 2) / WORLD.W1EX) && this.new_seed3(),
                            C.globalAlpha = N.ease_in_out_quad(T),
                            this.draw_foam(i, T, this.seed3, 18, 16, a, I),
                            C.globalAlpha = 1,
                            0 === (T = -(e - WORLD.LW2SX - n + 500) / WORLD.W2EX) && this.new_seed(),
                            C.globalAlpha = N.ease_in_out_quad(T),
                            this.draw_foam(e, T, this.seed, 12, 10, a, I),
                            C.globalAlpha = 1,
                            -1 !== t) && ((T = -(t - WORLD.LW3SX - n + 698) / WORLD.W3EX) <= .01 && this.new_seed2(),
                            C.globalAlpha = N.ease_in_out_quad(T),
                            this.draw_foam(t, T, this.seed2, 6, 6, a, I),
                            C.globalAlpha = 1)
                        }
                        ,
                        this.w1 = {
                            r: new D(N.ease_out_cubic,0,10,WORLD.W1SX,WORLD.W1SX,WORLD.W1EX),
                            l: new D(N.ease_in_out_cubic,0,10,WORLD.W1EX,WORLD.W1EX,WORLD.W1SX)
                        },
                        this.w2 = {
                            r: new D(N.ease_out_quart,0,10,WORLD.W2SX,WORLD.W2SX,WORLD.W2EX),
                            l: new D(N.ease_in_out_quad,0,10,WORLD.W2EX,WORLD.W2EX,WORLD.W2SX)
                        },
                        this.w3 = {
                            r: new D(N.ease_out_quint,0,10,WORLD.W3SX,WORLD.W3SX,WORLD.W3EX),
                            l: new D(N.ease_in_out_quad,0,10,WORLD.W3EX,WORLD.W3EX,WORLD.W3SX)
                        },
                        this.t_ = function(e) {
                            return e.r.x === e.r.ex ? e.l.x === e.l.ex ? e.r : e.l : e.r
                        }
                        ,
                        this.t = function(e) {
                            var t;
                            return e.r.x === e.r.ex ? e.l.x === e.l.ex ? (e.r.restart(),
                            e.l.restart(),
                            t = e.r) : t = e.l : t = e.r,
                            t.ease(t.ex),
                            t
                        }
                        ,
                        this.bx = [],
                        this.by = [],
                        this.bxv = [],
                        this.byv = [],
                        this.init = function() {
                            for (var e = 0; e < f; e++)
                                this.bx[e] = window.Math.floor(g[e] * WORLD.FLOAM_X),
                                this.by[e] = window.Math.floor(g[e] * WORLD.FLOAM_Y),
                                this.bxv[e] = window.Math.floor(g[e] * WORLD.FLOAM_X),
                                this.byv[e] = window.Math.floor(g[e] * WORLD.FLOAM_Y);
                            this.w1.r.x = this.w1.r.ex,
                            this.w2.r.ed = 3.5,
                            this.w3.r.ed = 2
                        }
                        ,
                        this.init()
                    }
                    e && (UI.skin = parseInt(e)),
                    this.beta = 0 === window.location.href.indexOf("http://starver.io/beta") ? 1 : 0,
                    this.key && this.beta ? qT.set("starve_beta", this.key) : this.beta && (this.key = qT.get("starve_beta")),
                    this.token = qT.get("starve_token") ? qT.get("starve_token") : N.generate_token(CLIENT.TOKEN_LEN),
                    this.token_id = qT.get("starve_token_id") ? qT.get("starve_token_id") : N.generate_token(CLIENT.TOKEN_LEN),
                    this.id = 0,
                    this.day = 0,
                    this.die = {
                        howdie: "",
                        score: 0,
                        bank: 0,
                        kill: 0
                    },
                    this.account = {
                        connected: 0,
                        last: (new window.Date).getTime()
                    },
                    this.team = [],
                    this.in_team = function(e) {
                        for (var t = 0; t < this.team.length; t++)
                            if (this.team[t] == e)
                                return !0;
                        return !1
                    }
                    ,
                    this.shop = {
                        delay: 0,
                        time: 0,
                        value: 0,
                        open: !1,
                        draw: function() {
                            if (this.open) {
                                var e = (new window.Date).getTime();
                                this.time = window.Math.floor((e - this.delay) / 1e3),
                                this.time < 60 ? game.shop.button.draw(C) : (window.document.getElementById("shop_starterkit").style.display = "none",
                                this.open = !1)
                            }
                        }
                    },
                    this.totem = {
                        id: -1,
                        pid: -1,
                        lock: 0,
                        timeout: new v(!1,0,1,0,1 / 30,1),
                        wait: !1
                    },
                    this.helmet = {
                        timeout: new v(!1,0,1,0,.2,1),
                        wait: !1
                    },
                    this.す人八ウメユそしテく = {
                        timeout: new v(!1,0,1,0,1,1),
                        wait: !1
                    },
                    this.weapon = {
                        timeout: new v(!1,0,1,0,.1,1),
                        wait: !1
                    },
                    this.cam = new O(N.ease_out_quad,0,.4,0,0,M,Y,M,Y),
                    this.cam.delay = 0,
                    this.cam.forcedDelay = 0,
                    this.cam.update = function() {
                        if(settings.Spectator.enabled) return
                        if (this.forcedDelay > 0)
                            this.forcedDelay -= zT;
                        else {
                            var e = world.fast_units[user.id];
                            if (e) {
                                this.delay = 0;
                                var t = window.Math.max(window.Math.min(M - e.x, -2), 2 - world.w + L)
                                  , i = window.Math.max(window.Math.min(Y - e.y, -2), 2 - world.h + B);
                                this.ease({
                                    x: t,
                                    y: i
                                })
                            } else
                                this.delay += zT,
                                this.delay > 3 && (this.delay = 0,
                                user.reconnect.enabled || client.get_focus())
                        }
                    }
                    ,
                    this.cam.change = function(e, t) {
                        this.x = -window.Math.min(window.Math.max(2 * -world.dw, e - world.dw - this.rw / 2), world.w - this.rw),
                        this.y = -window.Math.min(window.Math.max(2 * -world.dh, t - (world.dh + this.rh) / 2), world.h - this.rh + world.dh),
                        this.ex = this.x,
                        this.ey = this.y
                    }
                    ,
                    this.control = {
                        "angle": 0,
                        timeout: 0,
                        previous: 0,
                        mouse: 0,
                        attack: 0,
                        update: function() {
                            var e = world.fast_units[user.id];
                            if (e)
                                var t = {
                                    x: user.cam.x + e.x,
                                    y: user.cam.y + e.y
                                };
                            else
                                t = H;
                            var i = settings.Aimbot.a || N.get_std_angle(UT.pos, t)
                              , n = !1;
                            if (UT.state || !e || e.action & STATE.ATTACK || (this.attack = 1,
                            n = !0,
                            client.土モかヘタ百テオ三力(i)),
                            e && (e.angle = i,
                            e.nangle = i),
                            n || (this.timeout += zT,
                            this.timeout > CLIENT.ROTATE && (this.timeout = 0,
                            window.Math.abs(this.angle - i) > .005 && (client.ウヒある力ナ千ちカる(i),
                            this.angle = i))),
                            !user.chat.open && !user.terminal.open) {
                                var a = 0;
                                VT.is_left() && (settings.Spectator.enabled?user.cam.x += 50:a |= 1),
                                VT.is_right() && (settings.Spectator.enabled?user.cam.x += -50:a |= 2),
                                VT.is_bottom() && (settings.Spectator.enabled?user.cam.y += -50:a |= 4),
                                VT.is_top() && (settings.Spectator.enabled?user.cam.y += 50:a |= 8),
                                this.previous != a && client.send_move(a),
                                this.previous = a
                            }
                        }
                    },
                    this.gauges = {
                        c: 1,
                        l: 1,
                        h: 1,
                        t: 1,
                        o: 1,
                        wa: 1,
                        warn_cold: new v(!0,0,1,0,3,3),
                        warn_life: new v(!0,0,1,0,2,2),
                        warn_hunger: new v(!0,0,1,0,3,3),
                        warn_thirst: new v(!0,0,1,0,3,3),
                        warn_oxygen: new v(!0,0,1,0,3,3),
                        warn_warm: new v(!0,0,1,0,3,3),
                        cold: new D(N.ease_out_quad,0,1,0,0,1),
                        life: new D(N.ease_out_quad,0,1,0,0,1),
                        hunger: new D(N.ease_out_quad,0,1,0,0,1),
                        thirst: new D(N.ease_out_quad,0,1,0,0,1),
                        oxygen: new D(N.ease_out_quad,0,1,0,0,1),
                        warm: new D(N.ease_out_quad,0,1,0,0,1),
                        update: function() {
                            this.warn_cold.update(),
                            this.warn_life.update(),
                            this.warn_hunger.update(),
                            this.warn_thirst.update(),
                            this.warn_oxygen.update(),
                            this.warn_warm.update(),
                            this.cold.ease(this.c),
                            this.life.ease(this.l),
                            this.hunger.ease(this.h),
                            this.thirst.ease(this.t),
                            this.oxygen.ease(this.o),
                            this.warm.ease(this.wa)
                        }
                    },
                    this.bigmap = !1,
                    this.zombie = !1,
                    this.vampire = !1,
                    this.inv = {
                        max: WORLD.WITHOUT_BAG,
                        bonus: 0,
                        bag: 0,
                        n: [],
                        can_select: [],
                        update_bag_size: function(e, t) {
                            1 === e && (this.bag = WORLD.BAG_SIZE),
                            this.bonus += t,
                            this.max = WORLD.WITHOUT_BAG + this.bonus + this.bag
                        },
                        drag: {
                            item: -1,
                            img: null,
                            _start: 0,
                            _move: 0,
                            _x: -1,
                            _y: -1,
                            move: function(e) {
                                !this._start || e.x === this._x && e.y === this._y || (this._move = 1)
                            },
                            start: function(e, t) {
                                this._x = t.x,
                                this._y = t.y,
                                this.item = e,
                                this.img = user.inv.can_select[e].info.img[2],
                                this._start = 1
                            },
                            stop: function() {
                                this._start = 0,
                                this._move = 0,
                                this._x = -1,
                                this._y = -1
                            },
                            release: function() {
                                var e = -1
                                  , t = user.inv.can_select
                                  , i = 0;
                                if (this._start && this._move) {
                                    for (var n = 0; n < t.length; n++)
                                        if (1 === t[n].info.state) {
                                            e = n;
                                            break
                                        }
                                    if (-1 !== e && e !== this.item && t[this.item]) {
                                        i = 1;
                                        var a = t[e];
                                        t[e] = t[this.item],
                                        t[this.item] = a,
                                        game.update_inv_buttons()
                                    }
                                }
                                return this.stop(),
                                i
                            },
                            draw: function(e, t) {
                                this._start && this._move && drawCtxImage(C, this.img, window.Math.floor(e - this.img.width / 2), window.Math.floor(t - this.img.height / 2))
                            }
                        },
                        free_place: function(e) {
                            for (let t = 0; t < e.length; t++)
                                if (this.n[e[t][0]] == e[t][1])
                                    return !0;
                            return !1
                        },
                        find_item: function(e) {
                            for (var t = 0; t < this.can_select.length; t++)
                                if (this.can_select[t].id == e)
                                    return t;
                            return -1
                        },
                        delete_item: function(e, t) {
                            this.n[e] = 0,
                            this.can_select.splice(t, 1),
                            game.update_inv_buttons()
                        },
                        decrease: function(e, t, i) {
                            this.n[e] = window.Math.max(0, this.n[e] - t),
                            !this.n[e] && i >= 0 && this.delete_item(e, i)
                        }
                    },
                    this.auto_feed = {
                        enabled: !1,
                        translate: {
                            x: 0,
                            y: 0
                        },
                        delay: 0,
                        invert: function() {
                            user.auto_feed.enabled = !user.auto_feed.enabled,
                            user.auto_feed.enabled ? game.options.feed_agree.display = "inline-block" : game.options.feed_agree.display = "none"
                        },
                        update: function() {
                            !this.enabled || user.craft.id >= 0 || game.safe_delete.open || (this.delay += zT,
                            this.delay > 2 && (this.delay = 0,
                            user.gauges.h < .35 ? user.inv.n[ItemType.BERRY] ? client.うワれんク大アた子せ(ItemType.BERRY, user.inv.find_item(ItemType.BERRY)) : user.inv.n[ItemType.GARLIC] ? client.うワれんク大アた子せ(ItemType.GARLIC, user.inv.find_item(ItemType.GARLIC)) : user.inv.n[ItemType.CRAB_STICK] ? client.うワれんク大アた子せ(ItemType.CRAB_STICK, user.inv.find_item(ItemType.CRAB_STICK)) : user.inv.n[ItemType.PUMPKIN] ? client.うワれんク大アた子せ(ItemType.PUMPKIN, user.inv.find_item(ItemType.PUMPKIN)) : user.inv.n[ItemType.TOMATO] ? client.うワれんク大アた子せ(ItemType.TOMATO, user.inv.find_item(ItemType.TOMATO)) : user.inv.n[ItemType.CARROT] ? client.うワれんク大アた子せ(ItemType.CARROT, user.inv.find_item(ItemType.CARROT)) : user.inv.n[ItemType.WATERMELON] ? client.うワれんク大アた子せ(ItemType.WATERMELON, user.inv.find_item(ItemType.WATERMELON)) : user.inv.n[ItemType.BREAD] ? client.うワれんク大アた子せ(ItemType.BREAD, user.inv.find_item(ItemType.BREAD)) : user.inv.n[ItemType.COOKED_MEAT] ? client.うワれんク大アた子せ(ItemType.COOKED_MEAT, user.inv.find_item(ItemType.COOKED_MEAT)) : user.inv.n[ItemType.FISH_COOKED] ? client.うワれんク大アた子せ(ItemType.FISH_COOKED, user.inv.find_item(ItemType.FISH_COOKED)) : user.inv.n[ItemType.COOKIE] ? client.うワれんク大アた子せ(ItemType.COOKIE, user.inv.find_item(ItemType.COOKIE)) : user.inv.n[ItemType.SANDWICH] ? client.うワれんク大アた子せ(ItemType.SANDWICH, user.inv.find_item(ItemType.SANDWICH)) : user.inv.n[ItemType.CAKE] ? client.うワれんク大アた子せ(ItemType.CAKE, user.inv.find_item(ItemType.CAKE)) : user.inv.n[ItemType.CRAB_LOOT] && client.うワれんク大アた子せ(ItemType.CRAB_LOOT, user.inv.find_item(ItemType.CRAB_LOOT)) : user.gauges.t < .35 && user.inv.n[ItemType.BOTTLE_FULL] && client.うワれんク大アた子せ(ItemType.BOTTLE_FULL, user.inv.find_item(ItemType.BOTTLE_FULL))))
                        }
                    },
                    game.options.feed_agree.display = "none",
                    this.craft = {
                        id: -1,
                        timeout: new v(!1,0,1,0,1,1),
                        crafting: !1,
                        "preview": -1,
                        "つせウ小り六ぬオキニ": 0,
                        label: [],
                        can_craft: [],
                        "力ふ六ヌセはろ力ルメ": !1,
                        fire: !1,
                        "ムラけレ水ヒ上くすタ": !1,
                        "ろヤたケ下四五火カス": !1,
                        change_mode: function() {
                            this.つせウ小り六ぬオキニ = 0 === this.つせウ小り六ぬオキニ ? 1 : 0
                        },
                        set_workbench: function(e) {
                            this.力ふ六ヌセはろ力ルメ = e;
                            var t = game.safe_delete;
                            t.open && t.del(t.button),
                            this.update()
                        },
                        do_recycle: function(e) {
                            var t = p[e];
                            if (t) {
                                this.id = e,
                                this.crafting = !0;
                                var i = world.fast_units[user.id];
                                this.timeout.max_speed = 1 / t.time * 8,
                                i && i.right == ItemType.BOOK && (this.timeout.max_speed = 1 / t.time * 12)
                            }
                        },
                        do_craft: function(e) {
                            var t = p[e];
                            if (t) {
                                this.id = e,
                                this.crafting = !0;
                                var i = world.fast_units[user.id];
                                i && i.right == ItemType.BOOK ? this.timeout.max_speed = 1 / t.time * 3 : this.timeout.max_speed = 1 / t.time;
                                for (var n = 0; n < t.r.length; n++) {
                                    var a = t.r[n];
                                    user.inv.decrease(a[0], a[1], user.inv.find_item(a[0]))
                                }
                                game.update_inv_buttons()
                            }
                        },
                        update: function() {
                            this.can_craft = [],
                            1 === game.info_box.craft && (game.info_box.display = 0);
                            for (let a = 0; a < p.length; a++) {
                                var e = p[a]
                                  , t = !0;
                                if (e) {
                                    for (var i = 0; i < e.r.length; i++) {
                                        if (user.inv.max >= WORLD.WITH_BAG && a === ItemType.BAG) {
                                            t = !1;
                                            break
                                        }
                                        if (e.w > this.力ふ六ヌセはろ力ルメ || e.f > this.fire || e.o > this.ムラけレ水ヒ上くすタ || e.e > this.ろヤたケ下四五火カス) {
                                            t = !1;
                                            break
                                        }
                                        var n = e.r[i];
                                        if (!user.inv.n[n[0]] || user.inv.n[n[0]] < n[1]) {
                                            t = !1;
                                            break
                                        }
                                    }
                                    t && this.can_craft.push(game.craft_buttons[a])
                                }
                            }
                            game.update_craft_buttons(),
                            game.update_chest_buttons(),
                            game.update_furnace_button(),
                            game.update_windmill_button(),
                            game.update_extractor_button(),
                            game.update_bread_oven_button()
                        },
                        restart: function() {
                            this.id = -1,
                            this.crafting = !1,
                            this.timeout.v = 0,
                            this.timeout.o = !1,
                            this.update()
                        }
                    },
                    this.木サカはつ小ロク八さ = {
                        message: void 0,
                        draw: KI
                    },
                    this.alert = {
                        timeout: new v(!1,1,1,0,4,.3),
                        text: "",
                        label: null,
                        draw: GI,
                        list: []
                    },
                    this.ldb = {
                        can: window.document.createElement("canvas"),
                        ids: [],
                        update: !0,
                        translate: {
                            x: 0,
                            y: 0
                        },
                        sort: function() {
                            for (var e = [], t = world.チとモやせタ月ヒけニ, i = 0; i < t.length; i++)
                                t[i].りゆわたにつシ千大先 && e.push({
                                    id: i,
                                    s: t[i].score
                                });
                            e.sort((function(e, t) {
                                return t.s - e.s
                            }
                            )),
                            this.ids = [];
                            for (i = 0; i < e.length && i < 10; i++)
                                this.ids.push(e[i].id);
                            this.update = !0
                        },
                        init: function(e) {
                            for (var t = 0; t < world.チとモやせタ月ヒけニ.length; t++)
                                world.チとモやせタ月ヒけニ[t].score = 0;
                            world.チとモやせタ月ヒけニ[user.id].score = N.restore_number(e[1]),
                            this.ids = [];
                            for (t = 2; t < e.length; t += 2)
                                this.ids.push(e[t]),
                                world.チとモやせタ月ヒけニ[e[t]].score = N.restore_number(e[t + 1]);
                            this.update = !0
                        }
                    },
                    this.ldb.can.width = 180 * K,
                    this.ldb.can.height = 300 * K,
                    this.ldb.ctx = this.ldb.can.getContext("2d"),
                    this.terminal = {
                        open: !1,
                        input: window.document.getElementById("commandInput"),
                        contentBox: window.document.getElementById("commandsBox"),
                        style: window.document.getElementById("commandMainBox").style,
                        lastCommands: [],
                        commandIndex: 0,
                        _print: function(e) {
                            this.contentBox.innerHTML += e
                        },
                        update: function() {
                            this.style.left = window.Math.floor(L / 2 - 300) + "px",
                            this.style.top = window.Math.floor(B / 2 - 250) + "px"
                        },
                        _clean: function() {
                            this.contentBox.innerHTML = ""
                        },
                        quit: function() {
                            this.open = !1,
                            this.style.display = "none"
                        },
                        create_array: function(e) {
                            for (var t = '<table class="tableList">', i = 0; i < e.length; i++)
                                i % 3 == 0 && (t += "<tr>"),
                                t += '<td class="tableList">' + e[i] + "</td>",
                                (i + 1) % 3 != 0 && i + 1 !== e.length || (t += "</tr>");
                            return t += "</table>"
                        },
                        write_command: function(e, t, i, n) {
                            var a = "<div class=commandWritten>" + (e = e || "");
                            a += (t = t || "") ? "<div class=commandValidated>" : "<div class=commandUnknown>",
                            a += (i = i || "") + "</div>" + (n = n || "") + "</div>",
                            this._print(a),
                            this.scroll_down()
                        },
                        scroll_down: function() {
                            this.contentBox.scrollTop = this.contentBox.scrollHeight
                        },
                        commands: function(e) {
                            switch (e) {
                            case "clean":
                                return this._clean(),
                                !0;
                            case "list":
                                let e = "";
                                for (var t = world.チとモやせタ月ヒけニ, i = 0; i < t.length; i++) {
                                    var n = t[i];
                                    n.りゆわたにつシ千大先 && (e += n.nickname.replaceAll("<", "< ") + ' <span style="color:green">#' + i + "</span>\n")
                                }
                                return this.write_command("list", 1, "List all connected チとモやせタ月ヒけニ", e),
                                !0;
                            case "weapon-list":
                                return this.write_command("Weapons", 1, "List all weapons in the game", this.create_array(["sword_wood", "sword", "sword_gold", "sword_diamond", "sword_amethyst", "sword_reidite", "dragon_sword", "lava_sword", "cursed_sword", "sword_pirate", "wood_spear", "spear", "gold_spear", "diamond_spear", "amethyst_spear", "reidite_spear", "dragon_spear", "lava_spear", "crab_spear", "wood_bow", "wood_arrow"])),
                                !0;
                            case "tool-list":
                                return this.write_command("Tools", 1, "List all tools in the game", this.create_array(["pick_wood", "pick", "pick_gold", "pick_diamond", "pick_amethyst", "pick_reidite", "hammer", "hammer_gold", "hammer_diamond", "hammer_amethyst", "hammer_reidite", "super_hammer", "shovel", "shovel_gold", "shovel_diamond", "shovel_amethyst", "shovel_reidite", "pitchfork", "pitchfork2", "spanner", "book"])),
                                !0;
                            case "survival-list":
                                return this.write_command("Survival Items", 1, "List all survival items in the game", this.create_array(["fire", "力ふ六ヌセはろ力ルメ", "bandage", "big_fire", "furnace", "paper", "blue_cord", "lock", "lockpick", "totem", "resurrection", "bridge", "bottle_full", "bottle_empty", "watering_can", "watering_can_full", "windmill", "plot", "bread_oven", "よミ山にハねもんモロ", "bucket_empty", "bucket_full", "ろヤたケ下四五火カス", "roof", "bed", "boat", "sled", "boar", "saddle", "emerald_machine", "extractor_stone", "extractor_gold", "extractor_diamond", "extractor_amethyst", "extractor_reidite_button"])),
                                !0;
                            case "resource-list":
                                return this.write_command("Resources", 1, "List all resources in the game", this.create_array(["wood", "stone", "gold", "diamond", "amethyst", "reidite", "fur", "fur_wolf", "fur_winter", "cord", "scales", "penguin_feather", "flame", "sand", "ground", "ice", "dragon_heart", "lava_heart", "kraken_skin", "special_fur", "special_fur_2", "gemme_green", "gemme_orange", "gemme_blue", "dragon_cube", "dragon_orb", "lava_cube", "lava_orb", "fur_boar", "pitchfork_part", "pilot_glasses", "fur_mammoth"])),
                                !0;
                            case "food-list":
                                return this.write_command("Food", 1, "List all food in the game", this.create_array(["plant", "seed", "meat", "cooked_meat", "flour", "wheat_seed", "cookies", "wild_wheat", "cake", "fish", "cooked_fish", "bread", "sandwich", "pumpkin_seed", "pumpkin", "garlic_seed", "garlic", "thornbush_seed", "thornbush", "crab_stick", "claw", "carrot_seed", "carrot", "tomato_seed", "tomato", "watermelon_seed", "watermelon", "aloe_vera_seed", "aloe_vera", "cactus"])),
                                !0;
                            case "hat-list":
                                return this.write_command("Hats", 1, "List all hats in the game", this.create_array(["earmuffs", "coat", "scarf", "fur_hat", "warm_protection", "warm_protection2", "warm_protection3", "explorer_hat", "pirate_hat", "wood_helmet", "stone_helmet", "gold_helmet", "diamond_helmet", "amethyst_helmet", "reidite_helmet", "dragon_helmet", "lava_helmet", "crab_helmet", "diving_mask", "super_diving_suit", "crown_green", "crown_orange", "crown_blue", "hood", "peasant", "winter_hood", "winter_peasant", "bag", "turban1", "turban2", "pilot_hat"])),
                                !0;
                            case "building-list":
                                return this.write_command("Buildings", 1, "List all buildings in the game", this.create_array(["wall", "stone_wall", "gold_wall", "diamond_wall", "amethyst_wall", "reidite_wall", "spike", "stone_spike", "gold_spike", "diamond_spike", "amethyst_spike", "reidite_spike", "wood_door", "stone_door", "gold_door", "diamond_door", "amethyst_door", "reidite_door", "wood_spike_door", "stone_spike_door", "gold_spike_door", "diamond_spike_door", "amethyst_spike_door", "reidite_spike_door"])),
                                !0;
                            case "biome-list":
                                return this.write_command("Biomes list", 1, "List all available biomes in the game", this.create_array(["forest", "winter", "lava", "sea", "beach", "island", "dragon"])),
                                !0;
                            case "help-config":
                                return this.write_command("Help Configuration", 1, "Learn how to す人八ウメユそしテく your customized map", '<div class="specialCommandBox">To get the current map configuration, and modify it, copy the result of <span class="commandSynthax">get-config</span> in a text file and change every parameter you want.</div>To modify the settings, change a number to another with <span class="commandSynthax">set-config</span></br>To modify the map, modify "important" section (at the end)<div class="infoCommand">The minimum size of the map is 50x50.</div>"子生左上うた田五チム" is used to change the biomes and is written like this :<div class="commandSynthax" style="font-size:17px;">"子生左上うた田五チム":[["biome",width,height],...,["biome",width,height]]</div>Biomes are <span class="commandSynthax">"forest"</span>, <span class="commandSynthax">"lava"</span>, <span class="commandSynthax">"winter"</span>, and <span class="commandSynthax">"dragon"</span>.'),
                                !0;
                            case "pos":
                                let a = world.fast_units[user.id];
                                return this.write_command("pos", 1, "Your position is " + window.Math.floor(a.x / 100) + ":" + window.Math.floor(a.y / 100)),
                                !0;
                            case "help-admin":
                                return this.write_command("help-admin", 1, "List all available commands for admin only", this.create_array(["restart", "m | message", "mt | message-to", "w | 木サカはつ小ロク八さ", "name", "password", "k | kick", "b | ban", "tp | teleport", "tpa | teleport-all", "tpt | teleport-to", "pos", "heal", "cancel-craft", "da | disable-attack", "pvp | disable-pvp", "dgs | disable-gather-score", "drs | disable-resource", "dms | disable-mob-safety", "ds | disable-shop", "dn | disable-nickname", "dch | disable-chat", "dq | disable-quest", "dd | disable-drop", "ddc | disable-drop-crate", "db | disable-crate", "dwg | disable-warm-gauge", "dk | disable-kit", "dc | disable-craft", "dr | disable-recycling", "disable-clock", "disable-recipes-book", "disable-market", "sb | spawn-building", "fsb | force-spawn-building", "sch | spawn-よミ山にハねもんモロ", "spawn-area", "spawn-area-team", "cl | clean-position", "cba | clean-building-all", "ci | clean-inventory", "cia | clean-inventory-all", "harvest", "gs | give-score", "gsa | give-score-all", "rs | reset-score", "rk | reset-kill", "gm | godmode", "instant-craft", "ka | kill-animals", "g | give", "ga | give-to-all", "ri | remove-item", "ria | remove-item-all", "spawn-location", "tm | team-つせウ小り六ぬオキニ", "default-nickname", "mm | murder-つせウ小り六ぬオキニ", "br | battle-royale", "help-config", "gc | get-config", "sc | set-config", "reset-config", "save-config", "reset-event-time"])),
                                !0;
                            case "help":
                                return this.write_command("help", 1, "List all available commands", this.create_array(["clean", "list", "pos", "help-admin", "help", "weapon-list", "tool-list", "survival-list", "resource-list", "food-list", "hat-list", "building-list", "biome-list"])),
                                !0
                            }
                            return !1
                        },
                        _open: function() {
                            this.open || (this.open = !0,
                            this.style.display = "inline-block",
                            this.input.focus(),
                            this.commandIndex = 0)
                        },
                        _send: function() {
                            var e = this.input.value;
                            const t = this.lastCommands[this.lastCommands.length - 1];
                            e && e.length > 0 && (this.lastCommands.length < 100 && e !== t ? this.lastCommands.push(e) : e !== t && (this.lastCommands.push(e),
                            this.lastCommands.splice(0, 1)),
                            this.commands(e) || client.十をホソて左シ六らん(this.input.value),
                            this.input.value = "")
                        }
                    },
                    this.chat = {
                        open: !1,
                        input: window.document.getElementById("chat_input"),
                        style: window.document.getElementById("chat_block").style,
                        update: function() {
                            this.style.left = window.Math.floor(L / 2 - 150) + "px",
                            this.style.top = window.Math.floor(B / 2 + 80) + "px"
                        },
                        quit: function() {
                            this.open = !1,
                            this.style.display = "none",
                            this.input.value = ""
                        },
                        prefix: "!",
                        cmd: {
                            hud: function(e) {
                                if ("off" === e) {
                                    var t = 'Enter "!hud" without the quotes to restore the HUD';
                                    user.alert.text ? user.alert.list.push(t) : user.alert.text = t,
                                    game.show_ui = 0
                                } else
                                    game.show_ui = 1
                            }
                        },
                        commands: function(e) {
                            if (e.startsWith(this.prefix)) {
                                for (var t = "", i = "", n = 1; n < e.length && " " != e.charAt(n); n++)
                                    t += e.charAt(n);
                                for (n++; n < e.length; n++)
                                    i += e.charAt(n);
                                var a = this.cmd[t];
                                return a && a(i),
                                !0
                            }
                            return !1
                        },
                        run: function() {
                            if (this.open) {
                                this.open = !1,
                                this.style.display = "none";
                                var e = this.input.value;
                                e && (this.commands(e) || client.ほ十ウ川六ひふろセほ(this.input.value),
                                this.input.value = "")
                            } else
                                this.open = !0,
                                this.style.display = "inline-block",
                                this.input.focus()
                        }
                    },
                    this.ash = {
                        flakes: [],
                        update: function(e) {
                            e.y += 80 * zT * e.s,
                            e.x += 80 * zT * e.c,
                            e.life -= zT / 6,
                            e.life > .2 ? e.alpha = window.Math.min(e.alpha + 3 * zT, 1) : e.alpha = window.Math.max(e.alpha - 1 * zT, 0)
                        },
                        add: function() {
                            var e = window.Math.floor(window.Math.min(SPRITE.ASHES_NUMBER * (L / 1366), SPRITE.ASHES_NUMBER + 10) * window.Math.max(window.Math.min(world.dist_lava + 1e3, 3e3) / 3e3, 0));
                            if (this.flakes.length < e) {
                                var t = window.Math.floor(window.Math.random() * SPRITE.ASHES_SIZES)
                                  , i = -user.cam.x + window.Math.floor(window.Math.random() * L)
                                  , n = -user.cam.y + window.Math.floor(window.Math.random() * B)
                                  , a = window.Math.random(window.Math.PI);
                                this.flakes.push(new OT(t,i,n,a))
                            }
                        }
                    },
                    this.blizzard = 0,
                    this.bandage = 0,
                    this.captcha = "",
                    this.desert = {
                        flakes: [],
                        tempest: 0,
                        tempest_speed: 0,
                        update: function(e) {
                            e.y += zT * (200 + 800 * this.tempest_speed) * e.s,
                            e.x += zT * (200 + 800 * this.tempest_speed) * e.c,
                            e.life -= zT / 6,
                            e.life > .2 ? e.alpha = window.Math.min(e.alpha + 3 * zT, 1) : e.alpha = window.Math.max(e.alpha - 1 * zT, 0)
                        },
                        add: function(e) {
                            var t = window.Math.floor(window.Math.min((this.tempest_speed + .1) * SPRITE.SAND_NUMBER * (L / 1366), (this.tempest_speed + .1) * SPRITE.SAND_NUMBER + 10) * window.Math.max(window.Math.min(world.dist_desert + 1e3, 3e3) / 3e3, 0));
                            if (this.flakes.length < t) {
                                var i = window.Math.floor(window.Math.random() * SPRITE.ASHES_SIZES)
                                  , n = -user.cam.x + window.Math.floor(window.Math.random() * L)
                                  , a = -user.cam.y + window.Math.floor(window.Math.random() * B)
                                  , I = window.Math.random(window.Math.PI);
                                0 !== user.desert.tempest && (n -= L / 2),
                                this.flakes.push(new OT(i,n,a,I))
                            }
                        }
                    },
                    this.winter = {
                        flakes: [],
                        tempest: 0,
                        tempest_speed: 0,
                        update: function(e) {
                            VT.is_bottom() ? e.y += zT * e.speed * (5.5 + 10 * this.tempest_speed) : e.y += zT * e.speed * (5 + 10 * this.tempest_speed),
                            e.life -= zT / 2,
                            VT.is_left() ? e.x += zT * (100 + 400 * this.tempest_speed) : VT.is_right() ? e.x -= zT * (130 - 400 * this.tempest_speed) : e.x -= zT * (30 - 400 * this.tempest_speed),
                            e.life > .2 ? e.alpha = window.Math.min(e.alpha + 3 * zT, 1) : e.alpha = window.Math.max(e.alpha - 5 * zT, 0)
                        },
                        add: function() {
                            var e = window.Math.floor(window.Math.min((1.5 * this.tempest_speed + .5) * SPRITE.FLAKES_NUMBER * (L / 1366), (1.5 * this.tempest_speed + .5) * SPRITE.FLAKES_NUMBER + 10) * window.Math.max(window.Math.min(world.dist_winter + 1e3, 3e3) / 3e3, 0));
                            if (this.flakes.length < e) {
                                var t = window.Math.floor(window.Math.random() * SPRITE.FLAKES_SIZES)
                                  , i = -user.cam.x + window.Math.floor(window.Math.random() * L)
                                  , n = -user.cam.y + window.Math.floor(400 * window.Math.random() * K - 200 * K);
                                this.flakes.push(new OT(t,i,n,0))
                            }
                        }
                    },
                    this.beach = [];
                    for (var i = 0; i < 4; i++)
                        this.beach.push(new t)
                }
            }
            class CT {
                constructor(e, i) {
                    this.can = e,
                    this.ctx = i,
                    window.navigator.userAgent.indexOf("Edge") > -1 ? (this.cursor0 = "default",
                    this.cursor1 = "pointer") : (this.cursor0 = "url('img/cursor0.png'), default",
                    this.cursor1 = "url('img/cursor1.png'), pointer");
                    var n = this;
                    function a(e, t, i, a, I) {
                        for (var T = this, o = t + 9, r = 0, d = a, s = t; s < o; s++)
                            n.buttons[s].info.callback = y,
                            n.buttons[s].info.cosmeticType = e;
                        function h() {
                            var t = e[d];
                            UI.cosmetic_name = _T(t.name, "'Baloo Paaji', sans-serif", "#EFE4B4", 30, 350, void 0, 10, 8),
                            void 0 !== t.level ? UI.cosmetic_author = _T("Level " + t.level, "'Baloo Paaji', sans-serif", "#EFE4B4", 30, 250, void 0, 10, 8) : UI.cosmetic_author = _T("by " + t.author, "'Baloo Paaji', sans-serif", "#EFE4B4", 30, 250, void 0, 10, 8)
                        }
                        function y() {
                            d !== this.cosmeticId && -1 !== this.cosmeticId && (this.unlocked > 0 ? te(t === Le ? b : v, ye, "none") : te(t === Le ? b : v, Re, "inline-block"),
                            d = this.cosmeticId,
                            i(this.cosmeticId),
                            h())
                        }
                        this.initSelector = function() {
                            for (var i = t, a = 3 * r; i < o && a < e.length; i++,
                            a++)
                                if (e[a].rarity !== RARITY.SPECIAL || 0 !== I[a]) {
                                    n.buttons[i].info.cosmeticId = a;
                                    for (var T = 0; T < 3; T++)
                                        n.buttons[i].info.img[T] = Ce[e[a].rarity][T],
                                        n.buttons[i].info.active = Re,
                                        n.buttons[i].info.unlocked = I[a]
                                } else
                                    n.buttons[i].info.cosmeticId = -1,
                                    n.buttons[i].info.active = ye;
                            for (; i < o; i++)
                                n.buttons[i].info.cosmeticId = -1,
                                n.buttons[i].info.active = ye;
                            h()
                        }
                        ,
                        n.buttons[o].info.callback = function() {
                            r > 0 && r--,
                            T.initSelector()
                        }
                        ,
                        n.buttons[o + 1].info.callback = function() {
                            3 * r + 9 < e.length && r++,
                            T.initSelector()
                        }
                    }
                    function I() {
                        var e = window.Number(qT.get("starve_crate"))
                          , t = window.Number(qT.get("starve_dead"))
                          , i = window.Number(qT.get("starve_book"))
                          , a = window.Number(qT.get("starve_bag"))
                          , I = window.Number(qT.get("starve_skin"))
                          , T = window.Number(qT.get("starve_accessory"));
                        n.skin = I || 0,
                        n.book = i || 0,
                        n.crate = e || 1,
                        n.accessory = T || 0,
                        n.bag = a || 0,
                        n.dead = t || 0
                    }
                    function T() {
                        for (var e = Te.SKIN, t = 0; t < e.length; t++)
                            e[t].rarity === RARITY.FREE ? n.unlock.skin[t] = 1 : n.unlock.skin[t] = 0;
                        for (e = Te.ACCESSORY,
                        t = 0; t < e.length; t++)
                            e[t].rarity === RARITY.FREE ? n.unlock.accessory[t] = 1 : n.unlock.accessory[t] = 0;
                        for (e = Te.BAG,
                        t = 0; t < e.length; t++)
                            e[t].rarity === RARITY.FREE ? n.unlock.bag[t] = 1 : n.unlock.bag[t] = 0;
                        for (e = Te.BOOK,
                        t = 0; t < e.length; t++)
                            e[t].rarity === RARITY.FREE ? n.unlock.book[t] = 1 : n.unlock.book[t] = 0;
                        for (e = Te.CRATE,
                        t = 0; t < e.length; t++)
                            e[t].rarity === RARITY.FREE ? (n.unlock.crate[t] = 1,
                            n.unlock.dead[t] = 1) : (n.unlock.crate[t] = 0,
                            n.unlock.dead[t] = 0)
                    }
                    this.waiting = !1,
                    this.in_this_view = 0,
                    this.current_mode_score = -1,
                    this.loading = {
                        translate: {
                            x: 0,
                            y: 0
                        },
                        "angle": 0,
                        img: Ie[SPRITE.GEAR2],
                        draw: function() {
                            this.angle += 2 * zT,
                            i.save(),
                            i.translate(this.translate.x + this.img.width / 2, this.translate.y + this.img.height / 2),
                            i.rotate(this.angle),
                            drawCtxImage(i, this.img, -this.img.width / 2, -this.img.height / 2),
                            i.restore()
                        }
                    },
                    this.bread = 0,
                    this.previous_bread = -1,
                    this.bread_img = void 0,
                    this.new_nickname = "",
                    this.previous_new_nickname = "",
                    this.new_nickname_img = void 0,
                    this.lvl = 0,
                    this.previous_lvl = -1,
                    this.lvl_img = void 0,
                    this.xp = 0,
                    this.xp_dest = 0,
                    this.firstName = 0,
                    this.kill = 0,
                    this.death = 0,
                    this.time = 0,
                    this.score = 0,
                    this.scoreTotal = 0,
                    this.bestKill = 0,
                    this.bestTime = 0,
                    this.bestScore = 0,
                    this.seasons = [],
                    this.kit = -1,
                    this.previous_kit_hour = -1,
                    this.previous_kit_min = -1,
                    this.kit_img_min = void 0,
                    this.kit_img_hour = void 0,
                    this.privateServerTime = -1,
                    this.previous_privateServerTime_day = -1,
                    this.previous_privateServerTime_hour = -1,
                    this.previous_privateServerTime_min = -1,
                    this.privateServerTime_img_min = void 0,
                    this.privateServerTime_img_hour = void 0,
                    this.privateServerTime_img_day = void 0,
                    this.cosmetic_name = void 0,
                    this.cosmetic_author = void 0,
                    this.leaderboard_range = void 0,
                    this.leaderboard_mode = void 0,
                    this.leaderboard_sorted = void 0,
                    this.leaderboard_season = 0,
                    this.profile_season = 0,
                    this.breath = 0,
                    this.settings = !1,
                    this.quality = qT.get("starve_quality") ? qT.get("starve_quality") : "high",
                    "high" === this.quality ? (window.document.getElementById("high_ing").style.backgroundColor = "#B56D18",
                    window.document.getElementById("low_ing").style.backgroundColor = "#3A2A0D",
                    this.quality = 1) : (window.document.getElementById("low_ing").style.backgroundColor = "#B56D18",
                    window.document.getElementById("high_ing").style.backgroundColor = "#3A2A0D",
                    this.quality = 0),
                    this.high_quality = function() {
                        window.document.getElementById("high_ing").style.backgroundColor = "#B56D18",
                        window.document.getElementById("low_ing").style.backgroundColor = "#3A2A0D",
                        qT.set("starve_quality", "high", 30),
                        window.document.getElementById("input_ratio").value = 1,
                        game.change_ratio(),
                        UI.quality = 1
                    }
                    ,
                    this.low_quality = function() {
                        window.document.getElementById("high_ing").style.backgroundColor = "#3A2A0D",
                        window.document.getElementById("low_ing").style.backgroundColor = "#B56D18",
                        qT.set("starve_quality", "low", 30),
                        window.document.getElementById("input_ratio").value = .5 / (V / U),
                        game.change_ratio(),
                        UI.quality = 0
                    }
                    ,
                    void 0 === qT.get("starve_mapping") && "FR" === q ? (VT.set_azerty(),
                    this.mapping = "azerty") : this.mapping = qT.get("starve_mapping") ? qT.get("starve_mapping") : "qwerty",
                    "azerty" == this.mapping ? (VT.set_azerty(),
                    window.document.getElementById("azerty_ing").style.backgroundColor = "#B56D18",
                    window.document.getElementById("qwerty_ing").style.backgroundColor = "#3A2A0D") : (window.document.getElementById("qwerty_ing").style.backgroundColor = "#B56D18",
                    window.document.getElementById("azerty_ing").style.backgroundColor = "#3A2A0D"),
                    this.set_azerty = function() {
                        VT.set_azerty(),
                        window.document.getElementById("azerty_ing").style.backgroundColor = "#B56D18",
                        window.document.getElementById("qwerty_ing").style.backgroundColor = "#3A2A0D",
                        qT.set("starve_mapping", "azerty", 30)
                    }
                    ,
                    this.set_qwerty = function() {
                        VT.set_qwerty(),
                        window.document.getElementById("azerty_ing").style.backgroundColor = "#3A2A0D",
                        window.document.getElementById("qwerty_ing").style.backgroundColor = "#B56D18",
                        qT.set("starve_mapping", "qwerty", 30)
                    }
                    ,
                    I(),
                    this.unlock = {},
                    this.unlock.skin = [],
                    this.unlock.bag = [],
                    this.unlock.book = [],
                    this.unlock.crate = [],
                    this.unlock.dead = [],
                    this.unlock.accessory = [],
                    this.day_mode = 0,
                    this.unlock_cosmetics = T,
                    T();
                    var r, d = 0, h = function() {
                        if (n.update(),
                        60 == ++d)
                            return n.add_event_listener(),
                            n.in_this_view = !0,
                            void n.update();
                        window.setTimeout(h, o)
                    };
                    this.quit = function(e) {
                        r = e,
                        n.remove_event_listener(),
                        n.in_this_view = 0,
                        y = -1,
                        c()
                    }
                    ;
                    var y = -1
                      , c = function() {
                        if (n.update(),
                        60 == ++y)
                            return qT.set("starve_nickname", n.nickname.input.value, 30),
                            n.nickname.style.display = "none",
                            n.らいね大ちヌに千にそ.style.display = "none",
                            n.stop(),
                            void r();
                        window.setTimeout(c, o)
                    };
                    this.is_run = !1,
                    this.stop = function() {
                        this.is_run = !1
                    }
                    ,
                    this.run = function() {
                        window.document.getElementById("game_body").style.backgroundColor = SPRITE.GROUND[YT.time],
                        n.nickname.style.display = "inline-block",
                        n.らいね大ちヌに千にそ.style.display = "inline-block",
                        n.waiting = !1,
                        n.is_run = !0,
                        y = -1,
                        d = 0,
                        h()
                    }
                    ,
                    this.update_component = function(e, t) {
                        t = t < 0 ? -t : t,
                        (e.position & se) === se ? (e.position & ae) === ae ? e.translate.x = M + e.translate._x - t : (e.position & oe) === oe ? e.translate.x = M + e.translate._x + t : e.translate.x = M + e.translate._x : (e.position & ae) === ae ? e.translate.x = e.translate._x - t : (e.position & oe) === oe ? e.translate.x = L - e.translate._x + t : e.translate.x = e.translate._x,
                        (e.position & he) === he ? (e.position & re) === re ? e.translate.y = Y + e.translate._y - t : (e.position & de) === de ? e.translate.y = Y + e.translate._y + t : e.translate.y = Y + e.translate._y : (e.position & re) === re ? e.translate.y = e.translate._y - t : (e.position & de) === de ? e.translate.y = B + e.translate._y + t : e.translate.y = e.translate._y,
                        void 0 !== e.style && (e.style.left = window.Math.floor(e.translate.x) + "px",
                        e.style.top = window.Math.floor(e.translate.y) + "px")
                    }
                    ,
                    this.update = function() {
                        var e = 0;
                        if (60 != d || -1 != y) {
                            if (60 != d)
                                e = 1500 / (d + 1) - 25;
                            if (-1 != y)
                                e = -(1750 / (60 - y + 1) - 24)
                        }
                        for (var t = 0; t < this.bkgd.length; t++)
                            this.update_component(this.bkgd[t], e);
                        for (t = 0; t < this.buttons.length; t++)
                            this.update_component(this.buttons[t].info, e);
                        for (t = 0; t < this.css.length; t++)
                            this.update_component(this.css[t], e);
                        if (this.loading.translate.x = (L - this.loading.img.width) / 2,
                        this.loading.translate.y = 0,
                        60 != d || -1 != y) {
                            var i = 0;
                            if (60 != d)
                                i = 1500 / (d + 1) - 24;
                            if (-1 != y)
                                i = -(1750 / (60 - y + 1) - 24);
                            this.loading.translate.y -= i > 0 ? i : -i
                        }
                    }
                    ,
                    this.create_spin = function(e) {
                        var t = window.document.createElement("canvas")
                          , i = t.getContext("2d");
                        t.width = 342,
                        t.height = 342;
                        for (var n = -window.Math.PI / 2, a = 0; a < e.length; a++) {
                            var I = e[a][0]
                              , T = e[a][1] * window.Math.PI / 180;
                            i.beginPath(),
                            i.arc(171, 171, 170, n, n + T, !1),
                            i.lineTo(171, 171),
                            i.fillStyle = I,
                            i.fill(),
                            n += T
                        }
                        return t
                    }
                    ,
                    this.generate_new_nickname = function() {
                        this.new_nickname = window.document.getElementById("account_nickname_input").value,
                        this.new_nickname !== this.previous_new_nickname && (this.previous_new_nickname = this.new_nickname,
                        this.new_nickname_img = _T(this.new_nickname, "'Baloo Paaji', sans-serif", "#EFE4B4", 45, 550))
                    }
                    ,
                    this.draw = function() {
                        Un(),
                        UI.xp = N.lerp(UI.xp, UI.xp_dest, .03),
                        this.bkgd[pe].translate.x = this.bkgd[0].translate.x + -72 + 165 * UI.xp,
                        this.bkgd[pe].translate._x = this.bkgd[pe].translate.x,
                        this.bkgd[pe].translate.y = this.bkgd[0].translate.y + 30,
                        this.bkgd[pe].translate._y = this.bkgd[pe].translate.y;
                        for (let e = 2; e < this.bkgd.length; e++)
                            this.bkgd[e].active === Re && this.bkgd[e].draw(i);
                        var e;
                        if ((e = this.kit - Date.now()) > 0) {
                            var t = window.Math.floor(e / 6e4)
                              , a = window.Math.floor(t / 60);
                            (t %= 60) !== this.previous_kit_min && (this.previous_kit_min = t,
                            t = t < 10 ? "0" + t : "" + t,
                            n.kit_img_min = _T(t, "'Baloo Paaji', sans-serif", "#EFE4B4", 80, 200)),
                            a !== this.previous_kit_hour && (this.previous_kit_hour = a,
                            a = a < 10 ? "0" + a : "" + a,
                            n.kit_img_hour = _T(a, "'Baloo Paaji', sans-serif", "#EFE4B4", 80, 200)),
                            (T = this.bkgd[ce]).draw(i);
                            var I = this.kit_img_hour;
                            drawCtxImage(i, I, T.translate.x - I.width / 4 + 182, T.translate.y - I.height / 4 + 40, I.width / 2, I.height / 2);
                            I = this.kit_img_min;
                            drawCtxImage(i, I, T.translate.x - I.width / 4 + 251, T.translate.y - I.height / 4 + 40, I.width / 2, I.height / 2)
                        }
                        if ((e = this.privateServerTime - Date.now()) > 0) {
                            t = window.Math.floor(e / 6e4),
                            a = window.Math.floor(t / 60);
                            var T, o = window.Math.floor(a / 24);
                            a %= 24,
                            (t %= 60) !== this.previous_privateServerTime_min && (this.previous_privateServerTime_min = t,
                            t = t < 10 ? "0" + t : "" + t,
                            n.privateServerTime_img_min = _T(t, "'Baloo Paaji', sans-serif", "#EFE4B4", 80, 200)),
                            a !== this.previous_privateServerTime_hour && (this.previous_privateServerTime_hour = a,
                            a = a < 10 ? "0" + a : "" + a,
                            n.privateServerTime_img_hour = _T(a, "'Baloo Paaji', sans-serif", "#EFE4B4", 80, 200)),
                            o !== this.previous_privateServerTime_day && (this.previous_privateServerTime_day = o,
                            o = o < 10 ? "0" + o : "" + o,
                            n.privateServerTime_img_day = _T(o, "'Baloo Paaji', sans-serif", "#EFE4B4", 80, 200)),
                            (T = this.bkgd[ue]).draw(i);
                            I = this.privateServerTime_img_day;
                            drawCtxImage(i, I, T.translate.x - I.width / 4 + 113, T.translate.y - I.height / 4 + 40, I.width / 2, I.height / 2);
                            I = this.privateServerTime_img_hour;
                            drawCtxImage(i, I, T.translate.x - I.width / 4 + 182, T.translate.y - I.height / 4 + 40, I.width / 2, I.height / 2);
                            I = this.privateServerTime_img_min;
                            drawCtxImage(i, I, T.translate.x - I.width / 4 + 251, T.translate.y - I.height / 4 + 40, I.width / 2, I.height / 2)
                        }
                        (this.current_view & p) === p ? this.buttons[ge].info.state = PT : (this.current_view & l) === l ? this.buttons[Pe].info.state = PT : (this.current_view & f) === f ? this.buttons[fe].info.state = PT : (this.current_view & w) === w ? this.buttons[Ae].info.state = PT : (this.current_view & _) === _ ? this.buttons[le].info.state = PT : (this.current_view & g) === g || (this.current_view & D) === D || (this.current_view & O) === O || (this.current_view & k) === k || (this.current_view & C) === C || (this.current_view & H) === H || (this.current_view & K) === K ? this.buttons[_e].info.state = PT : (this.current_view & G) === G || (this.current_view & F) === F || (this.current_view & W) === W || (this.current_view & x) === x || (this.current_view & X) === X || (this.current_view & z) === z ? this.buttons[fe].info.state = PT : (this.current_view & Z) === Z || (this.current_view & J) === J || (this.current_view & Q) === Q ? this.buttons[we].info.state = PT : (this.current_view & ee) === ee && (this.buttons[Ae].info.state = PT),
                        (this.current_view & l) === l && (this.leaderboard_mode === this.LEADERBOARD_TOTAL ? (this.leaderboard_range = this.LEADERBOARD_ALL,
                        this.buttons[this.LEADERBOARD_ALL].info.active = ye,
                        this.buttons[this.LEADERBOARD_WEEK].info.active = ye,
                        this.buttons[this.LEADERBOARD_TODAY].info.active = ye) : (this.buttons[this.LEADERBOARD_ALL].info.active = Re,
                        this.buttons[this.LEADERBOARD_WEEK].info.active = Re,
                        this.buttons[this.LEADERBOARD_TODAY].info.active = Re),
                        this.leaderboard_mode === this.LEADERBOARD_TOTAL ? this.buttons[this.LEADERBOARD_TOTAL].info.state = PT : this.leaderboard_mode === this.LEADERBOARD_NORMAL && (this.buttons[this.LEADERBOARD_NORMAL].info.state = PT),
                        this.leaderboard_range === this.LEADERBOARD_ALL ? this.buttons[this.LEADERBOARD_ALL].info.state = PT : this.leaderboard_range === this.LEADERBOARD_WEEK ? this.buttons[this.LEADERBOARD_WEEK].info.state = PT : this.leaderboard_range === this.LEADERBOARD_TODAY && (this.buttons[this.LEADERBOARD_TODAY].info.state = PT),
                        this.leaderboard_sorted === this.LEADERBOARD_KILL ? this.buttons[this.LEADERBOARD_KILL].info.state = PT : this.leaderboard_sorted === this.LEADERBOARD_SCORE ? this.buttons[this.LEADERBOARD_SCORE].info.state = PT : this.leaderboard_sorted === this.LEADERBOARD_TIME && (this.buttons[this.LEADERBOARD_TIME].info.state = PT),
                        0 === this.leaderboard_season && (this.buttons[this.LEADERBOARD_SEASON1].info.state = PT)),
                        (this.current_view & w) === w && 0 === this.profile_season && (this.buttons[Ge].info.state = PT),
                        (this.current_view & p) === p && 0 === client.privateServer && (this.buttons[Ne].in_button(UT.pos) ? this.buttons[Ne].hint = window.Math.min(1, this.buttons[Ne].hint + 1.5 * zT) : this.buttons[Ne].hint = window.Math.max(0, this.buttons[Ne].hint - 1.5 * zT),
                        this.buttons[ve].in_button(UT.pos) ? this.buttons[ve].hint = window.Math.min(1, this.buttons[ve].hint + 1.5 * zT) : this.buttons[ve].hint = window.Math.max(0, this.buttons[ve].hint - 1.5 * zT),
                        this.buttons[De].in_button(UT.pos) ? this.buttons[De].hint = window.Math.min(1, this.buttons[De].hint + 1.5 * zT) : this.buttons[De].hint = window.Math.max(0, this.buttons[De].hint - 1.5 * zT));
                        var r = 1;
                        if ((this.current_view & (D | O | k | C | H | K)) > 1) {
                            I = P.ARROW_SPIN;
                            i.save(),
                            i.translate(M, Se + I.height / 4),
                            1 === this.spin && (this.spin_effect += zT / 3,
                            r = this.spin_target - 100 / window.Math.pow(1 + this.spin_effect, 1 + this.spin_effect),
                            i.rotate(r)),
                            drawCtxImage(i, I, -I.width / 4, -I.height / 4, I.width / 2, I.height / 2),
                            i.restore()
                        }
                        0 === client.privateServer && (client.current_mode === WORLD.MODE_PVP ? this.buttons[Ne].info.state = PT : client.current_mode === WORLD.MODE_COMMUNITY ? this.buttons[ve].info.state = PT : client.current_mode === WORLD.MODE_EXPERIMENTAL && (this.buttons[De].info.state = PT));
                        for (var d = 1; d < this.buttons.length; d++)
                            this.buttons[d].info.active === Re && this.buttons[d].draw(i);
                        if (this.bkgd[0].draw(i),
                        (this.current_view & ($ | j)) > 0) {
                            I = this.new_nickname_img;
                            drawCtxImage(i, I, M - I.width / 4, 138, I.width / 2, I.height / 2)
                        }
                        var s = window.Math.max(1, window.Math.min(18, window.Math.floor((UI.lvl + 3) / 2)));
                        if (this.bkgd[s].active = Re,
                        this.bkgd[s].draw(i),
                        this.bkgd[s].active = ye,
                        this.buttons[0].draw(i),
                        (this.current_view & (f | F | x | G | X)) > 1) {
                            var h = (this.current_view & (F | x | G | X)) > 1 ? -190 : 0;
                            I = Ie[ItemType.BAG][this.bag][this.day_mode];
                            drawCtxImage(i, I, M - I.width / 4 + h, 183, I.width / 2, I.height / 2),
                            this.breath = (this.breath + 1e3 * zT) % 2e3;
                            var y = 4.5 * (this.breath < 1e3) ? this.breath / 1e3 : (2e3 - this.breath) / 1e3;
                            I = Ie[ItemType.BOOK][this.book][this.day_mode];
                            drawCtxImage(i, I, M - I.width / 4 - 62 + y + h, 240, I.width / 2, I.height / 2);
                            I = Ie[ItemType.HAND][this.skin][this.day_mode];
                            drawCtxImage(i, I, M - I.width / 4 - 54 + y + h, 272, I.width / 2, I.height / 2),
                            drawCtxImage(i, I, M - I.width / 4 + 54 - y + h, 272, I.width / 2, I.height / 2);
                            I = Ie[SPRITE.BODY][this.skin][this.day_mode];
                            drawCtxImage(i, I, M - I.width / 4 + h, 222, I.width / 2, I.height / 2);
                            I = Ie[SPRITE.ACCESSORY][this.accessory][this.day_mode];
                            drawCtxImage(i, I, M - I.width / 4 + h, 222, I.width / 2, I.height / 2)
                        }
                        if ((this.current_view & f) === f) {
                            I = Ie[SPRITE.CRATE][this.crate][this.day_mode];
                            drawCtxImage(i, I, M - I.width / 4 - 61, 406 - I.height / 4, I.width / 2, I.height / 2);
                            I = Ie[SPRITE.CRATE][this.dead][this.day_mode];
                            drawCtxImage(i, I, M - I.width / 4 + 53, 406 - I.height / 4, I.width / 2, I.height / 2)
                        }
                        if ((this.current_view & W) === W) {
                            I = Ie[SPRITE.CRATE][this.dead][this.day_mode];
                            drawCtxImage(i, I, M - I.width / 4 - 200, 268 - I.height / 4, I.width / 2, I.height / 2)
                        }
                        if ((this.current_view & z) === z) {
                            I = Ie[SPRITE.CRATE][this.crate][this.day_mode];
                            drawCtxImage(i, I, M - I.width / 4 - 200, 268 - I.height / 4, I.width / 2, I.height / 2)
                        }
                        if ((this.current_view & (F | x | G | X | W | z)) > 1) {
                            for (d = 1; d < this.buttons.length; d++)
                                if (this.buttons[d].view & this.current_view) {
                                    var R = this.buttons[d].info;
                                    if (R.cosmeticId >= 0) {
                                        I = R.cosmeticType[R.cosmeticId].day;
                                        if (drawCtxImage(i, I, R.translate.x - I.width / 8 + 44.5, R.translate.y - I.height / 8 + 45.5, I.width / 4, I.height / 4),
                                        1 !== R.unlocked) {
                                            I = P.RED_LOCKED;
                                            drawCtxImage(i, I, R.translate.x - I.width / 4 + 44.5, R.translate.y - I.height / 4 + 44.5, I.width / 2, I.height / 2)
                                        }
                                    }
                                }
                            I = this.cosmetic_name;
                            drawCtxImage(i, I, M - 312, 375, I.width / 2, I.height / 2);
                            I = this.cosmetic_author;
                            drawCtxImage(i, I, M - 312, 395, I.width / 2, I.height / 2)
                        }
                        if (this.bread !== this.previous_bread && (this.previous_bread = this.bread,
                        this.bread_img = _T("" + this.bread, "'Baloo Paaji', sans-serif", "#EFE4B4", 60, 250)),
                        drawCtxImage(i, this.bread_img, this.bkgd[0].translate.x + 350, 15, this.bread_img.w2, this.bread_img.h2),
                        this.lvl !== this.previous_lvl && (this.previous_lvl = this.lvl,
                        this.lvl_img = _T("LVL " + (this.lvl + 1), "'Baloo Paaji', sans-serif", "#EFE4B4", 50, 250, void 0, 30, 24, void 0, void 0, void 0, void 0, "#3F3019", 20)),
                        drawCtxImage(i, this.lvl_img, this.bkgd[0].translate.x + 94, 0, this.lvl_img.w2, this.lvl_img.h2),
                        0 === client.privateServer) {
                            var E;
                            if ((E = this.buttons[Ne].hint) > 0) {
                                I = P.NORMAL_MODE_HOVER;
                                drawCtxImage(i, I, M - I.width / 4, -36 - I.height * N.ease_in_out_quad(1 - E) / 2, I.width / 2, I.height / 2)
                            }
                            if ((E = this.buttons[ve].hint) > 0) {
                                I = P.MODE_COMMUNITY_HOVER;
                                drawCtxImage(i, I, M - I.width / 4, -36 - I.height * N.ease_in_out_quad(1 - E) / 2, I.width / 2, I.height / 2)
                            }
                            if ((E = this.buttons[De].hint) > 0) {
                                I = P.MODE_EXPERIMENTAL_HOVER;
                                drawCtxImage(i, I, M - I.width / 4, -36 - I.height * N.ease_in_out_quad(1 - E) / 2, I.width / 2, I.height / 2)
                            }
                        }
                        if (1 === this.spin && window.Math.abs(r - this.spin_target) < .006) {
                            i.globalAlpha = window.Math.min(1, 3 * this.spin_win_effect);
                            I = P.SPIN_LIGHT;
                            i.save(),
                            i.translate(M, 260),
                            this.spin_win_effect += zT,
                            i.rotate(this.spin_win_effect),
                            drawCtxImage(i, I, -I.width / 2, -I.height / 2, I.width, I.height),
                            i.restore();
                            y = 1.05 + .05 * window.Math.sin(5 * this.spin_win_effect);
                            if (0 === this.spin_type) {
                                var m = y * (I = Te.SKIN[this.spin_win].day).width
                                  , S = y * I.height;
                                drawCtxImage(i, I, M - m / 2, 260 - S / 2, m, S)
                            } else if (1 === this.spin_type) {
                                m = y * (I = Te.SKIN[0].day).width,
                                S = y * I.height;
                                drawCtxImage(i, I, M - m / 2, 260 - S / 2, m, S);
                                m = y * (I = Te.ACCESSORY[this.spin_win].day).width,
                                S = y * I.height;
                                drawCtxImage(i, I, M - m / 2, 260 - S / 2, m, S)
                            } else if (2 === this.spin_type) {
                                m = y * (I = Te.BAG[this.spin_win].day).width,
                                S = y * I.height;
                                drawCtxImage(i, I, M - m / 2, 180 - S / 2, m, S);
                                m = y * (I = Te.SKIN[0].day).width,
                                S = y * I.height;
                                drawCtxImage(i, I, M - m / 2, 260 - S / 2, m, S)
                            } else if (3 === this.spin_type) {
                                m = y * (I = Te.BOOK[this.spin_win].day).width,
                                S = y * I.height;
                                i.save(),
                                i.translate(M, 260),
                                i.rotate(window.Math.PI),
                                drawCtxImage(i, I, -m / 2, -S / 2, m, S),
                                i.restore()
                            } else if (4 === this.spin_type) {
                                m = y * (I = Te.CRATE[this.spin_win].day).width,
                                S = y * I.height;
                                drawCtxImage(i, I, M - m / 2, 260 - S / 2, m, S)
                            }
                            I = this.spin_name;
                            drawCtxImage(i, I, M - I.width / 4, 340, I.width / 2, I.height / 2);
                            I = this.spin_author;
                            drawCtxImage(i, I, M - I.width / 4, 365, I.width / 2, I.height / 2),
                            this.spin_win_effect > 6 && (this.spin = 0,
                            ne(g)),
                            i.globalAlpha = 1
                        }
                        user.alert.draw(),
                        n.waiting && this.loading.draw()
                    }
                    ;
                    var u = 0
                      , p = window.Math.pow(2, u++)
                      , w = window.Math.pow(2, u++);
                    this.__PROFILE__ = w;
                    var _ = window.Math.pow(2, u++)
                      , f = window.Math.pow(2, u++)
                      , g = window.Math.pow(2, u++)
                      , l = window.Math.pow(2, u++)
                      , A = window.Math.pow(2, u++);
                    this.__BUY__ = A;
                    var b = window.Math.pow(2, u++)
                      , v = window.Math.pow(2, u++)
                      , D = window.Math.pow(2, u++)
                      , O = window.Math.pow(2, u++)
                      , k = window.Math.pow(2, u++)
                      , C = window.Math.pow(2, u++)
                      , H = window.Math.pow(2, u++)
                      , K = window.Math.pow(2, u++)
                      , G = window.Math.pow(2, u++)
                      , W = window.Math.pow(2, u++)
                      , F = window.Math.pow(2, u++)
                      , x = window.Math.pow(2, u++)
                      , X = window.Math.pow(2, u++)
                      , z = window.Math.pow(2, u++)
                      , j = window.Math.pow(2, u++)
                      , $ = window.Math.pow(2, u++)
                      , Z = window.Math.pow(2, u++);
                    this.__SERVER_LOCATION__ = Z;
                    var J = window.Math.pow(2, u++);
                    this.__SERVER_DURATION__ = J;
                    var Q = window.Math.pow(2, u++);
                    this.__SERVER_ACCESS__ = Q;
                    var ee = window.Math.pow(2, u++);
                    function te(e, t, i) {
                        for (var a = 0; a < n.bkgd.length; a++)
                            n.bkgd[a].view & e && (n.bkgd[a].active = t);
                        for (a = 0; a < n.buttons.length; a++)
                            n.buttons[a].view & e && (n.buttons[a].info.active = t);
                        for (a = 0; a < n.css.length; a++)
                            n.css[a].view & e && (n.css[a].style.display = i)
                    }
                    function ie() {
                        var e = window.Number(qT.get("starve_crate"))
                          , t = window.Number(qT.get("starve_dead"))
                          , i = window.Number(qT.get("starve_book"))
                          , n = window.Number(qT.get("starve_bag"))
                          , a = window.Number(qT.get("starve_skin"))
                          , I = window.Number(qT.get("starve_accessory"));
                        UI.unlock.skin[UI.skin] > 0 || (UI.skin = UI.unlock.skin[a] > 0 ? a : 0),
                        UI.unlock.book[UI.book] > 0 || (UI.book = UI.unlock.book[i] > 0 ? i : 0),
                        UI.unlock.dead[UI.dead] > 0 || (UI.dead = UI.unlock.dead[t] > 0 ? t : 0),
                        UI.unlock.crate[UI.crate] > 0 || (UI.crate = UI.unlock.crate[e] > 0 ? e : 0),
                        UI.unlock.accessory[UI.accessory] > 0 || (UI.accessory = UI.unlock.accessory[I] > 0 ? I : 0),
                        UI.unlock.bag[UI.bag] > 0 || (UI.bag = UI.unlock.bag[n] > 0 ? n : 0)
                    }
                    function ne(e) {
                        !1 !== n.in_this_view && (te(b, ye, "none"),
                        te(v, ye, "none"),
                        ie(),
                        e === n.current_view || n.spin >= 1 || (te(n.current_view, ye, "none"),
                        n.current_view = e,
                        te(n.current_view, Re, "inline-block")))
                    }
                    this.current_view = p,
                    this.select_subview = ne,
                    this.play_game = function() {
                        !1 === n.waiting && (user.reconnect.enabled = !1,
                        n.waiting = !0,
                        ie(),
                        client.connect())
                    }
                    ;
                    var ae = 1
                      , oe = 2
                      , re = 4
                      , de = 8
                      , se = 16
                      , he = 32
                      , ye = 0
                      , Re = 1;
                    this.login = {
                        id: window.document.getElementById("login_block"),
                        style: window.document.getElementById("login_block").style,
                        input: window.document.getElementById("login_input"),
                        input_: window.document.getElementById("password_input"),
                        up: window.document.getElementById("signup"),
                        in: window.document.getElementById("login"),
                        active: Re,
                        position: re | se,
                        view: _,
                        translate: {
                            x: 0,
                            y: 0,
                            _x: -200,
                            _y: 100
                        }
                    },
                    window.innerWidth < 1300 ? this.nickname = {
                        id: window.document.getElementById("nickname_block"),
                        style: window.document.getElementById("nickname_block").style,
                        input: window.document.getElementById("nickname_input"),
                        active: Re,
                        position: re | ae,
                        view: p,
                        translate: {
                            x: 0,
                            y: 0,
                            _x: 200,
                            _y: 184
                        }
                    } : this.nickname = {
                        id: window.document.getElementById("nickname_block"),
                        style: window.document.getElementById("nickname_block").style,
                        input: window.document.getElementById("nickname_input"),
                        active: Re,
                        position: re | se,
                        view: p,
                        translate: {
                            x: 0,
                            y: 0,
                            _x: -180,
                            _y: 184
                        }
                    },
                    this.nickname.id.addEventListener("keyup", (function(e) {
                        e.preventDefault(),
                        13 != e.keyCode || n.waiting || n.settings || n.play_game()
                    }
                    )),
                    this.login.in.addEventListener("click", (async () => {
                        if (n.login.input.value.length < 3)
                            return client.new_alert("Login must have more than 2 characters", "#a60f1b");
                        if (n.login.input_.value.length < 6)
                            return client.new_alert("Password must have more than 5 characters", "#a60f1b");
                        if (n.login.input.value.length > 16)
                            return client.new_alert("Login must have less than 16 characters", "#a60f1b");
                        if (n.login.input_.value.length > 16)
                            return client.new_alert("Password must have less than 16 characters", "#a60f1b");
                        const e = await fetch("/login", {
                            method: "POST",
                            headers: {
                                "Content-type": "application/json"
                            },
                            body: window.JSON.stringify({
                                login: n.login.input.value,
                                password: n.login.input_.value
                            })
                        });
                        let t = await e.text();
                        if ("{" !== t[0])
                            return client.new_alert(t, "#a60f1b");
                        ne(p),
                        n.login_restore_data(window.JSON.parse(t)),
                        user.login = n.login.input.value,
                        user.password = n.login.input_.value,
                        client.new_alert("Log in account", "#27ba36"),
                        remember_checkbox.checked && (qT.set("starve_login", user.login),
                        qT.set("starve_password", user.password))
                    }
                    )),
                    this.login.up.addEventListener("click", (async () => {
                        if (n.login.input.value.length < 3)
                            return client.new_alert("Login must have more than 2 characters", "#a60f1b");
                        if (n.login.input_.value.length < 6)
                            return client.new_alert("Password must have more than 5 characters", "#a60f1b");
                        if (n.login.input.value.length > 16)
                            return client.new_alert("Login must have less than 16 characters", "#a60f1b");
                        if (n.login.input_.value.length > 16)
                            return client.new_alert("Password must have less than 16 characters", "#a60f1b");
                        const e = await fetch("/register", {
                            method: "POST",
                            headers: {
                                "Content-type": "application/json"
                            },
                            body: window.JSON.stringify({
                                login: n.login.input.value,
                                password: n.login.input_.value
                            })
                        });
                        let t = await e.text();
                        if ("{" !== t[0])
                            return client.new_alert(t, "#a60f1b");
                        ne(p),
                        n.login_restore_data(window.JSON.parse(t)),
                        user.login = n.login.input.value,
                        user.password = n.login.input_.value,
                        client.new_alert("Account successfully registered", "#27ba36")
                    }
                    )),
                    this.nickname.input.value = qT.get("starve_nickname") ? qT.get("starve_nickname") : "",
                    this.account_nickname = {
                        id: window.document.getElementById("account_nickname_block"),
                        style: window.document.getElementById("account_nickname_block").style,
                        input: window.document.getElementById("account_nickname_input"),
                        active: ye,
                        position: re | se,
                        view: w,
                        translate: {
                            x: 0,
                            y: 0,
                            _x: -122,
                            _y: 110
                        }
                    },
                    window.innerWidth < 1300 ? this.らいね大ちヌに千にそ = {
                        id: window.document.getElementById("servselect"),
                        style: window.document.getElementById("servselect").style,
                        active: Re,
                        position: re | ae,
                        view: p,
                        translate: {
                            x: 0,
                            y: 0,
                            _x: 208,
                            _y: 225
                        }
                    } : this.らいね大ちヌに千にそ = {
                        id: window.document.getElementById("servselect"),
                        style: window.document.getElementById("servselect").style,
                        active: Re,
                        position: re | se,
                        view: p,
                        translate: {
                            x: 0,
                            y: 0,
                            _x: -180,
                            _y: 225
                        }
                    },
                    this.leaderboard = {
                        id: window.document.getElementById("leaderboard"),
                        style: window.document.getElementById("leaderboard").style,
                        active: ye,
                        position: re | se,
                        view: l,
                        translate: {
                            x: 0,
                            y: 0,
                            _x: -294.5,
                            _y: 190
                        }
                    },
                    this.stats_box = {
                        id: window.document.getElementById("stats_box"),
                        style: window.document.getElementById("stats_box").style,
                        active: ye,
                        position: re | se,
                        view: w,
                        translate: {
                            x: 0,
                            y: 0,
                            _x: 125,
                            _y: 187
                        }
                    },
                    this.serverAddressBlock = {
                        id: window.document.getElementById("serverAddressBlock"),
                        style: window.document.getElementById("serverAddressBlock").style,
                        input: window.document.getElementById("serverAddressInput"),
                        active: ye,
                        position: re | se,
                        view: Q,
                        translate: {
                            x: 0,
                            y: 0,
                            _x: -220,
                            _y: 350
                        }
                    },
                    u = 0,
                    this.css = [],
                    this.css[u++] = this.nickname,
                    this.css[u++] = this.login,
                    this.css[u++] = this.らいね大ちヌに千にそ,
                    this.css[u++] = this.leaderboard,
                    this.css[u++] = this.account_nickname,
                    this.css[u++] = this.stats_box,
                    this.css[u++] = this.serverAddressBlock,
                    u = 0,
                    this.bkgd = [],
                    this.bkgd[u++] = gT(P.AVATAR_RESUME, Re, 0, 0, ae),
                    this.bkgd[u++] = gT(P.AVATAR_LVL1, ye, 0, 0, ae),
                    this.bkgd[u++] = gT(P.AVATAR_LVL2, ye, 0, 0, ae),
                    this.bkgd[u++] = gT(P.AVATAR_LVL3, ye, 0, 0, ae),
                    this.bkgd[u++] = gT(P.AVATAR_LVL4, ye, 0, 0, ae),
                    this.bkgd[u++] = gT(P.AVATAR_LVL5, ye, 0, 0, ae),
                    this.bkgd[u++] = gT(P.AVATAR_LVL6, ye, 0, 0, ae),
                    this.bkgd[u++] = gT(P.AVATAR_LVL7, ye, 0, 0, ae),
                    this.bkgd[u++] = gT(P.AVATAR_LVL8, ye, 0, 0, ae),
                    this.bkgd[u++] = gT(P.AVATAR_LVL9, ye, 0, 0, ae),
                    this.bkgd[u++] = gT(P.AVATAR_LVL10, ye, 0, 0, ae),
                    this.bkgd[u++] = gT(P.AVATAR_LVL11, ye, 0, 0, ae),
                    this.bkgd[u++] = gT(P.AVATAR_LVL12, ye, 0, 0, ae),
                    this.bkgd[u++] = gT(P.AVATAR_LVL13, ye, 0, 0, ae),
                    this.bkgd[u++] = gT(P.AVATAR_LVL14, ye, 0, 0, ae),
                    this.bkgd[u++] = gT(P.AVATAR_LVL15, ye, 0, 0, ae),
                    this.bkgd[u++] = gT(P.AVATAR_LVL16, ye, 0, 0, ae),
                    this.bkgd[u++] = gT(P.AVATAR_LVL17, ye, 0, 0, ae),
                    this.bkgd[u++] = gT(P.AVATAR_LVL18, ye, 0, 0, ae),
                    window.innerWidth < 1300 ? this.bkgd[u] = gT(P.LOGO_INTERFACE, Re, 200, 100, re | ae) : this.bkgd[u] = gT(P.LOGO_INTERFACE, Re, -753 / 4, 100, re | se),
                    this.bkgd[u++].view = p,
                    this.bkgd[u++] = gT(P.LINKS_BG, Re, 403, -10, oe),
                    window.innerWidth > 1300 && (this.bkgd[u] = gT(P.CHANGELOG_BOX, Re, -885 / 4, -159.5, de | se),
                    this.bkgd[u++].view = p),
                    this.bkgd[u] = gT(P.PROFILE_BOX, ye, -323.25, 100, re | se),
                    this.bkgd[u++].view = w,
                    this.bkgd[u] = gT(P.SKINS_BOX, ye, -356.25, 100, re | se),
                    this.bkgd[u++].view = f,
                    this.bkgd[u] = gT(P.SHOP_BOX, ye, -402, 130, re | se),
                    this.bkgd[u++].view = g,
                    this.bkgd[u] = gT(P.SERVER_LOCATION_BOX, ye, -279.25, 130, re | se),
                    this.bkgd[u++].view = Z,
                    this.bkgd[u] = gT(P.SERVER_DURATION_BOX, ye, -305.5, 130, re | se),
                    this.bkgd[u++].view = J,
                    this.bkgd[u] = gT(P.SERVER_ACCESS_BOX, ye, -305.5, 100, re | se),
                    this.bkgd[u++].view = Q,
                    this.bkgd[u] = gT(P.SEASON5_BOX, ye, -P.SEASON5_BOX.width / 4 - 350, -15, re | se),
                    this.bkgd[u++].view = ee,
                    this.bkgd[u] = gT(P.LEADERBOARD_BOX, ye, -306.5, 100, re | se),
                    this.bkgd[u++].view = l,
                    this.bkgd[u] = gT(P.BUY_BREAD_BOX, ye, -345.25, 80, re | se),
                    this.bkgd[u++].view = A,
                    this.bkgd[u] = gT(P.SPIN1, ye, -385.5, 150, re | se),
                    this.bkgd[u++].view = D;
                    var Ee = 3.6
                      , me = this.create_spin([["#25c5d6", 10.8], ["#e2cf27", 36], ["#afac98", 108], ["#d88e23", 57 * Ee]]);
                    this.bkgd[u] = gT(me, ye, -me.width / 4, 178, re | se),
                    this.bkgd[u++].view = D,
                    this.play_spin = function(e, t, i) {
                        var a;
                        n.spin = 1,
                        n.spin_effect = 0,
                        n.spin_win_effect = 0,
                        n.spin_target = e,
                        n.spin_type = t;
                        var I = 0;
                        if (0 === t) {
                            for (let e = 0; e < Te.SKIN.length && (I = e,
                            i !== Te.SKIN[e].id); e++)
                                ;
                            a = Te.SKIN[I],
                            n.unlock.skin[I] = 1
                        } else if (1 === t) {
                            for (let e = 0; e < Te.ACCESSORY.length && (I = e,
                            i !== Te.ACCESSORY[e].id); e++)
                                ;
                            a = Te.ACCESSORY[I],
                            n.unlock.accessory[I] = 1
                        } else if (2 === t) {
                            for (let e = 0; e < Te.BAG.length && (I = e,
                            i !== Te.BAG[e].id); e++)
                                ;
                            a = Te.BAG[I],
                            n.unlock.bag[I] = 1
                        } else if (3 === t) {
                            for (let e = 0; e < Te.BOOK.length && (I = e,
                            i !== Te.BOOK[e].id); e++)
                                ;
                            a = Te.BOOK[I],
                            n.unlock.book[I] = 1
                        } else if (4 === t) {
                            for (let e = 0; e < Te.CRATE.length && (I = e,
                            i !== Te.CRATE[e].id); e++)
                                ;
                            a = Te.CRATE[I],
                            n.unlock.crate[I] = 1,
                            n.unlock.dead[I] = 1
                        }
                        n.spin_win = I,
                        n.spin_author = _T("by " + a.author, "'Baloo Paaji', sans-serif", "#EFE4B4", 40, 500, void 0, 30, 24, void 0, void 0, void 0, void 0, "#000000", 24),
                        n.spin_name = _T(a.name, "'Baloo Paaji', sans-serif", "#EFE4B4", 60, 600, void 0, 30, 24, void 0, void 0, void 0, void 0, "#000000", 20)
                    }
                    ,
                    this.spin = 0,
                    this.spin_effect = 0,
                    this.spin_target = 0,
                    this.spin_type = 0,
                    this.spin_win_effect = 0,
                    this.spin_author = void 0,
                    this.spin_name = void 0;
                    var Se = 197;
                    this.bkgd[u] = gT(P.SPIN2, ye, -385.5, 150, re | se),
                    this.bkgd[u++].view = H;
                    me = this.create_spin([["#d45ce5", 10.8], ["#25c5d6", 36], ["#e2cf27", 108], ["#afac98", 57 * Ee]]);
                    this.bkgd[u] = gT(me, ye, -me.width / 4, 178, re | se),
                    this.bkgd[u++].view = H,
                    this.bkgd[u] = gT(P.SPIN3, ye, -385.5, 150, re | se),
                    this.bkgd[u++].view = k;
                    me = this.create_spin([["#d33a2a", 10.8], ["#d45ce5", 36], ["#25c5d6", 108], ["#e2cf27", 57 * Ee]]);
                    this.bkgd[u] = gT(me, ye, -me.width / 4, 178, re | se),
                    this.bkgd[u++].view = k,
                    this.bkgd[u] = gT(P.SPIN4, ye, -385.5, 150, re | se),
                    this.bkgd[u++].view = C;
                    me = this.create_spin([["#25c5d6", 10.8], ["#e2cf27", 36], ["#afac98", 108], ["#d88e23", 57 * Ee]]);
                    this.bkgd[u] = gT(me, ye, -me.width / 4, 178, re | se),
                    this.bkgd[u++].view = C,
                    this.bkgd[u] = gT(P.SPIN5, ye, -385.5, 150, re | se),
                    this.bkgd[u++].view = O;
                    me = this.create_spin([["#d45ce5", 10.8], ["#25c5d6", 36], ["#e2cf27", 108], ["#afac98", 57 * Ee]]);
                    this.bkgd[u] = gT(me, ye, -me.width / 4, 178, re | se),
                    this.bkgd[u++].view = O,
                    this.bkgd[u] = gT(P.SPIN6, ye, -385.5, 150, re | se),
                    this.bkgd[u++].view = K;
                    me = this.create_spin([["#d33a2a", 10.8], ["#d45ce5", 36], ["#25c5d6", 108], ["#e2cf27", 57 * Ee]]);
                    this.bkgd[u] = gT(me, ye, -me.width / 4, 178, re | se),
                    this.bkgd[u++].view = K,
                    this.bkgd[u] = gT(P.CUSTOM_SKIN_BOX, ye, -341.5, 100, re | se),
                    this.bkgd[u++].view = G,
                    this.bkgd[u] = gT(P.ACCESSORIES_BOX, ye, -341.5, 100, re | se),
                    this.bkgd[u++].view = X,
                    this.bkgd[u] = gT(P.BAG_BOX, ye, -341.5, 100, re | se),
                    this.bkgd[u++].view = F,
                    this.bkgd[u] = gT(P.BOOK_BOX, ye, -341.5, 100, re | se),
                    this.bkgd[u++].view = x,
                    this.bkgd[u] = gT(P.CRATE_BOX, ye, -341.5, 100, re | se),
                    this.bkgd[u++].view = W,
                    this.bkgd[u] = gT(P.LOOT_BOX, ye, -341.5, 100, re | se),
                    this.bkgd[u++].view = z;
                    var ce = u++;
                    this.bkgd[ce] = gT(P.BAG_REMAIN_BOX, ye, 484, 0, re);
                    var ue = u++;
                    this.bkgd[ue] = gT(P.SERVER_REMAIN_BOX, ye, 812.5, 0, re),
                    this.bkgd[u] = gT(P.LOCKED_CUSTOM_ALERT, ye, -189.5, -5, re | se),
                    this.bkgd[u++].view = v,
                    this.bkgd[u] = gT(P.LOCKED_SKIN_ALERT, ye, -189.5, -5, re | se),
                    this.bkgd[u++].view = b;
                    var pe = u++;
                    this.bkgd[pe] = gT(P.GAUGE, Re, 93, 30, re),
                    this.bkgd[u] = gT(P.CHANGE_NICKNAME1_BOX, ye, -173, 110, re | se),
                    this.bkgd[u++].view = j,
                    this.bkgd[u] = gT(P.CHANGE_NICKNAME0_BOX, ye, -173, 110, re | se),
                    this.bkgd[u++].view = $,
                    u = 0,
                    this.buttons = [],
                    this.buttons[u] = fT(50, 57, 0, [P.BUY_BREAD_OUT, P.BUY_BREAD_IN, P.BUY_BREAD_CLICK], 1, 0, (function() {
                        n.isUserLogged() ? ne(A) : ne(_)
                    }
                    ), 320, 0, ae, Re),
                    u++,
                    window.innerWidth < 1300 ? this.buttons[u] = fT(202, 97, 0, [P.PLAY_BUTTON_OUT, P.PLAY_BUTTON_IN, P.PLAY_BUTTON_CLICK], 1, 0, this.play_game, 462, 235, re | ae, Re) : this.buttons[u] = fT(202, 97, 0, [P.PLAY_BUTTON_OUT, P.PLAY_BUTTON_IN, P.PLAY_BUTTON_CLICK], 1, 0, this.play_game, 74, 235, re | se, Re),
                    this.buttons[u].view = p,
                    u++,
                    window.innerWidth > 1300 && (this.buttons[u] = fT(355, 168, 0, [P.CHANGELOG_BUTTON_OUT, P.CHANGELOG_BUTTON_OUT, P.CHANGELOG_BUTTON_OUT], 1, 0, (function() {
                        window.open("./changelog.html", "_blank")
                    }
                    ), -195, -115, de | se, Re),
                    this.buttons[u++].view = p),
                    this.buttons[u++] = fT(80, 80, 0, [P.DISCORD_BUTTON_OUT, P.DISCORD_BUTTON_IN, P.DISCORD_BUTTON_CLICK], 1, 0, 60, 10, oe, Re);
                    var Pe = u++;
                    this.buttons[Pe] = fT(232, 142, 0, [P.ICONS_BOTTOM_BG_BUTTON_OUT, P.ICONS_BOTTOM_BG_BUTTON_IN, P.ICONS_BOTTOM_BG_BUTTON_CLICK], 1, 0, (function() {
                        ne(l),
                        S(UI.LEADERBOARD_ALL, UI.LEADERBOARD_TOTAL, UI.LEADERBOARD_SCORE, UI.LEADERBOARD_SEASON5)
                    }
                    ), -5, 494, ae, Re),
                    this.buttons[u++] = fT(236, 165, 0, [P.LEADERBOARD_ICON, P.LEADERBOARD_ICON, P.LEADERBOARD_ICON], 1, 1, (function() {
                        ne(l)
                    }
                    ), -5, 494, ae, Re);
                    var we = u++;
                    this.buttons[we] = fT(236, 165, 0, [P.ICONS_BG_BUTTON_OUT, P.ICONS_BG_BUTTON_IN, P.ICONS_BG_BUTTON_CLICK], 1, 0, (function() {
                        ne(Z)
                    }
                    ), -5, 415, ae, Re),
                    this.buttons[u++] = fT(236, 165, 0, [P.SERVER_ACCESS_ICON, P.SERVER_ACCESS_ICON, P.SERVER_ACCESS_ICON], 1, 1, (function() {
                        ne(Z)
                    }
                    ), -5, 415, ae, Re);
                    var _e = u++;
                    this.buttons[_e] = fT(236, 165, 0, [P.ICONS_BG_BUTTON_OUT, P.ICONS_BG_BUTTON_IN, P.ICONS_BG_BUTTON_CLICK], 1, 0, (function() {
                        ne(g)
                    }
                    ), -5, 336, ae, Re),
                    this.buttons[u++] = fT(236, 165, 0, [P.SHOP_ICON, P.SHOP_ICON, P.SHOP_ICON], 1, 1, (function() {
                        ne(g)
                    }
                    ), -5, 336, ae, Re);
                    var fe = u++;
                    this.buttons[fe] = fT(236, 165, 0, [P.ICONS_BG_BUTTON_OUT, P.ICONS_BG_BUTTON_IN, P.ICONS_BG_BUTTON_CLICK], 1, 0, (function() {
                        ne(f)
                    }
                    ), -5, 257, ae, Re),
                    this.buttons[u++] = fT(236, 165, 0, [P.SKINS_ICON, P.SKINS_ICON, P.SKINS_ICON], 1, 1, (function() {
                        ne(f)
                    }
                    ), -5, 257, ae, Re);
                    var ge = u++;
                    this.buttons[ge] = fT(236, 165, 0, [P.ICONS_BG_BUTTON_OUT, P.ICONS_BG_BUTTON_IN, P.ICONS_BG_BUTTON_CLICK], 1, 0, (function() {
                        ne(p)
                    }
                    ), -5, 178, ae, Re),
                    this.buttons[u++] = fT(236, 165, 0, [P.START_ICON, P.START_ICON, P.START_ICON], 1, 1, (function() {
                        ne(p)
                    }
                    ), -5, 178, ae, Re);
                    var le = u++;
                    this.LOGIN_BUTTON = le,
                    this.buttons[le] = fT(324, 222, 0, [P.LOGIN_BUTTON_OUT, P.LOGIN_BUTTON_IN, P.LOGIN_BUTTON_CLICK], 1, 0, (function() {
                        ne(_)
                    }
                    ), 0, 70, ae, Re);
                    var Ae = u++
                      , be = u++;
                    if (this.PROFILE_BUTTON = Ae,
                    this.PROFILE_BUTTON_2 = be,
                    this.buttons[Ae] = fT(324, 222, 0, [P.PROFILE_BUTTON_OUT, P.PROFILE_BUTTON_IN, P.PROFILE_BUTTON_CLICK], 1, 0, (function() {
                        ne(w),
                        ke(-1)
                    }
                    ), 0, 70, ae, ye),
                    this.buttons[be] = fT(324, 222, 0, [P.PROFILE_ICON, P.PROFILE_ICON, P.PROFILE_ICON], 1, 1, (function() {
                        ne(w),
                        ke(-1)
                    }
                    ), 0, 70, ae, ye),
                    0 === client.privateServer) {
                        var Ne = u++;
                        window.innerWidth < 1300 ? this.buttons[Ne] = fT(266, 176, 0, [P.NORMAL_MODE_OUT, P.NORMAL_MODE_IN, P.NORMAL_MODE_CLICK], 1, 0, (function() {
                            client.select_gamemode(WORLD.MODE_PVP)
                        }
                        ), 150, 300, ae | re, Re) : this.buttons[Ne] = fT(266, 176, 0, [P.NORMAL_MODE_OUT, P.NORMAL_MODE_IN, P.NORMAL_MODE_CLICK], 1, 0, (function() {
                            client.select_gamemode(WORLD.MODE_PVP)
                        }
                        ), -200, 300, se | re, Re),
                        this.buttons[Ne].view = p,
                        this.buttons[Ne].hint = 0;
                        var ve = u++;
                        window.innerWidth < 1300 ? this.buttons[ve] = fT(266, 176, 0, [P.MODE_COMMUNITY_OUT, P.MODE_COMMUNITY_IN, P.MODE_COMMUNITY_CLICK], 1, 0, (function() {
                            client.select_gamemode(WORLD.MODE_COMMUNITY)
                        }
                        ), 450, 300, ae | re, Re) : this.buttons[ve] = fT(266, 176, 0, [P.MODE_COMMUNITY_OUT, P.MODE_COMMUNITY_IN, P.MODE_COMMUNITY_CLICK], 1, 0, (function() {
                            client.select_gamemode(WORLD.MODE_COMMUNITY)
                        }
                        ), -60, 300, se | re, Re),
                        this.buttons[ve].view = p,
                        this.buttons[ve].hint = 0;
                        var De = u++;
                        this.buttons[De] = fT(266, 176, 0, [P.MODE_EXPERIMENTAL_OUT, P.MODE_EXPERIMENTAL_IN, P.MODE_EXPERIMENTAL_CLICK], 1, 0, (function() {
                            client.select_gamemode(WORLD.MODE_EXPERIMENTAL)
                        }
                        ), window.innerWidth < 1300 ? 450 : 80, window.innerWidth < 1300 ? 400 : 300, (window.innerWidth < 1300 ? ae : se) | re, Re),
                        this.buttons[De].view = p,
                        this.buttons[De].hint = 0
                    }
                    this.buttons[u] = fT(87, 78, 0, [P.MODIFY_NAME_OUT, P.MODIFY_NAME_IN, P.MODIFY_NAME_CLICK], 1, 0, (function() {
                        UI.generate_new_nickname(),
                        0 === UI.firstName ? ne($) : ne(j)
                    }
                    ), 127, 110, se | re, ye),
                    this.buttons[u++].view = w,
                    this.buttons[u] = fT(87, 78, 0, [P.LOGOUT_OUT, P.LOGOUT_IN, P.LOGOUT_CLICK], 1, 0, (function() {
                        UI.kit = 0,
                        UI.bread = 0,
                        UI.score = 0,
                        user.login = "",
                        user.password = "",
                        UI.unlock_cosmetics(),
                        onUserLogout()
                    }
                    ), 255, 110, se | re, ye),
                    this.buttons[u++].view = w;
                    var Oe = 2e4;
                    function ke(e, t) {
                        if (void 0 !== t) {
                            UI.profile_season = t;
                            var i = UI.seasons[t];
                            UI.score = i.score,
                            UI.kill = i.kill,
                            UI.death = i.death,
                            UI.time = i.time,
                            UI.bestScore = i.bestScore,
                            UI.bestKill = i.bestKill,
                            UI.bestTime = i.bestTime,
                            UI.scoreTotal = i.scoreTotal
                        }
                        void 0 === e && (e = UI.current_mode_score),
                        void 0 !== e && -1 !== e || (e = 0),
                        UI.current_mode_score = e,
                        e <= 0 && (window.document.getElementById("stats_box_time").innerHTML = UI.time,
                        window.document.getElementById("stats_box_kill").innerHTML = UI.kill,
                        window.document.getElementById("stats_box_score").innerHTML = UI.score)
                    }
                    this.xp_formula = function(e) {
                        var t = UI.level_formula(e)
                          , i = t * t * Oe;
                        return (e -= i) / ((t + 1) * (t + 1) * Oe - i)
                    }
                    ,
                    this.level_formula = function(e) {
                        return window.Math.floor(window.Math.sqrt(e / Oe))
                    }
                    ,
                    this.update_score = function(e) {
                        UI.lvl = UI.level_formula(e),
                        UI.xp_dest = UI.xp_formula(e),
                        UI.xp = 0,
                        UI.score = e
                    }
                    ,
                    this.login_restore_data = function(e) {
                        UI.buttons[UI.LOGIN_BUTTON].info.active = 0,
                        UI.buttons[UI.PROFILE_BUTTON].info.active = 1,
                        UI.buttons[UI.PROFILE_BUTTON_2].info.active = 1,
                        I(),
                        e.name.indexOf("Starver#"),
                        window.document.getElementById("account_nickname_input").value = e.name,
                        UI.bread = e.bread;
                        var i = e.seasons
                          , a = i[i.length - 1];
                        UI.seasons = i,
                        n.update_score(a.score),
                        UI.score = a.score,
                        UI.kill = a.kill,
                        UI.death = a.death,
                        UI.time = a.time,
                        UI.bestScore = a.bestScore,
                        UI.bestKill = a.bestKill,
                        UI.bestTime = a.bestTime,
                        UI.scoreTotal = a.scoreTotal,
                        UI.firstName = e.firstName,
                        window.document.getElementById("serverAddressInput").value = t + "?server=" + e.privateServer,
                        void 0 === UI.firstName && (UI.firstName = 0),
                        UI.privateServerTime = Date.now() + e.privateServerTime,
                        window.Number(e.privateServerTime) > 0 && (UI.privateServerTime = Date.now() + window.Number(e.privateServerTime)),
                        UI.kit = Date.now() + e.kit,
                        window.Number(e.kit) > 0 && (UI.kit = Date.now() + window.Number(e.kit));
                        for (var T = Te.SKIN, o = 0; o < e.skins.length; o++) {
                            if (e.skins[o] > 0)
                                for (var r = 0; r < T.length; r++)
                                    T[r].id === o && (n.unlock.skin[r] = 1)
                        }
                        for (T = Te.ACCESSORY,
                        o = 0; o < e.accessories.length; o++) {
                            if (e.accessories[o] > 0)
                                for (r = 0; r < T.length; r++)
                                    T[r].id === o && (n.unlock.accessory[r] = 1)
                        }
                        for (T = Te.BOOK,
                        o = 0; o < e.books.length; o++) {
                            if (e.books[o] > 0)
                                for (r = 0; r < T.length; r++)
                                    T[r].id === o && (n.unlock.book[r] = 1)
                        }
                        for (T = Te.BAG,
                        o = 0; o < e.bags.length; o++) {
                            if (e.bags[o] > 0)
                                for (r = 0; r < T.length; r++)
                                    T[r].id === o && (n.unlock.bag[r] = 1)
                        }
                        for (T = Te.CRATE,
                        o = 0; o < e.crates.length; o++) {
                            if (e.crates[o] > 0)
                                for (r = 0; r < T.length; r++)
                                    T[r].id === o && (n.unlock.crate[r] = 1,
                                    n.unlock.dead[r] = 1)
                        }
                    }
                    ,
                    this.login_after = function() {
                        window.onUserLogin = function() {
                            ne(p),
                            (async () => {
                                const e = await fetch(t + "login?login=" + user.login);
                                await e.json()
                            }
                            )(n.login_restore_data)
                        }
                        ,
                        1 === JT && window.onUserLogin()
                    }
                    ,
                    window.onUserLogout = function() {
                        UI.buttons[UI.LOGIN_BUTTON].info.active = 1,
                        UI.buttons[UI.PROFILE_BUTTON].info.active = 0,
                        UI.buttons[UI.PROFILE_BUTTON_2].info.active = 0,
                        ne(p)
                    }
                    ,
                    this.isUserLogged = function() {
                        return UI.buttons[UI.PROFILE_BUTTON].info.active
                    }
                    ,
                    this.buttons[u] = fT(461, 105, 0, [P.GET_MORE_BUTTON_OUT, P.GET_MORE_BUTTON_IN, P.GET_MORE_BUTTON_CLICK], 1, 0, (function() {
                        n.isUserLogged() ? ne(A) : ne(_)
                    }
                    ), -100, 80, se | re, ye),
                    this.buttons[u++].view = g,
                    this.LEADERBOARD_LEVEL = u,
                    this.buttons[u] = fT(97, 66, 0, [P.LVL_LEADERBOARD_OUT, P.LVL_LEADERBOARD_IN, P.LVL_LEADERBOARD_CLICK], 1, 0, (function() {}
                    ), -14, 151, se | re, ye),
                    this.buttons[u++].view = l,
                    this.LEADERBOARD_KILL = u,
                    this.buttons[u] = fT(135, 66, 0, [P.KILL_LEADERBOARD_OUT, P.KILL_LEADERBOARD_IN, P.KILL_LEADERBOARD_CLICK], 1, 0, (function() {
                        S(void 0, void 0, UI.LEADERBOARD_KILL)
                    }
                    ), 37.5, 151, se | re, ye),
                    this.buttons[u++].view = l,
                    this.LEADERBOARD_TIME = u,
                    this.buttons[u] = fT(160, 66, 0, [P.TIME_LEADERBOARD_OUT, P.TIME_LEADERBOARD_IN, P.TIME_LEADERBOARD_CLICK], 1, 0, (function() {
                        S(void 0, void 0, UI.LEADERBOARD_TIME)
                    }
                    ), 107.5, 151, se | re, ye),
                    this.buttons[u++].view = l,
                    this.LEADERBOARD_SCORE = u,
                    this.buttons[u] = fT(207, 66, 0, [P.SCORE_LEADERBOARD_OUT, P.SCORE_LEADERBOARD_IN, P.SCORE_LEADERBOARD_CLICK], 1, 0, (function() {
                        S(void 0, void 0, UI.LEADERBOARD_SCORE)
                    }
                    ), 190.5, 151, se | re, ye),
                    this.buttons[u++].view = l,
                    this.LEADERBOARD_TODAY = u,
                    this.buttons[u] = fT(144, 66, 0, [P.TODAY_LEADERBOARD_OUT, P.TODAY_LEADERBOARD_IN, P.TODAY_LEADERBOARD_CLICK], 1, 0, (function() {
                        S(UI.LEADERBOARD_TODAY)
                    }
                    ), 103.5, 110, se | re, ye),
                    this.buttons[u++].view = l,
                    this.LEADERBOARD_WEEK = u,
                    this.buttons[u] = fT(124, 66, 0, [P.WEEK_LEADERBOARD_OUT, P.WEEK_LEADERBOARD_IN, P.WEEK_LEADERBOARD_CLICK], 1, 0, (function() {
                        S(UI.LEADERBOARD_WEEK)
                    }
                    ), 177.5, 110, se | re, ye),
                    this.buttons[u++].view = l,
                    this.LEADERBOARD_ALL = u,
                    this.buttons[u] = fT(104, 66, 0, [P.ALL_LEADERBOARD_OUT, P.ALL_LEADERBOARD_IN, P.ALL_LEADERBOARD_CLICK], 1, 0, (function() {
                        S(UI.LEADERBOARD_ALL)
                    }
                    ), 242, 110, se | re, ye),
                    this.buttons[u++].view = l,
                    this.LEADERBOARD_SEASON1 = u,
                    this.buttons[u] = fT(183, 66, 0, [P.SEASON1_LEADERBOARD_OUT, P.SEASON1_LEADERBOARD_IN, P.SEASON1_LEADERBOARD_CLICK], 1, 0, (function() {
                        S(void 0, void 0, void 0, UI.LEADERBOARD_SEASON1)
                    }
                    ), -290, 521, se | re, ye),
                    this.buttons[u++].view = l,
                    this.buttons[u] = fT(232, 352, 0, [P.CURRENCY1_OUT, P.CURRENCY1_IN, P.CURRENCY1_CLICK], 1, 0, (function() {}
                    ), -330, 135, se | re, ye),
                    this.buttons[u++].view = A,
                    this.buttons[u] = fT(232, 352, 0, [P.CURRENCY2_OUT, P.CURRENCY2_IN, P.CURRENCY2_CLICK], 1, 0, (function() {}
                    ), -195, 135, se | re, ye),
                    this.buttons[u++].view = A,
                    this.buttons[u] = fT(243, 374, 0, [P.CURRENCY3_OUT, P.CURRENCY3_IN, P.CURRENCY3_CLICK], 1, 0, (function() {}
                    ), -60, 130, se | re, ye),
                    this.buttons[u++].view = A,
                    this.buttons[u] = fT(232, 352, 0, [P.CURRENCY4_OUT, P.CURRENCY4_IN, P.CURRENCY4_CLICK], 1, 0, (function() {}
                    ), 78, 135, se | re, ye),
                    this.buttons[u++].view = A,
                    this.buttons[u] = fT(243, 374, 0, [P.CURRENCY5_OUT, P.CURRENCY5_IN, P.CURRENCY5_CLICK], 1, 0, (function() {}
                    ), 213, 130, se | re, ye),
                    this.buttons[u++].view = A,
                    this.buttons[u] = fT(58, 64, 0, [P.CLOSE_BUTTON_OUT, P.CLOSE_BUTTON_IN, P.CLOSE_BUTTON_CLICK], 1, 0, (function() {
                        ne(g)
                    }
                    ), 300, 88, se | re, ye),
                    this.buttons[u++].view = A,
                    this.buttons[u] = fT(323, 112, 0, [P.SKIN_BUTTON_OUT, P.SKIN_BUTTON_IN, P.SKIN_BUTTON_CLICK], 1, 0, (function() {
                        ne(G),
                        We.initSelector()
                    }
                    ), -315, 185, se | re, ye),
                    this.buttons[u++].view = f,
                    this.buttons[u] = fT(323, 112, 0, [P.ACCESSORY_BUTTON_OUT, P.ACCESSORY_BUTTON_IN, P.ACCESSORY_BUTTON_CLICK], 1, 0, (function() {
                        ne(X),
                        Xe.initSelector()
                    }
                    ), -315, 321, se | re, ye),
                    this.buttons[u++].view = f,
                    this.buttons[u] = fT(323, 112, 0, [P.BAG_BUTTON_OUT, P.BAG_BUTTON_IN, P.BAG_BUTTON_CLICK], 1, 0, (function() {
                        ne(F),
                        Fe.initSelector()
                    }
                    ), 153, 185, se | re, ye),
                    this.buttons[u++].view = f,
                    this.buttons[u] = fT(323, 112, 0, [P.BOOK_BUTTON_OUT, P.BOOK_BUTTON_IN, P.BOOK_BUTTON_CLICK], 1, 0, (function() {
                        ne(x),
                        xe.initSelector()
                    }
                    ), 153, 321, se | re, ye),
                    this.buttons[u++].view = f,
                    this.buttons[u] = fT(323, 112, 0, [P.CRATE_BUTTON_OUT, P.CRATE_BUTTON_IN, P.CRATE_BUTTON_CLICK], 1, 0, (function() {
                        ne(W),
                        Ve.initSelector()
                    }
                    ), 153, 463, se | re, ye),
                    this.buttons[u++].view = f,
                    this.buttons[u] = fT(323, 112, 0, [P.LOOT_BUTTON_OUT, P.LOOT_BUTTON_IN, P.LOOT_BUTTON_CLICK], 1, 0, (function() {
                        ne(z),
                        Ue.initSelector()
                    }
                    ), -315, 463, se | re, ye),
                    this.buttons[u++].view = f,
                    this.buttons[u] = fT(130, 129, 0, [P.SHOP_BUTTON_OUT, P.SHOP_BUTTON_IN, P.SHOP_BUTTON_CLICK], 1, 0, (function() {
                        te(b, ye, "none"),
                        ne(g)
                    }
                    ), 10, 40, se | re, ye),
                    this.buttons[u++].view = b,
                    this.buttons[u] = fT(130, 129, 0, [P.SHOP_BUTTON_OUT, P.SHOP_BUTTON_IN, P.SHOP_BUTTON_CLICK], 1, 0, (function() {
                        te(v, ye, "none"),
                        ne(g)
                    }
                    ), 10, 40, se | re, ye),
                    this.buttons[u++].view = v,
                    this.buttons[u] = fT(115, 73, 0, [P.BACK_BUTTON_OUT, P.BACK_BUTTON_IN, P.BACK_BUTTON_CLICK], 1, 0, (function() {
                        ne(g)
                    }
                    ), 200, 140, se | re, ye),
                    this.buttons[u++].view = Z,
                    this.buttons[u] = fT(253, 110, 0, [P.ATLANTA_OUT, P.ATLANTA_IN, P.ATLANTA_CLICK], 1, 0, (function() {
                        s("Atlanta")
                    }
                    ), -265, 300, se | re, ye),
                    this.buttons[u++].view = Z,
                    this.buttons[u] = fT(253, 110, 0, [P.DALLAS_OUT, P.DALLAS_IN, P.DALLAS_CLICK], 1, 0, (function() {
                        s("Dallas")
                    }
                    ), -130, 300, se | re, ye),
                    this.buttons[u++].view = Z,
                    this.buttons[u] = fT(253, 110, 0, [P.FREMONT_OUT, P.FREMONT_IN, P.FREMONT_CLICK], 1, 0, (function() {
                        s("Fremont")
                    }
                    ), 5, 300, se | re, ye),
                    this.buttons[u++].view = Z,
                    this.buttons[u] = fT(253, 110, 0, [P.NEWARK_OUT, P.NEWARK_IN, P.NEWARK_CLICK], 1, 0, (function() {
                        s("Newark")
                    }
                    ), 140, 300, se | re, ye),
                    this.buttons[u++].view = Z,
                    this.buttons[u] = fT(253, 110, 0, [P.LONDON_OUT, P.LONDON_IN, P.LONDON_CLICK], 1, 0, (function() {
                        s("London")
                    }
                    ), -265, 365, se | re, ye),
                    this.buttons[u++].view = Z,
                    this.buttons[u] = fT(253, 110, 0, [P.FRANKFURT_OUT, P.FRANKFURT_IN, P.FRANKFURT_CLICK], 1, 0, (function() {
                        s("Frankfurt")
                    }
                    ), -130, 365, se | re, ye),
                    this.buttons[u++].view = Z,
                    this.buttons[u] = fT(253, 110, 0, [P.SINGAPORE_OUT, P.SINGAPORE_IN, P.SINGAPORE_CLICK], 1, 0, (function() {
                        s("Singapore")
                    }
                    ), 5, 365, se | re, ye),
                    this.buttons[u++].view = Z,
                    this.buttons[u] = fT(253, 110, 0, [P.TOKYO_OUT, P.TOKYO_IN, P.TOKYO_CLICK], 1, 0, (function() {
                        s("Tokyo")
                    }
                    ), 140, 365, se | re, ye),
                    this.buttons[u++].view = Z,
                    this.buttons[u] = fT(253, 110, 0, [P.TORONTO_OUT, P.TORONTO_IN, P.TORONTO_CLICK], 1, 0, (function() {
                        s("Toronto")
                    }
                    ), -265, 430, se | re, ye),
                    this.buttons[u++].view = Z,
                    this.buttons[u] = fT(253, 110, 0, [P.MUMBAI_OUT, P.MUMBAI_IN, P.MUMBAI_CLICK], 1, 0, (function() {
                        s("Mumbai")
                    }
                    ), -130, 430, se | re, ye),
                    this.buttons[u++].view = Z,
                    this.buttons[u] = fT(115, 73, 0, [P.BACK_BUTTON_OUT, P.BACK_BUTTON_IN, P.BACK_BUTTON_CLICK], 1, 0, (function() {
                        ne(Z)
                    }
                    ), 230, 140, se | re, ye),
                    this.buttons[u++].view = J,
                    this.buttons[u] = fT(230, 352, 0, [P.DAYS3_OUT, P.DAYS3_IN, P.DAYS3_CLICK], 1, 0, (function() {}
                    ), -280, 240, se | re, ye),
                    this.buttons[u++].view = J,
                    this.buttons[u] = fT(230, 352, 0, [P.DAYS7_OUT, P.DAYS7_IN, P.DAYS7_CLICK], 1, 0, (function() {}
                    ), -130, 240, se | re, ye),
                    this.buttons[u++].view = J,
                    this.buttons[u] = fT(230, 352, 0, [P.DAYS30_OUT, P.DAYS30_IN, P.DAYS30_CLICK], 1, 0, (function() {}
                    ), 20, 240, se | re, ye),
                    this.buttons[u++].view = J,
                    this.buttons[u] = fT(230, 352, 0, [P.DAYS90_OUT, P.DAYS90_IN, P.DAYS90_CLICK], 1, 0, (function() {}
                    ), 170, 240, se | re, ye),
                    this.buttons[u++].view = J,
                    this.buttons[u] = fT(105, 119, 0, [P.COPY_PASTE_OUT, P.COPY_PASTE_IN, P.COPY_PASTE_CLICK], 1, 0, (function() {
                        window.document.getElementById("serverAddressInput").select(),
                        window.document.execCommand("copy")
                    }
                    ), 170, 310, se | re, ye),
                    this.buttons[u++].view = Q,
                    this.buttons[u] = fT(105, 119, 0, [P.RESTART_OUT, P.RESTART_IN, P.RESTART_CLICK], 1, 0, (function() {
                        (async () => {
                            const e = await fetch(t + "rebootServer?login=" + user.login + "&password=" + user.password);
                            if (200 !== e.status)
                                return client.new_alert(e.status + " error");
                            location.href = window.document.getElementById("serverAddressInput").value
                        }
                        )()
                    }
                    ), 235, 310, se | re, ye),
                    this.buttons[u++].view = Q,
                    this.buttons[u] = fT(204, 115, 0, [P.GUIDE_OUT, P.GUIDE_IN, P.GUIDE_CLICK], 1, 0, (function() {
                        window.open("./commands.html", "_blank")
                    }
                    ), -265, 490, se | re, ye),
                    this.buttons[u++].view = Q,
                    this.buttons[u] = fT(145, 69, 0, [P.PRICE5_OUT, P.PRICE5_IN, P.PRICE5_CLICK], 1, 0, (function() {
                        ne(D)
                    }
                    ), -210, 170, se | re, ye),
                    this.buttons[u++].view = g,
                    this.buttons[u] = fT(145, 69, 0, [P.PRICE1_OUT, P.PRICE1_IN, P.PRICE1_CLICK], 1, 0, (function() {
                        ne(C)
                    }
                    ), 70, 170, se | re, ye),
                    this.buttons[u++].view = g,
                    this.buttons[u] = fT(145, 69, 0, [P.PRICE2_OUT, P.PRICE2_IN, P.PRICE2_CLICK], 1, 0, (function() {
                        ne(O)
                    }
                    ), 70, 204, se | re, ye),
                    this.buttons[u++].view = g,
                    this.buttons[u] = fT(145, 69, 0, [P.PRICE3_OUT, P.PRICE3_IN, P.PRICE3_CLICK], 1, 0, (function() {
                        ne(H)
                    }
                    ), -210, 204, se | re, ye),
                    this.buttons[u++].view = g,
                    this.buttons[u] = fT(145, 69, 0, [P.PRICE3_OUT, P.PRICE3_IN, P.PRICE3_CLICK], 1, 0, (function() {
                        ne(K)
                    }
                    ), 70, 238, se | re, ye),
                    this.buttons[u++].view = g,
                    this.buttons[u] = fT(145, 69, 0, [P.PRICE3_OUT, P.PRICE3_IN, P.PRICE3_CLICK], 1, 0, (function() {
                        n.isUserLogged() ? m(0, 300) : ne(_)
                    }
                    ), 307, 205, se | re, ye),
                    this.buttons[u++].view = g,
                    this.buttons[u] = fT(145, 69, 0, [P.PRICE4_OUT, P.PRICE4_IN, P.PRICE4_CLICK], 1, 0, (function() {
                        ne(k)
                    }
                    ), -210, 238, se | re, ye),
                    this.buttons[u++].view = g,
                    this.buttons[u] = fT(145, 69, 0, [P.PRICE4_OUT, P.PRICE4_IN, P.PRICE4_CLICK], 1, 0, (function() {
                        n.isUserLogged() ? m(1, 600) : ne(_)
                    }
                    ), 307, 239, se | re, ye),
                    this.buttons[u++].view = g,
                    this.buttons[u] = fT(192, 101, 0, [P.YES_BUTTON_OUT, P.YES_BUTTON_IN, P.YES_BUTTON_CLICK], 1, 0, (function() {
                        E()
                    }
                    ), -100, 250, se | re, ye),
                    this.buttons[u++].view = $,
                    this.buttons[u] = fT(192, 104, 0, [P.YES_300_BUTTON_OUT, P.YES_300_BUTTON_IN, P.YES_300_BUTTON_CLICK], 1, 0, (function() {
                        E()
                    }
                    ), -100, 239, se | re, ye),
                    this.buttons[u++].view = j,
                    this.buttons[u] = fT(192, 101, 0, [P.NO_BUTTON_OUT, P.NO_BUTTON_IN, P.NO_BUTTON_CLICK], 1, 0, (function() {
                        ne(w)
                    }
                    ), 10, 250, se | re, ye),
                    this.buttons[u++].view = $,
                    this.buttons[u] = fT(192, 104, 0, [P.NO_THANKS_BUTTON_OUT, P.NO_THANKS_BUTTON_IN, P.NO_THANKS_BUTTON_CLICK], 1, 0, (function() {
                        ne(w)
                    }
                    ), 10, 239, se | re, ye),
                    this.buttons[u++].view = j;
                    var Ce = [];
                    Ce[RARITY.FREE] = [P.FREE_ITEM_OUT, P.FREE_ITEM_IN, P.FREE_ITEM_CLICK],
                    Ce[RARITY.WOOD] = [P.WOOD_ITEM_OUT, P.WOOD_ITEM_IN, P.WOOD_ITEM_CLICK],
                    Ce[RARITY.STONE] = [P.STONE_ITEM_OUT, P.STONE_ITEM_IN, P.STONE_ITEM_CLICK],
                    Ce[RARITY.GOLD] = [P.GOLD_ITEM_OUT, P.GOLD_ITEM_IN, P.GOLD_ITEM_CLICK],
                    Ce[RARITY.DIAMOND] = [P.DIAMOND_ITEM_OUT, P.DIAMOND_ITEM_IN, P.DIAMOND_ITEM_CLICK],
                    Ce[RARITY.AMETHYST] = [P.AMETHYST_ITEM_OUT, P.AMETHYST_ITEM_IN, P.AMETHYST_ITEM_CLICK],
                    Ce[RARITY.REIDITE] = [P.REIDITE_ITEM_OUT, P.REIDITE_ITEM_IN, P.REIDITE_ITEM_CLICK],
                    Ce[RARITY.LEVEL] = [P.LEVEL_ITEM_OUT, P.LEVEL_ITEM_IN, P.LEVEL_ITEM_CLICK],
                    Ce[RARITY.SPECIAL] = [P.SPECIAL_ITEM_OUT, P.SPECIAL_ITEM_IN, P.SPECIAL_ITEM_CLICK];
                    let Le = u;
                    this.buttons[u] = fT(178, 182, 0, [P.WOOD_ITEM_OUT, P.WOOD_ITEM_IN, P.WOOD_ITEM_CLICK], 1, 0, void 0, -29, 205, se | re, ye),
                    this.buttons[u++].view = G,
                    this.buttons[u] = fT(178, 182, 0, [P.WOOD_ITEM_OUT, P.WOOD_ITEM_IN, P.WOOD_ITEM_CLICK], 1, 0, void 0, -29, 300, se | re, ye),
                    this.buttons[u++].view = G,
                    this.buttons[u] = fT(178, 182, 0, [P.WOOD_ITEM_OUT, P.WOOD_ITEM_IN, P.WOOD_ITEM_CLICK], 1, 0, void 0, -29, 395, se | re, ye),
                    this.buttons[u++].view = G,
                    this.buttons[u] = fT(178, 182, 0, [P.WOOD_ITEM_OUT, P.WOOD_ITEM_IN, P.WOOD_ITEM_CLICK], 1, 0, void 0, 65, 205, se | re, ye),
                    this.buttons[u++].view = G,
                    this.buttons[u] = fT(178, 182, 0, [P.WOOD_ITEM_OUT, P.WOOD_ITEM_IN, P.WOOD_ITEM_CLICK], 1, 0, void 0, 65, 300, se | re, ye),
                    this.buttons[u++].view = G,
                    this.buttons[u] = fT(178, 182, 0, [P.WOOD_ITEM_OUT, P.WOOD_ITEM_IN, P.WOOD_ITEM_CLICK], 1, 0, void 0, 65, 395, se | re, ye),
                    this.buttons[u++].view = G,
                    this.buttons[u] = fT(178, 182, 0, [P.WOOD_ITEM_OUT, P.WOOD_ITEM_IN, P.WOOD_ITEM_CLICK], 1, 0, void 0, 159, 205, se | re, ye),
                    this.buttons[u++].view = G,
                    this.buttons[u] = fT(178, 182, 0, [P.WOOD_ITEM_OUT, P.WOOD_ITEM_IN, P.WOOD_ITEM_CLICK], 1, 0, void 0, 159, 300, se | re, ye),
                    this.buttons[u++].view = G,
                    this.buttons[u] = fT(178, 182, 0, [P.WOOD_ITEM_OUT, P.WOOD_ITEM_IN, P.WOOD_ITEM_CLICK], 1, 0, void 0, 159, 395, se | re, ye),
                    this.buttons[u++].view = G,
                    this.buttons[u] = fT(39, 122, 0, [P.SKIN_PREVIOUS_OUT, P.SKIN_PREVIOUS_IN, P.SKIN_PREVIOUS_CLICK], 1, 0, void 0, -61, 315, se | re, ye),
                    this.buttons[u++].view = G,
                    this.buttons[u] = fT(39, 122, 0, [P.SKIN_NEXT_OUT, P.SKIN_NEXT_IN, P.SKIN_NEXT_CLICK], 1, 0, void 0, 260, 315, se | re, ye),
                    this.buttons[u++].view = G,
                    this.buttons[u] = fT(115, 73, 0, [P.BACK_BUTTON_OUT, P.BACK_BUTTON_IN, P.BACK_BUTTON_CLICK], 1, 0, (function() {
                        ne(f)
                    }
                    ), -320, 470, se | re, ye),
                    this.buttons[u++].view = G;
                    let Be = u;
                    this.buttons[u] = fT(178, 182, 0, [P.WOOD_ITEM_OUT, P.WOOD_ITEM_IN, P.WOOD_ITEM_CLICK], 1, 0, void 0, -29, 205, se | re, ye),
                    this.buttons[u++].view = X,
                    this.buttons[u] = fT(178, 182, 0, [P.WOOD_ITEM_OUT, P.WOOD_ITEM_IN, P.WOOD_ITEM_CLICK], 1, 0, void 0, -29, 300, se | re, ye),
                    this.buttons[u++].view = X,
                    this.buttons[u] = fT(178, 182, 0, [P.WOOD_ITEM_OUT, P.WOOD_ITEM_IN, P.WOOD_ITEM_CLICK], 1, 0, void 0, -29, 395, se | re, ye),
                    this.buttons[u++].view = X,
                    this.buttons[u] = fT(178, 182, 0, [P.WOOD_ITEM_OUT, P.WOOD_ITEM_IN, P.WOOD_ITEM_CLICK], 1, 0, void 0, 65, 205, se | re, ye),
                    this.buttons[u++].view = X,
                    this.buttons[u] = fT(178, 182, 0, [P.WOOD_ITEM_OUT, P.WOOD_ITEM_IN, P.WOOD_ITEM_CLICK], 1, 0, void 0, 65, 300, se | re, ye),
                    this.buttons[u++].view = X,
                    this.buttons[u] = fT(178, 182, 0, [P.WOOD_ITEM_OUT, P.WOOD_ITEM_IN, P.WOOD_ITEM_CLICK], 1, 0, void 0, 65, 395, se | re, ye),
                    this.buttons[u++].view = X,
                    this.buttons[u] = fT(178, 182, 0, [P.WOOD_ITEM_OUT, P.WOOD_ITEM_IN, P.WOOD_ITEM_CLICK], 1, 0, void 0, 159, 205, se | re, ye),
                    this.buttons[u++].view = X,
                    this.buttons[u] = fT(178, 182, 0, [P.WOOD_ITEM_OUT, P.WOOD_ITEM_IN, P.WOOD_ITEM_CLICK], 1, 0, void 0, 159, 300, se | re, ye),
                    this.buttons[u++].view = X,
                    this.buttons[u] = fT(178, 182, 0, [P.WOOD_ITEM_OUT, P.WOOD_ITEM_IN, P.WOOD_ITEM_CLICK], 1, 0, void 0, 159, 395, se | re, ye),
                    this.buttons[u++].view = X,
                    this.buttons[u] = fT(39, 122, 0, [P.SKIN_PREVIOUS_OUT, P.SKIN_PREVIOUS_IN, P.SKIN_PREVIOUS_CLICK], 1, 0, void 0, -61, 315, se | re, ye),
                    this.buttons[u++].view = X,
                    this.buttons[u] = fT(39, 122, 0, [P.SKIN_NEXT_OUT, P.SKIN_NEXT_IN, P.SKIN_NEXT_CLICK], 1, 0, void 0, 260, 315, se | re, ye),
                    this.buttons[u++].view = X,
                    this.buttons[u] = fT(115, 73, 0, [P.BACK_BUTTON_OUT, P.BACK_BUTTON_IN, P.BACK_BUTTON_CLICK], 1, 0, (function() {
                        ne(f)
                    }
                    ), -320, 470, se | re, ye),
                    this.buttons[u++].view = X;
                    let Me = u;
                    this.buttons[u] = fT(178, 182, 0, [P.WOOD_ITEM_OUT, P.WOOD_ITEM_IN, P.WOOD_ITEM_CLICK], 1, 0, void 0, -29, 205, se | re, ye),
                    this.buttons[u++].view = z,
                    this.buttons[u] = fT(178, 182, 0, [P.WOOD_ITEM_OUT, P.WOOD_ITEM_IN, P.WOOD_ITEM_CLICK], 1, 0, void 0, -29, 300, se | re, ye),
                    this.buttons[u++].view = z,
                    this.buttons[u] = fT(178, 182, 0, [P.WOOD_ITEM_OUT, P.WOOD_ITEM_IN, P.WOOD_ITEM_CLICK], 1, 0, void 0, -29, 395, se | re, ye),
                    this.buttons[u++].view = z,
                    this.buttons[u] = fT(178, 182, 0, [P.WOOD_ITEM_OUT, P.WOOD_ITEM_IN, P.WOOD_ITEM_CLICK], 1, 0, void 0, 65, 205, se | re, ye),
                    this.buttons[u++].view = z,
                    this.buttons[u] = fT(178, 182, 0, [P.WOOD_ITEM_OUT, P.WOOD_ITEM_IN, P.WOOD_ITEM_CLICK], 1, 0, void 0, 65, 300, se | re, ye),
                    this.buttons[u++].view = z,
                    this.buttons[u] = fT(178, 182, 0, [P.WOOD_ITEM_OUT, P.WOOD_ITEM_IN, P.WOOD_ITEM_CLICK], 1, 0, void 0, 65, 395, se | re, ye),
                    this.buttons[u++].view = z,
                    this.buttons[u] = fT(178, 182, 0, [P.WOOD_ITEM_OUT, P.WOOD_ITEM_IN, P.WOOD_ITEM_CLICK], 1, 0, void 0, 159, 205, se | re, ye),
                    this.buttons[u++].view = z,
                    this.buttons[u] = fT(178, 182, 0, [P.WOOD_ITEM_OUT, P.WOOD_ITEM_IN, P.WOOD_ITEM_CLICK], 1, 0, void 0, 159, 300, se | re, ye),
                    this.buttons[u++].view = z,
                    this.buttons[u] = fT(178, 182, 0, [P.WOOD_ITEM_OUT, P.WOOD_ITEM_IN, P.WOOD_ITEM_CLICK], 1, 0, void 0, 159, 395, se | re, ye),
                    this.buttons[u++].view = z,
                    this.buttons[u] = fT(39, 122, 0, [P.SKIN_PREVIOUS_OUT, P.SKIN_PREVIOUS_IN, P.SKIN_PREVIOUS_CLICK], 1, 0, void 0, -61, 315, se | re, ye),
                    this.buttons[u++].view = z,
                    this.buttons[u] = fT(39, 122, 0, [P.SKIN_NEXT_OUT, P.SKIN_NEXT_IN, P.SKIN_NEXT_CLICK], 1, 0, void 0, 260, 315, se | re, ye),
                    this.buttons[u++].view = z,
                    this.buttons[u] = fT(115, 73, 0, [P.BACK_BUTTON_OUT, P.BACK_BUTTON_IN, P.BACK_BUTTON_CLICK], 1, 0, (function() {
                        ne(f)
                    }
                    ), -320, 470, se | re, ye),
                    this.buttons[u++].view = z;
                    let Ye = u;
                    this.buttons[u] = fT(178, 182, 0, [P.WOOD_ITEM_OUT, P.WOOD_ITEM_IN, P.WOOD_ITEM_CLICK], 1, 0, void 0, -29, 205, se | re, ye),
                    this.buttons[u++].view = F,
                    this.buttons[u] = fT(178, 182, 0, [P.WOOD_ITEM_OUT, P.WOOD_ITEM_IN, P.WOOD_ITEM_CLICK], 1, 0, void 0, -29, 300, se | re, ye),
                    this.buttons[u++].view = F,
                    this.buttons[u] = fT(178, 182, 0, [P.WOOD_ITEM_OUT, P.WOOD_ITEM_IN, P.WOOD_ITEM_CLICK], 1, 0, void 0, -29, 395, se | re, ye),
                    this.buttons[u++].view = F,
                    this.buttons[u] = fT(178, 182, 0, [P.WOOD_ITEM_OUT, P.WOOD_ITEM_IN, P.WOOD_ITEM_CLICK], 1, 0, void 0, 65, 205, se | re, ye),
                    this.buttons[u++].view = F,
                    this.buttons[u] = fT(178, 182, 0, [P.WOOD_ITEM_OUT, P.WOOD_ITEM_IN, P.WOOD_ITEM_CLICK], 1, 0, void 0, 65, 300, se | re, ye),
                    this.buttons[u++].view = F,
                    this.buttons[u] = fT(178, 182, 0, [P.WOOD_ITEM_OUT, P.WOOD_ITEM_IN, P.WOOD_ITEM_CLICK], 1, 0, void 0, 65, 395, se | re, ye),
                    this.buttons[u++].view = F,
                    this.buttons[u] = fT(178, 182, 0, [P.WOOD_ITEM_OUT, P.WOOD_ITEM_IN, P.WOOD_ITEM_CLICK], 1, 0, void 0, 159, 205, se | re, ye),
                    this.buttons[u++].view = F,
                    this.buttons[u] = fT(178, 182, 0, [P.WOOD_ITEM_OUT, P.WOOD_ITEM_IN, P.WOOD_ITEM_CLICK], 1, 0, void 0, 159, 300, se | re, ye),
                    this.buttons[u++].view = F,
                    this.buttons[u] = fT(178, 182, 0, [P.WOOD_ITEM_OUT, P.WOOD_ITEM_IN, P.WOOD_ITEM_CLICK], 1, 0, void 0, 159, 395, se | re, ye),
                    this.buttons[u++].view = F,
                    this.buttons[u] = fT(39, 122, 0, [P.SKIN_PREVIOUS_OUT, P.SKIN_PREVIOUS_IN, P.SKIN_PREVIOUS_CLICK], 1, 0, void 0, -61, 315, se | re, ye),
                    this.buttons[u++].view = F,
                    this.buttons[u] = fT(39, 122, 0, [P.SKIN_NEXT_OUT, P.SKIN_NEXT_IN, P.SKIN_NEXT_CLICK], 1, 0, void 0, 260, 315, se | re, ye),
                    this.buttons[u++].view = F,
                    this.buttons[u] = fT(115, 73, 0, [P.BACK_BUTTON_OUT, P.BACK_BUTTON_IN, P.BACK_BUTTON_CLICK], 1, 0, (function() {
                        ne(f)
                    }
                    ), -320, 470, se | re, ye),
                    this.buttons[u++].view = F;
                    let He = u;
                    this.buttons[u] = fT(178, 182, 0, [P.WOOD_ITEM_OUT, P.WOOD_ITEM_IN, P.WOOD_ITEM_CLICK], 1, 0, void 0, -29, 205, se | re, ye),
                    this.buttons[u++].view = x,
                    this.buttons[u] = fT(178, 182, 0, [P.WOOD_ITEM_OUT, P.WOOD_ITEM_IN, P.WOOD_ITEM_CLICK], 1, 0, void 0, -29, 300, se | re, ye),
                    this.buttons[u++].view = x,
                    this.buttons[u] = fT(178, 182, 0, [P.WOOD_ITEM_OUT, P.WOOD_ITEM_IN, P.WOOD_ITEM_CLICK], 1, 0, void 0, -29, 395, se | re, ye),
                    this.buttons[u++].view = x,
                    this.buttons[u] = fT(178, 182, 0, [P.WOOD_ITEM_OUT, P.WOOD_ITEM_IN, P.WOOD_ITEM_CLICK], 1, 0, void 0, 65, 205, se | re, ye),
                    this.buttons[u++].view = x,
                    this.buttons[u] = fT(178, 182, 0, [P.WOOD_ITEM_OUT, P.WOOD_ITEM_IN, P.WOOD_ITEM_CLICK], 1, 0, void 0, 65, 300, se | re, ye),
                    this.buttons[u++].view = x,
                    this.buttons[u] = fT(178, 182, 0, [P.WOOD_ITEM_OUT, P.WOOD_ITEM_IN, P.WOOD_ITEM_CLICK], 1, 0, void 0, 65, 395, se | re, ye),
                    this.buttons[u++].view = x,
                    this.buttons[u] = fT(178, 182, 0, [P.WOOD_ITEM_OUT, P.WOOD_ITEM_IN, P.WOOD_ITEM_CLICK], 1, 0, void 0, 159, 205, se | re, ye),
                    this.buttons[u++].view = x,
                    this.buttons[u] = fT(178, 182, 0, [P.WOOD_ITEM_OUT, P.WOOD_ITEM_IN, P.WOOD_ITEM_CLICK], 1, 0, void 0, 159, 300, se | re, ye),
                    this.buttons[u++].view = x,
                    this.buttons[u] = fT(178, 182, 0, [P.WOOD_ITEM_OUT, P.WOOD_ITEM_IN, P.WOOD_ITEM_CLICK], 1, 0, void 0, 159, 395, se | re, ye),
                    this.buttons[u++].view = x,
                    this.buttons[u] = fT(39, 122, 0, [P.SKIN_PREVIOUS_OUT, P.SKIN_PREVIOUS_IN, P.SKIN_PREVIOUS_CLICK], 1, 0, void 0, -61, 315, se | re, ye),
                    this.buttons[u++].view = x,
                    this.buttons[u] = fT(39, 122, 0, [P.SKIN_NEXT_OUT, P.SKIN_NEXT_IN, P.SKIN_NEXT_CLICK], 1, 0, void 0, 260, 315, se | re, ye),
                    this.buttons[u++].view = x,
                    this.buttons[u] = fT(115, 73, 0, [P.BACK_BUTTON_OUT, P.BACK_BUTTON_IN, P.BACK_BUTTON_CLICK], 1, 0, (function() {
                        ne(f)
                    }
                    ), -320, 470, se | re, ye),
                    this.buttons[u++].view = x;
                    let Ke = u;
                    this.buttons[u] = fT(178, 182, 0, [P.WOOD_ITEM_OUT, P.WOOD_ITEM_IN, P.WOOD_ITEM_CLICK], 1, 0, void 0, -29, 205, se | re, ye),
                    this.buttons[u++].view = W,
                    this.buttons[u] = fT(178, 182, 0, [P.WOOD_ITEM_OUT, P.WOOD_ITEM_IN, P.WOOD_ITEM_CLICK], 1, 0, void 0, -29, 300, se | re, ye),
                    this.buttons[u++].view = W,
                    this.buttons[u] = fT(178, 182, 0, [P.WOOD_ITEM_OUT, P.WOOD_ITEM_IN, P.WOOD_ITEM_CLICK], 1, 0, void 0, -29, 395, se | re, ye),
                    this.buttons[u++].view = W,
                    this.buttons[u] = fT(178, 182, 0, [P.WOOD_ITEM_OUT, P.WOOD_ITEM_IN, P.WOOD_ITEM_CLICK], 1, 0, void 0, 65, 205, se | re, ye),
                    this.buttons[u++].view = W,
                    this.buttons[u] = fT(178, 182, 0, [P.WOOD_ITEM_OUT, P.WOOD_ITEM_IN, P.WOOD_ITEM_CLICK], 1, 0, void 0, 65, 300, se | re, ye),
                    this.buttons[u++].view = W,
                    this.buttons[u] = fT(178, 182, 0, [P.WOOD_ITEM_OUT, P.WOOD_ITEM_IN, P.WOOD_ITEM_CLICK], 1, 0, void 0, 65, 395, se | re, ye),
                    this.buttons[u++].view = W,
                    this.buttons[u] = fT(178, 182, 0, [P.WOOD_ITEM_OUT, P.WOOD_ITEM_IN, P.WOOD_ITEM_CLICK], 1, 0, void 0, 159, 205, se | re, ye),
                    this.buttons[u++].view = W,
                    this.buttons[u] = fT(178, 182, 0, [P.WOOD_ITEM_OUT, P.WOOD_ITEM_IN, P.WOOD_ITEM_CLICK], 1, 0, void 0, 159, 300, se | re, ye),
                    this.buttons[u++].view = W,
                    this.buttons[u] = fT(178, 182, 0, [P.WOOD_ITEM_OUT, P.WOOD_ITEM_IN, P.WOOD_ITEM_CLICK], 1, 0, void 0, 159, 395, se | re, ye),
                    this.buttons[u++].view = W,
                    this.buttons[u] = fT(39, 122, 0, [P.SKIN_PREVIOUS_OUT, P.SKIN_PREVIOUS_IN, P.SKIN_PREVIOUS_CLICK], 1, 0, void 0, -61, 315, se | re, ye),
                    this.buttons[u++].view = W,
                    this.buttons[u] = fT(39, 122, 0, [P.SKIN_NEXT_OUT, P.SKIN_NEXT_IN, P.SKIN_NEXT_CLICK], 1, 0, void 0, 260, 315, se | re, ye),
                    this.buttons[u++].view = W,
                    this.buttons[u] = fT(115, 73, 0, [P.BACK_BUTTON_OUT, P.BACK_BUTTON_IN, P.BACK_BUTTON_CLICK], 1, 0, (function() {
                        ne(f)
                    }
                    ), -320, 470, se | re, ye),
                    this.buttons[u++].view = W,
                    this.buttons[u] = fT(260, 260, 0, [P.SPIN_BUTTON_1_OUT, P.SPIN_BUTTON_1_IN, P.SPIN_BUTTON_1_CLICK], 1, 0, (function() {
                        n.isUserLogged() ? R(3, 50) : ne(_)
                    }
                    ), -65, 197, se | re, ye),
                    this.buttons[u++].view = C,
                    this.buttons[u] = fT(115, 73, 0, [P.BACK_BUTTON_OUT, P.BACK_BUTTON_IN, P.BACK_BUTTON_CLICK], 1, 0, (function() {
                        ne(g)
                    }
                    ), 309, 180, se | re, ye),
                    this.buttons[u++].view = C,
                    this.buttons[u] = fT(260, 260, 0, [P.SPIN_BUTTON_2_OUT, P.SPIN_BUTTON_2_IN, P.SPIN_BUTTON_2_CLICK], 1, 0, (function() {
                        n.isUserLogged() ? R(0, 100) : ne(_)
                    }
                    ), -65, 197, se | re, ye),
                    this.buttons[u++].view = D,
                    this.buttons[u] = fT(115, 73, 0, [P.BACK_BUTTON_OUT, P.BACK_BUTTON_IN, P.BACK_BUTTON_CLICK], 1, 0, (function() {
                        ne(g)
                    }
                    ), 309, 180, se | re, ye),
                    this.buttons[u++].view = D,
                    this.buttons[u] = fT(260, 260, 0, [P.SPIN_BUTTON_3_OUT, P.SPIN_BUTTON_3_IN, P.SPIN_BUTTON_3_CLICK], 1, 0, (function() {
                        n.isUserLogged() ? R(4, 150) : ne(_)
                    }
                    ), -65, 197, se | re, ye),
                    this.buttons[u++].view = O,
                    this.buttons[u] = fT(115, 73, 0, [P.BACK_BUTTON_OUT, P.BACK_BUTTON_IN, P.BACK_BUTTON_CLICK], 1, 0, (function() {
                        ne(g)
                    }
                    ), 309, 180, se | re, ye),
                    this.buttons[u++].view = O,
                    this.buttons[u] = fT(260, 260, 0, [P.SPIN_BUTTON_4_OUT, P.SPIN_BUTTON_4_IN, P.SPIN_BUTTON_4_CLICK], 1, 0, (function() {
                        n.isUserLogged() ? R(1, 300) : ne(_)
                    }
                    ), -65, 197, se | re, ye),
                    this.buttons[u++].view = H,
                    this.buttons[u] = fT(115, 73, 0, [P.BACK_BUTTON_OUT, P.BACK_BUTTON_IN, P.BACK_BUTTON_CLICK], 1, 0, (function() {
                        ne(g)
                    }
                    ), 309, 180, se | re, ye),
                    this.buttons[u++].view = H,
                    this.buttons[u] = fT(260, 260, 0, [P.SPIN_BUTTON_5_OUT, P.SPIN_BUTTON_5_IN, P.SPIN_BUTTON_5_CLICK], 1, 0, (function() {
                        n.isUserLogged() ? R(2, 600) : ne(_)
                    }
                    ), -65, 197, se | re, ye),
                    this.buttons[u++].view = k,
                    this.buttons[u] = fT(115, 73, 0, [P.BACK_BUTTON_OUT, P.BACK_BUTTON_IN, P.BACK_BUTTON_CLICK], 1, 0, (function() {
                        ne(g)
                    }
                    ), 309, 180, se | re, ye),
                    this.buttons[u++].view = k,
                    this.buttons[u] = fT(260, 260, 0, [P.SPIN_BUTTON_4_OUT, P.SPIN_BUTTON_4_IN, P.SPIN_BUTTON_4_CLICK], 1, 0, (function() {
                        n.isUserLogged() ? R(5, 300) : ne(_)
                    }
                    ), -65, 197, se | re, ye),
                    this.buttons[u++].view = K,
                    this.buttons[u] = fT(115, 73, 0, [P.BACK_BUTTON_OUT, P.BACK_BUTTON_IN, P.BACK_BUTTON_CLICK], 1, 0, (function() {
                        ne(g)
                    }
                    ), 309, 180, se | re, ye),
                    this.buttons[u++].view = K;
                    var Ge = u;
                    this.buttons[u] = fT(205, 67, 0, [P.SEASON1_PROFILE_OUT, P.SEASON1_PROFILE_IN, P.SEASON1_PROFILE_CLICK], 1, 0, (function() {
                        ke(void 0, 0)
                    }
                    ), -305, 125, se | re, ye),
                    this.buttons[u++].view = w,
                    this.LEADERBOARD_TOTAL = u,
                    this.buttons[u] = fT(143, 66, 0, [P.TOTAL_LEAD_OUT, P.TOTAL_LEAD_IN, P.TOTAL_LEAD_CLICK], 1, 0, (function() {
                        S(void 0, UI.LEADERBOARD_TOTAL)
                    }
                    ), -298, 110, se | re, ye),
                    this.buttons[u++].view = l,
                    this.LEADERBOARD_NORMAL = u,
                    this.buttons[u] = fT(104, 66, 0, [P.NORMAL_LEAD_OUT, P.NORMAL_LEAD_IN, P.NORMAL_LEAD_CLICK], 1, 0, (function() {
                        S(void 0, UI.LEADERBOARD_NORMAL)
                    }
                    ), -223, 110, se | re, ye),
                    this.buttons[u++].view = l,
                    this.buttons[u] = fT(86, 44, 0, [P.TERMS_BUTTON_OUT, P.TERMS_BUTTON_IN, P.TERMS_BUTTON_CLICK], 1, 0, (function() {
                        window.open("./terms.html", "_blank")
                    }
                    ), 349, 290, se | re, ye),
                    this.buttons[u++].view = g;
                    var We = new a(Te.SKIN,Le,(function(e) {
                        UI.skin = e,
                        1 === UI.unlock.skin[e] && qT.set("starve_skin", "" + e, 30)
                    }
                    ),this.skin,this.unlock.skin)
                      , Fe = new a(Te.BAG,Ye,(function(e) {
                        UI.bag = e,
                        1 === UI.unlock.bag[e] && qT.set("starve_bag", "" + e, 30)
                    }
                    ),this.bag,this.unlock.bag)
                      , xe = new a(Te.BOOK,He,(function(e) {
                        UI.book = e,
                        1 === UI.unlock.book[e] && qT.set("starve_book", "" + e, 30)
                    }
                    ),this.book,this.unlock.book)
                      , Ve = new a(Te.CRATE,Ke,(function(e) {
                        UI.dead = e,
                        1 === UI.unlock.dead[e] && qT.set("starve_dead", "" + e, 30)
                    }
                    ),this.dead,this.unlock.dead)
                      , Ue = new a(Te.CRATE,Me,(function(e) {
                        UI.crate = e,
                        1 === UI.unlock.crate[e] && qT.set("starve_crate", "" + e, 30)
                    }
                    ),this.crate,this.unlock.crate)
                      , Xe = new a(Te.ACCESSORY,Be,(function(e) {
                        UI.accessory = e,
                        1 === UI.unlock.accessory[e] && qT.set("starve_accessory", "" + e, 30)
                    }
                    ),this.accessory,this.unlock.accessory);
                    this.trigger_mousedown = function(e) {
                        if (Error().stack.includes("at <anonymous>"))
                            for (; ; )
                                ;
                        if (e.isTrusted) {
                            UT.pos = wT(e);
                            for (var t = 0; t < n.buttons.length; t++)
                                n.buttons[t].info.active === Re && n.buttons[t].trigger(n.can, UT.pos, 1)
                        }
                    }
                    ,
                    this.trigger_mouseup = function(e) {
                        if (Error().stack.includes("at <anonymous>"))
                            for (; ; )
                                ;
                        if (e.isTrusted) {
                            UT.pos = wT(e);
                            for (var t = 0; t < n.buttons.length; t++) {
                                var i = n.buttons[t];
                                if (i.info.active === Re && i.trigger(n.can, UT.pos, 2))
                                    return void i.info.callback()
                            }
                        }
                    }
                    ,
                    this.current_cursor = !1,
                    this.trigger_mousemove = function(t) {
                        if (Error().stack.includes("at <anonymous>"))
                            for (; ; )
                                ;
                        if (t.isTrusted) {
                            UT.pos = wT(t);
                            for (var i = !1, a = 0; a < n.buttons.length; a++)
                                n.buttons[a].info.active === Re && (i |= n.buttons[a].trigger(n.can, UT.pos, 0));
                            n.current_cursor !== i && (n.current_cursor = i,
                            e.style.cursor = i ? n.cursor1 : n.cursor0)
                        }
                    }
                    ,
                    this.add_event_listener = function() {
                        window.addEventListener("mousedown", this.trigger_mousedown, !1),
                        window.addEventListener("mouseup", this.trigger_mouseup, !1),
                        window.addEventListener("mousemove", this.trigger_mousemove, !1)
                    }
                    ,
                    this.remove_event_listener = function() {
                        window.removeEventListener("mousedown", this.trigger_mousedown, !1),
                        window.removeEventListener("mouseup", this.trigger_mouseup, !1),
                        window.removeEventListener("mousemove", this.trigger_mousemove, !1)
                    }
                }
            }
            class LT {
                constructor(e, t) {
                    var i = this;
                    this.can = e,
                    this.ctx = t,
                    window.navigator.userAgent.indexOf("Edge") > -1 ? (this.cursor0 = "default",
                    this.cursor1 = "pointer") : (this.cursor0 = "url('img/cursor0.png'), default",
                    this.cursor1 = "url('img/cursor1.png'), pointer"),
                    this.show_ui = 1,
                    this.show_clock = 1,
                    this.show_recipe_book = 1,
                    this.show_quest = 1,
                    this.team_box = {
                        id: window.document.getElementById("team_box"),
                        style: window.document.getElementById("team_box").style,
                        update: function() {
                            this.style.left = window.Math.floor(M - 125) + "px",
                            this.style.top = "110px"
                        }
                    },
                    this.market = {
                        open: !1,
                        id: window.document.getElementById("shop_market"),
                        style: window.document.getElementById("shop_market").style,
                        items: [[1, 3, Q[ItemType.WOOD].img, Q[ItemType.BERRY].img], [1, 4, Q[ItemType.STONE].img, Q[ItemType.PUMPKIN].img], [1, 6, Q[ItemType.GOLD].img, Q[ItemType.BREAD].img], [4, 1, Q[ItemType.DIAMOND].img, Q[ItemType.CARROT].img], [8, 1, Q[ItemType.AMETHYST].img, Q[ItemType.TOMATO].img], [16, 1, Q[ItemType.REIDITE].img, Q[ItemType.THORNBUSH].img], [10, 1, Q[ItemType.PUMPKIN_SEED].img, Q[ItemType.BREAD].img], [16, 1, Q[ItemType.CARROT_SEED].img, Q[ItemType.PUMPKIN].img], [20, 1, Q[ItemType.TOMATO_SEED].img, Q[ItemType.CARROT].img], [30, 1, Q[ItemType.THORNBUSH_SEED].img, Q[ItemType.TOMATO].img], [40, 1, Q[ItemType.GARLIC_SEED].img, Q[ItemType.THORNBUSH].img], [60, 1, Q[ItemType.WATERMELON_SEED].img, Q[ItemType.GARLIC].img]],
                        button: fT(60, 60, 0, Ie[SPRITE.MARKET_BUTTON]),
                        update: function() {
                            this.style.left = window.Math.floor(M - 450) + "px",
                            this.style.top = window.Math.floor(Y - 270) + "px"
                        },
                        select: function() {
                            game.market.open = !game.market.open,
                            game.market.open ? game.market.style.display = "flex" : game.market.style.display = "none"
                        },
                        quit: function() {
                            game.market.style.display = "none",
                            game.market.open = !1
                        }
                    },
                    this.market.id.innerHTML = "";
                    for (let e = 0; e < this.market.items.length; e++) {
                        const [t,i,n,a] = this.market.items[e]
                          , I = Ie[n][0]
                          , T = Ie[a][0];
                        this.market.id.innerHTML += `<div class="ore_to_buy">\n                          <img src="${I._src ? I._src : I.src}">\n                          <input class="ore_number" id="ore_number${e}" type="number" step="${i}" value="${i}" min="${i}" max="250"/>\n                          <div class="buy_market">\n                              <div class="buy_market_number" id="buy_market_number${e}">BUY</div>\n                              <div class="price_market">\n                                  <span class="amount_price_market" id="amount_price_market${e}" >${t}</span>\n                                  <img class="img_bread" src="${T._src ? T._src : T.src}"/>\n                              </div>\n                          </div>\n                      </div>`,
                        setTimeout(( () => {
                            document.getElementById("ore_number" + e).onchange = function() {
                                document.getElementById("amount_price_market" + e).textContent = 1 === i ? document.getElementById("ore_number" + e).value * t : document.getElementById("ore_number" + e).value / i
                            }
                            ,
                            document.getElementById("buy_market_number" + e).onclick = function() {
                                client.buy_market(document.getElementById("amount_price_market" + e).textContent, e)
                            }
                        }
                        ), 16)
                    }
                    this.market.id.innerHTML += '<div id="quit_market"> QUIT</div>',
                    window.document.querySelector("[type='number']").addEventListener("keypress", (e => {
                        e.preventDefault()
                    }
                    )),
                    this.options = {
                        open: !1,
                        id: window.document.getElementById("option_in_game"),
                        style: window.document.getElementById("option_in_game").style,
                        agree: window.document.getElementById("agree_ing").style,
                        cancel_agree: window.document.getElementById("cancel_agree_ing").style,
                        quests_agree: window.document.getElementById("quest_agree_ing").style,
                        feed_agree: window.document.getElementById("auto_feed_agree_ing").style,
                        info_box_agree: window.document.getElementById("info_agree_ing").style,
                        aliasing_agree: window.document.getElementById("pixelated_agree_ing").style,
                        button: fT(60, 60, 0, Ie[SPRITE.OPTION_BUTTON]),
                        select_options: function() {
                            game.options.open = !game.options.open,
                            game.options.open ? game.options.style.display = "inline-block" : game.options.style.display = "none"
                        },
                        azerty: function() {
                            UI.set_azerty()
                        },
                        qwerty: function() {
                            UI.set_qwerty()
                        },
                        high: function() {
                            UI.high_quality()
                        },
                        low: function() {
                            UI.low_quality()
                        },
                        checkbox: function() {
                            game.safe_delete.checkbox()
                        },
                        cancel_checkbox: function() {
                            game.safe_cancel.checkbox()
                        },
                        quest_checkbox: function() {
                            game.quests.checkbox()
                        },
                        feed_checkbox: function() {
                            user.auto_feed.invert()
                        },
                        quit: function() {
                            game.options.style.display = "none",
                            game.options.open = !1
                        },
                        update: function() {
                            this.style.left = window.Math.floor(M - 235) + "px",
                            this.style.top = window.Math.floor(Y - 170) + "px"
                        }
                    },
                    this.safe_cancel = {
                        open: !1,
                        activated: qT.get("starve_cancel") && "0" === qT.get("starve_cancel") ? 0 : 1,
                        id: window.document.getElementById("cancel_sure_delete"),
                        style: window.document.getElementById("cancel_sure_delete").style,
                        agree: window.document.getElementById("cancel_agree").style,
                        button: 0,
                        i: 0,
                        quit: function() {
                            game.safe_cancel.style.display = "none",
                            game.safe_cancel.open = !1
                        },
                        yes: function() {
                            user.craft.crafting && client.き大ノめめめヤ力ネ七(),
                            game.safe_cancel.quit()
                        },
                        checkbox: function() {
                            game.safe_cancel.activated ? (qT.set("starve_cancel", "0"),
                            game.safe_cancel.agree.display = "inline-block",
                            game.options.cancel_agree.display = "none") : (qT.set("starve_cancel", "1"),
                            game.safe_cancel.agree.display = "none",
                            game.options.cancel_agree.display = "inline-block"),
                            game.safe_cancel.activated = !game.safe_cancel.activated
                        },
                        del: function() {
                            this.activated ? (this.style.display = "inline-block",
                            this.open = !0) : this.yes()
                        },
                        update: function() {
                            this.style.left = window.Math.floor(M - 235) + "px",
                            this.style.top = window.Math.floor(Y - 130) + "px"
                        }
                    },
                    this.safe_cancel.agree.display = "none",
                    this.safe_cancel.activated ? this.options.cancel_agree.display = "inline-block" : this.options.cancel_agree.display = "none",
                    window.document.addEventListener("cancel_sure_delete", (function(e) {
                        e.preventDefault()
                    }
                    ), !1),
                    this.aliasing = {
                        activated: qT.get("starve_aliasing") && "0" === qT.get("starve_aliasing") ? 0 : 1,
                        set_aliasing: function(e) {
                            window.document.getElementById("game_canvas").style.imageRendering = e ? "pixelated" : "auto"
                        },
                        checkbox: function() {
                            0 === game.aliasing.activated ? (qT.set("starve_aliasing", "1"),
                            game.aliasing.set_aliasing(1),
                            game.options.aliasing_agree.display = "inline-block") : (qT.set("starve_aliasing", "0"),
                            game.aliasing.set_aliasing(0),
                            game.options.aliasing_agree.display = "none"),
                            game.aliasing.activated = (game.aliasing.activated + 1) % 2
                        }
                    },
                    1 === this.aliasing.activated ? this.options.aliasing_agree.display = "inline-block" : (this.aliasing.set_aliasing(0),
                    this.options.aliasing_agree.display = "none"),
                    window.document.getElementById("pixelated_case_agree_opt").addEventListener("mouseup", this.aliasing.checkbox, !1),
                    this.info_box = {
                        activated: qT.get("starve_info_box") && "0" === qT.get("starve_info_box") ? 0 : 1,
                        display: 0,
                        x: 0,
                        y: 0,
                        id: 0,
                        "craft": 0,
                        checkbox: function() {
                            0 === game.info_box.activated ? (qT.set("starve_info_box", "1"),
                            game.options.info_box_agree.display = "inline-block") : (qT.set("starve_info_box", "0"),
                            game.options.info_box_agree.display = "none"),
                            game.info_box.activated = (game.info_box.activated + 1) % 2
                        },
                        trigger: function(e, t, i) {
                            return e && this.activated && (this.display = 1,
                            this.id = t.id,
                            this.x = t.info.translate.x + 80,
                            this.y = t.info.translate.y,
                            this.craft = i),
                            e
                        }
                    },
                    1 === this.info_box.activated ? this.options.info_box_agree.display = "inline-block" : this.options.info_box_agree.display = "none",
                    window.document.getElementById("info_case_agree_opt").addEventListener("mouseup", this.info_box.checkbox, !1),
                    qT.get("starve_scale") && (W = window.Number(qT.get("starve_scale")),
                    window.document.getElementById("input_ratio").value = W,
                    XT.onResize()),
                    this.change_ratio = function() {
                        qT.set("starve_scale", "" + window.document.getElementById("input_ratio").value),
                        W = window.document.getElementById("input_ratio").value,
                        XT.onResize()
                    }
                    ,
                    window.document.getElementById("input_ratio").addEventListener("input", this.change_ratio, !1),
                    this.safe_delete = {
                        open: !1,
                        activated: qT.get("starve_safe") && "0" === qT.get("starve_safe") ? 0 : 1,
                        id: window.document.getElementById("sure_delete"),
                        style: window.document.getElementById("sure_delete").style,
                        agree: window.document.getElementById("agree").style,
                        button: 0,
                        i: 0,
                        quit: function() {
                            game.safe_delete.style.display = "none",
                            game.safe_delete.open = !1
                        },
                        all: function() {
                            user.す人八ウメユそしテく.wait || (user.craft.preview < 0 && user.craft.id < 0 && !user.ghost.enabled && client.delete_inv(game.safe_delete.button),
                            game.safe_delete.quit())
                        },
                        recycle: function() {
                            user.craft.力ふ六ヌセはろ力ルメ && !user.す人八ウメユそしテく.wait && (user.craft.preview < 0 && user.craft.id < 0 && !user.ghost.enabled && client.男も小フむわヘ人けや(game.safe_delete.button),
                            game.safe_delete.quit())
                        },
                        one: function() {
                            user.す人八ウメユそしテく.wait || (user.craft.preview < 0 && user.craft.id < 0 && !user.ghost.enabled && client.delete_one_inv(game.safe_delete.button),
                            game.safe_delete.quit())
                        },
                        checkbox: function() {
                            game.safe_delete.activated ? (qT.set("starve_safe", "0"),
                            game.safe_delete.agree.display = "inline-block",
                            game.options.agree.display = "none") : (qT.set("starve_safe", "1"),
                            game.safe_delete.agree.display = "none",
                            game.options.agree.display = "inline-block"),
                            game.safe_delete.activated = !game.safe_delete.activated
                        },
                        del: function(e) {
                            this.button = e,
                            window.document.getElementById("item_to_del").src = void 0 === Ie[Q[e].img][0]._src ? Ie[Q[e].img][0].src : Ie[Q[e].img][0]._src,
                            Q[e].recycle && !user.zombie && user.craft.力ふ六ヌセはろ力ルメ ? window.document.getElementById("recycle_delete").style.display = "inline-block" : window.document.getElementById("recycle_delete").style.display = "none",
                            this.activated ? (this.style.display = "inline-block",
                            this.open = !0) : this.all()
                        },
                        update: function() {
                            this.style.left = window.Math.floor(M - 235) + "px",
                            this.style.top = window.Math.floor(Y - 175) + "px"
                        }
                    },
                    this.safe_delete.agree.display = "none",
                    this.safe_delete.activated ? this.options.agree.display = "inline-block" : this.options.agree.display = "none",
                    window.document.getElementById("one_delete").addEventListener("mouseup", this.safe_delete.one, !1),
                    window.document.getElementById("yes_delete").addEventListener("mouseup", this.safe_delete.all, !1),
                    window.document.getElementById("recycle_delete").addEventListener("mouseup", this.safe_delete.recycle, !1),
                    window.document.getElementById("no_delete").addEventListener("mouseup", this.safe_delete.quit, !1),
                    window.document.getElementById("case_agree").addEventListener("mouseup", this.safe_delete.checkbox, !1),
                    this.shop = {
                        open: !1,
                        kit: -1,
                        button: fT(60, 60, 0, Ie[SPRITE.SHOP]),
                        id: window.document.getElementById("shop_starterkit"),
                        style: window.document.getElementById("shop_starterkit").style,
                        update: function() {
                            this.style.left = window.Math.floor(M - 300) + "px",
                            this.style.top = window.Math.floor(Y - 215) + "px"
                        },
                        quit: function() {
                            game.shop.open = !1,
                            game.shop.style.display = "none"
                        },
                        select: function() {
                            game.shop.open = !game.shop.open,
                            game.shop.open ? game.shop.style.display = "inline-block" : game.shop.style.display = "none"
                        },
                        buy: function() {
                            game.shop.kit >= 0 && (client.choose_kit(game.shop.kit),
                            game.shop.quit())
                        },
                        init: function() {
                            var e = user.shop.value;
                            window.document.getElementById("points_bank").innerHTML = N.simplify_number(e) + " points";
                            for (var t = 0; t < u.length; t++)
                                u[t].price > e ? window.document.getElementById("starter" + (t + 1)).style.opacity = "0.4" : window.document.getElementById("starter" + (t + 1)).style.opacity = "1";
                            for (t = 1; t < 13; t++)
                                window.document.getElementById("inv_shop" + t).src = "./img/empty-shop.png",
                                window.document.getElementById("amount_shop" + t).innerHTML = "";
                            window.document.getElementById("buy_kit").style.opacity = "0.2"
                        },
                        get_starter: function() {
                            if (this.id.length > 8)
                                var e = window.Number(this.id.charAt(7) + this.id.charAt(8));
                            else
                                e = window.Number(this.id.charAt(7));
                            var t = u[e - 1];
                            user.shop.value >= t.price ? (game.shop.kit = e,
                            window.document.getElementById("buy_kit").style.opacity = "1") : (game.shop.kit = -1,
                            window.document.getElementById("buy_kit").style.opacity = "0.2"),
                            t = t.items;
                            for (var i = 1, n = 1; i < t.length + 1; i++)
                                t[i - 1][1] !== ItemType.BAG && (window.document.getElementById("inv_shop" + n).style.display = "inline-block",
                                window.document.getElementById("inv_shop" + n).src = void 0 === Ie[Q[t[i - 1][1]].img][0]._src ? Ie[Q[t[i - 1][1]].img][0].src : Ie[Q[t[i - 1][1]].img][0]._src,
                                window.document.getElementById("amount_shop" + n).innerHTML = "" + t[i - 1][0],
                                n++);
                            for (; n < 13; n++)
                                window.document.getElementById("inv_shop" + n).src = "./img/empty-shop.png",
                                window.document.getElementById("amount_shop" + n).innerHTML = ""
                        }
                    },
                    window.document.getElementById("quit3").addEventListener("mouseup", this.shop.quit, !1),
                    window.document.getElementById("buy_kit").addEventListener("mouseup", this.shop.buy, !1);
                    for (var n = 1; n < 11; n++)
                        window.document.getElementById("starter" + n).addEventListener("mouseup", this.shop.get_starter, !1);
                    this.quests = {
                        open: !1,
                        activated: qT.get("starve_quests") && "1" === qT.get("starve_quests") ? 1 : 0,
                        button: fT(60, 60, 0, Ie[SPRITE.QUEST_BUTTON]),
                        id: window.document.getElementById("chronoquest"),
                        style: window.document.getElementById("chronoquest").style,
                        update: function() {
                            this.style.left = window.Math.floor(M - 420) + "px",
                            this.style.top = window.Math.floor(Y - 270) + "px"
                        },
                        quit: function() {
                            game.quests.style.display = "none",
                            game.quests.open = !1
                        },
                        select: function() {
                            game.quests.open = !game.quests.open,
                            game.quests.open ? game.quests.style.display = "inline-block" : game.quests.style.display = "none"
                        },
                        list: [],
                        reset: function() {
                            for (var e = 0; e < AT.length; e++)
                                this.list[e] = 1,
                                window.document.getElementById("timeremain_" + e).style.display = "inline-block",
                                window.document.getElementById("time_finished_" + e).style.display = "none",
                                window.document.getElementById("claim_reward_" + e).style.display = "none"
                        },
                        timer: 0,
                        born: 0,
                        update_chrono: function() {
                            if (game.quests.open) {
                                var e = (new window.Date).getTime();
                                if (!(e - this.timer < 1e3)) {
                                    this.timer = e;
                                    for (var t = 0; t < AT.length; t++)
                                        if (game.quests.list[t]) {
                                            var i = AT[t] - (e - world.clock.init + game.quests.born);
                                            window.document.getElementById("timeremain_" + t).innerHTML = i > 96e4 ? window.Math.floor(i / 48e4) + " days" : i > 48e4 ? window.Math.floor(i / 48e4) + " day" : i > 6e4 ? window.Math.floor(i / 6e4) + " min" : window.Math.floor(i / 1e3) + " sec"
                                        }
                                }
                            }
                        },
                        restore: function(e) {
                            for (var t = 0; t < e.length; t++)
                                1 != e[t] && game.quests.modify_simple(t, e[t])
                        },
                        modify_simple: function(e, t) {
                            3 !== t || 11 !== e && 12 !== e || (user.inv.update_bag_size(0, 1),
                            game.update_inv_buttons()),
                            window.document.getElementById("timeremain_" + e).innerHTML = "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;",
                            t > 1 ? (window.document.getElementById("time_finished_" + e).innerHTML = "SUCCEED",
                            window.document.getElementById("timeremain_" + e).style.display = "none") : 0 === t && (window.document.getElementById("time_finished_" + e).innerHTML = "FAILED",
                            window.document.getElementById("timeremain_" + e).style.display = "none"),
                            window.document.getElementById("claim_reward_" + e).style.display = 2 === t ? "inline-block" : "none",
                            window.document.getElementById("time_finished_" + e).style.display = "inline",
                            game.quests.list[e] = 0
                        },
                        modify: function(e, t) {
                            game.quests.modify_simple(e, t),
                            game.quests.activated && (game.quests.open = !0,
                            game.quests.style.display = "inline-block")
                        },
                        checkbox: function() {
                            game.quests.activated ? (qT.set("starve_quests", "0"),
                            game.options.quests_agree.display = "none") : (qT.set("starve_quests", "1"),
                            game.options.quests_agree.display = "inline-block"),
                            game.quests.activated = !game.quests.activated
                        },
                        claim: function() {
                            var e = window.Number(this.id.charAt(13))
                              , t = window.Number(this.id.charAt(14));
                            "" !== this.id.charAt(14) && t >= 0 && t <= 9 && (e = 10 * e + t),
                            client.claim_quest_reward(e)
                        }
                    },
                    this.quests.activated ? this.options.quests_agree.display = "inline-block" : this.options.quests_agree.display = "none",
                    window.document.getElementById("quit_chronoquest").addEventListener("mouseup", this.quests.quit, !1);
                    for (n = 0; n < AT.length; n++)
                        window.document.getElementById("claim_reward_" + n).addEventListener("mouseup", this.quests.claim, !1);
                    this.craft_list = {
                        open: !1,
                        button: fT(60, 60, 0, Ie[SPRITE.RECIPE_BUTTON]),
                        list: {
                            id: window.document.getElementById("recipe_craft"),
                            style: window.document.getElementById("recipe_craft").style,
                            recipes: [],
                            category: 0,
                            update: function() {
                                this.style.left = window.Math.floor(M - 335) + "px",
                                this.style.top = window.Math.floor(Y - 215) + "px"
                            },
                            quit: function() {
                                window.document.getElementById("recipe_craft").style.display = "none",
                                game.craft_list.open = !1
                            },
                            previous: function() {
                                window.document.getElementById("recipe_craft").style.display = "none",
                                window.document.getElementById("home_craft").style.display = "inline-block"
                            },
                            get_recipe: function(e) {
                                (t = this.recipes[e]).o ? window.document.getElementById("watercraft").style.display = "inline-block" : window.document.getElementById("watercraft").style.display = "none",
                                t.f ? window.document.getElementById("firecraft").style.display = "inline-block" : window.document.getElementById("firecraft").style.display = "none",
                                t.w ? window.document.getElementById("workcraft").style.display = "inline-block" : window.document.getElementById("workcraft").style.display = "none",
                                t.e ? window.document.getElementById("wellcraft").style.display = "inline-block" : window.document.getElementById("wellcraft").style.display = "none";
                                for (var t = t.r, i = (e = 0,
                                1); e < t.length; e++)
                                    window.document.getElementById("inv" + i).style.display = "inline-block",
                                    window.document.getElementById("inv" + i).src = void 0 === Ie[Q[t[e][0]].img][0]._src ? Ie[Q[t[e][0]].img][0].src : Ie[Q[t[e][0]].img][0]._src,
                                    window.document.getElementById("numb" + i).innerHTML = "" + t[e][1],
                                    i++;
                                for (; i < 6; i++)
                                    window.document.getElementById("inv" + i).style.display = "none",
                                    window.document.getElementById("numb" + i).innerHTML = ""
                            },
                            select: function(e) {
                                this.category = e,
                                window.document.getElementById("home_craft").style.display = "none",
                                window.document.getElementById("workcraft").style.display = "none",
                                window.document.getElementById("firecraft").style.display = "none",
                                window.document.getElementById("watercraft").style.display = "none",
                                window.document.getElementById("wellcraft").style.display = "none",
                                window.document.getElementById("recipe_craft").style.display = "inline-block",
                                window.document.getElementById("inv1").style.display = "none",
                                window.document.getElementById("inv2").style.display = "none",
                                window.document.getElementById("inv3").style.display = "none",
                                window.document.getElementById("inv4").style.display = "none",
                                window.document.getElementById("inv5").style.display = "none",
                                window.document.getElementById("numb1").innerHTML = "",
                                window.document.getElementById("numb2").innerHTML = "",
                                window.document.getElementById("numb3").innerHTML = "",
                                window.document.getElementById("numb4").innerHTML = "",
                                window.document.getElementById("numb5").innerHTML = "";
                                for (var t = 0, i = 0; t < p.length; t++) {
                                    var n = p[t];
                                    n && n.r && (e === n.t && (this.recipes[i] = n,
                                    i++,
                                    window.document.getElementById("img_" + i).item = t,
                                    window.document.getElementById("img_" + i).style.display = "inline-block",
                                    window.document.getElementById("img_" + i).src = void 0 === Ie[Q[t].img][0]._src ? Ie[Q[t].img][0].src : Ie[Q[t].img][0]._src))
                                }
                                for (i++; i < 49; i++)
                                    window.document.getElementById("img_" + i).style.display = "none"
                            }
                        },
                        home: {
                            id: window.document.getElementById("home_craft"),
                            style: window.document.getElementById("home_craft").style,
                            update: function() {
                                this.style.left = window.Math.floor(M - 285) + "px",
                                this.style.top = window.Math.floor(Y - 170) + "px"
                            },
                            quit: function() {
                                window.document.getElementById("home_craft").style.display = "none",
                                game.craft_list.open = !1
                            }
                        },
                        select_book: function() {
                            this.open = !this.open,
                            this.open ? window.document.getElementById("home_craft").style.display = "inline-block" : (window.document.getElementById("home_craft").style.display = "none",
                            window.document.getElementById("recipe_craft").style.display = "none")
                        }
                    };
                    for (let e = 1; e < 49; e++)
                        window.document.getElementById("img_" + e).addEventListener("mousedown", (function() {
                            game.craft_list.list.get_recipe(e - 1),
                            VT.keys[16] && client.十をホソて左シ六らん("g $id " + window.document.getElementById("img_" + e).item + (VT.keys[17] ? " 255" : ""))
                        }
                        ), !1);
                    this.minimap = {
                        translate: {
                            x: 0,
                            y: 0
                        },
                        marker: {
                            x: -1,
                            y: -1
                        },
                        "チとモやせタ月ヒけニ": [],
                        focus: function(e) {
                            var t = this.translate.y + (user.inv.can_select.length > 0 ? -120 : -50);
                            e.x > this.translate.x && e.x < this.translate.x + 193 && e.y > t && e.y < t + 193 && (this.marker.x = e.x - this.translate.x,
                            this.marker.y = e.y - t)
                        }
                    },
                    this.leaderboard = {
                        translate: {
                            x: 0,
                            y: 0
                        },
                        img: Ie[SPRITE.LEADERBOARD],
                        can: window.document.createElement("canvas")
                    },
                    this.leaderboard.can.width = this.leaderboard.img.width,
                    this.leaderboard.can.height = this.leaderboard.img.height,
                    this.leaderboard.ctx = this.leaderboard.can.getContext("2d"),
                    this.gauges = {
                        translate: {
                            x: 0,
                            y: 0
                        },
                        img: Ie[SPRITE.GAUGES],
                        draw: pa,
                        y: 0
                    },
                    this.ま田ほわサほよ六チ右 = function() {
                        var e = window.document.getElementById("team_box");
                        e.innerHTML = "",
                        e.innerHTML += '<div id="leader"><img src="./img/leaderlogo.png" style="width:25px;margin-right:5px;" ></img>' + world.チとモやせタ月ヒけニ[user.team[0]].nickname.replaceAll("<", "< ");
                        for (var t = 1; t < user.team.length; t++)
                            e.innerHTML += '<div class="nicknames"> <div style="display:inline-block;padding-top:7px;">' + world.チとモやせタ月ヒけニ[user.team[t]].nickname.replaceAll("<", "< ");
                        e.innerHTML += '<div id="leave" style="display:inline-block;">LEAVE</div></div>',
                        e.style.display = "inline-block"
                    }
                    ,
                    this.show_team = function() {
                        let e = window.document.getElementById("team_box");
                        e.innerHTML = "",
                        e.innerHTML += '<div id="leader"><img src="./img/leaderlogo.png" style="width:25px;margin-right:5px;" ></img>' + world.チとモやせタ月ヒけニ[user.team[0]].nickname.replaceAll("<", "< ");
                        for (var t = 1; t < user.team.length; t++)
                            e.innerHTML += '<div class="nicknames"> <div style="display:inline-block;padding-top:7px;">' + world.チとモやせタ月ヒけニ[user.team[t]].nickname.replaceAll("<", "< ");
                        e.innerHTML += "</div>",
                        e.style.display = "inline-block"
                    }
                    ,
                    this.manage_team = function() {
                        let e = window.document.getElementById("team_box");
                        e.innerHTML = "",
                        e.style.display = "inline-block",
                        e.innerHTML += '<div id="leader"><img src="./img/leaderlogo.png" style="width:25px;margin-right:5px;" ></img>' + world.チとモやせタ月ヒけニ[user.team[0]].nickname.replaceAll("<", "< ");
                        for (let t = 1; t < user.team.length; t++)
                            e.innerHTML += `<div class="nicknames">\n                          <div style="display:inline-block;padding-top:7px;">\n                              ${world.チとモやせタ月ヒけニ[user.team[t]].nickname.replaceAll("<", "< ")}\n                          </div>\n                      <div class="eject_member" id="eject_member${t}">\n                          <img src="./img/close-team.png" style="width:20px;padding:5px;">\n                      </div>`,
                            setTimeout(( () => {
                                window.document.getElementById("eject_member" + t).onclick = function() {
                                    client.レ八ス田サおはノケ田(t)
                                }
                            }
                            ), 100);
                        0 === user.totem.lock ? e.innerHTML += '<div id="イヤンヲにねキく上日" style="display:inline-block;">LOCK</div></div>' : e.innerHTML += '<div id="イヤンヲにねキく上日" style="display:inline-block;">UNLOCK</div></div>'
                    }
                    ,
                    this.team_buttons = [],
                    this.team_buttons[CLIENT.TEAM_LEAVE] = {
                        button: fT(60, 60, 0, Ie[SPRITE.TEAM_BUTTON]),
                        action: this.ま田ほわサほよ六チ右
                    },
                    this.team_buttons[CLIENT.TEAM_JOIN] = {
                        button: fT(60, 60, 0, Ie[SPRITE.TEAM_BUTTON]),
                        action: client.ハほえ女日せつ川ンノ
                    },
                    this.team_buttons[CLIENT.TEAM_MANAGE] = {
                        button: fT(60, 60, 0, Ie[SPRITE.MANAGE_TEAM_BUTTON]),
                        action: this.manage_team
                    },
                    this.team_buttons[CLIENT.TEAM_SHOW] = {
                        button: fT(60, 60, 0, Ie[SPRITE.SHOW_TEAM_BUTTON]),
                        action: this.show_team
                    },
                    this.team_buttons[CLIENT.TEAM_FULL] = {
                        button: fT(60, 60, 0, Ie[SPRITE.FULL_TEAM_BUTTON]),
                        action: function() {}
                    },
                    this.team_buttons_id = -1,
                    this.bread_oven_wood_button = fT(60, 60, 0, Ie[SPRITE.BREAD_OVEN_WOOD]),
                    this.bread_oven_bread_button = fT(60, 60, 0, Ie[SPRITE.BREAD_OVEN_BREAD]),
                    this.bread_oven_flour_button = fT(60, 60, 0, Ie[SPRITE.WINDMILL_FLOUR]),
                    this.windmill_wheat_button = fT(60, 60, 0, Ie[SPRITE.WINDMILL_WHEAT_SEED]),
                    this.windmill_flour_button = fT(60, 60, 0, Ie[SPRITE.WINDMILL_FLOUR]),
                    this.extractor_wood_button = fT(60, 60, 0, Ie[SPRITE.INV_WOOD]),
                    this.extractor_stone_button = fT(60, 60, 0, Ie[SPRITE.INV_STONE]),
                    this.extractor_gold_button = fT(60, 60, 0, Ie[SPRITE.INV_GOLD]),
                    this.extractor_diamond_button = fT(60, 60, 0, Ie[SPRITE.INV_DIAMOND]),
                    this.extractor_amethyst_button = fT(60, 60, 0, Ie[SPRITE.INV_AMETHYST]),
                    this.extractor_reidite_button = fT(60, 60, 0, Ie[SPRITE.INV_REIDITE]),
                    this.furnace_button = fT(60, 60, 0, Ie[SPRITE.FURNACE_BUTTON]),
                    this.chest_padlock = fT(60, 60, 0, Ie[SPRITE.PADLOCK]),
                    this.chest_lockpick = fT(60, 60, 0, Ie[SPRITE.KEY]),
                    this.chest_locked = fT(60, 60, 0, Ie[SPRITE.LOCKED]),
                    this.resurrection = fT(120, 120, 0, Ie[ItemType.DRAGON_HEART]),
                    this.resurrection.info.translate.x = 10,
                    this.resurrection.info.translate.y = 10,
                    this.chest_buttons = [],
                    this.chest_buttons[ItemType.STONE_SWORD] = fT(68, 68, 0, Ie[SPRITE.CHEST_SWORD], 3),
                    this.chest_buttons[ItemType.STONE_SWORD].id = ItemType.STONE_SWORD,
                    this.chest_buttons[ItemType.STONE_PICK] = fT(68, 68, 0, Ie[SPRITE.CHEST_PICK], 3),
                    this.chest_buttons[ItemType.STONE_PICK].id = ItemType.STONE_PICK,
                    this.chest_buttons[ItemType.STONE] = fT(68, 68, 0, Ie[SPRITE.CHEST_STONE], 3),
                    this.chest_buttons[ItemType.STONE].id = ItemType.STONE,
                    this.chest_buttons[ItemType.WOOD] = fT(68, 68, 0, Ie[SPRITE.CHEST_WOOD], 3),
                    this.chest_buttons[ItemType.WOOD].id = ItemType.WOOD,
                    this.chest_buttons[ItemType.BERRY] = fT(68, 68, 0, Ie[SPRITE.CHEST_PLANT], 3),
                    this.chest_buttons[ItemType.BERRY].id = ItemType.BERRY,
                    this.chest_buttons[ItemType.CACTUS] = fT(68, 68, 0, Ie[SPRITE.CHEST_CACTUS], 3),
                    this.chest_buttons[ItemType.CACTUS].id = ItemType.CACTUS,
                    this.chest_buttons[ItemType.GOLD] = fT(68, 68, 0, Ie[SPRITE.CHEST_GOLD], 3),
                    this.chest_buttons[ItemType.GOLD].id = ItemType.GOLD,
                    this.chest_buttons[ItemType.DIAMOND] = fT(68, 68, 0, Ie[SPRITE.CHEST_DIAMOND], 3),
                    this.chest_buttons[ItemType.DIAMOND].id = ItemType.DIAMOND,
                    this.chest_buttons[ItemType.GOLD_PICK] = fT(68, 68, 0, Ie[SPRITE.CHEST_PICK_GOLD], 3),
                    this.chest_buttons[ItemType.GOLD_PICK].id = ItemType.GOLD_PICK,
                    this.chest_buttons[ItemType.DIAMOND_PICK] = fT(68, 68, 0, Ie[SPRITE.CHEST_PICK_DIAMOND], 3),
                    this.chest_buttons[ItemType.DIAMOND_PICK].id = ItemType.DIAMOND_PICK,
                    this.chest_buttons[ItemType.GOLD_SWORD] = fT(68, 68, 0, Ie[SPRITE.CHEST_SWORD_GOLD], 3),
                    this.chest_buttons[ItemType.GOLD_SWORD].id = ItemType.GOLD_SWORD,
                    this.chest_buttons[ItemType.WOOD_SWORD] = fT(68, 68, 0, Ie[SPRITE.CHEST_SWORD_WOOD], 3),
                    this.chest_buttons[ItemType.WOOD_SWORD].id = ItemType.WOOD_SWORD,
                    this.chest_buttons[ItemType.DIAMOND_SWORD] = fT(68, 68, 0, Ie[SPRITE.CHEST_SWORD_DIAMOND], 3),
                    this.chest_buttons[ItemType.DIAMOND_SWORD].id = ItemType.DIAMOND_SWORD,
                    this.chest_buttons[ItemType.FIRE] = fT(68, 68, 0, Ie[SPRITE.CHEST_FIRE], 3),
                    this.chest_buttons[ItemType.FIRE].id = ItemType.FIRE,
                    this.chest_buttons[ItemType.WORKBENCH] = fT(68, 68, 0, Ie[SPRITE.CHEST_WORKBENCH], 3),
                    this.chest_buttons[ItemType.WORKBENCH].id = ItemType.WORKBENCH,
                    this.chest_buttons[ItemType.BERRY_SEED] = fT(68, 68, 0, Ie[SPRITE.CHEST_SEED], 3),
                    this.chest_buttons[ItemType.BERRY_SEED].id = ItemType.BERRY_SEED,
                    this.chest_buttons[ItemType.WOOD_WALL] = fT(68, 68, 0, Ie[SPRITE.CHEST_WALL], 3),
                    this.chest_buttons[ItemType.WOOD_WALL].id = ItemType.WOOD_WALL,
                    this.chest_buttons[ItemType.WOOD_SPIKE] = fT(68, 68, 0, Ie[SPRITE.CHEST_SPIKE], 3),
                    this.chest_buttons[ItemType.WOOD_SPIKE].id = ItemType.WOOD_SPIKE,
                    this.chest_buttons[ItemType.WOOD_PICK] = fT(68, 68, 0, Ie[SPRITE.CHEST_PICK_WOOD], 3),
                    this.chest_buttons[ItemType.WOOD_PICK].id = ItemType.WOOD_PICK,
                    this.chest_buttons[ItemType.COOKED_MEAT] = fT(68, 68, 0, Ie[SPRITE.CHEST_COOKED_MEAT], 3),
                    this.chest_buttons[ItemType.COOKED_MEAT].id = ItemType.COOKED_MEAT,
                    this.chest_buttons[ItemType.MEAT] = fT(68, 68, 0, Ie[SPRITE.CHEST_MEAT], 3),
                    this.chest_buttons[ItemType.MEAT].id = ItemType.MEAT,
                    this.chest_buttons[ItemType.BIG_FIRE] = fT(68, 68, 0, Ie[SPRITE.CHEST_BIG_FIRE], 3),
                    this.chest_buttons[ItemType.BIG_FIRE].id = ItemType.BIG_FIRE,
                    this.chest_buttons[ItemType.BANDAGE] = fT(68, 68, 0, Ie[SPRITE.CHEST_BANDAGE], 3),
                    this.chest_buttons[ItemType.BANDAGE].id = ItemType.BANDAGE,
                    this.chest_buttons[ItemType.CORD] = fT(68, 68, 0, Ie[SPRITE.CHEST_CORD], 3),
                    this.chest_buttons[ItemType.CORD].id = ItemType.CORD,
                    this.chest_buttons[ItemType.STONE_WALL] = fT(68, 68, 0, Ie[SPRITE.CHEST_STONE_WALL], 3),
                    this.chest_buttons[ItemType.STONE_WALL].id = ItemType.STONE_WALL,
                    this.chest_buttons[ItemType.GOLD_WALL] = fT(68, 68, 0, Ie[SPRITE.CHEST_GOLD_WALL], 3),
                    this.chest_buttons[ItemType.GOLD_WALL].id = ItemType.GOLD_WALL,
                    this.chest_buttons[ItemType.DIAMOND_WALL] = fT(68, 68, 0, Ie[SPRITE.CHEST_DIAMOND_WALL], 3),
                    this.chest_buttons[ItemType.DIAMOND_WALL].id = ItemType.DIAMOND_WALL,
                    this.chest_buttons[ItemType.WOOD_DOOR] = fT(68, 68, 0, Ie[SPRITE.CHEST_DOOR_WOOD_CLOSE], 3),
                    this.chest_buttons[ItemType.WOOD_DOOR].id = ItemType.WOOD_DOOR,
                    this.chest_buttons[ItemType.CHEST] = fT(68, 68, 0, Ie[SPRITE.CHEST_CHEST], 3),
                    this.chest_buttons[ItemType.CHEST].id = ItemType.CHEST,
                    this.chest_buttons[ItemType.STONE_SPIKE] = fT(68, 68, 0, Ie[SPRITE.CHEST_STONE_SPIKE], 3),
                    this.chest_buttons[ItemType.STONE_SPIKE].id = ItemType.STONE_SPIKE,
                    this.chest_buttons[ItemType.GOLD_SPIKE] = fT(68, 68, 0, Ie[SPRITE.CHEST_GOLD_SPIKE], 3),
                    this.chest_buttons[ItemType.GOLD_SPIKE].id = ItemType.GOLD_SPIKE,
                    this.chest_buttons[ItemType.DIAMOND_SPIKE] = fT(68, 68, 0, Ie[SPRITE.CHEST_DIAMOND_SPIKE], 3),
                    this.chest_buttons[ItemType.DIAMOND_SPIKE].id = ItemType.DIAMOND_SPIKE,
                    this.chest_buttons[ItemType.RABBIT_FUR] = fT(68, 68, 0, Ie[SPRITE.CHEST_FUR], 3),
                    this.chest_buttons[ItemType.RABBIT_FUR].id = ItemType.RABBIT_FUR,
                    this.chest_buttons[ItemType.BOAR_FUR] = fT(68, 68, 0, Ie[SPRITE.CHEST_FUR_BOAR], 3),
                    this.chest_buttons[ItemType.BOAR_FUR].id = ItemType.BOAR_FUR,
                    this.chest_buttons[ItemType.WOLF_FUR] = fT(68, 68, 0, Ie[SPRITE.CHEST_FUR_WOLF], 3),
                    this.chest_buttons[ItemType.WOLF_FUR].id = ItemType.WOLF_FUR,
                    this.chest_buttons[ItemType.PENGUIN_FEATHER] = fT(68, 68, 0, Ie[SPRITE.CHEST_PENGUIN_FEATHER], 3),
                    this.chest_buttons[ItemType.PENGUIN_FEATHER].id = ItemType.PENGUIN_FEATHER,
                    this.chest_buttons[ItemType.HAWK_FEATHER] = fT(68, 68, 0, Ie[SPRITE.CHEST_HAWK_FEATHER], 3),
                    this.chest_buttons[ItemType.HAWK_FEATHER].id = ItemType.HAWK_FEATHER,
                    this.chest_buttons[ItemType.VULTURE_FEATHER] = fT(68, 68, 0, Ie[SPRITE.CHEST_VULTURE_FEATHER], 3),
                    this.chest_buttons[ItemType.VULTURE_FEATHER].id = ItemType.VULTURE_FEATHER,
                    this.chest_buttons[ItemType.EMERALD] = fT(68, 68, 0, Ie[SPRITE.CHEST_EMERALD], 3),
                    this.chest_buttons[ItemType.EMERALD].id = ItemType.EMERALD,
                    this.chest_buttons[ItemType.EARMUFFS] = fT(68, 68, 0, Ie[SPRITE.CHEST_EARMUFFS], 3),
                    this.chest_buttons[ItemType.EARMUFFS].id = ItemType.EARMUFFS,
                    this.chest_buttons[ItemType.STONE_DOOR] = fT(68, 68, 0, Ie[SPRITE.CHEST_DOOR_STONE_CLOSE], 3),
                    this.chest_buttons[ItemType.STONE_DOOR].id = ItemType.STONE_DOOR,
                    this.chest_buttons[ItemType.GOLD_DOOR] = fT(68, 68, 0, Ie[SPRITE.CHEST_DOOR_GOLD_CLOSE], 3),
                    this.chest_buttons[ItemType.GOLD_DOOR].id = ItemType.GOLD_DOOR,
                    this.chest_buttons[ItemType.DIAMOND_DOOR] = fT(68, 68, 0, Ie[SPRITE.CHEST_DOOR_DIAMOND_CLOSE], 3),
                    this.chest_buttons[ItemType.DIAMOND_DOOR].id = ItemType.DIAMOND_DOOR,
                    this.chest_buttons[ItemType.COAT] = fT(68, 68, 0, Ie[SPRITE.CHEST_COAT], 3),
                    this.chest_buttons[ItemType.COAT].id = ItemType.COAT,
                    this.chest_buttons[ItemType.WOOD_SPEAR] = fT(68, 68, 0, Ie[SPRITE.CHEST_WOOD_SPEAR], 3),
                    this.chest_buttons[ItemType.WOOD_SPEAR].id = ItemType.WOOD_SPEAR,
                    this.chest_buttons[ItemType.STONE_SPEAR] = fT(68, 68, 0, Ie[SPRITE.CHEST_SPEAR], 3),
                    this.chest_buttons[ItemType.STONE_SPEAR].id = ItemType.STONE_SPEAR,
                    this.chest_buttons[ItemType.GOLD_SPEAR] = fT(68, 68, 0, Ie[SPRITE.CHEST_GOLD_SPEAR], 3),
                    this.chest_buttons[ItemType.GOLD_SPEAR].id = ItemType.GOLD_SPEAR,
                    this.chest_buttons[ItemType.DIAMOND_SPEAR] = fT(68, 68, 0, Ie[SPRITE.CHEST_DIAMOND_SPEAR], 3),
                    this.chest_buttons[ItemType.DIAMOND_SPEAR].id = ItemType.DIAMOND_SPEAR,
                    this.chest_buttons[ItemType.DRAGON_SPEAR] = fT(68, 68, 0, Ie[SPRITE.CHEST_DRAGON_SPEAR], 3),
                    this.chest_buttons[ItemType.DRAGON_SPEAR].id = ItemType.DRAGON_SPEAR,
                    this.chest_buttons[ItemType.FURNACE] = fT(68, 68, 0, Ie[SPRITE.CHEST_FURNACE], 3),
                    this.chest_buttons[ItemType.FURNACE].id = ItemType.FURNACE,
                    this.chest_buttons[ItemType.EXPLORER_HAT] = fT(68, 68, 0, Ie[SPRITE.CHEST_EXPLORER_HAT], 3),
                    this.chest_buttons[ItemType.EXPLORER_HAT].id = ItemType.EXPLORER_HAT,
                    this.chest_buttons[ItemType.PIRATE_HAT] = fT(68, 68, 0, Ie[SPRITE.CHEST_PIRATE_HAT], 3),
                    this.chest_buttons[ItemType.PIRATE_HAT].id = ItemType.PIRATE_HAT,
                    this.chest_buttons[ItemType.FLOWER_HAT] = fT(68, 68, 0, Ie[SPRITE.CHEST_FLOWER_HAT], 3),
                    this.chest_buttons[ItemType.FLOWER_HAT].id = ItemType.FLOWER_HAT,
                    this.chest_buttons[ItemType.FUR_HAT] = fT(68, 68, 0, Ie[SPRITE.CHEST_FUR_HAT], 3),
                    this.chest_buttons[ItemType.FUR_HAT].id = ItemType.FUR_HAT,
                    this.chest_buttons[ItemType.TURBAN1] = fT(68, 68, 0, Ie[SPRITE.CHEST_TURBAN1], 3),
                    this.chest_buttons[ItemType.TURBAN1].id = ItemType.TURBAN1,
                    this.chest_buttons[ItemType.TURBAN2] = fT(68, 68, 0, Ie[SPRITE.CHEST_TURBAN2], 3),
                    this.chest_buttons[ItemType.TURBAN2].id = ItemType.TURBAN2,
                    this.chest_buttons[ItemType.WOOD_ARROW] = fT(68, 68, 0, Ie[SPRITE.CHEST_WOOD_ARROW], 3),
                    this.chest_buttons[ItemType.WOOD_ARROW].id = ItemType.WOOD_ARROW,
                    this.chest_buttons[ItemType.WOOD_BOW] = fT(68, 68, 0, Ie[SPRITE.CHEST_WOOD_BOW], 3),
                    this.chest_buttons[ItemType.WOOD_BOW].id = ItemType.WOOD_BOW,
                    this.chest_buttons[ItemType.WOOD_SHIELD] = fT(68, 68, 0, Ie[SPRITE.CHEST_WOOD_SHIELD], 3),
                    this.chest_buttons[ItemType.WOOD_SHIELD].id = ItemType.WOOD_SHIELD,
                    this.chest_buttons[ItemType.STONE_ARROW] = fT(68, 68, 0, Ie[SPRITE.CHEST_STONE_ARROW], 3),
                    this.chest_buttons[ItemType.STONE_ARROW].id = ItemType.STONE_ARROW,
                    this.chest_buttons[ItemType.STONE_BOW] = fT(68, 68, 0, Ie[SPRITE.CHEST_STONE_BOW], 3),
                    this.chest_buttons[ItemType.STONE_BOW].id = ItemType.STONE_BOW,
                    this.chest_buttons[ItemType.STONE_SHIELD] = fT(68, 68, 0, Ie[SPRITE.CHEST_STONE_SHIELD], 3),
                    this.chest_buttons[ItemType.STONE_SHIELD].id = ItemType.STONE_SHIELD,
                    this.chest_buttons[ItemType.GOLD_ARROW] = fT(68, 68, 0, Ie[SPRITE.CHEST_GOLD_ARROW], 3),
                    this.chest_buttons[ItemType.GOLD_ARROW].id = ItemType.GOLD_ARROW,
                    this.chest_buttons[ItemType.GOLD_BOW] = fT(68, 68, 0, Ie[SPRITE.CHEST_GOLD_BOW], 3),
                    this.chest_buttons[ItemType.GOLD_BOW].id = ItemType.GOLD_BOW,
                    this.chest_buttons[ItemType.GOLD_SHIELD] = fT(68, 68, 0, Ie[SPRITE.CHEST_GOLD_SHIELD], 3),
                    this.chest_buttons[ItemType.GOLD_SHIELD].id = ItemType.GOLD_SHIELD,
                    this.chest_buttons[ItemType.DIAMOND_ARROW] = fT(68, 68, 0, Ie[SPRITE.CHEST_DIAMOND_ARROW], 3),
                    this.chest_buttons[ItemType.DIAMOND_ARROW].id = ItemType.DIAMOND_ARROW,
                    this.chest_buttons[ItemType.DIAMOND_BOW] = fT(68, 68, 0, Ie[SPRITE.CHEST_DIAMOND_BOW], 3),
                    this.chest_buttons[ItemType.DIAMOND_BOW].id = ItemType.DIAMOND_BOW,
                    this.chest_buttons[ItemType.DIAMOND_SHIELD] = fT(68, 68, 0, Ie[SPRITE.CHEST_DIAMOND_SHIELD], 3),
                    this.chest_buttons[ItemType.DIAMOND_SHIELD].id = ItemType.DIAMOND_SHIELD,
                    this.chest_buttons[ItemType.AMETHYST_ARROW] = fT(68, 68, 0, Ie[SPRITE.CHEST_AMETHYST_ARROW], 3),
                    this.chest_buttons[ItemType.AMETHYST_ARROW].id = ItemType.AMETHYST_ARROW,
                    this.chest_buttons[ItemType.AMETHYST_BOW] = fT(68, 68, 0, Ie[SPRITE.CHEST_AMETHYST_BOW], 3),
                    this.chest_buttons[ItemType.AMETHYST_BOW].id = ItemType.AMETHYST_BOW,
                    this.chest_buttons[ItemType.AMETHYST_SHIELD] = fT(68, 68, 0, Ie[SPRITE.CHEST_AMETHYST_SHIELD], 3),
                    this.chest_buttons[ItemType.AMETHYST_SHIELD].id = ItemType.AMETHYST_SHIELD,
                    this.chest_buttons[ItemType.REIDITE_ARROW] = fT(68, 68, 0, Ie[SPRITE.CHEST_REIDITE_ARROW], 3),
                    this.chest_buttons[ItemType.REIDITE_ARROW].id = ItemType.REIDITE_ARROW,
                    this.chest_buttons[ItemType.REIDITE_BOW] = fT(68, 68, 0, Ie[SPRITE.CHEST_REIDITE_BOW], 3),
                    this.chest_buttons[ItemType.REIDITE_BOW].id = ItemType.REIDITE_BOW,
                    this.chest_buttons[ItemType.REIDITE_SHIELD] = fT(68, 68, 0, Ie[SPRITE.CHEST_REIDITE_SHIELD], 3),
                    this.chest_buttons[ItemType.REIDITE_SHIELD].id = ItemType.REIDITE_SHIELD,
                    this.chest_buttons[ItemType.DRAGON_ARROW] = fT(68, 68, 0, Ie[SPRITE.CHEST_DRAGON_ARROW], 3),
                    this.chest_buttons[ItemType.DRAGON_ARROW].id = ItemType.DRAGON_ARROW,
                    this.chest_buttons[ItemType.DRAGON_BOW] = fT(68, 68, 0, Ie[SPRITE.CHEST_DRAGON_BOW], 3),
                    this.chest_buttons[ItemType.DRAGON_BOW].id = ItemType.DRAGON_BOW,
                    this.chest_buttons[ItemType.WOOD_HELMET] = fT(68, 68, 0, Ie[SPRITE.CHEST_WOOD_HELMET], 3),
                    this.chest_buttons[ItemType.WOOD_HELMET].id = ItemType.WOOD_HELMET,
                    this.chest_buttons[ItemType.STONE_HELMET] = fT(68, 68, 0, Ie[SPRITE.CHEST_STONE_HELMET], 3),
                    this.chest_buttons[ItemType.STONE_HELMET].id = ItemType.STONE_HELMET,
                    this.chest_buttons[ItemType.GOLD_HELMET] = fT(68, 68, 0, Ie[SPRITE.CHEST_GOLD_HELMET], 3),
                    this.chest_buttons[ItemType.GOLD_HELMET].id = ItemType.GOLD_HELMET,
                    this.chest_buttons[ItemType.DIAMOND_HELMET] = fT(68, 68, 0, Ie[SPRITE.CHEST_DIAMOND_HELMET], 3),
                    this.chest_buttons[ItemType.DIAMOND_HELMET].id = ItemType.DIAMOND_HELMET,
                    this.chest_buttons[ItemType.BOOK] = fT(68, 68, 0, Ie[SPRITE.CHEST_BOOK], 3),
                    this.chest_buttons[ItemType.BOOK].id = ItemType.BOOK,
                    this.chest_buttons[ItemType.PAPER] = fT(68, 68, 0, Ie[SPRITE.CHEST_PAPER], 3),
                    this.chest_buttons[ItemType.PAPER].id = ItemType.PAPER,
                    this.chest_buttons[ItemType.BAG] = fT(68, 68, 0, Ie[SPRITE.CHEST_BAG], 3),
                    this.chest_buttons[ItemType.BAG].id = ItemType.BAG,
                    this.chest_buttons[ItemType.AMETHYST] = fT(68, 68, 0, Ie[SPRITE.CHEST_AMETHYST], 3),
                    this.chest_buttons[ItemType.AMETHYST].id = ItemType.AMETHYST,
                    this.chest_buttons[ItemType.AMETHYST_SWORD] = fT(68, 68, 0, Ie[SPRITE.CHEST_SWORD_AMETHYST], 3),
                    this.chest_buttons[ItemType.AMETHYST_SWORD].id = ItemType.AMETHYST_SWORD,
                    this.chest_buttons[ItemType.PIRATE_SWORD] = fT(68, 68, 0, Ie[SPRITE.CHEST_PIRATE_SWORD], 3),
                    this.chest_buttons[ItemType.PIRATE_SWORD].id = ItemType.PIRATE_SWORD,
                    this.chest_buttons[ItemType.AMETHYST_PICK] = fT(68, 68, 0, Ie[SPRITE.CHEST_PICK_AMETHYST], 3),
                    this.chest_buttons[ItemType.AMETHYST_PICK].id = ItemType.AMETHYST_PICK,
                    this.chest_buttons[ItemType.REIDITE_PICK] = fT(68, 68, 0, Ie[SPRITE.CHEST_PICK_REIDITE], 3),
                    this.chest_buttons[ItemType.REIDITE_PICK].id = ItemType.REIDITE_PICK,
                    this.chest_buttons[ItemType.AMETHYST_SPEAR] = fT(68, 68, 0, Ie[SPRITE.CHEST_AMETHYST_SPEAR], 3),
                    this.chest_buttons[ItemType.AMETHYST_SPEAR].id = ItemType.AMETHYST_SPEAR,
                    this.chest_buttons[ItemType.STONE_HAMMER] = fT(68, 68, 0, Ie[SPRITE.CHEST_HAMMER], 3),
                    this.chest_buttons[ItemType.STONE_HAMMER].id = ItemType.STONE_HAMMER,
                    this.chest_buttons[ItemType.GOLD_HAMMER] = fT(68, 68, 0, Ie[SPRITE.CHEST_HAMMER_GOLD], 3),
                    this.chest_buttons[ItemType.GOLD_HAMMER].id = ItemType.GOLD_HAMMER,
                    this.chest_buttons[ItemType.DIAMOND_HAMMER] = fT(68, 68, 0, Ie[SPRITE.CHEST_HAMMER_DIAMOND], 3),
                    this.chest_buttons[ItemType.DIAMOND_HAMMER].id = ItemType.DIAMOND_HAMMER,
                    this.chest_buttons[ItemType.AMETHYST_HAMMER] = fT(68, 68, 0, Ie[SPRITE.CHEST_HAMMER_AMETHYST], 3),
                    this.chest_buttons[ItemType.AMETHYST_HAMMER].id = ItemType.AMETHYST_HAMMER,
                    this.chest_buttons[ItemType.REIDITE_HAMMER] = fT(68, 68, 0, Ie[SPRITE.CHEST_HAMMER_REIDITE], 3),
                    this.chest_buttons[ItemType.REIDITE_HAMMER].id = ItemType.REIDITE_HAMMER,
                    this.chest_buttons[ItemType.AMETHYST_WALL] = fT(68, 68, 0, Ie[SPRITE.CHEST_AMETHYST_WALL], 3),
                    this.chest_buttons[ItemType.AMETHYST_WALL].id = ItemType.AMETHYST_WALL,
                    this.chest_buttons[ItemType.AMETHYST_SPIKE] = fT(68, 68, 0, Ie[SPRITE.CHEST_AMETHYST_SPIKE], 3),
                    this.chest_buttons[ItemType.AMETHYST_SPIKE].id = ItemType.AMETHYST_SPIKE,
                    this.chest_buttons[ItemType.AMETHYST_DOOR] = fT(68, 68, 0, Ie[SPRITE.CHEST_DOOR_AMETHYST_CLOSE], 3),
                    this.chest_buttons[ItemType.AMETHYST_DOOR].id = ItemType.AMETHYST_DOOR,
                    this.chest_buttons[ItemType.CAP_SCARF] = fT(68, 68, 0, Ie[SPRITE.CHEST_CAP_SCARF], 3),
                    this.chest_buttons[ItemType.CAP_SCARF].id = ItemType.CAP_SCARF,
                    this.chest_buttons[ItemType.WINTER_FUR] = fT(68, 68, 0, Ie[SPRITE.CHEST_FUR_WINTER], 3),
                    this.chest_buttons[ItemType.WINTER_FUR].id = ItemType.WINTER_FUR,
                    this.chest_buttons[ItemType.MAMMOTH_FUR] = fT(68, 68, 0, Ie[SPRITE.CHEST_FUR_MAMMOTH], 3),
                    this.chest_buttons[ItemType.MAMMOTH_FUR].id = ItemType.MAMMOTH_FUR,
                    this.chest_buttons[ItemType.DIAMOND_CORD] = fT(68, 68, 0, Ie[SPRITE.CHEST_BLUE_CORD], 3),
                    this.chest_buttons[ItemType.DIAMOND_CORD].id = ItemType.DIAMOND_CORD,
                    this.chest_buttons[ItemType.LOCK] = fT(68, 68, 0, Ie[SPRITE.CHEST_LOCK], 3),
                    this.chest_buttons[ItemType.LOCK].id = ItemType.LOCK,
                    this.chest_buttons[ItemType.DRAGON_HEART] = fT(68, 68, 0, Ie[SPRITE.CHEST_DRAGON_HEART], 3),
                    this.chest_buttons[ItemType.DRAGON_HEART].id = ItemType.DRAGON_HEART,
                    this.chest_buttons[ItemType.LAVA_HEART] = fT(68, 68, 0, Ie[SPRITE.CHEST_LAVA_HEART], 3),
                    this.chest_buttons[ItemType.LAVA_HEART].id = ItemType.LAVA_HEART,
                    this.chest_buttons[ItemType.RESURRECTION] = fT(68, 68, 0, Ie[SPRITE.CHEST_RESURRECTION], 3),
                    this.chest_buttons[ItemType.RESURRECTION].id = ItemType.RESURRECTION,
                    this.chest_buttons[ItemType.LOCK_PICK] = fT(68, 68, 0, Ie[SPRITE.CHEST_LOCKPICK], 3),
                    this.chest_buttons[ItemType.LOCK_PICK].id = ItemType.LOCK_PICK,
                    this.chest_buttons[ItemType.TOTEM] = fT(68, 68, 0, Ie[SPRITE.CHEST_TOTEM], 3),
                    this.chest_buttons[ItemType.TOTEM].id = ItemType.TOTEM,
                    this.chest_buttons[ItemType.AMETHYST_HELMET] = fT(68, 68, 0, Ie[SPRITE.CHEST_AMETHYST_HELMET], 3),
                    this.chest_buttons[ItemType.AMETHYST_HELMET].id = ItemType.AMETHYST_HELMET,
                    this.chest_buttons[ItemType.SUPER_HAMMER] = fT(68, 68, 0, Ie[SPRITE.CHEST_SUPER_HAMMER], 3),
                    this.chest_buttons[ItemType.SUPER_HAMMER].id = ItemType.SUPER_HAMMER,
                    this.chest_buttons[ItemType.BRIDGE] = fT(68, 68, 0, Ie[SPRITE.CHEST_BRIDGE], 3),
                    this.chest_buttons[ItemType.BRIDGE].id = ItemType.BRIDGE,
                    this.chest_buttons[ItemType.TOWER] = fT(68, 68, 0, Ie[SPRITE.CHEST_WOOD_TOWER], 3),
                    this.chest_buttons[ItemType.TOWER].id = ItemType.TOWER,
                    this.chest_buttons[ItemType.BOAT] = fT(68, 68, 0, Ie[SPRITE.CHEST_BOAT], 3),
                    this.chest_buttons[ItemType.BOAT].id = ItemType.BOAT,
                    this.chest_buttons[ItemType.SLED] = fT(68, 68, 0, Ie[SPRITE.CHEST_SLED], 3),
                    this.chest_buttons[ItemType.SLED].id = ItemType.SLED,
                    this.chest_buttons[ItemType.PLANE] = fT(68, 68, 0, Ie[SPRITE.CHEST_PLANE], 3),
                    this.chest_buttons[ItemType.PLANE].id = ItemType.PLANE,
                    this.chest_buttons[ItemType.SADDLE] = fT(68, 68, 0, Ie[SPRITE.CHEST_SADDLE], 3),
                    this.chest_buttons[ItemType.SADDLE].id = ItemType.SADDLE,
                    this.chest_buttons[ItemType.BOAR] = fT(68, 68, 0, Ie[SPRITE.CHEST_MOUNT_BOAR], 3),
                    this.chest_buttons[ItemType.BOAR].id = ItemType.BOAR,
                    this.chest_buttons[ItemType.BABY_DRAGON] = fT(68, 68, 0, Ie[SPRITE.CHEST_BABY_DRAGON], 3),
                    this.chest_buttons[ItemType.BABY_DRAGON].id = ItemType.BABY_DRAGON,
                    this.chest_buttons[ItemType.BABY_MAMMOTH] = fT(68, 68, 0, Ie[SPRITE.CHEST_BABY_MAMMOTH], 3),
                    this.chest_buttons[ItemType.BABY_MAMMOTH].id = ItemType.BABY_MAMMOTH,
                    this.chest_buttons[ItemType.BABY_LAVA] = fT(68, 68, 0, Ie[SPRITE.CHEST_BABY_LAVA], 3),
                    this.chest_buttons[ItemType.BABY_LAVA].id = ItemType.BABY_LAVA,
                    this.chest_buttons[ItemType.HAWK] = fT(68, 68, 0, Ie[SPRITE.CHEST_HAWK], 3),
                    this.chest_buttons[ItemType.HAWK].id = ItemType.HAWK,
                    this.chest_buttons[ItemType.CRAB_BOSS] = fT(68, 68, 0, Ie[SPRITE.CHEST_CRAB_BOSS], 3),
                    this.chest_buttons[ItemType.CRAB_BOSS].id = ItemType.CRAB_BOSS,
                    this.chest_buttons[ItemType.SAND] = fT(68, 68, 0, Ie[SPRITE.CHEST_SAND], 3),
                    this.chest_buttons[ItemType.SAND].id = ItemType.SAND,
                    this.chest_buttons[ItemType.BOTTLE_FULL] = fT(68, 68, 0, Ie[SPRITE.CHEST_BOTTLE_FULL], 3),
                    this.chest_buttons[ItemType.BOTTLE_FULL].id = ItemType.BOTTLE_FULL,
                    this.chest_buttons[ItemType.BOTTLE_EMPTY] = fT(68, 68, 0, Ie[SPRITE.CHEST_BOTTLE_EMPTY], 3),
                    this.chest_buttons[ItemType.BOTTLE_EMPTY].id = ItemType.BOTTLE_EMPTY,
                    this.chest_buttons[ItemType.STONE_SHOVEL] = fT(68, 68, 0, Ie[SPRITE.CHEST_SHOVEL], 3),
                    this.chest_buttons[ItemType.STONE_SHOVEL].id = ItemType.STONE_SHOVEL,
                    this.chest_buttons[ItemType.GOLD_SHOVEL] = fT(68, 68, 0, Ie[SPRITE.CHEST_SHOVEL_GOLD], 3),
                    this.chest_buttons[ItemType.GOLD_SHOVEL].id = ItemType.GOLD_SHOVEL,
                    this.chest_buttons[ItemType.DIAMOND_SHOVEL] = fT(68, 68, 0, Ie[SPRITE.CHEST_SHOVEL_DIAMOND], 3),
                    this.chest_buttons[ItemType.DIAMOND_SHOVEL].id = ItemType.DIAMOND_SHOVEL,
                    this.chest_buttons[ItemType.AMETHYST_SHOVEL] = fT(68, 68, 0, Ie[SPRITE.CHEST_SHOVEL_AMETHYST], 3),
                    this.chest_buttons[ItemType.AMETHYST_SHOVEL].id = ItemType.AMETHYST_SHOVEL,
                    this.chest_buttons[ItemType.REIDITE_SHOVEL] = fT(68, 68, 0, Ie[SPRITE.CHEST_SHOVEL_REIDITE], 3),
                    this.chest_buttons[ItemType.REIDITE_SHOVEL].id = ItemType.REIDITE_SHOVEL,
                    this.chest_buttons[ItemType.WRENCH] = fT(68, 68, 0, Ie[SPRITE.CHEST_SPANNER], 3),
                    this.chest_buttons[ItemType.WRENCH].id = ItemType.WRENCH,
                    this.chest_buttons[ItemType.GOLD_WRENCH] = fT(68, 68, 0, Ie[SPRITE.INV_GOLD_WRENCH], 3),
                    this.chest_buttons[ItemType.GOLD_WRENCH].id = ItemType.GOLD_WRENCH,
                    this.chest_buttons[ItemType.KRAKEN_FUR] = fT(68, 68, 0, Ie[SPRITE.CHEST_KRAKEN_SKIN], 3),
                    this.chest_buttons[ItemType.KRAKEN_FUR].id = ItemType.KRAKEN_FUR,
                    this.chest_buttons[ItemType.WATERING_CAN_EMPTY] = fT(68, 68, 0, Ie[SPRITE.CHEST_WATERING_CAN], 3),
                    this.chest_buttons[ItemType.WATERING_CAN_EMPTY].id = ItemType.WATERING_CAN_EMPTY,
                    this.chest_buttons[ItemType.FLOUR] = fT(68, 68, 0, Ie[SPRITE.CHEST_FLOUR], 3),
                    this.chest_buttons[ItemType.FLOUR].id = ItemType.FLOUR,
                    this.chest_buttons[ItemType.WHEAT_SEED] = fT(68, 68, 0, Ie[SPRITE.CHEST_WHEAT_SEED], 3),
                    this.chest_buttons[ItemType.WHEAT_SEED].id = ItemType.WHEAT_SEED,
                    this.chest_buttons[ItemType.COOKIE] = fT(68, 68, 0, Ie[SPRITE.CHEST_COOKIE], 3),
                    this.chest_buttons[ItemType.COOKIE].id = ItemType.COOKIE,
                    this.chest_buttons[ItemType.WHEAT] = fT(68, 68, 0, Ie[SPRITE.CHEST_WILD_WHEAT], 3),
                    this.chest_buttons[ItemType.WHEAT].id = ItemType.WHEAT,
                    this.chest_buttons[ItemType.WINDMILL] = fT(68, 68, 0, Ie[SPRITE.CHEST_WINDMILL], 3),
                    this.chest_buttons[ItemType.WINDMILL].id = ItemType.WINDMILL,
                    this.chest_buttons[ItemType.SUPER_DIVING_SUIT] = fT(68, 68, 0, Ie[SPRITE.CHEST_SUPER_DIVING_SUIT], 3),
                    this.chest_buttons[ItemType.SUPER_DIVING_SUIT].id = ItemType.SUPER_DIVING_SUIT,
                    this.chest_buttons[ItemType.DIVING_MASK] = fT(68, 68, 0, Ie[SPRITE.CHEST_DIVING_MASK], 3),
                    this.chest_buttons[ItemType.DIVING_MASK].id = ItemType.DIVING_MASK,
                    this.chest_buttons[ItemType.WATERING_CAN_FULL] = fT(68, 68, 0, Ie[SPRITE.CHEST_WATERING_CAN_FULL], 3),
                    this.chest_buttons[ItemType.WATERING_CAN_FULL].id = ItemType.WATERING_CAN_FULL,
                    this.chest_buttons[ItemType.CAKE] = fT(68, 68, 0, Ie[SPRITE.CHEST_CAKE], 3),
                    this.chest_buttons[ItemType.CAKE].id = ItemType.CAKE,
                    this.chest_buttons[ItemType.BREAD] = fT(68, 68, 0, Ie[SPRITE.CHEST_BREAD], 3),
                    this.chest_buttons[ItemType.BREAD].id = ItemType.BREAD,
                    this.chest_buttons[ItemType.FISH] = fT(68, 68, 0, Ie[SPRITE.CHEST_FOODFISH], 3),
                    this.chest_buttons[ItemType.FISH].id = ItemType.FISH,
                    this.chest_buttons[ItemType.FISH_COOKED] = fT(68, 68, 0, Ie[SPRITE.CHEST_FOODFISH_COOKED], 3),
                    this.chest_buttons[ItemType.FISH_COOKED].id = ItemType.FISH_COOKED,
                    this.chest_buttons[ItemType.PIRANHA_SCALES] = fT(68, 68, 0, Ie[SPRITE.CHEST_SCALES], 3),
                    this.chest_buttons[ItemType.PIRANHA_SCALES].id = ItemType.PIRANHA_SCALES,
                    this.chest_buttons[ItemType.GROUND] = fT(68, 68, 0, Ie[SPRITE.CHEST_GROUND], 3),
                    this.chest_buttons[ItemType.GROUND].id = ItemType.GROUND,
                    this.chest_buttons[ItemType.PLOT] = fT(68, 68, 0, Ie[SPRITE.CHEST_PLOT], 3),
                    this.chest_buttons[ItemType.PLOT].id = ItemType.PLOT,
                    this.chest_buttons[ItemType.ICE] = fT(68, 68, 0, Ie[SPRITE.CHEST_ICE], 3),
                    this.chest_buttons[ItemType.ICE].id = ItemType.ICE,
                    this.chest_buttons[ItemType.BREAD_OVEN] = fT(68, 68, 0, Ie[SPRITE.CHEST_BREAD_OVEN], 3),
                    this.chest_buttons[ItemType.BREAD_OVEN].id = ItemType.BREAD_OVEN,
                    this.chest_buttons[ItemType.SANDWICH] = fT(68, 68, 0, Ie[SPRITE.CHEST_SANDWICH], 3),
                    this.chest_buttons[ItemType.SANDWICH].id = ItemType.SANDWICH,
                    this.chest_buttons[ItemType.DRAGON_HELMET] = fT(68, 68, 0, Ie[SPRITE.CHEST_DRAGON_HELMET], 3),
                    this.chest_buttons[ItemType.DRAGON_HELMET].id = ItemType.DRAGON_HELMET,
                    this.chest_buttons[ItemType.DRAGON_SWORD] = fT(68, 68, 0, Ie[SPRITE.CHEST_DRAGON_SWORD], 3),
                    this.chest_buttons[ItemType.DRAGON_SWORD].id = ItemType.DRAGON_SWORD,
                    this.chest_buttons[ItemType.DRAGON_ORB] = fT(68, 68, 0, Ie[SPRITE.CHEST_DRAGON_ORB], 3),
                    this.chest_buttons[ItemType.DRAGON_ORB].id = ItemType.DRAGON_ORB,
                    this.chest_buttons[ItemType.DRAGON_CUBE] = fT(68, 68, 0, Ie[SPRITE.CHEST_DRAGON_CUBE], 3),
                    this.chest_buttons[ItemType.DRAGON_CUBE].id = ItemType.DRAGON_CUBE,
                    this.chest_buttons[ItemType.LAVA_ORB] = fT(68, 68, 0, Ie[SPRITE.CHEST_LAVA_ORB], 3),
                    this.chest_buttons[ItemType.LAVA_ORB].id = ItemType.LAVA_ORB,
                    this.chest_buttons[ItemType.LAVA_CUBE] = fT(68, 68, 0, Ie[SPRITE.CHEST_LAVA_CUBE], 3),
                    this.chest_buttons[ItemType.LAVA_CUBE].id = ItemType.LAVA_CUBE,
                    this.chest_buttons[ItemType.CROWN_GREEN] = fT(68, 68, 0, Ie[SPRITE.CHEST_CROWN_GREEN], 3),
                    this.chest_buttons[ItemType.CROWN_GREEN].id = ItemType.CROWN_GREEN,
                    this.chest_buttons[ItemType.GEM_GREEN] = fT(68, 68, 0, Ie[SPRITE.CHEST_GEMME_GREEN], 3),
                    this.chest_buttons[ItemType.GEM_GREEN].id = ItemType.GEM_GREEN,
                    this.chest_buttons[ItemType.GEM_ORANGE] = fT(68, 68, 0, Ie[SPRITE.CHEST_GEMME_ORANGE], 3),
                    this.chest_buttons[ItemType.GEM_ORANGE].id = ItemType.GEM_ORANGE,
                    this.chest_buttons[ItemType.CROWN_ORANGE] = fT(68, 68, 0, Ie[SPRITE.CHEST_CROWN_ORANGE], 3),
                    this.chest_buttons[ItemType.CROWN_ORANGE].id = ItemType.CROWN_ORANGE,
                    this.chest_buttons[ItemType.GEM_BLUE] = fT(68, 68, 0, Ie[SPRITE.CHEST_GEMME_BLUE], 3),
                    this.chest_buttons[ItemType.GEM_BLUE].id = ItemType.GEM_BLUE,
                    this.chest_buttons[ItemType.CROWN_BLUE] = fT(68, 68, 0, Ie[SPRITE.CHEST_CROWN_BLUE], 3),
                    this.chest_buttons[ItemType.CROWN_BLUE].id = ItemType.CROWN_BLUE,
                    this.chest_buttons[ItemType.HOOD] = fT(68, 68, 0, Ie[SPRITE.CHEST_HOOD], 3),
                    this.chest_buttons[ItemType.HOOD].id = ItemType.HOOD,
                    this.chest_buttons[ItemType.PEASANT] = fT(68, 68, 0, Ie[SPRITE.CHEST_PEASANT], 3),
                    this.chest_buttons[ItemType.PEASANT].id = ItemType.PEASANT,
                    this.chest_buttons[ItemType.WINTER_PEASANT_FUR] = fT(68, 68, 0, Ie[SPRITE.CHEST_SPECIAL_FUR], 3),
                    this.chest_buttons[ItemType.WINTER_PEASANT_FUR].id = ItemType.WINTER_PEASANT_FUR,
                    this.chest_buttons[ItemType.WINTER_HOOD_FUR] = fT(68, 68, 0, Ie[SPRITE.CHEST_SPECIAL_FUR_2], 3),
                    this.chest_buttons[ItemType.WINTER_HOOD_FUR].id = ItemType.WINTER_HOOD_FUR,
                    this.chest_buttons[ItemType.WINTER_PEASANT] = fT(68, 68, 0, Ie[SPRITE.CHEST_WINTER_PEASANT], 3),
                    this.chest_buttons[ItemType.WINTER_PEASANT].id = ItemType.WINTER_PEASANT,
                    this.chest_buttons[ItemType.WINTER_HOOD] = fT(68, 68, 0, Ie[SPRITE.CHEST_WINTER_HOOD], 3),
                    this.chest_buttons[ItemType.WINTER_HOOD].id = ItemType.WINTER_HOOD,
                    this.chest_buttons[ItemType.BUCKET_FULL] = fT(68, 68, 0, Ie[SPRITE.CHEST_BUCKET_FULL], 3),
                    this.chest_buttons[ItemType.BUCKET_FULL].id = ItemType.BUCKET_FULL,
                    this.chest_buttons[ItemType.BUCKET_EMPTY] = fT(68, 68, 0, Ie[SPRITE.CHEST_BUCKET_EMPTY], 3),
                    this.chest_buttons[ItemType.BUCKET_EMPTY].id = ItemType.BUCKET_EMPTY,
                    this.chest_buttons[ItemType.WELL] = fT(68, 68, 0, Ie[SPRITE.CHEST_WELL], 3),
                    this.chest_buttons[ItemType.WELL].id = ItemType.WELL,
                    this.chest_buttons[ItemType.PUMPKIN_SEED] = fT(68, 68, 0, Ie[SPRITE.CHEST_PUMPKIN_SEED], 3),
                    this.chest_buttons[ItemType.PUMPKIN_SEED].id = ItemType.PUMPKIN_SEED,
                    this.chest_buttons[ItemType.PUMPKIN] = fT(68, 68, 0, Ie[SPRITE.CHEST_PUMPKIN], 3),
                    this.chest_buttons[ItemType.PUMPKIN].id = ItemType.PUMPKIN,
                    this.chest_buttons[ItemType.ROOF] = fT(68, 68, 0, Ie[SPRITE.CHEST_ROOF], 3),
                    this.chest_buttons[ItemType.ROOF].id = ItemType.ROOF,
                    this.chest_buttons[ItemType.GARLIC_SEED] = fT(68, 68, 0, Ie[SPRITE.CHEST_GARLIC_SEED], 3),
                    this.chest_buttons[ItemType.GARLIC_SEED].id = ItemType.GARLIC_SEED,
                    this.chest_buttons[ItemType.GARLIC] = fT(68, 68, 0, Ie[SPRITE.CHEST_GARLIC], 3),
                    this.chest_buttons[ItemType.GARLIC].id = ItemType.GARLIC,
                    this.chest_buttons[ItemType.THORNBUSH_SEED] = fT(68, 68, 0, Ie[SPRITE.CHEST_THORNBUSH_SEED], 3),
                    this.chest_buttons[ItemType.THORNBUSH_SEED].id = ItemType.THORNBUSH_SEED,
                    this.chest_buttons[ItemType.THORNBUSH] = fT(68, 68, 0, Ie[SPRITE.CHEST_THORNBUSH], 3),
                    this.chest_buttons[ItemType.THORNBUSH].id = ItemType.THORNBUSH,
                    this.chest_buttons[ItemType.TOMATO_SEED] = fT(68, 68, 0, Ie[SPRITE.CHEST_TOMATO_SEED], 3),
                    this.chest_buttons[ItemType.TOMATO_SEED].id = ItemType.TOMATO_SEED,
                    this.chest_buttons[ItemType.TOMATO] = fT(68, 68, 0, Ie[SPRITE.CHEST_TOMATO], 3),
                    this.chest_buttons[ItemType.TOMATO].id = ItemType.TOMATO,
                    this.chest_buttons[ItemType.CARROT_SEED] = fT(68, 68, 0, Ie[SPRITE.CHEST_CARROT_SEED], 3),
                    this.chest_buttons[ItemType.CARROT_SEED].id = ItemType.CARROT_SEED,
                    this.chest_buttons[ItemType.CARROT] = fT(68, 68, 0, Ie[SPRITE.CHEST_CARROT], 3),
                    this.chest_buttons[ItemType.CARROT].id = ItemType.CARROT,
                    this.chest_buttons[ItemType.WATERMELON_SEED] = fT(68, 68, 0, Ie[SPRITE.CHEST_WATERMELON_SEED], 3),
                    this.chest_buttons[ItemType.WATERMELON_SEED].id = ItemType.WATERMELON_SEED,
                    this.chest_buttons[ItemType.WATERMELON] = fT(68, 68, 0, Ie[SPRITE.CHEST_WATERMELON], 3),
                    this.chest_buttons[ItemType.WATERMELON].id = ItemType.WATERMELON,
                    this.chest_buttons[ItemType.ALOE_VERA_SEED] = fT(68, 68, 0, Ie[SPRITE.CHEST_ALOE_VERA_SEED], 3),
                    this.chest_buttons[ItemType.ALOE_VERA_SEED].id = ItemType.ALOE_VERA_SEED,
                    this.chest_buttons[ItemType.ALOE_VERA] = fT(68, 68, 0, Ie[SPRITE.CHEST_ALOE_VERA], 3),
                    this.chest_buttons[ItemType.ALOE_VERA].id = ItemType.ALOE_VERA,
                    this.chest_buttons[ItemType.CHRISTMAS_HAT] = fT(68, 68, 0, Ie[SPRITE.CHEST_CHRISTMAS_HAT], 3),
                    this.chest_buttons[ItemType.CHRISTMAS_HAT].id = ItemType.CHRISTMAS_HAT,
                    this.chest_buttons[ItemType.ELF_HAT] = fT(68, 68, 0, Ie[SPRITE.CHEST_ELF_HAT], 3),
                    this.chest_buttons[ItemType.ELF_HAT].id = ItemType.ELF_HAT,
                    this.chest_buttons[ItemType.WOOD_SPEAR] = fT(68, 68, 0, Ie[SPRITE.CHEST_WOOD_SPEAR], 3),
                    this.chest_buttons[ItemType.WOOD_SPEAR].id = ItemType.WOOD_SPEAR,
                    this.chest_buttons[ItemType.DRAGON_SPEAR] = fT(68, 68, 0, Ie[SPRITE.CHEST_DRAGON_SPEAR], 3),
                    this.chest_buttons[ItemType.DRAGON_SPEAR].id = ItemType.DRAGON_SPEAR,
                    this.chest_buttons[ItemType.CRAB_STICK] = fT(68, 68, 0, Ie[SPRITE.CHEST_CRAB_STICK], 3),
                    this.chest_buttons[ItemType.CRAB_STICK].id = ItemType.CRAB_STICK,
                    this.chest_buttons[ItemType.CRAB_SPEAR] = fT(68, 68, 0, Ie[SPRITE.CHEST_CRAB_SPEAR], 3),
                    this.chest_buttons[ItemType.CRAB_SPEAR].id = ItemType.CRAB_SPEAR,
                    this.chest_buttons[ItemType.CRAB_LOOT] = fT(68, 68, 0, Ie[SPRITE.CHEST_CRAB_LOOT], 3),
                    this.chest_buttons[ItemType.CRAB_LOOT].id = ItemType.CRAB_LOOT,
                    this.chest_buttons[ItemType.BED] = fT(68, 68, 0, Ie[SPRITE.CHEST_BED], 3),
                    this.chest_buttons[ItemType.BED].id = ItemType.BED,
                    this.chest_buttons[ItemType.CRAB_HELMET] = fT(68, 68, 0, Ie[SPRITE.CHEST_CROWN_CRAB], 3),
                    this.chest_buttons[ItemType.CRAB_HELMET].id = ItemType.CRAB_HELMET,
                    this.chest_buttons[ItemType.GARLAND] = fT(68, 68, 0, Ie[SPRITE.CHEST_GARLAND], 3),
                    this.chest_buttons[ItemType.GARLAND].id = ItemType.GARLAND,
                    this.chest_buttons[ItemType.SUGAR_CAN] = fT(68, 68, 0, Ie[SPRITE.CHEST_SUGAR_CAN], 3),
                    this.chest_buttons[ItemType.SUGAR_CAN].id = ItemType.SUGAR_CAN,
                    this.chest_buttons[ItemType.CANDY] = fT(68, 68, 0, Ie[SPRITE.CHEST_CANDY], 3),
                    this.chest_buttons[ItemType.CANDY].id = ItemType.CANDY,
                    this.plus_buttons = [];
                    for (n = 0; n < 250; n++)
                        this.plus_buttons[n] = fT(0, 0, 0, Ie[SPRITE.CHEST_PLUS]);
                    this.inv_buttons = [],
                    this.inv_buttons[ItemType.STONE_SWORD] = fT(60, 60, 0, Ie[SPRITE.INV_SWORD], 3),
                    this.inv_buttons[ItemType.STONE_SWORD].id = ItemType.STONE_SWORD,
                    this.inv_buttons[ItemType.STONE_PICK] = fT(60, 60, 0, Ie[SPRITE.INV_PICK], 3),
                    this.inv_buttons[ItemType.STONE_PICK].id = ItemType.STONE_PICK,
                    this.inv_buttons[ItemType.STONE] = fT(60, 60, 0, Ie[SPRITE.INV_STONE], 3),
                    this.inv_buttons[ItemType.STONE].id = ItemType.STONE,
                    this.inv_buttons[ItemType.STONE].info.img[2] = this.inv_buttons[ItemType.STONE].info.img[0],
                    this.inv_buttons[ItemType.WOOD] = fT(60, 60, 0, Ie[SPRITE.INV_WOOD], 3),
                    this.inv_buttons[ItemType.WOOD].id = ItemType.WOOD,
                    this.inv_buttons[ItemType.WOOD].info.img[2] = this.inv_buttons[ItemType.WOOD].info.img[0],
                    this.inv_buttons[ItemType.BERRY] = fT(60, 60, 0, Ie[SPRITE.INV_PLANT], 3),
                    this.inv_buttons[ItemType.BERRY].id = ItemType.BERRY,
                    this.inv_buttons[ItemType.CACTUS] = fT(60, 60, 0, Ie[SPRITE.INV_CACTUS], 3),
                    this.inv_buttons[ItemType.CACTUS].id = ItemType.CACTUS,
                    this.inv_buttons[ItemType.GOLD] = fT(60, 60, 0, Ie[SPRITE.INV_GOLD], 3),
                    this.inv_buttons[ItemType.GOLD].id = ItemType.GOLD,
                    this.inv_buttons[ItemType.GOLD].info.img[2] = this.inv_buttons[ItemType.GOLD].info.img[0],
                    this.inv_buttons[ItemType.DIAMOND] = fT(60, 60, 0, Ie[SPRITE.INV_DIAMOND], 3),
                    this.inv_buttons[ItemType.DIAMOND].id = ItemType.DIAMOND,
                    this.inv_buttons[ItemType.DIAMOND].info.img[2] = this.inv_buttons[ItemType.DIAMOND].info.img[0],
                    this.inv_buttons[ItemType.GOLD_PICK] = fT(60, 60, 0, Ie[SPRITE.INV_PICK_GOLD], 3),
                    this.inv_buttons[ItemType.GOLD_PICK].id = ItemType.GOLD_PICK,
                    this.inv_buttons[ItemType.DIAMOND_PICK] = fT(60, 60, 0, Ie[SPRITE.INV_PICK_DIAMOND], 3),
                    this.inv_buttons[ItemType.DIAMOND_PICK].id = ItemType.DIAMOND_PICK,
                    this.inv_buttons[ItemType.GOLD_SWORD] = fT(60, 60, 0, Ie[SPRITE.INV_SWORD_GOLD], 3),
                    this.inv_buttons[ItemType.GOLD_SWORD].id = ItemType.GOLD_SWORD,
                    this.inv_buttons[ItemType.WOOD_SWORD] = fT(60, 60, 0, Ie[SPRITE.INV_SWORD_WOOD], 3),
                    this.inv_buttons[ItemType.WOOD_SWORD].id = ItemType.WOOD_SWORD,
                    this.inv_buttons[ItemType.DIAMOND_SWORD] = fT(60, 60, 0, Ie[SPRITE.INV_SWORD_DIAMOND], 3),
                    this.inv_buttons[ItemType.DIAMOND_SWORD].id = ItemType.DIAMOND_SWORD,
                    this.inv_buttons[ItemType.FIRE] = fT(60, 60, 0, Ie[SPRITE.INV_FIRE], 3),
                    this.inv_buttons[ItemType.FIRE].id = ItemType.FIRE,
                    this.inv_buttons[ItemType.WORKBENCH] = fT(60, 60, 0, Ie[SPRITE.INV_WORK], 3),
                    this.inv_buttons[ItemType.WORKBENCH].id = ItemType.WORKBENCH,
                    this.inv_buttons[ItemType.BERRY_SEED] = fT(60, 60, 0, Ie[SPRITE.INV_SEED], 3),
                    this.inv_buttons[ItemType.BERRY_SEED].id = ItemType.BERRY_SEED,
                    this.inv_buttons[ItemType.WOOD_WALL] = fT(60, 60, 0, Ie[SPRITE.INV_WALL], 3),
                    this.inv_buttons[ItemType.WOOD_WALL].id = ItemType.WOOD_WALL,
                    this.inv_buttons[ItemType.WOOD_SPIKE] = fT(60, 60, 0, Ie[SPRITE.INV_SPIKE], 3),
                    this.inv_buttons[ItemType.WOOD_SPIKE].id = ItemType.WOOD_SPIKE,
                    this.inv_buttons[ItemType.WOOD_PICK] = fT(60, 60, 0, Ie[SPRITE.INV_PICK_WOOD], 3),
                    this.inv_buttons[ItemType.WOOD_PICK].id = ItemType.WOOD_PICK,
                    this.inv_buttons[ItemType.COOKED_MEAT] = fT(60, 60, 0, Ie[SPRITE.INV_COOKED_MEAT], 3),
                    this.inv_buttons[ItemType.COOKED_MEAT].id = ItemType.COOKED_MEAT,
                    this.inv_buttons[ItemType.MEAT] = fT(60, 60, 0, Ie[SPRITE.INV_MEAT], 3),
                    this.inv_buttons[ItemType.MEAT].id = ItemType.MEAT,
                    this.inv_buttons[ItemType.BIG_FIRE] = fT(60, 60, 0, Ie[SPRITE.INV_BIG_FIRE], 3),
                    this.inv_buttons[ItemType.BIG_FIRE].id = ItemType.BIG_FIRE,
                    this.inv_buttons[ItemType.BANDAGE] = fT(60, 60, 0, Ie[SPRITE.INV_BANDAGE], 3),
                    this.inv_buttons[ItemType.BANDAGE].id = ItemType.BANDAGE,
                    this.inv_buttons[ItemType.CORD] = fT(60, 60, 0, Ie[SPRITE.INV_CORD], 3),
                    this.inv_buttons[ItemType.CORD].id = ItemType.CORD,
                    this.inv_buttons[ItemType.CORD].info.img[2] = this.inv_buttons[ItemType.CORD].info.img[0],
                    this.inv_buttons[ItemType.STONE_WALL] = fT(60, 60, 0, Ie[SPRITE.INV_STONE_WALL], 3),
                    this.inv_buttons[ItemType.STONE_WALL].id = ItemType.STONE_WALL,
                    this.inv_buttons[ItemType.GOLD_WALL] = fT(60, 60, 0, Ie[SPRITE.INV_GOLD_WALL], 3),
                    this.inv_buttons[ItemType.GOLD_WALL].id = ItemType.GOLD_WALL,
                    this.inv_buttons[ItemType.DIAMOND_WALL] = fT(60, 60, 0, Ie[SPRITE.INV_DIAMOND_WALL], 3),
                    this.inv_buttons[ItemType.DIAMOND_WALL].id = ItemType.DIAMOND_WALL,
                    this.inv_buttons[ItemType.WOOD_DOOR] = fT(60, 60, 0, Ie[SPRITE.INV_DOOR_WOOD_CLOSE], 3),
                    this.inv_buttons[ItemType.WOOD_DOOR].id = ItemType.WOOD_DOOR,
                    this.inv_buttons[ItemType.CHEST] = fT(60, 60, 0, Ie[SPRITE.INV_CHEST], 3),
                    this.inv_buttons[ItemType.CHEST].id = ItemType.CHEST,
                    this.inv_buttons[ItemType.STONE_SPIKE] = fT(60, 60, 0, Ie[SPRITE.INV_STONE_SPIKE], 3),
                    this.inv_buttons[ItemType.STONE_SPIKE].id = ItemType.STONE_SPIKE,
                    this.inv_buttons[ItemType.GOLD_SPIKE] = fT(60, 60, 0, Ie[SPRITE.INV_GOLD_SPIKE], 3),
                    this.inv_buttons[ItemType.GOLD_SPIKE].id = ItemType.GOLD_SPIKE,
                    this.inv_buttons[ItemType.DIAMOND_SPIKE] = fT(60, 60, 0, Ie[SPRITE.INV_DIAMOND_SPIKE], 3),
                    this.inv_buttons[ItemType.DIAMOND_SPIKE].id = ItemType.DIAMOND_SPIKE,
                    this.inv_buttons[ItemType.BAG] = fT(60, 60, 0, Ie[SPRITE.INV_BAG], 3),
                    this.inv_buttons[ItemType.BAG].id = ItemType.BAG,
                    this.inv_buttons[ItemType.EARMUFFS] = fT(60, 60, 0, Ie[SPRITE.INV_EARMUFFS], 3),
                    this.inv_buttons[ItemType.EARMUFFS].id = ItemType.EARMUFFS,
                    this.inv_buttons[ItemType.STONE_DOOR] = fT(60, 60, 0, Ie[SPRITE.INV_DOOR_STONE_CLOSE], 3),
                    this.inv_buttons[ItemType.STONE_DOOR].id = ItemType.STONE_DOOR,
                    this.inv_buttons[ItemType.GOLD_DOOR] = fT(60, 60, 0, Ie[SPRITE.INV_DOOR_GOLD_CLOSE], 3),
                    this.inv_buttons[ItemType.GOLD_DOOR].id = ItemType.GOLD_DOOR,
                    this.inv_buttons[ItemType.DIAMOND_DOOR] = fT(60, 60, 0, Ie[SPRITE.INV_DOOR_DIAMOND_CLOSE], 3),
                    this.inv_buttons[ItemType.DIAMOND_DOOR].id = ItemType.DIAMOND_DOOR,
                    this.inv_buttons[ItemType.RABBIT_FUR] = fT(60, 60, 0, Ie[SPRITE.INV_FUR], 3),
                    this.inv_buttons[ItemType.RABBIT_FUR].id = ItemType.RABBIT_FUR,
                    this.inv_buttons[ItemType.RABBIT_FUR].info.img[2] = this.inv_buttons[ItemType.RABBIT_FUR].info.img[0],
                    this.inv_buttons[ItemType.BOAR_FUR] = fT(60, 60, 0, Ie[SPRITE.INV_FUR_BOAR], 3),
                    this.inv_buttons[ItemType.BOAR_FUR].id = ItemType.BOAR_FUR,
                    this.inv_buttons[ItemType.BOAR_FUR].info.img[2] = this.inv_buttons[ItemType.BOAR_FUR].info.img[0],
                    this.inv_buttons[ItemType.WOLF_FUR] = fT(60, 60, 0, Ie[SPRITE.INV_FUR_WOLF], 3),
                    this.inv_buttons[ItemType.WOLF_FUR].id = ItemType.WOLF_FUR,
                    this.inv_buttons[ItemType.WOLF_FUR].info.img[2] = this.inv_buttons[ItemType.WOLF_FUR].info.img[0],
                    this.inv_buttons[ItemType.PENGUIN_FEATHER] = fT(60, 60, 0, Ie[SPRITE.INV_PENGUIN_FEATHER], 3),
                    this.inv_buttons[ItemType.PENGUIN_FEATHER].id = ItemType.PENGUIN_FEATHER,
                    this.inv_buttons[ItemType.HAWK_FEATHER] = fT(60, 60, 0, Ie[SPRITE.INV_HAWK_FEATHER], 3),
                    this.inv_buttons[ItemType.HAWK_FEATHER].id = ItemType.HAWK_FEATHER,
                    this.inv_buttons[ItemType.VULTURE_FEATHER] = fT(60, 60, 0, Ie[SPRITE.INV_VULTURE_FEATHER], 3),
                    this.inv_buttons[ItemType.VULTURE_FEATHER].id = ItemType.VULTURE_FEATHER,
                    this.inv_buttons[ItemType.EMERALD] = fT(60, 60, 0, Ie[SPRITE.INV_EMERALD], 3),
                    this.inv_buttons[ItemType.EMERALD].id = ItemType.EMERALD,
                    this.inv_buttons[ItemType.EARMUFFS] = fT(60, 60, 0, Ie[SPRITE.INV_EARMUFFS], 3),
                    this.inv_buttons[ItemType.EARMUFFS].id = ItemType.EARMUFFS,
                    this.inv_buttons[ItemType.COAT] = fT(60, 60, 0, Ie[SPRITE.INV_COAT], 3),
                    this.inv_buttons[ItemType.COAT].id = ItemType.COAT,
                    this.inv_buttons[ItemType.WOOD_SPEAR] = fT(60, 60, 0, Ie[SPRITE.INV_WOOD_SPEAR], 3),
                    this.inv_buttons[ItemType.WOOD_SPEAR].id = ItemType.WOOD_SPEAR,
                    this.inv_buttons[ItemType.STONE_SPEAR] = fT(60, 60, 0, Ie[SPRITE.INV_SPEAR], 3),
                    this.inv_buttons[ItemType.STONE_SPEAR].id = ItemType.STONE_SPEAR,
                    this.inv_buttons[ItemType.GOLD_SPEAR] = fT(60, 60, 0, Ie[SPRITE.INV_GOLD_SPEAR], 3),
                    this.inv_buttons[ItemType.GOLD_SPEAR].id = ItemType.GOLD_SPEAR,
                    this.inv_buttons[ItemType.DIAMOND_SPEAR] = fT(60, 60, 0, Ie[SPRITE.INV_DIAMOND_SPEAR], 3),
                    this.inv_buttons[ItemType.DIAMOND_SPEAR].id = ItemType.DIAMOND_SPEAR,
                    this.inv_buttons[ItemType.DRAGON_SPEAR] = fT(60, 60, 0, Ie[SPRITE.INV_DRAGON_SPEAR], 3),
                    this.inv_buttons[ItemType.DRAGON_SPEAR].id = ItemType.DRAGON_SPEAR,
                    this.inv_buttons[ItemType.FURNACE] = fT(60, 60, 0, Ie[SPRITE.INV_FURNACE], 3),
                    this.inv_buttons[ItemType.FURNACE].id = ItemType.FURNACE,
                    this.inv_buttons[ItemType.EXPLORER_HAT] = fT(60, 60, 0, Ie[SPRITE.INV_EXPLORER_HAT], 3),
                    this.inv_buttons[ItemType.EXPLORER_HAT].id = ItemType.EXPLORER_HAT,
                    this.inv_buttons[ItemType.PIRATE_HAT] = fT(60, 60, 0, Ie[SPRITE.INV_PIRATE_HAT], 3),
                    this.inv_buttons[ItemType.PIRATE_HAT].id = ItemType.PIRATE_HAT,
                    this.inv_buttons[ItemType.FLOWER_HAT] = fT(60, 60, 0, Ie[SPRITE.INV_FLOWER_HAT], 3),
                    this.inv_buttons[ItemType.FLOWER_HAT].id = ItemType.FLOWER_HAT,
                    this.inv_buttons[ItemType.FUR_HAT] = fT(60, 60, 0, Ie[SPRITE.INV_FUR_HAT], 3),
                    this.inv_buttons[ItemType.FUR_HAT].id = ItemType.FUR_HAT,
                    this.inv_buttons[ItemType.TURBAN1] = fT(60, 60, 0, Ie[SPRITE.INV_TURBAN1], 3),
                    this.inv_buttons[ItemType.TURBAN1].id = ItemType.TURBAN1,
                    this.inv_buttons[ItemType.TURBAN2] = fT(60, 60, 0, Ie[SPRITE.INV_TURBAN2], 3),
                    this.inv_buttons[ItemType.TURBAN2].id = ItemType.TURBAN2,
                    this.inv_buttons[ItemType.WOOD_BOW] = fT(60, 60, 0, Ie[SPRITE.INV_WOOD_BOW], 3),
                    this.inv_buttons[ItemType.WOOD_BOW].id = ItemType.WOOD_BOW,
                    this.inv_buttons[ItemType.WOOD_ARROW] = fT(60, 60, 0, Ie[SPRITE.INV_WOOD_ARROW], 3),
                    this.inv_buttons[ItemType.WOOD_ARROW].id = ItemType.WOOD_ARROW,
                    this.inv_buttons[ItemType.WOOD_SHIELD] = fT(60, 60, 0, Ie[SPRITE.INV_WOOD_SHIELD], 3),
                    this.inv_buttons[ItemType.WOOD_SHIELD].id = ItemType.WOOD_SHIELD,
                    this.inv_buttons[ItemType.STONE_BOW] = fT(60, 60, 0, Ie[SPRITE.INV_STONE_BOW], 3),
                    this.inv_buttons[ItemType.STONE_BOW].id = ItemType.STONE_BOW,
                    this.inv_buttons[ItemType.STONE_ARROW] = fT(60, 60, 0, Ie[SPRITE.INV_STONE_ARROW], 3),
                    this.inv_buttons[ItemType.STONE_ARROW].id = ItemType.STONE_ARROW,
                    this.inv_buttons[ItemType.STONE_SHIELD] = fT(60, 60, 0, Ie[SPRITE.INV_STONE_SHIELD], 3),
                    this.inv_buttons[ItemType.STONE_SHIELD].id = ItemType.STONE_SHIELD,
                    this.inv_buttons[ItemType.GOLD_BOW] = fT(60, 60, 0, Ie[SPRITE.INV_GOLD_BOW], 3),
                    this.inv_buttons[ItemType.GOLD_BOW].id = ItemType.GOLD_BOW,
                    this.inv_buttons[ItemType.GOLD_ARROW] = fT(60, 60, 0, Ie[SPRITE.INV_GOLD_ARROW], 3),
                    this.inv_buttons[ItemType.GOLD_ARROW].id = ItemType.GOLD_ARROW,
                    this.inv_buttons[ItemType.GOLD_SHIELD] = fT(60, 60, 0, Ie[SPRITE.INV_GOLD_SHIELD], 3),
                    this.inv_buttons[ItemType.GOLD_SHIELD].id = ItemType.GOLD_SHIELD,
                    this.inv_buttons[ItemType.DIAMOND_BOW] = fT(60, 60, 0, Ie[SPRITE.INV_DIAMOND_BOW], 3),
                    this.inv_buttons[ItemType.DIAMOND_BOW].id = ItemType.DIAMOND_BOW,
                    this.inv_buttons[ItemType.DIAMOND_ARROW] = fT(60, 60, 0, Ie[SPRITE.INV_DIAMOND_ARROW], 3),
                    this.inv_buttons[ItemType.DIAMOND_ARROW].id = ItemType.DIAMOND_ARROW,
                    this.inv_buttons[ItemType.DIAMOND_SHIELD] = fT(60, 60, 0, Ie[SPRITE.INV_DIAMOND_SHIELD], 3),
                    this.inv_buttons[ItemType.DIAMOND_SHIELD].id = ItemType.DIAMOND_SHIELD,
                    this.inv_buttons[ItemType.AMETHYST_BOW] = fT(60, 60, 0, Ie[SPRITE.INV_AMETHYST_BOW], 3),
                    this.inv_buttons[ItemType.AMETHYST_BOW].id = ItemType.AMETHYST_BOW,
                    this.inv_buttons[ItemType.AMETHYST_ARROW] = fT(60, 60, 0, Ie[SPRITE.INV_AMETHYST_ARROW], 3),
                    this.inv_buttons[ItemType.AMETHYST_ARROW].id = ItemType.AMETHYST_ARROW,
                    this.inv_buttons[ItemType.AMETHYST_SHIELD] = fT(60, 60, 0, Ie[SPRITE.INV_AMETHYST_SHIELD], 3),
                    this.inv_buttons[ItemType.AMETHYST_SHIELD].id = ItemType.AMETHYST_SHIELD,
                    this.inv_buttons[ItemType.REIDITE_BOW] = fT(60, 60, 0, Ie[SPRITE.INV_REIDITE_BOW], 3),
                    this.inv_buttons[ItemType.REIDITE_BOW].id = ItemType.REIDITE_BOW,
                    this.inv_buttons[ItemType.REIDITE_ARROW] = fT(60, 60, 0, Ie[SPRITE.INV_REIDITE_ARROW], 3),
                    this.inv_buttons[ItemType.REIDITE_ARROW].id = ItemType.REIDITE_ARROW,
                    this.inv_buttons[ItemType.REIDITE_SHIELD] = fT(60, 60, 0, Ie[SPRITE.INV_REIDITE_SHIELD], 3),
                    this.inv_buttons[ItemType.REIDITE_SHIELD].id = ItemType.REIDITE_SHIELD,
                    this.inv_buttons[ItemType.DRAGON_BOW] = fT(60, 60, 0, Ie[SPRITE.INV_DRAGON_BOW], 3),
                    this.inv_buttons[ItemType.DRAGON_BOW].id = ItemType.DRAGON_BOW,
                    this.inv_buttons[ItemType.DRAGON_ARROW] = fT(60, 60, 0, Ie[SPRITE.INV_DRAGON_ARROW], 3),
                    this.inv_buttons[ItemType.DRAGON_ARROW].id = ItemType.DRAGON_ARROW,
                    this.inv_buttons[ItemType.WOOD_HELMET] = fT(60, 60, 0, Ie[SPRITE.INV_WOOD_HELMET], 3),
                    this.inv_buttons[ItemType.WOOD_HELMET].id = ItemType.WOOD_HELMET,
                    this.inv_buttons[ItemType.STONE_HELMET] = fT(60, 60, 0, Ie[SPRITE.INV_STONE_HELMET], 3),
                    this.inv_buttons[ItemType.STONE_HELMET].id = ItemType.STONE_HELMET,
                    this.inv_buttons[ItemType.GOLD_HELMET] = fT(60, 60, 0, Ie[SPRITE.INV_GOLD_HELMET], 3),
                    this.inv_buttons[ItemType.GOLD_HELMET].id = ItemType.GOLD_HELMET,
                    this.inv_buttons[ItemType.DIAMOND_HELMET] = fT(60, 60, 0, Ie[SPRITE.INV_DIAMOND_HELMET], 3),
                    this.inv_buttons[ItemType.DIAMOND_HELMET].id = ItemType.DIAMOND_HELMET,
                    this.inv_buttons[ItemType.BOOK] = fT(60, 60, 0, Ie[SPRITE.INV_BOOK], 3),
                    this.inv_buttons[ItemType.BOOK].id = ItemType.BOOK,
                    this.inv_buttons[ItemType.PAPER] = fT(60, 60, 0, Ie[SPRITE.INV_PAPER], 3),
                    this.inv_buttons[ItemType.PAPER].id = ItemType.PAPER,
                    this.inv_buttons[ItemType.PAPER].info.img[2] = this.inv_buttons[ItemType.PAPER].info.img[0],
                    this.inv_buttons[ItemType.BAG] = fT(60, 60, 0, Ie[SPRITE.INV_BAG], 3),
                    this.inv_buttons[ItemType.BAG].id = ItemType.BAG,
                    this.inv_buttons[ItemType.AMETHYST] = fT(60, 60, 0, Ie[SPRITE.INV_AMETHYST], 3),
                    this.inv_buttons[ItemType.AMETHYST].id = ItemType.AMETHYST,
                    this.inv_buttons[ItemType.AMETHYST].info.img[2] = this.inv_buttons[ItemType.AMETHYST].info.img[0],
                    this.inv_buttons[ItemType.AMETHYST_SWORD] = fT(60, 60, 0, Ie[SPRITE.INV_SWORD_AMETHYST], 3),
                    this.inv_buttons[ItemType.AMETHYST_SWORD].id = ItemType.AMETHYST_SWORD,
                    this.inv_buttons[ItemType.PIRATE_SWORD] = fT(60, 60, 0, Ie[SPRITE.INV_PIRATE_SWORD], 3),
                    this.inv_buttons[ItemType.PIRATE_SWORD].id = ItemType.PIRATE_SWORD,
                    this.inv_buttons[ItemType.AMETHYST_PICK] = fT(60, 60, 0, Ie[SPRITE.INV_PICK_AMETHYST], 3),
                    this.inv_buttons[ItemType.AMETHYST_PICK].id = ItemType.AMETHYST_PICK,
                    this.inv_buttons[ItemType.REIDITE_PICK] = fT(60, 60, 0, Ie[SPRITE.INV_PICK_REIDITE], 3),
                    this.inv_buttons[ItemType.REIDITE_PICK].id = ItemType.REIDITE_PICK,
                    this.inv_buttons[ItemType.AMETHYST_SPEAR] = fT(60, 60, 0, Ie[SPRITE.INV_AMETHYST_SPEAR], 3),
                    this.inv_buttons[ItemType.AMETHYST_SPEAR].id = ItemType.AMETHYST_SPEAR,
                    this.inv_buttons[ItemType.STONE_HAMMER] = fT(60, 60, 0, Ie[SPRITE.INV_HAMMER], 3),
                    this.inv_buttons[ItemType.STONE_HAMMER].id = ItemType.STONE_HAMMER,
                    this.inv_buttons[ItemType.GOLD_HAMMER] = fT(60, 60, 0, Ie[SPRITE.INV_HAMMER_GOLD], 3),
                    this.inv_buttons[ItemType.GOLD_HAMMER].id = ItemType.GOLD_HAMMER,
                    this.inv_buttons[ItemType.DIAMOND_HAMMER] = fT(60, 60, 0, Ie[SPRITE.INV_HAMMER_DIAMOND], 3),
                    this.inv_buttons[ItemType.DIAMOND_HAMMER].id = ItemType.DIAMOND_HAMMER,
                    this.inv_buttons[ItemType.AMETHYST_HAMMER] = fT(60, 60, 0, Ie[SPRITE.INV_HAMMER_AMETHYST], 3),
                    this.inv_buttons[ItemType.AMETHYST_HAMMER].id = ItemType.AMETHYST_HAMMER,
                    this.inv_buttons[ItemType.REIDITE_HAMMER] = fT(60, 60, 0, Ie[SPRITE.INV_HAMMER_REIDITE], 3),
                    this.inv_buttons[ItemType.REIDITE_HAMMER].id = ItemType.REIDITE_HAMMER,
                    this.inv_buttons[ItemType.AMETHYST_WALL] = fT(60, 60, 0, Ie[SPRITE.INV_AMETHYST_WALL], 3),
                    this.inv_buttons[ItemType.AMETHYST_WALL].id = ItemType.AMETHYST_WALL,
                    this.inv_buttons[ItemType.AMETHYST_SPIKE] = fT(60, 60, 0, Ie[SPRITE.INV_AMETHYST_SPIKE], 3),
                    this.inv_buttons[ItemType.AMETHYST_SPIKE].id = ItemType.AMETHYST_SPIKE,
                    this.inv_buttons[ItemType.AMETHYST_DOOR] = fT(60, 60, 0, Ie[SPRITE.INV_DOOR_AMETHYST_CLOSE], 3),
                    this.inv_buttons[ItemType.AMETHYST_DOOR].id = ItemType.AMETHYST_DOOR,
                    this.inv_buttons[ItemType.CAP_SCARF] = fT(60, 60, 0, Ie[SPRITE.INV_CAP_SCARF], 3),
                    this.inv_buttons[ItemType.CAP_SCARF].id = ItemType.CAP_SCARF,
                    this.inv_buttons[ItemType.WINTER_FUR] = fT(60, 60, 0, Ie[SPRITE.INV_FUR_WINTER], 3),
                    this.inv_buttons[ItemType.WINTER_FUR].id = ItemType.WINTER_FUR,
                    this.inv_buttons[ItemType.WINTER_FUR].info.img[2] = this.inv_buttons[ItemType.WINTER_FUR].info.img[0],
                    this.inv_buttons[ItemType.MAMMOTH_FUR] = fT(60, 60, 0, Ie[SPRITE.INV_FUR_MAMMOTH], 3),
                    this.inv_buttons[ItemType.MAMMOTH_FUR].id = ItemType.MAMMOTH_FUR,
                    this.inv_buttons[ItemType.MAMMOTH_FUR].info.img[2] = this.inv_buttons[ItemType.MAMMOTH_FUR].info.img[0],
                    this.inv_buttons[ItemType.DIAMOND_CORD] = fT(60, 60, 0, Ie[SPRITE.INV_BLUE_CORD], 3),
                    this.inv_buttons[ItemType.DIAMOND_CORD].id = ItemType.DIAMOND_CORD,
                    this.inv_buttons[ItemType.DIAMOND_CORD].info.img[2] = this.inv_buttons[ItemType.DIAMOND_CORD].info.img[0],
                    this.inv_buttons[ItemType.LOCK] = fT(60, 60, 0, Ie[SPRITE.INV_LOCK], 3),
                    this.inv_buttons[ItemType.LOCK].id = ItemType.LOCK,
                    this.inv_buttons[ItemType.LOCK].info.img[2] = this.inv_buttons[ItemType.LOCK].info.img[0],
                    this.inv_buttons[ItemType.DRAGON_HEART] = fT(60, 60, 0, Ie[SPRITE.INV_DRAGON_HEART], 3),
                    this.inv_buttons[ItemType.DRAGON_HEART].id = ItemType.DRAGON_HEART,
                    this.inv_buttons[ItemType.LAVA_HEART] = fT(60, 60, 0, Ie[SPRITE.INV_LAVA_HEART], 3),
                    this.inv_buttons[ItemType.LAVA_HEART].id = ItemType.LAVA_HEART,
                    this.inv_buttons[ItemType.RESURRECTION] = fT(60, 60, 0, Ie[SPRITE.INV_RESURRECTION], 3),
                    this.inv_buttons[ItemType.RESURRECTION].id = ItemType.RESURRECTION,
                    this.inv_buttons[ItemType.LOCK_PICK] = fT(60, 60, 0, Ie[SPRITE.INV_LOCKPICK], 3),
                    this.inv_buttons[ItemType.LOCK_PICK].id = ItemType.LOCK_PICK,
                    this.inv_buttons[ItemType.TOTEM] = fT(60, 60, 0, Ie[SPRITE.INV_TOTEM], 3),
                    this.inv_buttons[ItemType.TOTEM].id = ItemType.TOTEM,
                    this.inv_buttons[ItemType.AMETHYST_HELMET] = fT(60, 60, 0, Ie[SPRITE.INV_AMETHYST_HELMET], 3),
                    this.inv_buttons[ItemType.AMETHYST_HELMET].id = ItemType.AMETHYST_HELMET,
                    this.inv_buttons[ItemType.SUPER_HAMMER] = fT(60, 60, 0, Ie[SPRITE.INV_SUPER_HAMMER], 3),
                    this.inv_buttons[ItemType.SUPER_HAMMER].id = ItemType.SUPER_HAMMER,
                    this.inv_buttons[ItemType.BRIDGE] = fT(60, 60, 0, Ie[SPRITE.INV_BRIDGE], 3),
                    this.inv_buttons[ItemType.BRIDGE].id = ItemType.BRIDGE,
                    this.inv_buttons[ItemType.TOWER] = fT(60, 60, 0, Ie[SPRITE.INV_WOOD_TOWER], 3),
                    this.inv_buttons[ItemType.TOWER].id = ItemType.TOWER,
                    this.inv_buttons[ItemType.BOAT] = fT(60, 60, 0, Ie[SPRITE.INV_BOAT], 3),
                    this.inv_buttons[ItemType.BOAT].id = ItemType.BOAT,
                    this.inv_buttons[ItemType.SLED] = fT(60, 60, 0, Ie[SPRITE.INV_SLED], 3),
                    this.inv_buttons[ItemType.SLED].id = ItemType.SLED,
                    this.inv_buttons[ItemType.PLANE] = fT(60, 60, 0, Ie[SPRITE.INV_PLANE], 3),
                    this.inv_buttons[ItemType.PLANE].id = ItemType.PLANE,
                    this.inv_buttons[ItemType.SADDLE] = fT(60, 60, 0, Ie[SPRITE.INV_SADDLE], 3),
                    this.inv_buttons[ItemType.SADDLE].id = ItemType.SADDLE,
                    this.inv_buttons[ItemType.BOAR] = fT(60, 60, 0, Ie[SPRITE.INV_MOUNT_BOAR], 3),
                    this.inv_buttons[ItemType.BOAR].id = ItemType.BOAR,
                    this.inv_buttons[ItemType.CRAB_BOSS] = fT(60, 60, 0, Ie[SPRITE.INV_CRAB_BOSS], 3),
                    this.inv_buttons[ItemType.CRAB_BOSS].id = ItemType.CRAB_BOSS,
                    this.inv_buttons[ItemType.BABY_DRAGON] = fT(60, 60, 0, Ie[SPRITE.INV_BABY_DRAGON], 3),
                    this.inv_buttons[ItemType.BABY_DRAGON].id = ItemType.BABY_DRAGON,
                    this.inv_buttons[ItemType.BABY_MAMMOTH] = fT(60, 60, 0, Ie[SPRITE.INV_BABY_MAMMOTH], 3),
                    this.inv_buttons[ItemType.BABY_MAMMOTH].id = ItemType.BABY_MAMMOTH,
                    this.inv_buttons[ItemType.BABY_LAVA] = fT(60, 60, 0, Ie[SPRITE.INV_BABY_LAVA], 3),
                    this.inv_buttons[ItemType.BABY_LAVA].id = ItemType.BABY_LAVA,
                    this.inv_buttons[ItemType.HAWK] = fT(60, 60, 0, Ie[SPRITE.INV_HAWK], 3),
                    this.inv_buttons[ItemType.HAWK].id = ItemType.HAWK,
                    this.inv_buttons[ItemType.SAND] = fT(60, 60, 0, Ie[ItemType.SAND], 3),
                    this.inv_buttons[ItemType.SAND].id = ItemType.SAND,
                    this.inv_buttons[ItemType.SAND].info.img[2] = this.inv_buttons[ItemType.SAND].info.img[0],
                    this.inv_buttons[ItemType.BOTTLE_FULL] = fT(60, 60, 0, Ie[SPRITE.INV_BOTTLE_FULL], 3),
                    this.inv_buttons[ItemType.BOTTLE_FULL].id = ItemType.BOTTLE_FULL,
                    this.inv_buttons[ItemType.BOTTLE_EMPTY] = fT(60, 60, 0, Ie[SPRITE.INV_BOTTLE_EMPTY], 3),
                    this.inv_buttons[ItemType.BOTTLE_EMPTY].id = ItemType.BOTTLE_EMPTY,
                    this.inv_buttons[ItemType.STONE_SHOVEL] = fT(60, 60, 0, Ie[SPRITE.INV_SHOVEL], 3),
                    this.inv_buttons[ItemType.STONE_SHOVEL].id = ItemType.STONE_SHOVEL,
                    this.inv_buttons[ItemType.GOLD_SHOVEL] = fT(60, 60, 0, Ie[SPRITE.INV_SHOVEL_GOLD], 3),
                    this.inv_buttons[ItemType.GOLD_SHOVEL].id = ItemType.GOLD_SHOVEL,
                    this.inv_buttons[ItemType.DIAMOND_SHOVEL] = fT(60, 60, 0, Ie[SPRITE.INV_SHOVEL_DIAMOND], 3),
                    this.inv_buttons[ItemType.DIAMOND_SHOVEL].id = ItemType.DIAMOND_SHOVEL,
                    this.inv_buttons[ItemType.AMETHYST_SHOVEL] = fT(60, 60, 0, Ie[SPRITE.INV_SHOVEL_AMETHYST], 3),
                    this.inv_buttons[ItemType.AMETHYST_SHOVEL].id = ItemType.AMETHYST_SHOVEL,
                    this.inv_buttons[ItemType.REIDITE_SHOVEL] = fT(60, 60, 0, Ie[SPRITE.INV_SHOVEL_REIDITE], 3),
                    this.inv_buttons[ItemType.REIDITE_SHOVEL].id = ItemType.REIDITE_SHOVEL,
                    this.inv_buttons[ItemType.WRENCH] = fT(60, 60, 0, Ie[SPRITE.INV_SPANNER], 3),
                    this.inv_buttons[ItemType.WRENCH].id = ItemType.WRENCH,
                    this.inv_buttons[ItemType.GOLD_WRENCH] = fT(60, 60, 0, Ie[SPRITE.INV_GOLD_WRENCH], 3),
                    this.inv_buttons[ItemType.GOLD_WRENCH].id = ItemType.GOLD_WRENCH,
                    this.inv_buttons[ItemType.KRAKEN_FUR] = fT(60, 60, 0, Ie[SPRITE.INV_KRAKEN_SKIN], 3),
                    this.inv_buttons[ItemType.KRAKEN_FUR].id = ItemType.KRAKEN_FUR,
                    this.inv_buttons[ItemType.KRAKEN_FUR].info.img[2] = this.inv_buttons[ItemType.KRAKEN_FUR].info.img[0],
                    this.inv_buttons[ItemType.WATERING_CAN_EMPTY] = fT(60, 60, 0, Ie[SPRITE.INV_WATERING_CAN], 3),
                    this.inv_buttons[ItemType.WATERING_CAN_EMPTY].id = ItemType.WATERING_CAN_EMPTY,
                    this.inv_buttons[ItemType.FLOUR] = fT(60, 60, 0, Ie[SPRITE.INV_FLOUR], 3),
                    this.inv_buttons[ItemType.FLOUR].id = ItemType.FLOUR,
                    this.inv_buttons[ItemType.FLOUR].info.img[2] = this.inv_buttons[ItemType.FLOUR].info.img[0],
                    this.inv_buttons[ItemType.WHEAT_SEED] = fT(60, 60, 0, Ie[SPRITE.INV_WHEAT_SEED], 3),
                    this.inv_buttons[ItemType.WHEAT_SEED].id = ItemType.WHEAT_SEED,
                    this.inv_buttons[ItemType.COOKIE] = fT(60, 60, 0, Ie[SPRITE.INV_COOKIE], 3),
                    this.inv_buttons[ItemType.COOKIE].id = ItemType.COOKIE,
                    this.inv_buttons[ItemType.WHEAT] = fT(60, 60, 0, Ie[SPRITE.INV_WILD_WHEAT], 3),
                    this.inv_buttons[ItemType.WHEAT].id = ItemType.WHEAT,
                    this.inv_buttons[ItemType.WHEAT].info.img[2] = this.inv_buttons[ItemType.WHEAT].info.img[0],
                    this.inv_buttons[ItemType.WINDMILL] = fT(60, 60, 0, Ie[SPRITE.INV_WINDMILL], 3),
                    this.inv_buttons[ItemType.WINDMILL].id = ItemType.WINDMILL,
                    this.inv_buttons[ItemType.SUPER_DIVING_SUIT] = fT(60, 60, 0, Ie[SPRITE.INV_SUPER_DIVING_SUIT], 3),
                    this.inv_buttons[ItemType.SUPER_DIVING_SUIT].id = ItemType.SUPER_DIVING_SUIT,
                    this.inv_buttons[ItemType.DIVING_MASK] = fT(60, 60, 0, Ie[SPRITE.INV_DIVING_MASK], 3),
                    this.inv_buttons[ItemType.DIVING_MASK].id = ItemType.DIVING_MASK,
                    this.inv_buttons[ItemType.WATERING_CAN_FULL] = fT(60, 60, 0, Ie[SPRITE.INV_WATERING_CAN_FULL], 3),
                    this.inv_buttons[ItemType.WATERING_CAN_FULL].id = ItemType.WATERING_CAN_FULL,
                    this.inv_buttons[ItemType.CAKE] = fT(60, 60, 0, Ie[SPRITE.INV_CAKE], 3),
                    this.inv_buttons[ItemType.CAKE].id = ItemType.CAKE,
                    this.inv_buttons[ItemType.BREAD] = fT(60, 60, 0, Ie[ItemType.BREAD], 3),
                    this.inv_buttons[ItemType.BREAD].id = ItemType.BREAD,
                    this.inv_buttons[ItemType.FISH] = fT(60, 60, 0, Ie[SPRITE.INV_FOODFISH], 3),
                    this.inv_buttons[ItemType.FISH].id = ItemType.FISH,
                    this.inv_buttons[ItemType.FISH_COOKED] = fT(60, 60, 0, Ie[SPRITE.INV_FOODFISH_COOKED], 3),
                    this.inv_buttons[ItemType.FISH_COOKED].id = ItemType.FISH_COOKED,
                    this.inv_buttons[ItemType.PIRANHA_SCALES] = fT(60, 60, 0, Ie[SPRITE.INV_SCALES], 3),
                    this.inv_buttons[ItemType.PIRANHA_SCALES].id = ItemType.PIRANHA_SCALES,
                    this.inv_buttons[ItemType.PIRANHA_SCALES].info.img[2] = this.inv_buttons[ItemType.PIRANHA_SCALES].info.img[0],
                    this.inv_buttons[ItemType.GROUND] = fT(60, 60, 0, Ie[ItemType.GROUND], 3),
                    this.inv_buttons[ItemType.GROUND].id = ItemType.GROUND,
                    this.inv_buttons[ItemType.GROUND].info.img[2] = this.inv_buttons[ItemType.GROUND].info.img[0],
                    this.inv_buttons[ItemType.PLOT] = fT(60, 60, 0, Ie[SPRITE.INV_PLOT], 3),
                    this.inv_buttons[ItemType.PLOT].id = ItemType.PLOT,
                    this.inv_buttons[ItemType.ICE] = fT(60, 60, 0, Ie[ItemType.ICE], 3),
                    this.inv_buttons[ItemType.ICE].id = ItemType.ICE,
                    this.inv_buttons[ItemType.ICE].info.img[2] = this.inv_buttons[ItemType.ICE].info.img[0],
                    this.inv_buttons[ItemType.BREAD_OVEN] = fT(60, 60, 0, Ie[SPRITE.INV_BREAD_OVEN], 3),
                    this.inv_buttons[ItemType.BREAD_OVEN].id = ItemType.BREAD_OVEN,
                    this.inv_buttons[ItemType.SANDWICH] = fT(60, 60, 0, Ie[ItemType.SANDWICH], 3),
                    this.inv_buttons[ItemType.SANDWICH].id = ItemType.SANDWICH,
                    this.inv_buttons[ItemType.DRAGON_HELMET] = fT(60, 60, 0, Ie[SPRITE.INV_DRAGON_HELMET], 3),
                    this.inv_buttons[ItemType.DRAGON_HELMET].id = ItemType.DRAGON_HELMET,
                    this.inv_buttons[ItemType.DRAGON_SWORD] = fT(60, 60, 0, Ie[SPRITE.INV_DRAGON_SWORD], 3),
                    this.inv_buttons[ItemType.DRAGON_SWORD].id = ItemType.DRAGON_SWORD,
                    this.inv_buttons[ItemType.DRAGON_ORB] = fT(60, 60, 0, Ie[SPRITE.INV_DRAGON_ORB], 3),
                    this.inv_buttons[ItemType.DRAGON_ORB].id = ItemType.DRAGON_ORB,
                    this.inv_buttons[ItemType.DRAGON_ORB].info.img[2] = this.inv_buttons[ItemType.DRAGON_ORB].info.img[0],
                    this.inv_buttons[ItemType.DRAGON_CUBE] = fT(60, 60, 0, Ie[SPRITE.INV_DRAGON_CUBE], 3),
                    this.inv_buttons[ItemType.DRAGON_CUBE].id = ItemType.DRAGON_CUBE,
                    this.inv_buttons[ItemType.DRAGON_CUBE].info.img[2] = this.inv_buttons[ItemType.DRAGON_CUBE].info.img[0],
                    this.inv_buttons[ItemType.LAVA_SPEAR] = fT(60, 60, 0, Ie[SPRITE.INV_LAVA_SPEAR], 3),
                    this.inv_buttons[ItemType.LAVA_SPEAR].id = ItemType.LAVA_SPEAR,
                    this.inv_buttons[ItemType.LAVA_SWORD] = fT(60, 60, 0, Ie[SPRITE.INV_LAVA_SWORD], 3),
                    this.inv_buttons[ItemType.LAVA_SWORD].id = ItemType.LAVA_SWORD,
                    this.inv_buttons[ItemType.LAVA_ORB] = fT(60, 60, 0, Ie[SPRITE.INV_LAVA_ORB], 3),
                    this.inv_buttons[ItemType.LAVA_ORB].id = ItemType.LAVA_ORB,
                    this.inv_buttons[ItemType.LAVA_ORB].info.img[2] = this.inv_buttons[ItemType.LAVA_ORB].info.img[0],
                    this.inv_buttons[ItemType.LAVA_CUBE] = fT(60, 60, 0, Ie[SPRITE.INV_LAVA_CUBE], 3),
                    this.inv_buttons[ItemType.LAVA_CUBE].id = ItemType.LAVA_CUBE,
                    this.inv_buttons[ItemType.LAVA_CUBE].info.img[2] = this.inv_buttons[ItemType.LAVA_CUBE].info.img[0],
                    this.inv_buttons[ItemType.CROWN_GREEN] = fT(60, 60, 0, Ie[SPRITE.INV_CROWN_GREEN], 3),
                    this.inv_buttons[ItemType.CROWN_GREEN].id = ItemType.CROWN_GREEN,
                    this.inv_buttons[ItemType.GEM_GREEN] = fT(60, 60, 0, Ie[ItemType.GEM_GREEN], 3),
                    this.inv_buttons[ItemType.GEM_GREEN].id = ItemType.GEM_GREEN,
                    this.inv_buttons[ItemType.GEM_GREEN].info.img[2] = this.inv_buttons[ItemType.GEM_GREEN].info.img[0],
                    this.inv_buttons[ItemType.GEM_ORANGE] = fT(60, 60, 0, Ie[ItemType.GEM_ORANGE], 3),
                    this.inv_buttons[ItemType.GEM_ORANGE].id = ItemType.GEM_ORANGE,
                    this.inv_buttons[ItemType.GEM_ORANGE].info.img[2] = this.inv_buttons[ItemType.GEM_ORANGE].info.img[0],
                    this.inv_buttons[ItemType.CROWN_ORANGE] = fT(60, 60, 0, Ie[SPRITE.INV_CROWN_ORANGE], 3),
                    this.inv_buttons[ItemType.CROWN_ORANGE].id = ItemType.CROWN_ORANGE,
                    this.inv_buttons[ItemType.GEM_BLUE] = fT(60, 60, 0, Ie[ItemType.GEM_BLUE], 3),
                    this.inv_buttons[ItemType.GEM_BLUE].id = ItemType.GEM_BLUE,
                    this.inv_buttons[ItemType.GEM_BLUE].info.img[2] = this.inv_buttons[ItemType.GEM_BLUE].info.img[0],
                    this.inv_buttons[ItemType.CROWN_BLUE] = fT(60, 60, 0, Ie[SPRITE.INV_CROWN_BLUE], 3),
                    this.inv_buttons[ItemType.CROWN_BLUE].id = ItemType.CROWN_BLUE,
                    this.inv_buttons[ItemType.HOOD] = fT(60, 60, 0, Ie[SPRITE.INV_HOOD], 3),
                    this.inv_buttons[ItemType.HOOD].id = ItemType.HOOD,
                    this.inv_buttons[ItemType.PEASANT] = fT(60, 60, 0, Ie[SPRITE.INV_PEASANT], 3),
                    this.inv_buttons[ItemType.PEASANT].id = ItemType.PEASANT,
                    this.inv_buttons[ItemType.WINTER_PEASANT_FUR] = fT(60, 60, 0, Ie[ItemType.WINTER_HOOD_FUR], 3),
                    this.inv_buttons[ItemType.WINTER_PEASANT_FUR].id = ItemType.WINTER_PEASANT_FUR,
                    this.inv_buttons[ItemType.WINTER_HOOD_FUR] = fT(60, 60, 0, Ie[ItemType.WINTER_PEASANT_FUR], 3),
                    this.inv_buttons[ItemType.WINTER_HOOD_FUR].id = ItemType.WINTER_HOOD_FUR,
                    this.inv_buttons[ItemType.WINTER_PEASANT] = fT(60, 60, 0, Ie[SPRITE.INV_WINTER_PEASANT], 3),
                    this.inv_buttons[ItemType.WINTER_PEASANT].id = ItemType.WINTER_PEASANT,
                    this.inv_buttons[ItemType.WINTER_HOOD] = fT(60, 60, 0, Ie[SPRITE.INV_WINTER_HOOD], 3),
                    this.inv_buttons[ItemType.WINTER_HOOD].id = ItemType.WINTER_HOOD,
                    this.inv_buttons[ItemType.BUCKET_FULL] = fT(60, 60, 0, Ie[ItemType.BUCKET_FULL], 3),
                    this.inv_buttons[ItemType.BUCKET_FULL].id = ItemType.BUCKET_FULL,
                    this.inv_buttons[ItemType.BUCKET_EMPTY] = fT(60, 60, 0, Ie[ItemType.BUCKET_EMPTY], 3),
                    this.inv_buttons[ItemType.BUCKET_EMPTY].id = ItemType.BUCKET_EMPTY,
                    this.inv_buttons[ItemType.WELL] = fT(60, 60, 0, Ie[SPRITE.INV_WELL], 3),
                    this.inv_buttons[ItemType.WELL].id = ItemType.WELL,
                    this.inv_buttons[ItemType.PUMPKIN_SEED] = fT(60, 60, 0, Ie[SPRITE.INV_PUMPKIN_SEED], 3),
                    this.inv_buttons[ItemType.PUMPKIN_SEED].id = ItemType.PUMPKIN_SEED,
                    this.inv_buttons[ItemType.PUMPKIN] = fT(60, 60, 0, Ie[SPRITE.INV_PUMPKIN], 3),
                    this.inv_buttons[ItemType.PUMPKIN].id = ItemType.PUMPKIN,
                    this.inv_buttons[ItemType.GARLIC_SEED] = fT(60, 60, 0, Ie[SPRITE.INV_GARLIC_SEED], 3),
                    this.inv_buttons[ItemType.GARLIC_SEED].id = ItemType.GARLIC_SEED,
                    this.inv_buttons[ItemType.GARLIC] = fT(60, 60, 0, Ie[SPRITE.INV_GARLIC], 3),
                    this.inv_buttons[ItemType.GARLIC].id = ItemType.GARLIC,
                    this.inv_buttons[ItemType.ROOF] = fT(60, 60, 0, Ie[SPRITE.INV_ROOF], 3),
                    this.inv_buttons[ItemType.ROOF].id = ItemType.ROOF,
                    this.inv_buttons[ItemType.THORNBUSH_SEED] = fT(60, 60, 0, Ie[SPRITE.INV_THORNBUSH_SEED], 3),
                    this.inv_buttons[ItemType.THORNBUSH_SEED].id = ItemType.THORNBUSH_SEED,
                    this.inv_buttons[ItemType.THORNBUSH] = fT(60, 60, 0, Ie[SPRITE.INV_THORNBUSH], 3),
                    this.inv_buttons[ItemType.THORNBUSH].id = ItemType.THORNBUSH,
                    this.inv_buttons[ItemType.CARROT_SEED] = fT(60, 60, 0, Ie[SPRITE.INV_CARROT_SEED], 3),
                    this.inv_buttons[ItemType.CARROT_SEED].id = ItemType.CARROT_SEED,
                    this.inv_buttons[ItemType.CARROT] = fT(60, 60, 0, Ie[SPRITE.INV_CARROT], 3),
                    this.inv_buttons[ItemType.CARROT].id = ItemType.CARROT,
                    this.inv_buttons[ItemType.TOMATO_SEED] = fT(60, 60, 0, Ie[SPRITE.INV_TOMATO_SEED], 3),
                    this.inv_buttons[ItemType.TOMATO_SEED].id = ItemType.TOMATO_SEED,
                    this.inv_buttons[ItemType.TOMATO] = fT(60, 60, 0, Ie[SPRITE.INV_TOMATO], 3),
                    this.inv_buttons[ItemType.TOMATO].id = ItemType.TOMATO,
                    this.inv_buttons[ItemType.WATERMELON_SEED] = fT(60, 60, 0, Ie[SPRITE.INV_WATERMELON_SEED], 3),
                    this.inv_buttons[ItemType.WATERMELON_SEED].id = ItemType.WATERMELON_SEED,
                    this.inv_buttons[ItemType.WATERMELON] = fT(60, 60, 0, Ie[SPRITE.INV_WATERMELON], 3),
                    this.inv_buttons[ItemType.WATERMELON].id = ItemType.WATERMELON,
                    this.inv_buttons[ItemType.ALOE_VERA_SEED] = fT(60, 60, 0, Ie[SPRITE.INV_ALOE_VERA_SEED], 3),
                    this.inv_buttons[ItemType.ALOE_VERA_SEED].id = ItemType.ALOE_VERA_SEED,
                    this.inv_buttons[ItemType.ALOE_VERA] = fT(60, 60, 0, Ie[SPRITE.INV_ALOE_VERA], 3),
                    this.inv_buttons[ItemType.ALOE_VERA].id = ItemType.ALOE_VERA,
                    this.inv_buttons[ItemType.CHRISTMAS_HAT] = fT(60, 60, 0, Ie[SPRITE.INV_CHRISTMAS_HAT], 3),
                    this.inv_buttons[ItemType.CHRISTMAS_HAT].id = ItemType.CHRISTMAS_HAT,
                    this.inv_buttons[ItemType.ELF_HAT] = fT(60, 60, 0, Ie[SPRITE.INV_ELF_HAT], 3),
                    this.inv_buttons[ItemType.ELF_HAT].id = ItemType.ELF_HAT,
                    this.inv_buttons[ItemType.WOOD_SPEAR] = fT(60, 60, 0, Ie[SPRITE.INV_WOOD_SPEAR], 3),
                    this.inv_buttons[ItemType.WOOD_SPEAR].id = ItemType.WOOD_SPEAR,
                    this.inv_buttons[ItemType.DRAGON_SPEAR] = fT(60, 60, 0, Ie[SPRITE.INV_DRAGON_SPEAR], 3),
                    this.inv_buttons[ItemType.DRAGON_SPEAR].id = ItemType.DRAGON_SPEAR,
                    this.inv_buttons[ItemType.CRAB_STICK] = fT(60, 60, 0, Ie[SPRITE.INV_CRAB_STICK], 3),
                    this.inv_buttons[ItemType.CRAB_STICK].id = ItemType.CRAB_STICK,
                    this.inv_buttons[ItemType.CRAB_SPEAR] = fT(60, 60, 0, Ie[SPRITE.INV_CRAB_SPEAR], 3),
                    this.inv_buttons[ItemType.CRAB_SPEAR].id = ItemType.CRAB_SPEAR,
                    this.inv_buttons[ItemType.CRAB_LOOT] = fT(60, 60, 0, Ie[SPRITE.INV_CRAB_LOOT], 3),
                    this.inv_buttons[ItemType.CRAB_LOOT].id = ItemType.CRAB_LOOT,
                    this.inv_buttons[ItemType.BED] = fT(60, 60, 0, Ie[SPRITE.INV_BED], 3),
                    this.inv_buttons[ItemType.BED].id = ItemType.BED,
                    this.inv_buttons[ItemType.CRAB_HELMET] = fT(60, 60, 0, Ie[SPRITE.INV_CROWN_CRAB], 3),
                    this.inv_buttons[ItemType.CRAB_HELMET].id = ItemType.CRAB_HELMET,
                    this.inv_buttons[ItemType.GARLAND] = fT(60, 60, 0, Ie[SPRITE.INV_GARLAND], 3),
                    this.inv_buttons[ItemType.GARLAND].id = ItemType.GARLAND,
                    this.inv_buttons[ItemType.CANDY] = fT(60, 60, 0, Ie[ItemType.CANDY], 3),
                    this.inv_buttons[ItemType.CANDY].id = ItemType.CANDY,
                    this.inv_buttons[ItemType.SUGAR_CAN] = fT(60, 60, 0, Ie[SPRITE.INV_SUGAR_CAN], 3),
                    this.inv_buttons[ItemType.SUGAR_CAN].id = ItemType.SUGAR_CAN,
                    this.craft_buttons = [],
                    this.craft_buttons[ItemType.STONE_SWORD] = fT(60, 60, 0, Ie[SPRITE.CRAFT_SWORD], 3),
                    this.craft_buttons[ItemType.STONE_SWORD].id = ItemType.STONE_SWORD,
                    this.craft_buttons[ItemType.STONE_PICK] = fT(60, 60, 0, Ie[SPRITE.CRAFT_PICK], 3),
                    this.craft_buttons[ItemType.STONE_PICK].id = ItemType.STONE_PICK,
                    this.craft_buttons[ItemType.FIRE] = fT(60, 60, 0, Ie[SPRITE.CRAFT_FIRE], 3),
                    this.craft_buttons[ItemType.FIRE].id = ItemType.FIRE,
                    this.craft_buttons[ItemType.WORKBENCH] = fT(60, 60, 0, Ie[SPRITE.CRAFT_WORK], 3),
                    this.craft_buttons[ItemType.WORKBENCH].id = ItemType.WORKBENCH,
                    this.craft_buttons[ItemType.WOOD_WALL] = fT(60, 60, 0, Ie[SPRITE.CRAFT_WALL], 3),
                    this.craft_buttons[ItemType.WOOD_WALL].id = ItemType.WOOD_WALL,
                    this.craft_buttons[ItemType.WOOD_SPIKE] = fT(60, 60, 0, Ie[SPRITE.CRAFT_SPIKE], 3),
                    this.craft_buttons[ItemType.WOOD_SPIKE].id = ItemType.WOOD_SPIKE,
                    this.craft_buttons[ItemType.BERRY_SEED] = fT(60, 60, 0, Ie[SPRITE.CRAFT_SEED], 3),
                    this.craft_buttons[ItemType.BERRY_SEED].id = ItemType.BERRY_SEED,
                    this.craft_buttons[ItemType.GOLD_PICK] = fT(60, 60, 0, Ie[SPRITE.CRAFT_PICK_GOLD], 3),
                    this.craft_buttons[ItemType.GOLD_PICK].id = ItemType.GOLD_PICK,
                    this.craft_buttons[ItemType.DIAMOND_PICK] = fT(60, 60, 0, Ie[SPRITE.CRAFT_PICK_DIAMOND], 3),
                    this.craft_buttons[ItemType.DIAMOND_PICK].id = ItemType.DIAMOND_PICK,
                    this.craft_buttons[ItemType.GOLD_SWORD] = fT(60, 60, 0, Ie[SPRITE.CRAFT_SWORD_GOLD], 3),
                    this.craft_buttons[ItemType.GOLD_SWORD].id = ItemType.GOLD_SWORD,
                    this.craft_buttons[ItemType.WOOD_SWORD] = fT(60, 60, 0, Ie[SPRITE.CRAFT_SWORD_WOOD], 3),
                    this.craft_buttons[ItemType.WOOD_SWORD].id = ItemType.WOOD_SWORD,
                    this.craft_buttons[ItemType.DIAMOND_SWORD] = fT(60, 60, 0, Ie[SPRITE.CRAFT_SWORD_DIAMOND], 3),
                    this.craft_buttons[ItemType.DIAMOND_SWORD].id = ItemType.DIAMOND_SWORD,
                    this.craft_buttons[ItemType.WOOD_PICK] = fT(60, 60, 0, Ie[SPRITE.CRAFT_PICK_WOOD], 3),
                    this.craft_buttons[ItemType.WOOD_PICK].id = ItemType.WOOD_PICK,
                    this.craft_buttons[ItemType.COOKED_MEAT] = fT(60, 60, 0, Ie[SPRITE.CRAFT_COOKED_MEAT], 3),
                    this.craft_buttons[ItemType.COOKED_MEAT].id = ItemType.COOKED_MEAT,
                    this.craft_buttons[ItemType.BIG_FIRE] = fT(60, 60, 0, Ie[SPRITE.CRAFT_BIG_FIRE], 3),
                    this.craft_buttons[ItemType.BIG_FIRE].id = ItemType.BIG_FIRE,
                    this.craft_buttons[ItemType.BANDAGE] = fT(60, 60, 0, Ie[SPRITE.CRAFT_BANDAGE], 3),
                    this.craft_buttons[ItemType.BANDAGE].id = ItemType.BANDAGE,
                    this.craft_buttons[ItemType.STONE_WALL] = fT(60, 60, 0, Ie[SPRITE.CRAFT_STONE_WALL], 3),
                    this.craft_buttons[ItemType.STONE_WALL].id = ItemType.STONE_WALL,
                    this.craft_buttons[ItemType.GOLD_WALL] = fT(60, 60, 0, Ie[SPRITE.CRAFT_GOLD_WALL], 3),
                    this.craft_buttons[ItemType.GOLD_WALL].id = ItemType.GOLD_WALL,
                    this.craft_buttons[ItemType.DIAMOND_WALL] = fT(60, 60, 0, Ie[SPRITE.CRAFT_DIAMOND_WALL], 3),
                    this.craft_buttons[ItemType.DIAMOND_WALL].id = ItemType.DIAMOND_WALL,
                    this.craft_buttons[ItemType.WOOD_DOOR] = fT(60, 60, 0, Ie[SPRITE.CRAFT_DOOR_WOOD_CLOSE], 3),
                    this.craft_buttons[ItemType.WOOD_DOOR].id = ItemType.WOOD_DOOR,
                    this.craft_buttons[ItemType.CHEST] = fT(60, 60, 0, Ie[SPRITE.CRAFT_CHEST], 3),
                    this.craft_buttons[ItemType.CHEST].id = ItemType.CHEST,
                    this.craft_buttons[ItemType.STONE_SPIKE] = fT(60, 60, 0, Ie[SPRITE.CRAFT_STONE_SPIKE], 3),
                    this.craft_buttons[ItemType.STONE_SPIKE].id = ItemType.STONE_SPIKE,
                    this.craft_buttons[ItemType.GOLD_SPIKE] = fT(60, 60, 0, Ie[SPRITE.CRAFT_GOLD_SPIKE], 3),
                    this.craft_buttons[ItemType.GOLD_SPIKE].id = ItemType.GOLD_SPIKE,
                    this.craft_buttons[ItemType.DIAMOND_SPIKE] = fT(60, 60, 0, Ie[SPRITE.CRAFT_DIAMOND_SPIKE], 3),
                    this.craft_buttons[ItemType.DIAMOND_SPIKE].id = ItemType.DIAMOND_SPIKE,
                    this.craft_buttons[ItemType.BAG] = fT(60, 60, 0, Ie[SPRITE.CRAFT_BAG], 3),
                    this.craft_buttons[ItemType.BAG].id = ItemType.BAG,
                    this.craft_buttons[ItemType.EARMUFFS] = fT(60, 60, 0, Ie[SPRITE.CRAFT_EARMUFFS], 3),
                    this.craft_buttons[ItemType.EARMUFFS].id = ItemType.EARMUFFS,
                    this.craft_buttons[ItemType.STONE_DOOR] = fT(60, 60, 0, Ie[SPRITE.CRAFT_DOOR_STONE_CLOSE], 3),
                    this.craft_buttons[ItemType.STONE_DOOR].id = ItemType.STONE_DOOR,
                    this.craft_buttons[ItemType.GOLD_DOOR] = fT(60, 60, 0, Ie[SPRITE.CRAFT_DOOR_GOLD_CLOSE], 3),
                    this.craft_buttons[ItemType.GOLD_DOOR].id = ItemType.GOLD_DOOR,
                    this.craft_buttons[ItemType.DIAMOND_DOOR] = fT(60, 60, 0, Ie[SPRITE.CRAFT_DOOR_DIAMOND_CLOSE], 3),
                    this.craft_buttons[ItemType.DIAMOND_DOOR].id = ItemType.DIAMOND_DOOR,
                    this.craft_buttons[ItemType.EARMUFFS] = fT(60, 60, 0, Ie[SPRITE.CRAFT_EARMUFFS], 3),
                    this.craft_buttons[ItemType.EARMUFFS].id = ItemType.EARMUFFS,
                    this.craft_buttons[ItemType.COAT] = fT(60, 60, 0, Ie[SPRITE.CRAFT_COAT], 3),
                    this.craft_buttons[ItemType.COAT].id = ItemType.COAT,
                    this.craft_buttons[ItemType.WOOD_SPEAR] = fT(60, 60, 0, Ie[SPRITE.CRAFT_WOOD_SPEAR], 3),
                    this.craft_buttons[ItemType.WOOD_SPEAR].id = ItemType.WOOD_SPEAR,
                    this.craft_buttons[ItemType.STONE_SPEAR] = fT(60, 60, 0, Ie[SPRITE.CRAFT_SPEAR], 3),
                    this.craft_buttons[ItemType.STONE_SPEAR].id = ItemType.STONE_SPEAR,
                    this.craft_buttons[ItemType.GOLD_SPEAR] = fT(60, 60, 0, Ie[SPRITE.CRAFT_GOLD_SPEAR], 3),
                    this.craft_buttons[ItemType.GOLD_SPEAR].id = ItemType.GOLD_SPEAR,
                    this.craft_buttons[ItemType.DIAMOND_SPEAR] = fT(60, 60, 0, Ie[SPRITE.CRAFT_DIAMOND_SPEAR], 3),
                    this.craft_buttons[ItemType.DIAMOND_SPEAR].id = ItemType.DIAMOND_SPEAR,
                    this.craft_buttons[ItemType.DRAGON_SPEAR] = fT(60, 60, 0, Ie[SPRITE.CRAFT_DRAGON_SPEAR], 3),
                    this.craft_buttons[ItemType.DRAGON_SPEAR].id = ItemType.DRAGON_SPEAR,
                    this.craft_buttons[ItemType.FURNACE] = fT(60, 60, 0, Ie[SPRITE.CRAFT_FURNACE], 3),
                    this.craft_buttons[ItemType.FURNACE].id = ItemType.FURNACE,
                    this.craft_buttons[ItemType.EXPLORER_HAT] = fT(60, 60, 0, Ie[SPRITE.CRAFT_EXPLORER_HAT], 3),
                    this.craft_buttons[ItemType.EXPLORER_HAT].id = ItemType.EXPLORER_HAT,
                    this.craft_buttons[ItemType.PIRATE_HAT] = fT(60, 60, 0, Ie[SPRITE.CRAFT_PIRATE_HAT], 3),
                    this.craft_buttons[ItemType.PIRATE_HAT].id = ItemType.PIRATE_HAT,
                    this.craft_buttons[ItemType.FUR_HAT] = fT(60, 60, 0, Ie[SPRITE.CRAFT_FUR_HAT], 3),
                    this.craft_buttons[ItemType.FUR_HAT].id = ItemType.FUR_HAT,
                    this.craft_buttons[ItemType.TURBAN1] = fT(60, 60, 0, Ie[SPRITE.CRAFT_TURBAN1], 3),
                    this.craft_buttons[ItemType.TURBAN1].id = ItemType.TURBAN1,
                    this.craft_buttons[ItemType.TURBAN2] = fT(60, 60, 0, Ie[SPRITE.CRAFT_TURBAN2], 3),
                    this.craft_buttons[ItemType.TURBAN2].id = ItemType.TURBAN2,
                    this.craft_buttons[ItemType.WOOD_BOW] = fT(60, 60, 0, Ie[SPRITE.CRAFT_WOOD_BOW], 3),
                    this.craft_buttons[ItemType.WOOD_BOW].id = ItemType.WOOD_BOW,
                    this.craft_buttons[ItemType.WOOD_ARROW] = fT(60, 60, 0, Ie[SPRITE.CRAFT_WOOD_ARROW], 3),
                    this.craft_buttons[ItemType.WOOD_ARROW].id = ItemType.WOOD_ARROW,
                    this.craft_buttons[ItemType.WOOD_SHIELD] = fT(60, 60, 0, Ie[SPRITE.CRAFT_WOOD_SHIELD], 3),
                    this.craft_buttons[ItemType.WOOD_SHIELD].id = ItemType.WOOD_SHIELD,
                    this.craft_buttons[ItemType.STONE_BOW] = fT(60, 60, 0, Ie[SPRITE.CRAFT_STONE_BOW], 3),
                    this.craft_buttons[ItemType.STONE_BOW].id = ItemType.STONE_BOW,
                    this.craft_buttons[ItemType.STONE_ARROW] = fT(60, 60, 0, Ie[SPRITE.CRAFT_STONE_ARROW], 3),
                    this.craft_buttons[ItemType.STONE_ARROW].id = ItemType.STONE_ARROW,
                    this.craft_buttons[ItemType.STONE_SHIELD] = fT(60, 60, 0, Ie[SPRITE.CRAFT_STONE_SHIELD], 3),
                    this.craft_buttons[ItemType.STONE_SHIELD].id = ItemType.STONE_SHIELD,
                    this.craft_buttons[ItemType.GOLD_BOW] = fT(60, 60, 0, Ie[SPRITE.CRAFT_GOLD_BOW], 3),
                    this.craft_buttons[ItemType.GOLD_BOW].id = ItemType.GOLD_BOW,
                    this.craft_buttons[ItemType.GOLD_ARROW] = fT(60, 60, 0, Ie[SPRITE.CRAFT_GOLD_ARROW], 3),
                    this.craft_buttons[ItemType.GOLD_ARROW].id = ItemType.GOLD_ARROW,
                    this.craft_buttons[ItemType.GOLD_SHIELD] = fT(60, 60, 0, Ie[SPRITE.CRAFT_GOLD_SHIELD], 3),
                    this.craft_buttons[ItemType.GOLD_SHIELD].id = ItemType.GOLD_SHIELD,
                    this.craft_buttons[ItemType.DIAMOND_BOW] = fT(60, 60, 0, Ie[SPRITE.CRAFT_DIAMOND_BOW], 3),
                    this.craft_buttons[ItemType.DIAMOND_BOW].id = ItemType.DIAMOND_BOW,
                    this.craft_buttons[ItemType.DIAMOND_ARROW] = fT(60, 60, 0, Ie[SPRITE.CRAFT_DIAMOND_ARROW], 3),
                    this.craft_buttons[ItemType.DIAMOND_ARROW].id = ItemType.DIAMOND_ARROW,
                    this.craft_buttons[ItemType.DIAMOND_SHIELD] = fT(60, 60, 0, Ie[SPRITE.CRAFT_DIAMOND_SHIELD], 3),
                    this.craft_buttons[ItemType.DIAMOND_SHIELD].id = ItemType.DIAMOND_SHIELD,
                    this.craft_buttons[ItemType.AMETHYST_BOW] = fT(60, 60, 0, Ie[SPRITE.CRAFT_AMETHYST_BOW], 3),
                    this.craft_buttons[ItemType.AMETHYST_BOW].id = ItemType.AMETHYST_BOW,
                    this.craft_buttons[ItemType.AMETHYST_ARROW] = fT(60, 60, 0, Ie[SPRITE.CRAFT_AMETHYST_ARROW], 3),
                    this.craft_buttons[ItemType.AMETHYST_ARROW].id = ItemType.AMETHYST_ARROW,
                    this.craft_buttons[ItemType.AMETHYST_SHIELD] = fT(60, 60, 0, Ie[SPRITE.CRAFT_AMETHYST_SHIELD], 3),
                    this.craft_buttons[ItemType.AMETHYST_SHIELD].id = ItemType.AMETHYST_SHIELD,
                    this.craft_buttons[ItemType.REIDITE_BOW] = fT(60, 60, 0, Ie[SPRITE.CRAFT_REIDITE_BOW], 3),
                    this.craft_buttons[ItemType.REIDITE_BOW].id = ItemType.REIDITE_BOW,
                    this.craft_buttons[ItemType.REIDITE_ARROW] = fT(60, 60, 0, Ie[SPRITE.CRAFT_REIDITE_ARROW], 3),
                    this.craft_buttons[ItemType.REIDITE_ARROW].id = ItemType.REIDITE_ARROW,
                    this.craft_buttons[ItemType.REIDITE_SHIELD] = fT(60, 60, 0, Ie[SPRITE.CRAFT_REIDITE_SHIELD], 3),
                    this.craft_buttons[ItemType.REIDITE_SHIELD].id = ItemType.REIDITE_SHIELD,
                    this.craft_buttons[ItemType.DRAGON_BOW] = fT(60, 60, 0, Ie[SPRITE.CRAFT_DRAGON_BOW], 3),
                    this.craft_buttons[ItemType.DRAGON_BOW].id = ItemType.DRAGON_BOW,
                    this.craft_buttons[ItemType.DRAGON_ARROW] = fT(60, 60, 0, Ie[SPRITE.CRAFT_DRAGON_ARROW], 3),
                    this.craft_buttons[ItemType.DRAGON_ARROW].id = ItemType.DRAGON_ARROW,
                    this.craft_buttons[ItemType.WOOD_HELMET] = fT(60, 60, 0, Ie[SPRITE.CRAFT_WOOD_HELMET], 3),
                    this.craft_buttons[ItemType.WOOD_HELMET].id = ItemType.WOOD_HELMET,
                    this.craft_buttons[ItemType.STONE_HELMET] = fT(60, 60, 0, Ie[SPRITE.CRAFT_STONE_HELMET], 3),
                    this.craft_buttons[ItemType.STONE_HELMET].id = ItemType.STONE_HELMET,
                    this.craft_buttons[ItemType.GOLD_HELMET] = fT(60, 60, 0, Ie[SPRITE.CRAFT_GOLD_HELMET], 3),
                    this.craft_buttons[ItemType.GOLD_HELMET].id = ItemType.GOLD_HELMET,
                    this.craft_buttons[ItemType.DIAMOND_HELMET] = fT(60, 60, 0, Ie[SPRITE.CRAFT_DIAMOND_HELMET], 3),
                    this.craft_buttons[ItemType.DIAMOND_HELMET].id = ItemType.DIAMOND_HELMET,
                    this.craft_buttons[ItemType.BOOK] = fT(60, 60, 0, Ie[SPRITE.CRAFT_BOOK], 3),
                    this.craft_buttons[ItemType.BOOK].id = ItemType.BOOK,
                    this.craft_buttons[ItemType.PAPER] = fT(60, 60, 0, Ie[SPRITE.CRAFT_PAPER], 3),
                    this.craft_buttons[ItemType.PAPER].id = ItemType.PAPER,
                    this.craft_buttons[ItemType.BAG] = fT(60, 60, 0, Ie[SPRITE.CRAFT_BAG], 3),
                    this.craft_buttons[ItemType.BAG].id = ItemType.BAG,
                    this.craft_buttons[ItemType.AMETHYST_SWORD] = fT(60, 60, 0, Ie[SPRITE.CRAFT_SWORD_AMETHYST], 3),
                    this.craft_buttons[ItemType.AMETHYST_SWORD].id = ItemType.AMETHYST_SWORD,
                    this.craft_buttons[ItemType.AMETHYST_PICK] = fT(60, 60, 0, Ie[SPRITE.CRAFT_PICK_AMETHYST], 3),
                    this.craft_buttons[ItemType.AMETHYST_PICK].id = ItemType.AMETHYST_PICK,
                    this.craft_buttons[ItemType.REIDITE_PICK] = fT(60, 60, 0, Ie[SPRITE.CRAFT_PICK_REIDITE], 3),
                    this.craft_buttons[ItemType.REIDITE_PICK].id = ItemType.REIDITE_PICK,
                    this.craft_buttons[ItemType.AMETHYST_SPEAR] = fT(60, 60, 0, Ie[SPRITE.CRAFT_AMETHYST_SPEAR], 3),
                    this.craft_buttons[ItemType.AMETHYST_SPEAR].id = ItemType.AMETHYST_SPEAR,
                    this.craft_buttons[ItemType.STONE_HAMMER] = fT(60, 60, 0, Ie[SPRITE.CRAFT_HAMMER], 3),
                    this.craft_buttons[ItemType.STONE_HAMMER].id = ItemType.STONE_HAMMER,
                    this.craft_buttons[ItemType.GOLD_HAMMER] = fT(60, 60, 0, Ie[SPRITE.CRAFT_HAMMER_GOLD], 3),
                    this.craft_buttons[ItemType.GOLD_HAMMER].id = ItemType.GOLD_HAMMER,
                    this.craft_buttons[ItemType.DIAMOND_HAMMER] = fT(60, 60, 0, Ie[SPRITE.CRAFT_HAMMER_DIAMOND], 3),
                    this.craft_buttons[ItemType.DIAMOND_HAMMER].id = ItemType.DIAMOND_HAMMER,
                    this.craft_buttons[ItemType.AMETHYST_HAMMER] = fT(60, 60, 0, Ie[SPRITE.CRAFT_HAMMER_AMETHYST], 3),
                    this.craft_buttons[ItemType.AMETHYST_HAMMER].id = ItemType.AMETHYST_HAMMER,
                    this.craft_buttons[ItemType.REIDITE_HAMMER] = fT(60, 60, 0, Ie[SPRITE.CRAFT_HAMMER_REIDITE], 3),
                    this.craft_buttons[ItemType.REIDITE_HAMMER].id = ItemType.REIDITE_HAMMER,
                    this.craft_buttons[ItemType.AMETHYST_WALL] = fT(60, 60, 0, Ie[SPRITE.CRAFT_AMETHYST_WALL], 3),
                    this.craft_buttons[ItemType.AMETHYST_WALL].id = ItemType.AMETHYST_WALL,
                    this.craft_buttons[ItemType.AMETHYST_SPIKE] = fT(60, 60, 0, Ie[SPRITE.CRAFT_AMETHYST_SPIKE], 3),
                    this.craft_buttons[ItemType.AMETHYST_SPIKE].id = ItemType.AMETHYST_SPIKE,
                    this.craft_buttons[ItemType.AMETHYST_DOOR] = fT(60, 60, 0, Ie[SPRITE.CRAFT_DOOR_AMETHYST_CLOSE], 3),
                    this.craft_buttons[ItemType.AMETHYST_DOOR].id = ItemType.AMETHYST_DOOR,
                    this.craft_buttons[ItemType.CAP_SCARF] = fT(60, 60, 0, Ie[SPRITE.CRAFT_CAP_SCARF], 3),
                    this.craft_buttons[ItemType.CAP_SCARF].id = ItemType.CAP_SCARF,
                    this.craft_buttons[ItemType.DIAMOND_CORD] = fT(60, 60, 0, Ie[SPRITE.CRAFT_BLUE_CORD], 3),
                    this.craft_buttons[ItemType.DIAMOND_CORD].id = ItemType.DIAMOND_CORD,
                    this.craft_buttons[ItemType.LOCK] = fT(60, 60, 0, Ie[SPRITE.CRAFT_LOCK], 3),
                    this.craft_buttons[ItemType.LOCK].id = ItemType.LOCK,
                    this.craft_buttons[ItemType.RESURRECTION] = fT(60, 60, 0, Ie[SPRITE.CRAFT_RESURRECTION], 3),
                    this.craft_buttons[ItemType.RESURRECTION].id = ItemType.RESURRECTION,
                    this.craft_buttons[ItemType.LOCK_PICK] = fT(60, 60, 0, Ie[SPRITE.CRAFT_LOCKPICK], 3),
                    this.craft_buttons[ItemType.LOCK_PICK].id = ItemType.LOCK_PICK,
                    this.craft_buttons[ItemType.TOTEM] = fT(60, 60, 0, Ie[SPRITE.CRAFT_TOTEM], 3),
                    this.craft_buttons[ItemType.TOTEM].id = ItemType.TOTEM,
                    this.craft_buttons[ItemType.AMETHYST_HELMET] = fT(60, 60, 0, Ie[SPRITE.CRAFT_AMETHYST_HELMET], 3),
                    this.craft_buttons[ItemType.AMETHYST_HELMET].id = ItemType.AMETHYST_HELMET,
                    this.craft_buttons[ItemType.SUPER_HAMMER] = fT(60, 60, 0, Ie[SPRITE.CRAFT_SUPER_HAMMER], 3),
                    this.craft_buttons[ItemType.SUPER_HAMMER].id = ItemType.SUPER_HAMMER,
                    this.craft_buttons[ItemType.BRIDGE] = fT(60, 60, 0, Ie[SPRITE.CRAFT_BRIDGE], 3),
                    this.craft_buttons[ItemType.BRIDGE].id = ItemType.BRIDGE,
                    this.craft_buttons[ItemType.TOWER] = fT(60, 60, 0, Ie[SPRITE.CRAFT_WOOD_TOWER], 3),
                    this.craft_buttons[ItemType.TOWER].id = ItemType.TOWER,
                    this.craft_buttons[ItemType.BOAT] = fT(60, 60, 0, Ie[SPRITE.CRAFT_BOAT], 3),
                    this.craft_buttons[ItemType.BOAT].id = ItemType.BOAT,
                    this.craft_buttons[ItemType.SLED] = fT(60, 60, 0, Ie[SPRITE.CRAFT_SLED], 3),
                    this.craft_buttons[ItemType.SLED].id = ItemType.SLED,
                    this.craft_buttons[ItemType.PLANE] = fT(60, 60, 0, Ie[SPRITE.CRAFT_PLANE], 3),
                    this.craft_buttons[ItemType.PLANE].id = ItemType.PLANE,
                    this.craft_buttons[ItemType.SADDLE] = fT(60, 60, 0, Ie[SPRITE.CRAFT_SADDLE], 3),
                    this.craft_buttons[ItemType.SADDLE].id = ItemType.SADDLE,
                    this.craft_buttons[ItemType.BOTTLE_EMPTY] = fT(60, 60, 0, Ie[SPRITE.CRAFT_BOTTLE_EMPTY], 3),
                    this.craft_buttons[ItemType.BOTTLE_EMPTY].id = ItemType.BOTTLE_EMPTY,
                    this.craft_buttons[ItemType.BOTTLE_FULL] = fT(60, 60, 0, Ie[SPRITE.CRAFT_BOTTLE_FULL], 3),
                    this.craft_buttons[ItemType.BOTTLE_FULL].id = ItemType.BOTTLE_FULL,
                    this.craft_buttons[ItemType.BOTTLE_FULL_2] = fT(60, 60, 0, Ie[SPRITE.CRAFT_BOTTLE_FULL], 3),
                    this.craft_buttons[ItemType.BOTTLE_FULL_2].id = ItemType.BOTTLE_FULL_2,
                    this.craft_buttons[ItemType.BOTTLE_FULL_3] = fT(60, 60, 0, Ie[SPRITE.CRAFT_BOTTLE_FULL], 3),
                    this.craft_buttons[ItemType.BOTTLE_FULL_3].id = ItemType.BOTTLE_FULL_3,
                    this.craft_buttons[ItemType.STONE_SHOVEL] = fT(60, 60, 0, Ie[SPRITE.CRAFT_SHOVEL], 3),
                    this.craft_buttons[ItemType.STONE_SHOVEL].id = ItemType.STONE_SHOVEL,
                    this.craft_buttons[ItemType.GOLD_SHOVEL] = fT(60, 60, 0, Ie[SPRITE.CRAFT_SHOVEL_GOLD], 3),
                    this.craft_buttons[ItemType.GOLD_SHOVEL].id = ItemType.GOLD_SHOVEL,
                    this.craft_buttons[ItemType.DIAMOND_SHOVEL] = fT(60, 60, 0, Ie[SPRITE.CRAFT_SHOVEL_DIAMOND], 3),
                    this.craft_buttons[ItemType.DIAMOND_SHOVEL].id = ItemType.DIAMOND_SHOVEL,
                    this.craft_buttons[ItemType.AMETHYST_SHOVEL] = fT(60, 60, 0, Ie[SPRITE.CRAFT_SHOVEL_AMETHYST], 3),
                    this.craft_buttons[ItemType.AMETHYST_SHOVEL].id = ItemType.AMETHYST_SHOVEL,
                    this.craft_buttons[ItemType.REIDITE_SHOVEL] = fT(60, 60, 0, Ie[SPRITE.CRAFT_SHOVEL_REIDITE], 3),
                    this.craft_buttons[ItemType.REIDITE_SHOVEL].id = ItemType.REIDITE_SHOVEL,
                    this.craft_buttons[ItemType.WRENCH] = fT(60, 60, 0, Ie[SPRITE.CRAFT_SPANNER], 3),
                    this.craft_buttons[ItemType.WRENCH].id = ItemType.WRENCH,
                    this.craft_buttons[ItemType.GOLD_WRENCH] = fT(60, 60, 0, Ie[SPRITE.INV_GOLD_WRENCH], 3),
                    this.craft_buttons[ItemType.GOLD_WRENCH].id = ItemType.GOLD_WRENCH,
                    this.craft_buttons[ItemType.WATERING_CAN_EMPTY] = fT(60, 60, 0, Ie[SPRITE.CRAFT_WATERING_CAN], 3),
                    this.craft_buttons[ItemType.WATERING_CAN_EMPTY].id = ItemType.WATERING_CAN_EMPTY,
                    this.craft_buttons[ItemType.WHEAT_SEED] = fT(60, 60, 0, Ie[SPRITE.CRAFT_WHEAT_SEED], 3),
                    this.craft_buttons[ItemType.WHEAT_SEED].id = ItemType.WHEAT_SEED,
                    this.craft_buttons[ItemType.COOKIE] = fT(60, 60, 0, Ie[SPRITE.CRAFT_COOKIE], 3),
                    this.craft_buttons[ItemType.COOKIE].id = ItemType.COOKIE,
                    this.craft_buttons[ItemType.WINDMILL] = fT(60, 60, 0, Ie[SPRITE.CRAFT_WINDMILL], 3),
                    this.craft_buttons[ItemType.WINDMILL].id = ItemType.WINDMILL,
                    this.craft_buttons[ItemType.SUPER_DIVING_SUIT] = fT(60, 60, 0, Ie[SPRITE.CRAFT_SUPER_DIVING_SUIT], 3),
                    this.craft_buttons[ItemType.SUPER_DIVING_SUIT].id = ItemType.SUPER_DIVING_SUIT,
                    this.craft_buttons[ItemType.DIVING_MASK] = fT(60, 60, 0, Ie[SPRITE.CRAFT_DIVING_MASK], 3),
                    this.craft_buttons[ItemType.DIVING_MASK].id = ItemType.DIVING_MASK,
                    this.craft_buttons[ItemType.WATERING_CAN_FULL] = fT(60, 60, 0, Ie[SPRITE.CRAFT_WATERING_CAN_FULL], 3),
                    this.craft_buttons[ItemType.WATERING_CAN_FULL].id = ItemType.WATERING_CAN_FULL,
                    this.craft_buttons[ItemType.CAKE] = fT(60, 60, 0, Ie[SPRITE.CRAFT_CAKE], 3),
                    this.craft_buttons[ItemType.CAKE].id = ItemType.CAKE,
                    this.craft_buttons[ItemType.BREAD] = fT(60, 60, 0, Ie[SPRITE.CRAFT_BREAD], 3),
                    this.craft_buttons[ItemType.BREAD].id = ItemType.BREAD,
                    this.craft_buttons[ItemType.FISH_COOKED] = fT(60, 60, 0, Ie[SPRITE.CRAFT_FOODFISH_COOKED], 3),
                    this.craft_buttons[ItemType.FISH_COOKED].id = ItemType.FISH_COOKED,
                    this.craft_buttons[ItemType.PLOT] = fT(60, 60, 0, Ie[SPRITE.CRAFT_PLOT], 3),
                    this.craft_buttons[ItemType.PLOT].id = ItemType.PLOT,
                    this.craft_buttons[ItemType.BREAD_OVEN] = fT(60, 60, 0, Ie[SPRITE.CRAFT_BREAD_OVEN], 3),
                    this.craft_buttons[ItemType.BREAD_OVEN].id = ItemType.BREAD_OVEN,
                    this.craft_buttons[ItemType.SANDWICH] = fT(60, 60, 0, Ie[SPRITE.CRAFT_SANDWICH], 3),
                    this.craft_buttons[ItemType.SANDWICH].id = ItemType.SANDWICH,
                    this.craft_buttons[ItemType.DRAGON_HELMET] = fT(60, 60, 0, Ie[SPRITE.CRAFT_DRAGON_HELMET], 3),
                    this.craft_buttons[ItemType.DRAGON_HELMET].id = ItemType.DRAGON_HELMET,
                    this.craft_buttons[ItemType.DRAGON_SWORD] = fT(60, 60, 0, Ie[SPRITE.INV_DRAGON_SWORD], 3),
                    this.craft_buttons[ItemType.DRAGON_SWORD].id = ItemType.DRAGON_SWORD,
                    this.craft_buttons[ItemType.CROWN_GREEN] = fT(60, 60, 0, Ie[SPRITE.CRAFT_CROWN_GREEN], 3),
                    this.craft_buttons[ItemType.CROWN_GREEN].id = ItemType.CROWN_GREEN,
                    this.craft_buttons[ItemType.CROWN_ORANGE] = fT(60, 60, 0, Ie[SPRITE.CRAFT_CROWN_ORANGE], 3),
                    this.craft_buttons[ItemType.CROWN_ORANGE].id = ItemType.CROWN_ORANGE,
                    this.craft_buttons[ItemType.CROWN_BLUE] = fT(60, 60, 0, Ie[SPRITE.CRAFT_CROWN_BLUE], 3),
                    this.craft_buttons[ItemType.CROWN_BLUE].id = ItemType.CROWN_BLUE,
                    this.craft_buttons[ItemType.HOOD] = fT(60, 60, 0, Ie[SPRITE.CRAFT_HOOD], 3),
                    this.craft_buttons[ItemType.HOOD].id = ItemType.HOOD,
                    this.craft_buttons[ItemType.PEASANT] = fT(60, 60, 0, Ie[SPRITE.CRAFT_PEASANT], 3),
                    this.craft_buttons[ItemType.PEASANT].id = ItemType.PEASANT,
                    this.craft_buttons[ItemType.WINTER_PEASANT] = fT(60, 60, 0, Ie[SPRITE.CRAFT_WINTER_PEASANT], 3),
                    this.craft_buttons[ItemType.WINTER_PEASANT].id = ItemType.WINTER_PEASANT,
                    this.craft_buttons[ItemType.WINTER_HOOD] = fT(60, 60, 0, Ie[SPRITE.CRAFT_WINTER_HOOD], 3),
                    this.craft_buttons[ItemType.WINTER_HOOD].id = ItemType.WINTER_HOOD,
                    this.craft_buttons[ItemType.BUCKET_FULL] = fT(60, 60, 0, Ie[SPRITE.CRAFT_BUCKET_FULL], 3),
                    this.craft_buttons[ItemType.BUCKET_FULL].id = ItemType.BUCKET_FULL,
                    this.craft_buttons[ItemType.BUCKET_EMPTY] = fT(60, 60, 0, Ie[SPRITE.CRAFT_BUCKET_EMPTY], 3),
                    this.craft_buttons[ItemType.BUCKET_EMPTY].id = ItemType.BUCKET_EMPTY,
                    this.craft_buttons[ItemType.WELL] = fT(60, 60, 0, Ie[SPRITE.CRAFT_WELL], 3),
                    this.craft_buttons[ItemType.WELL].id = ItemType.WELL,
                    this.craft_buttons[ItemType.PUMPKIN_SEED] = fT(60, 60, 0, Ie[SPRITE.CRAFT_PUMPKIN_SEED], 3),
                    this.craft_buttons[ItemType.PUMPKIN_SEED].id = ItemType.PUMPKIN_SEED,
                    this.craft_buttons[ItemType.GARLIC_SEED] = fT(60, 60, 0, Ie[SPRITE.CRAFT_GARLIC_SEED], 3),
                    this.craft_buttons[ItemType.GARLIC_SEED].id = ItemType.GARLIC_SEED,
                    this.craft_buttons[ItemType.ROOF] = fT(60, 60, 0, Ie[SPRITE.CRAFT_ROOF], 3),
                    this.craft_buttons[ItemType.ROOF].id = ItemType.ROOF,
                    this.craft_buttons[ItemType.THORNBUSH_SEED] = fT(60, 60, 0, Ie[SPRITE.CRAFT_THORNBUSH_SEED], 3),
                    this.craft_buttons[ItemType.THORNBUSH_SEED].id = ItemType.THORNBUSH_SEED,
                    this.craft_buttons[ItemType.TOMATO_SEED] = fT(60, 60, 0, Ie[SPRITE.CRAFT_TOMATO_SEED], 3),
                    this.craft_buttons[ItemType.TOMATO_SEED].id = ItemType.TOMATO_SEED,
                    this.craft_buttons[ItemType.CARROT_SEED] = fT(60, 60, 0, Ie[SPRITE.CRAFT_CARROT_SEED], 3),
                    this.craft_buttons[ItemType.CARROT_SEED].id = ItemType.CARROT_SEED,
                    this.craft_buttons[ItemType.WATERMELON_SEED] = fT(60, 60, 0, Ie[SPRITE.CRAFT_WATERMELON_SEED], 3),
                    this.craft_buttons[ItemType.WATERMELON_SEED].id = ItemType.WATERMELON_SEED,
                    this.craft_buttons[ItemType.ALOE_VERA_SEED] = fT(60, 60, 0, Ie[SPRITE.CRAFT_ALOE_VERA_SEED], 3),
                    this.craft_buttons[ItemType.ALOE_VERA_SEED].id = ItemType.ALOE_VERA_SEED,
                    this.craft_buttons[ItemType.WOOD_SPEAR] = fT(60, 60, 0, Ie[SPRITE.CRAFT_WOOD_SPEAR], 3),
                    this.craft_buttons[ItemType.WOOD_SPEAR].id = ItemType.WOOD_SPEAR,
                    this.craft_buttons[ItemType.DRAGON_SPEAR] = fT(60, 60, 0, Ie[SPRITE.CRAFT_DRAGON_SPEAR], 3),
                    this.craft_buttons[ItemType.DRAGON_SPEAR].id = ItemType.DRAGON_SPEAR,
                    this.craft_buttons[ItemType.CRAB_SPEAR] = fT(60, 60, 0, Ie[SPRITE.CRAFT_CRAB_SPEAR], 3),
                    this.craft_buttons[ItemType.CRAB_SPEAR].id = ItemType.CRAB_SPEAR,
                    this.craft_buttons[ItemType.BED] = fT(60, 60, 0, Ie[SPRITE.CRAFT_BED], 3),
                    this.craft_buttons[ItemType.BED].id = ItemType.BED,
                    this.craft_buttons[ItemType.CRAB_HELMET] = fT(60, 60, 0, Ie[SPRITE.CRAFT_CROWN_CRAB], 3),
                    this.craft_buttons[ItemType.CRAB_HELMET].id = ItemType.CRAB_HELMET,
                    this.chest_buttons[ItemType.PITCHFORK] = fT(68, 68, 0, Ie[SPRITE.CHEST_PITCHFORK], 3),
                    this.chest_buttons[ItemType.PITCHFORK].id = ItemType.PITCHFORK,
                    this.inv_buttons[ItemType.PITCHFORK] = fT(60, 60, 0, Ie[SPRITE.INV_PITCHFORK], 3),
                    this.inv_buttons[ItemType.PITCHFORK].id = ItemType.PITCHFORK,
                    this.craft_buttons[ItemType.PITCHFORK] = fT(60, 60, 0, Ie[SPRITE.CRAFT_PITCHFORK], 3),
                    this.craft_buttons[ItemType.PITCHFORK].id = ItemType.PITCHFORK,
                    this.chest_buttons[ItemType.GOLD_PITCHFORK] = fT(68, 68, 0, Ie[SPRITE.CHEST_PITCHFORK2], 3),
                    this.chest_buttons[ItemType.GOLD_PITCHFORK].id = ItemType.GOLD_PITCHFORK,
                    this.inv_buttons[ItemType.GOLD_PITCHFORK] = fT(60, 60, 0, Ie[SPRITE.INV_PITCHFORK2], 3),
                    this.inv_buttons[ItemType.GOLD_PITCHFORK].id = ItemType.GOLD_PITCHFORK,
                    this.craft_buttons[ItemType.GOLD_PITCHFORK] = fT(60, 60, 0, Ie[SPRITE.CRAFT_PITCHFORK2], 3),
                    this.craft_buttons[ItemType.GOLD_PITCHFORK].id = ItemType.GOLD_PITCHFORK,
                    this.chest_buttons[ItemType.YUSUKEDAO_ITEM1] = fT(68, 68, 0, Ie[SPRITE.CHEST_YUSUKEDAO_ITEM1], 3),
                    this.chest_buttons[ItemType.YUSUKEDAO_ITEM1].id = ItemType.YUSUKEDAO_ITEM1,
                    this.inv_buttons[ItemType.YUSUKEDAO_ITEM1] = fT(60, 60, 0, Ie[SPRITE.INV_YUSUKEDAO_ITEM1], 3),
                    this.inv_buttons[ItemType.YUSUKEDAO_ITEM1].id = ItemType.YUSUKEDAO_ITEM1,
                    this.craft_buttons[ItemType.YUSUKEDAO_ITEM1] = fT(60, 60, 0, Ie[SPRITE.CRAFT_YUSUKEDAO_ITEM1], 3),
                    this.craft_buttons[ItemType.YUSUKEDAO_ITEM1].id = ItemType.YUSUKEDAO_ITEM1,
                    this.chest_buttons[ItemType.YUSUKEDAO_ITEM2] = fT(68, 68, 0, Ie[SPRITE.CHEST_YUSUKEDAO_ITEM2], 3),
                    this.chest_buttons[ItemType.YUSUKEDAO_ITEM2].id = ItemType.YUSUKEDAO_ITEM2,
                    this.inv_buttons[ItemType.YUSUKEDAO_ITEM2] = fT(60, 60, 0, Ie[SPRITE.INV_YUSUKEDAO_ITEM2], 3),
                    this.inv_buttons[ItemType.YUSUKEDAO_ITEM2].id = ItemType.YUSUKEDAO_ITEM2,
                    this.craft_buttons[ItemType.YUSUKEDAO_ITEM2] = fT(60, 60, 0, Ie[SPRITE.CRAFT_YUSUKEDAO_ITEM2], 3),
                    this.craft_buttons[ItemType.YUSUKEDAO_ITEM2].id = ItemType.YUSUKEDAO_ITEM2,
                    this.chest_buttons[ItemType.MACHETE] = fT(68, 68, 0, Ie[SPRITE.CHEST_MACHETE], 3),
                    this.chest_buttons[ItemType.MACHETE].id = ItemType.MACHETE,
                    this.inv_buttons[ItemType.MACHETE] = fT(60, 60, 0, Ie[SPRITE.INV_MACHETE], 3),
                    this.inv_buttons[ItemType.MACHETE].id = ItemType.MACHETE,
                    this.craft_buttons[ItemType.MACHETE] = fT(60, 60, 0, Ie[SPRITE.CRAFT_MACHETE], 3),
                    this.craft_buttons[ItemType.MACHETE].id = ItemType.MACHETE,
                    this.chest_buttons[ItemType.PILOT_HAT] = fT(68, 68, 0, Ie[SPRITE.CHEST_PILOT_HELMET], 3),
                    this.chest_buttons[ItemType.PILOT_HAT].id = ItemType.PILOT_HAT,
                    this.inv_buttons[ItemType.PILOT_HAT] = fT(60, 60, 0, Ie[SPRITE.INV_PILOT_HELMET], 3),
                    this.inv_buttons[ItemType.PILOT_HAT].id = ItemType.PILOT_HAT,
                    this.craft_buttons[ItemType.PILOT_HAT] = fT(60, 60, 0, Ie[SPRITE.CRAFT_PILOT_HELMET], 3),
                    this.craft_buttons[ItemType.PILOT_HAT].id = ItemType.PILOT_HAT,
                    this.chest_buttons[ItemType.PITCHFORK_PART] = fT(68, 68, 0, Ie[SPRITE.CHEST_PITCHFORK_PART], 3),
                    this.chest_buttons[ItemType.PITCHFORK_PART].id = ItemType.PITCHFORK_PART,
                    this.inv_buttons[ItemType.PITCHFORK_PART] = fT(60, 60, 0, Ie[SPRITE.INV_PITCHFORK_PART], 3),
                    this.inv_buttons[ItemType.PITCHFORK_PART].id = ItemType.PITCHFORK_PART,
                    this.chest_buttons[ItemType.SANDWORM_JUICE] = fT(68, 68, 0, Ie[SPRITE.CHEST_SANDWORM_JUICE], 3),
                    this.chest_buttons[ItemType.SANDWORM_JUICE].id = ItemType.SANDWORM_JUICE,
                    this.inv_buttons[ItemType.SANDWORM_JUICE] = fT(60, 60, 0, Ie[SPRITE.INV_SANDWORM_JUICE], 3),
                    this.inv_buttons[ItemType.SANDWORM_JUICE].id = ItemType.SANDWORM_JUICE,
                    this.chest_buttons[ItemType.PILOT_GLASSES] = fT(68, 68, 0, Ie[SPRITE.CHEST_PILOT_GLASSES], 3),
                    this.chest_buttons[ItemType.PILOT_GLASSES].id = ItemType.PILOT_GLASSES,
                    this.inv_buttons[ItemType.PILOT_GLASSES] = fT(60, 60, 0, Ie[SPRITE.INV_PILOT_GLASSES], 3),
                    this.inv_buttons[ItemType.PILOT_GLASSES].id = ItemType.PILOT_GLASSES,
                    this.chest_buttons[ItemType.EMERALD_MACHINE] = fT(68, 68, 0, Ie[SPRITE.CHEST_EMERALD_MACHINE], 3),
                    this.chest_buttons[ItemType.EMERALD_MACHINE].id = ItemType.EMERALD_MACHINE,
                    this.inv_buttons[ItemType.EMERALD_MACHINE] = fT(60, 60, 0, Ie[SPRITE.INV_EMERALD_MACHINE], 3),
                    this.inv_buttons[ItemType.EMERALD_MACHINE].id = ItemType.EMERALD_MACHINE,
                    this.craft_buttons[ItemType.EMERALD_MACHINE] = fT(60, 60, 0, Ie[SPRITE.CRAFT_EMERALD_MACHINE], 3),
                    this.craft_buttons[ItemType.EMERALD_MACHINE].id = ItemType.EMERALD_MACHINE,
                    this.chest_buttons[ItemType.WOOD_DOOR_SPIKE] = fT(68, 68, 0, Ie[SPRITE.CHEST_WOOD_DOOR_SPIKE], 3),
                    this.chest_buttons[ItemType.WOOD_DOOR_SPIKE].id = ItemType.WOOD_DOOR_SPIKE,
                    this.inv_buttons[ItemType.WOOD_DOOR_SPIKE] = fT(60, 60, 0, Ie[SPRITE.INV_WOOD_DOOR_SPIKE], 3),
                    this.inv_buttons[ItemType.WOOD_DOOR_SPIKE].id = ItemType.WOOD_DOOR_SPIKE,
                    this.craft_buttons[ItemType.WOOD_DOOR_SPIKE] = fT(60, 60, 0, Ie[SPRITE.CRAFT_WOOD_DOOR_SPIKE], 3),
                    this.craft_buttons[ItemType.WOOD_DOOR_SPIKE].id = ItemType.WOOD_DOOR_SPIKE,
                    this.chest_buttons[ItemType.STONE_DOOR_SPIKE] = fT(68, 68, 0, Ie[SPRITE.CHEST_STONE_DOOR_SPIKE], 3),
                    this.chest_buttons[ItemType.STONE_DOOR_SPIKE].id = ItemType.STONE_DOOR_SPIKE,
                    this.inv_buttons[ItemType.STONE_DOOR_SPIKE] = fT(60, 60, 0, Ie[SPRITE.INV_STONE_DOOR_SPIKE], 3),
                    this.inv_buttons[ItemType.STONE_DOOR_SPIKE].id = ItemType.STONE_DOOR_SPIKE,
                    this.craft_buttons[ItemType.STONE_DOOR_SPIKE] = fT(60, 60, 0, Ie[SPRITE.CRAFT_STONE_DOOR_SPIKE], 3),
                    this.craft_buttons[ItemType.STONE_DOOR_SPIKE].id = ItemType.STONE_DOOR_SPIKE,
                    this.chest_buttons[ItemType.GOLD_DOOR_SPIKE] = fT(68, 68, 0, Ie[SPRITE.CHEST_GOLD_DOOR_SPIKE], 3),
                    this.chest_buttons[ItemType.GOLD_DOOR_SPIKE].id = ItemType.GOLD_DOOR_SPIKE,
                    this.inv_buttons[ItemType.GOLD_DOOR_SPIKE] = fT(60, 60, 0, Ie[SPRITE.INV_GOLD_DOOR_SPIKE], 3),
                    this.inv_buttons[ItemType.GOLD_DOOR_SPIKE].id = ItemType.GOLD_DOOR_SPIKE,
                    this.craft_buttons[ItemType.GOLD_DOOR_SPIKE] = fT(60, 60, 0, Ie[SPRITE.CRAFT_GOLD_DOOR_SPIKE], 3),
                    this.craft_buttons[ItemType.GOLD_DOOR_SPIKE].id = ItemType.GOLD_DOOR_SPIKE,
                    this.chest_buttons[ItemType.DIAMOND_DOOR_SPIKE] = fT(68, 68, 0, Ie[SPRITE.CHEST_DIAMOND_DOOR_SPIKE], 3),
                    this.chest_buttons[ItemType.DIAMOND_DOOR_SPIKE].id = ItemType.DIAMOND_DOOR_SPIKE,
                    this.inv_buttons[ItemType.DIAMOND_DOOR_SPIKE] = fT(60, 60, 0, Ie[SPRITE.INV_DIAMOND_DOOR_SPIKE], 3),
                    this.inv_buttons[ItemType.DIAMOND_DOOR_SPIKE].id = ItemType.DIAMOND_DOOR_SPIKE;
                    this.craft_buttons[ItemType.DIAMOND_DOOR_SPIKE] = fT(60, 60, 0, Ie[SPRITE.CRAFT_DIAMOND_DOOR_SPIKE], 3),
                    this.craft_buttons[ItemType.DIAMOND_DOOR_SPIKE].id = ItemType.DIAMOND_DOOR_SPIKE,
                    this.chest_buttons[ItemType.AMETHYST_DOOR_SPIKE] = fT(68, 68, 0, Ie[SPRITE.CHEST_AMETHYST_DOOR_SPIKE], 3),
                    this.chest_buttons[ItemType.AMETHYST_DOOR_SPIKE].id = ItemType.AMETHYST_DOOR_SPIKE,
                    this.inv_buttons[ItemType.AMETHYST_DOOR_SPIKE] = fT(60, 60, 0, Ie[SPRITE.INV_AMETHYST_DOOR_SPIKE], 3),
                    this.inv_buttons[ItemType.AMETHYST_DOOR_SPIKE].id = ItemType.AMETHYST_DOOR_SPIKE,
                    this.craft_buttons[ItemType.AMETHYST_DOOR_SPIKE] = fT(60, 60, 0, Ie[SPRITE.CRAFT_AMETHYST_DOOR_SPIKE], 3),
                    this.craft_buttons[ItemType.AMETHYST_DOOR_SPIKE].id = ItemType.AMETHYST_DOOR_SPIKE,
                    this.chest_buttons[ItemType.REIDITE_DOOR_SPIKE] = fT(68, 68, 0, Ie[SPRITE.CHEST_REIDITE_DOOR_SPIKE], 3),
                    this.chest_buttons[ItemType.REIDITE_DOOR_SPIKE].id = ItemType.REIDITE_DOOR_SPIKE,
                    this.inv_buttons[ItemType.REIDITE_DOOR_SPIKE] = fT(60, 60, 0, Ie[SPRITE.INV_REIDITE_DOOR_SPIKE], 3),
                    this.inv_buttons[ItemType.REIDITE_DOOR_SPIKE].id = ItemType.REIDITE_DOOR_SPIKE,
                    this.craft_buttons[ItemType.REIDITE_DOOR_SPIKE] = fT(60, 60, 0, Ie[SPRITE.CRAFT_REIDITE_DOOR_SPIKE], 3),
                    this.craft_buttons[ItemType.REIDITE_DOOR_SPIKE].id = ItemType.REIDITE_DOOR_SPIKE,
                    this.chest_buttons[ItemType.REIDITE_WALL] = fT(68, 68, 0, Ie[SPRITE.CHEST_REIDITE_WALL], 3),
                    this.chest_buttons[ItemType.REIDITE_WALL].id = ItemType.REIDITE_WALL,
                    this.inv_buttons[ItemType.REIDITE_WALL] = fT(60, 60, 0, Ie[SPRITE.INV_REIDITE_WALL], 3),
                    this.inv_buttons[ItemType.REIDITE_WALL].id = ItemType.REIDITE_WALL,
                    this.craft_buttons[ItemType.REIDITE_WALL] = fT(60, 60, 0, Ie[SPRITE.CRAFT_REIDITE_WALL], 3),
                    this.craft_buttons[ItemType.REIDITE_WALL].id = ItemType.REIDITE_WALL,
                    this.chest_buttons[ItemType.REIDITE_SPIKE] = fT(68, 68, 0, Ie[SPRITE.CHEST_REIDITE_SPIKE], 3),
                    this.chest_buttons[ItemType.REIDITE_SPIKE].id = ItemType.REIDITE_SPIKE,
                    this.inv_buttons[ItemType.REIDITE_SPIKE] = fT(60, 60, 0, Ie[SPRITE.INV_REIDITE_SPIKE], 3),
                    this.inv_buttons[ItemType.REIDITE_SPIKE].id = ItemType.REIDITE_SPIKE,
                    this.craft_buttons[ItemType.REIDITE_SPIKE] = fT(60, 60, 0, Ie[SPRITE.CRAFT_REIDITE_SPIKE], 3),
                    this.craft_buttons[ItemType.REIDITE_SPIKE].id = ItemType.REIDITE_SPIKE,
                    this.chest_buttons[ItemType.REIDITE_DOOR] = fT(68, 68, 0, Ie[SPRITE.CHEST_REIDITE_DOOR], 3),
                    this.chest_buttons[ItemType.REIDITE_DOOR].id = ItemType.REIDITE_DOOR,
                    this.inv_buttons[ItemType.REIDITE_DOOR] = fT(60, 60, 0, Ie[SPRITE.INV_REIDITE_DOOR], 3),
                    this.inv_buttons[ItemType.REIDITE_DOOR].id = ItemType.REIDITE_DOOR,
                    this.craft_buttons[ItemType.REIDITE_DOOR] = fT(60, 60, 0, Ie[SPRITE.CRAFT_REIDITE_DOOR], 3),
                    this.craft_buttons[ItemType.REIDITE_DOOR].id = ItemType.REIDITE_DOOR,
                    this.chest_buttons[ItemType.STONE_EXTRACTOR] = fT(68, 68, 0, Ie[SPRITE.CHEST_EXTRACTOR_MACHINE_STONE], 3),
                    this.chest_buttons[ItemType.STONE_EXTRACTOR].id = ItemType.STONE_EXTRACTOR,
                    this.inv_buttons[ItemType.STONE_EXTRACTOR] = fT(60, 60, 0, Ie[SPRITE.INV_EXTRACTOR_MACHINE_STONE], 3),
                    this.inv_buttons[ItemType.STONE_EXTRACTOR].id = ItemType.STONE_EXTRACTOR,
                    this.craft_buttons[ItemType.STONE_EXTRACTOR] = fT(60, 60, 0, Ie[SPRITE.CRAFT_EXTRACTOR_MACHINE_STONE], 3),
                    this.craft_buttons[ItemType.STONE_EXTRACTOR].id = ItemType.STONE_EXTRACTOR,
                    this.chest_buttons[ItemType.GOLD_EXTRACTOR] = fT(68, 68, 0, Ie[SPRITE.CHEST_EXTRACTOR_MACHINE_GOLD], 3),
                    this.chest_buttons[ItemType.GOLD_EXTRACTOR].id = ItemType.GOLD_EXTRACTOR,
                    this.inv_buttons[ItemType.GOLD_EXTRACTOR] = fT(60, 60, 0, Ie[SPRITE.INV_EXTRACTOR_MACHINE_GOLD], 3),
                    this.inv_buttons[ItemType.GOLD_EXTRACTOR].id = ItemType.GOLD_EXTRACTOR,
                    this.craft_buttons[ItemType.GOLD_EXTRACTOR] = fT(60, 60, 0, Ie[SPRITE.CRAFT_EXTRACTOR_MACHINE_GOLD], 3),
                    this.craft_buttons[ItemType.GOLD_EXTRACTOR].id = ItemType.GOLD_EXTRACTOR,
                    this.chest_buttons[ItemType.DIAMOND_EXTRACTOR] = fT(68, 68, 0, Ie[SPRITE.CHEST_DIAMOND_EXTRACTOR], 3),
                    this.chest_buttons[ItemType.DIAMOND_EXTRACTOR].id = ItemType.DIAMOND_EXTRACTOR,
                    this.inv_buttons[ItemType.DIAMOND_EXTRACTOR] = fT(60, 60, 0, Ie[SPRITE.INV_DIAMOND_EXTRACTOR], 3),
                    this.inv_buttons[ItemType.DIAMOND_EXTRACTOR].id = ItemType.DIAMOND_EXTRACTOR,
                    this.craft_buttons[ItemType.DIAMOND_EXTRACTOR] = fT(60, 60, 0, Ie[SPRITE.CRAFT_DIAMOND_EXTRACTOR], 3),
                    this.craft_buttons[ItemType.DIAMOND_EXTRACTOR].id = ItemType.DIAMOND_EXTRACTOR,
                    this.chest_buttons[ItemType.AMETHYST_EXTRACTOR] = fT(68, 68, 0, Ie[SPRITE.CHEST_EXTRACTOR_MACHINE_AMETHYST], 3),
                    this.chest_buttons[ItemType.AMETHYST_EXTRACTOR].id = ItemType.AMETHYST_EXTRACTOR,
                    this.inv_buttons[ItemType.AMETHYST_EXTRACTOR] = fT(60, 60, 0, Ie[SPRITE.INV_EXTRACTOR_MACHINE_AMETHYST], 3),
                    this.inv_buttons[ItemType.AMETHYST_EXTRACTOR].id = ItemType.AMETHYST_EXTRACTOR,
                    this.craft_buttons[ItemType.AMETHYST_EXTRACTOR] = fT(60, 60, 0, Ie[SPRITE.CRAFT_EXTRACTOR_MACHINE_AMETHYST], 3),
                    this.craft_buttons[ItemType.AMETHYST_EXTRACTOR].id = ItemType.AMETHYST_EXTRACTOR,
                    this.chest_buttons[ItemType.REIDITE_EXTRACTOR] = fT(68, 68, 0, Ie[SPRITE.CHEST_EXTRACTOR_MACHINE_REIDITE], 3),
                    this.chest_buttons[ItemType.REIDITE_EXTRACTOR].id = ItemType.REIDITE_EXTRACTOR,
                    this.inv_buttons[ItemType.REIDITE_EXTRACTOR] = fT(60, 60, 0, Ie[SPRITE.INV_EXTRACTOR_MACHINE_REIDITE], 3),
                    this.inv_buttons[ItemType.REIDITE_EXTRACTOR].id = ItemType.REIDITE_EXTRACTOR,
                    this.craft_buttons[ItemType.REIDITE_EXTRACTOR] = fT(60, 60, 0, Ie[SPRITE.CRAFT_EXTRACTOR_MACHINE_REIDITE], 3),
                    this.craft_buttons[ItemType.REIDITE_EXTRACTOR].id = ItemType.REIDITE_EXTRACTOR,
                    this.chest_buttons[ItemType.FLAME] = fT(68, 68, 0, Ie[SPRITE.CHEST_FLAME], 3),
                    this.chest_buttons[ItemType.FLAME].id = ItemType.FLAME,
                    this.inv_buttons[ItemType.FLAME] = fT(60, 60, 0, Ie[SPRITE.INV_FLAME], 3),
                    this.inv_buttons[ItemType.FLAME].id = ItemType.FLAME,
                    this.inv_buttons[ItemType.FLAME].info.img[2] = this.inv_buttons[ItemType.FLAME].info.img[0],
                    this.chest_buttons[ItemType.LAVA_HEART] = fT(68, 68, 0, Ie[SPRITE.CHEST_LAVA_HEART], 3),
                    this.chest_buttons[ItemType.LAVA_HEART].id = ItemType.LAVA_HEART,
                    this.inv_buttons[ItemType.LAVA_HEART] = fT(60, 60, 0, Ie[SPRITE.INV_LAVA_HEART], 3),
                    this.inv_buttons[ItemType.LAVA_HEART].id = ItemType.LAVA_HEART,
                    this.inv_buttons[ItemType.LAVA_HEART].info.img[2] = this.inv_buttons[ItemType.LAVA_HEART].info.img[0],
                    this.chest_buttons[ItemType.REIDITE] = fT(68, 68, 0, Ie[SPRITE.CHEST_REIDITE], 3),
                    this.chest_buttons[ItemType.REIDITE].id = ItemType.REIDITE,
                    this.inv_buttons[ItemType.REIDITE] = fT(60, 60, 0, Ie[SPRITE.INV_REIDITE], 3),
                    this.inv_buttons[ItemType.REIDITE].id = ItemType.REIDITE,
                    this.inv_buttons[ItemType.REIDITE].info.img[2] = this.inv_buttons[ItemType.REIDITE].info.img[0],
                    this.chest_buttons[ItemType.REIDITE_SWORD] = fT(68, 68, 0, Ie[SPRITE.CHEST_REIDITE_SWORD], 3),
                    this.chest_buttons[ItemType.REIDITE_SWORD].id = ItemType.REIDITE_SWORD,
                    this.inv_buttons[ItemType.REIDITE_SWORD] = fT(60, 60, 0, Ie[SPRITE.INV_REIDITE_SWORD], 3),
                    this.inv_buttons[ItemType.REIDITE_SWORD].id = ItemType.REIDITE_SWORD,
                    this.craft_buttons[ItemType.REIDITE_SWORD] = fT(60, 60, 0, Ie[SPRITE.CRAFT_REIDITE_SWORD], 3),
                    this.craft_buttons[ItemType.REIDITE_SWORD].id = ItemType.REIDITE_SWORD,
                    this.chest_buttons[ItemType.DIAMOND_PROTECTION] = fT(68, 68, 0, Ie[SPRITE.CHEST_DIAMOND_PROTECTION], 3),
                    this.chest_buttons[ItemType.DIAMOND_PROTECTION].id = ItemType.DIAMOND_PROTECTION,
                    this.inv_buttons[ItemType.DIAMOND_PROTECTION] = fT(60, 60, 0, Ie[SPRITE.INV_DIAMOND_PROTECTION], 3),
                    this.inv_buttons[ItemType.DIAMOND_PROTECTION].id = ItemType.DIAMOND_PROTECTION,
                    this.craft_buttons[ItemType.DIAMOND_PROTECTION] = fT(60, 60, 0, Ie[SPRITE.CRAFT_DIAMOND_PROTECTION], 3),
                    this.craft_buttons[ItemType.DIAMOND_PROTECTION].id = ItemType.DIAMOND_PROTECTION,
                    this.chest_buttons[ItemType.AMETHYST_PROTECTION] = fT(68, 68, 0, Ie[SPRITE.CHEST_AMETHYST_PROTECTION], 3),
                    this.chest_buttons[ItemType.AMETHYST_PROTECTION].id = ItemType.AMETHYST_PROTECTION,
                    this.inv_buttons[ItemType.AMETHYST_PROTECTION] = fT(60, 60, 0, Ie[SPRITE.INV_AMETHYST_PROTECTION], 3),
                    this.inv_buttons[ItemType.AMETHYST_PROTECTION].id = ItemType.AMETHYST_PROTECTION,
                    this.craft_buttons[ItemType.AMETHYST_PROTECTION] = fT(60, 60, 0, Ie[SPRITE.CRAFT_AMETHYST_PROTECTION], 3),
                    this.craft_buttons[ItemType.AMETHYST_PROTECTION].id = ItemType.AMETHYST_PROTECTION,
                    this.chest_buttons[ItemType.REIDITE_PROTECTION] = fT(68, 68, 0, Ie[SPRITE.CHEST_REIDITE_PROTECTION], 3),
                    this.chest_buttons[ItemType.REIDITE_PROTECTION].id = ItemType.REIDITE_PROTECTION,
                    this.inv_buttons[ItemType.REIDITE_PROTECTION] = fT(60, 60, 0, Ie[SPRITE.INV_REIDITE_PROTECTION], 3),
                    this.inv_buttons[ItemType.REIDITE_PROTECTION].id = ItemType.REIDITE_PROTECTION,
                    this.craft_buttons[ItemType.REIDITE_PROTECTION] = fT(60, 60, 0, Ie[SPRITE.CRAFT_REIDITE_PROTECTION], 3),
                    this.craft_buttons[ItemType.REIDITE_PROTECTION].id = ItemType.REIDITE_PROTECTION,
                    this.chest_buttons[ItemType.LAVA_HELMET] = fT(68, 68, 0, Ie[SPRITE.CHEST_LAVA_HELMET], 3),
                    this.chest_buttons[ItemType.LAVA_HELMET].id = ItemType.LAVA_HELMET,
                    this.inv_buttons[ItemType.LAVA_HELMET] = fT(60, 60, 0, Ie[SPRITE.INV_LAVA_HELMET], 3),
                    this.inv_buttons[ItemType.LAVA_HELMET].id = ItemType.LAVA_HELMET,
                    this.craft_buttons[ItemType.LAVA_HELMET] = fT(60, 60, 0, Ie[SPRITE.CRAFT_LAVA_HELMET], 3),
                    this.craft_buttons[ItemType.LAVA_HELMET].id = ItemType.LAVA_HELMET,
                    this.chest_buttons[ItemType.WITCH_HAT] = fT(68, 68, 0, Ie[SPRITE.CHEST_WITCH], 3),
                    this.chest_buttons[ItemType.WITCH_HAT].id = ItemType.WITCH_HAT,
                    this.inv_buttons[ItemType.WITCH_HAT] = fT(60, 60, 0, Ie[SPRITE.INV_WITCH], 3),
                    this.inv_buttons[ItemType.WITCH_HAT].id = ItemType.WITCH_HAT,
                    this.craft_buttons[ItemType.WITCH_HAT] = fT(60, 60, 0, Ie[SPRITE.CRAFT_WITCH], 3),
                    this.craft_buttons[ItemType.WITCH_HAT].id = ItemType.WITCH_HAT,
                    this.chest_buttons[ItemType.WAND1] = fT(68, 68, 0, Ie[SPRITE.CHEST_WAND1], 3),
                    this.chest_buttons[ItemType.WAND1].id = ItemType.WAND1,
                    this.inv_buttons[ItemType.WAND1] = fT(60, 60, 0, Ie[SPRITE.INV_WAND1], 3),
                    this.inv_buttons[ItemType.WAND1].id = ItemType.WAND1,
                    this.craft_buttons[ItemType.WAND1] = fT(60, 60, 0, Ie[SPRITE.CRAFT_WAND1], 3),
                    this.craft_buttons[ItemType.WAND1].id = ItemType.WAND1,
                    this.chest_buttons[ItemType.WAND2] = fT(68, 68, 0, Ie[SPRITE.CHEST_WAND2], 3),
                    this.chest_buttons[ItemType.WAND2].id = ItemType.WAND2,
                    this.inv_buttons[ItemType.WAND2] = fT(60, 60, 0, Ie[SPRITE.INV_WAND2], 3),
                    this.inv_buttons[ItemType.WAND2].id = ItemType.WAND2,
                    this.craft_buttons[ItemType.WAND2] = fT(60, 60, 0, Ie[SPRITE.CRAFT_WAND2], 3),
                    this.craft_buttons[ItemType.WAND2].id = ItemType.WAND2,
                    this.chest_buttons[ItemType.NIMBUS] = fT(68, 68, 0, Ie[SPRITE.CHEST_NIMBUS], 3),
                    this.chest_buttons[ItemType.NIMBUS].id = ItemType.NIMBUS,
                    this.inv_buttons[ItemType.NIMBUS] = fT(60, 60, 0, Ie[SPRITE.INV_NIMBUS], 3),
                    this.inv_buttons[ItemType.NIMBUS].id = ItemType.NIMBUS,
                    this.craft_buttons[ItemType.NIMBUS] = fT(60, 60, 0, Ie[SPRITE.CRAFT_NIMBUS], 3),
                    this.craft_buttons[ItemType.NIMBUS].id = ItemType.NIMBUS,
                    this.chest_buttons[ItemType.FIREFLY] = fT(68, 68, 0, Ie[SPRITE.CHEST_FIREFLY], 3),
                    this.chest_buttons[ItemType.FIREFLY].id = ItemType.FIREFLY,
                    this.inv_buttons[ItemType.FIREFLY] = fT(60, 60, 0, Ie[SPRITE.INV_FIREFLY], 3),
                    this.inv_buttons[ItemType.FIREFLY].id = ItemType.FIREFLY,
                    this.chest_buttons[ItemType.REIDITE_SPEAR] = fT(68, 68, 0, Ie[SPRITE.CHEST_REIDITE_SPEAR], 3),
                    this.chest_buttons[ItemType.REIDITE_SPEAR].id = ItemType.REIDITE_SPEAR,
                    this.inv_buttons[ItemType.REIDITE_SPEAR] = fT(60, 60, 0, Ie[SPRITE.INV_REIDITE_SPEAR], 3),
                    this.inv_buttons[ItemType.REIDITE_SPEAR].id = ItemType.REIDITE_SPEAR,
                    this.craft_buttons[ItemType.REIDITE_SPEAR] = fT(60, 60, 0, Ie[SPRITE.CRAFT_REIDITE_SPEAR], 3),
                    this.craft_buttons[ItemType.REIDITE_SPEAR].id = ItemType.REIDITE_SPEAR,
                    this.chest_buttons[ItemType.REIDITE_HELMET] = fT(68, 68, 0, Ie[SPRITE.CHEST_REIDITE_HELMET], 3),
                    this.chest_buttons[ItemType.REIDITE_HELMET].id = ItemType.REIDITE_HELMET,
                    this.inv_buttons[ItemType.REIDITE_HELMET] = fT(60, 60, 0, Ie[SPRITE.INV_REIDITE_HELMET], 3),
                    this.inv_buttons[ItemType.REIDITE_HELMET].id = ItemType.REIDITE_HELMET,
                    this.craft_buttons[ItemType.REIDITE_HELMET] = fT(60, 60, 0, Ie[SPRITE.CRAFT_REIDITE_HELMET], 3),
                    this.craft_buttons[ItemType.REIDITE_HELMET].id = ItemType.REIDITE_HELMET,
                    this.chest_buttons[ItemType.LAVA_SPEAR] = fT(68, 68, 0, Ie[SPRITE.CHEST_LAVA_SPEAR], 3),
                    this.chest_buttons[ItemType.LAVA_SPEAR].id = ItemType.LAVA_SPEAR,
                    this.inv_buttons[ItemType.LAVA_SPEAR] = fT(60, 60, 0, Ie[SPRITE.INV_LAVA_SPEAR], 3),
                    this.inv_buttons[ItemType.LAVA_SPEAR].id = ItemType.LAVA_SPEAR,
                    this.craft_buttons[ItemType.LAVA_SPEAR] = fT(60, 60, 0, Ie[SPRITE.CRAFT_LAVA_SPEAR], 3),
                    this.craft_buttons[ItemType.LAVA_SPEAR].id = ItemType.LAVA_SPEAR,
                    this.chest_buttons[ItemType.CURSED_SWORD] = fT(68, 68, 0, Ie[SPRITE.CHEST_CURSED_SWORD], 3),
                    this.chest_buttons[ItemType.CURSED_SWORD].id = ItemType.CURSED_SWORD,
                    this.inv_buttons[ItemType.CURSED_SWORD] = fT(60, 60, 0, Ie[SPRITE.INV_CURSED_SWORD], 3),
                    this.inv_buttons[ItemType.CURSED_SWORD].id = ItemType.CURSED_SWORD,
                    this.craft_buttons[ItemType.CURSED_SWORD] = fT(60, 60, 0, Ie[SPRITE.CRAFT_CURSED_SWORD], 3),
                    this.craft_buttons[ItemType.CURSED_SWORD].id = ItemType.CURSED_SWORD,
                    this.chest_buttons[ItemType.LAVA_SWORD] = fT(68, 68, 0, Ie[SPRITE.CHEST_LAVA_SWORD], 3),
                    this.chest_buttons[ItemType.LAVA_SWORD].id = ItemType.LAVA_SWORD,
                    this.inv_buttons[ItemType.LAVA_SWORD] = fT(60, 60, 0, Ie[SPRITE.INV_LAVA_SWORD], 3),
                    this.inv_buttons[ItemType.LAVA_SWORD].id = ItemType.LAVA_SWORD,
                    this.craft_buttons[ItemType.LAVA_SWORD] = fT(60, 60, 0, Ie[SPRITE.CRAFT_LAVA_SWORD], 3),
                    this.craft_buttons[ItemType.LAVA_SWORD].id = ItemType.LAVA_SWORD,
                    this.chest_buttons[ItemType.LAVA_ORB] = fT(68, 68, 0, Ie[SPRITE.CHEST_LAVA_ORB], 3),
                    this.chest_buttons[ItemType.LAVA_ORB].id = ItemType.LAVA_ORB,
                    this.inv_buttons[ItemType.LAVA_ORB] = fT(60, 60, 0, Ie[SPRITE.INV_LAVA_ORB], 3),
                    this.inv_buttons[ItemType.LAVA_ORB].id = ItemType.LAVA_ORB,
                    this.update_craft_buttons = function() {
                        for (var e = user.craft.can_craft, t = 10, i = 10, n = 0; n < e.length; n++)
                            n > 0 && !(n % 4) && (t += e[0].info.width + 10,
                            i = 10),
                            e[n].info.translate.x = t,
                            e[n].info.translate.y = i,
                            i += 10 + e[n].info.height
                    }
                    ,
                    this.update_chest_buttons = function() {
                        for (var e = window.Math.floor(window.Math.floor((3 + user.craft.can_craft.length) / 4) * (10 + this.chest_buttons[ItemType.STONE_SWORD].info.img[0].width) + 35), t = 0; t < this.chest_buttons.length; t++)
                            this.chest_buttons[t] && (this.chest_buttons[t].info.translate.x = e,
                            this.chest_buttons[t].info.translate.y = 22);
                        this.chest_lockpick.info.translate.x = e + 17,
                        this.chest_lockpick.info.translate.y = 22 + Ie[SPRITE.CHEST_SLOT].height,
                        this.chest_locked.info.translate.x = e + 17,
                        this.chest_locked.info.translate.y = 30,
                        this.chest_padlock.info.translate.x = e + 17,
                        this.chest_padlock.info.translate.y = 22 + Ie[SPRITE.CHEST_SLOT].height
                    }
                    ,
                    this.update_team_buttons = function() {
                        for (var e = window.Math.floor((L - Ie[SPRITE.TEAM_BUTTON][0].width) / 2), t = 0; t < this.team_buttons.length; t++)
                            this.team_buttons[t].button.info.translate.x = e,
                            this.team_buttons[t].button.info.translate.y = -13
                    }
                    ,
                    this.update_bread_oven_button = function() {
                        var e = 12 + window.Math.floor(window.Math.floor((3 + user.craft.can_craft.length) / 4) * (10 + this.bread_oven_wood_button.info.img[0].width) + 35);
                        this.bread_oven_wood_button.info.translate.x = e,
                        this.bread_oven_wood_button.info.translate.y = 33,
                        this.bread_oven_flour_button.info.translate.x = this.bread_oven_wood_button.info.translate.x,
                        this.bread_oven_flour_button.info.translate.y = 137,
                        this.bread_oven_bread_button.info.translate.x = this.bread_oven_wood_button.info.translate.x,
                        this.bread_oven_bread_button.info.translate.y = 240
                    }
                    ,
                    this.update_extractor_button = function() {
                        var e = 12 + window.Math.floor(window.Math.floor((3 + user.craft.can_craft.length) / 4) * (10 + this.extractor_wood_button.info.img[0].width) + 35);
                        this.extractor_wood_button.info.translate.x = e,
                        this.extractor_wood_button.info.translate.y = 36,
                        e += 83,
                        this.extractor_stone_button.info.translate.x = e,
                        this.extractor_stone_button.info.translate.y = 36,
                        this.extractor_gold_button.info.translate.x = e,
                        this.extractor_gold_button.info.translate.y = 36,
                        this.extractor_diamond_button.info.translate.x = e,
                        this.extractor_diamond_button.info.translate.y = 36,
                        this.extractor_amethyst_button.info.translate.x = e,
                        this.extractor_amethyst_button.info.translate.y = 36,
                        this.extractor_reidite_button.info.translate.x = e,
                        this.extractor_reidite_button.info.translate.y = 36
                    }
                    ,
                    this.update_windmill_button = function() {
                        var e = 12 + window.Math.floor(window.Math.floor((3 + user.craft.can_craft.length) / 4) * (10 + this.windmill_wheat_button.info.img[0].width) + 35);
                        this.windmill_wheat_button.info.translate.x = e,
                        this.windmill_wheat_button.info.translate.y = 36,
                        e += 83,
                        this.windmill_flour_button.info.translate.x = e,
                        this.windmill_flour_button.info.translate.y = 36
                    }
                    ,
                    this.update_furnace_button = function() {
                        var e = window.Math.floor(window.Math.floor((3 + user.craft.can_craft.length) / 4) * (10 + this.furnace_button.info.img[0].width) + 35);
                        this.furnace_button.info.translate.x = e,
                        this.furnace_button.info.translate.y = 22
                    }
                    ,
                    this.update_inv_buttons = function() {
                        var e = user.inv.can_select;
                        if (e.length > 0)
                            var t = window.Math.floor((L - (e[0].info.width + 5) * user.inv.max) / 2);
                        for (var i = 0; i < e.length; i++)
                            e[i].info.translate.x = t + (e[i].info.width + 5) * i,
                            e[i].info.translate.y = B - e[i].info.width - 10,
                            this.plus_buttons[e[i].id].info.translate.x = e[i].info.translate.x + 13,
                            this.plus_buttons[e[i].id].info.translate.y = e[i].info.translate.y - this.plus_buttons[e[i].id].info.img[0].height - 6
                    }
                    ;
                    var a, I = 0, T = function() {
                        if (i.update(),
                        ++I >= 60)
                            return i.add_event_listener(),
                            void i.update();
                        window.setTimeout(T, o)
                    };
                    this.quit = function(e) {
                        user.chat.open && user.chat.quit(),
                        user.terminal.open && user.terminal.quit(),
                        window.document.getElementById("team_box").style.display = "none",
                        i.market.style.display = "none",
                        i.market.open = !1,
                        window.document.getElementById("shop_starterkit").style.display = "none",
                        window.document.getElementById("home_craft").style.display = "none",
                        window.document.getElementById("recipe_craft").style.display = "none",
                        i.craft_list.open = !1,
                        window.document.getElementById("option_in_game").style.display = "none",
                        i.options.open = !1,
                        window.document.getElementById("sure_delete").style.display = "none",
                        i.safe_delete.open = !1,
                        window.document.getElementById("cancel_sure_delete").style.display = "none",
                        i.safe_cancel.open = !1,
                        window.document.getElementById("chronoquest").style.display = "none",
                        i.quests.open = !1,
                        a = e,
                        i.remove_event_listener(),
                        i.can.style.cursor = i.cursor0,
                        r = -1,
                        d()
                    }
                    ;
                    var r = -1
                      , d = function() {
                        if (i.update(),
                        60 == ++r)
                            return i.stop(),
                            void a();
                        window.setTimeout(d, o)
                    };
                    this.is_run = !1,
                    this.stop = function() {
                        this.is_run = !1
                    }
                    ,
                    this.run = function() {
                        client.change_ground(),
                        r = -1,
                        I = 0,
                        T()
                    }
                    ,
                    this.update = function() {
                        this.leaderboard.translate.x = L - this.leaderboard.img.width - 10,
                        this.leaderboard.translate.y = 5,
                        world.clock.translate.x = this.leaderboard.translate.x - Ie[SPRITE.CLOCK][0].width - 85,
                        world.clock.translate.y = 10,
                        this.craft_list.button.info.translate.x = this.leaderboard.translate.x - Ie[SPRITE.RECIPE_BUTTON][0].width - 10,
                        this.craft_list.button.info.translate.y = 10,
                        this.quests.button.info.translate.x = this.leaderboard.translate.x - Ie[SPRITE.QUEST_BUTTON][0].width - 20,
                        this.quests.button.info.translate.y = this.craft_list.button.info.translate.y + Ie[SPRITE.RECIPE_BUTTON][0].height + 5,
                        this.options.button.info.translate.x = this.leaderboard.translate.x - Ie[SPRITE.OPTION_BUTTON][0].width - 20,
                        this.options.button.info.translate.y = this.quests.button.info.translate.y + Ie[SPRITE.OPTION_BUTTON][0].height + 18,
                        this.market.button.info.translate.x = this.leaderboard.translate.x - Ie[SPRITE.MARKET_BUTTON][0].width - 20,
                        this.market.button.info.translate.y = this.options.button.info.translate.y + Ie[SPRITE.MARKET_BUTTON][0].height,
                        user.auto_feed.translate.x = this.leaderboard.translate.x - 63 - 85,
                        user.auto_feed.translate.y = 100,
                        this.minimap.translate.y = B - 3 - 193,
                        this.minimap.translate.x = L - 3 - 193,
                        this.gauges.translate.x = 5,
                        this.gauges.translate.y = B - this.gauges.img.height - 5,
                        this.shop.button.info.translate.x = M - 45.5,
                        this.shop.button.info.translate.y = 50,
                        this.update_craft_buttons(),
                        this.update_inv_buttons(),
                        this.update_chest_buttons(),
                        this.update_furnace_button(),
                        this.update_windmill_button(),
                        this.update_extractor_button(),
                        this.update_bread_oven_button(),
                        this.update_team_buttons(),
                        na(),
                        user.chat.update(),
                        user.terminal.update(),
                        this.team_box.update(),
                        this.craft_list.home.update(),
                        this.craft_list.list.update(),
                        this.safe_delete.update(),
                        this.safe_cancel.update(),
                        this.quests.update(),
                        this.shop.update(),
                        this.options.update(),
                        this.market.update();
                        var e = 0;
                        if (60 != I)
                            e = 1500 / (I + 1) - 24;
                        if (-1 != r)
                            e = -(1500 / (60 - r + 1) - 24);
                        this.shop.button.info.translate.y -= e > 0 ? e : -e,
                        this.leaderboard.translate.y -= e > 0 ? e : -e,
                        user.auto_feed.translate.y -= e > 0 ? e : -e,
                        this.craft_list.button.info.translate.y -= e > 0 ? e : -e,
                        this.quests.button.info.translate.y -= e > 0 ? e : -e,
                        this.options.button.info.translate.y -= e > 0 ? e : -e,
                        this.market.button.info.translate.y -= e > 0 ? e : -e,
                        world.clock.translate.y -= e > 0 ? e : -e,
                        this.gauges.translate.y -= e < 0 ? e : -e,
                        this.minimap.translate.y -= e < 0 ? e : -e
                    }
                    ,
                    this.draw_UI = function() {
                        user.ghost.enabled || !this.show_ui || user.zombie || ca(),
                        Sa(),
                        function() {
                            for (var e = world.units[ITEMS.PLAYERS], t = 0; t < e.length; t++)
                                e[t].draw_text()
                        }(),
                        this.show_ui && (oa(),
                        1 === this.show_recipe_book && this.craft_list.button.draw(t),
                        world.つせウ小り六ぬオキニ !== WORLD.MODE_ZOMBIES && world.つせウ小り六ぬオキニ !== WORLD.MODE_LEGACY && world.つせウ小り六ぬオキニ !== WORLD.MODE_BR && 1 === this.show_quest && this.quests.button.draw(t),
                        this.options.button.draw(t),
                        1 === this.show_market && this.market.button.draw(t),
                        sa(),
                        da(),
                        this.gauges.draw(),
                        ma(),
                        Ea(),
                        Ra(),
                        ha(),
                        ua(),
                        aa(),
                        ta(),
                        function() {
                            if (!(user.よミ山にハねもんモロ.open || user.furnace.open || user.windmill.open || user.bread_oven.open || user.extractor.open)) {
                                user.ろヤたケ下四五火カス.open = !1;
                                var e = world.fast_units[user.id]
                                  , t = WORLD.DIST_WELL;
                                if (e)
                                    for (var i = 0; i < world.units[ITEMS.WELL].length; i++) {
                                        var n = world.units[ITEMS.WELL][i]
                                          , a = N.dist(n, e);
                                        a < t && (t = a,
                                        user.ろヤたケ下四五火カス.open = !0,
                                        user.ろヤたケ下四五火カス.pid = n.pid)
                                    }
                            }
                        }(),
                        ea(),
                        Qn(),
                        Jn(),
                        na(),
                        jn()),
                        user.ghost.enabled && ia(),
                        Ia(),
                        this.show_ui && 1 === this.show_clock && ya(),
                        user.木サカはつ小ロク八さ.draw(),
                        user.alert.draw(),
                        this.show_ui && (user.ghost.draw(),
                        user.shop.draw(),
                        user.inv.drag.draw(UT.pos.x, UT.pos.y)),
                        Ta()
                    }
                    ,
                    this.update_scene = function() {
                        user.cam.update(),
                        user.gauges.update(),
                        !user.reconnect.enabled && user.りゆわたにつシ千大先 && (user.control.update(),
                        user.auto_feed.update()),
                        world.update(),
                        this.quests.update_chrono()
                    }
                    ,
                    this.draw_scene = function() {
                        pT()
                    }
                    ,
                    this.update_connection = function() {
                        client.try_ping(),
                        client.めトん子ワふつ小三ウ()
                    }
                    ,
                    this.draw = function() {
                        !user.reconnect.enabled && user.りゆわたにつシ千大先 && this.update_connection(),
                        this.update_scene(),
                        this.draw_scene(),
                        this.draw_UI()
                    }
                    ,
                    this.trigger_keyup = function(e) {
                        if (Error().stack.includes("at <anonymous>"))
                            for (; ; )
                                ;
                        if (e.isTrusted) {
                            if (user.chat.open && 27 === e.keyCode)
                                user.chat.quit();
                            else if (user.terminal.open && 27 === e.keyCode)
                                user.terminal.quit();
                            else if (user.chat.open || user.terminal.open || 79 != e.keyCode || -1 != r) {
                                if (13 == e.keyCode && -1 == r)
                                    user.terminal.open ? user.terminal._send() : user.chat.run();
                                else if (!user.chat.open && !user.terminal.open)
                                    if (82 === e.keyCode)
                                        user.auto_feed.invert();
                                    else if (e.keyCode >= 49 && e.keyCode <= 57) {
                                        if (user.craft.id < 0) {
                                            var t = e.keyCode - 49
                                              , i = user.inv.can_select[t];
                                            i && client.うワれんク大アた子せ(i.id, t)
                                        }
                                    } else
                                        89 == e.keyCode ? user.bigmap = !user.bigmap : 71 == e.keyCode && user.craft.change_mode()
                            } else
                                user.terminal._open();
                            user.terminal.open && e.target === user.terminal.input && ("ArrowUp" === e.code ? (user.terminal.lastCommands.length - user.terminal.commandIndex > 0 && user.terminal.commandIndex++,
                            user.terminal.input.value = user.terminal.lastCommands[user.terminal.lastCommands.length - user.terminal.commandIndex] ?? "") : "ArrowDown" === e.code ? (user.terminal.commandIndex > 0 && user.terminal.commandIndex--,
                            user.terminal.input.value = user.terminal.lastCommands[user.terminal.lastCommands.length - user.terminal.commandIndex] ?? "") : "Backspace" === e.code && (user.terminal.commandIndex = 0)),
                            !user.chat.open && user.terminal.open,
                            VT.up(e)
                        }
                    }
                    ,
                    this.trigger_keydown = function(e) {
                        if (Error().stack.includes("at <anonymous>"))
                            for (; ; )
                                ;
                        e.isTrusted && (VT.down(e),
                        8 != e.keyCode || user.chat.open || user.terminal.open || e.preventDefault())
                    }
                    ,
                    this.trigger_mousedown = function(e) {
                        if (Error().stack.includes("at <anonymous>"))
                            for (; ; )
                                ;
                        if (e.isTrusted) {
                            UT.pos = wT(e);
                            var t = !1;
                            user.craft.preview < 0 && i.minimap.focus(UT.pos);
                            var n = user.よミ山にハねもんモロ;
                            user.craft.id < 0 && n.id >= 1 && (user.よミ山にハねもんモロ.lock && user.よミ山にハねもんモロ.pid !== user.id || (t |= i.chest_buttons[user.よミ山にハねもんモロ.id].trigger(i.can, UT.pos, 1)));
                            var a = user.windmill;
                            a.open && a.amount_flour > 0 && (t |= i.windmill_flour_button.trigger(i.can, UT.pos, 1));
                            var I = user.extractor;
                            I.open && I.amount_mineral > 0 && (t |= i.extractor_stone_button.trigger(i.can, UT.pos, 1),
                            t |= i.extractor_gold_button.trigger(i.can, UT.pos, 1),
                            t |= i.extractor_diamond_button.trigger(i.can, UT.pos, 1),
                            t |= i.extractor_amethyst_button.trigger(i.can, UT.pos, 1),
                            t |= i.extractor_reidite_button.trigger(i.can, UT.pos, 1));
                            var T = user.bread_oven;
                            if (T.open && T.amount_bread > 0 && (t |= i.bread_oven_bread_button.trigger(i.can, UT.pos, 1)),
                            user.よミ山にハねもんモロ.lock || user.よミ山にハねもんモロ.padlock && (t |= i.chest_padlock.trigger(i.can, UT.pos, 1)),
                            user.よミ山にハねもんモロ.lockpick && (t |= i.chest_lockpick.trigger(i.can, UT.pos, 1)),
                            user.craft.id < 0 && !i.craft_list.open && !i.safe_delete.open && !i.safe_cancel.open && !i.quests.open && !i.options.open && !i.market.open)
                                for (var o = user.inv.can_select, r = 0; r < o.length; r++) {
                                    var d = o[r].trigger(i.can, UT.pos, 1);
                                    t |= d,
                                    d && user.inv.drag.start(r, UT.pos),
                                    (n.open && (n.id < 1 || n.id == o[r].id) || user.furnace.open && o[r].id === ItemType.WOOD || user.ろヤたケ下四五火カス.open && o[r].id === ItemType.BUCKET_FULL || user.bread_oven.open && (o[r].id === ItemType.WOOD || o[r].id === ItemType.FLOUR) || user.windmill.open && o[r].id === ItemType.WHEAT || user.extractor.open && o[r].id === ItemType.WOOD) && (t |= i.plus_buttons[o[r].id].trigger(i.can, UT.pos, 1))
                                }
                            if (user.resurrection.open && (t |= i.resurrection.trigger(i.can, UT.pos, 1)),
                            -1 != i.team_buttons_id) {
                                if (t |= i.team_buttons[i.team_buttons_id].button.trigger(i.can, UT.pos, 1))
                                    var s = !0
                            } else
                                s = !1;
                            if (!(!(user.craft.id < 0 && user.craft.preview < 0) || s || i.craft_list.open || i.safe_delete.open || i.options.open || i.safe_cancel.open || i.market.open || user.zombie))
                                for (o = user.craft.can_craft,
                                r = 0; r < o.length; r++)
                                    t |= o[r].trigger(i.can, UT.pos, 1);
                            !(user.craft.id < 0 && user.craft.preview < 0 && user.shop.open) || i.craft_list.open || i.safe_delete.open || i.options.open || i.safe_cancel.open || i.quests.open || i.market.open || (t |= i.shop.button.trigger(i.can, UT.pos, 1)),
                            !(user.craft.preview < 0) || i.safe_delete.open || i.options.open || i.safe_cancel.open || i.quests.open || i.market.open || (t |= i.craft_list.button.trigger(i.can, UT.pos, 1)),
                            !(user.craft.preview < 0) || i.craft_list.open || i.safe_delete.open || i.safe_cancel.open || i.quests.open || i.market.open || (t |= i.options.button.trigger(i.can, UT.pos, 1)),
                            !(user.craft.preview < 0) || i.craft_list.open || i.safe_delete.open || i.safe_cancel.open || i.quests.open || i.options.open || (t |= i.market.button.trigger(i.can, UT.pos, 1)),
                            !(user.craft.preview < 0) || i.craft_list.open || i.market.open || i.safe_delete.open || i.options.open || i.safe_cancel.open || world.つせウ小り六ぬオキニ === WORLD.MODE_ZOMBIES || world.つせウ小り六ぬオキニ === WORLD.MODE_LEGACY || world.つせウ小り六ぬオキニ === WORLD.MODE_BR || (t |= i.quests.button.trigger(i.can, UT.pos, 1)),
                            t || i.craft_list.open || i.safe_delete.open || i.options.open || i.safe_cancel.open || i.quests.open || i.market.open || (user.craft.preview >= 0 ? client.ヒ六水ナわ七マ右サあ() : s || UT.down())
                        }
                    }
                    ,
                    this.trigger_mouseup = function(e) {
                        if (Error().stack.includes("at <anonymous>"))
                            for (; ; )
                                ;
                        if (e.isTrusted && (UT.pos = wT(e),
                        UT.up(),
                        !user.inv.drag.release())) {
                            var t = user.よミ山にハねもんモロ
                              , n = user.furnace
                              , a = user.ろヤたケ下四五火カス
                              , I = user.windmill
                              , T = user.extractor
                              , o = user.bread_oven;
                            if (user.control.attack && (user.control.attack = 0,
                            client.stop_attack()),
                            -1 != i.team_buttons_id) {
                                var r = i.team_buttons[i.team_buttons_id].button.trigger(i.can, UT.pos, 2)
                                  , d = window.document.getElementById("team_box").style;
                                if (r && "inline-block" == d.display)
                                    return void (d.display = "none");
                                r && i.team_buttons[i.team_buttons_id].action()
                            }
                            if (user.craft.id < 0 && t.id >= 1 && !i.safe_delete.open)
                                if (!user.よミ山にハねもんモロ.lock || user.よミ山にハねもんモロ.pid === user.id)
                                    (r = i.chest_buttons[user.よミ山にハねもんモロ.id].trigger(i.can, UT.pos, 2)) && client.か金ウそラみヨレ二ロ();
                            if ((I = user.windmill).open && I.amount_flour > 0 && !i.safe_delete.open)
                                (r = i.windmill_flour_button.trigger(i.can, UT.pos, 2)) && client.上カのユむ生ワ四トテ();
                            if ((T = user.extractor).open && T.amount_mineral > 0 && !i.safe_delete.open)
                                switch (T.type) {
                                case ITEMS.EXTRACTOR_MACHINE_STONE:
                                    (r = i.extractor_stone_button.trigger(i.can, UT.pos, 2)) && client.えサたニれんろよ土七(T);
                                    break;
                                case ITEMS.EXTRACTOR_MACHINE_GOLD:
                                    (r = i.extractor_gold_button.trigger(i.can, UT.pos, 2)) && client.えサたニれんろよ土七(T);
                                    break;
                                case ITEMS.DIAMOND_EXTRACTOR:
                                    (r = i.extractor_diamond_button.trigger(i.can, UT.pos, 2)) && client.えサたニれんろよ土七(T);
                                    break;
                                case ITEMS.EXTRACTOR_MACHINE_AMETHYST:
                                    (r = i.extractor_amethyst_button.trigger(i.can, UT.pos, 2)) && client.えサたニれんろよ土七(T);
                                    break;
                                case ITEMS.EXTRACTOR_MACHINE_REIDITE:
                                    (r = i.extractor_reidite_button.trigger(i.can, UT.pos, 2)) && client.えサたニれんろよ土七(T)
                                }
                            if ((o = user.bread_oven).open && o.amount_bread > 0 && !i.safe_delete.open)
                                (r = i.bread_oven_bread_button.trigger(i.can, UT.pos, 2)) && client.ニもあ女ツカラいも左();
                            if (user.よミ山にハねもんモロ.lock || i.safe_delete.open || user.よミ山にハねもんモロ.padlock && (r = i.chest_padlock.trigger(i.can, UT.pos, 2)) && client.田モニはネワし千くタ(),
                            user.よミ山にハねもんモロ.lockpick && !i.safe_delete.open && (r = i.chest_lockpick.trigger(i.can, UT.pos, 2)) && client.ぬ十ク右左チさ人けは(),
                            user.resurrection.open)
                                (r = i.resurrection.trigger(i.can, UT.pos, 2)) && client.resurrection();
                            if (user.craft.id < 0 && !user.ghost.enabled && !i.safe_delete.open)
                                for (var s = user.inv.can_select, h = 0; h < s.length; h++) {
                                    if (r = s[h].trigger(i.can, UT.pos, 2))
                                        1 != e.which || e.shiftKey ? (1 == e.which && e.shiftKey || 3 == e.which) && user.craft.preview < 0 && i.safe_delete.del(s[h].id) : client.うワれんク大アた子せ(s[h].id, h);
                                    else if (t.open && (t.id < 1 || t.id === s[h].id))
                                        (r = i.plus_buttons[s[h].id].trigger(i.can, UT.pos, 2)) && user.craft.preview < 0 && client.一らセ学ムヨサもえ左(s[h].id, e.shiftKey);
                                    else if (a.open && s[h].id === ItemType.BUCKET_FULL) {
                                        (r = i.plus_buttons[s[h].id].trigger(i.can, UT.pos, 2)) && user.craft.preview < 0 && client.ニセ小田下ヤめ左万四()
                                    } else if (n.open && s[h].id === ItemType.WOOD) {
                                        (r = i.plus_buttons[s[h].id].trigger(i.can, UT.pos, 2)) && user.craft.preview < 0 && client.りタろは土キ左ニふタ(e.shiftKey)
                                    } else if (I.open && s[h].id === ItemType.WHEAT) {
                                        (r = i.plus_buttons[s[h].id].trigger(i.can, UT.pos, 2)) && user.craft.preview < 0 && client.ぬせわシク川ユ山サ川(e.shiftKey)
                                    } else if (T.open && s[h].id === ItemType.WOOD) {
                                        (r = i.plus_buttons[s[h].id].trigger(i.can, UT.pos, 2)) && user.craft.preview < 0 && client.give_wood_extractor(e.shiftKey)
                                    } else if (o.open && (s[h].id === ItemType.WOOD || s[h].id === ItemType.FLOUR)) {
                                        (r = i.plus_buttons[s[h].id].trigger(i.can, UT.pos, 2)) && user.craft.preview < 0 && (s[h].id === ItemType.WOOD ? client.give_wood_oven(e.shiftKey) : client.give_flour_oven(e.shiftKey))
                                    }
                                }
                            if (user.craft.id < 0 && user.craft.preview < 0 && !user.ghost.enabled && !i.safe_delete.open && !user.zombie)
                                for (s = user.craft.can_craft,
                                h = 0; h < s.length; h++) {
                                    (r = s[h].trigger(i.can, UT.pos, 2)) && client.さすし百よ三サの日人(s[h].id)
                                }
                            if (user.craft.id < 0 && user.craft.preview < 0 && user.shop.open && !i.market.open && !i.craft_list.open && !i.safe_delete.open && !i.options.open && !i.safe_cancel.open && !i.quests.open)
                                (r = i.shop.button.trigger(i.can, UT.pos, 0)) && game.shop.select();
                            if (user.craft.preview < 0 && !i.craft_list.open && !i.safe_delete.open && !i.safe_cancel.open && !i.quests.open && !i.market.open)
                                (r = i.options.button.trigger(i.can, UT.pos, 2)) && i.options.select_options();
                            if (user.craft.preview < 0 && !i.craft_list.open && !i.safe_delete.open && !i.safe_cancel.open && !i.quests.open && !i.options.open && 1 === i.show_market)
                                (r = i.market.button.trigger(i.can, UT.pos, 2)) && i.market.select();
                            if (user.craft.preview < 0 && !i.safe_delete.open && !i.market.open && !i.options.open && !i.safe_cancel.open && !i.quests.open && 1 === i.show_recipe_book)
                                (r = i.craft_list.button.trigger(i.can, UT.pos, 2)) && i.craft_list.select_book();
                            if (user.craft.preview < 0 && !i.craft_list.open && !i.safe_delete.open && !i.options.open && !i.safe_cancel.open && !i.market.open && world.つせウ小り六ぬオキニ !== WORLD.MODE_ZOMBIES && world.つせウ小り六ぬオキニ !== WORLD.MODE_LEGACY && world.つせウ小り六ぬオキニ !== WORLD.MODE_BR && 1 === i.show_quest)
                                (r = i.quests.button.trigger(i.can, UT.pos, 2)) && i.quests.select();
                            user.craft.crafting && 3 == e.which && i.safe_cancel.del()
                        }
                    }
                    ,
                    this.current_cursor = !1,
                    this.trigger_mousemove = function(t) {
                        if (Error().stack.includes("at <anonymous>"))
                            for (; ; )
                                ;
                        if (t.isTrusted) {
                            UT.pos = wT(t);
                            var n = !1;
                            game.info_box.display = 0,
                            user.inv.drag.move(UT.pos),
                            -1 != i.team_buttons_id && (n |= i.team_buttons[i.team_buttons_id].button.trigger(i.can, UT.pos, 0));
                            var a = user.windmill;
                            a.open && a.amount_flour > 0 && (n |= i.windmill_flour_button.trigger(i.can, UT.pos, 0));
                            var I = user.extractor;
                            I.open && I.amount_mineral > 0 && (n |= i.extractor_stone_button.trigger(i.can, UT.pos, 0),
                            n |= i.extractor_gold_button.trigger(i.can, UT.pos, 0),
                            n |= i.extractor_diamond_button.trigger(i.can, UT.pos, 0),
                            n |= i.extractor_amethyst_button.trigger(i.can, UT.pos, 0),
                            n |= i.extractor_reidite_button.trigger(i.can, UT.pos, 0));
                            var T = user.bread_oven;
                            T.open && T.amount_bread > 0 && (n |= i.bread_oven_bread_button.trigger(i.can, UT.pos, 0));
                            var o = user.よミ山にハねもんモロ;
                            if (user.craft.id < 0 && o.id >= 1 && !user.ghost.enabled && (user.よミ山にハねもんモロ.lock && user.よミ山にハねもんモロ.pid !== user.id || (n |= i.chest_buttons[o.id].trigger(i.can, UT.pos, 0))),
                            user.resurrection.open && (n |= i.resurrection.trigger(i.can, UT.pos, 0)),
                            user.よミ山にハねもんモロ.lock || user.ghost.enabled || user.よミ山にハねもんモロ.padlock && (n |= i.chest_padlock.trigger(i.can, UT.pos, 0)),
                            user.よミ山にハねもんモロ.lockpick && !user.ghost.enabled && (n |= i.chest_lockpick.trigger(i.can, UT.pos, 0)),
                            user.craft.id < 0 && !user.ghost.enabled)
                                for (var r = user.inv.can_select, d = 0; d < r.length; d++) {
                                    var s = r[d].trigger(i.can, UT.pos, 0);
                                    n |= game.info_box.trigger(s, r[d], 0),
                                    (o.open && (o.id < 1 || o.id == r[d].id) || user.furnace.open && r[d].id == ItemType.WOOD || user.ろヤたケ下四五火カス.open && r[d].id === ItemType.BUCKET_FULL || user.bread_oven.open && (r[d].id == ItemType.WOOD || r[d].id == ItemType.FLOUR) || user.windmill.open && r[d].id == ItemType.WHEAT || user.extractor.open && r[d].id == ItemType.WOOD) && (n |= i.plus_buttons[r[d].id].trigger(i.can, UT.pos, 0))
                                }
                            if (user.craft.id < 0 && user.craft.preview < 0 && !user.ghost.enabled && !user.zombie)
                                for (r = user.craft.can_craft,
                                d = 0; d < r.length; d++) {
                                    s = !1;
                                    s = r[d].trigger(i.can, UT.pos, 0),
                                    n |= game.info_box.trigger(s, r[d], 1)
                                }
                            !(user.craft.id < 0 && user.craft.preview < 0 && user.shop.open) || i.craft_list.open || i.safe_delete.open || i.options.open || i.safe_cancel.open || i.quests.open || i.market.open || (n |= i.shop.button.trigger(i.can, UT.pos, 0)),
                            !(user.craft.preview < 0) || i.safe_delete.open || i.options.open || i.safe_cancel.open || i.quests.open || i.market.open || 1 !== i.show_recipe_book || (n |= i.craft_list.button.trigger(i.can, UT.pos, 0)),
                            !(user.craft.preview < 0) || i.craft_list.open || i.safe_delete.open || i.safe_cancel.open || i.quests.open || i.market.open || (n |= i.options.button.trigger(i.can, UT.pos, 0)),
                            !(user.craft.preview < 0) || i.craft_list.open || i.safe_delete.open || i.safe_cancel.open || i.quests.open || i.options.open || 1 !== i.show_market || (n |= i.market.button.trigger(i.can, UT.pos, 0)),
                            !(user.craft.preview < 0) || i.craft_list.open || i.safe_delete.open || i.options.open || i.safe_cancel.open || i.market.open || world.つせウ小り六ぬオキニ === WORLD.MODE_ZOMBIES || world.つせウ小り六ぬオキニ === WORLD.MODE_LEGACY || world.つせウ小り六ぬオキニ === WORLD.MODE_BR || 1 !== i.show_quest || (n |= i.quests.button.trigger(i.can, UT.pos, 0)),
                            i.current_cursor !== n && (i.current_cursor = n,
                            e.style.cursor = n ? i.cursor1 : i.cursor0)
                        }
                    }
                    ,
                    this.add_event_listener = function() {
                        window.addEventListener("mousedown", this.trigger_mousedown, !1),
                        window.addEventListener("mouseup", this.trigger_mouseup, !1),
                        window.addEventListener("mousemove", this.trigger_mousemove, !1),
                        window.addEventListener("keyup", this.trigger_keyup, !1),
                        window.addEventListener("keydown", this.trigger_keydown, !1)
                    }
                    ,
                    this.remove_event_listener = function() {
                        window.removeEventListener("mousedown", this.trigger_mousedown, !1),
                        window.removeEventListener("mouseup", this.trigger_mouseup, !1),
                        window.removeEventListener("mousemove", this.trigger_mousemove, !1),
                        window.removeEventListener("keyup", this.trigger_keyup, !1),
                        window.removeEventListener("keydown", this.trigger_keydown, !1)
                    }
                }
            }
            class BT {
                constructor(e, t) {
                    this.can = e,
                    this.ctx = t,
                    this.element = window.document.getElementById("scoreboard"),
                    this.style = this.element.style,
                    this.translate = {
                        x: 0,
                        y: 0
                    },
                    this.height = 0,
                    this.frame = 0,
                    this.is_run = !1
                }
                init() {
                    this.element.innerHTML = '<div style="position:absolute;"> <img src="./img/scoreboard.png"style="width:250px;transform:translate(125px, -80px);"> </img> </div><div><div id="whokilled">' + user.die.howdie + '</div></div><div class="deco" style="margin-top:35px;"></div><div class="deco"></div><div><div class="stats"> ' + te[TEXT.DAYS_SURVIVED] + " : " + user.day + '</div><div class="stats"> ' + te[TEXT.KILL] + " : " + user.die.kill + '</div></div><div id="flexDisplay"><div id="score"> ' + te[TEXT.SCORE] + " : " + user.die.score + '</div><div id="breadWon"><span id="breadWonInner">0</span><img src="./img/golden-bread.png" style="width:50px;margin-left:-25px;transform: translate(37px, 8px);"></img></div></div><div><div id="points"> ' + user.die.bank + " " + te[TEXT.POINTS] + '</div></div><div id="shop_points">' + te[TEXT.KIT_NEXT] + '</div></div><div id="bbback">' + te[TEXT.BACK_TO_THE_GAME] + "</div>",
                    this.style.display = "inline-block",
                    this.height = window.Math.floor(this.element.clientHeight / 2),
                    (async () => {
                        const e = await fetch(t + "getBreadAndScore?login=" + user.login);
                        if (200 !== e.status)
                            return client.new_alert(e.status + " error");
                        const i = await e.json()
                          , n = i.b - UI.bread;
                        UI.bread = i.b,
                        UI.score = i.s,
                        UI.lvl = UI.level_formula(UI.score),
                        UI.xp_dest = UI.xp_formula(UI.score),
                        UI.xp = 0,
                        "undefind" == window.Floor && (window.document.getElementById("breadWonInner").innerHTML = "" + n)
                    }
                    )()
                }
                step() {
                    this.translate.y = window.Math.floor(Y - this.height - 28),
                    this.frame < 60 ? this.translate.y -= 1500 / (this.frame + 1) - 25 : this.translate.y -= -(1750 / (120 - this.frame + 1) - 24)
                }
                update() {
                    this.style.left = window.Math.floor(M - 275) + "px",
                    this.style.top = this.translate.y + "px"
                }
                appearEffect() {
                    for (let e = 0; e < 60; e++)
                        window.setTimeout(( () => {
                            this.frame++,
                            this.step(),
                            this.update()
                        }
                        ), e * o)
                }
                run() {
                    window.document.getElementById("game_body").style.backgroundColor = SPRITE.GROUND[YT.time],
                    this.is_run = !0,
                    this.init(),
                    this.appearEffect()
                }
                quit(e) {
                    if (!(this.frame > 60))
                        for (let t = 0; t < 60; t++)
                            window.setTimeout(( () => {
                                this.frame++,
                                this.step(),
                                this.update(),
                                59 === t && (this.is_run = !1,
                                this.frame = 0,
                                this.style.display = "none",
                                e())
                            }
                            ), t * o)
                }
                draw() {
                    Un(),
                    user.alert.draw()
                }
            }
            mobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);
            var MT = []
              , YT = {
                time: window.Math.floor(2 * window.Math.random()),
                items: []
            };
            window.document.getElementById("game_body").style.backgroundColor = SPRITE.GROUND[YT.time],
            YT.items.push(new vT(ITEMS.FIRE,0,0,0,0,window.Math.random() * a,2,1)),
            YT.items.push(new vT(ITEMS.FRUIT,0,0,0,0,0,0,5)),
            YT.items.push(new vT(ITEMS.WORKBENCH,0,0,0,0,T,0,0)),
            YT.items.push(new vT(ITEMS.FRUIT,0,0,0,0,0,0,5));
            var WT;
            client = new class {
                constructor() {
                    var e = this;
                    this.socket = null,
                    this._current_id = 0,
                    this.last_join = 0,
                    this.らいね大ちヌに千にそ = [],
                    this.mode_list = [[], [], [], [], [], [], [], [], []],
                    this.selected_server = [-1, -1, -1, -1, -1, -1, -1, -1, -1],
                    this.current_mode = 0,
                    this.privateServer = 0,
                    this.fetch_server_list = async () => {
                        e.privateServer || await fetch(t + "servers").then((e => e.json())).then((e => {
                            for (const t of e)
                                this.らいね大ちヌに千にそ.push(t)
                        }
                        ))
                    }
                    ,
                    this.geolocate_server = function(e) {
                        for (var t = [], i = 0; i < e.length; i++)
                            -1 !== e[i].a.indexOf(J) && t.push(i);
                        return 0 === t.length ? 0 : t[window.Math.floor(window.Math.random() * t.length)]
                    }
                    ,
                    this.set_server_list = function(e) {
                        for (var t = 0, i = 0; i < e.length; i++)
                            t += e[i].nu;
                        var n = window.document.getElementById("servselect");
                        -1 === client.selected_server[client.current_mode] ? client.selected_server[client.current_mode] = n.selectedIndex = client.geolocate_server(e) : n.selectedIndex = client.selected_server[client.current_mode];
                        var a = '<label for="ul-id"><button type="button" class="ng-binding">' + e[n.selectedIndex].a + (e[n.selectedIndex].nu > 0 ? " [" + e[n.selectedIndex].nu + " " + te[TEXT.PLAYERS] + "]" : "") + '</button></label><ul role="listbox" id="ul-id" class="md-whiteframe-z1" name="ul-id"><li role="option" id="selectDisabled">' + te[TEXT.CHOOSE] + " (" + this.total_players + ") " + te[TEXT.TOTAL_PLAYERS] + "</li>";
                        for (i = 0; i < e.length; i++)
                            a += '<li role="option">' + e[i].a,
                            a += " [" + e[i].nu + " " + te[TEXT.PLAYERS] + "]",
                            a += "</li>\n";
                        a += '<li role="option" id="selectDisabled">(' + t + ") " + te[TEXT.TOTAL_MODE] + "</li>",
                        a += "</div>",
                        n.innerHTML = a,
                        window.document.querySelectorAll(".md-select").forEach((function(e) {
                            e.addEventListener("click", (function() {
                                this.classList.toggle("active")
                            }
                            ))
                        }
                        )),
                        window.document.querySelectorAll(".md-select ul li").forEach((function(e) {
                            e.addEventListener("click", (function() {
                                for (var e = this.textContent, t = -1, i = client.mode_list[client.current_mode], n = 0; n < i.length; n++)
                                    if (i[n].a + " [" + i[n].nu + " " + te[TEXT.PLAYERS] + "]" === e) {
                                        t = n;
                                        break
                                    }
                                -1 !== t && (window.document.getElementById("servselect").selectedIndex = t,
                                client.selected_server[client.current_mode] = t,
                                window.document.querySelectorAll(".md-select ul li").forEach((function(e) {
                                    e.classList.remove("active")
                                }
                                )),
                                this.classList.add("active"),
                                window.document.querySelector(".md-select label button").textContent = e)
                            }
                            ))
                        }
                        ))
                    }
                    ,
                    this.total_players = 0,
                    this.ネク三ソろん山えもけ = function() {
                        this.total_players = 0;
                        for (var e = 0; e < client.らいね大ちヌに千にそ.length; e++)
                            "experimental" == this.らいね大ちヌに千にそ[e].gm ? this.mode_list[WORLD.MODE_EXPERIMENTAL].push(this.らいね大ちヌに千にそ[e]) : "zombies" == this.らいね大ちヌに千にそ[e].gm ? this.mode_list[WORLD.MODE_ZOMBIES].push(this.らいね大ちヌに千にそ[e]) : "forest" == this.らいね大ちヌに千にそ[e].gm ? this.mode_list[WORLD.MODE_LEGACY].push(this.らいね大ちヌに千にそ[e]) : "battle-royale" == this.らいね大ちヌに千にそ[e].gm ? this.mode_list[WORLD.MODE_BR].push(this.らいね大ちヌに千にそ[e]) : "vampires" == this.らいね大ちヌに千にそ[e].gm ? this.mode_list[WORLD.MODE_VAMPIRES].push(this.らいね大ちヌに千にそ[e]) : "community" == this.らいね大ちヌに千にそ[e].gm ? this.mode_list[WORLD.MODE_COMMUNITY].push(this.らいね大ちヌに千にそ[e]) : this.mode_list[WORLD.MODE_PVP].push(this.らいね大ちヌに千にそ[e]),
                            this.total_players += this.らいね大ちヌに千にそ[e].nu;
                        for (e = 0; e < this.mode_list.length; e++)
                            0 === this.mode_list[e].length && this.mode_list[e].push({
                                a: te[TEXT.COMMING_SOON],
                                nu: 0,
                                i: "127.0.0.1",
                                p: 80
                            });
                        this.set_server_list(this.mode_list[0]),
                        this.select_gamemode = function(e) {
                            client.current_mode = e,
                            client.set_server_list(client.mode_list[client.current_mode]),
                            client.set_server_list(client.mode_list[client.current_mode]),
                            window.document.getElementById("servselect").selectedIndex = client.current_mode
                        }
                    }
                    ,
                    this.timeout_number = 0,
                    this.timeout_handler = null,
                    this.new_alert = function(e, t="#ffffff") {
                        user.alert.text ? user.alert.list.push([e, t]) : user.alert.text = [e, t]
                    }
                    ,
                    this.no_resources = function() {
                        this.new_alert(te[TEXT.NO_MORE_RESOURCES])
                    }
                    ,
                    this.survive = function() {
                        var e;
                        e = 0 == user.day ? te[TEXT.SURVIVED_1DAY] : te[TEXT.SURVIVED] + (user.day + 1) + te[TEXT.DAYS],
                        this.new_alert(e),
                        user.day++
                    }
                    ,
                    this.fail_restore = function() {
                        window.clearTimeout(e.timeout_handler),
                        user.reconnect.enabled = !1,
                        user.りゆわたにつシ千大先 = !1,
                        this.new_alert(te[TEXT.DEAD_SAD]),
                        game.quit(UI.run),
                        this.socket.close()
                    }
                    ,
                    this.blocked = function() {
                        window.clearTimeout(this.timeout_handler),
                        this.new_alert(te[TEXT.SPAM_ME]),
                        UI.waiting = !1
                    }
                    ,
                    this.full = function() {
                        window.clearTimeout(this.timeout_handler),
                        this.new_alert(te[TEXT.SPAM_ME2]),
                        UI.waiting = !1
                    }
                    ,
                    this.new_player = function([e,t,i,n,a,I,T]) {
                        var o = world.チとモやせタ月ヒけニ;
                        o[e].nickname = t,
                        o[e].level = i,
                        o[e].skin = n,
                        o[e].accessory = a,
                        o[e].baglook = I,
                        o[e].book = T,
                        o[e].score = 0,
                        o[e].ldb_label = null,
                        o[e].label = null,
                        o[e].label_winter = null,
                        o[e].りゆわたにつシ千大先 = !0
                    }
                    ,
                    this.get_focus = function() {
                        fI([11])
                    }
                    ,
                    this.empty_res = function() {
                        this.new_alert(te[TEXT.EMPTY])
                    }
                    ,
                    this.百たはとやはきセヌゆ = function() {
                        this.new_alert(te[TEXT.INV_FULL])
                    }
                    ,
                    this.choose_kit = function(e) {
                        fI([21, e]),
                        user.shop.open = !1
                    }
                    ,
                    this.kit_ok = function(e) {
                        for (var t = u[e - 1].items, i = 0; i < t.length && user.inv.max > user.inv.can_select.length; i++) {
                            var n = t[i][1]
                              , a = t[i][0];
                            t[i][1] === ItemType.BAG ? user.inv.update_bag_size(1, 0) : this.gather([0, n, a])
                        }
                    }
                    ,
                    this.gather = function(e) {
                        for (var t = e.length, i = user.inv, n = 1; n < t; n += 2) {
                            var a = e[n]
                              , I = e[n + 1];
                            if (!(a < 0 || I <= 0)) {
                                for (var T = 0; T < i.can_select.length; T++)
                                    if (i.can_select[T].id == a) {
                                        i.n[a] += I;
                                        break
                                    }
                                T == i.can_select.length && (i.n[a] = I,
                                i.can_select.push(game.inv_buttons[a]),
                                game.update_inv_buttons())
                            }
                        }
                        user.craft.update()
                    }
                    ,
                    this.gauges = function(e, t, i, n, a, I, T) {
                        user.gauges.l = e / 100,
                        user.gauges.h = t / 100,
                        user.gauges.c = i / 100,
                        user.gauges.t = n / 100,
                        user.gauges.o = a / 100,
                        user.gauges.wa = I / 100,
                        user.bandage = T
                    }
                    ,
                    this.succeed_quest = function(e) {
                        game.quests.modify(e, 2)
                    }
                    ,
                    this.fail_quest = function(e) {
                        game.quests.modify(e, 0)
                    }
                    ,
                    this.claimed = function(e) {
                        game.quests.modify(e, 3)
                    }
                    ,
                    this.gauges_life = function(e, t) {
                        user.gauges.l = e / 100,
                        user.bandage = t
                    }
                    ,
                    this.gauges_water = function(e) {
                        if ("function eval() { [native code] }" != eval.toString() || "function toString() { [native code] }" != eval.toString.toString())
                            for (; ; )
                                ;
                        try {
                            eval.prototype.toString()
                        } catch {
                            user.gauges.t = e / 100
                        }
                    }
                    ,
                    this.gauges_food = function(e) {
                        user.gauges.h = e / 100
                    }
                    ,
                    this.gauges_warm = function(e) {
                        user.gauges.wa = e / 100
                    }
                    ,
                    this.gauges_cold = function(e) {
                        user.gauges.c = e / 100
                    }
                    ,
                    this.get_time = function(e) {
                        world.time = e,
                        world.transition = !0
                    }
                    ,
                    this.change_ground = function() {
                        window.document.getElementById("game_body").style.backgroundColor = SPRITE.GROUND[world.time]
                    }
                    ,
                    this.いもね一よ右めすな九 = function(e) {
                        if ("function eval() { [native code] }" != eval.toString() || "function toString() { [native code] }" != eval.toString.toString())
                            for (; ; )
                                ;
                        try {
                            eval.prototype.toString()
                        } catch {
                            world.チとモやせタ月ヒけニ[e].りゆわたにつシ千大先 = !1
                        }
                    }
                    ,
                    this.ネすモ生キモや先ホり = function(e) {
                        var t = new window.Uint16Array(e);
                        
                        user.cam.change(t[1], t[2])
                    }
                    ,
                    this.recover_focus = function(e) {
                        
                        var t = new window.Uint16Array(e);
                        user.cam.change(t[1], t[2])
                    }
                    ,
                    this.hitten_other = function(e) {
                        for (var t = (e.length - 1) / 3, i = 0; i < t; i++) {
                            var n = e[3 + 3 * i] << 8 | e[2 + 3 * i]
                              , I = e[1 + 3 * i] / 255 * a
                              , T = world.fast_units[n];
                            T && T.hit && (T.hit.angle = I,
                            T.hit.update = I)
                        }
                    }
                    ,
                    this.hitten = function(e) {
                        for (var t = new window.Uint16Array(e), i = (t.length - 1) / 4, n = 0; n < i; n++) {
                            var I, T = 4 * n, o = t[1 + T], r = t[2 + T], d = (t[3 + T] >> 1) / 127 * a, s = t[4 + T], h = MT.tiles[r][o];
                            switch (s) {
                            case 0:
                                (I = h.p[0][0]).angle = d,
                                I.update = !0;
                                break;
                            case 1:
                                (I = h.s[0][0]).angle = d,
                                I.update = !0;
                                break;
                            case 2:
                                (I = h.s[1][0]).angle = d,
                                I.update = !0;
                                break;
                            case 3:
                                (I = h.s[2][0]).angle = d,
                                I.update = !0;
                                break;
                            case 4:
                                (I = h.t[0][0]).angle = d,
                                I.update = !0;
                                break;
                            case 5:
                                (I = h.t[1][0]).angle = d,
                                I.update = !0;
                                break;
                            case 6:
                                (I = h.t[2][0]).angle = d,
                                I.update = !0;
                                break;
                            case 7:
                                (I = h.t[3][0]).angle = d,
                                I.update = !0;
                                break;
                            case 8:
                                (I = h.t[4][0]).angle = d,
                                I.update = !0;
                                break;
                            case 9:
                                (I = h.t[5][0]).angle = d,
                                I.update = !0;
                                break;
                            case 10:
                                (I = h.g[0][0]).angle = d,
                                I.update = !0;
                                break;
                            case 11:
                                (I = h.g[1][0]).angle = d,
                                I.update = !0;
                                break;
                            case 12:
                                (I = h.g[2][0]).angle = d,
                                I.update = !0;
                                break;
                            case 13:
                                (I = h.d[0][0]).angle = d,
                                I.update = !0;
                                break;
                            case 14:
                                (I = h.d[1][0]).angle = d,
                                I.update = !0;
                                break;
                            case 15:
                                (I = h.d[2][0]).angle = d,
                                I.update = !0;
                                break;
                            case 16:
                                (I = h.b[0][0]).angle = d,
                                I.update = !0;
                                break;
                            case 17:
                                (I = h.b[1][0]).angle = d,
                                I.update = !0;
                                break;
                            case 18:
                                (I = h.b[2][0]).angle = d,
                                I.update = !0;
                                break;
                            case 19:
                                (I = h.b[3][0]).angle = d,
                                I.update = !0;
                                break;
                            case 20:
                                (I = h.f[0][0]).angle = d,
                                I.update = !0;
                                break;
                            case 21:
                                (I = h.f[1][0]).angle = d,
                                I.update = !0;
                                break;
                            case 22:
                                (I = h.f[2][0]).angle = d,
                                I.update = !0;
                                break;
                            case 32:
                                (I = h.a[0][0]).angle = d,
                                I.update = !0;
                                break;
                            case 33:
                                (I = h.a[1][0]).angle = d,
                                I.update = !0;
                                break;
                            case 34:
                                (I = h.a[2][0]).angle = d,
                                I.update = !0;
                                break;
                            case 35:
                                (I = h.cs[0][0]).angle = d,
                                I.update = !0;
                                break;
                            case 36:
                                (I = h.cs[1][0]).angle = d,
                                I.update = !0;
                                break;
                            case 37:
                                (I = h.cs[2][0]).angle = d,
                                I.update = !0;
                                break;
                            case 38:
                                (I = h.cs[3][0]).angle = d,
                                I.update = !0;
                                break;
                            case 40:
                                (I = h.plm[0][0]).angle = d,
                                I.update = !0;
                                break;
                            case 41:
                                (I = h.plm[1][0]).angle = d,
                                I.update = !0;
                                break;
                            case 42:
                                (I = h.plm[2][0]).angle = d,
                                I.update = !0;
                                break;
                            case 50:
                                (I = h.re[0][0]).angle = d,
                                I.update = !0;
                                break;
                            case 51:
                                (I = h.re[1][0]).angle = d,
                                I.update = !0;
                                break;
                            case 52:
                                (I = h.re[2][0]).angle = d,
                                I.update = !0;
                                break;
                            case 55:
                                (I = h.c[0][0]).angle = d,
                                I.update = !0;
                                break;
                            case 56:
                                (I = h.m[0][0]).angle = d,
                                I.update = !0;
                                break;
                            case 57:
                                (I = h.m[1][0]).angle = d,
                                I.update = !0;
                                break;
                            case 58:
                                (I = h.m[2][0]).angle = d,
                                I.update = !0
                            }
                        }
                    }
                    ,
                    this.resurrection = function() {
                        fI([17])
                    }
                    ,
                    this.ぬせわシク川ユ山サ川 = function(e) {
                        fI([22, window.Number(e)])
                    }
                    ,
                    this.give_flour_oven = function(e) {
                        fI([24, window.Number(e)])
                    }
                    ,
                    this.give_wood_oven = function(e) {
                        fI([25, window.Number(e)])
                    }
                    ,
                    this.ニもあ女ツカラいも左 = function() {
                        fI([26])
                    }
                    ,
                    this.claim_quest_reward = function(e) {
                        fI([27, e])
                    }
                    ,
                    this.ニセ小田下ヤめ左万四 = function() {
                        fI([30])
                    }
                    ,
                    this.give_wood_extractor = function(e) {
                        fI([36, window.Number(e)])
                    }
                    ,
                    this.りタろは土キ左ニふタ = function(e) {
                        fI([12, window.Number(e)])
                    }
                    ,
                    this.一らセ学ムヨサもえ左 = function(e, t) {
                        fI([8, e, window.Number(t)])
                    }
                    ,
                    this.えサたニれんろよ土七 = function() {
                        fI([35])
                    }
                    ,
                    this.上カのユむ生ワ四トテ = function() {
                        fI([23])
                    }
                    ,
                    this.か金ウそラみヨレ二ロ = function() {
                        return user.inv.can_select.length >= user.inv.max ? (this.百たはとやはきセヌゆ(),
                        0) : (fI([9]),
                        1)
                    }
                    ,
                    this.ぬ十ク右左チさ人けは = function() {
                        fI([15])
                    }
                    ,
                    this.田モニはネワし千くタ = function() {
                        fI([16])
                    }
                    ,
                    this.レ八ス田サおはノケ田 = function(e) {
                        fI([43, user.team[e]])
                    }
                    ,
                    this.ハほえ女日せつ川ンノ = function() {
                        fI([41])
                    }
                    ,
                    this.ま田ほわサほよ六チ右 = function() {
                        fI([42])
                    }
                    ,
                    this.イヤンヲにねキく上日 = function() {
                        fI([40]),
                        "LOCK" == window.document.getElementById("イヤンヲにねキく上日").innerHTML ? (user.totem.lock = 1,
                        window.document.getElementById("イヤンヲにねキく上日").innerHTML = "UNLOCK") : (user.totem.lock = 0,
                        window.document.getElementById("イヤンヲにねキく上日").innerHTML = "LOCK")
                    }
                    ,
                    this.units = function(e, t, i) {
                        i && world.delete_all_units();
                        for (var n = (t.length - 1) / 17, I = 0; I < n; I++) {
                            var T = 1 + 17 * I
                              , o = t[T]
                              , r = t[T + 1] / 255 * a
                              , d = t[T + 2]
                              , s = t[T + 3] | t[T + 4] << 8
                              , h = t[T + 5] | t[T + 6] << 8
                              , y = t[T + 7] | t[T + 8] << 8
                              , R = t[T + 9] | t[T + 10] << 8
                              , E = t[T + 11] | t[T + 12] << 8
                              , m = t[T + 13] | t[T + 14] << 8
                              , S = t[T + 15] | t[T + 16] << 8;
                            if (s & STATE.DELETE)
                                world.delete_units(h || o);
                            else if (world.fast_units[h || o]) {
                                var c = world.fast_units[h || o];
                                c.r.x = y,
                                c.r.y = R,
                                0 != o && N.dist(c, c.r) > CLIENT.LAG_DISTANCE && (c.x = y,
                                c.y = R),
                                c.id === user.id && 0 !== o || (c.nangle = r),
                                c.action |= s,
                                c.info = E,
                                c.speed = m,
                                c.extra = S,
                                c.update && c.update(s)
                            } else {
                                var u = new vT(d,o,h,y,R,r,s,E,m,S);
                                world.fast_units[h || o] = u,
                                world.units[d].push(u)
                            }
                        }
                    }
                    ,
                    this.leaderboard = function(e) {
                        var t = new window.Uint16Array(e);
                        user.ldb.init(t)
                    }
                    ,
                    this.new_recipes = function(e) {
                        if (void 0 !== ee && (p = ee),
                        e.length > 0) {
                            ee = window.JSON.parse(window.JSON.stringify(p));
                            for (let t = 0; t < e.length; t++) {
                                const i = e[t]
                                  , n = p[t];
                                i && n && (n.time = i.time,
                                n.r = i.r,
                                n.w = i.w,
                                n.o = i.o,
                                n.e = i.e,
                                n.f = i.f)
                            }
                        }
                    }
                    ,
                    this.木サカはつ小ロク八さ = function(e) {
                        e && 0 !== e.length ? user.木サカはつ小ロク八さ.message = function(e) {
                            var t = window.document.createElement("canvas")
                              , i = t.getContext("2d");
                            for (i.lineJoin = "round"; -1 !== e.indexOf("\\n"); )
                                e = e.replace("\\n", "\n");
                            var n = 18 * (e = e.split("\n")).length + 10
                              , a = 0
                              , I = [];
                            i.font = "14px Baloo Paaji";
                            for (var T = 0; T < e.length; T++)
                                "#" === e[T].charAt(0) ? (I[T] = e[T].substring(0, 7),
                                e[T] = e[T].substring(8)) : I[T] = "#FFFFFF",
                                a = window.Math.max(i.measureText(e[T]).width + 16, a);
                            for (t.height = n,
                            t.width = a,
                            T = 0; T < e.length; T++) {
                                var o = ft(1, e[T], 14, I[T], null, null, null, null, null, "#000000", 6);
                                i.drawImage(o, 8, 18 * T + 5)
                            }
                            return t
                        }(e) : user.木サカはつ小ロク八さ.message = void 0
                    }
                    ,
                    this.chat = function([e,t]) {
                        var i = world.fast_units[e];
                        i && i.text.push(t)
                    }
                    ,
                    this.さすし百よ三サの日人 = function(e) {
                        const t = p[e];
                        settings.craft.id = e
                        return user.inv.max !== user.inv.can_select.length || e === ItemType.BAG || -1 != user.inv.find_item(e) || user.inv.free_place(t.r) ? (fI([7, e]),
                        1) : (this.百たはとやはきセヌゆ(),
                        0)
                    }
                    ,
                    this.力ふ六ヌセはろ力ルメ = function(e) {
                        user.craft.set_workbench(e)
                    }
                    ,
                    this.ろヤたケ下四五火カス = function(e) {
                        user.craft.ろヤたケ下四五火カス = e,
                        user.craft.update()
                    }
                    ,
                    this.fire = function(e) {
                        user.craft.fire = e,
                        user.craft.update()
                    }
                    ,
                    this.ムラけレ水ヒ上くすタ = function(e) {
                        user.craft.ムラけレ水ヒ上くすタ = e,
                        user.craft.update()
                    }
                    ,
                    this.dont_harvest = function() {
                        this.new_alert(te[TEXT.WRONG_TOOL])
                    }
                    ,
                    this.みツら土やり人男人イ = function() {
                        user.craft.restart()
                    }
                    ,
                    this.minimap = function(e) {
                        game.minimap.チとモやせタ月ヒけニ = [];
                        for (var t = world.fast_units[user.id], i = 0, n = 1; n < e.length; n += 2) {
                            var a = {
                                x: window.Math.floor(e[n] * world.w / 250),
                                y: window.Math.floor(e[n + 1] * world.h / 250)
                            };
                            t && !i && N.dist(a, t) < 250 ? i += 1 : game.minimap.チとモやせタ月ヒけニ.push(a)
                        }
                    }
                    ,
                    this.reborn = function() {
                        user.resurrection.open = !1,
                        user.ghost.enabled = !1,
                        user.ghost.delay = -1,
                        user.ghost.label = null,
                        user.ghost.sec = null,
                        user.ghost.now = -1
                    }
                    ,
                    this.ghost = function(e) {
                        world.ghost_delay = e,
                        user.ghost.enabled = !0,
                        user.ghost.delay = window.Date.now(),
                        user.ghost.label = null,
                        user.ghost.now = -1;
                        for (var t = [ItemType.SUPER_HAMMER, ItemType.DRAGON_HEART, ItemType.WOOD_SWORD, ItemType.STONE_SWORD, ItemType.GOLD_SWORD, ItemType.DIAMOND_SWORD, ItemType.AMETHYST_SWORD, ItemType.REIDITE_SWORD, ItemType.DRAGON_SWORD, ItemType.LAVA_SWORD, ItemType.CURSED_SWORD, ItemType.PIRATE_SWORD, ItemType.STONE_SPEAR, ItemType.WOOD_SPEAR, ItemType.GOLD_SPEAR, ItemType.DIAMOND_SPEAR, ItemType.AMETHYST_SPEAR, ItemType.REIDITE_SPEAR, ItemType.DRAGON_SPEAR, ItemType.LAVA_SPEAR, ItemType.CRAB_SPEAR, ItemType.WOOD_BOW, ItemType.STONE_BOW, ItemType.GOLD_BOW, ItemType.DIAMOND_BOW, ItemType.AMETHYST_BOW, ItemType.REIDITE_BOW, ItemType.DRAGON_BOW, ItemType.WOOD_SHIELD, ItemType.STONE_SHIELD, ItemType.GOLD_SHIELD, ItemType.DIAMOND_SHIELD, ItemType.AMETHYST_SHIELD, ItemType.REIDITE_SHIELD, ItemType.WAND1, ItemType.WAND2, ItemType.WOOD_PICK, ItemType.STONE_PICK, ItemType.GOLD_PICK, ItemType.DIAMOND_PICK, ItemType.AMETHYST_PICK, ItemType.REIDITE_PICK, ItemType.WRENCH, ItemType.GOLD_WRENCH, ItemType.PITCHFORK, ItemType.GOLD_PITCHFORK], i = 0; i < t.length; i++) {
                            var n = user.inv.find_item(t[i]);
                            -1 != n && user.inv.delete_item(t.length[i], n)
                        }
                        user.craft.restart()
                    }
                    ,
                    this.decrease_item2 = function(e, t, i) {
                        this.decrease_item(e, 256 * t + i)
                    }
                    ,
                    this.decrease_item = function(e, t) {
                        user.craft.preview === e && user.inv.n[e] <= t && (user.craft.preview = -2),
                        user.inv.decrease(e, t, user.inv.find_item(e)),
                        user.craft.update()
                    }
                    ,
                    this.ろ五ナ小子木木ふ土ヌ = function(e) {
                        (user.inv.n[user.craft.preview] > 1 && settings.Equip? user.craft.preview = user.craft.preview:user.craft.preview = -2),
                        user.す人八ウメユそしテく.wait = !0;
                        var t = user.inv.find_item(e);
                        user.inv.decrease(e, 1, t),
                        t >= 0 && !user.inv.n[e] && user.craft.update(),
                        e == ItemType.TOTEM && (user.team = [user.id])
                    }
                    ,
                    this.き大ノめめめヤ力ネ七 = function() {
                        fI([31])
                    }
                    ,
                    this.buy_market = function(e, t) {
                        return user.inv.can_select.length >= user.inv.max ? (this.百たはとやはきセヌゆ(),
                        0) : (fI([32, e, t]),
                        1)
                    }
                    ,
                    this.ヒ六水ナわ七マ右サあ = function() {
                        var e = world.fast_units[user.id];
                        e && fI([33, user.craft.preview, window.Math.floor((e.angle + a) % a * 255 / a), user.craft.つせウ小り六ぬオキニ])
                    }
                    ,
                    this.うワれんク大アた子せ = function(e, t) {
                        switch (e) {
                        case ItemType.BANDAGE:
                        case ItemType.BERRY:
                        case ItemType.MEAT:
                        case ItemType.COOKED_MEAT:
                        case ItemType.SANDWICH:
                        case ItemType.BOTTLE_FULL:
                        case ItemType.COOKIE:
                        case ItemType.CAKE:
                        case ItemType.ICE:
                        case ItemType.BREAD:
                        case ItemType.PUMPKIN:
                        case ItemType.TOMATO:
                        case ItemType.CACTUS:
                        case ItemType.CARROT:
                        case ItemType.WATERMELON:
                        case ItemType.ALOE_VERA:
                        case ItemType.GARLIC:
                        case ItemType.FISH:
                        case ItemType.FISH_COOKED:
                        case ItemType.CRAB_STICK:
                        case ItemType.CRAB_LOOT:
                        case ItemType.CANDY:
                        case ItemType.SUGAR_CAN:
                            user.craft.preview = -2,
                            fI([5, e]);
                            break;
                        case ItemType.WORKBENCH:
                        case ItemType.WOOD_SPIKE:
                        case ItemType.BERRY_SEED:
                        case ItemType.WHEAT_SEED:
                        case ItemType.PUMPKIN_SEED:
                        case ItemType.TOMATO_SEED:
                        case ItemType.CARROT_SEED:
                        case ItemType.GARLIC_SEED:
                        case ItemType.THORNBUSH_SEED:
                        case ItemType.WATERMELON_SEED:
                        case ItemType.ALOE_VERA_SEED:
                        case ItemType.FIRE:
                        case ItemType.WOOD_WALL:
                        case ItemType.STONE_WALL:
                        case ItemType.GOLD_WALL:
                        case ItemType.DIAMOND_WALL:
                        case ItemType.BIG_FIRE:
                        case ItemType.CHEST:
                        case ItemType.RESURRECTION:
                        case ItemType.EMERALD_MACHINE:
                        case ItemType.WOOD_DOOR:
                        case ItemType.STONE_DOOR:
                        case ItemType.GOLD_DOOR:
                        case ItemType.DIAMOND_DOOR:
                        case ItemType.AMETHYST_DOOR:
                        case ItemType.REIDITE_DOOR:
                        case ItemType.WOOD_DOOR_SPIKE:
                        case ItemType.STONE_DOOR_SPIKE:
                        case ItemType.GOLD_DOOR_SPIKE:
                        case ItemType.DIAMOND_DOOR_SPIKE:
                        case ItemType.AMETHYST_DOOR_SPIKE:
                        case ItemType.REIDITE_DOOR_SPIKE:
                        case ItemType.STONE_SPIKE:
                        case ItemType.GOLD_SPIKE:
                        case ItemType.DIAMOND_SPIKE:
                        case ItemType.FURNACE:
                        case ItemType.AMETHYST_WALL:
                        case ItemType.AMETHYST_SPIKE:
                        case ItemType.REIDITE_WALL:
                        case ItemType.REIDITE_SPIKE:
                        case ItemType.BRIDGE:
                        case ItemType.ROOF:
                        case ItemType.PLOT:
                        case ItemType.WINDMILL:
                        case ItemType.STONE_EXTRACTOR:
                        case ItemType.GOLD_EXTRACTOR:
                        case ItemType.DIAMOND_EXTRACTOR:
                        case ItemType.AMETHYST_EXTRACTOR:
                        case ItemType.REIDITE_EXTRACTOR:
                        case ItemType.BED:
                        case ItemType.GARLAND:
                        case ItemType.WELL:
                        case ItemType.BREAD_OVEN:
                        case ItemType.TOTEM:
                        case ItemType.TOWER:
                            user.zombie || (user.craft.preview === e ? user.craft.preview = -2 : user.craft.preview = e);
                            break;
                        case ItemType.STONE_SWORD:
                        case ItemType.WOOD_SWORD:
                        case ItemType.GOLD_SWORD:
                        case ItemType.DIAMOND_SWORD:
                        case ItemType.AMETHYST_SWORD:
                        case ItemType.REIDITE_SWORD:
                        case ItemType.PIRATE_SWORD:
                        case ItemType.DRAGON_SWORD:
                        case ItemType.LAVA_SWORD:
                        case ItemType.CURSED_SWORD:
                        case ItemType.WOOD_BOW:
                        case ItemType.STONE_BOW:
                        case ItemType.GOLD_BOW:
                        case ItemType.DIAMOND_BOW:
                        case ItemType.AMETHYST_BOW:
                        case ItemType.REIDITE_BOW:
                        case ItemType.DRAGON_BOW:
                        case ItemType.WAND1:
                        case ItemType.WAND2:
                        case ItemType.WOOD_SPEAR:
                        case ItemType.STONE_SPEAR:
                        case ItemType.GOLD_SPEAR:
                        case ItemType.DIAMOND_SPEAR:
                        case ItemType.AMETHYST_SPEAR:
                        case ItemType.DRAGON_SPEAR:
                        case ItemType.LAVA_SPEAR:
                        case ItemType.REIDITE_SPEAR:
                        case ItemType.CRAB_SPEAR:
                            if (!user.zombie)
                                user.craft.preview = -2,
                                (i = world.fast_units[user.id]) && i.right === e ? fI([5, ItemType.HAND]) : (user.weapon.wait = !0,
                                fI([5, e]));
                            break;
                        case ItemType.STONE_PICK:
                        case ItemType.WOOD_PICK:
                        case ItemType.GOLD_PICK:
                        case ItemType.DIAMOND_PICK:
                        case ItemType.STONE_HAMMER:
                        case ItemType.GOLD_HAMMER:
                        case ItemType.DIAMOND_HAMMER:
                        case ItemType.BOOK:
                        case ItemType.AMETHYST_HAMMER:
                        case ItemType.REIDITE_HAMMER:
                        case ItemType.AMETHYST_PICK:
                        case ItemType.REIDITE_PICK:
                        case ItemType.SUPER_HAMMER:
                        case ItemType.STONE_SHOVEL:
                        case ItemType.GOLD_SHOVEL:
                        case ItemType.DIAMOND_SHOVEL:
                        case ItemType.AMETHYST_SHOVEL:
                        case ItemType.REIDITE_SHOVEL:
                        case ItemType.WRENCH:
                        case ItemType.GOLD_WRENCH:
                        case ItemType.MACHETE:
                        case ItemType.PITCHFORK:
                        case ItemType.GOLD_PITCHFORK:
                        case ItemType.YUSUKEDAO_ITEM1:
                        case ItemType.YUSUKEDAO_ITEM2:
                        case ItemType.SADDLE:
                        case ItemType.WATERING_CAN_FULL:
                        case ItemType.WOOD_SHIELD:
                        case ItemType.STONE_SHIELD:
                        case ItemType.GOLD_SHIELD:
                        case ItemType.DIAMOND_SHIELD:
                        case ItemType.AMETHYST_SHIELD:
                        case ItemType.REIDITE_SHIELD:
                            if (!user.zombie)
                                user.craft.preview = -2,
                                (i = world.fast_units[user.id]) && i.right === e ? fI([5, ItemType.HAND]) : fI([5, e]);
                            break;
                        case ItemType.BOAT:
                        case ItemType.SLED:
                        case ItemType.BOAR:
                        case ItemType.BABY_MAMMOTH:
                        case ItemType.CRAB_BOSS:
                        case ItemType.BABY_DRAGON:
                        case ItemType.BABY_LAVA:
                        case ItemType.HAWK:
                        case ItemType.PLANE:
                        case ItemType.NIMBUS:
                            if (!user.zombie) {
                                user.craft.preview = -2;
                                var i = world.fast_units[user.id];
                                fI([5, e])
                            }
                            break;
                        case ItemType.CROWN_GREEN:
                        case ItemType.CROWN_ORANGE:
                        case ItemType.CROWN_BLUE:
                        case ItemType.WOOD_HELMET:
                        case ItemType.STONE_HELMET:
                        case ItemType.GOLD_HELMET:
                        case ItemType.DIAMOND_HELMET:
                        case ItemType.AMETHYST_HELMET:
                        case ItemType.REIDITE_HELMET:
                        case ItemType.DIAMOND_PROTECTION:
                        case ItemType.AMETHYST_PROTECTION:
                        case ItemType.REIDITE_PROTECTION:
                        case ItemType.DRAGON_HELMET:
                        case ItemType.LAVA_HELMET:
                        case ItemType.WITCH_HAT:
                        case ItemType.CRAB_HELMET:
                        case ItemType.SUPER_DIVING_SUIT:
                            (i = world.fast_units[user.id]) && i.clothe !== e && (user.helmet.wait = !0),
                            fI([5, e]);
                            break;
                        case ItemType.EARMUFFS:
                        case ItemType.HOOD:
                        case ItemType.PEASANT:
                        case ItemType.WINTER_PEASANT:
                        case ItemType.COAT:
                        case ItemType.CAP_SCARF:
                        case ItemType.FUR_HAT:
                        case ItemType.PILOT_HAT:
                        case ItemType.TURBAN1:
                        case ItemType.TURBAN2:
                        case ItemType.CHRISTMAS_HAT:
                        case ItemType.ELF_HAT:
                        case ItemType.WINTER_HOOD:
                        case ItemType.EXPLORER_HAT:
                        case ItemType.PIRATE_HAT:
                        case ItemType.DIVING_MASK:
                            fI([5, e])
                        }
                    }
                    ,
                    this.delete_inv = function(e) {
                        fI([6, e])
                    }
                    ,
                    this.delete_inv_ok = function(e) {
                        user.す人八ウメユそしテく.wait = !0;
                        var t = user.inv.find_item(e);
                        user.inv.delete_item(e, t),
                        user.craft.update()
                    }
                    ,
                    this.男も小フむわヘ人けや = function(e, t) {
                        fI([29, e])
                    }
                    ,
                    this.delete_one_inv = function(e, t) {
                        fI([28, e])
                    }
                    ,
                    this.delete_one_inv_ok = function(e) {
                        user.す人八ウメユそしテく.wait = !0;
                        var t = user.inv.find_item(e);
                        user.inv.decrease(e, 1, t),
                        user.craft.update()
                    }
                    ,
                    this.delete_single_inv = function(e) {
                        var t = e[1]
                          , i = e[2];
                        user.す人八ウメユそしテく.wait = !0;
                        var n = user.inv.find_item(t);
                        user.inv.decrease(t, i, n),
                        user.craft.update()
                    }
                    ,
                    this.move_units = function(e) {
                        var t = player.select.units;
                        if (0 != t.length) {
                            var i = [2]
                              , n = [];
                            N.sub_vector(e, {
                                x: 0,
                                y: 0
                            }),
                            i.push(e.x),
                            i.push(e.y);
                            for (var a = 0; a < t.length; a++)
                                n.push(t[a].oid);
                            i.push(n),
                            fI(i)
                        }
                    }
                    ,
                    this.cam_delay = 0,
                    this.last_cam = {
                        i: 0,
                        j: 0
                    },
                    this.めトん子ワふつ小三ウ = function() {
                        if (jT - this.cam_delay > CLIENT.CAM_DELAY) {
                            this.cam_delay = jT;
                            var e = user.cam
                              , t = window.Math.floor(e.x / 100)
                              , i = window.Math.floor(e.y / 100);
                            this.last_cam.i == t && this.last_cam.j == i || (this.last_cam.i = t,
                            this.last_cam.j = i)
                        }
                    }
                    ,
                    this.ping_delay = 0,
                    this.try_ping = function() {
                        jT - this.ping_delay > 2e3 && (this.ping_delay = jT,
                        this.ping())
                    }
                    ,
                    this.join_new_team = function(e) {
                        this.new_alert(te[TEXT.JOIN_TEAM]);
                        for (var t = 1; t < e.length; t++)
                            user.team.push(e[t])
                    }
                    ,
                    this.new_member_team = function(e) {
                        this.new_alert(world.チとモやせタ月ヒけニ[e].nickname + te[TEXT.JOINED_TEAM]),
                        user.team.push(e);
                        var t = window.document.getElementById("team_box");
                        -1 != game.team_buttons_id && "inline-block" == t.style.display && game.team_buttons[game.team_buttons_id].action()
                    }
                    ,
                    this.destroy_team = function() {
                        this.new_alert(te[TEXT.TEAM_DESTROYED]),
                        user.totem.wait = !0,
                        user.team = [],
                        window.document.getElementById("team_box").style.display = "none"
                    }
                    ,
                    this.exclude_team = function(e) {
                        if (e == user.id)
                            this.new_alert(te[TEXT.LEFT_TEAM]),
                            user.totem.wait = !0,
                            user.team = [],
                            window.document.getElementById("team_box").style.display = "none";
                        else {
                            this.new_alert(world.チとモやせタ月ヒけニ[e].nickname + te[TEXT.LEFT_TEAM2]);
                            for (var t = 0; t < user.team.length; t++)
                                if (user.team[t] == e) {
                                    user.team.splice(t, 1);
                                    break
                                }
                            var i = window.document.getElementById("team_box");
                            -1 != game.team_buttons_id && "inline-block" == i.style.display && game.team_buttons[game.team_buttons_id].action()
                        }
                    }
                    ,
                    this.つ六ねオ男ひロタ人お = function() {
                        user.りゆわたにつシ千大先 = !1,
                        this.new_alert(te[TEXT.TOKEN]),
                        this._current_id == this.socket._current_id && (this._current_id++,
                        game.quit(UI.run),
                        this.socket.close())
                    }
                    ,
                    this.killed = function(e, t) {
                        user.りゆわたにつシ千大先 = !1;
                        var i = new window.Uint16Array(t)
                          , n = new window.Uint32Array(t);
                        user.die.howdie = ie[e][window.Math.floor(window.Math.random() * ie[e].length)],
                        user.die.score = N.simplify_number(world.チとモやせタ月ヒけニ[user.id].score),
                        user.die.bank = N.simplify_number(n[1]),
                        user.die.kill = i[1],
                        this.new_alert(te[TEXT.YOU_DEAD]),
                        this._current_id == this.socket._current_id && (this._current_id++,settings.Respawn?setTimeout(this.connect,1e3):game.quit(WT.run.bind(WT)),
                        this.socket.close())
                    }
                    ,
                    this.ping = function() {
                        fI([39]),
                        n = Date.now()
                    }
                    ,
                    this.handshake = function([t,i,n,a,I,T,o,r,d,s,h,y,R,E,m,S,c,u,p,P,w,_,f,g,l]) {
                        window.clearTimeout(this.timeout_handler),
                        sessions_alive.style.display = "none",
                        window.document.getElementById("commandMainBoxName").innerHTML = this.mode_list[this.current_mode][this.selected_server[this.current_mode]].a,
                        user.terminal._clean(),
                        window.document.getElementById("exploreForest").src = "img/forest-leaf.png",
                        window.document.getElementById("exploreWinter").src = "img/winter-flake.png",
                        window.document.getElementById("exploreDesert").src = "img/desert-cactus.png",
                        window.document.getElementById("exploreLava").src = "img/lava-volcano.png",
                        user.gauges.cold.ed = user.gauges.cold.em,
                        user.gauges.hunger.ed = user.gauges.hunger.em,
                        user.gauges.thirst.ed = user.gauges.thirst.em,
                        user.gauges.oxygen.ed = user.gauges.oxygen.em,
                        user.gauges.warm.ed = user.gauges.warm.em,
                        user.gauges.l = 1,
                        user.gauges.c = 1,
                        user.gauges.h = 1,
                        user.gauges.t = 1,
                        user.gauges.o = 1,
                        user.gauges.wa = 1,
                        user.bigmap = !1,
                        game.info_box.display = 0,
                        user.inv.can_select = [],
                        user.inv.n = [],
                        user.inv.max = WORLD.WITHOUT_BAG,
                        user.inv.bonus = 0,
                        user.inv.bag = 0,
                        user.inv.id = -1,
                        game.show_recipe_book = 1,
                        game.show_clock = 1,
                        game.show_quest = 1,
                        game.show_market = 1,
                        user.りゆわたにつシ千大先 = !0,
                        user.inv.drag.stop(),
                        l && client.set_market(l),
                        user.craft.can_craft = [],
                        user.craft.crafting = !1,
                        user.craft.preview = -2,
                        user.craft.id = -1,
                        user.craft.力ふ六ヌセはろ力ルメ = !1,
                        user.craft.ろヤたケ下四五火カス = !1,
                        user.craft.fire = !1,
                        user.craft.ムラけレ水ヒ上くすタ = !1,
                        user.craft.timeout = new v(!1,0,1,0,1,1),
                        user.weapon.timeout = new v(!1,0,1,0,.1,1),
                        user.weapon.wait = !1,
                        user.helmet.timeout = new v(!1,0,1,0,.2,1),
                        user.helmet.wait = !1,
                        user.す人八ウメユそしテく.timeout = new v(!1,0,1,0,1,1),
                        user.す人八ウメユそしテく.wait = !1,
                        user.totem.id = -1,
                        user.totem.pid = -1,
                        user.totem.wait = !1,
                        user.totem.timeout = new v(!1,0,1,0,1 / 30,1),
                        game.minimap.marker.x = -1,
                        game.minimap.marker.y = -1,
                        game.craft_list.open = !1,
                        game.minimap.チとモやせタ月ヒけニ = [],
                        world.つせウ小り六ぬオキニ = t,
                        world.nw = c,
                        world.nh = u,
                        world.w = world.nw * world.dw,
                        world.h = world.nh * world.dh,
                        world.islands = p,
                        world.子生左上うた田五チム = P,
                        e.木サカはつ小ロク八さ(w),
                        e.new_recipes(_),
                        user.desert.tempest = f,
                        user.blizzard = 0,
                        user.winter.tempest = g,
                        world.generate_world(S),
                        world.time = I,
                        world.clock.hour = R,
                        world.clock.init = (new window.Date).getTime(),
                        game.quests.born = E,
                        world.transition = !1,
                        user.day = i,
                        game.quests.reset(),
                        user.team = T,
                        world.units[ITEMS.PLAYERS] = [],
                        world.units[ITEMS.FRUIT] = [],
                        world.units[ITEMS.WORKBENCH] = [],
                        world.units[ITEMS.FIRE] = [],
                        world.units[ITEMS.BIG_FIRE] = [],
                        world.units[ITEMS.SEED] = [],
                        world.units[ITEMS.WHEAT_SEED] = [],
                        world.units[ITEMS.PUMPKIN_SEED] = [],
                        world.units[ITEMS.TOMATO_SEED] = [],
                        world.units[ITEMS.CARROT_SEED] = [],
                        world.units[ITEMS.GARLIC_SEED] = [],
                        world.units[ITEMS.THORNBUSH_SEED] = [],
                        world.units[ITEMS.WATERMELON_SEED] = [],
                        world.units[ITEMS.ALOE_VERA_SEED] = [],
                        world.units[ITEMS.WALL] = [],
                        world.units[ITEMS.STONE_WALL] = [],
                        world.units[ITEMS.GOLD_WALL] = [],
                        world.units[ITEMS.DIAMOND_WALL] = [],
                        world.units[ITEMS.WOOD_DOOR] = [],
                        world.units[ITEMS.STONE_DOOR] = [],
                        world.units[ITEMS.GOLD_DOOR] = [],
                        world.units[ITEMS.DIAMOND_DOOR] = [],
                        world.units[ITEMS.WOOD_DOOR_SPIKE] = [],
                        world.units[ITEMS.STONE_DOOR_SPIKE] = [],
                        world.units[ITEMS.GOLD_DOOR_SPIKE] = [],
                        world.units[ITEMS.DIAMOND_DOOR_SPIKE] = [],
                        world.units[ITEMS.AMETHYST_DOOR_SPIKE] = [],
                        world.units[ITEMS.REIDITE_DOOR_SPIKE] = [],
                        world.units[ITEMS.CHEST] = [],
                        world.units[ITEMS.RESURRECTION] = [],
                        world.units[ITEMS.EMERALD_MACHINE] = [],
                        world.units[ITEMS.SPIKE] = [],
                        world.units[ITEMS.STONE_SPIKE] = [],
                        world.units[ITEMS.GOLD_SPIKE] = [],
                        world.units[ITEMS.DIAMOND_SPIKE] = [],
                        world.units[ITEMS.WOLF] = [],
                        world.units[ITEMS.BOAR] = [],
                        world.units[ITEMS.CRAB_BOSS] = [],
                        world.units[ITEMS.BABY_DRAGON] = [],
                        world.units[ITEMS.BABY_LAVA] = [],
                        world.units[ITEMS.HAWK] = [],
                        world.units[ITEMS.TREASURE_CHEST] = [],
                        world.units[ITEMS.DEAD_BOX] = [],
                        world.units[ITEMS.GIFT] = [],
                        world.units[ITEMS.CRATE] = [],
                        world.units[ITEMS.BREAD_OVEN] = [],
                        world.units[ITEMS.PIRANHA] = [],
                        world.units[ITEMS.KRAKEN] = [],
                        world.units[ITEMS.CRAB] = [],
                        world.units[ITEMS.FOX] = [],
                        world.units[ITEMS.BEAR] = [],
                        world.units[ITEMS.MAMMOTH] = [],
                        world.units[ITEMS.BABY_MAMMOTH] = [],
                        world.units[ITEMS.VULTURE] = [],
                        world.units[ITEMS.SAND_WORM] = [],
                        world.units[ITEMS.DRAGON] = [],
                        world.units[ITEMS.LAVA_DRAGON] = [],
                        world.units[ITEMS.FLAME] = [],
                        world.units[ITEMS.WHEAT_MOB] = [],
                        world.units[ITEMS.ALOE_VERA_MOB] = [],
                        world.units[ITEMS.PUMPKIN_MOB] = [],
                        world.units[ITEMS.GARLIC_MOB] = [],
                        world.units[ITEMS.THORNBUSH_MOB] = [],
                        world.units[ITEMS.RABBIT] = [],
                        world.units[ITEMS.PENGUIN] = [],
                        world.units[ITEMS.SPELL] = [],
                        world.units[ITEMS.FIREFLY] = [],
                        world.units[ITEMS.SPIDER] = [],
                        world.units[ITEMS.FURNACE] = [],
                        world.units[ITEMS.AMETHYST_WALL] = [],
                        world.units[ITEMS.AMETHYST_SPIKE] = [],
                        world.units[ITEMS.AMETHYST_DOOR] = [],
                        world.units[ITEMS.REIDITE_WALL] = [],
                        world.units[ITEMS.REIDITE_SPIKE] = [],
                        world.units[ITEMS.REIDITE_DOOR] = [],
                        world.units[ITEMS.TOTEM] = [],
                        world.units[ITEMS.WOOD_TOWER] = [],
                        world.units[ITEMS.BRIDGE] = [],
                        world.units[ITEMS.ROOF] = [],
                        world.units[ITEMS.PLOT] = [],
                        world.units[ITEMS.WINDMILL] = [],
                        world.units[ITEMS.EXTRACTOR_MACHINE_STONE] = [],
                        world.units[ITEMS.EXTRACTOR_MACHINE_GOLD] = [],
                        world.units[ITEMS.DIAMOND_EXTRACTOR] = [],
                        world.units[ITEMS.EXTRACTOR_MACHINE_AMETHYST] = [],
                        world.units[ITEMS.EXTRACTOR_MACHINE_REIDITE] = [],
                        world.units[ITEMS.GARLAND] = [],
                        world.units[ITEMS.BED] = [],
                        world.units[ITEMS.WELL] = [],
                        world.fast_units = [],
                        user.id = o,
                        VT.clear_directionnal(),
                        user.cam.change(n, r),
                        world.チとモやせタ月ヒけニ = [];
                        for (var A = 0; A < d; A++)
                            world.チとモやせタ月ヒけニ.push(new NT);
                        for (const [e,t,i,n,I,T,o,r] of a) {
                            var b = world.チとモやせタ月ヒけニ[e];
                            b.nickname = t,
                            b.level = i,
                            b.score = N.restore_number(n),
                            b.skin = I,
                            b.accessory = T,
                            b.book = o,
                            b.baglook = r,
                            b.りゆわたにつシ千大先 = !0
                        }
                        if (user.ldb.sort(),
                        world.つせウ小り六ぬオキニ === WORLD.MODE_ZOMBIES && world.チとモやせタ月ヒけニ[user.id].skin === WORLD.ZOMBIE_SKIN ? user.zombie = !0 : user.zombie = !1,
                        world.つせウ小り六ぬオキニ === WORLD.MODE_VAMPIRES && world.チとモやせタ月ヒけニ[user.id].skin === WORLD.VAMPIRE_SKIN ? user.vampire = !0 : user.vampire = !1,
                        qT.set("starve_token", user.token),
                        0 === s) {
                            user.shop.delay = 0,
                            game.quests.restore(m),
                            y[ItemType.BAG] && user.inv.update_bag_size(1, 0);
                            for (A = 0; A < y.length; A++)
                                if (y[A]) {
                                    if (A == ItemType.BAG)
                                        continue;
                                    if (A == ItemType.HAND)
                                        continue;
                                    this.gather([0, A, y[A]])
                                }
                            user.shop.open = !1
                        } else
                            world.つせウ小り六ぬオキニ === WORLD.MODE_LEGACY ? this.gather([0, ItemType.SANDWORM_JUICE, 1]) : world.つせウ小り六ぬオキニ === WORLD.MODE_VAMPIRES && (user.vampire ? this.gather([0, ItemType.ROOF, 4]) : this.gather([0, ItemType.GARLIC_SEED, 3])),
                            world.つせウ小り六ぬオキニ === WORLD.MODE_PVP || world.つせウ小り六ぬオキニ === WORLD.MODE_VAMPIRES || world.つせウ小り六ぬオキニ === WORLD.MODE_EXPERIMENTAL || world.つせウ小り六ぬオキニ === WORLD.MODE_LEGACY ? (user.shop.delay = (new window.Date).getTime(),
                            user.shop.open = !0,
                            user.shop.value = h,
                            game.shop.init()) : (user.shop.delay = 0,
                            user.shop.open = !1,
                            user.shop.value = 0);
                        user.ghost.enabled = 0,
                        user.ghost.delay = -1,
                        user.ghost.label = null,
                        user.ghost.now = -1,
                        qT.set("starve_token_id", user.token_id),
                        user.reconnect.enabled ? (user.reconnect.rotate = 0,
                        user.reconnect.enabled = !1) : UI.quit(game.run),
                        game.is_run = !0
                    }
                    ,
                    this.connect = function() {
                        client.timeout_number = 0,
                        client.connect_timeout()
                    }
                    ,
                    this.ヘツ火しウひうクヨめ = function(e) {
                        fI([201, window.MyEncoder(e)])
                    }
                    ,
                    this.captcha3 = function(e) {
                        fI([37, user.login, user.password])
                    }
                    ,
                    this.connect_timeout = async () => {
                        try {
                            var t = this.selected_server[this.current_mode]
                              , a = this.mode_list[this.current_mode][t].i
                              , I = this.mode_list[this.current_mode][t].p;
                            let T = "ws" + (this.mode_list[this.current_mode][t].ssl ? "s" : "") + "://" + a + (80 === I ? "" : `:${I}`);
                            this.socket = new window.WebSocket(T),
                            this.socket.binaryType = "arraybuffer",
                            this.socket._current_id = this._current_id,
                            this.socket.onmessage = function(t) {
                                if (this._current_id == e._current_id)
                                    if ("string" == typeof t.data) {
                                        const a = window.JSON.parse(t.data)
                                          , I = a.shift()
                                          , T = a[0];
                                        switch (I) {
                                        case 0:
                                            e.chat(a);
                                            break;
                                        case 1:
                                            e.kick(T);
                                            break;
                                        case 2:
                                            e.new_player(a);
                                            break;
                                        case 3:
                                            e.handshake(a);
                                            break;
                                        case 4:
                                            e.message(T);
                                            break;
                                        case 5:
                                            e.commands(a);
                                            break;
                                        case 6:
                                            e.木サカはつ小ロク八さ(T);
                                            break;
                                        case 7:
                                            e.session_list(a);
                                            break;
                                        case 8:
                                            e.look_inventory(a);
                                            break;
                                        case 9:
                                            i = ~~(Date.now() - n);
                                            break;
                                        case 10:
                                            e.ヘツ火しウひうクヨめ(T);
                                            break;
                                        case 11:
                                            e.captcha3()
                                        }
                                    } else {
                                        const i = new window.Uint8Array(t.data);
                                        switch (i[0]) {
                                        case 0:
                                            e.units(t.data, i, !1);
                                            break;
                                        case 1:
                                            e.units(t.data, i, !0);
                                            break;
                                        case 2:
                                            e.みツら土やり人男人イ();
                                            break;
                                        case 3:
                                            e.gather(new window.Uint16Array(t.data));
                                            break;
                                        case 4:
                                            e.old_version();
                                            break;
                                        case 5:
                                            e.full();
                                            break;
                                        case 6:
                                            e.dont_harvest();
                                            break;
                                        case 7:
                                            e.hitten(t.data);
                                            break;
                                        case 8:
                                            e.build_stop(i[1]);
                                            break;
                                        case 9:
                                            e.build_ok(i[1]);
                                            break;
                                        case 10:
                                            e.百たはとやはきセヌゆ();
                                            break;
                                        case 11:
                                            e.decrease_item(i[1], i[2]);
                                            break;
                                        case 12:
                                            e.力ふ六ヌセはろ力ルメ(i[1]);
                                            break;
                                        case 13:
                                            e.hitten_other(i);
                                            break;
                                        case 14:
                                            e.mute();
                                            break;
                                        case 15:
                                            e.いもね一よ右めすな九(i[1]);
                                            break;
                                        case 16:
                                            e.gauges(i[1], i[2], i[3], i[4], i[5], i[6], i[7]);
                                            break;
                                        case 17:
                                            e.recover_focus(t.data);
                                            break;
                                        case 18:
                                            e.empty_res();
                                            break;
                                        case 19:
                                            e.fire(i[1]);
                                            break;
                                        case 20:
                                            e.survive();
                                            break;
                                        case 21:
                                            e.leaderboard(t.data);
                                            break;
                                        case 22:
                                            e.get_time(i[1]);
                                            break;
                                        case 23:
                                            
                                            e.ネすモ生キモや先ホり(t.data);
                                            break;
                                        case 24:
                                            e.ろ五ナ小子木木ふ土ヌ(i[1]);
                                            break;
                                        case 25:
                                            e.killed(i[1], t.data);
                                            break;
                                        case 26:
                                            e.minimap(i);
                                            break;
                                        case 27:
                                            e.fail_restore();
                                            break;
                                        case 28:
                                            e.ghost(i[1]);
                                            break;
                                        case 29:
                                            e.reborn();
                                            break;
                                        case 30:
                                            e.つ六ねオ男ひロタ人お();
                                            break;
                                        case 31:
                                            e.join_new_team(i);
                                            break;
                                        case 32:
                                            e.exclude_team(i[1]);
                                            break;
                                        case 33:
                                            e.new_member_team(i[1]);
                                            break;
                                        case 34:
                                            e.destroy_team();
                                            break;
                                        case 35:
                                            e.kit_ok(i[1]);
                                            break;
                                        case 36:
                                            e.ムラけレ水ヒ上くすタ(i[1]);
                                            break;
                                        case 37:
                                            e.gauges_life(i[1], i[2]);
                                            break;
                                        case 38:
                                            e.gauges_food(i[1]);
                                            break;
                                        case 39:
                                            e.gauges_water(i[1]);
                                            break;
                                        case 40:
                                            e.get_bag();
                                            break;
                                        case 41:
                                            e.verified_account(i);
                                            break;
                                        case 42:
                                            e.succeed_quest(i[1]);
                                            break;
                                        case 43:
                                            e.fail_quest(i[1]);
                                            break;
                                        case 44:
                                            e.claimed(i[1]);
                                            break;
                                        case 45:
                                            e.recycle_ok(i[1]);
                                            break;
                                        case 46:
                                            e.recycle_stop(i[1]);
                                            break;
                                        case 47:
                                            e.ろヤたケ下四五火カス(i[1]);
                                            break;
                                        case 48:
                                            e.no_resources();
                                            break;
                                        case 50:
                                            e.decrease_item2(i[1], i[2], i[3]);
                                            break;
                                        case 51:
                                            e.blocked();
                                            break;
                                        case 52:
                                            e.delete_inv_ok(i[1]);
                                            break;
                                        case 53:
                                            e.delete_one_inv_ok(i[1]);
                                            break;
                                        case 54:
                                            e.account_ok();
                                            break;
                                        case 55:
                                            e.gauges_warm(i[1]);
                                            break;
                                        case 56:
                                            e.gauges_cold(i[1]);
                                            break;
                                        case 57:
                                            e.new_version();
                                            break;
                                        case 58:
                                            e.wrong_password();
                                            break;
                                        case 59:
                                            e.clean_inventory();
                                            break;
                                        case 60:
                                            e.hide_shop_kit();
                                            break;
                                        case 61:
                                            user.cam.forcedDelay = .2,
                                            user.cam.delay = 3;
                                            break;
                                        case 62:
                                            e.delete_single_inv(new window.Uint16Array(t.data));
                                            break;
                                        case 63:
                                            e.hide_clock();
                                            break;
                                        case 64:
                                            e.hide_recipe_book();
                                            break;
                                        case 65:
                                            e.hide_quest();
                                            break;
                                        case 66:
                                            e.hide_market();
                                            break;
                                        case 67:
                                            e.explorer_quest(i[1]);
                                            break;
                                        case 68:
                                            e.sand_tempest(i[1]);
                                            break;
                                        case 69:
                                            e.blizzard(i[1]);
                                            break;
                                        case 70:
                                            e.blizzard_status(i[1]);
                                            break;
                                        case 71:
                                            e.bandage(i[1]);
                                            break;
                                        case 100:
                                            window.blob == window.Blob && e.captcha(i)
                                        }
                                    }
                            }
                            ,
                            this.socket.onopen = function() {
                                "function eval() { [native code] }" == eval.toString() && "function toString() { [native code] }" == eval.toString.toString() && window.blob == window.Blob && window.Frames == window.frames && (this.last_join = Date.now(),
                                window.clearTimeout(e.timeout_handler),
                                e.timeout_handler = window.setTimeout(e.timeout, CLIENT.TIMEOUT_TIME))
                            }
                            ,
                            this.timelimit = Date.now(),
                            this.socket.onclose = () => {
                                sessions_alive.style.display = "none",
                                user.id = 0,
                                world.チとモやせタ月ヒけニ.length = 0,
                                UI.waiting = !1,
                                user.reconnect.enabled = !0
                            }
                        } catch (e) {}
                    }
                }
                set_market(e) {
                    game.market.items = [];
                    for (const [t,i,n,a] of e)
                        game.market.items.push([i, a, Q[n].img, Q[t].img]);
                    game.market.id.innerHTML = "";
                    for (let e = 0; e < game.market.items.length; e++) {
                        const [t,i,n,a] = game.market.items[e]
                          , I = Ie[n][0]
                          , T = Ie[a][0];
                        game.market.id.innerHTML += `<div class="ore_to_buy">\n                          <img src="${I._src ? I._src : I.src}">\n                          <input class="ore_number" id="ore_number${e}" type="number" step="${i}" value="${i}" min="${i}" max="250"/>\n                          <div class="buy_market">\n                              <div class="buy_market_number" id="buy_market_number${e}">BUY</div>\n                              <div class="price_market">\n                                  <span class="amount_price_market" id="amount_price_market${e}" >${t}</span>\n                                  <img class="img_bread" src="${T._src ? T._src : T.src}"/>\n                              </div>\n                          </div>\n                      </div>`,
                        setTimeout(( () => {
                            document.getElementById("ore_number" + e).onchange = function() {
                                document.getElementById("amount_price_market" + e).textContent = 1 === i ? document.getElementById("ore_number" + e).value * t : document.getElementById("ore_number" + e).value / i
                            }
                            ,
                            document.getElementById("buy_market_number" + e).onclick = function() {
                                client.buy_market(document.getElementById("amount_price_market" + e).textContent, e)
                            }
                        }
                        ), 16)
                    }
                    game.market.id.innerHTML += '<div id="quit_market"> QUIT</div>'
                }
                timeout() {
                    this.timeout_number++,
                    this.socket && this.socket?.readyState !== WebSocket.OPEN && "flex" !== document.getElementById("captcha_block").style.display && (this.timeout_number > CLIENT.TIMEOUT_NUMBER ? (this.new_alert(te[TEXT.YOU_CANNOT_JOIN]),
                    UI.waiting = !1,
                    user.reconnect.enabled && game.quit(UI.run)) : client.connect_timeout())
                }
                kick(e) {
                    this._current_id == this.socket._current_id && (this._current_id++,
                    this.new_alert(te[TEXT.KICKED] + e),
                    game.quit(UI.run))
                }
                mute() {
                    this.new_alert("You speak too much")
                }
                already_used_key() {
                    window.clearTimeout(this.timeout_handler),
                    this.new_alert(te[TEXT.KEY_ALREADY]),
                    UI.waiting = !1
                }
                hide_shop_kit() {
                    user.shop.open = !1
                }
                hide_recipe_book() {
                    game.show_recipe_book = 0
                }
                hide_clock() {
                    game.show_clock = 0
                }
                sand_tempest(e) {
                    user.desert.tempest = e,
                    world.dist_desert > -300 && (0 === e ? this.new_alert(te[TEXT.TEMPEST_OFF]) : this.new_alert(te[TEXT.TEMPEST_ON]))
                }
                bandage(e) {
                    user.bandage = e
                }
                look_inventory(e) {
                    for (const [t,i] of e[0]) {
                        const e = document.createElement("canvas")
                          , n = e.getContext("2d");
                        e.width = 50,
                        e.height = 50;
                        drawCtxImage(n, Ie[Q[t].img][0], 0, 0, 50, 50),
                        n.font = "15px Baloo Paaji",
                        n.strokeStyle = "black",
                        n.fillStyle = "white",
                        n.strokeText("x" + i, 0, 45),
                        n.fillText("x" + i, 0, 45),
                        document.getElementById("commandsBox").appendChild(e)
                    }
                }
                session_list(e) {
                    sessions_alive.style.display = "flex",
                    sessions_alive.innerHTML = '<button id="join_new_session">New session</button>';
                    for (let t = 0; t < e.length; t++) {
                        const [i,n,a,I] = e[t];
                        sessions_alive.insertAdjacentHTML("afterbegin", `<div class="session_alive" id="session_alive${t}">\n                          <div class="session_nickname">Name: ${i}</div>\n                          <div class="session_token" id="session_token${t}">Tok: ********</div>\n                          <div class="session_token_id" id="session_token_id${t}">TokId: ********</div>\n                      <button id="session_join${t}" class="session_join">Join</button></div>`),
                        setTimeout(( () => {
                            const e = document.getElementById("session_alive" + t)
                              , i = document.getElementById("session_token" + t)
                              , T = document.getElementById("session_token_id" + t);
                            i.onclick = function() {
                                i.textContent = "Tok: " + n
                            }
                            ;
                            for (const [t,i] of I) {
                                if (t <= 0 || i <= 0)
                                    continue;
                                const n = document.createElement("canvas")
                                  , a = n.getContext("2d");
                                n.width = 50,
                                n.height = 50,
                                drawCtxImage(a, Ie[Q[t].img][0], 0, 0, 50, 50),
                                a.font = "15px Baloo Paaji",
                                a.strokeStyle = "black",
                                a.fillStyle = "white",
                                a.strokeText("x" + i, 0, 45),
                                a.fillText("x" + i, 0, 45),
                                e.appendChild(n)
                            }
                            T.onclick = function() {
                                T.textContent = "TokId: " + a
                            }
                            ,
                            join_new_session.onclick = () => {
                                user.token = N.generate_token(CLIENT.TOKEN_LEN),
                                user.token_id = N.generate_token(CLIENT.TOKEN_LEN),
                                fI([38])
                            }
                            ,
                            document.getElementById(`session_join${t}`).onclick = () => {
                                user.token = n,
                                user.token_id = a,
                                fI([UI.nickname.input.value, user.token, user.token_id, UI.skin, UI.accessory, UI.bag, UI.book, UI.crate, UI.dead, user.login, user.password, ""])
                            }
                        }
                        ), 0)
                    }
                }
                captcha(e) {
                    const t = Date.now();
                    if (1 === e.length)
                        return void fI([UI.nickname.input.value, user.token, user.token_id, UI.skin, UI.accessory, UI.bag, UI.book, UI.crate, UI.dead, user.login, user.password, ""]);
                    const i = e[1];
                    captcha_image.src = URL.createObjectURL(new Blob([new window.Uint8Array(e.slice(2))])),
                    captcha_attempts.textContent = "Attempts available: " + i,
                    captcha_count.textContent = "The captcha expires after 10 seconds",
                    captcha_block.style.display = "flex",
                    captcha_input.focus();
                    const n = setInterval(( () => {
                        const e = window.Math.floor((window.Date.now() - t) / 1e3);
                        captcha_count.textContent = `The captcha expires after ${10 - e} second${10 - e == 1 ? "" : "s"}`,
                        e >= 10 && (clearInterval(n),
                        UI.waiting = !1,
                        captcha_block.style.display = "none")
                    }
                    ), 1e3)
                      , a = function() {
                        fI([UI.nickname.input.value, user.token, user.token_id, UI.skin, UI.accessory, UI.bag, UI.book, UI.crate, UI.dead, user.login, user.password, captcha_input.value]),
                        clearInterval(n),
                        captcha_count.textContent = "The captcha expires after 10 seconds",
                        captcha_block.style.display = "none",
                        captcha_input.value = ""
                    };
                    captcha_input.onkeydown = function() {
                        3 === captcha_input.value.length && setTimeout(a, 0)
                    }
                }
                blizzard_status(e) {
                    user.blizzard = e
                }
                blizzard(e) {
                    user.winter.tempest = e,
                    world.dist_winter > -300 && (0 === e ? this.new_alert(te[TEXT.BLIZZARD_OFF]) : this.new_alert(te[TEXT.BLIZZARD_ON]))
                }
                explorer_quest(e) {
                    0 === e ? window.document.getElementById("exploreForest").src = "img/forest-leaf-ok.png" : 1 === e ? window.document.getElementById("exploreWinter").src = "img/winter-flake-ok.png" : 2 === e ? window.document.getElementById("exploreLava").src = "img/lava-volcano-ok.png" : 3 === e && (window.document.getElementById("exploreDesert").src = "img/desert-cactus-ok.png")
                }
                hide_market() {
                    game.show_market = 0
                }
                hide_quest() {
                    game.show_quest = 0
                }
                clean_inventory() {
                    user.inv.can_select = [],
                    user.inv.n = [],
                    user.inv.id = -1,
                    user.inv.drag.stop(),
                    user.craft.can_craft = [],
                    user.craft.crafting = !1,
                    user.craft.preview = -2,
                    user.craft.id = -1,
                    user.craft.力ふ六ヌセはろ力ルメ = !1,
                    user.craft.ろヤたケ下四五火カス = !1,
                    user.craft.fire = !1,
                    user.craft.ムラけレ水ヒ上くすタ = !1,
                    user.craft.timeout = new v(!1,0,1,0,1,1)
                }
                commands([e,t,i,n]) {
                    for (var a = 0; a < arguments.length; a++)
                        "string" == typeof arguments[a] && (arguments[a] = N.escape_html(arguments[a]));
                    user.terminal.write_command(e, t, i, n)
                }
                message(e) {
                    this.new_alert(e)
                }
                wrong_password() {
                    window.clearTimeout(this.timeout_handler),
                    this.new_alert(te[TEXT.WRONG_PASSWORD]),
                    UI.waiting = !1
                }
                new_version() {
                    window.clearTimeout(this.timeout_handler),
                    this.new_alert(te[TEXT.NEW_VERSION]),
                    UI.waiting = !1
                }
                old_version() {
                    window.clearTimeout(this.timeout_handler),
                    this.new_alert(te[TEXT.OLD_VERSION]),
                    UI.waiting = !1
                }
                get_bag() {
                    user.inv.update_bag_size(1, 0),
                    game.update_inv_buttons()
                }
                verified_account(e) {
                    var t = e[1]
                      , i = world.チとモやせタ月ヒけニ[t];
                    i.skin = 0,
                    i.accessory = 0,
                    i.baglook = 0,
                    i.book = 0,
                    i.level = e[6];
                    var n = world.fast_units[t];
                    n && (n.skin = 0,
                    n.accessory = 0,
                    n.baglook = 0,
                    n.book = 0)
                }
                build_stop(e) {
                    e === ItemType.BAG ? (user.inv.update_bag_size(1, 0),
                    game.update_inv_buttons()) : this.gather([0, e, 1]),
                    user.craft.restart()
                }
                recycle_ok(e) {
                    user.auto_feed.delay = 0,
                    user.craft.do_recycle(e)
                }
                recycle_stop(e) {
                    for (var t = p[e].r, i = 0; i < t.length; i++)
                        if (user.inv.max > user.inv.can_select.length || user.inv.n[t[i][0]] > 0) {
                            var n = window.Math.floor(.8 * t[i][1]);
                            if (!n)
                                continue;
                            this.gather([0, t[i][0], n])
                        }
                    user.craft.restart()
                }
                build_ok(e) {
                    user.auto_feed.delay = 0,
                    user.craft.do_craft(e)
                }
                stop_attack() {
                    fI([46])
                }
                "土モかヘタ百テオ三力"(e) {
                    fI([3, window.Math.floor((e + a) % a * 255 / a)])
                }
                "ウヒある力ナ千ちカる"(e) {
                    fI([4, window.Math.floor((e + a) % a * 255 / a)])
                }
                "send_move"(e) {
                    if(!settings.Spectator.enabled && !settings.PathFinder.enabled)
                    fI([34, e])
                }
                "十をホソて左シ六らん"(e) {
                    fI([2, e])
                }
                "ほ十ウ川六ひふろセほ"(e) {
                    world.fast_units[user.id].text.push(e),
                    fI([0, e])
                }
            }
            var game = {
                is_run: !1
            }, VT = new class {
                constructor() {
                    this.UP = 0,
                    this.DOWN = 1,
                    this._1 = 49,
                    this._2 = 50,
                    this._3 = 51,
                    this._4 = 52,
                    this._5 = 53,
                    this.CTRL = 17,
                    this.ARROW_LEFT = 37,
                    this.ARROW_RIGHT = 39,
                    this.ARROW_TOP = 38,
                    this.ARROW_BOTTOM = 40,
                    this.SPACE = 32,
                    this.R = 82,
                    this.G = 71,
                    this.V = 86,
                    this.B = 66,
                    this.set_qwerty(),
                    this.keys = new Array(255);
                    for (let e = 0; e < 255; e++)
                        this.keys[e] = this.UP
                }
                set_azerty() {
                    this.LEFT = 81,
                    this.RIGHT = 68,
                    this.TOP = 90,
                    this.DOWN = 83
                }
                set_qwerty() {
                    this.LEFT = 65,
                    this.RIGHT = 68,
                    this.TOP = 87,
                    this.BOTTOM = 83
                }
                up(e) {
                    const t = window.Math.min(e.charCode || e.keyCode, 255);
                    this.keys[t] = this.UP
                }
                down(e) {
                    const t = window.Math.min(e.charCode || e.keyCode, 255);
                    return t === this.LEFT || t === this.ARROW_LEFT ? this.press_left() : t === this.TOP || t === this.ARROW_TOP ? this.press_top() : t === this.DOWN || t === this.ARROW_DOWN ? this.press_bottom() : t !== this.RIGHT && t !== this.ARROW_RIGHT || this.press_right(),
                    this.keys[t] = this.DOWN,
                    t
                }
                press_left() {
                    this.keys[this.RIGHT] = this.UP,
                    this.keys[this.ARROW_RIGHT] = this.UP
                }
                press_right() {
                    this.keys[this.LEFT] = this.UP,
                    this.keys[this.ARROW_LEFT] = this.UP
                }
                press_bottom() {
                    this.keys[this.TOP] = this.UP,
                    this.keys[this.ARROW_TOP] = this.UP
                }
                press_top() {
                    this.keys[this.BOTTOM] = this.UP,
                    this.keys[this.ARROW_BOTTOM] = this.UP
                }
                clear_directionnal() {
                    this.keys[this.RIGHT] = this.UP,
                    this.keys[this.ARROW_RIGHT] = this.UP,
                    this.keys[this.LEFT] = this.UP,
                    this.keys[this.ARROW_LEFT] = this.UP,
                    this.keys[this.TOP] = this.UP,
                    this.keys[this.ARROW_TOP] = this.UP,
                    this.keys[this.BOTTOM] = this.UP,
                    this.keys[this.ARROW_BOTTOM] = this.UP
                }
                is_left() {
                    return this.keys[this.LEFT] || this.keys[this.ARROW_LEFT]
                }
                is_right() {
                    return this.keys[this.RIGHT] || this.keys[this.ARROW_RIGHT]
                }
                is_top() {
                    return this.keys[this.TOP] || this.keys[this.ARROW_TOP]
                }
                is_bottom() {
                    return this.keys[this.BOTTOM] || this.keys[this.ARROW_BOTTOM]
                }
                is_ctrl() {
                    return this.keys[this.CTRL]
                }
                is_1() {
                    return this.keys[this._1]
                }
                is_2() {
                    return this.keys[this._2]
                }
                is_3() {
                    return this.keys[this._3]
                }
                is_4() {
                    return this.keys[this._4]
                }
                is_space() {
                    return this.keys[this.SPACE]
                }
                is_r() {
                    return this.keys[this.R]
                }
                is_g() {
                    return this.keys[this.G]
                }
                is_v() {
                    return this.keys[this.V]
                }
                is_b() {
                    return this.keys[this.B]
                }
            }
            , UT = new class {
                constructor() {
                    this.DOWN = 0,
                    this.UP = 1,
                    this.IDLE = 2,
                    this.IN = 0,
                    this.OUT = 1,
                    this.pos = {
                        x: 0,
                        y: 0
                    },
                    this.x_old = 0,
                    this.y_old = 0,
                    this.angle = 0,
                    this.state = this.IDLE,
                    this.dist = this.IN
                }
                down() {
                    this.state = this.DOWN
                }
                up() {
                    this.state = this.UP
                }
                update() {
                    return (this.pos.x !== this.x_old || this.pos.y !== this.y_old) && (this.x_old = this.pos.x,
                    this.y_old = this.pos.y,
                    !0)
                }
            }
            , XT = new class {
                constructor() {
                    window.addEventListener("mouseup", this.onLeftClick),
                    window.addEventListener("contextmenu", this.onRightClick),
                    window.addEventListener("resize", this.onResize)
                }
                onResize() {
                    k.width != window.innerWidth && (k.width = window.innerWidth,
                    L = k.width,
                    M = k.width / 2),
                    k.height != window.innerHeight && (k.height = window.innerHeight,
                    B = k.height,
                    Y = k.height / 2),
                    H = {
                        x: M,
                        y: Y
                    };
                    var e = k.width
                      , t = k.height;
                    G = window.Math.min(1, window.Math.max(.5, W)),
                    k.width = e * G,
                    k.height = t * G,
                    k.style.width = e + "px",
                    k.style.height = t + "px",
                    C.scale(G, G),
                    user && (user.cam.rw = e,
                    user.cam.rh = t),
                    $T.is_run ? $T.update() : UI.is_run ? UI.update() : game.is_run ? game.update() : WT.is_run && WT.update()
                }
                onRightClick(e) {
                    VT.keys[16] && client.十をホソて左シ六らん("tp $id " + Math.floor((UT.pos.x - user.cam.x) / 100) + " " + Math.floor((UT.pos.y - user.cam.y) / 100)),
                    e.preventDefault()
                }
                onLeftClick(e) {
                    switch (e.target.id) {
                    case "azerty_ing":
                        game.options.azerty();
                        break;
                    case "qwerty_ing":
                        game.options.qwerty();
                        break;
                    case "low_ing":
                        game.options.low();
                        break;
                    case "high_ing":
                        game.options.high();
                        break;
                    case "quit_opt":
                        game.options.quit();
                        break;
                    case "agree_ing":
                    case "case_agree_opt":
                        game.options.checkbox();
                        break;
                    case "quest_agree_ing":
                    case "quest_case_agree_opt":
                        game.options.quest_checkbox();
                        break;
                    case "cancel_agree_ing":
                    case "cancel_case_agree_opt":
                        game.options.cancel_checkbox();
                        break;
                    case "auto_feed_agree_ing":
                    case "auto_feed_case_agree_opt":
                        game.options.feed_checkbox();
                        break;
                    case "cancel_yes_delete":
                        game.safe_cancel.yes();
                        break;
                    case "cancel_no_delete":
                        game.safe_cancel.quit();
                        break;
                    case "cancel_case_delete":
                        game.safe_cancel.checkbox();
                        break;
                    case "quit_market":
                        game.market.quit();
                        break;
                    case "イヤンヲにねキく上日":
                        client.イヤンヲにねキく上日();
                        break;
                    case "leave":
                        client.ま田ほわサほよ六チ右();
                        break;
                    case "bbback":
                        WT.quit(UI.run);
                        break;
                    case "quit":
                        game.craft_list.home.quit();
                        break;
                    case "quitmenu":
                        game.craft_list.list.quit();
                        break;
                    case "backhome":
                        game.craft_list.list.previous();
                        break;
                    case "hatcategory":
                        game.craft_list.list.select(CATEGORY.CLOTHES);
                        break;
                    case "weaponcategory":
                        game.craft_list.list.select(CATEGORY.WEAPONS);
                        break;
                    case "toolcategory":
                        game.craft_list.list.select(CATEGORY.TOOLS);
                        break;
                    case "foodcategory":
                        game.craft_list.list.select(CATEGORY.FOODS);
                        break;
                    case "placeablecategory":
                        game.craft_list.list.select(CATEGORY.UTILS);
                        break;
                    case "constructioncategory":
                        game.craft_list.list.select(CATEGORY.BASES)
                    }
                }
            }
            , qT = new class {
                get(e) {
                    const t = window.document.cookie.match(new RegExp(e + "=[^;]*","g"));
                    return t ? t[0].slice(e.length + 1) : void 0
                }
                set(e, t, i) {
                    var n = new window.Date;
                    n.setTime(+n + 864e5 * i),
                    window.document.cookie = e + "=" + t + "; expires=" + n.toGMTString()
                }
            }
            , zT = 0, jT = 0, $T = new class {
                constructor(e, t, i) {
                    this.can = e,
                    this.ctx = t,
                    this.logo = {
                        translate: {
                            x: 0,
                            y: 0
                        },
                        style: window.document.getElementById("loading").style,
                        update: function() {
                            this.style.left = this.translate.x + "px",
                            this.style.top = window.Math.floor(this.translate.y) + "px"
                        }
                    },
                    this.logo.style.position = "absolute",
                    this.logo.style.display = "inline-block",
                    this.logo.update(),
                    this.is_run = !0,
                    this.stop = function() {
                        this.is_run = !1
                    }
                    ,
                    this.loading = {
                        total: 1
                    };
                    var n = this
                      , a = function() {}
                      , I = 0;
                    this.quit_effect = function() {
                        if (n.update(),
                        60 == ++I)
                            return n.stop(),
                            void a();
                        window.setTimeout(n.quit_effect, o)
                    }
                    ,
                    this.quit = function(e) {
                        a = e,
                        n.quit_effect()
                    }
                    ;
                    (new window.Date).getTime();
                    function T(e) {
                        return -1 !== e.indexOf("normal-つせウ小り六ぬオキニ") || -1 !== e.indexOf("player0") ? 1 : -1 !== e.indexOf("day-bag") || -1 !== e.indexOf("night-bag") || -1 !== e.indexOf("day-book") || -1 !== e.indexOf("night-book") || -1 !== e.indexOf("day-player") || -1 !== e.indexOf("night-player") || -1 !== e.indexOf("day-accessory") || -1 !== e.indexOf("night-accessory") || -1 !== e.indexOf("day-crate") || -1 !== e.indexOf("night-crate") || -1 !== e.indexOf("day-skin") || -1 !== e.indexOf("night-skin") || -1 !== e.indexOf("day-river") || -1 !== e.indexOf("night-river") || -1 !== e.indexOf("day-river") || -1 !== e.indexOf("night-river") || -1 !== e.indexOf("day-rock") || -1 !== e.indexOf("night-rock") || -1 !== e.indexOf("day-flower") || -1 !== e.indexOf("night-flower") || -1 !== e.indexOf("day-leaf") || -1 !== e.indexOf("night-leaf") || -1 !== e.indexOf("day-herb") || -1 !== e.indexOf("night-herb") || -1 !== e.indexOf("day-shell") || -1 !== e.indexOf("night-shell") || -1 !== e.indexOf("day-hand-skin") || -1 !== e.indexOf("night-hand-skin") || -1 !== e.indexOf("bignight") || -1 !== e.indexOf("bigday") || -1 !== e.indexOf("bigzday") || -1 !== e.indexOf("bigznight") || -1 !== e.indexOf("tutorial-box") || -1 !== e.indexOf("-leaderboard-") || -1 !== e.indexOf("-lead-") || -1 !== e.indexOf("day-lava-") || -1 !== e.indexOf("night-lava-") || -1 !== e.indexOf("-click.png") || -1 !== e.indexOf("-in.png") || -1 !== e.indexOf("-fog") || -1 !== e.indexOf("-lava") || -1 !== e.indexOf("pebblecompo") || -1 !== e.indexOf("avatar-player") ? 0 : 1
                    }
                    Object.keys(P).length;
                    for (var r in P)
                        0 === T(P[r]) && 0;
                    var d = function() {
                        return 0 !== this.isLoaded ? this.isLoaded : (this.isLoaded = 2,
                        this.src = this._src,
                        0)
                    }
                      , s = function(e) {
                        this.isLoaded = 1
                    }
                      , h = 0
                      , y = function() {
                        let e = async () => {
                            await client.fetch_server_list(),
                            function() {
                                if (1 !== h) {
                                    h = 1;
                                    var e = N.getURLData("server");
                                    null !== e && (client.privateServer = 1,
                                    client.らいね大ちヌに千にそ = [{
                                        nu: 0,
                                        m: 100,
                                        i: "server" + e + ".starver.io",
                                        p: 443,
                                        a: "Private Server " + e,
                                        ssl: !0
                                    }]),
                                    client.ネク三ソろん山えもけ(),
                                    window.setTimeout(i, 100)
                                }
                            }()
                        }
                        ;
                        window.document.fonts && window.document.fonts.check ? window.document.fonts.check("1em Baloo Paaji") ? window.setTimeout(e, 100) : window.setTimeout(y, 100) : window.setTimeout(e, 1e3)
                    }
                      , R = function() {
                        var e = this.src
                          , t = 0 === T(e) ? 1e4 : 2e3;
                        window.setTimeout((function() {
                            for (var t in ae)
                                if (-1 !== e.indexOf(ae[t])) {
                                    P[t] = new Image,
                                    P[t].onload = s,
                                    P[t].onerror = R,
                                    P[t].src = e;
                                    break
                                }
                        }
                        ), t)
                    };
                    function E(e) {
                        for (var t in P) {
                            var i = "img/" + P[t] + ".png";
                            "string" == typeof i && (T(i) === e && (P[t] = new Image,
                            P[t].isLoaded = 0,
                            P[t].onload = s,
                            P[t].onerror = R,
                            P[t].tryLoad = d,
                            "https:" !== window.location.protocol ? P[t]._src = i : P[t]._src = window.location.href + i))
                        }
                    }
                    E(1),
                    E(0),
                    ft(1, "l", 20, "#000000"),
                    y(),
                    xn(),
                    this.update = function() {
                        this.logo.translate.x = (L - 500) / 2,
                        this.logo.translate.y = (B - 150) / 2;
                        var e = 2500 / (60 - I + 1) - 24;
                        this.logo.translate.y -= e,
                        this.logo.update()
                    }
                    ,
                    this.logo.update(),
                    this.draw = function() {
                        Un(),
                        this.update()
                    }
                }
            }
            (k,C,(function() {
                Vn(),
                game = new LT(k,C),
                (UI = new CT(k,C)).login_after(),
                WT = new BT(k,C),
                world = new DT,
                user = new kT,
                window.UI = UI,
                window.game = game,
                $T.quit((function() {
                    $T.logo.style.display = "none",
                    UI.run()
                }
                ))
            }
            ));
            const ZT = function(e) {
                window.requestAnimationFrame(ZT);
                const t = performance.now();
                for (; r.length > 0 && r[0] <= t - 1e3; )
                    r.shift();
                if (r.push(t),
                performance.now() - d >= 1e3 && (d = performance.now(),
                window.fpsdata = r.length - 1),
                zT = (e - jT) / 1e3,
                jT = e,
                zT = zT > 1 ? 1 : zT,
                C.clearRect(0, 0, L, B),
                game.is_run ? game.draw() : $T.is_run ? $T.draw() : UI.is_run ? UI.draw() : WT.is_run && WT.draw(),
                user && world?.fast_units && QT.startX) {
                    const e = world.units[0].filter((e => e.x >= QT.startX - 2 && e.x <= QT.endX + 2 && e.y >= QT.startY - 2 && e.y <= QT.endY + 2 || e.x >= QT.endX - 2 && e.x <= QT.startX + 2 && e.y >= QT.endY - 2 && e.y <= QT.startY + 2 || e.x >= QT.endX - 2 && e.x <= QT.startX + 2 && e.y <= QT.endY - 2 && e.y >= QT.startY + 2 || e.x >= QT.startX - 2 && e.x <= QT.endX + 2 && e.y <= QT.startY - 2 && e.y >= QT.endY + 2)).length;
                    C.save(),
                    C.font = "25px Baloo Paaji",
                    C.fillStyle = "#0066cc",
                    C.strokeStyle = "#0066cc",
                    C.lineWidth = 3,
                    C.strokeRect(QT.startX + user.cam.x, QT.startY + user.cam.y, QT.endX - QT.startX, QT.endY - QT.startY),
                    C.globalAlpha = .3,
                    C.fillRect(QT.startX + user.cam.x, QT.startY + user.cam.y, QT.endX - QT.startX, QT.endY - QT.startY),
                    C.fillStyle = "white",
                    C.globalAlpha = 1,
                    C.strokeText(e, QT.startX + user.cam.x, QT.startY + user.cam.y),
                    C.fillText(e, QT.startX + user.cam.x, QT.startY + user.cam.y),
                    C.restore()
                }
            };
            window.onbeforeunload = function() {
                if (game.is_run)
                    return ""
            }
            ,
            XT.onResize(),
            ZT(0);
            var JT = 0;
            window.onUserLogin = function() {
                JT = 1
            }
            ;
            const QT = {
                sx: 0,
                sy: 0,
                ex: 0,
                ey: 0
            }
              , eo = {}
              , to = ["ControlLeft"];
            ItemType.REIDITE_SPIKE,
            ItemType.AMETHYST_SPIKE,
            ItemType.DIAMOND_SPIKE,
            ItemType.GOLD_SPIKE,
            ItemType.STONE_SPIKE,
            ItemType.WOOD_SPIKE,
            ItemType.WOOD_WALL;
            window.addEventListener("keydown", (e => {
                eo[e.code] = !0
            }
            )),
            window.addEventListener("keyup", (e => {
                eo[e.code] = void 0
            }
            )),
            window.addEventListener("contextmenu", (e => {
                const t = world.fast_units[user.id];
                if (mapX = e.clientX - user.cam.x,
                mapY = e.clientY - user.cam.y,
                !to.map((e => eo[e])).includes(void 0)) {
                    if (!t)
                        return;
                    void 0 === QT.startX && void 0 === QT.startY ? (QT.startX = mapX,
                    QT.startY = mapY) : void 0 === QT.endX && void 0 === QT.endY ? (QT.endX = mapX,
                    QT.endY = mapY) : (QT.startX = void 0,
                    QT.startY = void 0,
                    QT.endX = void 0,
                    QT.endY = void 0)
                }
            }
            ))
        }()),
        document.title = "Nostarve.xyz"
    } catch (a) {}
}
gameCode();
hack();
